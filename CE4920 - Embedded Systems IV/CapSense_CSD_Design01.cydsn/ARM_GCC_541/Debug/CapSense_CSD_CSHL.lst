ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_sensorBaseline,14,4
  20              		.comm	CapSense_CSD_sensorBaselineLow,7,4
  21              		.comm	CapSense_CSD_sensorSignal,14,4
  22              		.comm	CapSense_CSD_sensorOnMask,1,4
  23              		.comm	CapSense_CSD_lowBaselineResetCnt,7,4
  24              		.global	CapSense_CSD_fingerThreshold
  25              		.section	.rodata
  26              		.align	2
  27              		.type	CapSense_CSD_fingerThreshold, %object
  28              		.size	CapSense_CSD_fingerThreshold, 6
  29              	CapSense_CSD_fingerThreshold:
  30 0000 5400     		.short	84
  31 0002 7C00     		.short	124
  32 0004 4200     		.short	66
  33              		.global	CapSense_CSD_noiseThreshold
  34 0006 0000     		.align	2
  35              		.type	CapSense_CSD_noiseThreshold, %object
  36              		.size	CapSense_CSD_noiseThreshold, 6
  37              	CapSense_CSD_noiseThreshold:
  38 0008 2A00     		.short	42
  39 000a 2D00     		.short	45
  40 000c 2100     		.short	33
  41              		.global	CapSense_CSD_hysteresis
  42 000e 0000     		.align	2
  43              		.type	CapSense_CSD_hysteresis, %object
  44              		.size	CapSense_CSD_hysteresis, 6
  45              	CapSense_CSD_hysteresis:
  46 0010 0000     		.short	0
  47 0012 1200     		.short	18
  48 0014 0900     		.short	9
  49              		.global	CapSense_CSD_debounce
  50 0016 0000     		.align	2
  51              		.type	CapSense_CSD_debounce, %object
  52              		.size	CapSense_CSD_debounce, 3
  53              	CapSense_CSD_debounce:
  54 0018 01       		.byte	1
  55 0019 05       		.byte	5
  56 001a 05       		.byte	5
  57              		.global	CapSense_CSD_debounceCounter
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 2


  58              		.bss
  59              		.align	2
  60              		.type	CapSense_CSD_debounceCounter, %object
  61              		.size	CapSense_CSD_debounceCounter, 3
  62              	CapSense_CSD_debounceCounter:
  63 0000 000000   		.space	3
  64              		.global	CapSense_CSD_rawDataIndex
  65              		.section	.rodata
  66 001b 00       		.align	2
  67              		.type	CapSense_CSD_rawDataIndex, %object
  68              		.size	CapSense_CSD_rawDataIndex, 3
  69              	CapSense_CSD_rawDataIndex:
  70 001c 02       		.byte	2
  71 001d 00       		.byte	0
  72 001e 01       		.byte	1
  73              		.global	CapSense_CSD_numberOfSensors
  74 001f 00       		.align	2
  75              		.type	CapSense_CSD_numberOfSensors, %object
  76              		.size	CapSense_CSD_numberOfSensors, 3
  77              	CapSense_CSD_numberOfSensors:
  78 0020 05       		.byte	5
  79 0021 01       		.byte	1
  80 0022 01       		.byte	1
  81              		.global	CapSense_CSD_centroidMult
  82 0023 00       		.align	2
  83              		.type	CapSense_CSD_centroidMult, %object
  84              		.size	CapSense_CSD_centroidMult, 2
  85              	CapSense_CSD_centroidMult:
  86 0024 0019     		.short	6400
  87              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  88              		.align	2
  89              		.global	CapSense_CSD_BaseInit
  90              		.thumb
  91              		.thumb_func
  92              		.type	CapSense_CSD_BaseInit, %function
  93              	CapSense_CSD_BaseInit:
  94              	.LFB0:
  95              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 3


  20:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     84u, 124u, 66u, 
  50:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     42u, 45u, 33u, 
  54:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 18u, 9u, 
  58:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 5u, 5u, 
  62:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     2u, /* LinearSlider0__LS */
  70:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  71:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  72:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  74:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  75:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  76:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, /* LinearSlider0__LS */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 4


  77:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
  78:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  79:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_centroidMult[] = {
  83:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     6400u, 
  84:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  87:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  88:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  91:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  92:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  93:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  94:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  95:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  96:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  97:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  98:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  99:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
 100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  96              		.loc 1 130 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 5


  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 85B0     		sub	sp, sp, #20
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 108 0006 0346     		mov	r3, r0
 109 0008 FB71     		strb	r3, [r7, #7]
 131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 110              		.loc 1 133 0
 111 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 112 000c 114A     		ldr	r2, .L4
 113 000e D35C     		ldrb	r3, [r2, r3]
 114 0010 FB73     		strb	r3, [r7, #15]
 134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 115              		.loc 1 147 0
 116 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 118 0016 1049     		ldr	r1, .L4+4
 119 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 120 001c 0F4A     		ldr	r2, .L4+8
 121 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 122              		.loc 1 148 0
 123 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 0024 0E4A     		ldr	r2, .L4+12
 125 0026 0021     		movs	r1, #0
 126 0028 D154     		strb	r1, [r2, r3]
 149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 127              		.loc 1 149 0
 128 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 129 002c 0D4A     		ldr	r2, .L4+16
 130 002e 0021     		movs	r1, #0
 131 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(widget > CapSense_CSD_END_OF_TOUCH_PAD_INDEX)
 132              		.loc 1 151 0
 133 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 134 0036 002B     		cmp	r3, #0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 6


 135 0038 06D0     		beq	.L3
 152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSens
 136              		.loc 1 153 0
 137 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 138 003c 013B     		subs	r3, r3, #1
 139 003e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 140 0040 0949     		ldr	r1, .L4+20
 141 0042 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 142 0044 094A     		ldr	r2, .L4+24
 143 0046 D154     		strb	r1, [r2, r3]
 144              	.L3:
 154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 145              		.loc 1 181 0
 146 0048 00BF     		nop
 147 004a 1437     		adds	r7, r7, #20
 148              		.cfi_def_cfa_offset 4
 149 004c BD46     		mov	sp, r7
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 004e 80BC     		pop	{r7}
 153              		.cfi_restore 7
 154              		.cfi_def_cfa_offset 0
 155 0050 7047     		bx	lr
 156              	.L5:
 157 0052 00BF     		.align	2
 158              	.L4:
 159 0054 00000000 		.word	CapSense_CSD_widgetNumber
 160 0058 00000000 		.word	CapSense_CSD_sensorRaw
 161 005c 00000000 		.word	CapSense_CSD_sensorBaseline
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 7


 162 0060 00000000 		.word	CapSense_CSD_sensorBaselineLow
 163 0064 00000000 		.word	CapSense_CSD_sensorSignal
 164 0068 00000000 		.word	CapSense_CSD_debounce
 165 006c 00000000 		.word	CapSense_CSD_debounceCounter
 166              		.cfi_endproc
 167              	.LFE0:
 168              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 169              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 170              		.align	2
 171              		.global	CapSense_CSD_InitializeSensorBaseline
 172              		.thumb
 173              		.thumb_func
 174              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 175              	CapSense_CSD_InitializeSensorBaseline:
 176              	.LFB1:
 182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 177              		.loc 1 207 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 0346     		mov	r3, r0
 190 0008 FB71     		strb	r3, [r7, #7]
 208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 8


 191              		.loc 1 209 0
 192 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 193 000c 1846     		mov	r0, r3
 194 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 195              		.loc 1 210 0
 196 0012 00BF     		nop
 197              	.L7:
 198              		.loc 1 210 0 is_stmt 0 discriminator 1
 199 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 200 0018 0346     		mov	r3, r0
 201 001a 002B     		cmp	r3, #0
 202 001c FAD1     		bne	.L7
 211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 203              		.loc 1 217 0 is_stmt 1
 204 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 0020 1846     		mov	r0, r3
 206 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 207              		.loc 1 234 0
 208 0026 00BF     		nop
 209 0028 0837     		adds	r7, r7, #8
 210              		.cfi_def_cfa_offset 8
 211 002a BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 002c 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE1:
 217              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 218 002e 00BF     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 219              		.align	2
 220              		.global	CapSense_CSD_InitializeAllBaselines
 221              		.thumb
 222              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 9


 223              		.type	CapSense_CSD_InitializeAllBaselines, %function
 224              	CapSense_CSD_InitializeAllBaselines:
 225              	.LFB2:
 235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 226              		.loc 1 259 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 80B5     		push	{r7, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 82B0     		sub	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 238              		.loc 1 263 0
 239 0006 0023     		movs	r3, #0
 240 0008 FB71     		strb	r3, [r7, #7]
 241 000a 06E0     		b	.L9
 242              	.L10:
 264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 243              		.loc 1 265 0 discriminator 3
 244 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 245 000e 1846     		mov	r0, r3
 246 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 247              		.loc 1 263 0 discriminator 3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 10


 248 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 249 0016 0133     		adds	r3, r3, #1
 250 0018 FB71     		strb	r3, [r7, #7]
 251              	.L9:
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 252              		.loc 1 263 0 is_stmt 0 discriminator 1
 253 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 254 001c 062B     		cmp	r3, #6
 255 001e F5D9     		bls	.L10
 266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 256              		.loc 1 267 0 is_stmt 1
 257 0020 00BF     		nop
 258 0022 0837     		adds	r7, r7, #8
 259              		.cfi_def_cfa_offset 8
 260 0024 BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 0026 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE2:
 266              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 267              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 268              		.align	2
 269              		.global	CapSense_CSD_InitializeEnabledBaselines
 270              		.thumb
 271              		.thumb_func
 272              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 273              	CapSense_CSD_InitializeEnabledBaselines:
 274              	.LFB3:
 268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 275              		.loc 1 292 0
 276              		.cfi_startproc
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 11


 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 287              		.loc 1 297 0
 288 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 289              		.loc 1 298 0
 290 000a 00BF     		nop
 291              	.L12:
 292              		.loc 1 298 0 is_stmt 0 discriminator 1
 293 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 294 0010 0346     		mov	r3, r0
 295 0012 002B     		cmp	r3, #0
 296 0014 FAD1     		bne	.L12
 299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 297              		.loc 1 303 0 is_stmt 1
 298 0016 0023     		movs	r3, #0
 299 0018 FB71     		strb	r3, [r7, #7]
 300 001a 1DE0     		b	.L13
 301              	.L15:
 304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 302              		.loc 1 305 0
 303 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 304 001e DB08     		lsrs	r3, r3, #3
 305 0020 BB71     		strb	r3, [r7, #6]
 306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 306              		.loc 1 306 0
 307 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 308 0024 03F00703 		and	r3, r3, #7
 309 0028 0122     		movs	r2, #1
 310 002a 02FA03F3 		lsl	r3, r2, r3
 311 002e 7B71     		strb	r3, [r7, #5]
 307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 312              		.loc 1 309 0
 313 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 314 0032 0D4A     		ldr	r2, .L16
 315 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 316 0036 7B79     		ldrb	r3, [r7, #5]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 12


 317 0038 1340     		ands	r3, r3, r2
 318 003a DBB2     		uxtb	r3, r3
 319 003c 002B     		cmp	r3, #0
 320 003e 04D1     		bne	.L14
 310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 321              		.loc 1 311 0
 322 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 323 0042 0A4A     		ldr	r2, .L16+4
 324 0044 0021     		movs	r1, #0
 325 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 326              	.L14:
 312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 327              		.loc 1 315 0 discriminator 2
 328 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 004c 1846     		mov	r0, r3
 330 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 331              		.loc 1 303 0 discriminator 2
 332 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 333 0054 0133     		adds	r3, r3, #1
 334 0056 FB71     		strb	r3, [r7, #7]
 335              	.L13:
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 336              		.loc 1 303 0 is_stmt 0 discriminator 1
 337 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 338 005a 062B     		cmp	r3, #6
 339 005c DED9     		bls	.L15
 316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 340              		.loc 1 317 0 is_stmt 1
 341 005e 00BF     		nop
 342 0060 0837     		adds	r7, r7, #8
 343              		.cfi_def_cfa_offset 8
 344 0062 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0064 80BD     		pop	{r7, pc}
 348              	.L17:
 349 0066 00BF     		.align	2
 350              	.L16:
 351 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 352 006c 00000000 		.word	CapSense_CSD_sensorRaw
 353              		.cfi_endproc
 354              	.LFE3:
 355              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 356              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 357              		.align	2
 358              		.global	CapSense_CSD_UpdateSensorBaseline
 359              		.thumb
 360              		.thumb_func
 361              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 362              	CapSense_CSD_UpdateSensorBaseline:
 363              	.LFB4:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 13


 318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 364              		.loc 1 359 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 24
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 86B0     		sub	sp, sp, #24
 373              		.cfi_def_cfa_offset 32
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 0346     		mov	r3, r0
 377 0008 FB71     		strb	r3, [r7, #7]
 360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 14


 361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 378              		.loc 1 363 0
 379 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 380 000c 454A     		ldr	r2, .L28
 381 000e D35C     		ldrb	r3, [r2, r3]
 382 0010 7B75     		strb	r3, [r7, #21]
 364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 383              		.loc 1 364 0
 384 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 385 0014 444A     		ldr	r2, .L28+4
 386 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 387 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 388              		.loc 1 372 0
 389 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 001e 434A     		ldr	r2, .L28+8
 391 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 392 0024 3B82     		strh	r3, [r7, #16]	@ movhi
 373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 15


 403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 393              		.loc 1 419 0
 394 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 395 0028 414A     		ldr	r2, .L28+12
 396 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 397 002e 3A8A     		ldrh	r2, [r7, #16]
 398 0030 9A42     		cmp	r2, r3
 399 0032 09D3     		bcc	.L19
 420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 400              		.loc 1 421 0
 401 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 0036 3E4A     		ldr	r2, .L28+12
 403 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 404 003c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 405 003e D31A     		subs	r3, r2, r3
 406 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 407              		.loc 1 422 0
 408 0042 0123     		movs	r3, #1
 409 0044 7B75     		strb	r3, [r7, #21]
 410 0046 08E0     		b	.L20
 411              	.L19:
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 412              		.loc 1 426 0
 413 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 414 004a 394A     		ldr	r2, .L28+12
 415 004c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 416 0050 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 417 0052 D31A     		subs	r3, r2, r3
 418 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 419              		.loc 1 427 0
 420 0056 0023     		movs	r3, #0
 421 0058 7B75     		strb	r3, [r7, #21]
 422              	.L20:
 428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 16


 430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 423              		.loc 1 430 0
 424 005a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 425 005c 002B     		cmp	r3, #0
 426 005e 18D1     		bne	.L21
 427              		.loc 1 430 0 is_stmt 0 discriminator 1
 428 0060 FB8A     		ldrh	r3, [r7, #22]
 429 0062 142B     		cmp	r3, #20
 430 0064 15D9     		bls	.L21
 431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 431              		.loc 1 432 0 is_stmt 1
 432 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 0068 324A     		ldr	r2, .L28+16
 434 006a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 435 006c 042B     		cmp	r3, #4
 436 006e 08D9     		bls	.L22
 433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 437              		.loc 1 434 0
 438 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 439 0072 1846     		mov	r0, r3
 440 0074 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 441              		.loc 1 435 0
 442 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 443 007a 2E4A     		ldr	r2, .L28+16
 444 007c 0021     		movs	r1, #0
 445 007e D154     		strb	r1, [r2, r3]
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 446              		.loc 1 432 0
 447 0080 3AE0     		b	.L24
 448              	.L22:
 436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 449              		.loc 1 439 0
 450 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 451 0084 2B4A     		ldr	r2, .L28+16
 452 0086 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 453 0088 0132     		adds	r2, r2, #1
 454 008a D1B2     		uxtb	r1, r2
 455 008c 294A     		ldr	r2, .L28+16
 456 008e D154     		strb	r1, [r2, r3]
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 457              		.loc 1 432 0
 458 0090 32E0     		b	.L24
 459              	.L21:
 440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 460              		.loc 1 446 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 17


 461 0092 FA8A     		ldrh	r2, [r7, #22]
 462 0094 7B8A     		ldrh	r3, [r7, #18]
 463 0096 9A42     		cmp	r2, r3
 464 0098 05D9     		bls	.L25
 465              		.loc 1 446 0 is_stmt 0 discriminator 1
 466 009a FB8A     		ldrh	r3, [r7, #22]
 467 009c 132B     		cmp	r3, #19
 468 009e 2BD8     		bhi	.L24
 447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 469              		.loc 1 448 0 is_stmt 1
 470 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 471 00a2 002B     		cmp	r3, #0
 472 00a4 28D1     		bne	.L24
 473              	.L25:
 449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 474              		.loc 1 452 0
 475 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 476 00a8 214A     		ldr	r2, .L28+12
 477 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 478 00ae 1B02     		lsls	r3, r3, #8
 479 00b0 FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 480              		.loc 1 453 0
 481 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 482 00b4 204A     		ldr	r2, .L28+20
 483 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 484 00b8 1A46     		mov	r2, r3
 485 00ba FB68     		ldr	r3, [r7, #12]
 486 00bc 1343     		orrs	r3, r3, r2
 487 00be FB60     		str	r3, [r7, #12]
 454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 488              		.loc 1 456 0
 489 00c0 3B8A     		ldrh	r3, [r7, #16]
 490 00c2 FA68     		ldr	r2, [r7, #12]
 491 00c4 1344     		add	r3, r3, r2
 492 00c6 FB60     		str	r3, [r7, #12]
 457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 493              		.loc 1 459 0
 494 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 495 00ca 194A     		ldr	r2, .L28+12
 496 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 497 00d0 1A46     		mov	r2, r3
 498 00d2 FB68     		ldr	r3, [r7, #12]
 499 00d4 9B1A     		subs	r3, r3, r2
 500 00d6 FB60     		str	r3, [r7, #12]
 460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 501              		.loc 1 462 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 18


 502 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 503 00da FA68     		ldr	r2, [r7, #12]
 504 00dc 120A     		lsrs	r2, r2, #8
 505 00de 91B2     		uxth	r1, r2
 506 00e0 134A     		ldr	r2, .L28+12
 507 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 508              		.loc 1 463 0
 509 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 00e8 FA68     		ldr	r2, [r7, #12]
 511 00ea D1B2     		uxtb	r1, r2
 512 00ec 124A     		ldr	r2, .L28+20
 513 00ee D154     		strb	r1, [r2, r3]
 464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 514              		.loc 1 465 0
 515 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 516 00f2 104A     		ldr	r2, .L28+16
 517 00f4 0021     		movs	r1, #0
 518 00f6 D154     		strb	r1, [r2, r3]
 519              	.L24:
 466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 520              		.loc 1 472 0
 521 00f8 FA8A     		ldrh	r2, [r7, #22]
 522 00fa 7B8A     		ldrh	r3, [r7, #18]
 523 00fc 9A42     		cmp	r2, r3
 524 00fe 08D9     		bls	.L26
 525              		.loc 1 472 0 is_stmt 0 discriminator 1
 526 0100 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 527 0102 002B     		cmp	r3, #0
 528 0104 05D0     		beq	.L26
 473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 529              		.loc 1 485 0 is_stmt 1
 530 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 531 0108 0C49     		ldr	r1, .L28+24
 532 010a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 533 010c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 534 0110 04E0     		b	.L27
 535              	.L26:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 19


 486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 536              		.loc 1 491 0
 537 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 538 0114 094A     		ldr	r2, .L28+24
 539 0116 0021     		movs	r1, #0
 540 0118 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 541              	.L27:
 492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 542              		.loc 1 498 0
 543 011c 00BF     		nop
 544 011e 1837     		adds	r7, r7, #24
 545              		.cfi_def_cfa_offset 8
 546 0120 BD46     		mov	sp, r7
 547              		.cfi_def_cfa_register 13
 548              		@ sp needed
 549 0122 80BD     		pop	{r7, pc}
 550              	.L29:
 551              		.align	2
 552              	.L28:
 553 0124 00000000 		.word	CapSense_CSD_widgetNumber
 554 0128 00000000 		.word	CapSense_CSD_noiseThreshold
 555 012c 00000000 		.word	CapSense_CSD_sensorRaw
 556 0130 00000000 		.word	CapSense_CSD_sensorBaseline
 557 0134 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 558 0138 00000000 		.word	CapSense_CSD_sensorBaselineLow
 559 013c 00000000 		.word	CapSense_CSD_sensorSignal
 560              		.cfi_endproc
 561              	.LFE4:
 562              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 563              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 564              		.align	2
 565              		.global	CapSense_CSD_UpdateEnabledBaselines
 566              		.thumb
 567              		.thumb_func
 568              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 569              	CapSense_CSD_UpdateEnabledBaselines:
 570              	.LFB5:
 499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 20


 508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 571              		.loc 1 532 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 8
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 82B0     		sub	sp, sp, #8
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 583              		.loc 1 537 0
 584 0006 0023     		movs	r3, #0
 585 0008 FB71     		strb	r3, [r7, #7]
 586 000a 18E0     		b	.L31
 587              	.L33:
 538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 588              		.loc 1 539 0
 589 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 590 000e DB08     		lsrs	r3, r3, #3
 591 0010 BB71     		strb	r3, [r7, #6]
 540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 592              		.loc 1 540 0
 593 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 594 0014 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 21


 595 0018 0122     		movs	r2, #1
 596 001a 02FA03F3 		lsl	r3, r2, r3
 597 001e 7B71     		strb	r3, [r7, #5]
 541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 598              		.loc 1 541 0
 599 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 600 0022 0A4A     		ldr	r2, .L34
 601 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 602 0026 7B79     		ldrb	r3, [r7, #5]
 603 0028 1340     		ands	r3, r3, r2
 604 002a DBB2     		uxtb	r3, r3
 605 002c 002B     		cmp	r3, #0
 606 002e 03D0     		beq	.L32
 542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 607              		.loc 1 543 0
 608 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 609 0032 1846     		mov	r0, r3
 610 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 611              	.L32:
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 612              		.loc 1 537 0 discriminator 2
 613 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 614 003a 0133     		adds	r3, r3, #1
 615 003c FB71     		strb	r3, [r7, #7]
 616              	.L31:
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 617              		.loc 1 537 0 is_stmt 0 discriminator 1
 618 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 619 0040 062B     		cmp	r3, #6
 620 0042 E3D9     		bls	.L33
 544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 621              		.loc 1 546 0 is_stmt 1
 622 0044 00BF     		nop
 623 0046 0837     		adds	r7, r7, #8
 624              		.cfi_def_cfa_offset 8
 625 0048 BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 004a 80BD     		pop	{r7, pc}
 629              	.L35:
 630              		.align	2
 631              	.L34:
 632 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 633              		.cfi_endproc
 634              	.LFE5:
 635              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 636              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 637              		.align	2
 638              		.global	CapSense_CSD_CheckIsSensorActive
 639              		.thumb
 640              		.thumb_func
 641              		.type	CapSense_CSD_CheckIsSensorActive, %function
 642              	CapSense_CSD_CheckIsSensorActive:
 643              	.LFB6:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 22


 547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 644              		.loc 1 590 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 24
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 87B0     		sub	sp, sp, #28
 653              		.cfi_def_cfa_offset 32
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 23


 657 0008 FB71     		strb	r3, [r7, #7]
 591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 658              		.loc 1 593 0
 659 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 660 000c DB08     		lsrs	r3, r3, #3
 661 000e BB75     		strb	r3, [r7, #22]
 594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 662              		.loc 1 594 0
 663 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 664 0012 03F00703 		and	r3, r3, #7
 665 0016 0122     		movs	r2, #1
 666 0018 02FA03F3 		lsl	r3, r2, r3
 667 001c 7B75     		strb	r3, [r7, #21]
 595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 668              		.loc 1 596 0
 669 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 670 0020 394A     		ldr	r2, .L47
 671 0022 D35C     		ldrb	r3, [r2, r3]
 672 0024 3B75     		strb	r3, [r7, #20]
 597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 673              		.loc 1 597 0
 674 0026 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 675 0028 384A     		ldr	r2, .L47+4
 676 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 677 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 678              		.loc 1 598 0
 679 0030 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 680 0032 374A     		ldr	r2, .L47+8
 681 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 682 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 683              		.loc 1 599 0
 684 003a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 685 003c 354A     		ldr	r2, .L47+12
 686 003e D35C     		ldrb	r3, [r2, r3]
 687 0040 FB73     		strb	r3, [r7, #15]
 600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (widget < CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 688              		.loc 1 601 0
 689 0042 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 690 0044 002B     		cmp	r3, #0
 691 0046 06D1     		bne	.L37
 602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 692              		.loc 1 603 0
 693 0048 0223     		movs	r3, #2
 694 004a FB75     		strb	r3, [r7, #23]
 604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 695              		.loc 1 604 0
 696 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 697 004e 324A     		ldr	r2, .L47+16
 698 0050 0121     		movs	r1, #1
 699 0052 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 24


 700 0054 02E0     		b	.L38
 701              	.L37:
 605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         debounceIndex = widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1);
 702              		.loc 1 608 0
 703 0056 3B7D     		ldrb	r3, [r7, #20]
 704 0058 013B     		subs	r3, r3, #1
 705 005a FB75     		strb	r3, [r7, #23]
 706              	.L38:
 609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 707              		.loc 1 613 0
 708 005c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 709 005e 2F4A     		ldr	r2, .L47+20
 710 0060 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 711 0062 7B7D     		ldrb	r3, [r7, #21]
 712 0064 1340     		ands	r3, r3, r2
 713 0066 DBB2     		uxtb	r3, r3
 714 0068 002B     		cmp	r3, #0
 715 006a 19D0     		beq	.L39
 614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 716              		.loc 1 616 0
 717 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 718 006e 2C4A     		ldr	r2, .L47+24
 719 0070 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 720 0074 1946     		mov	r1, r3
 721 0076 7A8A     		ldrh	r2, [r7, #18]
 722 0078 3B8A     		ldrh	r3, [r7, #16]
 723 007a D31A     		subs	r3, r2, r3
 724 007c 9942     		cmp	r1, r3
 725 007e 33DA     		bge	.L41
 617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 726              		.loc 1 618 0
 727 0080 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 728 0082 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 729 0084 2549     		ldr	r1, .L47+20
 730 0086 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 731 0088 7A7D     		ldrb	r2, [r7, #21]
 732 008a D243     		mvns	r2, r2
 733 008c D2B2     		uxtb	r2, r2
 734 008e 0A40     		ands	r2, r2, r1
 735 0090 D1B2     		uxtb	r1, r2
 736 0092 224A     		ldr	r2, .L47+20
 737 0094 D154     		strb	r1, [r2, r3]
 619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 738              		.loc 1 619 0
 739 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 740 0098 1F49     		ldr	r1, .L47+16
 741 009a FA7B     		ldrb	r2, [r7, #15]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 25


 742 009c CA54     		strb	r2, [r1, r3]
 743 009e 23E0     		b	.L41
 744              	.L39:
 620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 745              		.loc 1 625 0
 746 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 747 00a2 1F4A     		ldr	r2, .L47+24
 748 00a4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 749 00a8 1946     		mov	r1, r3
 750 00aa 7A8A     		ldrh	r2, [r7, #18]
 751 00ac 3B8A     		ldrh	r3, [r7, #16]
 752 00ae 1344     		add	r3, r3, r2
 753 00b0 9942     		cmp	r1, r3
 754 00b2 15DD     		ble	.L42
 626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 755              		.loc 1 628 0
 756 00b4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 757 00b6 184A     		ldr	r2, .L47+16
 758 00b8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 759 00ba 012B     		cmp	r3, #1
 760 00bc 08D8     		bhi	.L43
 629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 761              		.loc 1 630 0
 762 00be BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 763 00c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 764 00c2 1649     		ldr	r1, .L47+20
 765 00c4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 766 00c6 7A7D     		ldrb	r2, [r7, #21]
 767 00c8 0A43     		orrs	r2, r2, r1
 768 00ca D1B2     		uxtb	r1, r2
 769 00cc 134A     		ldr	r2, .L47+20
 770 00ce D154     		strb	r1, [r2, r3]
 771              	.L43:
 631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 772              		.loc 1 632 0
 773 00d0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 774 00d2 114A     		ldr	r2, .L47+16
 775 00d4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 776 00d6 013A     		subs	r2, r2, #1
 777 00d8 D1B2     		uxtb	r1, r2
 778 00da 0F4A     		ldr	r2, .L47+16
 779 00dc D154     		strb	r1, [r2, r3]
 780 00de 03E0     		b	.L41
 781              	.L42:
 633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 26


 637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 782              		.loc 1 637 0
 783 00e0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 784 00e2 0D49     		ldr	r1, .L47+16
 785 00e4 FA7B     		ldrb	r2, [r7, #15]
 786 00e6 CA54     		strb	r2, [r1, r3]
 787              	.L41:
 638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 788              		.loc 1 641 0
 789 00e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 790 00ea 0C4A     		ldr	r2, .L47+20
 791 00ec D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 792 00ee 7B7D     		ldrb	r3, [r7, #21]
 793 00f0 1340     		ands	r3, r3, r2
 794 00f2 DBB2     		uxtb	r3, r3
 795 00f4 002B     		cmp	r3, #0
 796 00f6 01D0     		beq	.L44
 797              		.loc 1 641 0 is_stmt 0 discriminator 1
 798 00f8 0123     		movs	r3, #1
 799 00fa 00E0     		b	.L45
 800              	.L44:
 801              		.loc 1 641 0 discriminator 2
 802 00fc 0023     		movs	r3, #0
 803              	.L45:
 642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 804              		.loc 1 642 0 is_stmt 1 discriminator 4
 805 00fe 1846     		mov	r0, r3
 806 0100 1C37     		adds	r7, r7, #28
 807              		.cfi_def_cfa_offset 4
 808 0102 BD46     		mov	sp, r7
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 0104 80BC     		pop	{r7}
 812              		.cfi_restore 7
 813              		.cfi_def_cfa_offset 0
 814 0106 7047     		bx	lr
 815              	.L48:
 816              		.align	2
 817              	.L47:
 818 0108 00000000 		.word	CapSense_CSD_widgetNumber
 819 010c 00000000 		.word	CapSense_CSD_fingerThreshold
 820 0110 00000000 		.word	CapSense_CSD_hysteresis
 821 0114 00000000 		.word	CapSense_CSD_debounce
 822 0118 00000000 		.word	CapSense_CSD_debounceCounter
 823 011c 00000000 		.word	CapSense_CSD_sensorOnMask
 824 0120 00000000 		.word	CapSense_CSD_sensorSignal
 825              		.cfi_endproc
 826              	.LFE6:
 827              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 828              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 829              		.align	2
 830              		.global	CapSense_CSD_CheckIsWidgetActive
 831              		.thumb
 832              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 27


 833              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 834              	CapSense_CSD_CheckIsWidgetActive:
 835              	.LFB7:
 643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 836              		.loc 1 670 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 84B0     		sub	sp, sp, #16
 845              		.cfi_def_cfa_offset 24
 846 0004 00AF     		add	r7, sp, #0
 847              		.cfi_def_cfa_register 7
 848 0006 0346     		mov	r3, r0
 849 0008 FB71     		strb	r3, [r7, #7]
 671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 850              		.loc 1 671 0
 851 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 852 000c 0F4A     		ldr	r2, .L53
 853 000e D35C     		ldrb	r3, [r2, r3]
 854 0010 FB73     		strb	r3, [r7, #15]
 672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 855              		.loc 1 672 0
 856 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 857 0014 0E4A     		ldr	r2, .L53+4
 858 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 859 0018 FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 28


 860 001a 1344     		add	r3, r3, r2
 861 001c 7B73     		strb	r3, [r7, #13]
 673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 862              		.loc 1 673 0
 863 001e 0023     		movs	r3, #0
 864 0020 BB73     		strb	r3, [r7, #14]
 865              	.L51:
 674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 866              		.loc 1 678 0
 867 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 868 0024 1846     		mov	r0, r3
 869 0026 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 870 002a 0346     		mov	r3, r0
 871 002c 002B     		cmp	r3, #0
 872 002e 01D0     		beq	.L50
 679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 873              		.loc 1 680 0
 874 0030 0123     		movs	r3, #1
 875 0032 BB73     		strb	r3, [r7, #14]
 876              	.L50:
 681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 877              		.loc 1 682 0
 878 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 879 0036 0133     		adds	r3, r3, #1
 880 0038 FB73     		strb	r3, [r7, #15]
 683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 881              		.loc 1 684 0
 882 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 883 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 884 003e 9A42     		cmp	r2, r3
 885 0040 EFD3     		bcc	.L51
 685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 886              		.loc 1 688 0
 887 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 888              		.loc 1 689 0
 889 0044 1846     		mov	r0, r3
 890 0046 1037     		adds	r7, r7, #16
 891              		.cfi_def_cfa_offset 8
 892 0048 BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 004a 80BD     		pop	{r7, pc}
 896              	.L54:
 897              		.align	2
 898              	.L53:
 899 004c 00000000 		.word	CapSense_CSD_rawDataIndex
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 29


 900 0050 00000000 		.word	CapSense_CSD_numberOfSensors
 901              		.cfi_endproc
 902              	.LFE7:
 903              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 904              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 905              		.align	2
 906              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 907              		.thumb
 908              		.thumb_func
 909              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 910              	CapSense_CSD_CheckIsAnyWidgetActive:
 911              	.LFB8:
 690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 912              		.loc 1 714 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 8
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 82B0     		sub	sp, sp, #8
 921              		.cfi_def_cfa_offset 16
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 924              		.loc 1 716 0
 925 0006 0023     		movs	r3, #0
 926 0008 BB71     		strb	r3, [r7, #6]
 717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 927              		.loc 1 718 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 30


 928 000a 0023     		movs	r3, #0
 929 000c FB71     		strb	r3, [r7, #7]
 930 000e 0BE0     		b	.L56
 931              	.L58:
 719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 932              		.loc 1 720 0
 933 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 0012 1846     		mov	r0, r3
 935 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 936 0018 0346     		mov	r3, r0
 937 001a 002B     		cmp	r3, #0
 938 001c 01D0     		beq	.L57
 721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 939              		.loc 1 722 0
 940 001e 0123     		movs	r3, #1
 941 0020 BB71     		strb	r3, [r7, #6]
 942              	.L57:
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 943              		.loc 1 718 0 discriminator 2
 944 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 945 0024 0133     		adds	r3, r3, #1
 946 0026 FB71     		strb	r3, [r7, #7]
 947              	.L56:
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 948              		.loc 1 718 0 is_stmt 0 discriminator 1
 949 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 950 002a 022B     		cmp	r3, #2
 951 002c F0D9     		bls	.L58
 723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 952              		.loc 1 727 0 is_stmt 1
 953 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 954              		.loc 1 728 0
 955 0030 1846     		mov	r0, r3
 956 0032 0837     		adds	r7, r7, #8
 957              		.cfi_def_cfa_offset 8
 958 0034 BD46     		mov	sp, r7
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 0036 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE8:
 964              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 965              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 966              		.align	2
 967              		.global	CapSense_CSD_EnableWidget
 968              		.thumb
 969              		.thumb_func
 970              		.type	CapSense_CSD_EnableWidget, %function
 971              	CapSense_CSD_EnableWidget:
 972              	.LFB9:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 31


 729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 973              		.loc 1 760 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 16
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 978 0000 80B4     		push	{r7}
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 7, -4
 981 0002 85B0     		sub	sp, sp, #20
 982              		.cfi_def_cfa_offset 24
 983 0004 00AF     		add	r7, sp, #0
 984              		.cfi_def_cfa_register 7
 985 0006 0346     		mov	r3, r0
 986 0008 FB71     		strb	r3, [r7, #7]
 761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 987              		.loc 1 763 0
 988 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 989 000c 134A     		ldr	r2, .L62
 990 000e D35C     		ldrb	r3, [r2, r3]
 991 0010 FB73     		strb	r3, [r7, #15]
 764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 992              		.loc 1 764 0
 993 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 32


 994 0014 124A     		ldr	r2, .L62+4
 995 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 996 0018 FB7B     		ldrb	r3, [r7, #15]
 997 001a 1344     		add	r3, r3, r2
 998 001c BB73     		strb	r3, [r7, #14]
 999              	.L61:
 765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1000              		.loc 1 769 0 discriminator 1
 1001 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1002 0020 DB08     		lsrs	r3, r3, #3
 1003 0022 7B73     		strb	r3, [r7, #13]
 770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1004              		.loc 1 770 0 discriminator 1
 1005 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1006 0026 03F00703 		and	r3, r3, #7
 1007 002a 0122     		movs	r2, #1
 1008 002c 02FA03F3 		lsl	r3, r2, r3
 1009 0030 3B73     		strb	r3, [r7, #12]
 771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 1010              		.loc 1 772 0 discriminator 1
 1011 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1012 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1013 0036 0B49     		ldr	r1, .L62+8
 1014 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1015 003a 3A7B     		ldrb	r2, [r7, #12]
 1016 003c 0A43     		orrs	r2, r2, r1
 1017 003e D1B2     		uxtb	r1, r2
 1018 0040 084A     		ldr	r2, .L62+8
 1019 0042 D154     		strb	r1, [r2, r3]
 773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1020              		.loc 1 773 0 discriminator 1
 1021 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1022 0046 0133     		adds	r3, r3, #1
 1023 0048 FB73     		strb	r3, [r7, #15]
 774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1024              		.loc 1 775 0 discriminator 1
 1025 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1026 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1027 004e 9A42     		cmp	r2, r3
 1028 0050 E5D3     		bcc	.L61
 776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1029              		.loc 1 778 0
 1030 0052 00BF     		nop
 1031 0054 1437     		adds	r7, r7, #20
 1032              		.cfi_def_cfa_offset 4
 1033 0056 BD46     		mov	sp, r7
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 0058 80BC     		pop	{r7}
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 33


 1037              		.cfi_restore 7
 1038              		.cfi_def_cfa_offset 0
 1039 005a 7047     		bx	lr
 1040              	.L63:
 1041              		.align	2
 1042              	.L62:
 1043 005c 00000000 		.word	CapSense_CSD_rawDataIndex
 1044 0060 00000000 		.word	CapSense_CSD_numberOfSensors
 1045 0064 00000000 		.word	CapSense_CSD_sensorEnableMask
 1046              		.cfi_endproc
 1047              	.LFE9:
 1048              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1049              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1050              		.align	2
 1051              		.global	CapSense_CSD_DisableWidget
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	CapSense_CSD_DisableWidget, %function
 1055              	CapSense_CSD_DisableWidget:
 1056              	.LFB10:
 779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 810:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 1057              		.loc 1 810 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 16
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 34


 1062 0000 80B4     		push	{r7}
 1063              		.cfi_def_cfa_offset 4
 1064              		.cfi_offset 7, -4
 1065 0002 85B0     		sub	sp, sp, #20
 1066              		.cfi_def_cfa_offset 24
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 1069 0006 0346     		mov	r3, r0
 1070 0008 FB71     		strb	r3, [r7, #7]
 811:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 812:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 813:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1071              		.loc 1 813 0
 1072 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 000c 144A     		ldr	r2, .L66
 1074 000e D35C     		ldrb	r3, [r2, r3]
 1075 0010 FB73     		strb	r3, [r7, #15]
 814:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1076              		.loc 1 814 0
 1077 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1078 0014 134A     		ldr	r2, .L66+4
 1079 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1080 0018 FB7B     		ldrb	r3, [r7, #15]
 1081 001a 1344     		add	r3, r3, r2
 1082 001c BB73     		strb	r3, [r7, #14]
 1083              	.L65:
 815:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 816:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 817:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 818:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 819:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1084              		.loc 1 819 0 discriminator 1
 1085 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1086 0020 DB08     		lsrs	r3, r3, #3
 1087 0022 7B73     		strb	r3, [r7, #13]
 820:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1088              		.loc 1 820 0 discriminator 1
 1089 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1090 0026 03F00703 		and	r3, r3, #7
 1091 002a 0122     		movs	r2, #1
 1092 002c 02FA03F3 		lsl	r3, r2, r3
 1093 0030 3B73     		strb	r3, [r7, #12]
 821:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 822:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1094              		.loc 1 822 0 discriminator 1
 1095 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1096 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1097 0036 0C49     		ldr	r1, .L66+8
 1098 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1099 003a 3A7B     		ldrb	r2, [r7, #12]
 1100 003c D243     		mvns	r2, r2
 1101 003e D2B2     		uxtb	r2, r2
 1102 0040 0A40     		ands	r2, r2, r1
 1103 0042 D1B2     		uxtb	r1, r2
 1104 0044 084A     		ldr	r2, .L66+8
 1105 0046 D154     		strb	r1, [r2, r3]
 823:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 35


 1106              		.loc 1 823 0 discriminator 1
 1107 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1108 004a 0133     		adds	r3, r3, #1
 1109 004c FB73     		strb	r3, [r7, #15]
 824:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 825:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1110              		.loc 1 825 0 discriminator 1
 1111 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1112 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1113 0052 9A42     		cmp	r2, r3
 1114 0054 E3D3     		bcc	.L65
 826:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 827:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 828:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1115              		.loc 1 828 0
 1116 0056 00BF     		nop
 1117 0058 1437     		adds	r7, r7, #20
 1118              		.cfi_def_cfa_offset 4
 1119 005a BD46     		mov	sp, r7
 1120              		.cfi_def_cfa_register 13
 1121              		@ sp needed
 1122 005c 80BC     		pop	{r7}
 1123              		.cfi_restore 7
 1124              		.cfi_def_cfa_offset 0
 1125 005e 7047     		bx	lr
 1126              	.L67:
 1127              		.align	2
 1128              	.L66:
 1129 0060 00000000 		.word	CapSense_CSD_rawDataIndex
 1130 0064 00000000 		.word	CapSense_CSD_numberOfSensors
 1131 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 1132              		.cfi_endproc
 1133              	.LFE10:
 1134              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1135              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1136              		.align	2
 1137              		.global	CapSense_CSD_FindMaximum
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	CapSense_CSD_FindMaximum, %function
 1141              	CapSense_CSD_FindMaximum:
 1142              	.LFB11:
 829:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 830:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 831:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 832:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 833:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 834:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 835:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 836:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 837:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 838:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 839:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 840:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 841:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 842:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 843:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 36


 844:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 845:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 846:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 847:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 848:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 849:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 850:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 851:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 852:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 853:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 854:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 855:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
 856:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 857:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 858:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 859:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 860:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 861:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1143              		.loc 1 861 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 16
 1146              		@ frame_needed = 1, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148 0000 80B4     		push	{r7}
 1149              		.cfi_def_cfa_offset 4
 1150              		.cfi_offset 7, -4
 1151 0002 85B0     		sub	sp, sp, #20
 1152              		.cfi_def_cfa_offset 24
 1153 0004 00AF     		add	r7, sp, #0
 1154              		.cfi_def_cfa_register 7
 1155 0006 0346     		mov	r3, r0
 1156 0008 FB71     		strb	r3, [r7, #7]
 1157 000a 0B46     		mov	r3, r1
 1158 000c BB71     		strb	r3, [r7, #6]
 1159 000e 1346     		mov	r3, r2	@ movhi
 1160 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 862:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 863:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 864:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 865:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 866:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 867:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 868:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 869:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 870:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 871:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 872:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 1161              		.loc 1 872 0
 1162 0012 FF23     		movs	r3, #255
 1163 0014 BB73     		strb	r3, [r7, #14]
 873:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
 1164              		.loc 1 873 0
 1165 0016 0023     		movs	r3, #0
 1166 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 874:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 1167              		.loc 1 874 0
 1168 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 37


 1169 001c 5B00     		lsls	r3, r3, #1
 1170 001e 154A     		ldr	r2, .L73
 1171 0020 1344     		add	r3, r3, r2
 1172 0022 BB60     		str	r3, [r7, #8]
 875:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 876:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 877:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 878:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 879:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
 880:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 881:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 882:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 883:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 884:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 885:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
 886:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 887:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 888:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 889:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 890:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 891:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 892:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 893:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 894:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 895:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 896:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 897:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 898:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 899:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 900:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 901:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 902:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 903:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 904:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 905:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 906:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 907:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 908:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 909:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 910:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 911:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 912:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 913:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 914:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 915:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 916:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 917:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 918:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 919:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 920:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 921:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 922:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 923:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 924:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
 925:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 926:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 927:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 38


 928:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 929:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 930:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 931:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 932:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 933:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 934:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 935:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 936:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
 937:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 938:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 939:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 940:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 941:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 942:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 943:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 944:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 945:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 946:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 947:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 948:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 949:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 950:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 951:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 952:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 953:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 954:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 955:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 956:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 957:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 958:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 959:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 960:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 961:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 962:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 963:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 964:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 965:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 966:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 967:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 968:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 969:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 970:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1173              		.loc 1 971 0
 1174 0024 0023     		movs	r3, #0
 1175 0026 FB73     		strb	r3, [r7, #15]
 1176 0028 1AE0     		b	.L69
 1177              	.L71:
 972:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 973:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
 974:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1178              		.loc 1 974 0
 1179 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1180 002c 5B00     		lsls	r3, r3, #1
 1181 002e BA68     		ldr	r2, [r7, #8]
 1182 0030 1344     		add	r3, r3, r2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 39


 1183 0032 1B88     		ldrh	r3, [r3]
 1184 0034 BA88     		ldrh	r2, [r7, #4]
 1185 0036 9A42     		cmp	r2, r3
 1186 0038 0FD2     		bcs	.L70
 975:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 976:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1187              		.loc 1 976 0
 1188 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1189 003c 5B00     		lsls	r3, r3, #1
 1190 003e BA68     		ldr	r2, [r7, #8]
 1191 0040 1344     		add	r3, r3, r2
 1192 0042 1B88     		ldrh	r3, [r3]
 1193 0044 BA89     		ldrh	r2, [r7, #12]
 1194 0046 9A42     		cmp	r2, r3
 1195 0048 07D2     		bcs	.L70
 977:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 978:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 1196              		.loc 1 978 0
 1197 004a FB7B     		ldrb	r3, [r7, #15]
 1198 004c BB73     		strb	r3, [r7, #14]
 979:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1199              		.loc 1 979 0
 1200 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1201 0050 5B00     		lsls	r3, r3, #1
 1202 0052 BA68     		ldr	r2, [r7, #8]
 1203 0054 1344     		add	r3, r3, r2
 1204 0056 1B88     		ldrh	r3, [r3]	@ movhi
 1205 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 1206              	.L70:
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1207              		.loc 1 971 0 discriminator 2
 1208 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1209 005c 0133     		adds	r3, r3, #1
 1210 005e FB73     		strb	r3, [r7, #15]
 1211              	.L69:
 971:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1212              		.loc 1 971 0 is_stmt 0 discriminator 1
 1213 0060 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1214 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1215 0064 9A42     		cmp	r2, r3
 1216 0066 E0D3     		bcc	.L71
 980:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 981:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 982:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 983:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 984:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 1217              		.loc 1 984 0 is_stmt 1
 1218 0068 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 985:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1219              		.loc 1 985 0
 1220 006a 1846     		mov	r0, r3
 1221 006c 1437     		adds	r7, r7, #20
 1222              		.cfi_def_cfa_offset 4
 1223 006e BD46     		mov	sp, r7
 1224              		.cfi_def_cfa_register 13
 1225              		@ sp needed
 1226 0070 80BC     		pop	{r7}
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 40


 1227              		.cfi_restore 7
 1228              		.cfi_def_cfa_offset 0
 1229 0072 7047     		bx	lr
 1230              	.L74:
 1231              		.align	2
 1232              	.L73:
 1233 0074 00000000 		.word	CapSense_CSD_sensorSignal
 1234              		.cfi_endproc
 1235              	.LFE11:
 1236              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 1237              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 1238              		.align	2
 1239              		.global	CapSense_CSD_CalcCentroid
 1240              		.thumb
 1241              		.thumb_func
 1242              		.type	CapSense_CSD_CalcCentroid, %function
 1243              	CapSense_CSD_CalcCentroid:
 1244              	.LFB12:
 986:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 987:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 988:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 989:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 990:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 991:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 992:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 993:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 994:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 995:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 996:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 997:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 998:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 999:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1000:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
1001:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1002:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1003:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
1004:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1005:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1006:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1007:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
1008:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1009:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1010:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1011:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1012:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1013:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1014:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1015:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1016:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1017:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1245              		.loc 1 1017 0
 1246              		.cfi_startproc
 1247              		@ args = 4, pretend = 0, frame = 32
 1248              		@ frame_needed = 1, uses_anonymous_args = 0
 1249              		@ link register save eliminated.
 1250 0000 90B4     		push	{r4, r7}
 1251              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 41


 1252              		.cfi_offset 4, -8
 1253              		.cfi_offset 7, -4
 1254 0002 88B0     		sub	sp, sp, #32
 1255              		.cfi_def_cfa_offset 40
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 0446     		mov	r4, r0
 1259 0008 0846     		mov	r0, r1
 1260 000a 1146     		mov	r1, r2
 1261 000c 1A46     		mov	r2, r3
 1262 000e 2346     		mov	r3, r4
 1263 0010 FB71     		strb	r3, [r7, #7]
 1264 0012 0346     		mov	r3, r0
 1265 0014 BB71     		strb	r3, [r7, #6]
 1266 0016 0B46     		mov	r3, r1
 1267 0018 7B71     		strb	r3, [r7, #5]
 1268 001a 1346     		mov	r3, r2	@ movhi
 1269 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1018:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1019:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
 1270              		.loc 1 1019 0
 1271 001e 0023     		movs	r3, #0
 1272 0020 FB77     		strb	r3, [r7, #31]
1020:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
 1273              		.loc 1 1020 0
 1274 0022 0023     		movs	r3, #0
 1275 0024 BB77     		strb	r3, [r7, #30]
1021:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1022:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1023:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1024:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
1025:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1026:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1027:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
1028:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint16 CapSense_CSD_centroid[3u];
1029:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1030:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1031:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1032:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1033:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1276              		.loc 1 1033 0
 1277 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1278 0028 5B00     		lsls	r3, r3, #1
 1279 002a 494A     		ldr	r2, .L85
 1280 002c 1344     		add	r3, r3, r2
 1281 002e BB61     		str	r3, [r7, #24]
1034:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1035:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1036:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1037:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1038:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1039:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1040:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1041:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1042:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1043:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1044:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 42


1045:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1046:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1047:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1048:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1049:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1050:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1051:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1052:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1053:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1054:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1055:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1056:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1057:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1058:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1059:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1060:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1061:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1062:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1063:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1064:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1065:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1066:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1067:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1068:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1069:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1070:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1071:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1072:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1073:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1074:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1075:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1076:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1077:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1078:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1079:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1080:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1081:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1082:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1083:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1084:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1085:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1086:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1087:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1088:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1089:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1090:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1091:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1092:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 1282              		.loc 1 1092 0
 1283 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1284 0032 002B     		cmp	r3, #0
 1285 0034 02D0     		beq	.L76
1093:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1094:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 1286              		.loc 1 1094 0
 1287 0036 FB79     		ldrb	r3, [r7, #7]
 1288 0038 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 43


 1289 003a FB77     		strb	r3, [r7, #31]
 1290              	.L76:
1095:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1096:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
 1291              		.loc 1 1096 0
 1292 003c FB79     		ldrb	r3, [r7, #7]
 1293 003e 0133     		adds	r3, r3, #1
 1294 0040 BB77     		strb	r3, [r7, #30]
1097:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1098:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1099:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 1295              		.loc 1 1103 0
 1296 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1297 0044 5B00     		lsls	r3, r3, #1
 1298 0046 BA69     		ldr	r2, [r7, #24]
 1299 0048 1344     		add	r3, r3, r2
 1300 004a 1A88     		ldrh	r2, [r3]
 1301 004c 414B     		ldr	r3, .L85+4
 1302 004e 5A80     		strh	r2, [r3, #2]	@ movhi
1104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1303              		.loc 1 1107 0
 1304 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1305 0052 002B     		cmp	r3, #0
 1306 0054 0AD1     		bne	.L77
1108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1307              		.loc 1 1109 0
 1308 0056 3F4B     		ldr	r3, .L85+4
 1309 0058 0022     		movs	r2, #0
 1310 005a 1A80     		strh	r2, [r3]	@ movhi
1110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1311              		.loc 1 1110 0
 1312 005c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1313 005e 5B00     		lsls	r3, r3, #1
 1314 0060 BA69     		ldr	r2, [r7, #24]
 1315 0062 1344     		add	r3, r3, r2
 1316 0064 1A88     		ldrh	r2, [r3]
 1317 0066 3B4B     		ldr	r3, .L85+4
 1318 0068 9A80     		strh	r2, [r3, #4]	@ movhi
 1319 006a 1DE0     		b	.L78
 1320              	.L77:
1111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1321              		.loc 1 1112 0
 1322 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1323 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1324 0070 013B     		subs	r3, r3, #1
 1325 0072 9A42     		cmp	r2, r3
 1326 0074 0AD1     		bne	.L79
1113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 44


1114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1327              		.loc 1 1114 0
 1328 0076 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1329 0078 5B00     		lsls	r3, r3, #1
 1330 007a BA69     		ldr	r2, [r7, #24]
 1331 007c 1344     		add	r3, r3, r2
 1332 007e 1A88     		ldrh	r2, [r3]
 1333 0080 344B     		ldr	r3, .L85+4
 1334 0082 1A80     		strh	r2, [r3]	@ movhi
1115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1335              		.loc 1 1115 0
 1336 0084 334B     		ldr	r3, .L85+4
 1337 0086 0022     		movs	r2, #0
 1338 0088 9A80     		strh	r2, [r3, #4]	@ movhi
 1339 008a 0DE0     		b	.L78
 1340              	.L79:
1116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1341              		.loc 1 1119 0
 1342 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1343 008e 5B00     		lsls	r3, r3, #1
 1344 0090 BA69     		ldr	r2, [r7, #24]
 1345 0092 1344     		add	r3, r3, r2
 1346 0094 1A88     		ldrh	r2, [r3]
 1347 0096 2F4B     		ldr	r3, .L85+4
 1348 0098 1A80     		strh	r2, [r3]	@ movhi
1120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1349              		.loc 1 1120 0
 1350 009a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1351 009c 5B00     		lsls	r3, r3, #1
 1352 009e BA69     		ldr	r2, [r7, #24]
 1353 00a0 1344     		add	r3, r3, r2
 1354 00a2 1A88     		ldrh	r2, [r3]
 1355 00a4 2B4B     		ldr	r3, .L85+4
 1356 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
 1357              	.L78:
1121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 1358              		.loc 1 1129 0
 1359 00a8 2A4B     		ldr	r3, .L85+4
 1360 00aa 1B88     		ldrh	r3, [r3]
 1361 00ac 3A8D     		ldrh	r2, [r7, #40]
 1362 00ae 9A42     		cmp	r2, r3
 1363 00b0 07D2     		bcs	.L80
1130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 1364              		.loc 1 1131 0
 1365 00b2 284B     		ldr	r3, .L85+4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 45


 1366 00b4 1A88     		ldrh	r2, [r3]
 1367 00b6 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1368 00b8 D31A     		subs	r3, r2, r3
 1369 00ba 9AB2     		uxth	r2, r3
 1370 00bc 254B     		ldr	r3, .L85+4
 1371 00be 1A80     		strh	r2, [r3]	@ movhi
 1372 00c0 02E0     		b	.L81
 1373              	.L80:
1132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1374              		.loc 1 1135 0
 1375 00c2 244B     		ldr	r3, .L85+4
 1376 00c4 0022     		movs	r2, #0
 1377 00c6 1A80     		strh	r2, [r3]	@ movhi
 1378              	.L81:
1136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 1379              		.loc 1 1139 0
 1380 00c8 224B     		ldr	r3, .L85+4
 1381 00ca 5A88     		ldrh	r2, [r3, #2]
 1382 00cc 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1383 00ce D31A     		subs	r3, r2, r3
 1384 00d0 9AB2     		uxth	r2, r3
 1385 00d2 204B     		ldr	r3, .L85+4
 1386 00d4 5A80     		strh	r2, [r3, #2]	@ movhi
1140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 1387              		.loc 1 1142 0
 1388 00d6 1F4B     		ldr	r3, .L85+4
 1389 00d8 9B88     		ldrh	r3, [r3, #4]
 1390 00da 3A8D     		ldrh	r2, [r7, #40]
 1391 00dc 9A42     		cmp	r2, r3
 1392 00de 07D2     		bcs	.L82
1143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 1393              		.loc 1 1144 0
 1394 00e0 1C4B     		ldr	r3, .L85+4
 1395 00e2 9A88     		ldrh	r2, [r3, #4]
 1396 00e4 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1397 00e6 D31A     		subs	r3, r2, r3
 1398 00e8 9AB2     		uxth	r2, r3
 1399 00ea 1A4B     		ldr	r3, .L85+4
 1400 00ec 9A80     		strh	r2, [r3, #4]	@ movhi
 1401 00ee 02E0     		b	.L83
 1402              	.L82:
1145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1403              		.loc 1 1148 0
 1404 00f0 184B     		ldr	r3, .L85+4
 1405 00f2 0022     		movs	r2, #0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 46


 1406 00f4 9A80     		strh	r2, [r3, #4]	@ movhi
 1407              	.L83:
1149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 1408              		.loc 1 1153 0
 1409 00f6 174B     		ldr	r3, .L85+4
 1410 00f8 9B88     		ldrh	r3, [r3, #4]
 1411 00fa 1A46     		mov	r2, r3
1154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1412              		.loc 1 1154 0
 1413 00fc 154B     		ldr	r3, .L85+4
 1414 00fe 1B88     		ldrh	r3, [r3]
1153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1415              		.loc 1 1153 0
 1416 0100 D31A     		subs	r3, r2, r3
 1417 0102 7B61     		str	r3, [r7, #20]
1155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 1418              		.loc 1 1157 0
 1419 0104 134B     		ldr	r3, .L85+4
 1420 0106 1B88     		ldrh	r3, [r3]
 1421 0108 1A46     		mov	r2, r3
1158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1422              		.loc 1 1158 0
 1423 010a 124B     		ldr	r3, .L85+4
 1424 010c 5B88     		ldrh	r3, [r3, #2]
1157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1425              		.loc 1 1157 0
 1426 010e 1344     		add	r3, r3, r2
1159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 1427              		.loc 1 1159 0
 1428 0110 104A     		ldr	r2, .L85+4
 1429 0112 9288     		ldrh	r2, [r2, #4]
1157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1430              		.loc 1 1157 0
 1431 0114 1344     		add	r3, r3, r2
 1432 0116 3B61     		str	r3, [r7, #16]
1160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1433              		.loc 1 1162 0
 1434 0118 7B69     		ldr	r3, [r7, #20]
 1435 011a 1B02     		lsls	r3, r3, #8
 1436 011c 1A46     		mov	r2, r3
 1437 011e 3B69     		ldr	r3, [r7, #16]
 1438 0120 92FBF3F3 		sdiv	r3, r2, r3
 1439 0124 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1440 0126 1202     		lsls	r2, r2, #8
 1441 0128 1344     		add	r3, r3, r2
 1442 012a 3B61     		str	r3, [r7, #16]
1163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 47


1166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 1443              		.loc 1 1172 0
 1444 012c B7F90230 		ldrsh	r3, [r7, #2]
 1445 0130 1A46     		mov	r2, r3
 1446 0132 3B69     		ldr	r3, [r7, #16]
 1447 0134 02FB03F3 		mul	r3, r2, r3
 1448 0138 3B61     		str	r3, [r7, #16]
1173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 1449              		.loc 1 1175 0
 1450 013a 3B69     		ldr	r3, [r7, #16]
 1451 013c 03F5FE43 		add	r3, r3, #32512
 1452 0140 1B0C     		lsrs	r3, r3, #16
 1453 0142 FB73     		strb	r3, [r7, #15]
1176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1454              		.loc 1 1177 0
 1455 0144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
 1456              		.loc 1 1178 0
 1457 0146 1846     		mov	r0, r3
 1458 0148 2037     		adds	r7, r7, #32
 1459              		.cfi_def_cfa_offset 8
 1460 014a BD46     		mov	sp, r7
 1461              		.cfi_def_cfa_register 13
 1462              		@ sp needed
 1463 014c 90BC     		pop	{r4, r7}
 1464              		.cfi_restore 7
 1465              		.cfi_restore 4
 1466              		.cfi_def_cfa_offset 0
 1467 014e 7047     		bx	lr
 1468              	.L86:
 1469              		.align	2
 1470              	.L85:
 1471 0150 00000000 		.word	CapSense_CSD_sensorSignal
 1472 0154 04000000 		.word	CapSense_CSD_centroid.5249
 1473              		.cfi_endproc
 1474              	.LFE12:
 1475              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 1476              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 1477              		.align	2
 1478              		.global	CapSense_CSD_GetCentroidPos
 1479              		.thumb
 1480              		.thumb_func
 1481              		.type	CapSense_CSD_GetCentroidPos, %function
 1482              	CapSense_CSD_GetCentroidPos:
 1483              	.LFB13:
1179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 48


1182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1484              		.loc 1 1220 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 16
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 90B5     		push	{r4, r7, lr}
 1489              		.cfi_def_cfa_offset 12
 1490              		.cfi_offset 4, -12
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 87B0     		sub	sp, sp, #28
 1494              		.cfi_def_cfa_offset 40
 1495 0004 02AF     		add	r7, sp, #8
 1496              		.cfi_def_cfa 7, 32
 1497 0006 0346     		mov	r3, r0
 1498 0008 FB71     		strb	r3, [r7, #7]
1221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 49


1224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 1499              		.loc 1 1240 0
 1500 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1501 000c 164A     		ldr	r2, .L91
 1502 000e D35C     		ldrb	r3, [r2, r3]
 1503 0010 7B73     		strb	r3, [r7, #13]
1241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 1504              		.loc 1 1241 0
 1505 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1506 0014 154A     		ldr	r2, .L91+4
 1507 0016 D35C     		ldrb	r3, [r2, r3]
 1508 0018 3B73     		strb	r3, [r7, #12]
1242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
 1509              		.loc 1 1259 0
 1510 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1511 001c 144A     		ldr	r2, .L91+8
 1512 001e 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 1513 0022 397B     		ldrb	r1, [r7, #12]	@ zero_extendqisi2
 1514 0024 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1515 0026 1846     		mov	r0, r3
 1516 0028 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 1517 002c 0346     		mov	r3, r0
 1518 002e FB72     		strb	r3, [r7, #11]
1260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 50


1261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 1519              		.loc 1 1262 0
 1520 0030 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1521 0032 FF2B     		cmp	r3, #255
 1522 0034 0FD0     		beq	.L88
1263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
 1523              		.loc 1 1265 0
 1524 0036 4FF4C854 		mov	r4, #6400
 1525 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1526 003c 0D4A     		ldr	r2, .L91+12
 1527 003e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1528 0042 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1529 0044 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1530 0046 F87A     		ldrb	r0, [r7, #11]	@ zero_extendqisi2
 1531 0048 0093     		str	r3, [sp]
 1532 004a 2346     		mov	r3, r4
 1533 004c FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 1534 0050 0346     		mov	r3, r0
 1535 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 1536 0054 02E0     		b	.L89
 1537              	.L88:
1266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 51


1299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 52


1356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 1538              		.loc 1 1369 0
 1539 0056 4FF6FF73 		movw	r3, #65535
 1540 005a FB81     		strh	r3, [r7, #14]	@ movhi
 1541              	.L89:
1370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1542              		.loc 1 1381 0
 1543 005c FB89     		ldrh	r3, [r7, #14]
1382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1544              		.loc 1 1382 0
 1545 005e 1846     		mov	r0, r3
 1546 0060 1437     		adds	r7, r7, #20
 1547              		.cfi_def_cfa_offset 12
 1548 0062 BD46     		mov	sp, r7
 1549              		.cfi_def_cfa_register 13
 1550              		@ sp needed
 1551 0064 90BD     		pop	{r4, r7, pc}
 1552              	.L92:
 1553 0066 00BF     		.align	2
 1554              	.L91:
 1555 0068 00000000 		.word	CapSense_CSD_rawDataIndex
 1556 006c 00000000 		.word	CapSense_CSD_numberOfSensors
 1557 0070 00000000 		.word	CapSense_CSD_fingerThreshold
 1558 0074 00000000 		.word	CapSense_CSD_noiseThreshold
 1559              		.cfi_endproc
 1560              	.LFE13:
 1561              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 1562              		.bss
 1563 0003 00       		.align	2
 1564              	CapSense_CSD_centroid.5249:
 1565 0004 00000000 		.space	6
 1565      0000
 1566              		.text
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 53


 1567              	.Letext0:
 1568              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1569              		.file 3 "Generated_Source\\PSoC5\\CapSense_CSD.h"
 1570              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1571              		.section	.debug_info,"",%progbits
 1572              	.Ldebug_info0:
 1573 0000 9E070000 		.4byte	0x79e
 1574 0004 0400     		.2byte	0x4
 1575 0006 00000000 		.4byte	.Ldebug_abbrev0
 1576 000a 04       		.byte	0x4
 1577 000b 01       		.uleb128 0x1
 1578 000c 9A000000 		.4byte	.LASF76
 1579 0010 0C       		.byte	0xc
 1580 0011 00000000 		.4byte	.LASF77
 1581 0015 61050000 		.4byte	.LASF78
 1582 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1583 001d 00000000 		.4byte	0
 1584 0021 00000000 		.4byte	.Ldebug_line0
 1585 0025 02       		.uleb128 0x2
 1586 0026 01       		.byte	0x1
 1587 0027 06       		.byte	0x6
 1588 0028 55010000 		.4byte	.LASF0
 1589 002c 02       		.uleb128 0x2
 1590 002d 01       		.byte	0x1
 1591 002e 08       		.byte	0x8
 1592 002f F9030000 		.4byte	.LASF1
 1593 0033 02       		.uleb128 0x2
 1594 0034 02       		.byte	0x2
 1595 0035 05       		.byte	0x5
 1596 0036 16040000 		.4byte	.LASF2
 1597 003a 02       		.uleb128 0x2
 1598 003b 02       		.byte	0x2
 1599 003c 07       		.byte	0x7
 1600 003d BA020000 		.4byte	.LASF3
 1601 0041 02       		.uleb128 0x2
 1602 0042 04       		.byte	0x4
 1603 0043 05       		.byte	0x5
 1604 0044 A7010000 		.4byte	.LASF4
 1605 0048 02       		.uleb128 0x2
 1606 0049 04       		.byte	0x4
 1607 004a 07       		.byte	0x7
 1608 004b 78020000 		.4byte	.LASF5
 1609 004f 02       		.uleb128 0x2
 1610 0050 08       		.byte	0x8
 1611 0051 05       		.byte	0x5
 1612 0052 47010000 		.4byte	.LASF6
 1613 0056 02       		.uleb128 0x2
 1614 0057 08       		.byte	0x8
 1615 0058 07       		.byte	0x7
 1616 0059 30010000 		.4byte	.LASF7
 1617 005d 03       		.uleb128 0x3
 1618 005e 04       		.byte	0x4
 1619 005f 05       		.byte	0x5
 1620 0060 696E7400 		.ascii	"int\000"
 1621 0064 02       		.uleb128 0x2
 1622 0065 04       		.byte	0x4
 1623 0066 07       		.byte	0x7
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 54


 1624 0067 62020000 		.4byte	.LASF8
 1625 006b 04       		.uleb128 0x4
 1626 006c E0010000 		.4byte	.LASF9
 1627 0070 02       		.byte	0x2
 1628 0071 9201     		.2byte	0x192
 1629 0073 2C000000 		.4byte	0x2c
 1630 0077 04       		.uleb128 0x4
 1631 0078 4D000000 		.4byte	.LASF10
 1632 007c 02       		.byte	0x2
 1633 007d 9301     		.2byte	0x193
 1634 007f 3A000000 		.4byte	0x3a
 1635 0083 04       		.uleb128 0x4
 1636 0084 ED010000 		.4byte	.LASF11
 1637 0088 02       		.byte	0x2
 1638 0089 9401     		.2byte	0x194
 1639 008b 48000000 		.4byte	0x48
 1640 008f 04       		.uleb128 0x4
 1641 0090 DC050000 		.4byte	.LASF12
 1642 0094 02       		.byte	0x2
 1643 0095 9601     		.2byte	0x196
 1644 0097 33000000 		.4byte	0x33
 1645 009b 04       		.uleb128 0x4
 1646 009c 7A010000 		.4byte	.LASF13
 1647 00a0 02       		.byte	0x2
 1648 00a1 9701     		.2byte	0x197
 1649 00a3 41000000 		.4byte	0x41
 1650 00a7 02       		.uleb128 0x2
 1651 00a8 04       		.byte	0x4
 1652 00a9 04       		.byte	0x4
 1653 00aa 91030000 		.4byte	.LASF14
 1654 00ae 02       		.uleb128 0x2
 1655 00af 08       		.byte	0x8
 1656 00b0 04       		.byte	0x4
 1657 00b1 E6010000 		.4byte	.LASF15
 1658 00b5 02       		.uleb128 0x2
 1659 00b6 01       		.byte	0x1
 1660 00b7 08       		.byte	0x8
 1661 00b8 B3040000 		.4byte	.LASF16
 1662 00bc 02       		.uleb128 0x2
 1663 00bd 08       		.byte	0x8
 1664 00be 04       		.byte	0x4
 1665 00bf 05030000 		.4byte	.LASF17
 1666 00c3 02       		.uleb128 0x2
 1667 00c4 04       		.byte	0x4
 1668 00c5 07       		.byte	0x7
 1669 00c6 FC020000 		.4byte	.LASF18
 1670 00ca 05       		.uleb128 0x5
 1671 00cb FF010000 		.4byte	.LASF19
 1672 00cf 01       		.byte	0x1
 1673 00d0 81       		.byte	0x81
 1674 00d1 00000000 		.4byte	.LFB0
 1675 00d5 70000000 		.4byte	.LFE0-.LFB0
 1676 00d9 01       		.uleb128 0x1
 1677 00da 9C       		.byte	0x9c
 1678 00db FC000000 		.4byte	0xfc
 1679 00df 06       		.uleb128 0x6
 1680 00e0 CD020000 		.4byte	.LASF21
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 55


 1681 00e4 01       		.byte	0x1
 1682 00e5 81       		.byte	0x81
 1683 00e6 6B000000 		.4byte	0x6b
 1684 00ea 02       		.uleb128 0x2
 1685 00eb 91       		.byte	0x91
 1686 00ec 6F       		.sleb128 -17
 1687 00ed 07       		.uleb128 0x7
 1688 00ee 20040000 		.4byte	.LASF23
 1689 00f2 01       		.byte	0x1
 1690 00f3 85       		.byte	0x85
 1691 00f4 6B000000 		.4byte	0x6b
 1692 00f8 02       		.uleb128 0x2
 1693 00f9 91       		.byte	0x91
 1694 00fa 77       		.sleb128 -9
 1695 00fb 00       		.byte	0
 1696 00fc 08       		.uleb128 0x8
 1697 00fd 74000000 		.4byte	.LASF20
 1698 0101 01       		.byte	0x1
 1699 0102 CD       		.byte	0xcd
 1700 0103 00000000 		.4byte	.LFB1
 1701 0107 2E000000 		.4byte	.LFE1-.LFB1
 1702 010b 01       		.uleb128 0x1
 1703 010c 9C       		.byte	0x9c
 1704 010d 20010000 		.4byte	0x120
 1705 0111 06       		.uleb128 0x6
 1706 0112 CD020000 		.4byte	.LASF21
 1707 0116 01       		.byte	0x1
 1708 0117 CD       		.byte	0xcd
 1709 0118 6B000000 		.4byte	0x6b
 1710 011c 02       		.uleb128 0x2
 1711 011d 91       		.byte	0x91
 1712 011e 77       		.sleb128 -9
 1713 011f 00       		.byte	0
 1714 0120 09       		.uleb128 0x9
 1715 0121 B8030000 		.4byte	.LASF22
 1716 0125 01       		.byte	0x1
 1717 0126 0101     		.2byte	0x101
 1718 0128 00000000 		.4byte	.LFB2
 1719 012c 28000000 		.4byte	.LFE2-.LFB2
 1720 0130 01       		.uleb128 0x1
 1721 0131 9C       		.byte	0x9c
 1722 0132 44010000 		.4byte	0x144
 1723 0136 0A       		.uleb128 0xa
 1724 0137 6900     		.ascii	"i\000"
 1725 0139 01       		.byte	0x1
 1726 013a 0401     		.2byte	0x104
 1727 013c 6B000000 		.4byte	0x6b
 1728 0140 02       		.uleb128 0x2
 1729 0141 91       		.byte	0x91
 1730 0142 77       		.sleb128 -9
 1731 0143 00       		.byte	0
 1732 0144 09       		.uleb128 0x9
 1733 0145 11030000 		.4byte	.LASF24
 1734 0149 01       		.byte	0x1
 1735 014a 2201     		.2byte	0x122
 1736 014c 00000000 		.4byte	.LFB3
 1737 0150 70000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 56


 1738 0154 01       		.uleb128 0x1
 1739 0155 9C       		.byte	0x9c
 1740 0156 86010000 		.4byte	0x186
 1741 015a 0A       		.uleb128 0xa
 1742 015b 6900     		.ascii	"i\000"
 1743 015d 01       		.byte	0x1
 1744 015e 2501     		.2byte	0x125
 1745 0160 6B000000 		.4byte	0x6b
 1746 0164 02       		.uleb128 0x2
 1747 0165 91       		.byte	0x91
 1748 0166 77       		.sleb128 -9
 1749 0167 0A       		.uleb128 0xa
 1750 0168 706F7300 		.ascii	"pos\000"
 1751 016c 01       		.byte	0x1
 1752 016d 2601     		.2byte	0x126
 1753 016f 6B000000 		.4byte	0x6b
 1754 0173 02       		.uleb128 0x2
 1755 0174 91       		.byte	0x91
 1756 0175 76       		.sleb128 -10
 1757 0176 0B       		.uleb128 0xb
 1758 0177 53030000 		.4byte	.LASF25
 1759 017b 01       		.byte	0x1
 1760 017c 2701     		.2byte	0x127
 1761 017e 6B000000 		.4byte	0x6b
 1762 0182 02       		.uleb128 0x2
 1763 0183 91       		.byte	0x91
 1764 0184 75       		.sleb128 -11
 1765 0185 00       		.byte	0
 1766 0186 09       		.uleb128 0x9
 1767 0187 4D040000 		.4byte	.LASF26
 1768 018b 01       		.byte	0x1
 1769 018c 6501     		.2byte	0x165
 1770 018e 00000000 		.4byte	.LFB4
 1771 0192 40010000 		.4byte	.LFE4-.LFB4
 1772 0196 01       		.uleb128 0x1
 1773 0197 9C       		.byte	0x9c
 1774 0198 F7010000 		.4byte	0x1f7
 1775 019c 0C       		.uleb128 0xc
 1776 019d CD020000 		.4byte	.LASF21
 1777 01a1 01       		.byte	0x1
 1778 01a2 6501     		.2byte	0x165
 1779 01a4 6B000000 		.4byte	0x6b
 1780 01a8 02       		.uleb128 0x2
 1781 01a9 91       		.byte	0x91
 1782 01aa 67       		.sleb128 -25
 1783 01ab 0B       		.uleb128 0xb
 1784 01ac EE020000 		.4byte	.LASF27
 1785 01b0 01       		.byte	0x1
 1786 01b1 6801     		.2byte	0x168
 1787 01b3 83000000 		.4byte	0x83
 1788 01b7 02       		.uleb128 0x2
 1789 01b8 91       		.byte	0x91
 1790 01b9 6C       		.sleb128 -20
 1791 01ba 0B       		.uleb128 0xb
 1792 01bb 1E060000 		.4byte	.LASF28
 1793 01bf 01       		.byte	0x1
 1794 01c0 6901     		.2byte	0x169
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 57


 1795 01c2 77000000 		.4byte	0x77
 1796 01c6 02       		.uleb128 0x2
 1797 01c7 91       		.byte	0x91
 1798 01c8 76       		.sleb128 -10
 1799 01c9 0B       		.uleb128 0xb
 1800 01ca 54000000 		.4byte	.LASF29
 1801 01ce 01       		.byte	0x1
 1802 01cf 6A01     		.2byte	0x16a
 1803 01d1 77000000 		.4byte	0x77
 1804 01d5 02       		.uleb128 0x2
 1805 01d6 91       		.byte	0x91
 1806 01d7 70       		.sleb128 -16
 1807 01d8 0B       		.uleb128 0xb
 1808 01d9 20040000 		.4byte	.LASF23
 1809 01dd 01       		.byte	0x1
 1810 01de 6B01     		.2byte	0x16b
 1811 01e0 6B000000 		.4byte	0x6b
 1812 01e4 02       		.uleb128 0x2
 1813 01e5 91       		.byte	0x91
 1814 01e6 75       		.sleb128 -11
 1815 01e7 0B       		.uleb128 0xb
 1816 01e8 07040000 		.4byte	.LASF30
 1817 01ec 01       		.byte	0x1
 1818 01ed 6C01     		.2byte	0x16c
 1819 01ef 77000000 		.4byte	0x77
 1820 01f3 02       		.uleb128 0x2
 1821 01f4 91       		.byte	0x91
 1822 01f5 72       		.sleb128 -14
 1823 01f6 00       		.byte	0
 1824 01f7 09       		.uleb128 0x9
 1825 01f8 D2040000 		.4byte	.LASF31
 1826 01fc 01       		.byte	0x1
 1827 01fd 1202     		.2byte	0x212
 1828 01ff 00000000 		.4byte	.LFB5
 1829 0203 50000000 		.4byte	.LFE5-.LFB5
 1830 0207 01       		.uleb128 0x1
 1831 0208 9C       		.byte	0x9c
 1832 0209 39020000 		.4byte	0x239
 1833 020d 0A       		.uleb128 0xa
 1834 020e 6900     		.ascii	"i\000"
 1835 0210 01       		.byte	0x1
 1836 0211 1502     		.2byte	0x215
 1837 0213 6B000000 		.4byte	0x6b
 1838 0217 02       		.uleb128 0x2
 1839 0218 91       		.byte	0x91
 1840 0219 77       		.sleb128 -9
 1841 021a 0A       		.uleb128 0xa
 1842 021b 706F7300 		.ascii	"pos\000"
 1843 021f 01       		.byte	0x1
 1844 0220 1602     		.2byte	0x216
 1845 0222 6B000000 		.4byte	0x6b
 1846 0226 02       		.uleb128 0x2
 1847 0227 91       		.byte	0x91
 1848 0228 76       		.sleb128 -10
 1849 0229 0B       		.uleb128 0xb
 1850 022a 53030000 		.4byte	.LASF25
 1851 022e 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 58


 1852 022f 1702     		.2byte	0x217
 1853 0231 6B000000 		.4byte	0x6b
 1854 0235 02       		.uleb128 0x2
 1855 0236 91       		.byte	0x91
 1856 0237 75       		.sleb128 -11
 1857 0238 00       		.byte	0
 1858 0239 0D       		.uleb128 0xd
 1859 023a 80010000 		.4byte	.LASF37
 1860 023e 01       		.byte	0x1
 1861 023f 4C02     		.2byte	0x24c
 1862 0241 6B000000 		.4byte	0x6b
 1863 0245 00000000 		.4byte	.LFB6
 1864 0249 24010000 		.4byte	.LFE6-.LFB6
 1865 024d 01       		.uleb128 0x1
 1866 024e 9C       		.byte	0x9c
 1867 024f CC020000 		.4byte	0x2cc
 1868 0253 0C       		.uleb128 0xc
 1869 0254 CD020000 		.4byte	.LASF21
 1870 0258 01       		.byte	0x1
 1871 0259 4C02     		.2byte	0x24c
 1872 025b 6B000000 		.4byte	0x6b
 1873 025f 02       		.uleb128 0x2
 1874 0260 91       		.byte	0x91
 1875 0261 67       		.sleb128 -25
 1876 0262 0B       		.uleb128 0xb
 1877 0263 2F050000 		.4byte	.LASF32
 1878 0267 01       		.byte	0x1
 1879 0268 4F02     		.2byte	0x24f
 1880 026a 6B000000 		.4byte	0x6b
 1881 026e 02       		.uleb128 0x2
 1882 026f 91       		.byte	0x91
 1883 0270 77       		.sleb128 -9
 1884 0271 0A       		.uleb128 0xa
 1885 0272 706F7300 		.ascii	"pos\000"
 1886 0276 01       		.byte	0x1
 1887 0277 5102     		.2byte	0x251
 1888 0279 6B000000 		.4byte	0x6b
 1889 027d 02       		.uleb128 0x2
 1890 027e 91       		.byte	0x91
 1891 027f 76       		.sleb128 -10
 1892 0280 0B       		.uleb128 0xb
 1893 0281 27040000 		.4byte	.LASF33
 1894 0285 01       		.byte	0x1
 1895 0286 5202     		.2byte	0x252
 1896 0288 6B000000 		.4byte	0x6b
 1897 028c 02       		.uleb128 0x2
 1898 028d 91       		.byte	0x91
 1899 028e 75       		.sleb128 -11
 1900 028f 0B       		.uleb128 0xb
 1901 0290 20040000 		.4byte	.LASF23
 1902 0294 01       		.byte	0x1
 1903 0295 5402     		.2byte	0x254
 1904 0297 6B000000 		.4byte	0x6b
 1905 029b 02       		.uleb128 0x2
 1906 029c 91       		.byte	0x91
 1907 029d 74       		.sleb128 -12
 1908 029e 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 59


 1909 029f 64000000 		.4byte	.LASF34
 1910 02a3 01       		.byte	0x1
 1911 02a4 5502     		.2byte	0x255
 1912 02a6 77000000 		.4byte	0x77
 1913 02aa 02       		.uleb128 0x2
 1914 02ab 91       		.byte	0x91
 1915 02ac 72       		.sleb128 -14
 1916 02ad 0B       		.uleb128 0xb
 1917 02ae F4010000 		.4byte	.LASF35
 1918 02b2 01       		.byte	0x1
 1919 02b3 5602     		.2byte	0x256
 1920 02b5 77000000 		.4byte	0x77
 1921 02b9 02       		.uleb128 0x2
 1922 02ba 91       		.byte	0x91
 1923 02bb 70       		.sleb128 -16
 1924 02bc 0B       		.uleb128 0xb
 1925 02bd F3020000 		.4byte	.LASF36
 1926 02c1 01       		.byte	0x1
 1927 02c2 5702     		.2byte	0x257
 1928 02c4 6B000000 		.4byte	0x6b
 1929 02c8 02       		.uleb128 0x2
 1930 02c9 91       		.byte	0x91
 1931 02ca 6F       		.sleb128 -17
 1932 02cb 00       		.byte	0
 1933 02cc 0E       		.uleb128 0xe
 1934 02cd BB050000 		.4byte	.LASF38
 1935 02d1 01       		.byte	0x1
 1936 02d2 9C02     		.2byte	0x29c
 1937 02d4 6B000000 		.4byte	0x6b
 1938 02d8 00000000 		.4byte	.LFB7
 1939 02dc 54000000 		.4byte	.LFE7-.LFB7
 1940 02e0 01       		.uleb128 0x1
 1941 02e1 9C       		.byte	0x9c
 1942 02e2 23030000 		.4byte	0x323
 1943 02e6 0C       		.uleb128 0xc
 1944 02e7 20040000 		.4byte	.LASF23
 1945 02eb 01       		.byte	0x1
 1946 02ec 9C02     		.2byte	0x29c
 1947 02ee 6B000000 		.4byte	0x6b
 1948 02f2 02       		.uleb128 0x2
 1949 02f3 91       		.byte	0x91
 1950 02f4 6F       		.sleb128 -17
 1951 02f5 0B       		.uleb128 0xb
 1952 02f6 61010000 		.4byte	.LASF39
 1953 02fa 01       		.byte	0x1
 1954 02fb 9F02     		.2byte	0x29f
 1955 02fd 6B000000 		.4byte	0x6b
 1956 0301 02       		.uleb128 0x2
 1957 0302 91       		.byte	0x91
 1958 0303 77       		.sleb128 -9
 1959 0304 0B       		.uleb128 0xb
 1960 0305 6A010000 		.4byte	.LASF40
 1961 0309 01       		.byte	0x1
 1962 030a A002     		.2byte	0x2a0
 1963 030c 6B000000 		.4byte	0x6b
 1964 0310 02       		.uleb128 0x2
 1965 0311 91       		.byte	0x91
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 60


 1966 0312 75       		.sleb128 -11
 1967 0313 0B       		.uleb128 0xb
 1968 0314 A1010000 		.4byte	.LASF41
 1969 0318 01       		.byte	0x1
 1970 0319 A102     		.2byte	0x2a1
 1971 031b 6B000000 		.4byte	0x6b
 1972 031f 02       		.uleb128 0x2
 1973 0320 91       		.byte	0x91
 1974 0321 76       		.sleb128 -10
 1975 0322 00       		.byte	0
 1976 0323 0E       		.uleb128 0xe
 1977 0324 3D050000 		.4byte	.LASF42
 1978 0328 01       		.byte	0x1
 1979 0329 C802     		.2byte	0x2c8
 1980 032b 6B000000 		.4byte	0x6b
 1981 032f 00000000 		.4byte	.LFB8
 1982 0333 38000000 		.4byte	.LFE8-.LFB8
 1983 0337 01       		.uleb128 0x1
 1984 0338 9C       		.byte	0x9c
 1985 0339 5A030000 		.4byte	0x35a
 1986 033d 0A       		.uleb128 0xa
 1987 033e 6900     		.ascii	"i\000"
 1988 0340 01       		.byte	0x1
 1989 0341 CB02     		.2byte	0x2cb
 1990 0343 6B000000 		.4byte	0x6b
 1991 0347 02       		.uleb128 0x2
 1992 0348 91       		.byte	0x91
 1993 0349 77       		.sleb128 -9
 1994 034a 0B       		.uleb128 0xb
 1995 034b A1010000 		.4byte	.LASF41
 1996 034f 01       		.byte	0x1
 1997 0350 CC02     		.2byte	0x2cc
 1998 0352 6B000000 		.4byte	0x6b
 1999 0356 02       		.uleb128 0x2
 2000 0357 91       		.byte	0x91
 2001 0358 76       		.sleb128 -10
 2002 0359 00       		.byte	0
 2003 035a 0F       		.uleb128 0xf
 2004 035b B8040000 		.4byte	.LASF43
 2005 035f 01       		.byte	0x1
 2006 0360 F602     		.2byte	0x2f6
 2007 0362 00000000 		.4byte	.LFB9
 2008 0366 68000000 		.4byte	.LFE9-.LFB9
 2009 036a 01       		.uleb128 0x1
 2010 036b 9C       		.byte	0x9c
 2011 036c BC030000 		.4byte	0x3bc
 2012 0370 0C       		.uleb128 0xc
 2013 0371 20040000 		.4byte	.LASF23
 2014 0375 01       		.byte	0x1
 2015 0376 F602     		.2byte	0x2f6
 2016 0378 6B000000 		.4byte	0x6b
 2017 037c 02       		.uleb128 0x2
 2018 037d 91       		.byte	0x91
 2019 037e 6F       		.sleb128 -17
 2020 037f 0A       		.uleb128 0xa
 2021 0380 706F7300 		.ascii	"pos\000"
 2022 0384 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 61


 2023 0385 F902     		.2byte	0x2f9
 2024 0387 6B000000 		.4byte	0x6b
 2025 038b 02       		.uleb128 0x2
 2026 038c 91       		.byte	0x91
 2027 038d 75       		.sleb128 -11
 2028 038e 0B       		.uleb128 0xb
 2029 038f 53030000 		.4byte	.LASF25
 2030 0393 01       		.byte	0x1
 2031 0394 FA02     		.2byte	0x2fa
 2032 0396 6B000000 		.4byte	0x6b
 2033 039a 02       		.uleb128 0x2
 2034 039b 91       		.byte	0x91
 2035 039c 74       		.sleb128 -12
 2036 039d 0B       		.uleb128 0xb
 2037 039e 61010000 		.4byte	.LASF39
 2038 03a2 01       		.byte	0x1
 2039 03a3 FB02     		.2byte	0x2fb
 2040 03a5 6B000000 		.4byte	0x6b
 2041 03a9 02       		.uleb128 0x2
 2042 03aa 91       		.byte	0x91
 2043 03ab 77       		.sleb128 -9
 2044 03ac 0B       		.uleb128 0xb
 2045 03ad 6A010000 		.4byte	.LASF40
 2046 03b1 01       		.byte	0x1
 2047 03b2 FC02     		.2byte	0x2fc
 2048 03b4 6B000000 		.4byte	0x6b
 2049 03b8 02       		.uleb128 0x2
 2050 03b9 91       		.byte	0x91
 2051 03ba 76       		.sleb128 -10
 2052 03bb 00       		.byte	0
 2053 03bc 0F       		.uleb128 0xf
 2054 03bd 26060000 		.4byte	.LASF44
 2055 03c1 01       		.byte	0x1
 2056 03c2 2803     		.2byte	0x328
 2057 03c4 00000000 		.4byte	.LFB10
 2058 03c8 6C000000 		.4byte	.LFE10-.LFB10
 2059 03cc 01       		.uleb128 0x1
 2060 03cd 9C       		.byte	0x9c
 2061 03ce 1E040000 		.4byte	0x41e
 2062 03d2 0C       		.uleb128 0xc
 2063 03d3 20040000 		.4byte	.LASF23
 2064 03d7 01       		.byte	0x1
 2065 03d8 2803     		.2byte	0x328
 2066 03da 6B000000 		.4byte	0x6b
 2067 03de 02       		.uleb128 0x2
 2068 03df 91       		.byte	0x91
 2069 03e0 6F       		.sleb128 -17
 2070 03e1 0A       		.uleb128 0xa
 2071 03e2 706F7300 		.ascii	"pos\000"
 2072 03e6 01       		.byte	0x1
 2073 03e7 2B03     		.2byte	0x32b
 2074 03e9 6B000000 		.4byte	0x6b
 2075 03ed 02       		.uleb128 0x2
 2076 03ee 91       		.byte	0x91
 2077 03ef 75       		.sleb128 -11
 2078 03f0 0B       		.uleb128 0xb
 2079 03f1 53030000 		.4byte	.LASF25
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 62


 2080 03f5 01       		.byte	0x1
 2081 03f6 2C03     		.2byte	0x32c
 2082 03f8 6B000000 		.4byte	0x6b
 2083 03fc 02       		.uleb128 0x2
 2084 03fd 91       		.byte	0x91
 2085 03fe 74       		.sleb128 -12
 2086 03ff 0B       		.uleb128 0xb
 2087 0400 61010000 		.4byte	.LASF39
 2088 0404 01       		.byte	0x1
 2089 0405 2D03     		.2byte	0x32d
 2090 0407 6B000000 		.4byte	0x6b
 2091 040b 02       		.uleb128 0x2
 2092 040c 91       		.byte	0x91
 2093 040d 77       		.sleb128 -9
 2094 040e 0B       		.uleb128 0xb
 2095 040f 6A010000 		.4byte	.LASF40
 2096 0413 01       		.byte	0x1
 2097 0414 2E03     		.2byte	0x32e
 2098 0416 6B000000 		.4byte	0x6b
 2099 041a 02       		.uleb128 0x2
 2100 041b 91       		.byte	0x91
 2101 041c 76       		.sleb128 -10
 2102 041d 00       		.byte	0
 2103 041e 0D       		.uleb128 0xd
 2104 041f 78030000 		.4byte	.LASF45
 2105 0423 01       		.byte	0x1
 2106 0424 5A03     		.2byte	0x35a
 2107 0426 6B000000 		.4byte	0x6b
 2108 042a 00000000 		.4byte	.LFB11
 2109 042e 78000000 		.4byte	.LFE11-.LFB11
 2110 0432 01       		.uleb128 0x1
 2111 0433 9C       		.byte	0x9c
 2112 0434 A0040000 		.4byte	0x4a0
 2113 0438 0C       		.uleb128 0xc
 2114 0439 F6040000 		.4byte	.LASF46
 2115 043d 01       		.byte	0x1
 2116 043e 5A03     		.2byte	0x35a
 2117 0440 6B000000 		.4byte	0x6b
 2118 0444 02       		.uleb128 0x2
 2119 0445 91       		.byte	0x91
 2120 0446 6F       		.sleb128 -17
 2121 0447 0C       		.uleb128 0xc
 2122 0448 2B000000 		.4byte	.LASF47
 2123 044c 01       		.byte	0x1
 2124 044d 5A03     		.2byte	0x35a
 2125 044f 6B000000 		.4byte	0x6b
 2126 0453 02       		.uleb128 0x2
 2127 0454 91       		.byte	0x91
 2128 0455 6E       		.sleb128 -18
 2129 0456 0C       		.uleb128 0xc
 2130 0457 64000000 		.4byte	.LASF34
 2131 045b 01       		.byte	0x1
 2132 045c 5A03     		.2byte	0x35a
 2133 045e 77000000 		.4byte	0x77
 2134 0462 02       		.uleb128 0x2
 2135 0463 91       		.byte	0x91
 2136 0464 6C       		.sleb128 -20
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 63


 2137 0465 0A       		.uleb128 0xa
 2138 0466 6900     		.ascii	"i\000"
 2139 0468 01       		.byte	0x1
 2140 0469 5E03     		.2byte	0x35e
 2141 046b 6B000000 		.4byte	0x6b
 2142 046f 02       		.uleb128 0x2
 2143 0470 91       		.byte	0x91
 2144 0471 77       		.sleb128 -9
 2145 0472 0B       		.uleb128 0xb
 2146 0473 2E040000 		.4byte	.LASF48
 2147 0477 01       		.byte	0x1
 2148 0478 6803     		.2byte	0x368
 2149 047a 6B000000 		.4byte	0x6b
 2150 047e 02       		.uleb128 0x2
 2151 047f 91       		.byte	0x91
 2152 0480 76       		.sleb128 -10
 2153 0481 0B       		.uleb128 0xb
 2154 0482 47020000 		.4byte	.LASF49
 2155 0486 01       		.byte	0x1
 2156 0487 6903     		.2byte	0x369
 2157 0489 77000000 		.4byte	0x77
 2158 048d 02       		.uleb128 0x2
 2159 048e 91       		.byte	0x91
 2160 048f 74       		.sleb128 -12
 2161 0490 0B       		.uleb128 0xb
 2162 0491 39020000 		.4byte	.LASF50
 2163 0495 01       		.byte	0x1
 2164 0496 6A03     		.2byte	0x36a
 2165 0498 A0040000 		.4byte	0x4a0
 2166 049c 02       		.uleb128 0x2
 2167 049d 91       		.byte	0x91
 2168 049e 70       		.sleb128 -16
 2169 049f 00       		.byte	0
 2170 04a0 10       		.uleb128 0x10
 2171 04a1 04       		.byte	0x4
 2172 04a2 77000000 		.4byte	0x77
 2173 04a6 0D       		.uleb128 0xd
 2174 04a7 D4020000 		.4byte	.LASF51
 2175 04ab 01       		.byte	0x1
 2176 04ac F603     		.2byte	0x3f6
 2177 04ae 6B000000 		.4byte	0x6b
 2178 04b2 00000000 		.4byte	.LFB12
 2179 04b6 58010000 		.4byte	.LFE12-.LFB12
 2180 04ba 01       		.uleb128 0x1
 2181 04bb 9C       		.byte	0x9c
 2182 04bc 78050000 		.4byte	0x578
 2183 04c0 0C       		.uleb128 0xc
 2184 04c1 2E040000 		.4byte	.LASF48
 2185 04c5 01       		.byte	0x1
 2186 04c6 F603     		.2byte	0x3f6
 2187 04c8 6B000000 		.4byte	0x6b
 2188 04cc 02       		.uleb128 0x2
 2189 04cd 91       		.byte	0x91
 2190 04ce 5F       		.sleb128 -33
 2191 04cf 0C       		.uleb128 0xc
 2192 04d0 F6040000 		.4byte	.LASF46
 2193 04d4 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 64


 2194 04d5 F603     		.2byte	0x3f6
 2195 04d7 6B000000 		.4byte	0x6b
 2196 04db 02       		.uleb128 0x2
 2197 04dc 91       		.byte	0x91
 2198 04dd 5E       		.sleb128 -34
 2199 04de 0C       		.uleb128 0xc
 2200 04df 2B000000 		.4byte	.LASF47
 2201 04e3 01       		.byte	0x1
 2202 04e4 F703     		.2byte	0x3f7
 2203 04e6 6B000000 		.4byte	0x6b
 2204 04ea 02       		.uleb128 0x2
 2205 04eb 91       		.byte	0x91
 2206 04ec 5D       		.sleb128 -35
 2207 04ed 0C       		.uleb128 0xc
 2208 04ee 6F040000 		.4byte	.LASF52
 2209 04f2 01       		.byte	0x1
 2210 04f3 F703     		.2byte	0x3f7
 2211 04f5 77000000 		.4byte	0x77
 2212 04f9 02       		.uleb128 0x2
 2213 04fa 91       		.byte	0x91
 2214 04fb 5A       		.sleb128 -38
 2215 04fc 0C       		.uleb128 0xc
 2216 04fd 07040000 		.4byte	.LASF30
 2217 0501 01       		.byte	0x1
 2218 0502 F703     		.2byte	0x3f7
 2219 0504 77000000 		.4byte	0x77
 2220 0508 02       		.uleb128 0x2
 2221 0509 91       		.byte	0x91
 2222 050a 00       		.sleb128 0
 2223 050b 0B       		.uleb128 0xb
 2224 050c 28010000 		.4byte	.LASF53
 2225 0510 01       		.byte	0x1
 2226 0511 FB03     		.2byte	0x3fb
 2227 0513 6B000000 		.4byte	0x6b
 2228 0517 02       		.uleb128 0x2
 2229 0518 91       		.byte	0x91
 2230 0519 77       		.sleb128 -9
 2231 051a 0B       		.uleb128 0xb
 2232 051b 15020000 		.4byte	.LASF54
 2233 051f 01       		.byte	0x1
 2234 0520 FC03     		.2byte	0x3fc
 2235 0522 6B000000 		.4byte	0x6b
 2236 0526 02       		.uleb128 0x2
 2237 0527 91       		.byte	0x91
 2238 0528 76       		.sleb128 -10
 2239 0529 0B       		.uleb128 0xb
 2240 052a A4020000 		.4byte	.LASF55
 2241 052e 01       		.byte	0x1
 2242 052f 0404     		.2byte	0x404
 2243 0531 78050000 		.4byte	0x578
 2244 0535 05       		.uleb128 0x5
 2245 0536 03       		.byte	0x3
 2246 0537 04000000 		.4byte	CapSense_CSD_centroid.5249
 2247 053b 0B       		.uleb128 0xb
 2248 053c 6F020000 		.4byte	.LASF56
 2249 0540 01       		.byte	0x1
 2250 0541 0604     		.2byte	0x406
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 65


 2251 0543 6B000000 		.4byte	0x6b
 2252 0547 02       		.uleb128 0x2
 2253 0548 91       		.byte	0x91
 2254 0549 67       		.sleb128 -25
 2255 054a 0B       		.uleb128 0xb
 2256 054b B0010000 		.4byte	.LASF57
 2257 054f 01       		.byte	0x1
 2258 0550 0704     		.2byte	0x407
 2259 0552 83000000 		.4byte	0x83
 2260 0556 02       		.uleb128 0x2
 2261 0557 91       		.byte	0x91
 2262 0558 6C       		.sleb128 -20
 2263 0559 0B       		.uleb128 0xb
 2264 055a BA010000 		.4byte	.LASF58
 2265 055e 01       		.byte	0x1
 2266 055f 0804     		.2byte	0x408
 2267 0561 9B000000 		.4byte	0x9b
 2268 0565 02       		.uleb128 0x2
 2269 0566 91       		.byte	0x91
 2270 0567 68       		.sleb128 -24
 2271 0568 0B       		.uleb128 0xb
 2272 0569 39020000 		.4byte	.LASF50
 2273 056d 01       		.byte	0x1
 2274 056e 0904     		.2byte	0x409
 2275 0570 A0040000 		.4byte	0x4a0
 2276 0574 02       		.uleb128 0x2
 2277 0575 91       		.byte	0x91
 2278 0576 70       		.sleb128 -16
 2279 0577 00       		.byte	0
 2280 0578 11       		.uleb128 0x11
 2281 0579 77000000 		.4byte	0x77
 2282 057d 88050000 		.4byte	0x588
 2283 0581 12       		.uleb128 0x12
 2284 0582 C3000000 		.4byte	0xc3
 2285 0586 02       		.byte	0x2
 2286 0587 00       		.byte	0
 2287 0588 0E       		.uleb128 0xe
 2288 0589 31000000 		.4byte	.LASF59
 2289 058d 01       		.byte	0x1
 2290 058e C304     		.2byte	0x4c3
 2291 0590 77000000 		.4byte	0x77
 2292 0594 00000000 		.4byte	.LFB13
 2293 0598 78000000 		.4byte	.LFE13-.LFB13
 2294 059c 01       		.uleb128 0x1
 2295 059d 9C       		.byte	0x9c
 2296 059e EE050000 		.4byte	0x5ee
 2297 05a2 0C       		.uleb128 0xc
 2298 05a3 20040000 		.4byte	.LASF23
 2299 05a7 01       		.byte	0x1
 2300 05a8 C304     		.2byte	0x4c3
 2301 05aa 6B000000 		.4byte	0x6b
 2302 05ae 02       		.uleb128 0x2
 2303 05af 91       		.byte	0x91
 2304 05b0 67       		.sleb128 -25
 2305 05b1 0B       		.uleb128 0xb
 2306 05b2 2E040000 		.4byte	.LASF48
 2307 05b6 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 66


 2308 05b7 D604     		.2byte	0x4d6
 2309 05b9 6B000000 		.4byte	0x6b
 2310 05bd 02       		.uleb128 0x2
 2311 05be 91       		.byte	0x91
 2312 05bf 6B       		.sleb128 -21
 2313 05c0 0B       		.uleb128 0xb
 2314 05c1 6F020000 		.4byte	.LASF56
 2315 05c5 01       		.byte	0x1
 2316 05c6 D704     		.2byte	0x4d7
 2317 05c8 77000000 		.4byte	0x77
 2318 05cc 02       		.uleb128 0x2
 2319 05cd 91       		.byte	0x91
 2320 05ce 6E       		.sleb128 -18
 2321 05cf 0B       		.uleb128 0xb
 2322 05d0 F6040000 		.4byte	.LASF46
 2323 05d4 01       		.byte	0x1
 2324 05d5 D804     		.2byte	0x4d8
 2325 05d7 6B000000 		.4byte	0x6b
 2326 05db 02       		.uleb128 0x2
 2327 05dc 91       		.byte	0x91
 2328 05dd 6D       		.sleb128 -19
 2329 05de 0B       		.uleb128 0xb
 2330 05df 2B000000 		.4byte	.LASF47
 2331 05e3 01       		.byte	0x1
 2332 05e4 D904     		.2byte	0x4d9
 2333 05e6 6B000000 		.4byte	0x6b
 2334 05ea 02       		.uleb128 0x2
 2335 05eb 91       		.byte	0x91
 2336 05ec 6C       		.sleb128 -20
 2337 05ed 00       		.byte	0
 2338 05ee 11       		.uleb128 0x11
 2339 05ef 77000000 		.4byte	0x77
 2340 05f3 FE050000 		.4byte	0x5fe
 2341 05f7 12       		.uleb128 0x12
 2342 05f8 C3000000 		.4byte	0xc3
 2343 05fc 06       		.byte	0x6
 2344 05fd 00       		.byte	0
 2345 05fe 13       		.uleb128 0x13
 2346 05ff 36040000 		.4byte	.LASF60
 2347 0603 03       		.byte	0x3
 2348 0604 BF02     		.2byte	0x2bf
 2349 0606 EE050000 		.4byte	0x5ee
 2350 060a 11       		.uleb128 0x11
 2351 060b 6B000000 		.4byte	0x6b
 2352 060f 1A060000 		.4byte	0x61a
 2353 0613 12       		.uleb128 0x12
 2354 0614 C3000000 		.4byte	0xc3
 2355 0618 00       		.byte	0
 2356 0619 00       		.byte	0
 2357 061a 13       		.uleb128 0x13
 2358 061b 5A030000 		.4byte	.LASF61
 2359 061f 04       		.byte	0x4
 2360 0620 0501     		.2byte	0x105
 2361 0622 0A060000 		.4byte	0x60a
 2362 0626 11       		.uleb128 0x11
 2363 0627 36060000 		.4byte	0x636
 2364 062b 36060000 		.4byte	0x636
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 67


 2365 062f 12       		.uleb128 0x12
 2366 0630 C3000000 		.4byte	0xc3
 2367 0634 06       		.byte	0x6
 2368 0635 00       		.byte	0
 2369 0636 14       		.uleb128 0x14
 2370 0637 6B000000 		.4byte	0x6b
 2371 063b 13       		.uleb128 0x13
 2372 063c C6010000 		.4byte	.LASF62
 2373 0640 04       		.byte	0x4
 2374 0641 0601     		.2byte	0x106
 2375 0643 47060000 		.4byte	0x647
 2376 0647 14       		.uleb128 0x14
 2377 0648 26060000 		.4byte	0x626
 2378 064c 15       		.uleb128 0x15
 2379 064d 1D020000 		.4byte	.LASF63
 2380 0651 01       		.byte	0x1
 2381 0652 29       		.byte	0x29
 2382 0653 EE050000 		.4byte	0x5ee
 2383 0657 05       		.uleb128 0x5
 2384 0658 03       		.byte	0x3
 2385 0659 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2386 065d 11       		.uleb128 0x11
 2387 065e 6B000000 		.4byte	0x6b
 2388 0662 6D060000 		.4byte	0x66d
 2389 0666 12       		.uleb128 0x12
 2390 0667 C3000000 		.4byte	0xc3
 2391 066b 06       		.byte	0x6
 2392 066c 00       		.byte	0
 2393 066d 15       		.uleb128 0x15
 2394 066e FF050000 		.4byte	.LASF64
 2395 0672 01       		.byte	0x1
 2396 0673 2A       		.byte	0x2a
 2397 0674 5D060000 		.4byte	0x65d
 2398 0678 05       		.uleb128 0x5
 2399 0679 03       		.byte	0x3
 2400 067a 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2401 067e 15       		.uleb128 0x15
 2402 067f 8A020000 		.4byte	.LASF65
 2403 0683 01       		.byte	0x1
 2404 0684 2B       		.byte	0x2b
 2405 0685 EE050000 		.4byte	0x5ee
 2406 0689 05       		.uleb128 0x5
 2407 068a 03       		.byte	0x3
 2408 068b 00000000 		.4byte	CapSense_CSD_sensorSignal
 2409 068f 15       		.uleb128 0x15
 2410 0690 41060000 		.4byte	.LASF66
 2411 0694 01       		.byte	0x1
 2412 0695 2C       		.byte	0x2c
 2413 0696 0A060000 		.4byte	0x60a
 2414 069a 05       		.uleb128 0x5
 2415 069b 03       		.byte	0x3
 2416 069c 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2417 06a0 15       		.uleb128 0x15
 2418 06a1 97030000 		.4byte	.LASF67
 2419 06a5 01       		.byte	0x1
 2420 06a6 2E       		.byte	0x2e
 2421 06a7 5D060000 		.4byte	0x65d
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 68


 2422 06ab 05       		.uleb128 0x5
 2423 06ac 03       		.byte	0x3
 2424 06ad 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 2425 06b1 11       		.uleb128 0x11
 2426 06b2 C1060000 		.4byte	0x6c1
 2427 06b6 C1060000 		.4byte	0x6c1
 2428 06ba 12       		.uleb128 0x12
 2429 06bb C3000000 		.4byte	0xc3
 2430 06bf 02       		.byte	0x2
 2431 06c0 00       		.byte	0
 2432 06c1 14       		.uleb128 0x14
 2433 06c2 77000000 		.4byte	0x77
 2434 06c6 15       		.uleb128 0x15
 2435 06c7 DC030000 		.4byte	.LASF68
 2436 06cb 01       		.byte	0x1
 2437 06cc 30       		.byte	0x30
 2438 06cd D7060000 		.4byte	0x6d7
 2439 06d1 05       		.uleb128 0x5
 2440 06d2 03       		.byte	0x3
 2441 06d3 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2442 06d7 14       		.uleb128 0x14
 2443 06d8 B1060000 		.4byte	0x6b1
 2444 06dc 15       		.uleb128 0x15
 2445 06dd 97040000 		.4byte	.LASF69
 2446 06e1 01       		.byte	0x1
 2447 06e2 34       		.byte	0x34
 2448 06e3 ED060000 		.4byte	0x6ed
 2449 06e7 05       		.uleb128 0x5
 2450 06e8 03       		.byte	0x3
 2451 06e9 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2452 06ed 14       		.uleb128 0x14
 2453 06ee B1060000 		.4byte	0x6b1
 2454 06f2 15       		.uleb128 0x15
 2455 06f3 17050000 		.4byte	.LASF70
 2456 06f7 01       		.byte	0x1
 2457 06f8 38       		.byte	0x38
 2458 06f9 03070000 		.4byte	0x703
 2459 06fd 05       		.uleb128 0x5
 2460 06fe 03       		.byte	0x3
 2461 06ff 00000000 		.4byte	CapSense_CSD_hysteresis
 2462 0703 14       		.uleb128 0x14
 2463 0704 B1060000 		.4byte	0x6b1
 2464 0708 11       		.uleb128 0x11
 2465 0709 36060000 		.4byte	0x636
 2466 070d 18070000 		.4byte	0x718
 2467 0711 12       		.uleb128 0x12
 2468 0712 C3000000 		.4byte	0xc3
 2469 0716 02       		.byte	0x2
 2470 0717 00       		.byte	0
 2471 0718 15       		.uleb128 0x15
 2472 0719 4C020000 		.4byte	.LASF71
 2473 071d 01       		.byte	0x1
 2474 071e 3C       		.byte	0x3c
 2475 071f 29070000 		.4byte	0x729
 2476 0723 05       		.uleb128 0x5
 2477 0724 03       		.byte	0x3
 2478 0725 00000000 		.4byte	CapSense_CSD_debounce
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 69


 2479 0729 14       		.uleb128 0x14
 2480 072a 08070000 		.4byte	0x708
 2481 072e 11       		.uleb128 0x11
 2482 072f 6B000000 		.4byte	0x6b
 2483 0733 3E070000 		.4byte	0x73e
 2484 0737 12       		.uleb128 0x12
 2485 0738 C3000000 		.4byte	0xc3
 2486 073c 02       		.byte	0x2
 2487 073d 00       		.byte	0
 2488 073e 15       		.uleb128 0x15
 2489 073f E2050000 		.4byte	.LASF72
 2490 0743 01       		.byte	0x1
 2491 0744 40       		.byte	0x40
 2492 0745 2E070000 		.4byte	0x72e
 2493 0749 05       		.uleb128 0x5
 2494 074a 03       		.byte	0x3
 2495 074b 00000000 		.4byte	CapSense_CSD_debounceCounter
 2496 074f 15       		.uleb128 0x15
 2497 0750 39030000 		.4byte	.LASF73
 2498 0754 01       		.byte	0x1
 2499 0755 44       		.byte	0x44
 2500 0756 60070000 		.4byte	0x760
 2501 075a 05       		.uleb128 0x5
 2502 075b 03       		.byte	0x3
 2503 075c 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2504 0760 14       		.uleb128 0x14
 2505 0761 08070000 		.4byte	0x708
 2506 0765 15       		.uleb128 0x15
 2507 0766 7A040000 		.4byte	.LASF74
 2508 076a 01       		.byte	0x1
 2509 076b 4B       		.byte	0x4b
 2510 076c 76070000 		.4byte	0x776
 2511 0770 05       		.uleb128 0x5
 2512 0771 03       		.byte	0x3
 2513 0772 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2514 0776 14       		.uleb128 0x14
 2515 0777 08070000 		.4byte	0x708
 2516 077b 11       		.uleb128 0x11
 2517 077c C1060000 		.4byte	0x6c1
 2518 0780 8B070000 		.4byte	0x78b
 2519 0784 12       		.uleb128 0x12
 2520 0785 C3000000 		.4byte	0xc3
 2521 0789 00       		.byte	0
 2522 078a 00       		.byte	0
 2523 078b 15       		.uleb128 0x15
 2524 078c FD040000 		.4byte	.LASF75
 2525 0790 01       		.byte	0x1
 2526 0791 52       		.byte	0x52
 2527 0792 9C070000 		.4byte	0x79c
 2528 0796 05       		.uleb128 0x5
 2529 0797 03       		.byte	0x3
 2530 0798 00000000 		.4byte	CapSense_CSD_centroidMult
 2531 079c 14       		.uleb128 0x14
 2532 079d 7B070000 		.4byte	0x77b
 2533 07a1 00       		.byte	0
 2534              		.section	.debug_abbrev,"",%progbits
 2535              	.Ldebug_abbrev0:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 70


 2536 0000 01       		.uleb128 0x1
 2537 0001 11       		.uleb128 0x11
 2538 0002 01       		.byte	0x1
 2539 0003 25       		.uleb128 0x25
 2540 0004 0E       		.uleb128 0xe
 2541 0005 13       		.uleb128 0x13
 2542 0006 0B       		.uleb128 0xb
 2543 0007 03       		.uleb128 0x3
 2544 0008 0E       		.uleb128 0xe
 2545 0009 1B       		.uleb128 0x1b
 2546 000a 0E       		.uleb128 0xe
 2547 000b 55       		.uleb128 0x55
 2548 000c 17       		.uleb128 0x17
 2549 000d 11       		.uleb128 0x11
 2550 000e 01       		.uleb128 0x1
 2551 000f 10       		.uleb128 0x10
 2552 0010 17       		.uleb128 0x17
 2553 0011 00       		.byte	0
 2554 0012 00       		.byte	0
 2555 0013 02       		.uleb128 0x2
 2556 0014 24       		.uleb128 0x24
 2557 0015 00       		.byte	0
 2558 0016 0B       		.uleb128 0xb
 2559 0017 0B       		.uleb128 0xb
 2560 0018 3E       		.uleb128 0x3e
 2561 0019 0B       		.uleb128 0xb
 2562 001a 03       		.uleb128 0x3
 2563 001b 0E       		.uleb128 0xe
 2564 001c 00       		.byte	0
 2565 001d 00       		.byte	0
 2566 001e 03       		.uleb128 0x3
 2567 001f 24       		.uleb128 0x24
 2568 0020 00       		.byte	0
 2569 0021 0B       		.uleb128 0xb
 2570 0022 0B       		.uleb128 0xb
 2571 0023 3E       		.uleb128 0x3e
 2572 0024 0B       		.uleb128 0xb
 2573 0025 03       		.uleb128 0x3
 2574 0026 08       		.uleb128 0x8
 2575 0027 00       		.byte	0
 2576 0028 00       		.byte	0
 2577 0029 04       		.uleb128 0x4
 2578 002a 16       		.uleb128 0x16
 2579 002b 00       		.byte	0
 2580 002c 03       		.uleb128 0x3
 2581 002d 0E       		.uleb128 0xe
 2582 002e 3A       		.uleb128 0x3a
 2583 002f 0B       		.uleb128 0xb
 2584 0030 3B       		.uleb128 0x3b
 2585 0031 05       		.uleb128 0x5
 2586 0032 49       		.uleb128 0x49
 2587 0033 13       		.uleb128 0x13
 2588 0034 00       		.byte	0
 2589 0035 00       		.byte	0
 2590 0036 05       		.uleb128 0x5
 2591 0037 2E       		.uleb128 0x2e
 2592 0038 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 71


 2593 0039 3F       		.uleb128 0x3f
 2594 003a 19       		.uleb128 0x19
 2595 003b 03       		.uleb128 0x3
 2596 003c 0E       		.uleb128 0xe
 2597 003d 3A       		.uleb128 0x3a
 2598 003e 0B       		.uleb128 0xb
 2599 003f 3B       		.uleb128 0x3b
 2600 0040 0B       		.uleb128 0xb
 2601 0041 27       		.uleb128 0x27
 2602 0042 19       		.uleb128 0x19
 2603 0043 11       		.uleb128 0x11
 2604 0044 01       		.uleb128 0x1
 2605 0045 12       		.uleb128 0x12
 2606 0046 06       		.uleb128 0x6
 2607 0047 40       		.uleb128 0x40
 2608 0048 18       		.uleb128 0x18
 2609 0049 9742     		.uleb128 0x2117
 2610 004b 19       		.uleb128 0x19
 2611 004c 01       		.uleb128 0x1
 2612 004d 13       		.uleb128 0x13
 2613 004e 00       		.byte	0
 2614 004f 00       		.byte	0
 2615 0050 06       		.uleb128 0x6
 2616 0051 05       		.uleb128 0x5
 2617 0052 00       		.byte	0
 2618 0053 03       		.uleb128 0x3
 2619 0054 0E       		.uleb128 0xe
 2620 0055 3A       		.uleb128 0x3a
 2621 0056 0B       		.uleb128 0xb
 2622 0057 3B       		.uleb128 0x3b
 2623 0058 0B       		.uleb128 0xb
 2624 0059 49       		.uleb128 0x49
 2625 005a 13       		.uleb128 0x13
 2626 005b 02       		.uleb128 0x2
 2627 005c 18       		.uleb128 0x18
 2628 005d 00       		.byte	0
 2629 005e 00       		.byte	0
 2630 005f 07       		.uleb128 0x7
 2631 0060 34       		.uleb128 0x34
 2632 0061 00       		.byte	0
 2633 0062 03       		.uleb128 0x3
 2634 0063 0E       		.uleb128 0xe
 2635 0064 3A       		.uleb128 0x3a
 2636 0065 0B       		.uleb128 0xb
 2637 0066 3B       		.uleb128 0x3b
 2638 0067 0B       		.uleb128 0xb
 2639 0068 49       		.uleb128 0x49
 2640 0069 13       		.uleb128 0x13
 2641 006a 02       		.uleb128 0x2
 2642 006b 18       		.uleb128 0x18
 2643 006c 00       		.byte	0
 2644 006d 00       		.byte	0
 2645 006e 08       		.uleb128 0x8
 2646 006f 2E       		.uleb128 0x2e
 2647 0070 01       		.byte	0x1
 2648 0071 3F       		.uleb128 0x3f
 2649 0072 19       		.uleb128 0x19
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 72


 2650 0073 03       		.uleb128 0x3
 2651 0074 0E       		.uleb128 0xe
 2652 0075 3A       		.uleb128 0x3a
 2653 0076 0B       		.uleb128 0xb
 2654 0077 3B       		.uleb128 0x3b
 2655 0078 0B       		.uleb128 0xb
 2656 0079 27       		.uleb128 0x27
 2657 007a 19       		.uleb128 0x19
 2658 007b 11       		.uleb128 0x11
 2659 007c 01       		.uleb128 0x1
 2660 007d 12       		.uleb128 0x12
 2661 007e 06       		.uleb128 0x6
 2662 007f 40       		.uleb128 0x40
 2663 0080 18       		.uleb128 0x18
 2664 0081 9642     		.uleb128 0x2116
 2665 0083 19       		.uleb128 0x19
 2666 0084 01       		.uleb128 0x1
 2667 0085 13       		.uleb128 0x13
 2668 0086 00       		.byte	0
 2669 0087 00       		.byte	0
 2670 0088 09       		.uleb128 0x9
 2671 0089 2E       		.uleb128 0x2e
 2672 008a 01       		.byte	0x1
 2673 008b 3F       		.uleb128 0x3f
 2674 008c 19       		.uleb128 0x19
 2675 008d 03       		.uleb128 0x3
 2676 008e 0E       		.uleb128 0xe
 2677 008f 3A       		.uleb128 0x3a
 2678 0090 0B       		.uleb128 0xb
 2679 0091 3B       		.uleb128 0x3b
 2680 0092 05       		.uleb128 0x5
 2681 0093 27       		.uleb128 0x27
 2682 0094 19       		.uleb128 0x19
 2683 0095 11       		.uleb128 0x11
 2684 0096 01       		.uleb128 0x1
 2685 0097 12       		.uleb128 0x12
 2686 0098 06       		.uleb128 0x6
 2687 0099 40       		.uleb128 0x40
 2688 009a 18       		.uleb128 0x18
 2689 009b 9642     		.uleb128 0x2116
 2690 009d 19       		.uleb128 0x19
 2691 009e 01       		.uleb128 0x1
 2692 009f 13       		.uleb128 0x13
 2693 00a0 00       		.byte	0
 2694 00a1 00       		.byte	0
 2695 00a2 0A       		.uleb128 0xa
 2696 00a3 34       		.uleb128 0x34
 2697 00a4 00       		.byte	0
 2698 00a5 03       		.uleb128 0x3
 2699 00a6 08       		.uleb128 0x8
 2700 00a7 3A       		.uleb128 0x3a
 2701 00a8 0B       		.uleb128 0xb
 2702 00a9 3B       		.uleb128 0x3b
 2703 00aa 05       		.uleb128 0x5
 2704 00ab 49       		.uleb128 0x49
 2705 00ac 13       		.uleb128 0x13
 2706 00ad 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 73


 2707 00ae 18       		.uleb128 0x18
 2708 00af 00       		.byte	0
 2709 00b0 00       		.byte	0
 2710 00b1 0B       		.uleb128 0xb
 2711 00b2 34       		.uleb128 0x34
 2712 00b3 00       		.byte	0
 2713 00b4 03       		.uleb128 0x3
 2714 00b5 0E       		.uleb128 0xe
 2715 00b6 3A       		.uleb128 0x3a
 2716 00b7 0B       		.uleb128 0xb
 2717 00b8 3B       		.uleb128 0x3b
 2718 00b9 05       		.uleb128 0x5
 2719 00ba 49       		.uleb128 0x49
 2720 00bb 13       		.uleb128 0x13
 2721 00bc 02       		.uleb128 0x2
 2722 00bd 18       		.uleb128 0x18
 2723 00be 00       		.byte	0
 2724 00bf 00       		.byte	0
 2725 00c0 0C       		.uleb128 0xc
 2726 00c1 05       		.uleb128 0x5
 2727 00c2 00       		.byte	0
 2728 00c3 03       		.uleb128 0x3
 2729 00c4 0E       		.uleb128 0xe
 2730 00c5 3A       		.uleb128 0x3a
 2731 00c6 0B       		.uleb128 0xb
 2732 00c7 3B       		.uleb128 0x3b
 2733 00c8 05       		.uleb128 0x5
 2734 00c9 49       		.uleb128 0x49
 2735 00ca 13       		.uleb128 0x13
 2736 00cb 02       		.uleb128 0x2
 2737 00cc 18       		.uleb128 0x18
 2738 00cd 00       		.byte	0
 2739 00ce 00       		.byte	0
 2740 00cf 0D       		.uleb128 0xd
 2741 00d0 2E       		.uleb128 0x2e
 2742 00d1 01       		.byte	0x1
 2743 00d2 3F       		.uleb128 0x3f
 2744 00d3 19       		.uleb128 0x19
 2745 00d4 03       		.uleb128 0x3
 2746 00d5 0E       		.uleb128 0xe
 2747 00d6 3A       		.uleb128 0x3a
 2748 00d7 0B       		.uleb128 0xb
 2749 00d8 3B       		.uleb128 0x3b
 2750 00d9 05       		.uleb128 0x5
 2751 00da 27       		.uleb128 0x27
 2752 00db 19       		.uleb128 0x19
 2753 00dc 49       		.uleb128 0x49
 2754 00dd 13       		.uleb128 0x13
 2755 00de 11       		.uleb128 0x11
 2756 00df 01       		.uleb128 0x1
 2757 00e0 12       		.uleb128 0x12
 2758 00e1 06       		.uleb128 0x6
 2759 00e2 40       		.uleb128 0x40
 2760 00e3 18       		.uleb128 0x18
 2761 00e4 9742     		.uleb128 0x2117
 2762 00e6 19       		.uleb128 0x19
 2763 00e7 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 74


 2764 00e8 13       		.uleb128 0x13
 2765 00e9 00       		.byte	0
 2766 00ea 00       		.byte	0
 2767 00eb 0E       		.uleb128 0xe
 2768 00ec 2E       		.uleb128 0x2e
 2769 00ed 01       		.byte	0x1
 2770 00ee 3F       		.uleb128 0x3f
 2771 00ef 19       		.uleb128 0x19
 2772 00f0 03       		.uleb128 0x3
 2773 00f1 0E       		.uleb128 0xe
 2774 00f2 3A       		.uleb128 0x3a
 2775 00f3 0B       		.uleb128 0xb
 2776 00f4 3B       		.uleb128 0x3b
 2777 00f5 05       		.uleb128 0x5
 2778 00f6 27       		.uleb128 0x27
 2779 00f7 19       		.uleb128 0x19
 2780 00f8 49       		.uleb128 0x49
 2781 00f9 13       		.uleb128 0x13
 2782 00fa 11       		.uleb128 0x11
 2783 00fb 01       		.uleb128 0x1
 2784 00fc 12       		.uleb128 0x12
 2785 00fd 06       		.uleb128 0x6
 2786 00fe 40       		.uleb128 0x40
 2787 00ff 18       		.uleb128 0x18
 2788 0100 9642     		.uleb128 0x2116
 2789 0102 19       		.uleb128 0x19
 2790 0103 01       		.uleb128 0x1
 2791 0104 13       		.uleb128 0x13
 2792 0105 00       		.byte	0
 2793 0106 00       		.byte	0
 2794 0107 0F       		.uleb128 0xf
 2795 0108 2E       		.uleb128 0x2e
 2796 0109 01       		.byte	0x1
 2797 010a 3F       		.uleb128 0x3f
 2798 010b 19       		.uleb128 0x19
 2799 010c 03       		.uleb128 0x3
 2800 010d 0E       		.uleb128 0xe
 2801 010e 3A       		.uleb128 0x3a
 2802 010f 0B       		.uleb128 0xb
 2803 0110 3B       		.uleb128 0x3b
 2804 0111 05       		.uleb128 0x5
 2805 0112 27       		.uleb128 0x27
 2806 0113 19       		.uleb128 0x19
 2807 0114 11       		.uleb128 0x11
 2808 0115 01       		.uleb128 0x1
 2809 0116 12       		.uleb128 0x12
 2810 0117 06       		.uleb128 0x6
 2811 0118 40       		.uleb128 0x40
 2812 0119 18       		.uleb128 0x18
 2813 011a 9742     		.uleb128 0x2117
 2814 011c 19       		.uleb128 0x19
 2815 011d 01       		.uleb128 0x1
 2816 011e 13       		.uleb128 0x13
 2817 011f 00       		.byte	0
 2818 0120 00       		.byte	0
 2819 0121 10       		.uleb128 0x10
 2820 0122 0F       		.uleb128 0xf
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 75


 2821 0123 00       		.byte	0
 2822 0124 0B       		.uleb128 0xb
 2823 0125 0B       		.uleb128 0xb
 2824 0126 49       		.uleb128 0x49
 2825 0127 13       		.uleb128 0x13
 2826 0128 00       		.byte	0
 2827 0129 00       		.byte	0
 2828 012a 11       		.uleb128 0x11
 2829 012b 01       		.uleb128 0x1
 2830 012c 01       		.byte	0x1
 2831 012d 49       		.uleb128 0x49
 2832 012e 13       		.uleb128 0x13
 2833 012f 01       		.uleb128 0x1
 2834 0130 13       		.uleb128 0x13
 2835 0131 00       		.byte	0
 2836 0132 00       		.byte	0
 2837 0133 12       		.uleb128 0x12
 2838 0134 21       		.uleb128 0x21
 2839 0135 00       		.byte	0
 2840 0136 49       		.uleb128 0x49
 2841 0137 13       		.uleb128 0x13
 2842 0138 2F       		.uleb128 0x2f
 2843 0139 0B       		.uleb128 0xb
 2844 013a 00       		.byte	0
 2845 013b 00       		.byte	0
 2846 013c 13       		.uleb128 0x13
 2847 013d 34       		.uleb128 0x34
 2848 013e 00       		.byte	0
 2849 013f 03       		.uleb128 0x3
 2850 0140 0E       		.uleb128 0xe
 2851 0141 3A       		.uleb128 0x3a
 2852 0142 0B       		.uleb128 0xb
 2853 0143 3B       		.uleb128 0x3b
 2854 0144 05       		.uleb128 0x5
 2855 0145 49       		.uleb128 0x49
 2856 0146 13       		.uleb128 0x13
 2857 0147 3F       		.uleb128 0x3f
 2858 0148 19       		.uleb128 0x19
 2859 0149 3C       		.uleb128 0x3c
 2860 014a 19       		.uleb128 0x19
 2861 014b 00       		.byte	0
 2862 014c 00       		.byte	0
 2863 014d 14       		.uleb128 0x14
 2864 014e 26       		.uleb128 0x26
 2865 014f 00       		.byte	0
 2866 0150 49       		.uleb128 0x49
 2867 0151 13       		.uleb128 0x13
 2868 0152 00       		.byte	0
 2869 0153 00       		.byte	0
 2870 0154 15       		.uleb128 0x15
 2871 0155 34       		.uleb128 0x34
 2872 0156 00       		.byte	0
 2873 0157 03       		.uleb128 0x3
 2874 0158 0E       		.uleb128 0xe
 2875 0159 3A       		.uleb128 0x3a
 2876 015a 0B       		.uleb128 0xb
 2877 015b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 76


 2878 015c 0B       		.uleb128 0xb
 2879 015d 49       		.uleb128 0x49
 2880 015e 13       		.uleb128 0x13
 2881 015f 3F       		.uleb128 0x3f
 2882 0160 19       		.uleb128 0x19
 2883 0161 02       		.uleb128 0x2
 2884 0162 18       		.uleb128 0x18
 2885 0163 00       		.byte	0
 2886 0164 00       		.byte	0
 2887 0165 00       		.byte	0
 2888              		.section	.debug_aranges,"",%progbits
 2889 0000 84000000 		.4byte	0x84
 2890 0004 0200     		.2byte	0x2
 2891 0006 00000000 		.4byte	.Ldebug_info0
 2892 000a 04       		.byte	0x4
 2893 000b 00       		.byte	0
 2894 000c 0000     		.2byte	0
 2895 000e 0000     		.2byte	0
 2896 0010 00000000 		.4byte	.LFB0
 2897 0014 70000000 		.4byte	.LFE0-.LFB0
 2898 0018 00000000 		.4byte	.LFB1
 2899 001c 2E000000 		.4byte	.LFE1-.LFB1
 2900 0020 00000000 		.4byte	.LFB2
 2901 0024 28000000 		.4byte	.LFE2-.LFB2
 2902 0028 00000000 		.4byte	.LFB3
 2903 002c 70000000 		.4byte	.LFE3-.LFB3
 2904 0030 00000000 		.4byte	.LFB4
 2905 0034 40010000 		.4byte	.LFE4-.LFB4
 2906 0038 00000000 		.4byte	.LFB5
 2907 003c 50000000 		.4byte	.LFE5-.LFB5
 2908 0040 00000000 		.4byte	.LFB6
 2909 0044 24010000 		.4byte	.LFE6-.LFB6
 2910 0048 00000000 		.4byte	.LFB7
 2911 004c 54000000 		.4byte	.LFE7-.LFB7
 2912 0050 00000000 		.4byte	.LFB8
 2913 0054 38000000 		.4byte	.LFE8-.LFB8
 2914 0058 00000000 		.4byte	.LFB9
 2915 005c 68000000 		.4byte	.LFE9-.LFB9
 2916 0060 00000000 		.4byte	.LFB10
 2917 0064 6C000000 		.4byte	.LFE10-.LFB10
 2918 0068 00000000 		.4byte	.LFB11
 2919 006c 78000000 		.4byte	.LFE11-.LFB11
 2920 0070 00000000 		.4byte	.LFB12
 2921 0074 58010000 		.4byte	.LFE12-.LFB12
 2922 0078 00000000 		.4byte	.LFB13
 2923 007c 78000000 		.4byte	.LFE13-.LFB13
 2924 0080 00000000 		.4byte	0
 2925 0084 00000000 		.4byte	0
 2926              		.section	.debug_ranges,"",%progbits
 2927              	.Ldebug_ranges0:
 2928 0000 00000000 		.4byte	.LFB0
 2929 0004 70000000 		.4byte	.LFE0
 2930 0008 00000000 		.4byte	.LFB1
 2931 000c 2E000000 		.4byte	.LFE1
 2932 0010 00000000 		.4byte	.LFB2
 2933 0014 28000000 		.4byte	.LFE2
 2934 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 77


 2935 001c 70000000 		.4byte	.LFE3
 2936 0020 00000000 		.4byte	.LFB4
 2937 0024 40010000 		.4byte	.LFE4
 2938 0028 00000000 		.4byte	.LFB5
 2939 002c 50000000 		.4byte	.LFE5
 2940 0030 00000000 		.4byte	.LFB6
 2941 0034 24010000 		.4byte	.LFE6
 2942 0038 00000000 		.4byte	.LFB7
 2943 003c 54000000 		.4byte	.LFE7
 2944 0040 00000000 		.4byte	.LFB8
 2945 0044 38000000 		.4byte	.LFE8
 2946 0048 00000000 		.4byte	.LFB9
 2947 004c 68000000 		.4byte	.LFE9
 2948 0050 00000000 		.4byte	.LFB10
 2949 0054 6C000000 		.4byte	.LFE10
 2950 0058 00000000 		.4byte	.LFB11
 2951 005c 78000000 		.4byte	.LFE11
 2952 0060 00000000 		.4byte	.LFB12
 2953 0064 58010000 		.4byte	.LFE12
 2954 0068 00000000 		.4byte	.LFB13
 2955 006c 78000000 		.4byte	.LFE13
 2956 0070 00000000 		.4byte	0
 2957 0074 00000000 		.4byte	0
 2958              		.section	.debug_line,"",%progbits
 2959              	.Ldebug_line0:
 2960 0000 D0020000 		.section	.debug_str,"MS",%progbits,1
 2960      02007700 
 2960      00000201 
 2960      FB0E0D00 
 2960      01010101 
 2961              	.LASF77:
 2962 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 2962      72617465 
 2962      645F536F 
 2962      75726365 
 2962      5C50536F 
 2963              	.LASF47:
 2964 002b 636F756E 		.ascii	"count\000"
 2964      7400
 2965              	.LASF59:
 2966 0031 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 2966      656E7365 
 2966      5F435344 
 2966      5F476574 
 2966      43656E74 
 2967              	.LASF10:
 2968 004d 75696E74 		.ascii	"uint16\000"
 2968      313600
 2969              	.LASF29:
 2970 0054 66696C74 		.ascii	"filteredRawData\000"
 2970      65726564 
 2970      52617744 
 2970      61746100 
 2971              	.LASF34:
 2972 0064 66696E67 		.ascii	"fingerThreshold\000"
 2972      65725468 
 2972      72657368 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 78


 2972      6F6C6400 
 2973              	.LASF20:
 2974 0074 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2974      656E7365 
 2974      5F435344 
 2974      5F496E69 
 2974      7469616C 
 2975              	.LASF76:
 2976 009a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2976      43313120 
 2976      352E342E 
 2976      31203230 
 2976      31363036 
 2977 00cd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2977      20726576 
 2977      6973696F 
 2977      6E203233 
 2977      37373135 
 2978 0100 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2978      66756E63 
 2978      74696F6E 
 2978      2D736563 
 2978      74696F6E 
 2979              	.LASF53:
 2980 0128 706F7350 		.ascii	"posPrev\000"
 2980      72657600 
 2981              	.LASF7:
 2982 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 2982      206C6F6E 
 2982      6720756E 
 2982      7369676E 
 2982      65642069 
 2983              	.LASF6:
 2984 0147 6C6F6E67 		.ascii	"long long int\000"
 2984      206C6F6E 
 2984      6720696E 
 2984      7400
 2985              	.LASF0:
 2986 0155 7369676E 		.ascii	"signed char\000"
 2986      65642063 
 2986      68617200 
 2987              	.LASF39:
 2988 0161 72617749 		.ascii	"rawIndex\000"
 2988      6E646578 
 2988      00
 2989              	.LASF40:
 2990 016a 6E756D62 		.ascii	"numberOfSensors\000"
 2990      65724F66 
 2990      53656E73 
 2990      6F727300 
 2991              	.LASF13:
 2992 017a 696E7433 		.ascii	"int32\000"
 2992      3200
 2993              	.LASF37:
 2994 0180 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2994      656E7365 
 2994      5F435344 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 79


 2994      5F436865 
 2994      636B4973 
 2995              	.LASF41:
 2996 01a1 73746174 		.ascii	"state\000"
 2996      6500
 2997              	.LASF4:
 2998 01a7 6C6F6E67 		.ascii	"long int\000"
 2998      20696E74 
 2998      00
 2999              	.LASF57:
 3000 01b0 6E756D65 		.ascii	"numerator\000"
 3000      7261746F 
 3000      7200
 3001              	.LASF58:
 3002 01ba 64656E6F 		.ascii	"denominator\000"
 3002      6D696E61 
 3002      746F7200 
 3003              	.LASF62:
 3004 01c6 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 3004      656E7365 
 3004      5F435344 
 3004      5F776964 
 3004      6765744E 
 3005              	.LASF9:
 3006 01e0 75696E74 		.ascii	"uint8\000"
 3006      3800
 3007              	.LASF15:
 3008 01e6 646F7562 		.ascii	"double\000"
 3008      6C6500
 3009              	.LASF11:
 3010 01ed 75696E74 		.ascii	"uint32\000"
 3010      333200
 3011              	.LASF35:
 3012 01f4 68797374 		.ascii	"hysteresis\000"
 3012      65726573 
 3012      697300
 3013              	.LASF19:
 3014 01ff 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 3014      656E7365 
 3014      5F435344 
 3014      5F426173 
 3014      65496E69 
 3015              	.LASF54:
 3016 0215 706F734E 		.ascii	"posNext\000"
 3016      65787400 
 3017              	.LASF63:
 3018 021d 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 3018      656E7365 
 3018      5F435344 
 3018      5F73656E 
 3018      736F7242 
 3019              	.LASF50:
 3020 0239 73746172 		.ascii	"startOfSlider\000"
 3020      744F6653 
 3020      6C696465 
 3020      7200
 3021              	.LASF49:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 80


 3022 0247 74656D70 		.ascii	"temp\000"
 3022      00
 3023              	.LASF71:
 3024 024c 43617053 		.ascii	"CapSense_CSD_debounce\000"
 3024      656E7365 
 3024      5F435344 
 3024      5F646562 
 3024      6F756E63 
 3025              	.LASF8:
 3026 0262 756E7369 		.ascii	"unsigned int\000"
 3026      676E6564 
 3026      20696E74 
 3026      00
 3027              	.LASF56:
 3028 026f 706F7369 		.ascii	"position\000"
 3028      74696F6E 
 3028      00
 3029              	.LASF5:
 3030 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 3030      20756E73 
 3030      69676E65 
 3030      6420696E 
 3030      7400
 3031              	.LASF65:
 3032 028a 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 3032      656E7365 
 3032      5F435344 
 3032      5F73656E 
 3032      736F7253 
 3033              	.LASF55:
 3034 02a4 43617053 		.ascii	"CapSense_CSD_centroid\000"
 3034      656E7365 
 3034      5F435344 
 3034      5F63656E 
 3034      74726F69 
 3035              	.LASF3:
 3036 02ba 73686F72 		.ascii	"short unsigned int\000"
 3036      7420756E 
 3036      7369676E 
 3036      65642069 
 3036      6E7400
 3037              	.LASF21:
 3038 02cd 73656E73 		.ascii	"sensor\000"
 3038      6F7200
 3039              	.LASF51:
 3040 02d4 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 3040      656E7365 
 3040      5F435344 
 3040      5F43616C 
 3040      6343656E 
 3041              	.LASF27:
 3042 02ee 63616C63 		.ascii	"calc\000"
 3042      00
 3043              	.LASF36:
 3044 02f3 6465626F 		.ascii	"debounce\000"
 3044      756E6365 
 3044      00
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 81


 3045              	.LASF18:
 3046 02fc 73697A65 		.ascii	"sizetype\000"
 3046      74797065 
 3046      00
 3047              	.LASF17:
 3048 0305 6C6F6E67 		.ascii	"long double\000"
 3048      20646F75 
 3048      626C6500 
 3049              	.LASF24:
 3050 0311 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 3050      656E7365 
 3050      5F435344 
 3050      5F496E69 
 3050      7469616C 
 3051              	.LASF73:
 3052 0339 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 3052      656E7365 
 3052      5F435344 
 3052      5F726177 
 3052      44617461 
 3053              	.LASF25:
 3054 0353 656E4D61 		.ascii	"enMask\000"
 3054      736B00
 3055              	.LASF61:
 3056 035a 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 3056      656E7365 
 3056      5F435344 
 3056      5F73656E 
 3056      736F7245 
 3057              	.LASF45:
 3058 0378 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 3058      656E7365 
 3058      5F435344 
 3058      5F46696E 
 3058      644D6178 
 3059              	.LASF14:
 3060 0391 666C6F61 		.ascii	"float\000"
 3060      7400
 3061              	.LASF67:
 3062 0397 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 3062      656E7365 
 3062      5F435344 
 3062      5F6C6F77 
 3062      42617365 
 3063              	.LASF22:
 3064 03b8 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 3064      656E7365 
 3064      5F435344 
 3064      5F496E69 
 3064      7469616C 
 3065              	.LASF68:
 3066 03dc 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 3066      656E7365 
 3066      5F435344 
 3066      5F66696E 
 3066      67657254 
 3067              	.LASF1:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 82


 3068 03f9 756E7369 		.ascii	"unsigned char\000"
 3068      676E6564 
 3068      20636861 
 3068      7200
 3069              	.LASF30:
 3070 0407 6E6F6973 		.ascii	"noiseThreshold\000"
 3070      65546872 
 3070      6573686F 
 3070      6C6400
 3071              	.LASF2:
 3072 0416 73686F72 		.ascii	"short int\000"
 3072      7420696E 
 3072      7400
 3073              	.LASF23:
 3074 0420 77696467 		.ascii	"widget\000"
 3074      657400
 3075              	.LASF33:
 3076 0427 6F6E4D61 		.ascii	"onMask\000"
 3076      736B00
 3077              	.LASF48:
 3078 042e 6D617869 		.ascii	"maximum\000"
 3078      6D756D00 
 3079              	.LASF60:
 3080 0436 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 3080      656E7365 
 3080      5F435344 
 3080      5F73656E 
 3080      736F7252 
 3081              	.LASF26:
 3082 044d 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 3082      656E7365 
 3082      5F435344 
 3082      5F557064 
 3082      61746553 
 3083              	.LASF52:
 3084 046f 7265736F 		.ascii	"resolution\000"
 3084      6C757469 
 3084      6F6E00
 3085              	.LASF74:
 3086 047a 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 3086      656E7365 
 3086      5F435344 
 3086      5F6E756D 
 3086      6265724F 
 3087              	.LASF69:
 3088 0497 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 3088      656E7365 
 3088      5F435344 
 3088      5F6E6F69 
 3088      73655468 
 3089              	.LASF16:
 3090 04b3 63686172 		.ascii	"char\000"
 3090      00
 3091              	.LASF43:
 3092 04b8 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 3092      656E7365 
 3092      5F435344 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 83


 3092      5F456E61 
 3092      626C6557 
 3093              	.LASF31:
 3094 04d2 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 3094      656E7365 
 3094      5F435344 
 3094      5F557064 
 3094      61746545 
 3095              	.LASF46:
 3096 04f6 6F666673 		.ascii	"offset\000"
 3096      657400
 3097              	.LASF75:
 3098 04fd 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 3098      656E7365 
 3098      5F435344 
 3098      5F63656E 
 3098      74726F69 
 3099              	.LASF70:
 3100 0517 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 3100      656E7365 
 3100      5F435344 
 3100      5F687973 
 3100      74657265 
 3101              	.LASF32:
 3102 052f 6465626F 		.ascii	"debounceIndex\000"
 3102      756E6365 
 3102      496E6465 
 3102      7800
 3103              	.LASF42:
 3104 053d 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 3104      656E7365 
 3104      5F435344 
 3104      5F436865 
 3104      636B4973 
 3105              	.LASF78:
 3106 0561 433A5C55 		.ascii	"C:\\Users\\henrichsc\\Desktop\\School\\Senior_year\\"
 3106      73657273 
 3106      5C68656E 
 3106      72696368 
 3106      73635C44 
 3107 058f 66616C6C 		.ascii	"fall\\CE4920\\lab\\CapSense_CSD_Design01.cydsn\000"
 3107      5C434534 
 3107      3932305C 
 3107      6C61625C 
 3107      43617053 
 3108              	.LASF38:
 3109 05bb 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 3109      656E7365 
 3109      5F435344 
 3109      5F436865 
 3109      636B4973 
 3110              	.LASF12:
 3111 05dc 696E7431 		.ascii	"int16\000"
 3111      3600
 3112              	.LASF72:
 3113 05e2 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3113      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccL0852m.s 			page 84


 3113      5F435344 
 3113      5F646562 
 3113      6F756E63 
 3114              	.LASF64:
 3115 05ff 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3115      656E7365 
 3115      5F435344 
 3115      5F73656E 
 3115      736F7242 
 3116              	.LASF28:
 3117 061e 74656D70 		.ascii	"tempRaw\000"
 3117      52617700 
 3118              	.LASF44:
 3119 0626 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3119      656E7365 
 3119      5F435344 
 3119      5F446973 
 3119      61626C65 
 3120              	.LASF66:
 3121 0641 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3121      656E7365 
 3121      5F435344 
 3121      5F73656E 
 3121      736F724F 
 3122              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
