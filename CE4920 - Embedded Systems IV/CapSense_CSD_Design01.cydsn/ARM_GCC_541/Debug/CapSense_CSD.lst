ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,14,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 7F       		.byte	127
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 28
  37              	CapSense_CSD_pcTable:
  38 0000 2D500040 		.word	1073762349
  39 0004 2E500040 		.word	1073762350
  40 0008 28500040 		.word	1073762344
  41 000c 29500040 		.word	1073762345
  42 0010 2A500040 		.word	1073762346
  43 0014 2B500040 		.word	1073762347
  44 0018 2C500040 		.word	1073762348
  45              		.global	CapSense_CSD_portTable
  46              		.align	2
  47              		.type	CapSense_CSD_portTable, %object
  48              		.size	CapSense_CSD_portTable, 7
  49              	CapSense_CSD_portTable:
  50 001c 05       		.byte	5
  51 001d 05       		.byte	5
  52 001e 05       		.byte	5
  53 001f 05       		.byte	5
  54 0020 05       		.byte	5
  55 0021 05       		.byte	5
  56 0022 05       		.byte	5
  57              		.global	CapSense_CSD_maskTable
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 2


  58 0023 00       		.align	2
  59              		.type	CapSense_CSD_maskTable, %object
  60              		.size	CapSense_CSD_maskTable, 7
  61              	CapSense_CSD_maskTable:
  62 0024 20       		.byte	32
  63 0025 40       		.byte	64
  64 0026 01       		.byte	1
  65 0027 02       		.byte	2
  66 0028 04       		.byte	4
  67 0029 08       		.byte	8
  68 002a 10       		.byte	16
  69              		.global	CapSense_CSD_csTable
  70 002b 00       		.align	2
  71              		.type	CapSense_CSD_csTable, %object
  72              		.size	CapSense_CSD_csTable, 32
  73              	CapSense_CSD_csTable:
  74 002c 06520040 		.word	1073762822
  75 0030 0E520040 		.word	1073762830
  76 0034 16520040 		.word	1073762838
  77 0038 1E520040 		.word	1073762846
  78 003c 26520040 		.word	1073762854
  79 0040 2E520040 		.word	1073762862
  80 0044 36520040 		.word	1073762870
  81 0048 7E520040 		.word	1073762942
  82              		.global	CapSense_CSD_idacSettings
  83              		.align	2
  84              		.type	CapSense_CSD_idacSettings, %object
  85              		.size	CapSense_CSD_idacSettings, 7
  86              	CapSense_CSD_idacSettings:
  87 004c 2B       		.byte	43
  88 004d 29       		.byte	41
  89 004e 30       		.byte	48
  90 004f 31       		.byte	49
  91 0050 29       		.byte	41
  92 0051 26       		.byte	38
  93 0052 22       		.byte	34
  94              		.global	CapSense_CSD_widgetResolution
  95 0053 00       		.align	2
  96              		.type	CapSense_CSD_widgetResolution, %object
  97              		.size	CapSense_CSD_widgetResolution, 3
  98              	CapSense_CSD_widgetResolution:
  99 0054 3F       		.byte	63
 100 0055 3F       		.byte	63
 101 0056 1F       		.byte	31
 102              		.global	CapSense_CSD_analogSwitchDivider
 103              		.data
 104 0001 000000   		.align	2
 105              		.type	CapSense_CSD_analogSwitchDivider, %object
 106              		.size	CapSense_CSD_analogSwitchDivider, 7
 107              	CapSense_CSD_analogSwitchDivider:
 108 0004 02       		.byte	2
 109 0005 02       		.byte	2
 110 0006 03       		.byte	3
 111 0007 03       		.byte	3
 112 0008 03       		.byte	3
 113 0009 03       		.byte	3
 114 000a 03       		.byte	3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 3


 115              		.global	CapSense_CSD_widgetNumber
 116              		.section	.rodata
 117 0057 00       		.align	2
 118              		.type	CapSense_CSD_widgetNumber, %object
 119              		.size	CapSense_CSD_widgetNumber, 7
 120              	CapSense_CSD_widgetNumber:
 121 0058 01       		.byte	1
 122 0059 02       		.byte	2
 123 005a 00       		.byte	0
 124 005b 00       		.byte	0
 125 005c 00       		.byte	0
 126 005d 00       		.byte	0
 127 005e 00       		.byte	0
 128              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 129              		.align	2
 130              		.global	CapSense_CSD_Init
 131              		.thumb
 132              		.thumb_func
 133              		.type	CapSense_CSD_Init, %function
 134              	CapSense_CSD_Init:
 135              	.LFB0:
 136              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 4


  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x7Fu, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PC, 
  50:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PC, 
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PC, 
  52:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PC, 
  53:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PC, 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  57:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  58:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__PORT, 
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PORT, 
  61:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PORT, 
  62:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PORT, 
  63:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PORT, 
  64:Generated_Source\PSoC5/CapSense_CSD.c **** };
  65:Generated_Source\PSoC5/CapSense_CSD.c **** 
  66:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  67:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  68:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__MASK,
  69:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__MASK,
  70:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__MASK,
  71:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__MASK,
  72:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__MASK,
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__MASK,
  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  78:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  79:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  80:Generated_Source\PSoC5/CapSense_CSD.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_idacSettings[] = {
  83:Generated_Source\PSoC5/CapSense_CSD.c ****     43u,41u,48u,49u,41u,38u,34u,
  84:Generated_Source\PSoC5/CapSense_CSD.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetResolution[] = {
  87:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  88:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  89:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_13_BITS,
  90:Generated_Source\PSoC5/CapSense_CSD.c **** };
  91:Generated_Source\PSoC5/CapSense_CSD.c **** 
  92:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 5


  93:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, 2u, 3u, 3u, 3u, 3u, 3u, 
  94:Generated_Source\PSoC5/CapSense_CSD.c **** };
  95:Generated_Source\PSoC5/CapSense_CSD.c **** 
  96:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  97:Generated_Source\PSoC5/CapSense_CSD.c ****     1u, /* Button0__BTN */
  98:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, /* Button1__BTN */
  99:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 100:Generated_Source\PSoC5/CapSense_CSD.c ****     
 101:Generated_Source\PSoC5/CapSense_CSD.c **** };
 102:Generated_Source\PSoC5/CapSense_CSD.c **** 
 103:Generated_Source\PSoC5/CapSense_CSD.c **** 
 104:Generated_Source\PSoC5/CapSense_CSD.c **** 
 105:Generated_Source\PSoC5/CapSense_CSD.c **** 
 106:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 108:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 109:Generated_Source\PSoC5/CapSense_CSD.c **** *
 110:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 111:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
 112:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
 113:Generated_Source\PSoC5/CapSense_CSD.c **** *
 114:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 115:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 116:Generated_Source\PSoC5/CapSense_CSD.c **** *
 117:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 118:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 119:Generated_Source\PSoC5/CapSense_CSD.c **** *
 120:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 121:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 122:Generated_Source\PSoC5/CapSense_CSD.c **** {
 137              		.loc 1 122 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 123:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 124:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 125:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 126:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 127:Generated_Source\PSoC5/CapSense_CSD.c ****         
 128:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 130:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 131:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 132:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 134:Generated_Source\PSoC5/CapSense_CSD.c ****     
 135:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 136:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 149              		.loc 1 136 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 6


 150 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 137:Generated_Source\PSoC5/CapSense_CSD.c **** 
 138:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 139:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 141:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 143:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 144:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 145:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 146:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 148:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 149:Generated_Source\PSoC5/CapSense_CSD.c **** 
 150:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 151:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 151              		.loc 1 152 0
 152 000a 0220     		movs	r0, #2
 153 000c FFF7FEFF 		bl	CapSense_CSD_SetAnalogSwitchesSource
 153:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 154:Generated_Source\PSoC5/CapSense_CSD.c **** 
 155:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 156:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         
 166:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 154              		.loc 1 168 0
 155 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 156 0014 0346     		mov	r3, r0
 157 0016 FB71     		strb	r3, [r7, #7]
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 158              		.loc 1 169 0
 159 0018 3B4A     		ldr	r2, .L2
 160 001a 3B4B     		ldr	r3, .L2
 161 001c 1B78     		ldrb	r3, [r3]
 162 001e DBB2     		uxtb	r3, r3
 163 0020 43F00303 		orr	r3, r3, #3
 164 0024 DBB2     		uxtb	r3, r3
 165 0026 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 166              		.loc 1 170 0
 167 0028 384A     		ldr	r2, .L2+4
 168 002a 384B     		ldr	r3, .L2+4
 169 002c 1B78     		ldrb	r3, [r3]
 170 002e DBB2     		uxtb	r3, r3
 171 0030 43F00303 		orr	r3, r3, #3
 172 0034 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 7


 173 0036 1370     		strb	r3, [r2]
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 174              		.loc 1 171 0
 175 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 176 003a 1846     		mov	r0, r3
 177 003c FFF7FEFF 		bl	CyExitCriticalSection
 172:Generated_Source\PSoC5/CapSense_CSD.c ****         
 173:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 174:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 178              		.loc 1 174 0
 179 0040 334B     		ldr	r3, .L2+8
 180 0042 4FF43442 		mov	r2, #46080
 181 0046 1A80     		strh	r2, [r3]	@ movhi
 175:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 176:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 182              		.loc 1 176 0
 183 0048 324B     		ldr	r3, .L2+12
 184 004a 4FF6FF72 		movw	r2, #65535
 185 004e 1A80     		strh	r2, [r3]	@ movhi
 177:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 178:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 180:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 181:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 188:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         
 191:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 193:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 194:Generated_Source\PSoC5/CapSense_CSD.c ****     
 195:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 186              		.loc 1 196 0
 187 0050 314B     		ldr	r3, .L2+16
 188 0052 0722     		movs	r2, #7
 189 0054 1A70     		strb	r2, [r3]
 197:Generated_Source\PSoC5/CapSense_CSD.c ****     
 198:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 199:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 206:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 207:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 209:Generated_Source\PSoC5/CapSense_CSD.c ****     
 210:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 8


 211:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 212:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 190              		.loc 1 212 0
 191 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 192 005a 0346     		mov	r3, r0
 193 005c FB71     		strb	r3, [r7, #7]
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 194              		.loc 1 213 0
 195 005e 2F4A     		ldr	r2, .L2+20
 196 0060 2E4B     		ldr	r3, .L2+20
 197 0062 1B78     		ldrb	r3, [r3]
 198 0064 DBB2     		uxtb	r3, r3
 199 0066 43F00303 		orr	r3, r3, #3
 200 006a DBB2     		uxtb	r3, r3
 201 006c 1370     		strb	r3, [r2]
 214:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 202              		.loc 1 214 0
 203 006e 2C4A     		ldr	r2, .L2+24
 204 0070 2B4B     		ldr	r3, .L2+24
 205 0072 1B78     		ldrb	r3, [r3]
 206 0074 DBB2     		uxtb	r3, r3
 207 0076 43F00303 		orr	r3, r3, #3
 208 007a DBB2     		uxtb	r3, r3
 209 007c 1370     		strb	r3, [r2]
 215:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 210              		.loc 1 215 0
 211 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 212 0080 1846     		mov	r0, r3
 213 0082 FFF7FEFF 		bl	CyExitCriticalSection
 216:Generated_Source\PSoC5/CapSense_CSD.c ****         
 217:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 218:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 214              		.loc 1 218 0
 215 0086 274B     		ldr	r3, .L2+28
 216 0088 FF22     		movs	r2, #255
 217 008a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 218              		.loc 1 219 0
 219 008c 264B     		ldr	r3, .L2+32
 220 008e FF22     		movs	r2, #255
 221 0090 1A70     		strb	r2, [r3]
 220:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 222              		.loc 1 220 0
 223 0092 264B     		ldr	r3, .L2+36
 224 0094 FF22     		movs	r2, #255
 225 0096 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/CapSense_CSD.c ****         
 222:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 223:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 226              		.loc 1 223 0
 227 0098 254B     		ldr	r3, .L2+40
 228 009a FF22     		movs	r2, #255
 229 009c 1A70     		strb	r2, [r3]
 224:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 230              		.loc 1 224 0
 231 009e 254B     		ldr	r3, .L2+44
 232 00a0 FF22     		movs	r2, #255
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 9


 233 00a2 1A70     		strb	r2, [r3]
 225:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 234              		.loc 1 225 0
 235 00a4 244B     		ldr	r3, .L2+48
 236 00a6 FF22     		movs	r2, #255
 237 00a8 1A70     		strb	r2, [r3]
 226:Generated_Source\PSoC5/CapSense_CSD.c ****         
 227:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 228:Generated_Source\PSoC5/CapSense_CSD.c ****     
 229:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 230:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 237:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 238:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 239:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 240:Generated_Source\PSoC5/CapSense_CSD.c ****            
 241:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 242:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 243:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 244:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 245:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 246:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 247:Generated_Source\PSoC5/CapSense_CSD.c ****             
 248:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 249:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 250:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 251:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 252:Generated_Source\PSoC5/CapSense_CSD.c ****             
 253:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 254:Generated_Source\PSoC5/CapSense_CSD.c ****             
 255:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 256:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 257:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 258:Generated_Source\PSoC5/CapSense_CSD.c ****             
 259:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 260:Generated_Source\PSoC5/CapSense_CSD.c ****     
 261:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 262:Generated_Source\PSoC5/CapSense_CSD.c ****     
 263:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 264:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 238              		.loc 1 264 0
 239 00aa 244B     		ldr	r3, .L2+52
 240 00ac 0122     		movs	r2, #1
 241 00ae 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 242              		.loc 1 265 0
 243 00b0 2349     		ldr	r1, .L2+56
 244 00b2 0020     		movs	r0, #0
 245 00b4 FFF7FEFF 		bl	CyIntSetVector
 266:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 246              		.loc 1 266 0
 247 00b8 0721     		movs	r1, #7
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 10


 248 00ba 0020     		movs	r0, #0
 249 00bc FFF7FEFF 		bl	CyIntSetPriority
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 269:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 270:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 250              		.loc 1 275 0
 251 00c0 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 252              		.loc 1 276 0
 253 00c4 0720     		movs	r0, #7
 254 00c6 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 277:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 255              		.loc 1 277 0
 256 00ca 0820     		movs	r0, #8
 257 00cc FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 279:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 258              		.loc 1 279 0
 259 00d0 0920     		movs	r0, #9
 260 00d2 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 284:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 285:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 286:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 287:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 288:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 289:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 290:Generated_Source\PSoC5/CapSense_CSD.c ****     
 291:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 292:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 293:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 294:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 295:Generated_Source\PSoC5/CapSense_CSD.c ****     
 296:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 261              		.loc 1 297 0
 262 00d6 1B4A     		ldr	r2, .L2+60
 263 00d8 1A4B     		ldr	r3, .L2+60
 264 00da 1B78     		ldrb	r3, [r3]
 265 00dc DBB2     		uxtb	r3, r3
 266 00de 43F00403 		orr	r3, r3, #4
 267 00e2 DBB2     		uxtb	r3, r3
 268 00e4 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 299:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 301:Generated_Source\PSoC5/CapSense_CSD.c ****     
 302:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 11


 303:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 269              		.loc 1 303 0
 270 00e6 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 304:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 305:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 271              		.loc 1 305 0
 272 00ea FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 306:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 273              		.loc 1 306 0
 274 00ee 0020     		movs	r0, #0
 275 00f0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 307:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 276              		.loc 1 307 0
 277 00f4 0420     		movs	r0, #4
 278 00f6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 308:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 279              		.loc 1 308 0
 280 00fa 0020     		movs	r0, #0
 281 00fc FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 309:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 310:Generated_Source\PSoC5/CapSense_CSD.c ****     
 311:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 312:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 313:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 314:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 315:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 316:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 317:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 319:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 320:Generated_Source\PSoC5/CapSense_CSD.c ****     
 321:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 322:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 323:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 324:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 325:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 326:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 327:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 328:Generated_Source\PSoC5/CapSense_CSD.c **** }
 282              		.loc 1 328 0
 283 0100 00BF     		nop
 284 0102 0837     		adds	r7, r7, #8
 285              		.cfi_def_cfa_offset 8
 286 0104 BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 0106 80BD     		pop	{r7, pc}
 290              	.L3:
 291              		.align	2
 292              	.L2:
 293 0108 9A640040 		.word	1073767578
 294 010c 9B640040 		.word	1073767579
 295 0110 2A640040 		.word	1073767466
 296 0114 4A640040 		.word	1073767498
 297 0118 8A640040 		.word	1073767562
 298 011c 9C640040 		.word	1073767580
 299 0120 9D640040 		.word	1073767581
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 12


 300 0124 2C640040 		.word	1073767468
 301 0128 4C640040 		.word	1073767500
 302 012c 0C640040 		.word	1073767436
 303 0130 2D640040 		.word	1073767469
 304 0134 5D640040 		.word	1073767517
 305 0138 4D640040 		.word	1073767501
 306 013c 80E100E0 		.word	-536813184
 307 0140 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 308 0144 79640040 		.word	1073767545
 309              		.cfi_endproc
 310              	.LFE0:
 311              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 312              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 313              		.align	2
 314              		.global	CapSense_CSD_Enable
 315              		.thumb
 316              		.thumb_func
 317              		.type	CapSense_CSD_Enable, %function
 318              	CapSense_CSD_Enable:
 319              	.LFB1:
 329:Generated_Source\PSoC5/CapSense_CSD.c **** 
 330:Generated_Source\PSoC5/CapSense_CSD.c **** 
 331:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 332:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 333:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 334:Generated_Source\PSoC5/CapSense_CSD.c **** *
 335:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 336:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 337:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 338:Generated_Source\PSoC5/CapSense_CSD.c **** *
 339:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 340:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSD.c **** *
 342:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 343:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 344:Generated_Source\PSoC5/CapSense_CSD.c **** *
 345:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 346:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 347:Generated_Source\PSoC5/CapSense_CSD.c **** {
 320              		.loc 1 347 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 8
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324 0000 80B5     		push	{r7, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0002 82B0     		sub	sp, sp, #8
 329              		.cfi_def_cfa_offset 16
 330 0004 00AF     		add	r7, sp, #0
 331              		.cfi_def_cfa_register 7
 348:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 349:Generated_Source\PSoC5/CapSense_CSD.c ****     
 350:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 332              		.loc 1 350 0
 333 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 334 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 13


 335 000c FB71     		strb	r3, [r7, #7]
 351:Generated_Source\PSoC5/CapSense_CSD.c ****     
 352:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 353:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 354:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 355:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 356:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 358:Generated_Source\PSoC5/CapSense_CSD.c ****         
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 360:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 361:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 362:Generated_Source\PSoC5/CapSense_CSD.c ****     
 363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 364:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 336              		.loc 1 364 0
 337 000e 1C4A     		ldr	r2, .L5
 338 0010 1B4B     		ldr	r3, .L5
 339 0012 1B78     		ldrb	r3, [r3]
 340 0014 DBB2     		uxtb	r3, r3
 341 0016 43F02003 		orr	r3, r3, #32
 342 001a DBB2     		uxtb	r3, r3
 343 001c 1370     		strb	r3, [r2]
 365:Generated_Source\PSoC5/CapSense_CSD.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 367:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 368:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 369:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 371:Generated_Source\PSoC5/CapSense_CSD.c ****         
 372:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 375:Generated_Source\PSoC5/CapSense_CSD.c ****         
 376:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 377:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 378:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 379:Generated_Source\PSoC5/CapSense_CSD.c ****         
 380:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 381:Generated_Source\PSoC5/CapSense_CSD.c ****     
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 384:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 385:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 386:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 387:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 388:Generated_Source\PSoC5/CapSense_CSD.c ****             
 389:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 390:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 391:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 392:Generated_Source\PSoC5/CapSense_CSD.c ****            
 393:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 394:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 396:Generated_Source\PSoC5/CapSense_CSD.c ****         
 397:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 14


 399:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 400:Generated_Source\PSoC5/CapSense_CSD.c ****     
 401:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 402:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 403:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 344              		.loc 1 403 0
 345 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 404:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 405:Generated_Source\PSoC5/CapSense_CSD.c ****     
 406:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 346              		.loc 1 407 0
 347 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 408:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 348              		.loc 1 409 0
 349 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 410:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 411:Generated_Source\PSoC5/CapSense_CSD.c ****     
 412:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 414:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 415:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 416:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 418:Generated_Source\PSoC5/CapSense_CSD.c ****     
 419:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 420:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 421:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 424:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 425:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 426:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 427:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 429:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 350              		.loc 1 429 0
 351 002a 164A     		ldr	r2, .L5+4
 352 002c 154B     		ldr	r3, .L5+4
 353 002e 1B78     		ldrb	r3, [r3]
 354 0030 DBB2     		uxtb	r3, r3
 355 0032 43F01003 		orr	r3, r3, #16
 356 0036 DBB2     		uxtb	r3, r3
 357 0038 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 358              		.loc 1 430 0
 359 003a 134A     		ldr	r2, .L5+8
 360 003c 124B     		ldr	r3, .L5+8
 361 003e 1B78     		ldrb	r3, [r3]
 362 0040 DBB2     		uxtb	r3, r3
 363 0042 43F01003 		orr	r3, r3, #16
 364 0046 DBB2     		uxtb	r3, r3
 365 0048 1370     		strb	r3, [r2]
 431:Generated_Source\PSoC5/CapSense_CSD.c ****         
 432:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 433:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 15


 434:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 435:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     
 438:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 440:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 441:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 442:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 443:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 444:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 445:Generated_Source\PSoC5/CapSense_CSD.c ****         
 446:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 447:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 448:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 366              		.loc 1 448 0
 367 004a 104A     		ldr	r2, .L5+12
 368 004c 0F4B     		ldr	r3, .L5+12
 369 004e 1B78     		ldrb	r3, [r3]
 370 0050 DBB2     		uxtb	r3, r3
 371 0052 43F00103 		orr	r3, r3, #1
 372 0056 DBB2     		uxtb	r3, r3
 373 0058 1370     		strb	r3, [r2]
 449:Generated_Source\PSoC5/CapSense_CSD.c ****         
 450:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 451:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 452:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 453:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 454:Generated_Source\PSoC5/CapSense_CSD.c ****     
 455:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 374              		.loc 1 455 0
 375 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 376 005c 1846     		mov	r0, r3
 377 005e FFF7FEFF 		bl	CyExitCriticalSection
 456:Generated_Source\PSoC5/CapSense_CSD.c ****     
 457:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 458:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 378              		.loc 1 458 0
 379 0062 0B4B     		ldr	r3, .L5+16
 380 0064 0122     		movs	r2, #1
 381 0066 1A60     		str	r2, [r3]
 459:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 460:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 461:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 462:Generated_Source\PSoC5/CapSense_CSD.c ****     
 463:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 464:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 382              		.loc 1 464 0
 383 0068 0A4A     		ldr	r2, .L5+20
 384 006a 0A4B     		ldr	r3, .L5+20
 385 006c 1B78     		ldrb	r3, [r3]
 386 006e DBB2     		uxtb	r3, r3
 387 0070 63F07F03 		orn	r3, r3, #127
 388 0074 DBB2     		uxtb	r3, r3
 389 0076 1370     		strb	r3, [r2]
 465:Generated_Source\PSoC5/CapSense_CSD.c **** }
 390              		.loc 1 465 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 16


 391 0078 00BF     		nop
 392 007a 0837     		adds	r7, r7, #8
 393              		.cfi_def_cfa_offset 8
 394 007c BD46     		mov	sp, r7
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 007e 80BD     		pop	{r7, pc}
 398              	.L6:
 399              		.align	2
 400              	.L5:
 401 0080 9A640040 		.word	1073767578
 402 0084 BB430040 		.word	1073759163
 403 0088 AB430040 		.word	1073759147
 404 008c 70580040 		.word	1073764464
 405 0090 00E100E0 		.word	-536813312
 406 0094 79640040 		.word	1073767545
 407              		.cfi_endproc
 408              	.LFE1:
 409              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 410              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 411              		.align	2
 412              		.global	CapSense_CSD_Start
 413              		.thumb
 414              		.thumb_func
 415              		.type	CapSense_CSD_Start, %function
 416              	CapSense_CSD_Start:
 417              	.LFB2:
 466:Generated_Source\PSoC5/CapSense_CSD.c **** 
 467:Generated_Source\PSoC5/CapSense_CSD.c **** 
 468:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 469:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 470:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 471:Generated_Source\PSoC5/CapSense_CSD.c **** *
 472:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 477:Generated_Source\PSoC5/CapSense_CSD.c **** *
 478:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 479:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 480:Generated_Source\PSoC5/CapSense_CSD.c **** *
 481:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 482:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 483:Generated_Source\PSoC5/CapSense_CSD.c **** *
 484:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 485:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 486:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 487:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 488:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 489:Generated_Source\PSoC5/CapSense_CSD.c **** *
 490:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 491:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 492:Generated_Source\PSoC5/CapSense_CSD.c **** *
 493:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 494:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 495:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 17


 496:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 497:Generated_Source\PSoC5/CapSense_CSD.c **** *
 498:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 499:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 500:Generated_Source\PSoC5/CapSense_CSD.c **** {
 418              		.loc 1 500 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 501:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 428              		.loc 1 501 0
 429 0004 064B     		ldr	r3, .L9
 430 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0008 002B     		cmp	r3, #0
 432 000a 04D1     		bne	.L8
 502:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 503:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 433              		.loc 1 503 0
 434 000c FFF7FEFF 		bl	CapSense_CSD_Init
 504:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 435              		.loc 1 504 0
 436 0010 034B     		ldr	r3, .L9
 437 0012 0122     		movs	r2, #1
 438 0014 1A70     		strb	r2, [r3]
 439              	.L8:
 505:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 506:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 440              		.loc 1 506 0
 441 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 507:Generated_Source\PSoC5/CapSense_CSD.c ****     
 508:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 509:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 510:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 511:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 512:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 513:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 514:Generated_Source\PSoC5/CapSense_CSD.c **** }
 442              		.loc 1 514 0
 443 001a 00BF     		nop
 444 001c 80BD     		pop	{r7, pc}
 445              	.L10:
 446 001e 00BF     		.align	2
 447              	.L9:
 448 0020 00000000 		.word	CapSense_CSD_initVar
 449              		.cfi_endproc
 450              	.LFE2:
 451              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 452              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 453              		.align	2
 454              		.global	CapSense_CSD_Stop
 455              		.thumb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 18


 456              		.thumb_func
 457              		.type	CapSense_CSD_Stop, %function
 458              	CapSense_CSD_Stop:
 459              	.LFB3:
 515:Generated_Source\PSoC5/CapSense_CSD.c **** 
 516:Generated_Source\PSoC5/CapSense_CSD.c **** 
 517:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 518:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 519:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 520:Generated_Source\PSoC5/CapSense_CSD.c **** *
 521:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 522:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 523:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 524:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 525:Generated_Source\PSoC5/CapSense_CSD.c **** *
 526:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 527:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 528:Generated_Source\PSoC5/CapSense_CSD.c **** *
 529:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 530:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 531:Generated_Source\PSoC5/CapSense_CSD.c **** *
 532:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 533:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 534:Generated_Source\PSoC5/CapSense_CSD.c **** *
 535:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 536:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 537:Generated_Source\PSoC5/CapSense_CSD.c **** {
 460              		.loc 1 537 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 470              		.loc 1 539 0
 471 0004 1E4A     		ldr	r2, .L12
 472 0006 1E4B     		ldr	r3, .L12
 473 0008 1B78     		ldrb	r3, [r3]
 474 000a DBB2     		uxtb	r3, r3
 475 000c 23F00203 		bic	r3, r3, #2
 476 0010 DBB2     		uxtb	r3, r3
 477 0012 1370     		strb	r3, [r2]
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 478              		.loc 1 542 0
 479 0014 1B4B     		ldr	r3, .L12+4
 480 0016 0122     		movs	r2, #1
 481 0018 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 545:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 19


 546:Generated_Source\PSoC5/CapSense_CSD.c ****     
 547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 548:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 482              		.loc 1 548 0
 483 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 549:Generated_Source\PSoC5/CapSense_CSD.c ****     
 550:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 551:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 552:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 553:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 556:Generated_Source\PSoC5/CapSense_CSD.c ****         
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 558:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 560:Generated_Source\PSoC5/CapSense_CSD.c ****     
 561:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 562:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 484              		.loc 1 562 0
 485 001e 1A4A     		ldr	r2, .L12+8
 486 0020 194B     		ldr	r3, .L12+8
 487 0022 1B78     		ldrb	r3, [r3]
 488 0024 DBB2     		uxtb	r3, r3
 489 0026 23F02003 		bic	r3, r3, #32
 490 002a DBB2     		uxtb	r3, r3
 491 002c 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/CapSense_CSD.c ****     
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 565:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 566:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 567:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 569:Generated_Source\PSoC5/CapSense_CSD.c **** 
 570:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 573:Generated_Source\PSoC5/CapSense_CSD.c **** 
 574:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 575:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 576:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 577:Generated_Source\PSoC5/CapSense_CSD.c ****         
 578:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 579:Generated_Source\PSoC5/CapSense_CSD.c ****     
 580:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 581:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 582:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 583:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 584:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 585:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 588:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 589:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 590:Generated_Source\PSoC5/CapSense_CSD.c ****            
 591:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 592:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 20


 593:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 594:Generated_Source\PSoC5/CapSense_CSD.c ****         
 595:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     
 597:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 598:Generated_Source\PSoC5/CapSense_CSD.c ****     
 599:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 600:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 601:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 492              		.loc 1 601 0
 493 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 602:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 603:Generated_Source\PSoC5/CapSense_CSD.c ****     
 604:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 494              		.loc 1 605 0
 495 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 606:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 607:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 496              		.loc 1 607 0
 497 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 608:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 609:Generated_Source\PSoC5/CapSense_CSD.c ****     
 610:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 612:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 614:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 615:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 616:Generated_Source\PSoC5/CapSense_CSD.c ****     
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 618:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 619:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 620:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 621:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 622:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 623:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 624:Generated_Source\PSoC5/CapSense_CSD.c **** 
 625:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 626:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 627:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 628:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 629:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 498              		.loc 1 629 0
 499 003a 144A     		ldr	r2, .L12+12
 500 003c 134B     		ldr	r3, .L12+12
 501 003e 1B78     		ldrb	r3, [r3]
 502 0040 DBB2     		uxtb	r3, r3
 503 0042 23F00103 		bic	r3, r3, #1
 504 0046 DBB2     		uxtb	r3, r3
 505 0048 1370     		strb	r3, [r2]
 630:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 506              		.loc 1 630 0
 507 004a 114A     		ldr	r2, .L12+16
 508 004c 104B     		ldr	r3, .L12+16
 509 004e 1B78     		ldrb	r3, [r3]
 510 0050 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 21


 511 0052 23F01003 		bic	r3, r3, #16
 512 0056 DBB2     		uxtb	r3, r3
 513 0058 1370     		strb	r3, [r2]
 631:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 514              		.loc 1 631 0
 515 005a 0E4A     		ldr	r2, .L12+20
 516 005c 0D4B     		ldr	r3, .L12+20
 517 005e 1B78     		ldrb	r3, [r3]
 518 0060 DBB2     		uxtb	r3, r3
 519 0062 23F01003 		bic	r3, r3, #16
 520 0066 DBB2     		uxtb	r3, r3
 521 0068 1370     		strb	r3, [r2]
 632:Generated_Source\PSoC5/CapSense_CSD.c ****         
 633:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 634:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 635:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 637:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 522              		.loc 1 641 0
 523 006a 054A     		ldr	r2, .L12
 524 006c 044B     		ldr	r3, .L12
 525 006e 1B78     		ldrb	r3, [r3]
 526 0070 DBB2     		uxtb	r3, r3
 527 0072 03F07F03 		and	r3, r3, #127
 528 0076 DBB2     		uxtb	r3, r3
 529 0078 1370     		strb	r3, [r2]
 642:Generated_Source\PSoC5/CapSense_CSD.c **** }
 530              		.loc 1 642 0
 531 007a 00BF     		nop
 532 007c 80BD     		pop	{r7, pc}
 533              	.L13:
 534 007e 00BF     		.align	2
 535              	.L12:
 536 0080 79640040 		.word	1073767545
 537 0084 80E100E0 		.word	-536813184
 538 0088 9A640040 		.word	1073767578
 539 008c 70580040 		.word	1073764464
 540 0090 AB430040 		.word	1073759147
 541 0094 BB430040 		.word	1073759163
 542              		.cfi_endproc
 543              	.LFE3:
 544              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 545              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 546              		.align	2
 547              		.global	CapSense_CSD_FindNextSensor
 548              		.thumb
 549              		.thumb_func
 550              		.type	CapSense_CSD_FindNextSensor, %function
 551              	CapSense_CSD_FindNextSensor:
 552              	.LFB4:
 643:Generated_Source\PSoC5/CapSense_CSD.c **** 
 644:Generated_Source\PSoC5/CapSense_CSD.c **** 
 645:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 22


 646:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 655:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 656:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 657:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 658:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 659:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 660:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 662:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 663:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 665:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 666:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 667:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 668:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 669:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 670:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 671:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 672:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 673:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 674:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 675:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 553              		.loc 1 675 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 16
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 558 0000 80B4     		push	{r7}
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 7, -4
 561 0002 85B0     		sub	sp, sp, #20
 562              		.cfi_def_cfa_offset 24
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565 0006 0346     		mov	r3, r0
 566 0008 FB71     		strb	r3, [r7, #7]
 567              	.L17:
 676:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 677:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 678:Generated_Source\PSoC5/CapSense_CSD.c ****         
 679:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 680:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 681:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 682:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 683:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 568              		.loc 1 683 0
 569 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 570 000c 0133     		adds	r3, r3, #1
 571 000e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 23


 684:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 572              		.loc 1 684 0
 573 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 574 0012 072B     		cmp	r3, #7
 575 0014 12D0     		beq	.L19
 685:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 686:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 687:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 688:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 576              		.loc 1 688 0
 577 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 578 0018 DB08     		lsrs	r3, r3, #3
 579 001a FB73     		strb	r3, [r7, #15]
 689:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 580              		.loc 1 689 0
 581 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 582 001e 03F00703 		and	r3, r3, #7
 583 0022 0122     		movs	r2, #1
 584 0024 02FA03F3 		lsl	r3, r2, r3
 585 0028 BB73     		strb	r3, [r7, #14]
 690:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 691:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 586              		.loc 1 691 0
 587 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 588 002c 074A     		ldr	r2, .L20
 589 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 590 0030 BB7B     		ldrb	r3, [r7, #14]
 591 0032 1340     		ands	r3, r3, r2
 592 0034 DBB2     		uxtb	r3, r3
 593 0036 002B     		cmp	r3, #0
 594 0038 E7D0     		beq	.L17
 595 003a 00E0     		b	.L16
 596              	.L19:
 686:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 597              		.loc 1 686 0
 598 003c 00BF     		nop
 599              	.L16:
 692:Generated_Source\PSoC5/CapSense_CSD.c ****         
 693:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 600              		.loc 1 693 0
 601 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 602              		.loc 1 694 0
 603 0040 1846     		mov	r0, r3
 604 0042 1437     		adds	r7, r7, #20
 605              		.cfi_def_cfa_offset 4
 606 0044 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 0046 80BC     		pop	{r7}
 610              		.cfi_restore 7
 611              		.cfi_def_cfa_offset 0
 612 0048 7047     		bx	lr
 613              	.L21:
 614 004a 00BF     		.align	2
 615              	.L20:
 616 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 24


 617              		.cfi_endproc
 618              	.LFE4:
 619              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 620              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 621              		.align	2
 622              		.global	CapSense_CSD_SetScanSlotSettings
 623              		.thumb
 624              		.thumb_func
 625              		.type	CapSense_CSD_SetScanSlotSettings, %function
 626              	CapSense_CSD_SetScanSlotSettings:
 627              	.LFB5:
 695:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 696:Generated_Source\PSoC5/CapSense_CSD.c ****  
 697:Generated_Source\PSoC5/CapSense_CSD.c ****  
 698:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 708:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 709:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 710:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 711:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 713:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 714:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 715:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 719:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 720:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 721:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 722:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 723:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 724:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 725:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 726:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 727:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 728:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 729:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 730:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 731:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 733:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 734:Generated_Source\PSoC5/CapSense_CSD.c ****         
 735:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 736:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 737:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 738:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 739:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 25


 741:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 742:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 743:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 744:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 745:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 746:Generated_Source\PSoC5/CapSense_CSD.c ****             
 747:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 748:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         
 752:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 753:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 754:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 756:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 757:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 758:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 759:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 760:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 761:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 762:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 763:Generated_Source\PSoC5/CapSense_CSD.c ****             
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 765:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 766:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 767:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 768:Generated_Source\PSoC5/CapSense_CSD.c ****         
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 770:Generated_Source\PSoC5/CapSense_CSD.c ****         
 771:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 772:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 773:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 774:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             
 777:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 778:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 780:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 782:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 783:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 784:Generated_Source\PSoC5/CapSense_CSD.c ****            
 785:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 786:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 787:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 788:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 789:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 790:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 791:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 792:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 793:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 794:Generated_Source\PSoC5/CapSense_CSD.c ****             
 795:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 796:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 797:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 26


 798:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 799:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 800:Generated_Source\PSoC5/CapSense_CSD.c ****         
 801:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 802:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 803:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 804:Generated_Source\PSoC5/CapSense_CSD.c **** 
 805:Generated_Source\PSoC5/CapSense_CSD.c **** 
 806:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 807:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 808:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 809:Generated_Source\PSoC5/CapSense_CSD.c **** *
 810:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 811:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 812:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 813:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 814:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 815:Generated_Source\PSoC5/CapSense_CSD.c **** *
 816:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 817:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 818:Generated_Source\PSoC5/CapSense_CSD.c **** *
 819:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 820:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 821:Generated_Source\PSoC5/CapSense_CSD.c **** *
 822:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 823:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 824:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 825:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 826:Generated_Source\PSoC5/CapSense_CSD.c **** *
 827:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 828:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 829:Generated_Source\PSoC5/CapSense_CSD.c **** {
 628              		.loc 1 829 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 16
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 84B0     		sub	sp, sp, #16
 637              		.cfi_def_cfa_offset 24
 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 640 0006 0346     		mov	r3, r0
 641 0008 FB71     		strb	r3, [r7, #7]
 830:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 831:Generated_Source\PSoC5/CapSense_CSD.c ****     
 832:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 833:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 834:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 642              		.loc 1 834 0
 643 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 644 000c 0B4A     		ldr	r2, .L23
 645 000e D35C     		ldrb	r3, [r2, r3]
 646 0010 FB73     		strb	r3, [r7, #15]
 835:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 27


 836:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 838:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 647              		.loc 1 838 0
 648 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 0014 0A4A     		ldr	r2, .L23+4
 650 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 651 0018 1846     		mov	r0, r3
 652 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 839:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 840:Generated_Source\PSoC5/CapSense_CSD.c ****         
 841:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 842:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 844:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 845:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 653              		.loc 1 846 0
 654 001e 094A     		ldr	r2, .L23+8
 655 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 656 0022 0949     		ldr	r1, .L23+12
 657 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 658 0026 1370     		strb	r3, [r2]
 847:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 848:Generated_Source\PSoC5/CapSense_CSD.c **** 
 849:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 850:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 659              		.loc 1 851 0
 660 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 661 002a 084A     		ldr	r2, .L23+16
 662 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 663 002e 1846     		mov	r0, r3
 664 0030 FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 852:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 855:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 856:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 857:Generated_Source\PSoC5/CapSense_CSD.c **** 
 858:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 860:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 861:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 862:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 863:Generated_Source\PSoC5/CapSense_CSD.c ****             
 864:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 866:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 867:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 868:Generated_Source\PSoC5/CapSense_CSD.c ****             
 869:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 871:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 872:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 873:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 874:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 28


 875:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 876:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 877:Generated_Source\PSoC5/CapSense_CSD.c ****         
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 879:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 880:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 881:Generated_Source\PSoC5/CapSense_CSD.c ****         
 882:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 883:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 884:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 885:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 886:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 887:Generated_Source\PSoC5/CapSense_CSD.c ****             
 888:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 889:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 890:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 891:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 892:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 893:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 894:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 895:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 896:Generated_Source\PSoC5/CapSense_CSD.c **** 
 897:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 898:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 899:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 900:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 901:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 902:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 903:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 904:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 905:Generated_Source\PSoC5/CapSense_CSD.c **** 
 906:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 907:Generated_Source\PSoC5/CapSense_CSD.c **** }
 665              		.loc 1 907 0
 666 0034 00BF     		nop
 667 0036 1037     		adds	r7, r7, #16
 668              		.cfi_def_cfa_offset 8
 669 0038 BD46     		mov	sp, r7
 670              		.cfi_def_cfa_register 13
 671              		@ sp needed
 672 003a 80BD     		pop	{r7, pc}
 673              	.L24:
 674              		.align	2
 675              	.L23:
 676 003c 00000000 		.word	CapSense_CSD_widgetNumber
 677 0040 00000000 		.word	CapSense_CSD_idacSettings
 678 0044 5C640040 		.word	1073767516
 679 0048 00000000 		.word	CapSense_CSD_widgetResolution
 680 004c 00000000 		.word	CapSense_CSD_analogSwitchDivider
 681              		.cfi_endproc
 682              	.LFE5:
 683              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 684              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 685              		.align	2
 686              		.global	CapSense_CSD_ScanSensor
 687              		.thumb
 688              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 29


 689              		.type	CapSense_CSD_ScanSensor, %function
 690              	CapSense_CSD_ScanSensor:
 691              	.LFB6:
 908:Generated_Source\PSoC5/CapSense_CSD.c **** 
 909:Generated_Source\PSoC5/CapSense_CSD.c **** 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 912:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 918:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 919:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 920:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 921:Generated_Source\PSoC5/CapSense_CSD.c **** *
 922:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 923:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 924:Generated_Source\PSoC5/CapSense_CSD.c **** *
 925:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 926:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 927:Generated_Source\PSoC5/CapSense_CSD.c **** *
 928:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 929:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 930:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 931:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 932:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 933:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 934:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 935:Generated_Source\PSoC5/CapSense_CSD.c **** *
 936:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 937:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 938:Generated_Source\PSoC5/CapSense_CSD.c **** *
 939:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 940:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 941:Generated_Source\PSoC5/CapSense_CSD.c **** {
 692              		.loc 1 941 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 82B0     		sub	sp, sp, #8
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 0346     		mov	r3, r0
 705 0008 FB71     		strb	r3, [r7, #7]
 942:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 943:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 706              		.loc 1 943 0
 707 000a 084B     		ldr	r3, .L26
 708 000c 0022     		movs	r2, #0
 709 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 30


 944:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 710              		.loc 1 944 0
 711 0010 074A     		ldr	r2, .L26+4
 712 0012 FB79     		ldrb	r3, [r7, #7]
 713 0014 1370     		strb	r3, [r2]
 945:Generated_Source\PSoC5/CapSense_CSD.c ****     
 946:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 947:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 714              		.loc 1 948 0
 715 0016 054B     		ldr	r3, .L26
 716 0018 8122     		movs	r2, #129
 717 001a 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 718              		.loc 1 949 0
 719 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 720 001e 1846     		mov	r0, r3
 721 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         
 951:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 952:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 956:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 960:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 961:Generated_Source\PSoC5/CapSense_CSD.c ****         
 962:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 963:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 964:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 965:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 966:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 967:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 968:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 969:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 970:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 971:Generated_Source\PSoC5/CapSense_CSD.c ****         
 972:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 973:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 974:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 975:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 976:Generated_Source\PSoC5/CapSense_CSD.c ****         
 977:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 978:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 979:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 980:Generated_Source\PSoC5/CapSense_CSD.c ****         
 981:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 982:Generated_Source\PSoC5/CapSense_CSD.c **** }
 722              		.loc 1 982 0
 723 0024 00BF     		nop
 724 0026 0837     		adds	r7, r7, #8
 725              		.cfi_def_cfa_offset 8
 726 0028 BD46     		mov	sp, r7
 727              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 31


 728              		@ sp needed
 729 002a 80BD     		pop	{r7, pc}
 730              	.L27:
 731              		.align	2
 732              	.L26:
 733 002c 00000000 		.word	CapSense_CSD_csv
 734 0030 00000000 		.word	CapSense_CSD_sensorIndex
 735              		.cfi_endproc
 736              	.LFE6:
 737              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 738              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 739              		.align	2
 740              		.global	CapSense_CSD_ScanEnabledWidgets
 741              		.thumb
 742              		.thumb_func
 743              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 744              	CapSense_CSD_ScanEnabledWidgets:
 745              	.LFB7:
 983:Generated_Source\PSoC5/CapSense_CSD.c **** 
 984:Generated_Source\PSoC5/CapSense_CSD.c **** 
 985:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 986:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 987:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *
 989:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 991:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 993:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 995:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 996:Generated_Source\PSoC5/CapSense_CSD.c **** *
 997:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 998:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 999:Generated_Source\PSoC5/CapSense_CSD.c **** *
1000:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1001:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1002:Generated_Source\PSoC5/CapSense_CSD.c **** *
1003:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1004:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1005:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1006:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
1007:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
1008:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
1009:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
1010:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
1011:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
1012:Generated_Source\PSoC5/CapSense_CSD.c **** *
1013:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
1014:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
1015:Generated_Source\PSoC5/CapSense_CSD.c **** *
1016:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1017:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1018:Generated_Source\PSoC5/CapSense_CSD.c **** {
 746              		.loc 1 1018 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 32


 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
1019:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1020:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 756              		.loc 1 1020 0
 757 0004 124B     		ldr	r3, .L31
 758 0006 0022     		movs	r2, #0
 759 0008 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 760              		.loc 1 1021 0
 761 000a 124B     		ldr	r3, .L31+4
 762 000c FF22     		movs	r2, #255
 763 000e 1A70     		strb	r2, [r3]
1022:Generated_Source\PSoC5/CapSense_CSD.c ****     
1023:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1024:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1025:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 764              		.loc 1 1025 0
 765 0010 104B     		ldr	r3, .L31+4
 766 0012 1B78     		ldrb	r3, [r3]
 767 0014 DBB2     		uxtb	r3, r3
 768 0016 1846     		mov	r0, r3
 769 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 770 001c 0346     		mov	r3, r0
 771 001e 1A46     		mov	r2, r3
 772 0020 0C4B     		ldr	r3, .L31+4
 773 0022 1A70     		strb	r2, [r3]
1026:Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 774              		.loc 1 1028 0
 775 0024 0B4B     		ldr	r3, .L31+4
 776 0026 1B78     		ldrb	r3, [r3]
 777 0028 DBB2     		uxtb	r3, r3
 778 002a 062B     		cmp	r3, #6
 779 002c 0DD8     		bhi	.L30
1029:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1030:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 780              		.loc 1 1030 0
 781 002e 084B     		ldr	r3, .L31
 782 0030 1B78     		ldrb	r3, [r3]
 783 0032 DBB2     		uxtb	r3, r3
 784 0034 43F00103 		orr	r3, r3, #1
 785 0038 DAB2     		uxtb	r2, r3
 786 003a 054B     		ldr	r3, .L31
 787 003c 1A70     		strb	r2, [r3]
1031:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 788              		.loc 1 1031 0
 789 003e 054B     		ldr	r3, .L31+4
 790 0040 1B78     		ldrb	r3, [r3]
 791 0042 DBB2     		uxtb	r3, r3
 792 0044 1846     		mov	r0, r3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 33


 793 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 794              	.L30:
1032:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1033:Generated_Source\PSoC5/CapSense_CSD.c ****         
1034:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1035:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1036:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1037:Generated_Source\PSoC5/CapSense_CSD.c ****         
1038:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1039:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1040:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1041:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1042:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1043:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1044:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1045:Generated_Source\PSoC5/CapSense_CSD.c ****         
1046:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1047:Generated_Source\PSoC5/CapSense_CSD.c **** }
 795              		.loc 1 1047 0
 796 004a 00BF     		nop
 797 004c 80BD     		pop	{r7, pc}
 798              	.L32:
 799 004e 00BF     		.align	2
 800              	.L31:
 801 0050 00000000 		.word	CapSense_CSD_csv
 802 0054 00000000 		.word	CapSense_CSD_sensorIndex
 803              		.cfi_endproc
 804              	.LFE7:
 805              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 806              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 807              		.align	2
 808              		.global	CapSense_CSD_IsBusy
 809              		.thumb
 810              		.thumb_func
 811              		.type	CapSense_CSD_IsBusy, %function
 812              	CapSense_CSD_IsBusy:
 813              	.LFB8:
1048:Generated_Source\PSoC5/CapSense_CSD.c **** 
1049:Generated_Source\PSoC5/CapSense_CSD.c **** 
1050:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1051:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1052:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1053:Generated_Source\PSoC5/CapSense_CSD.c **** *
1054:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1055:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1056:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1060:Generated_Source\PSoC5/CapSense_CSD.c **** *
1061:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1063:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *
1065:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1066:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 34


1068:Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1071:Generated_Source\PSoC5/CapSense_CSD.c **** {
 814              		.loc 1 1071 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 7, -4
 822 0002 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
1072:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 824              		.loc 1 1072 0
 825 0004 044B     		ldr	r3, .L35
 826 0006 1B78     		ldrb	r3, [r3]
 827 0008 DBB2     		uxtb	r3, r3
 828 000a 03F00103 		and	r3, r3, #1
 829 000e DBB2     		uxtb	r3, r3
1073:Generated_Source\PSoC5/CapSense_CSD.c **** }
 830              		.loc 1 1073 0
 831 0010 1846     		mov	r0, r3
 832 0012 BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 0014 80BC     		pop	{r7}
 836              		.cfi_restore 7
 837              		.cfi_def_cfa_offset 0
 838 0016 7047     		bx	lr
 839              	.L36:
 840              		.align	2
 841              	.L35:
 842 0018 00000000 		.word	CapSense_CSD_csv
 843              		.cfi_endproc
 844              	.LFE8:
 845              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 846              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 847              		.align	2
 848              		.global	CapSense_CSD_ReadSensorRaw
 849              		.thumb
 850              		.thumb_func
 851              		.type	CapSense_CSD_ReadSensorRaw, %function
 852              	CapSense_CSD_ReadSensorRaw:
 853              	.LFB9:
1074:Generated_Source\PSoC5/CapSense_CSD.c **** 
1075:Generated_Source\PSoC5/CapSense_CSD.c **** 
1076:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1078:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense_CSD.c **** *
1080:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1081:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1083:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 35


1085:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1086:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1087:Generated_Source\PSoC5/CapSense_CSD.c **** *
1088:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1089:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1090:Generated_Source\PSoC5/CapSense_CSD.c **** *
1091:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1092:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *
1094:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1095:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1096:Generated_Source\PSoC5/CapSense_CSD.c **** {
 854              		.loc 1 1096 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0002 83B0     		sub	sp, sp, #12
 863              		.cfi_def_cfa_offset 16
 864 0004 00AF     		add	r7, sp, #0
 865              		.cfi_def_cfa_register 7
 866 0006 0346     		mov	r3, r0
 867 0008 FB71     		strb	r3, [r7, #7]
1097:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 868              		.loc 1 1097 0
 869 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 870 000c 034A     		ldr	r2, .L39
 871 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1098:Generated_Source\PSoC5/CapSense_CSD.c **** }
 872              		.loc 1 1098 0
 873 0012 1846     		mov	r0, r3
 874 0014 0C37     		adds	r7, r7, #12
 875              		.cfi_def_cfa_offset 4
 876 0016 BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0018 80BC     		pop	{r7}
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 001a 7047     		bx	lr
 883              	.L40:
 884              		.align	2
 885              	.L39:
 886 001c 00000000 		.word	CapSense_CSD_sensorRaw
 887              		.cfi_endproc
 888              	.LFE9:
 889              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 890              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 891              		.align	2
 892              		.global	CapSense_CSD_ClearSensors
 893              		.thumb
 894              		.thumb_func
 895              		.type	CapSense_CSD_ClearSensors, %function
 896              	CapSense_CSD_ClearSensors:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 36


 897              	.LFB10:
1099:Generated_Source\PSoC5/CapSense_CSD.c **** 
1100:Generated_Source\PSoC5/CapSense_CSD.c **** 
1101:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1102:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1103:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1104:Generated_Source\PSoC5/CapSense_CSD.c **** *
1105:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1106:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1107:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1108:Generated_Source\PSoC5/CapSense_CSD.c **** *
1109:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1110:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1111:Generated_Source\PSoC5/CapSense_CSD.c **** *
1112:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1113:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1114:Generated_Source\PSoC5/CapSense_CSD.c **** *
1115:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1116:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1117:Generated_Source\PSoC5/CapSense_CSD.c **** {
 898              		.loc 1 1117 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 80B5     		push	{r7, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 82B0     		sub	sp, sp, #8
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1119:Generated_Source\PSoC5/CapSense_CSD.c ****    
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 910              		.loc 1 1120 0
 911 0006 0023     		movs	r3, #0
 912 0008 FB71     		strb	r3, [r7, #7]
 913 000a 06E0     		b	.L42
 914              	.L43:
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1122:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 915              		.loc 1 1122 0 discriminator 3
 916 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 917 000e 1846     		mov	r0, r3
 918 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 919              		.loc 1 1120 0 discriminator 3
 920 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 921 0016 0133     		adds	r3, r3, #1
 922 0018 FB71     		strb	r3, [r7, #7]
 923              	.L42:
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 924              		.loc 1 1120 0 is_stmt 0 discriminator 1
 925 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 926 001c 062B     		cmp	r3, #6
 927 001e F5D9     		bls	.L43
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 37


1123:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1124:Generated_Source\PSoC5/CapSense_CSD.c **** }
 928              		.loc 1 1124 0 is_stmt 1
 929 0020 00BF     		nop
 930 0022 0837     		adds	r7, r7, #8
 931              		.cfi_def_cfa_offset 8
 932 0024 BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 0026 80BD     		pop	{r7, pc}
 936              		.cfi_endproc
 937              	.LFE10:
 938              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 939              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 940              		.align	2
 941              		.global	CapSense_CSD_EnableSensor
 942              		.thumb
 943              		.thumb_func
 944              		.type	CapSense_CSD_EnableSensor, %function
 945              	CapSense_CSD_EnableSensor:
 946              	.LFB11:
1125:Generated_Source\PSoC5/CapSense_CSD.c **** 
1126:Generated_Source\PSoC5/CapSense_CSD.c **** 
1127:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1134:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1135:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1136:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1137:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1138:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1139:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1140:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1141:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1142:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1143:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1144:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1145:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1146:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1147:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1148:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1149:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1150:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1151:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1152:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1153:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1154:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1155:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1156:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1158:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1159:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1160:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 38


1161:Generated_Source\PSoC5/CapSense_CSD.c ****         
1162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1163:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1164:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1165:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1166:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1167:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1168:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1169:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1170:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1171:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1172:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1173:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1174:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1175:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1176:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1177:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1178:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1179:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1188:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1189:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1190:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1191:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1192:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1193:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1194:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1195:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1196:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1197:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1198:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1199:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1200:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1201:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1202:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1203:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1204:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1205:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1206:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1207:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1208:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1209:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1210:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1212:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1213:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1214:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1215:Generated_Source\PSoC5/CapSense_CSD.c ****         
1216:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1217:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 39


1218:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1219:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1220:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1221:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1222:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1223:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1224:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1225:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1226:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1227:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1228:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1229:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1230:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1231:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1232:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1233:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1234:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1235:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1236:Generated_Source\PSoC5/CapSense_CSD.c **** 
1237:Generated_Source\PSoC5/CapSense_CSD.c **** 
1238:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1239:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1240:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *
1242:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1244:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1245:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1246:Generated_Source\PSoC5/CapSense_CSD.c **** *
1247:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1248:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1249:Generated_Source\PSoC5/CapSense_CSD.c **** *
1250:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1251:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1252:Generated_Source\PSoC5/CapSense_CSD.c **** *
1253:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1254:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1255:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1256:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1257:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1258:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1259:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1260:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1261:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1262:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1263:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1264:Generated_Source\PSoC5/CapSense_CSD.c **** *
1265:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1266:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1267:Generated_Source\PSoC5/CapSense_CSD.c **** {
 947              		.loc 1 1267 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 16
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951 0000 80B5     		push	{r7, lr}
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 40


 954              		.cfi_offset 14, -4
 955 0002 84B0     		sub	sp, sp, #16
 956              		.cfi_def_cfa_offset 24
 957 0004 00AF     		add	r7, sp, #0
 958              		.cfi_def_cfa_register 7
 959 0006 0346     		mov	r3, r0
 960 0008 FB71     		strb	r3, [r7, #7]
1268:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 961              		.loc 1 1268 0
 962 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 963 000c 134A     		ldr	r2, .L46
 964 000e D35C     		ldrb	r3, [r2, r3]
 965 0010 FB73     		strb	r3, [r7, #15]
1269:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 966              		.loc 1 1269 0
 967 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 968 0014 124A     		ldr	r2, .L46+4
 969 0016 D35C     		ldrb	r3, [r2, r3]
 970 0018 BB73     		strb	r3, [r7, #14]
1270:Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1272:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1273:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1274:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1275:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1277:Generated_Source\PSoC5/CapSense_CSD.c ****     
1278:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1279:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 971              		.loc 1 1279 0
 972 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 973 001c 114A     		ldr	r2, .L46+8
 974 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 975 0022 0922     		movs	r2, #9
 976 0024 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/CapSense_CSD.c ****     
1281:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1282:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 977              		.loc 1 1282 0
 978 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 979 0028 0F2B     		cmp	r3, #15
 980 002a 01D1     		bne	.L45
1283:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1284:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 981              		.loc 1 1284 0
 982 002c 0723     		movs	r3, #7
 983 002e FB73     		strb	r3, [r7, #15]
 984              	.L45:
1285:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1286:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 985              		.loc 1 1286 0
 986 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 987 0032 0D4A     		ldr	r2, .L46+12
 988 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 989 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 990 003a 0B49     		ldr	r1, .L46+12
 991 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 41


 992 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 993 0042 BA7B     		ldrb	r2, [r7, #14]
 994 0044 0A43     		orrs	r2, r2, r1
 995 0046 D2B2     		uxtb	r2, r2
 996 0048 1A70     		strb	r2, [r3]
1287:Generated_Source\PSoC5/CapSense_CSD.c ****     
1288:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1289:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1290:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1292:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1293:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 997              		.loc 1 1293 0
 998 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 999 004c 1846     		mov	r0, r3
 1000 004e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1294:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1295:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1296:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1297:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1298:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1299:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1300:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1301:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1302:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1303:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1304:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1305:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1306:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1307:Generated_Source\PSoC5/CapSense_CSD.c ****             
1308:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1309:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1310:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1311:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1312:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1313:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1314:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1315:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1316:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1317:Generated_Source\PSoC5/CapSense_CSD.c ****             
1318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1319:Generated_Source\PSoC5/CapSense_CSD.c ****         
1320:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1321:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1001              		.loc 1 1321 0
 1002 0052 00BF     		nop
 1003 0054 1037     		adds	r7, r7, #16
 1004              		.cfi_def_cfa_offset 8
 1005 0056 BD46     		mov	sp, r7
 1006              		.cfi_def_cfa_register 13
 1007              		@ sp needed
 1008 0058 80BD     		pop	{r7, pc}
 1009              	.L47:
 1010 005a 00BF     		.align	2
 1011              	.L46:
 1012 005c 00000000 		.word	CapSense_CSD_portTable
 1013 0060 00000000 		.word	CapSense_CSD_maskTable
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 42


 1014 0064 00000000 		.word	CapSense_CSD_pcTable
 1015 0068 00000000 		.word	CapSense_CSD_csTable
 1016              		.cfi_endproc
 1017              	.LFE11:
 1018              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 1019              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 1020              		.align	2
 1021              		.global	CapSense_CSD_DisableSensor
 1022              		.thumb
 1023              		.thumb_func
 1024              		.type	CapSense_CSD_DisableSensor, %function
 1025              	CapSense_CSD_DisableSensor:
 1026              	.LFB12:
1322:Generated_Source\PSoC5/CapSense_CSD.c **** 
1323:Generated_Source\PSoC5/CapSense_CSD.c **** 
1324:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1325:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1326:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1329:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1330:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1331:Generated_Source\PSoC5/CapSense_CSD.c **** *
1332:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1333:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1334:Generated_Source\PSoC5/CapSense_CSD.c **** *
1335:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1336:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1337:Generated_Source\PSoC5/CapSense_CSD.c **** *
1338:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1339:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1340:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1341:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1342:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1343:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1344:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1345:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1346:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1347:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1348:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1349:Generated_Source\PSoC5/CapSense_CSD.c **** *
1350:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1351:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1352:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1027              		.loc 1 1352 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 16
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031 0000 80B5     		push	{r7, lr}
 1032              		.cfi_def_cfa_offset 8
 1033              		.cfi_offset 7, -8
 1034              		.cfi_offset 14, -4
 1035 0002 84B0     		sub	sp, sp, #16
 1036              		.cfi_def_cfa_offset 24
 1037 0004 00AF     		add	r7, sp, #0
 1038              		.cfi_def_cfa_register 7
 1039 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 43


 1040 0008 FB71     		strb	r3, [r7, #7]
1353:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 1041              		.loc 1 1353 0
 1042 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1043 000c 144A     		ldr	r2, .L50
 1044 000e D35C     		ldrb	r3, [r2, r3]
 1045 0010 FB73     		strb	r3, [r7, #15]
1354:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 1046              		.loc 1 1354 0
 1047 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 0014 134A     		ldr	r2, .L50+4
 1049 0016 D35C     		ldrb	r3, [r2, r3]
 1050 0018 BB73     		strb	r3, [r7, #14]
1355:Generated_Source\PSoC5/CapSense_CSD.c ****     
1356:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1357:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1358:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1359:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1361:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1362:Generated_Source\PSoC5/CapSense_CSD.c ****     
1363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1364:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1365:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1367:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1368:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 1051              		.loc 1 1368 0
 1052 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1053 001c 1846     		mov	r0, r3
 1054 001e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1369:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1370:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1371:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1372:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1373:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1374:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1375:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1376:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1377:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1378:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1379:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1380:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1381:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1382:Generated_Source\PSoC5/CapSense_CSD.c ****             
1383:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1384:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1385:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1386:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1387:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1388:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1389:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1390:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1391:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1392:Generated_Source\PSoC5/CapSense_CSD.c ****             
1393:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1394:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 44


1395:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1396:Generated_Source\PSoC5/CapSense_CSD.c ****     
1397:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1398:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 1055              		.loc 1 1398 0
 1056 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1057 0024 0F2B     		cmp	r3, #15
 1058 0026 01D1     		bne	.L49
1399:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1400:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 1059              		.loc 1 1400 0
 1060 0028 0723     		movs	r3, #7
 1061 002a FB73     		strb	r3, [r7, #15]
 1062              	.L49:
1401:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1402:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 1063              		.loc 1 1402 0
 1064 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 002e 0E4A     		ldr	r2, .L50+8
 1066 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1067 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1068 0036 0C49     		ldr	r1, .L50+8
 1069 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1070 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1071 003e BA7B     		ldrb	r2, [r7, #14]
 1072 0040 D243     		mvns	r2, r2
 1073 0042 D2B2     		uxtb	r2, r2
 1074 0044 0A40     		ands	r2, r2, r1
 1075 0046 D2B2     		uxtb	r2, r2
 1076 0048 1A70     		strb	r2, [r3]
1403:Generated_Source\PSoC5/CapSense_CSD.c ****     
1404:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1405:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1406:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 1077              		.loc 1 1406 0
 1078 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1079 004c 074A     		ldr	r2, .L50+12
 1080 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1081 0052 0822     		movs	r2, #8
 1082 0054 1A70     		strb	r2, [r3]
1407:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1408:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1409:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1410:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1411:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1412:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1083              		.loc 1 1412 0
 1084 0056 00BF     		nop
 1085 0058 1037     		adds	r7, r7, #16
 1086              		.cfi_def_cfa_offset 8
 1087 005a BD46     		mov	sp, r7
 1088              		.cfi_def_cfa_register 13
 1089              		@ sp needed
 1090 005c 80BD     		pop	{r7, pc}
 1091              	.L51:
 1092 005e 00BF     		.align	2
 1093              	.L50:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 45


 1094 0060 00000000 		.word	CapSense_CSD_portTable
 1095 0064 00000000 		.word	CapSense_CSD_maskTable
 1096 0068 00000000 		.word	CapSense_CSD_csTable
 1097 006c 00000000 		.word	CapSense_CSD_pcTable
 1098              		.cfi_endproc
 1099              	.LFE12:
 1100              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1101              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1102              		.align	2
 1103              		.global	CapSense_CSD_PreScan
 1104              		.thumb
 1105              		.thumb_func
 1106              		.type	CapSense_CSD_PreScan, %function
 1107              	CapSense_CSD_PreScan:
 1108              	.LFB13:
1413:Generated_Source\PSoC5/CapSense_CSD.c **** 
1414:Generated_Source\PSoC5/CapSense_CSD.c **** 
1415:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1416:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1417:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1418:Generated_Source\PSoC5/CapSense_CSD.c **** *
1419:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1420:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1421:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1422:Generated_Source\PSoC5/CapSense_CSD.c **** *
1423:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1424:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1425:Generated_Source\PSoC5/CapSense_CSD.c **** *
1426:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1427:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1428:Generated_Source\PSoC5/CapSense_CSD.c **** *
1429:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1430:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1431:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1432:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1433:Generated_Source\PSoC5/CapSense_CSD.c **** *
1434:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1435:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1436:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1109              		.loc 1 1436 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 8
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 80B5     		push	{r7, lr}
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 7, -8
 1116              		.cfi_offset 14, -4
 1117 0002 82B0     		sub	sp, sp, #8
 1118              		.cfi_def_cfa_offset 16
 1119 0004 00AF     		add	r7, sp, #0
 1120              		.cfi_def_cfa_register 7
 1121 0006 0346     		mov	r3, r0
 1122 0008 FB71     		strb	r3, [r7, #7]
1437:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1438:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1123              		.loc 1 1438 0
 1124 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 46


 1125 000c 1846     		mov	r0, r3
 1126 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1439:Generated_Source\PSoC5/CapSense_CSD.c ****     
1440:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1441:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1442:Generated_Source\PSoC5/CapSense_CSD.c **** 
1443:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1444:Generated_Source\PSoC5/CapSense_CSD.c ****     
1445:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1446:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1447:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1448:Generated_Source\PSoC5/CapSense_CSD.c **** 
1449:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1450:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1127              		.loc 1 1450 0
 1128 0012 104A     		ldr	r2, .L53
 1129 0014 0F4B     		ldr	r3, .L53
 1130 0016 1B78     		ldrb	r3, [r3]
 1131 0018 DBB2     		uxtb	r3, r3
 1132 001a 43F00103 		orr	r3, r3, #1
 1133 001e DBB2     		uxtb	r3, r3
 1134 0020 1370     		strb	r3, [r2]
1451:Generated_Source\PSoC5/CapSense_CSD.c ****         
1452:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1453:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1456:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1458:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1135              		.loc 1 1458 0
 1136 0022 0D4A     		ldr	r2, .L53+4
 1137 0024 0C4B     		ldr	r3, .L53+4
 1138 0026 1B78     		ldrb	r3, [r3]
 1139 0028 DBB2     		uxtb	r3, r3
 1140 002a 23F00103 		bic	r3, r3, #1
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 1370     		strb	r3, [r2]
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1460:Generated_Source\PSoC5/CapSense_CSD.c **** 
1461:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1143              		.loc 1 1462 0
 1144 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1145 0034 1846     		mov	r0, r3
 1146 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1463:Generated_Source\PSoC5/CapSense_CSD.c ****             
1464:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1465:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1466:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1467:Generated_Source\PSoC5/CapSense_CSD.c ****             
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1469:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1470:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1471:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1472:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1473:Generated_Source\PSoC5/CapSense_CSD.c ****             
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 47


1474:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1475:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1476:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1477:Generated_Source\PSoC5/CapSense_CSD.c ****             
1478:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1479:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1480:Generated_Source\PSoC5/CapSense_CSD.c ****              
1481:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1482:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1483:Generated_Source\PSoC5/CapSense_CSD.c ****         
1484:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1485:Generated_Source\PSoC5/CapSense_CSD.c ****         
1486:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1487:Generated_Source\PSoC5/CapSense_CSD.c **** 
1488:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1489:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1490:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1498:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1499:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1500:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1501:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1502:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1503:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1504:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1505:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1506:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1507:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1511:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1512:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1518:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1520:Generated_Source\PSoC5/CapSense_CSD.c ****             
1521:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1522:Generated_Source\PSoC5/CapSense_CSD.c ****             
1523:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1524:Generated_Source\PSoC5/CapSense_CSD.c ****         
1525:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1526:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1527:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1528:Generated_Source\PSoC5/CapSense_CSD.c ****             
1529:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 48


1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1537:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1538:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1539:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1541:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1543:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1544:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1545:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1546:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1547:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1548:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1549:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1550:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1551:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1552:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1553:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1554:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1555:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1556:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1557:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1558:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1559:Generated_Source\PSoC5/CapSense_CSD.c ****             
1560:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1561:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1562:Generated_Source\PSoC5/CapSense_CSD.c ****     
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1147              		.loc 1 1566 0
 1148 003a 064A     		ldr	r2, .L53
 1149 003c 054B     		ldr	r3, .L53
 1150 003e 1B78     		ldrb	r3, [r3]
 1151 0040 DBB2     		uxtb	r3, r3
 1152 0042 43F00203 		orr	r3, r3, #2
 1153 0046 DBB2     		uxtb	r3, r3
 1154 0048 1370     		strb	r3, [r2]
1567:Generated_Source\PSoC5/CapSense_CSD.c ****     
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1570:Generated_Source\PSoC5/CapSense_CSD.c **** 
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1572:Generated_Source\PSoC5/CapSense_CSD.c **** 
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1574:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1576:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1155              		.loc 1 1576 0
 1156 004a 00BF     		nop
 1157 004c 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 49


 1158              		.cfi_def_cfa_offset 8
 1159 004e BD46     		mov	sp, r7
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 0050 80BD     		pop	{r7, pc}
 1163              	.L54:
 1164 0052 00BF     		.align	2
 1165              	.L53:
 1166 0054 79640040 		.word	1073767545
 1167 0058 70580040 		.word	1073764464
 1168              		.cfi_endproc
 1169              	.LFE13:
 1170              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1171              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1172              		.align	2
 1173              		.global	CapSense_CSD_PostScan
 1174              		.thumb
 1175              		.thumb_func
 1176              		.type	CapSense_CSD_PostScan, %function
 1177              	CapSense_CSD_PostScan:
 1178              	.LFB14:
1577:Generated_Source\PSoC5/CapSense_CSD.c **** 
1578:Generated_Source\PSoC5/CapSense_CSD.c **** 
1579:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1583:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1584:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1585:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1586:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1587:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1588:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1589:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1590:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1591:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1592:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1593:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1594:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1595:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1596:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1597:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1598:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1599:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1600:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1601:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1602:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1603:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1604:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1179              		.loc 1 1604 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 8
 1182              		@ frame_needed = 1, uses_anonymous_args = 0
 1183 0000 80B5     		push	{r7, lr}
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 50


 1187 0002 82B0     		sub	sp, sp, #8
 1188              		.cfi_def_cfa_offset 16
 1189 0004 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 1191 0006 0346     		mov	r3, r0
 1192 0008 FB71     		strb	r3, [r7, #7]
1605:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1606:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1193              		.loc 1 1606 0
 1194 000a 1E4A     		ldr	r2, .L56
 1195 000c 1D4B     		ldr	r3, .L56
 1196 000e 1B78     		ldrb	r3, [r3]
 1197 0010 DBB2     		uxtb	r3, r3
 1198 0012 23F00303 		bic	r3, r3, #3
 1199 0016 DBB2     		uxtb	r3, r3
 1200 0018 1370     		strb	r3, [r2]
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         
1608:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1609:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1610:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1611:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1201              		.loc 1 1613 0
 1202 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1203 001c 1A4A     		ldr	r2, .L56+4
 1204 001e 1278     		ldrb	r2, [r2]
 1205 0020 D2B2     		uxtb	r2, r2
 1206 0022 92B2     		uxth	r2, r2
 1207 0024 1202     		lsls	r2, r2, #8
 1208 0026 91B2     		uxth	r1, r2
 1209 0028 184A     		ldr	r2, .L56+8
 1210 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1211              		.loc 1 1614 0
 1212 002e 184B     		ldr	r3, .L56+12
 1213 0030 1B78     		ldrb	r3, [r3]
 1214 0032 DBB2     		uxtb	r3, r3
 1215 0034 9AB2     		uxth	r2, r3
 1216 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1217 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1218 003a 1448     		ldr	r0, .L56+8
 1219 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1220 0040 0A43     		orrs	r2, r2, r1
 1221 0042 91B2     		uxth	r1, r2
 1222 0044 114A     		ldr	r2, .L56+8
 1223 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1224              		.loc 1 1615 0
 1225 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1616:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1226              		.loc 1 1616 0
 1227 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1228 004e 0F49     		ldr	r1, .L56+8
 1229 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1230              		.loc 1 1615 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 51


 1231 0054 D243     		mvns	r2, r2
 1232 0056 91B2     		uxth	r1, r2
 1233 0058 0C4A     		ldr	r2, .L56+8
 1234 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****         
1619:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1620:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1235              		.loc 1 1620 0
 1236 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1237 0060 1846     		mov	r0, r3
 1238 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1621:Generated_Source\PSoC5/CapSense_CSD.c ****         
1622:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1623:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1624:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1239              		.loc 1 1624 0
 1240 0066 0020     		movs	r0, #0
 1241 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1625:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1626:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1627:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1628:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1629:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1630:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1631:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1632:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1633:Generated_Source\PSoC5/CapSense_CSD.c ****             
1634:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1635:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1637:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1638:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1242              		.loc 1 1638 0
 1243 006c 094A     		ldr	r2, .L56+16
 1244 006e 094B     		ldr	r3, .L56+16
 1245 0070 1B78     		ldrb	r3, [r3]
 1246 0072 DBB2     		uxtb	r3, r3
 1247 0074 43F00103 		orr	r3, r3, #1
 1248 0078 DBB2     		uxtb	r3, r3
 1249 007a 1370     		strb	r3, [r2]
1639:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1250              		.loc 1 1640 0
 1251 007c 00BF     		nop
 1252 007e 0837     		adds	r7, r7, #8
 1253              		.cfi_def_cfa_offset 8
 1254 0080 BD46     		mov	sp, r7
 1255              		.cfi_def_cfa_register 13
 1256              		@ sp needed
 1257 0082 80BD     		pop	{r7, pc}
 1258              	.L57:
 1259              		.align	2
 1260              	.L56:
 1261 0084 79640040 		.word	1073767545
 1262 0088 1D640040 		.word	1073767453
 1263 008c 00000000 		.word	CapSense_CSD_sensorRaw
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 52


 1264 0090 0D640040 		.word	1073767437
 1265 0094 70580040 		.word	1073764464
 1266              		.cfi_endproc
 1267              	.LFE14:
 1268              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1269              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1270              		.align	2
 1271              		.global	CapSense_CSD_SetPrescaler
 1272              		.thumb
 1273              		.thumb_func
 1274              		.type	CapSense_CSD_SetPrescaler, %function
 1275              	CapSense_CSD_SetPrescaler:
 1276              	.LFB15:
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     
1642:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1643:Generated_Source\PSoC5/CapSense_CSD.c **** 
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1647:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1648:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1649:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1650:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1652:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1653:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1654:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1655:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1656:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1657:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1658:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1659:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1660:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1662:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1663:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1665:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1666:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1667:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1668:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1669:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1670:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1671:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1672:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1673:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1674:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         
1676:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1677:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1678:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1679:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1681:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1683:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1684:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 53


1685:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1686:Generated_Source\PSoC5/CapSense_CSD.c ****         
1687:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1688:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1689:Generated_Source\PSoC5/CapSense_CSD.c ****         
1690:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1691:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1692:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1693:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1694:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1695:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1696:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1697:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1698:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1699:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1700:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1701:Generated_Source\PSoC5/CapSense_CSD.c ****         
1702:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1703:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1704:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1705:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1706:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1707:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1714:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1715:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1719:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1720:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1721:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1722:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1723:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1724:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1725:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1726:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1727:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1728:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1729:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1730:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1731:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1732:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1733:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1734:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1735:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1736:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1737:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1738:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1739:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1740:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1741:Generated_Source\PSoC5/CapSense_CSD.c ****         }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 54


1742:Generated_Source\PSoC5/CapSense_CSD.c ****         
1743:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1744:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1745:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1746:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1748:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1750:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1751:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1753:Generated_Source\PSoC5/CapSense_CSD.c ****         
1754:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1755:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1756:Generated_Source\PSoC5/CapSense_CSD.c ****         
1757:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1758:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1759:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1760:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1761:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1762:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1763:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1764:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1765:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1766:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1767:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1768:Generated_Source\PSoC5/CapSense_CSD.c **** 
1769:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1770:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1771:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1772:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1773:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1774:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     
1777:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1778:Generated_Source\PSoC5/CapSense_CSD.c **** 
1779:Generated_Source\PSoC5/CapSense_CSD.c **** 
1780:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1781:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1782:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1783:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1784:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1786:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1789:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 55


1799:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1800:Generated_Source\PSoC5/CapSense_CSD.c ****         
1801:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1802:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1803:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1804:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1805:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1806:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1819:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1820:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1821:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1822:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1823:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1824:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1825:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1826:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1827:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1828:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1829:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1830:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1831:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1832:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1833:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1834:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1835:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1836:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1837:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1838:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1839:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1840:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1841:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1842:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1843:Generated_Source\PSoC5/CapSense_CSD.c ****             
1844:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1845:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1846:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1847:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1848:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1849:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1850:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1851:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1852:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1853:Generated_Source\PSoC5/CapSense_CSD.c ****     
1854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1855:Generated_Source\PSoC5/CapSense_CSD.c ****     }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 56


1856:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1857:Generated_Source\PSoC5/CapSense_CSD.c **** 
1858:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1859:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1860:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1861:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1862:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1864:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1865:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1866:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1867:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1869:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1870:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1277              		.loc 1 1874 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 1282 0000 80B4     		push	{r7}
 1283              		.cfi_def_cfa_offset 4
 1284              		.cfi_offset 7, -4
 1285 0002 83B0     		sub	sp, sp, #12
 1286              		.cfi_def_cfa_offset 16
 1287 0004 00AF     		add	r7, sp, #0
 1288              		.cfi_def_cfa_register 7
 1289 0006 0346     		mov	r3, r0
 1290 0008 FB71     		strb	r3, [r7, #7]
1875:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1876:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1877:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1291              		.loc 1 1877 0
 1292 000a 064A     		ldr	r2, .L59
 1293 000c FB79     		ldrb	r3, [r7, #7]
 1294 000e 1370     		strb	r3, [r2]
1878:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1295              		.loc 1 1878 0
 1296 0010 054A     		ldr	r2, .L59+4
 1297 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1298 0014 5B08     		lsrs	r3, r3, #1
 1299 0016 DBB2     		uxtb	r3, r3
 1300 0018 1370     		strb	r3, [r2]
1879:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1880:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1881:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1882:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1883:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1884:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1885:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1301              		.loc 1 1885 0
 1302 001a 00BF     		nop
 1303 001c 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 57


 1304              		.cfi_def_cfa_offset 4
 1305 001e BD46     		mov	sp, r7
 1306              		.cfi_def_cfa_register 13
 1307              		@ sp needed
 1308 0020 80BC     		pop	{r7}
 1309              		.cfi_restore 7
 1310              		.cfi_def_cfa_offset 0
 1311 0022 7047     		bx	lr
 1312              	.L60:
 1313              		.align	2
 1314              	.L59:
 1315 0024 28640040 		.word	1073767464
 1316 0028 38640040 		.word	1073767480
 1317              		.cfi_endproc
 1318              	.LFE15:
 1319              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1320              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1321              		.align	2
 1322              		.global	CapSense_CSD_GetPrescaler
 1323              		.thumb
 1324              		.thumb_func
 1325              		.type	CapSense_CSD_GetPrescaler, %function
 1326              	CapSense_CSD_GetPrescaler:
 1327              	.LFB16:
1886:Generated_Source\PSoC5/CapSense_CSD.c **** 
1887:Generated_Source\PSoC5/CapSense_CSD.c **** 
1888:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1889:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1890:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1891:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1892:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1893:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1894:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1895:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1896:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1897:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1898:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1899:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1900:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1901:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1902:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1903:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1328              		.loc 1 1903 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 8
 1331              		@ frame_needed = 1, uses_anonymous_args = 0
 1332              		@ link register save eliminated.
 1333 0000 80B4     		push	{r7}
 1334              		.cfi_def_cfa_offset 4
 1335              		.cfi_offset 7, -4
 1336 0002 83B0     		sub	sp, sp, #12
 1337              		.cfi_def_cfa_offset 16
 1338 0004 00AF     		add	r7, sp, #0
 1339              		.cfi_def_cfa_register 7
1904:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1340              		.loc 1 1904 0
 1341 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 58


 1342 0008 FB71     		strb	r3, [r7, #7]
1905:Generated_Source\PSoC5/CapSense_CSD.c **** 
1906:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1907:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1908:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1343              		.loc 1 1908 0
 1344 000a 044B     		ldr	r3, .L63
 1345 000c 1B78     		ldrb	r3, [r3]
 1346 000e FB71     		strb	r3, [r7, #7]
1909:Generated_Source\PSoC5/CapSense_CSD.c ****             
1910:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1911:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1912:Generated_Source\PSoC5/CapSense_CSD.c ****             
1913:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1914:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1915:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1916:Generated_Source\PSoC5/CapSense_CSD.c ****         
1917:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1347              		.loc 1 1917 0
 1348 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1918:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1349              		.loc 1 1918 0
 1350 0012 1846     		mov	r0, r3
 1351 0014 0C37     		adds	r7, r7, #12
 1352              		.cfi_def_cfa_offset 4
 1353 0016 BD46     		mov	sp, r7
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 0018 80BC     		pop	{r7}
 1357              		.cfi_restore 7
 1358              		.cfi_def_cfa_offset 0
 1359 001a 7047     		bx	lr
 1360              	.L64:
 1361              		.align	2
 1362              	.L63:
 1363 001c 28640040 		.word	1073767464
 1364              		.cfi_endproc
 1365              	.LFE16:
 1366              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1367              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1368              		.align	2
 1369              		.global	CapSense_CSD_SetScanSpeed
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	CapSense_CSD_SetScanSpeed, %function
 1373              	CapSense_CSD_SetScanSpeed:
 1374              	.LFB17:
1919:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1920:Generated_Source\PSoC5/CapSense_CSD.c **** 
1921:Generated_Source\PSoC5/CapSense_CSD.c **** 
1922:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1923:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1924:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1925:Generated_Source\PSoC5/CapSense_CSD.c **** *
1926:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1927:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1928:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 59


1929:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1930:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1931:Generated_Source\PSoC5/CapSense_CSD.c **** *
1932:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1933:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1934:Generated_Source\PSoC5/CapSense_CSD.c **** *
1935:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1936:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1937:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1375              		.loc 1 1937 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
 1383 0002 83B0     		sub	sp, sp, #12
 1384              		.cfi_def_cfa_offset 16
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 0346     		mov	r3, r0
 1388 0008 FB71     		strb	r3, [r7, #7]
1938:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1389              		.loc 1 1938 0
 1390 000a 044A     		ldr	r2, .L66
 1391 000c FB79     		ldrb	r3, [r7, #7]
 1392 000e 1370     		strb	r3, [r2]
1939:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1393              		.loc 1 1939 0
 1394 0010 00BF     		nop
 1395 0012 0C37     		adds	r7, r7, #12
 1396              		.cfi_def_cfa_offset 4
 1397 0014 BD46     		mov	sp, r7
 1398              		.cfi_def_cfa_register 13
 1399              		@ sp needed
 1400 0016 80BC     		pop	{r7}
 1401              		.cfi_restore 7
 1402              		.cfi_def_cfa_offset 0
 1403 0018 7047     		bx	lr
 1404              	.L67:
 1405 001a 00BF     		.align	2
 1406              	.L66:
 1407 001c 8A640040 		.word	1073767562
 1408              		.cfi_endproc
 1409              	.LFE17:
 1410              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1411              		.section	.text.CapSense_CSD_SetAnalogSwitchesSource,"ax",%progbits
 1412              		.align	2
 1413              		.global	CapSense_CSD_SetAnalogSwitchesSource
 1414              		.thumb
 1415              		.thumb_func
 1416              		.type	CapSense_CSD_SetAnalogSwitchesSource, %function
 1417              	CapSense_CSD_SetAnalogSwitchesSource:
 1418              	.LFB18:
1940:Generated_Source\PSoC5/CapSense_CSD.c **** 
1941:Generated_Source\PSoC5/CapSense_CSD.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 60


1942:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRS_OPTIONS)
1943:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1944:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetAnalogSwitchesSource
1945:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1946:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1947:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1948:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1949:Generated_Source\PSoC5/CapSense_CSD.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1950:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is used in auto-tuning procedure.
1951:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1952:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1953:Generated_Source\PSoC5/CapSense_CSD.c ****     *  src:  analog switches source:
1954:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1955:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRS - selects PRS
1956:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1957:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1958:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1959:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1960:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1961:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1962:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1963:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetAnalogSwitchesSource(uint8 src)
1964:Generated_Source\PSoC5/CapSense_CSD.c ****                       
1965:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1419              		.loc 1 1965 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 8
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423              		@ link register save eliminated.
 1424 0000 80B4     		push	{r7}
 1425              		.cfi_def_cfa_offset 4
 1426              		.cfi_offset 7, -4
 1427 0002 83B0     		sub	sp, sp, #12
 1428              		.cfi_def_cfa_offset 16
 1429 0004 00AF     		add	r7, sp, #0
 1430              		.cfi_def_cfa_register 7
 1431 0006 0346     		mov	r3, r0
 1432 0008 FB71     		strb	r3, [r7, #7]
1966:Generated_Source\PSoC5/CapSense_CSD.c ****         if(src == CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER)
 1433              		.loc 1 1966 0
 1434 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1435 000c 012B     		cmp	r3, #1
 1436 000e 08D1     		bne	.L69
1967:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1968:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= (uint8)~0x10u;
 1437              		.loc 1 1968 0
 1438 0010 0A4A     		ldr	r2, .L72
 1439 0012 0A4B     		ldr	r3, .L72
 1440 0014 1B78     		ldrb	r3, [r3]
 1441 0016 DBB2     		uxtb	r3, r3
 1442 0018 23F01003 		bic	r3, r3, #16
 1443 001c DBB2     		uxtb	r3, r3
 1444 001e 1370     		strb	r3, [r2]
1969:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1970:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1971:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1972:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= 0x10u;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 61


1973:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1974:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1445              		.loc 1 1974 0
 1446 0020 07E0     		b	.L71
 1447              	.L69:
1972:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 1448              		.loc 1 1972 0
 1449 0022 064A     		ldr	r2, .L72
 1450 0024 054B     		ldr	r3, .L72
 1451 0026 1B78     		ldrb	r3, [r3]
 1452 0028 DBB2     		uxtb	r3, r3
 1453 002a 43F01003 		orr	r3, r3, #16
 1454 002e DBB2     		uxtb	r3, r3
 1455 0030 1370     		strb	r3, [r2]
 1456              	.L71:
 1457              		.loc 1 1974 0
 1458 0032 00BF     		nop
 1459 0034 0C37     		adds	r7, r7, #12
 1460              		.cfi_def_cfa_offset 4
 1461 0036 BD46     		mov	sp, r7
 1462              		.cfi_def_cfa_register 13
 1463              		@ sp needed
 1464 0038 80BC     		pop	{r7}
 1465              		.cfi_restore 7
 1466              		.cfi_def_cfa_offset 0
 1467 003a 7047     		bx	lr
 1468              	.L73:
 1469              		.align	2
 1470              	.L72:
 1471 003c 79640040 		.word	1073767545
 1472              		.cfi_endproc
 1473              	.LFE18:
 1474              		.size	CapSense_CSD_SetAnalogSwitchesSource, .-CapSense_CSD_SetAnalogSwitchesSource
 1475              		.text
 1476              	.Letext0:
 1477              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1478              		.section	.debug_info,"",%progbits
 1479              	.Ldebug_info0:
 1480 0000 59050000 		.4byte	0x559
 1481 0004 0400     		.2byte	0x4
 1482 0006 00000000 		.4byte	.Ldebug_abbrev0
 1483 000a 04       		.byte	0x4
 1484 000b 01       		.uleb128 0x1
 1485 000c 10000000 		.4byte	.LASF61
 1486 0010 0C       		.byte	0xc
 1487 0011 21020000 		.4byte	.LASF62
 1488 0015 9F040000 		.4byte	.LASF63
 1489 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1490 001d 00000000 		.4byte	0
 1491 0021 00000000 		.4byte	.Ldebug_line0
 1492 0025 02       		.uleb128 0x2
 1493 0026 01       		.byte	0x1
 1494 0027 06       		.byte	0x6
 1495 0028 0B010000 		.4byte	.LASF0
 1496 002c 02       		.uleb128 0x2
 1497 002d 01       		.byte	0x1
 1498 002e 08       		.byte	0x8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 62


 1499 002f 8B030000 		.4byte	.LASF1
 1500 0033 02       		.uleb128 0x2
 1501 0034 02       		.byte	0x2
 1502 0035 05       		.byte	0x5
 1503 0036 99030000 		.4byte	.LASF2
 1504 003a 02       		.uleb128 0x2
 1505 003b 02       		.byte	0x2
 1506 003c 07       		.byte	0x7
 1507 003d 68020000 		.4byte	.LASF3
 1508 0041 02       		.uleb128 0x2
 1509 0042 04       		.byte	0x4
 1510 0043 05       		.byte	0x5
 1511 0044 42010000 		.4byte	.LASF4
 1512 0048 02       		.uleb128 0x2
 1513 0049 04       		.byte	0x4
 1514 004a 07       		.byte	0x7
 1515 004b 0F020000 		.4byte	.LASF5
 1516 004f 02       		.uleb128 0x2
 1517 0050 08       		.byte	0x8
 1518 0051 05       		.byte	0x5
 1519 0052 FD000000 		.4byte	.LASF6
 1520 0056 02       		.uleb128 0x2
 1521 0057 08       		.byte	0x8
 1522 0058 07       		.byte	0x7
 1523 0059 B8000000 		.4byte	.LASF7
 1524 005d 03       		.uleb128 0x3
 1525 005e 04       		.byte	0x4
 1526 005f 05       		.byte	0x5
 1527 0060 696E7400 		.ascii	"int\000"
 1528 0064 02       		.uleb128 0x2
 1529 0065 04       		.byte	0x4
 1530 0066 07       		.byte	0x7
 1531 0067 02020000 		.4byte	.LASF8
 1532 006b 04       		.uleb128 0x4
 1533 006c 80010000 		.4byte	.LASF9
 1534 0070 02       		.byte	0x2
 1535 0071 9201     		.2byte	0x192
 1536 0073 2C000000 		.4byte	0x2c
 1537 0077 04       		.uleb128 0x4
 1538 0078 00000000 		.4byte	.LASF10
 1539 007c 02       		.byte	0x2
 1540 007d 9301     		.2byte	0x193
 1541 007f 3A000000 		.4byte	0x3a
 1542 0083 04       		.uleb128 0x4
 1543 0084 A2010000 		.4byte	.LASF11
 1544 0088 02       		.byte	0x2
 1545 0089 9401     		.2byte	0x194
 1546 008b 48000000 		.4byte	0x48
 1547 008f 02       		.uleb128 0x2
 1548 0090 04       		.byte	0x4
 1549 0091 04       		.byte	0x4
 1550 0092 5C030000 		.4byte	.LASF12
 1551 0096 02       		.uleb128 0x2
 1552 0097 08       		.byte	0x8
 1553 0098 04       		.byte	0x4
 1554 0099 86010000 		.4byte	.LASF13
 1555 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 63


 1556 009e 01       		.byte	0x1
 1557 009f 08       		.byte	0x8
 1558 00a0 01040000 		.4byte	.LASF14
 1559 00a4 04       		.uleb128 0x4
 1560 00a5 86030000 		.4byte	.LASF15
 1561 00a9 02       		.byte	0x2
 1562 00aa 3C02     		.2byte	0x23c
 1563 00ac B0000000 		.4byte	0xb0
 1564 00b0 05       		.uleb128 0x5
 1565 00b1 6B000000 		.4byte	0x6b
 1566 00b5 04       		.uleb128 0x4
 1567 00b6 7A010000 		.4byte	.LASF16
 1568 00ba 02       		.byte	0x2
 1569 00bb 3D02     		.2byte	0x23d
 1570 00bd C1000000 		.4byte	0xc1
 1571 00c1 05       		.uleb128 0x5
 1572 00c2 77000000 		.4byte	0x77
 1573 00c6 04       		.uleb128 0x4
 1574 00c7 E5020000 		.4byte	.LASF17
 1575 00cb 02       		.byte	0x2
 1576 00cc 3E02     		.2byte	0x23e
 1577 00ce D2000000 		.4byte	0xd2
 1578 00d2 05       		.uleb128 0x5
 1579 00d3 83000000 		.4byte	0x83
 1580 00d7 02       		.uleb128 0x2
 1581 00d8 08       		.byte	0x8
 1582 00d9 04       		.byte	0x4
 1583 00da 0E030000 		.4byte	.LASF18
 1584 00de 02       		.uleb128 0x2
 1585 00df 04       		.byte	0x4
 1586 00e0 07       		.byte	0x7
 1587 00e1 05030000 		.4byte	.LASF19
 1588 00e5 06       		.uleb128 0x6
 1589 00e6 30010000 		.4byte	.LASF20
 1590 00ea 01       		.byte	0x1
 1591 00eb 79       		.byte	0x79
 1592 00ec 00000000 		.4byte	.LFB0
 1593 00f0 48010000 		.4byte	.LFE0-.LFB0
 1594 00f4 01       		.uleb128 0x1
 1595 00f5 9C       		.byte	0x9c
 1596 00f6 09010000 		.4byte	0x109
 1597 00fa 07       		.uleb128 0x7
 1598 00fb 8E040000 		.4byte	.LASF22
 1599 00ff 01       		.byte	0x1
 1600 0100 80       		.byte	0x80
 1601 0101 6B000000 		.4byte	0x6b
 1602 0105 02       		.uleb128 0x2
 1603 0106 91       		.byte	0x91
 1604 0107 77       		.sleb128 -9
 1605 0108 00       		.byte	0
 1606 0109 08       		.uleb128 0x8
 1607 010a 7A040000 		.4byte	.LASF21
 1608 010e 01       		.byte	0x1
 1609 010f 5A01     		.2byte	0x15a
 1610 0111 00000000 		.4byte	.LFB1
 1611 0115 98000000 		.4byte	.LFE1-.LFB1
 1612 0119 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 64


 1613 011a 9C       		.byte	0x9c
 1614 011b 2F010000 		.4byte	0x12f
 1615 011f 09       		.uleb128 0x9
 1616 0120 8E040000 		.4byte	.LASF22
 1617 0124 01       		.byte	0x1
 1618 0125 5C01     		.2byte	0x15c
 1619 0127 6B000000 		.4byte	0x6b
 1620 012b 02       		.uleb128 0x2
 1621 012c 91       		.byte	0x91
 1622 012d 77       		.sleb128 -9
 1623 012e 00       		.byte	0
 1624 012f 0A       		.uleb128 0xa
 1625 0130 1A030000 		.4byte	.LASF23
 1626 0134 01       		.byte	0x1
 1627 0135 F301     		.2byte	0x1f3
 1628 0137 00000000 		.4byte	.LFB2
 1629 013b 24000000 		.4byte	.LFE2-.LFB2
 1630 013f 01       		.uleb128 0x1
 1631 0140 9C       		.byte	0x9c
 1632 0141 0A       		.uleb128 0xa
 1633 0142 EF030000 		.4byte	.LASF24
 1634 0146 01       		.byte	0x1
 1635 0147 1802     		.2byte	0x218
 1636 0149 00000000 		.4byte	.LFB3
 1637 014d 98000000 		.4byte	.LFE3-.LFB3
 1638 0151 01       		.uleb128 0x1
 1639 0152 9C       		.byte	0x9c
 1640 0153 0B       		.uleb128 0xb
 1641 0154 F9040000 		.4byte	.LASF33
 1642 0158 01       		.byte	0x1
 1643 0159 A202     		.2byte	0x2a2
 1644 015b 6B000000 		.4byte	0x6b
 1645 015f 00000000 		.4byte	.LFB4
 1646 0163 50000000 		.4byte	.LFE4-.LFB4
 1647 0167 01       		.uleb128 0x1
 1648 0168 9C       		.byte	0x9c
 1649 0169 9B010000 		.4byte	0x19b
 1650 016d 0C       		.uleb128 0xc
 1651 016e 07000000 		.4byte	.LASF27
 1652 0172 01       		.byte	0x1
 1653 0173 A202     		.2byte	0x2a2
 1654 0175 6B000000 		.4byte	0x6b
 1655 0179 02       		.uleb128 0x2
 1656 017a 91       		.byte	0x91
 1657 017b 6F       		.sleb128 -17
 1658 017c 0D       		.uleb128 0xd
 1659 017d 706F7300 		.ascii	"pos\000"
 1660 0181 01       		.byte	0x1
 1661 0182 A402     		.2byte	0x2a4
 1662 0184 6B000000 		.4byte	0x6b
 1663 0188 02       		.uleb128 0x2
 1664 0189 91       		.byte	0x91
 1665 018a 77       		.sleb128 -9
 1666 018b 09       		.uleb128 0x9
 1667 018c 37030000 		.4byte	.LASF25
 1668 0190 01       		.byte	0x1
 1669 0191 A502     		.2byte	0x2a5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 65


 1670 0193 6B000000 		.4byte	0x6b
 1671 0197 02       		.uleb128 0x2
 1672 0198 91       		.byte	0x91
 1673 0199 76       		.sleb128 -10
 1674 019a 00       		.byte	0
 1675 019b 08       		.uleb128 0x8
 1676 019c 06040000 		.4byte	.LASF26
 1677 01a0 01       		.byte	0x1
 1678 01a1 3C03     		.2byte	0x33c
 1679 01a3 00000000 		.4byte	.LFB5
 1680 01a7 50000000 		.4byte	.LFE5-.LFB5
 1681 01ab 01       		.uleb128 0x1
 1682 01ac 9C       		.byte	0x9c
 1683 01ad D0010000 		.4byte	0x1d0
 1684 01b1 0C       		.uleb128 0xc
 1685 01b2 B3020000 		.4byte	.LASF28
 1686 01b6 01       		.byte	0x1
 1687 01b7 3C03     		.2byte	0x33c
 1688 01b9 6B000000 		.4byte	0x6b
 1689 01bd 02       		.uleb128 0x2
 1690 01be 91       		.byte	0x91
 1691 01bf 6F       		.sleb128 -17
 1692 01c0 09       		.uleb128 0x9
 1693 01c1 A3030000 		.4byte	.LASF29
 1694 01c5 01       		.byte	0x1
 1695 01c6 3E03     		.2byte	0x33e
 1696 01c8 6B000000 		.4byte	0x6b
 1697 01cc 02       		.uleb128 0x2
 1698 01cd 91       		.byte	0x91
 1699 01ce 77       		.sleb128 -9
 1700 01cf 00       		.byte	0
 1701 01d0 08       		.uleb128 0x8
 1702 01d1 CD020000 		.4byte	.LASF30
 1703 01d5 01       		.byte	0x1
 1704 01d6 AC03     		.2byte	0x3ac
 1705 01d8 00000000 		.4byte	.LFB6
 1706 01dc 34000000 		.4byte	.LFE6-.LFB6
 1707 01e0 01       		.uleb128 0x1
 1708 01e1 9C       		.byte	0x9c
 1709 01e2 F6010000 		.4byte	0x1f6
 1710 01e6 0C       		.uleb128 0xc
 1711 01e7 7B020000 		.4byte	.LASF31
 1712 01eb 01       		.byte	0x1
 1713 01ec AC03     		.2byte	0x3ac
 1714 01ee 6B000000 		.4byte	0x6b
 1715 01f2 02       		.uleb128 0x2
 1716 01f3 91       		.byte	0x91
 1717 01f4 77       		.sleb128 -9
 1718 01f5 00       		.byte	0
 1719 01f6 0A       		.uleb128 0xa
 1720 01f7 A9010000 		.4byte	.LASF32
 1721 01fb 01       		.byte	0x1
 1722 01fc F903     		.2byte	0x3f9
 1723 01fe 00000000 		.4byte	.LFB7
 1724 0202 58000000 		.4byte	.LFE7-.LFB7
 1725 0206 01       		.uleb128 0x1
 1726 0207 9C       		.byte	0x9c
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 66


 1727 0208 0E       		.uleb128 0xe
 1728 0209 AA030000 		.4byte	.LASF64
 1729 020d 01       		.byte	0x1
 1730 020e 2E04     		.2byte	0x42e
 1731 0210 6B000000 		.4byte	0x6b
 1732 0214 00000000 		.4byte	.LFB8
 1733 0218 1C000000 		.4byte	.LFE8-.LFB8
 1734 021c 01       		.uleb128 0x1
 1735 021d 9C       		.byte	0x9c
 1736 021e 0B       		.uleb128 0xb
 1737 021f 27040000 		.4byte	.LASF34
 1738 0223 01       		.byte	0x1
 1739 0224 4704     		.2byte	0x447
 1740 0226 77000000 		.4byte	0x77
 1741 022a 00000000 		.4byte	.LFB9
 1742 022e 20000000 		.4byte	.LFE9-.LFB9
 1743 0232 01       		.uleb128 0x1
 1744 0233 9C       		.byte	0x9c
 1745 0234 48020000 		.4byte	0x248
 1746 0238 0C       		.uleb128 0xc
 1747 0239 7B020000 		.4byte	.LASF31
 1748 023d 01       		.byte	0x1
 1749 023e 4704     		.2byte	0x447
 1750 0240 6B000000 		.4byte	0x6b
 1751 0244 02       		.uleb128 0x2
 1752 0245 91       		.byte	0x91
 1753 0246 77       		.sleb128 -9
 1754 0247 00       		.byte	0
 1755 0248 08       		.uleb128 0x8
 1756 0249 CE010000 		.4byte	.LASF35
 1757 024d 01       		.byte	0x1
 1758 024e 5C04     		.2byte	0x45c
 1759 0250 00000000 		.4byte	.LFB10
 1760 0254 28000000 		.4byte	.LFE10-.LFB10
 1761 0258 01       		.uleb128 0x1
 1762 0259 9C       		.byte	0x9c
 1763 025a 6C020000 		.4byte	0x26c
 1764 025e 0D       		.uleb128 0xd
 1765 025f 6900     		.ascii	"i\000"
 1766 0261 01       		.byte	0x1
 1767 0262 5E04     		.2byte	0x45e
 1768 0264 6B000000 		.4byte	0x6b
 1769 0268 02       		.uleb128 0x2
 1770 0269 91       		.byte	0x91
 1771 026a 77       		.sleb128 -9
 1772 026b 00       		.byte	0
 1773 026c 08       		.uleb128 0x8
 1774 026d EB020000 		.4byte	.LASF36
 1775 0271 01       		.byte	0x1
 1776 0272 F204     		.2byte	0x4f2
 1777 0274 00000000 		.4byte	.LFB11
 1778 0278 6C000000 		.4byte	.LFE11-.LFB11
 1779 027c 01       		.uleb128 0x1
 1780 027d 9C       		.byte	0x9c
 1781 027e B0020000 		.4byte	0x2b0
 1782 0282 0C       		.uleb128 0xc
 1783 0283 7B020000 		.4byte	.LASF31
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 67


 1784 0287 01       		.byte	0x1
 1785 0288 F204     		.2byte	0x4f2
 1786 028a 6B000000 		.4byte	0x6b
 1787 028e 02       		.uleb128 0x2
 1788 028f 91       		.byte	0x91
 1789 0290 6F       		.sleb128 -17
 1790 0291 09       		.uleb128 0x9
 1791 0292 E8010000 		.4byte	.LASF37
 1792 0296 01       		.byte	0x1
 1793 0297 F404     		.2byte	0x4f4
 1794 0299 6B000000 		.4byte	0x6b
 1795 029d 02       		.uleb128 0x2
 1796 029e 91       		.byte	0x91
 1797 029f 77       		.sleb128 -9
 1798 02a0 09       		.uleb128 0x9
 1799 02a1 C9010000 		.4byte	.LASF38
 1800 02a5 01       		.byte	0x1
 1801 02a6 F504     		.2byte	0x4f5
 1802 02a8 6B000000 		.4byte	0x6b
 1803 02ac 02       		.uleb128 0x2
 1804 02ad 91       		.byte	0x91
 1805 02ae 76       		.sleb128 -10
 1806 02af 00       		.byte	0
 1807 02b0 08       		.uleb128 0x8
 1808 02b1 82020000 		.4byte	.LASF39
 1809 02b5 01       		.byte	0x1
 1810 02b6 4705     		.2byte	0x547
 1811 02b8 00000000 		.4byte	.LFB12
 1812 02bc 70000000 		.4byte	.LFE12-.LFB12
 1813 02c0 01       		.uleb128 0x1
 1814 02c1 9C       		.byte	0x9c
 1815 02c2 F4020000 		.4byte	0x2f4
 1816 02c6 0C       		.uleb128 0xc
 1817 02c7 7B020000 		.4byte	.LASF31
 1818 02cb 01       		.byte	0x1
 1819 02cc 4705     		.2byte	0x547
 1820 02ce 6B000000 		.4byte	0x6b
 1821 02d2 02       		.uleb128 0x2
 1822 02d3 91       		.byte	0x91
 1823 02d4 6F       		.sleb128 -17
 1824 02d5 09       		.uleb128 0x9
 1825 02d6 E8010000 		.4byte	.LASF37
 1826 02da 01       		.byte	0x1
 1827 02db 4905     		.2byte	0x549
 1828 02dd 6B000000 		.4byte	0x6b
 1829 02e1 02       		.uleb128 0x2
 1830 02e2 91       		.byte	0x91
 1831 02e3 77       		.sleb128 -9
 1832 02e4 09       		.uleb128 0x9
 1833 02e5 C9010000 		.4byte	.LASF38
 1834 02e9 01       		.byte	0x1
 1835 02ea 4A05     		.2byte	0x54a
 1836 02ec 6B000000 		.4byte	0x6b
 1837 02f0 02       		.uleb128 0x2
 1838 02f1 91       		.byte	0x91
 1839 02f2 76       		.sleb128 -10
 1840 02f3 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 68


 1841 02f4 08       		.uleb128 0x8
 1842 02f5 ED010000 		.4byte	.LASF40
 1843 02f9 01       		.byte	0x1
 1844 02fa 9B05     		.2byte	0x59b
 1845 02fc 00000000 		.4byte	.LFB13
 1846 0300 5C000000 		.4byte	.LFE13-.LFB13
 1847 0304 01       		.uleb128 0x1
 1848 0305 9C       		.byte	0x9c
 1849 0306 1A030000 		.4byte	0x31a
 1850 030a 0C       		.uleb128 0xc
 1851 030b 7B020000 		.4byte	.LASF31
 1852 030f 01       		.byte	0x1
 1853 0310 9B05     		.2byte	0x59b
 1854 0312 6B000000 		.4byte	0x6b
 1855 0316 02       		.uleb128 0x2
 1856 0317 91       		.byte	0x91
 1857 0318 77       		.sleb128 -9
 1858 0319 00       		.byte	0
 1859 031a 08       		.uleb128 0x8
 1860 031b 9D020000 		.4byte	.LASF41
 1861 031f 01       		.byte	0x1
 1862 0320 4306     		.2byte	0x643
 1863 0322 00000000 		.4byte	.LFB14
 1864 0326 98000000 		.4byte	.LFE14-.LFB14
 1865 032a 01       		.uleb128 0x1
 1866 032b 9C       		.byte	0x9c
 1867 032c 40030000 		.4byte	0x340
 1868 0330 0C       		.uleb128 0xc
 1869 0331 7B020000 		.4byte	.LASF31
 1870 0335 01       		.byte	0x1
 1871 0336 4306     		.2byte	0x643
 1872 0338 6B000000 		.4byte	0x6b
 1873 033c 02       		.uleb128 0x2
 1874 033d 91       		.byte	0x91
 1875 033e 77       		.sleb128 -9
 1876 033f 00       		.byte	0
 1877 0340 0F       		.uleb128 0xf
 1878 0341 9E000000 		.4byte	.LASF42
 1879 0345 01       		.byte	0x1
 1880 0346 5107     		.2byte	0x751
 1881 0348 00000000 		.4byte	.LFB15
 1882 034c 2C000000 		.4byte	.LFE15-.LFB15
 1883 0350 01       		.uleb128 0x1
 1884 0351 9C       		.byte	0x9c
 1885 0352 66030000 		.4byte	0x366
 1886 0356 0C       		.uleb128 0xc
 1887 0357 62030000 		.4byte	.LASF43
 1888 035b 01       		.byte	0x1
 1889 035c 5107     		.2byte	0x751
 1890 035e 6B000000 		.4byte	0x6b
 1891 0362 02       		.uleb128 0x2
 1892 0363 91       		.byte	0x91
 1893 0364 77       		.sleb128 -9
 1894 0365 00       		.byte	0
 1895 0366 0B       		.uleb128 0xb
 1896 0367 6C030000 		.4byte	.LASF44
 1897 036b 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 69


 1898 036c 6E07     		.2byte	0x76e
 1899 036e 6B000000 		.4byte	0x6b
 1900 0372 00000000 		.4byte	.LFB16
 1901 0376 20000000 		.4byte	.LFE16-.LFB16
 1902 037a 01       		.uleb128 0x1
 1903 037b 9C       		.byte	0x9c
 1904 037c 90030000 		.4byte	0x390
 1905 0380 09       		.uleb128 0x9
 1906 0381 62030000 		.4byte	.LASF43
 1907 0385 01       		.byte	0x1
 1908 0386 7007     		.2byte	0x770
 1909 0388 6B000000 		.4byte	0x6b
 1910 038c 02       		.uleb128 0x2
 1911 038d 91       		.byte	0x91
 1912 038e 77       		.sleb128 -9
 1913 038f 00       		.byte	0
 1914 0390 0F       		.uleb128 0xf
 1915 0391 D5030000 		.4byte	.LASF45
 1916 0395 01       		.byte	0x1
 1917 0396 9007     		.2byte	0x790
 1918 0398 00000000 		.4byte	.LFB17
 1919 039c 20000000 		.4byte	.LFE17-.LFB17
 1920 03a0 01       		.uleb128 0x1
 1921 03a1 9C       		.byte	0x9c
 1922 03a2 B6030000 		.4byte	0x3b6
 1923 03a6 0C       		.uleb128 0xc
 1924 03a7 2D030000 		.4byte	.LASF46
 1925 03ab 01       		.byte	0x1
 1926 03ac 9007     		.2byte	0x790
 1927 03ae 6B000000 		.4byte	0x6b
 1928 03b2 02       		.uleb128 0x2
 1929 03b3 91       		.byte	0x91
 1930 03b4 77       		.sleb128 -9
 1931 03b5 00       		.byte	0
 1932 03b6 0F       		.uleb128 0xf
 1933 03b7 15050000 		.4byte	.LASF47
 1934 03bb 01       		.byte	0x1
 1935 03bc AB07     		.2byte	0x7ab
 1936 03be 00000000 		.4byte	.LFB18
 1937 03c2 40000000 		.4byte	.LFE18-.LFB18
 1938 03c6 01       		.uleb128 0x1
 1939 03c7 9C       		.byte	0x9c
 1940 03c8 DC030000 		.4byte	0x3dc
 1941 03cc 10       		.uleb128 0x10
 1942 03cd 73726300 		.ascii	"src\000"
 1943 03d1 01       		.byte	0x1
 1944 03d2 AB07     		.2byte	0x7ab
 1945 03d4 6B000000 		.4byte	0x6b
 1946 03d8 02       		.uleb128 0x2
 1947 03d9 91       		.byte	0x91
 1948 03da 77       		.sleb128 -9
 1949 03db 00       		.byte	0
 1950 03dc 07       		.uleb128 0x7
 1951 03dd 8D010000 		.4byte	.LASF48
 1952 03e1 01       		.byte	0x1
 1953 03e2 16       		.byte	0x16
 1954 03e3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 70


 1955 03e7 05       		.uleb128 0x5
 1956 03e8 03       		.byte	0x3
 1957 03e9 00000000 		.4byte	CapSense_CSD_initVar
 1958 03ed 11       		.uleb128 0x11
 1959 03ee 3A050000 		.4byte	.LASF49
 1960 03f2 01       		.byte	0x1
 1961 03f3 19       		.byte	0x19
 1962 03f4 B0000000 		.4byte	0xb0
 1963 03f8 05       		.uleb128 0x5
 1964 03f9 03       		.byte	0x3
 1965 03fa 00000000 		.4byte	CapSense_CSD_csv
 1966 03fe 11       		.uleb128 0x11
 1967 03ff 17010000 		.4byte	.LASF50
 1968 0403 01       		.byte	0x1
 1969 0404 1A       		.byte	0x1a
 1970 0405 B0000000 		.4byte	0xb0
 1971 0409 05       		.uleb128 0x5
 1972 040a 03       		.byte	0x3
 1973 040b 00000000 		.4byte	CapSense_CSD_sensorIndex
 1974 040f 12       		.uleb128 0x12
 1975 0410 77000000 		.4byte	0x77
 1976 0414 1F040000 		.4byte	0x41f
 1977 0418 13       		.uleb128 0x13
 1978 0419 DE000000 		.4byte	0xde
 1979 041d 06       		.byte	0x6
 1980 041e 00       		.byte	0
 1981 041f 11       		.uleb128 0x11
 1982 0420 BE030000 		.4byte	.LASF51
 1983 0424 01       		.byte	0x1
 1984 0425 29       		.byte	0x29
 1985 0426 0F040000 		.4byte	0x40f
 1986 042a 05       		.uleb128 0x5
 1987 042b 03       		.byte	0x3
 1988 042c 00000000 		.4byte	CapSense_CSD_sensorRaw
 1989 0430 12       		.uleb128 0x12
 1990 0431 6B000000 		.4byte	0x6b
 1991 0435 40040000 		.4byte	0x440
 1992 0439 13       		.uleb128 0x13
 1993 043a DE000000 		.4byte	0xde
 1994 043e 00       		.byte	0
 1995 043f 00       		.byte	0
 1996 0440 11       		.uleb128 0x11
 1997 0441 3E030000 		.4byte	.LASF52
 1998 0445 01       		.byte	0x1
 1999 0446 2B       		.byte	0x2b
 2000 0447 30040000 		.4byte	0x430
 2001 044b 05       		.uleb128 0x5
 2002 044c 03       		.byte	0x3
 2003 044d 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 2004 0451 12       		.uleb128 0x12
 2005 0452 67040000 		.4byte	0x467
 2006 0456 61040000 		.4byte	0x461
 2007 045a 13       		.uleb128 0x13
 2008 045b DE000000 		.4byte	0xde
 2009 045f 06       		.byte	0x6
 2010 0460 00       		.byte	0
 2011 0461 14       		.uleb128 0x14
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 71


 2012 0462 04       		.byte	0x4
 2013 0463 6B000000 		.4byte	0x6b
 2014 0467 15       		.uleb128 0x15
 2015 0468 61040000 		.4byte	0x461
 2016 046c 11       		.uleb128 0x11
 2017 046d B8020000 		.4byte	.LASF53
 2018 0471 01       		.byte	0x1
 2019 0472 2E       		.byte	0x2e
 2020 0473 7D040000 		.4byte	0x47d
 2021 0477 05       		.uleb128 0x5
 2022 0478 03       		.byte	0x3
 2023 0479 00000000 		.4byte	CapSense_CSD_pcTable
 2024 047d 15       		.uleb128 0x15
 2025 047e 51040000 		.4byte	0x451
 2026 0482 12       		.uleb128 0x12
 2027 0483 92040000 		.4byte	0x492
 2028 0487 92040000 		.4byte	0x492
 2029 048b 13       		.uleb128 0x13
 2030 048c DE000000 		.4byte	0xde
 2031 0490 06       		.byte	0x6
 2032 0491 00       		.byte	0
 2033 0492 15       		.uleb128 0x15
 2034 0493 6B000000 		.4byte	0x6b
 2035 0497 11       		.uleb128 0x11
 2036 0498 E6000000 		.4byte	.LASF54
 2037 049c 01       		.byte	0x1
 2038 049d 38       		.byte	0x38
 2039 049e A8040000 		.4byte	0x4a8
 2040 04a2 05       		.uleb128 0x5
 2041 04a3 03       		.byte	0x3
 2042 04a4 00000000 		.4byte	CapSense_CSD_portTable
 2043 04a8 15       		.uleb128 0x15
 2044 04a9 82040000 		.4byte	0x482
 2045 04ad 11       		.uleb128 0x11
 2046 04ae CF000000 		.4byte	.LASF55
 2047 04b2 01       		.byte	0x1
 2048 04b3 42       		.byte	0x42
 2049 04b4 BE040000 		.4byte	0x4be
 2050 04b8 05       		.uleb128 0x5
 2051 04b9 03       		.byte	0x3
 2052 04ba 00000000 		.4byte	CapSense_CSD_maskTable
 2053 04be 15       		.uleb128 0x15
 2054 04bf 82040000 		.4byte	0x482
 2055 04c3 12       		.uleb128 0x12
 2056 04c4 67040000 		.4byte	0x467
 2057 04c8 D3040000 		.4byte	0x4d3
 2058 04cc 13       		.uleb128 0x13
 2059 04cd DE000000 		.4byte	0xde
 2060 04d1 07       		.byte	0x7
 2061 04d2 00       		.byte	0
 2062 04d3 11       		.uleb128 0x11
 2063 04d4 65010000 		.4byte	.LASF56
 2064 04d8 01       		.byte	0x1
 2065 04d9 4C       		.byte	0x4c
 2066 04da E4040000 		.4byte	0x4e4
 2067 04de 05       		.uleb128 0x5
 2068 04df 03       		.byte	0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 72


 2069 04e0 00000000 		.4byte	CapSense_CSD_csTable
 2070 04e4 15       		.uleb128 0x15
 2071 04e5 C3040000 		.4byte	0x4c3
 2072 04e9 11       		.uleb128 0x11
 2073 04ea 60040000 		.4byte	.LASF57
 2074 04ee 01       		.byte	0x1
 2075 04ef 52       		.byte	0x52
 2076 04f0 FA040000 		.4byte	0x4fa
 2077 04f4 05       		.uleb128 0x5
 2078 04f5 03       		.byte	0x3
 2079 04f6 00000000 		.4byte	CapSense_CSD_idacSettings
 2080 04fa 15       		.uleb128 0x15
 2081 04fb 82040000 		.4byte	0x482
 2082 04ff 12       		.uleb128 0x12
 2083 0500 92040000 		.4byte	0x492
 2084 0504 0F050000 		.4byte	0x50f
 2085 0508 13       		.uleb128 0x13
 2086 0509 DE000000 		.4byte	0xde
 2087 050d 02       		.byte	0x2
 2088 050e 00       		.byte	0
 2089 050f 11       		.uleb128 0x11
 2090 0510 42040000 		.4byte	.LASF58
 2091 0514 01       		.byte	0x1
 2092 0515 56       		.byte	0x56
 2093 0516 20050000 		.4byte	0x520
 2094 051a 05       		.uleb128 0x5
 2095 051b 03       		.byte	0x3
 2096 051c 00000000 		.4byte	CapSense_CSD_widgetResolution
 2097 0520 15       		.uleb128 0x15
 2098 0521 FF040000 		.4byte	0x4ff
 2099 0525 12       		.uleb128 0x12
 2100 0526 6B000000 		.4byte	0x6b
 2101 052a 35050000 		.4byte	0x535
 2102 052e 13       		.uleb128 0x13
 2103 052f DE000000 		.4byte	0xde
 2104 0533 06       		.byte	0x6
 2105 0534 00       		.byte	0
 2106 0535 11       		.uleb128 0x11
 2107 0536 47020000 		.4byte	.LASF59
 2108 053a 01       		.byte	0x1
 2109 053b 5C       		.byte	0x5c
 2110 053c 25050000 		.4byte	0x525
 2111 0540 05       		.uleb128 0x5
 2112 0541 03       		.byte	0x3
 2113 0542 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 2114 0546 11       		.uleb128 0x11
 2115 0547 4B010000 		.4byte	.LASF60
 2116 054b 01       		.byte	0x1
 2117 054c 60       		.byte	0x60
 2118 054d 57050000 		.4byte	0x557
 2119 0551 05       		.uleb128 0x5
 2120 0552 03       		.byte	0x3
 2121 0553 00000000 		.4byte	CapSense_CSD_widgetNumber
 2122 0557 15       		.uleb128 0x15
 2123 0558 82040000 		.4byte	0x482
 2124 055c 00       		.byte	0
 2125              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 73


 2126              	.Ldebug_abbrev0:
 2127 0000 01       		.uleb128 0x1
 2128 0001 11       		.uleb128 0x11
 2129 0002 01       		.byte	0x1
 2130 0003 25       		.uleb128 0x25
 2131 0004 0E       		.uleb128 0xe
 2132 0005 13       		.uleb128 0x13
 2133 0006 0B       		.uleb128 0xb
 2134 0007 03       		.uleb128 0x3
 2135 0008 0E       		.uleb128 0xe
 2136 0009 1B       		.uleb128 0x1b
 2137 000a 0E       		.uleb128 0xe
 2138 000b 55       		.uleb128 0x55
 2139 000c 17       		.uleb128 0x17
 2140 000d 11       		.uleb128 0x11
 2141 000e 01       		.uleb128 0x1
 2142 000f 10       		.uleb128 0x10
 2143 0010 17       		.uleb128 0x17
 2144 0011 00       		.byte	0
 2145 0012 00       		.byte	0
 2146 0013 02       		.uleb128 0x2
 2147 0014 24       		.uleb128 0x24
 2148 0015 00       		.byte	0
 2149 0016 0B       		.uleb128 0xb
 2150 0017 0B       		.uleb128 0xb
 2151 0018 3E       		.uleb128 0x3e
 2152 0019 0B       		.uleb128 0xb
 2153 001a 03       		.uleb128 0x3
 2154 001b 0E       		.uleb128 0xe
 2155 001c 00       		.byte	0
 2156 001d 00       		.byte	0
 2157 001e 03       		.uleb128 0x3
 2158 001f 24       		.uleb128 0x24
 2159 0020 00       		.byte	0
 2160 0021 0B       		.uleb128 0xb
 2161 0022 0B       		.uleb128 0xb
 2162 0023 3E       		.uleb128 0x3e
 2163 0024 0B       		.uleb128 0xb
 2164 0025 03       		.uleb128 0x3
 2165 0026 08       		.uleb128 0x8
 2166 0027 00       		.byte	0
 2167 0028 00       		.byte	0
 2168 0029 04       		.uleb128 0x4
 2169 002a 16       		.uleb128 0x16
 2170 002b 00       		.byte	0
 2171 002c 03       		.uleb128 0x3
 2172 002d 0E       		.uleb128 0xe
 2173 002e 3A       		.uleb128 0x3a
 2174 002f 0B       		.uleb128 0xb
 2175 0030 3B       		.uleb128 0x3b
 2176 0031 05       		.uleb128 0x5
 2177 0032 49       		.uleb128 0x49
 2178 0033 13       		.uleb128 0x13
 2179 0034 00       		.byte	0
 2180 0035 00       		.byte	0
 2181 0036 05       		.uleb128 0x5
 2182 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 74


 2183 0038 00       		.byte	0
 2184 0039 49       		.uleb128 0x49
 2185 003a 13       		.uleb128 0x13
 2186 003b 00       		.byte	0
 2187 003c 00       		.byte	0
 2188 003d 06       		.uleb128 0x6
 2189 003e 2E       		.uleb128 0x2e
 2190 003f 01       		.byte	0x1
 2191 0040 3F       		.uleb128 0x3f
 2192 0041 19       		.uleb128 0x19
 2193 0042 03       		.uleb128 0x3
 2194 0043 0E       		.uleb128 0xe
 2195 0044 3A       		.uleb128 0x3a
 2196 0045 0B       		.uleb128 0xb
 2197 0046 3B       		.uleb128 0x3b
 2198 0047 0B       		.uleb128 0xb
 2199 0048 27       		.uleb128 0x27
 2200 0049 19       		.uleb128 0x19
 2201 004a 11       		.uleb128 0x11
 2202 004b 01       		.uleb128 0x1
 2203 004c 12       		.uleb128 0x12
 2204 004d 06       		.uleb128 0x6
 2205 004e 40       		.uleb128 0x40
 2206 004f 18       		.uleb128 0x18
 2207 0050 9642     		.uleb128 0x2116
 2208 0052 19       		.uleb128 0x19
 2209 0053 01       		.uleb128 0x1
 2210 0054 13       		.uleb128 0x13
 2211 0055 00       		.byte	0
 2212 0056 00       		.byte	0
 2213 0057 07       		.uleb128 0x7
 2214 0058 34       		.uleb128 0x34
 2215 0059 00       		.byte	0
 2216 005a 03       		.uleb128 0x3
 2217 005b 0E       		.uleb128 0xe
 2218 005c 3A       		.uleb128 0x3a
 2219 005d 0B       		.uleb128 0xb
 2220 005e 3B       		.uleb128 0x3b
 2221 005f 0B       		.uleb128 0xb
 2222 0060 49       		.uleb128 0x49
 2223 0061 13       		.uleb128 0x13
 2224 0062 02       		.uleb128 0x2
 2225 0063 18       		.uleb128 0x18
 2226 0064 00       		.byte	0
 2227 0065 00       		.byte	0
 2228 0066 08       		.uleb128 0x8
 2229 0067 2E       		.uleb128 0x2e
 2230 0068 01       		.byte	0x1
 2231 0069 3F       		.uleb128 0x3f
 2232 006a 19       		.uleb128 0x19
 2233 006b 03       		.uleb128 0x3
 2234 006c 0E       		.uleb128 0xe
 2235 006d 3A       		.uleb128 0x3a
 2236 006e 0B       		.uleb128 0xb
 2237 006f 3B       		.uleb128 0x3b
 2238 0070 05       		.uleb128 0x5
 2239 0071 27       		.uleb128 0x27
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 75


 2240 0072 19       		.uleb128 0x19
 2241 0073 11       		.uleb128 0x11
 2242 0074 01       		.uleb128 0x1
 2243 0075 12       		.uleb128 0x12
 2244 0076 06       		.uleb128 0x6
 2245 0077 40       		.uleb128 0x40
 2246 0078 18       		.uleb128 0x18
 2247 0079 9642     		.uleb128 0x2116
 2248 007b 19       		.uleb128 0x19
 2249 007c 01       		.uleb128 0x1
 2250 007d 13       		.uleb128 0x13
 2251 007e 00       		.byte	0
 2252 007f 00       		.byte	0
 2253 0080 09       		.uleb128 0x9
 2254 0081 34       		.uleb128 0x34
 2255 0082 00       		.byte	0
 2256 0083 03       		.uleb128 0x3
 2257 0084 0E       		.uleb128 0xe
 2258 0085 3A       		.uleb128 0x3a
 2259 0086 0B       		.uleb128 0xb
 2260 0087 3B       		.uleb128 0x3b
 2261 0088 05       		.uleb128 0x5
 2262 0089 49       		.uleb128 0x49
 2263 008a 13       		.uleb128 0x13
 2264 008b 02       		.uleb128 0x2
 2265 008c 18       		.uleb128 0x18
 2266 008d 00       		.byte	0
 2267 008e 00       		.byte	0
 2268 008f 0A       		.uleb128 0xa
 2269 0090 2E       		.uleb128 0x2e
 2270 0091 00       		.byte	0
 2271 0092 3F       		.uleb128 0x3f
 2272 0093 19       		.uleb128 0x19
 2273 0094 03       		.uleb128 0x3
 2274 0095 0E       		.uleb128 0xe
 2275 0096 3A       		.uleb128 0x3a
 2276 0097 0B       		.uleb128 0xb
 2277 0098 3B       		.uleb128 0x3b
 2278 0099 05       		.uleb128 0x5
 2279 009a 27       		.uleb128 0x27
 2280 009b 19       		.uleb128 0x19
 2281 009c 11       		.uleb128 0x11
 2282 009d 01       		.uleb128 0x1
 2283 009e 12       		.uleb128 0x12
 2284 009f 06       		.uleb128 0x6
 2285 00a0 40       		.uleb128 0x40
 2286 00a1 18       		.uleb128 0x18
 2287 00a2 9642     		.uleb128 0x2116
 2288 00a4 19       		.uleb128 0x19
 2289 00a5 00       		.byte	0
 2290 00a6 00       		.byte	0
 2291 00a7 0B       		.uleb128 0xb
 2292 00a8 2E       		.uleb128 0x2e
 2293 00a9 01       		.byte	0x1
 2294 00aa 3F       		.uleb128 0x3f
 2295 00ab 19       		.uleb128 0x19
 2296 00ac 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 76


 2297 00ad 0E       		.uleb128 0xe
 2298 00ae 3A       		.uleb128 0x3a
 2299 00af 0B       		.uleb128 0xb
 2300 00b0 3B       		.uleb128 0x3b
 2301 00b1 05       		.uleb128 0x5
 2302 00b2 27       		.uleb128 0x27
 2303 00b3 19       		.uleb128 0x19
 2304 00b4 49       		.uleb128 0x49
 2305 00b5 13       		.uleb128 0x13
 2306 00b6 11       		.uleb128 0x11
 2307 00b7 01       		.uleb128 0x1
 2308 00b8 12       		.uleb128 0x12
 2309 00b9 06       		.uleb128 0x6
 2310 00ba 40       		.uleb128 0x40
 2311 00bb 18       		.uleb128 0x18
 2312 00bc 9742     		.uleb128 0x2117
 2313 00be 19       		.uleb128 0x19
 2314 00bf 01       		.uleb128 0x1
 2315 00c0 13       		.uleb128 0x13
 2316 00c1 00       		.byte	0
 2317 00c2 00       		.byte	0
 2318 00c3 0C       		.uleb128 0xc
 2319 00c4 05       		.uleb128 0x5
 2320 00c5 00       		.byte	0
 2321 00c6 03       		.uleb128 0x3
 2322 00c7 0E       		.uleb128 0xe
 2323 00c8 3A       		.uleb128 0x3a
 2324 00c9 0B       		.uleb128 0xb
 2325 00ca 3B       		.uleb128 0x3b
 2326 00cb 05       		.uleb128 0x5
 2327 00cc 49       		.uleb128 0x49
 2328 00cd 13       		.uleb128 0x13
 2329 00ce 02       		.uleb128 0x2
 2330 00cf 18       		.uleb128 0x18
 2331 00d0 00       		.byte	0
 2332 00d1 00       		.byte	0
 2333 00d2 0D       		.uleb128 0xd
 2334 00d3 34       		.uleb128 0x34
 2335 00d4 00       		.byte	0
 2336 00d5 03       		.uleb128 0x3
 2337 00d6 08       		.uleb128 0x8
 2338 00d7 3A       		.uleb128 0x3a
 2339 00d8 0B       		.uleb128 0xb
 2340 00d9 3B       		.uleb128 0x3b
 2341 00da 05       		.uleb128 0x5
 2342 00db 49       		.uleb128 0x49
 2343 00dc 13       		.uleb128 0x13
 2344 00dd 02       		.uleb128 0x2
 2345 00de 18       		.uleb128 0x18
 2346 00df 00       		.byte	0
 2347 00e0 00       		.byte	0
 2348 00e1 0E       		.uleb128 0xe
 2349 00e2 2E       		.uleb128 0x2e
 2350 00e3 00       		.byte	0
 2351 00e4 3F       		.uleb128 0x3f
 2352 00e5 19       		.uleb128 0x19
 2353 00e6 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 77


 2354 00e7 0E       		.uleb128 0xe
 2355 00e8 3A       		.uleb128 0x3a
 2356 00e9 0B       		.uleb128 0xb
 2357 00ea 3B       		.uleb128 0x3b
 2358 00eb 05       		.uleb128 0x5
 2359 00ec 27       		.uleb128 0x27
 2360 00ed 19       		.uleb128 0x19
 2361 00ee 49       		.uleb128 0x49
 2362 00ef 13       		.uleb128 0x13
 2363 00f0 11       		.uleb128 0x11
 2364 00f1 01       		.uleb128 0x1
 2365 00f2 12       		.uleb128 0x12
 2366 00f3 06       		.uleb128 0x6
 2367 00f4 40       		.uleb128 0x40
 2368 00f5 18       		.uleb128 0x18
 2369 00f6 9742     		.uleb128 0x2117
 2370 00f8 19       		.uleb128 0x19
 2371 00f9 00       		.byte	0
 2372 00fa 00       		.byte	0
 2373 00fb 0F       		.uleb128 0xf
 2374 00fc 2E       		.uleb128 0x2e
 2375 00fd 01       		.byte	0x1
 2376 00fe 3F       		.uleb128 0x3f
 2377 00ff 19       		.uleb128 0x19
 2378 0100 03       		.uleb128 0x3
 2379 0101 0E       		.uleb128 0xe
 2380 0102 3A       		.uleb128 0x3a
 2381 0103 0B       		.uleb128 0xb
 2382 0104 3B       		.uleb128 0x3b
 2383 0105 05       		.uleb128 0x5
 2384 0106 27       		.uleb128 0x27
 2385 0107 19       		.uleb128 0x19
 2386 0108 11       		.uleb128 0x11
 2387 0109 01       		.uleb128 0x1
 2388 010a 12       		.uleb128 0x12
 2389 010b 06       		.uleb128 0x6
 2390 010c 40       		.uleb128 0x40
 2391 010d 18       		.uleb128 0x18
 2392 010e 9742     		.uleb128 0x2117
 2393 0110 19       		.uleb128 0x19
 2394 0111 01       		.uleb128 0x1
 2395 0112 13       		.uleb128 0x13
 2396 0113 00       		.byte	0
 2397 0114 00       		.byte	0
 2398 0115 10       		.uleb128 0x10
 2399 0116 05       		.uleb128 0x5
 2400 0117 00       		.byte	0
 2401 0118 03       		.uleb128 0x3
 2402 0119 08       		.uleb128 0x8
 2403 011a 3A       		.uleb128 0x3a
 2404 011b 0B       		.uleb128 0xb
 2405 011c 3B       		.uleb128 0x3b
 2406 011d 05       		.uleb128 0x5
 2407 011e 49       		.uleb128 0x49
 2408 011f 13       		.uleb128 0x13
 2409 0120 02       		.uleb128 0x2
 2410 0121 18       		.uleb128 0x18
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 78


 2411 0122 00       		.byte	0
 2412 0123 00       		.byte	0
 2413 0124 11       		.uleb128 0x11
 2414 0125 34       		.uleb128 0x34
 2415 0126 00       		.byte	0
 2416 0127 03       		.uleb128 0x3
 2417 0128 0E       		.uleb128 0xe
 2418 0129 3A       		.uleb128 0x3a
 2419 012a 0B       		.uleb128 0xb
 2420 012b 3B       		.uleb128 0x3b
 2421 012c 0B       		.uleb128 0xb
 2422 012d 49       		.uleb128 0x49
 2423 012e 13       		.uleb128 0x13
 2424 012f 3F       		.uleb128 0x3f
 2425 0130 19       		.uleb128 0x19
 2426 0131 02       		.uleb128 0x2
 2427 0132 18       		.uleb128 0x18
 2428 0133 00       		.byte	0
 2429 0134 00       		.byte	0
 2430 0135 12       		.uleb128 0x12
 2431 0136 01       		.uleb128 0x1
 2432 0137 01       		.byte	0x1
 2433 0138 49       		.uleb128 0x49
 2434 0139 13       		.uleb128 0x13
 2435 013a 01       		.uleb128 0x1
 2436 013b 13       		.uleb128 0x13
 2437 013c 00       		.byte	0
 2438 013d 00       		.byte	0
 2439 013e 13       		.uleb128 0x13
 2440 013f 21       		.uleb128 0x21
 2441 0140 00       		.byte	0
 2442 0141 49       		.uleb128 0x49
 2443 0142 13       		.uleb128 0x13
 2444 0143 2F       		.uleb128 0x2f
 2445 0144 0B       		.uleb128 0xb
 2446 0145 00       		.byte	0
 2447 0146 00       		.byte	0
 2448 0147 14       		.uleb128 0x14
 2449 0148 0F       		.uleb128 0xf
 2450 0149 00       		.byte	0
 2451 014a 0B       		.uleb128 0xb
 2452 014b 0B       		.uleb128 0xb
 2453 014c 49       		.uleb128 0x49
 2454 014d 13       		.uleb128 0x13
 2455 014e 00       		.byte	0
 2456 014f 00       		.byte	0
 2457 0150 15       		.uleb128 0x15
 2458 0151 26       		.uleb128 0x26
 2459 0152 00       		.byte	0
 2460 0153 49       		.uleb128 0x49
 2461 0154 13       		.uleb128 0x13
 2462 0155 00       		.byte	0
 2463 0156 00       		.byte	0
 2464 0157 00       		.byte	0
 2465              		.section	.debug_aranges,"",%progbits
 2466 0000 AC000000 		.4byte	0xac
 2467 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 79


 2468 0006 00000000 		.4byte	.Ldebug_info0
 2469 000a 04       		.byte	0x4
 2470 000b 00       		.byte	0
 2471 000c 0000     		.2byte	0
 2472 000e 0000     		.2byte	0
 2473 0010 00000000 		.4byte	.LFB0
 2474 0014 48010000 		.4byte	.LFE0-.LFB0
 2475 0018 00000000 		.4byte	.LFB1
 2476 001c 98000000 		.4byte	.LFE1-.LFB1
 2477 0020 00000000 		.4byte	.LFB2
 2478 0024 24000000 		.4byte	.LFE2-.LFB2
 2479 0028 00000000 		.4byte	.LFB3
 2480 002c 98000000 		.4byte	.LFE3-.LFB3
 2481 0030 00000000 		.4byte	.LFB4
 2482 0034 50000000 		.4byte	.LFE4-.LFB4
 2483 0038 00000000 		.4byte	.LFB5
 2484 003c 50000000 		.4byte	.LFE5-.LFB5
 2485 0040 00000000 		.4byte	.LFB6
 2486 0044 34000000 		.4byte	.LFE6-.LFB6
 2487 0048 00000000 		.4byte	.LFB7
 2488 004c 58000000 		.4byte	.LFE7-.LFB7
 2489 0050 00000000 		.4byte	.LFB8
 2490 0054 1C000000 		.4byte	.LFE8-.LFB8
 2491 0058 00000000 		.4byte	.LFB9
 2492 005c 20000000 		.4byte	.LFE9-.LFB9
 2493 0060 00000000 		.4byte	.LFB10
 2494 0064 28000000 		.4byte	.LFE10-.LFB10
 2495 0068 00000000 		.4byte	.LFB11
 2496 006c 6C000000 		.4byte	.LFE11-.LFB11
 2497 0070 00000000 		.4byte	.LFB12
 2498 0074 70000000 		.4byte	.LFE12-.LFB12
 2499 0078 00000000 		.4byte	.LFB13
 2500 007c 5C000000 		.4byte	.LFE13-.LFB13
 2501 0080 00000000 		.4byte	.LFB14
 2502 0084 98000000 		.4byte	.LFE14-.LFB14
 2503 0088 00000000 		.4byte	.LFB15
 2504 008c 2C000000 		.4byte	.LFE15-.LFB15
 2505 0090 00000000 		.4byte	.LFB16
 2506 0094 20000000 		.4byte	.LFE16-.LFB16
 2507 0098 00000000 		.4byte	.LFB17
 2508 009c 20000000 		.4byte	.LFE17-.LFB17
 2509 00a0 00000000 		.4byte	.LFB18
 2510 00a4 40000000 		.4byte	.LFE18-.LFB18
 2511 00a8 00000000 		.4byte	0
 2512 00ac 00000000 		.4byte	0
 2513              		.section	.debug_ranges,"",%progbits
 2514              	.Ldebug_ranges0:
 2515 0000 00000000 		.4byte	.LFB0
 2516 0004 48010000 		.4byte	.LFE0
 2517 0008 00000000 		.4byte	.LFB1
 2518 000c 98000000 		.4byte	.LFE1
 2519 0010 00000000 		.4byte	.LFB2
 2520 0014 24000000 		.4byte	.LFE2
 2521 0018 00000000 		.4byte	.LFB3
 2522 001c 98000000 		.4byte	.LFE3
 2523 0020 00000000 		.4byte	.LFB4
 2524 0024 50000000 		.4byte	.LFE4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 80


 2525 0028 00000000 		.4byte	.LFB5
 2526 002c 50000000 		.4byte	.LFE5
 2527 0030 00000000 		.4byte	.LFB6
 2528 0034 34000000 		.4byte	.LFE6
 2529 0038 00000000 		.4byte	.LFB7
 2530 003c 58000000 		.4byte	.LFE7
 2531 0040 00000000 		.4byte	.LFB8
 2532 0044 1C000000 		.4byte	.LFE8
 2533 0048 00000000 		.4byte	.LFB9
 2534 004c 20000000 		.4byte	.LFE9
 2535 0050 00000000 		.4byte	.LFB10
 2536 0054 28000000 		.4byte	.LFE10
 2537 0058 00000000 		.4byte	.LFB11
 2538 005c 6C000000 		.4byte	.LFE11
 2539 0060 00000000 		.4byte	.LFB12
 2540 0064 70000000 		.4byte	.LFE12
 2541 0068 00000000 		.4byte	.LFB13
 2542 006c 5C000000 		.4byte	.LFE13
 2543 0070 00000000 		.4byte	.LFB14
 2544 0074 98000000 		.4byte	.LFE14
 2545 0078 00000000 		.4byte	.LFB15
 2546 007c 2C000000 		.4byte	.LFE15
 2547 0080 00000000 		.4byte	.LFB16
 2548 0084 20000000 		.4byte	.LFE16
 2549 0088 00000000 		.4byte	.LFB17
 2550 008c 20000000 		.4byte	.LFE17
 2551 0090 00000000 		.4byte	.LFB18
 2552 0094 40000000 		.4byte	.LFE18
 2553 0098 00000000 		.4byte	0
 2554 009c 00000000 		.4byte	0
 2555              		.section	.debug_line,"",%progbits
 2556              	.Ldebug_line0:
 2557 0000 56020000 		.section	.debug_str,"MS",%progbits,1
 2557      02004900 
 2557      00000201 
 2557      FB0E0D00 
 2557      01010101 
 2558              	.LASF10:
 2559 0000 75696E74 		.ascii	"uint16\000"
 2559      313600
 2560              	.LASF27:
 2561 0007 736E7349 		.ascii	"snsIndex\000"
 2561      6E646578 
 2561      00
 2562              	.LASF61:
 2563 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2563      43313120 
 2563      352E342E 
 2563      31203230 
 2563      31363036 
 2564 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2564      20726576 
 2564      6973696F 
 2564      6E203233 
 2564      37373135 
 2565 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2565      66756E63 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 81


 2565      74696F6E 
 2565      2D736563 
 2565      74696F6E 
 2566              	.LASF42:
 2567 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2567      656E7365 
 2567      5F435344 
 2567      5F536574 
 2567      50726573 
 2568              	.LASF7:
 2569 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2569      206C6F6E 
 2569      6720756E 
 2569      7369676E 
 2569      65642069 
 2570              	.LASF55:
 2571 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2571      656E7365 
 2571      5F435344 
 2571      5F6D6173 
 2571      6B546162 
 2572              	.LASF54:
 2573 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2573      656E7365 
 2573      5F435344 
 2573      5F706F72 
 2573      74546162 
 2574              	.LASF6:
 2575 00fd 6C6F6E67 		.ascii	"long long int\000"
 2575      206C6F6E 
 2575      6720696E 
 2575      7400
 2576              	.LASF0:
 2577 010b 7369676E 		.ascii	"signed char\000"
 2577      65642063 
 2577      68617200 
 2578              	.LASF50:
 2579 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2579      656E7365 
 2579      5F435344 
 2579      5F73656E 
 2579      736F7249 
 2580              	.LASF20:
 2581 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
 2581      656E7365 
 2581      5F435344 
 2581      5F496E69 
 2581      7400
 2582              	.LASF4:
 2583 0142 6C6F6E67 		.ascii	"long int\000"
 2583      20696E74 
 2583      00
 2584              	.LASF60:
 2585 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2585      656E7365 
 2585      5F435344 
 2585      5F776964 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 82


 2585      6765744E 
 2586              	.LASF56:
 2587 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2587      656E7365 
 2587      5F435344 
 2587      5F637354 
 2587      61626C65 
 2588              	.LASF16:
 2589 017a 72656731 		.ascii	"reg16\000"
 2589      3600
 2590              	.LASF9:
 2591 0180 75696E74 		.ascii	"uint8\000"
 2591      3800
 2592              	.LASF13:
 2593 0186 646F7562 		.ascii	"double\000"
 2593      6C6500
 2594              	.LASF48:
 2595 018d 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2595      656E7365 
 2595      5F435344 
 2595      5F696E69 
 2595      74566172 
 2596              	.LASF11:
 2597 01a2 75696E74 		.ascii	"uint32\000"
 2597      333200
 2598              	.LASF32:
 2599 01a9 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2599      656E7365 
 2599      5F435344 
 2599      5F536361 
 2599      6E456E61 
 2600              	.LASF38:
 2601 01c9 6D61736B 		.ascii	"mask\000"
 2601      00
 2602              	.LASF35:
 2603 01ce 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2603      656E7365 
 2603      5F435344 
 2603      5F436C65 
 2603      61725365 
 2604              	.LASF37:
 2605 01e8 706F7274 		.ascii	"port\000"
 2605      00
 2606              	.LASF40:
 2607 01ed 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2607      656E7365 
 2607      5F435344 
 2607      5F507265 
 2607      5363616E 
 2608              	.LASF8:
 2609 0202 756E7369 		.ascii	"unsigned int\000"
 2609      676E6564 
 2609      20696E74 
 2609      00
 2610              	.LASF5:
 2611 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 2611      20756E73 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 83


 2611      69676E65 
 2611      6420696E 
 2611      7400
 2612              	.LASF62:
 2613 0221 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2613      72617465 
 2613      645F536F 
 2613      75726365 
 2613      5C50536F 
 2614              	.LASF59:
 2615 0247 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2615      656E7365 
 2615      5F435344 
 2615      5F616E61 
 2615      6C6F6753 
 2616              	.LASF3:
 2617 0268 73686F72 		.ascii	"short unsigned int\000"
 2617      7420756E 
 2617      7369676E 
 2617      65642069 
 2617      6E7400
 2618              	.LASF31:
 2619 027b 73656E73 		.ascii	"sensor\000"
 2619      6F7200
 2620              	.LASF39:
 2621 0282 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2621      656E7365 
 2621      5F435344 
 2621      5F446973 
 2621      61626C65 
 2622              	.LASF41:
 2623 029d 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2623      656E7365 
 2623      5F435344 
 2623      5F506F73 
 2623      74536361 
 2624              	.LASF28:
 2625 02b3 736C6F74 		.ascii	"slot\000"
 2625      00
 2626              	.LASF53:
 2627 02b8 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2627      656E7365 
 2627      5F435344 
 2627      5F706354 
 2627      61626C65 
 2628              	.LASF30:
 2629 02cd 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2629      656E7365 
 2629      5F435344 
 2629      5F536361 
 2629      6E53656E 
 2630              	.LASF17:
 2631 02e5 72656733 		.ascii	"reg32\000"
 2631      3200
 2632              	.LASF36:
 2633 02eb 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2633      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 84


 2633      5F435344 
 2633      5F456E61 
 2633      626C6553 
 2634              	.LASF19:
 2635 0305 73697A65 		.ascii	"sizetype\000"
 2635      74797065 
 2635      00
 2636              	.LASF18:
 2637 030e 6C6F6E67 		.ascii	"long double\000"
 2637      20646F75 
 2637      626C6500 
 2638              	.LASF23:
 2639 031a 43617053 		.ascii	"CapSense_CSD_Start\000"
 2639      656E7365 
 2639      5F435344 
 2639      5F537461 
 2639      727400
 2640              	.LASF46:
 2641 032d 7363616E 		.ascii	"scanSpeed\000"
 2641      53706565 
 2641      6400
 2642              	.LASF25:
 2643 0337 656E4D61 		.ascii	"enMask\000"
 2643      736B00
 2644              	.LASF52:
 2645 033e 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2645      656E7365 
 2645      5F435344 
 2645      5F73656E 
 2645      736F7245 
 2646              	.LASF12:
 2647 035c 666C6F61 		.ascii	"float\000"
 2647      7400
 2648              	.LASF43:
 2649 0362 70726573 		.ascii	"prescaler\000"
 2649      63616C65 
 2649      7200
 2650              	.LASF44:
 2651 036c 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2651      656E7365 
 2651      5F435344 
 2651      5F476574 
 2651      50726573 
 2652              	.LASF15:
 2653 0386 72656738 		.ascii	"reg8\000"
 2653      00
 2654              	.LASF1:
 2655 038b 756E7369 		.ascii	"unsigned char\000"
 2655      676E6564 
 2655      20636861 
 2655      7200
 2656              	.LASF2:
 2657 0399 73686F72 		.ascii	"short int\000"
 2657      7420696E 
 2657      7400
 2658              	.LASF29:
 2659 03a3 77696467 		.ascii	"widget\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 85


 2659      657400
 2660              	.LASF64:
 2661 03aa 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2661      656E7365 
 2661      5F435344 
 2661      5F497342 
 2661      75737900 
 2662              	.LASF51:
 2663 03be 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2663      656E7365 
 2663      5F435344 
 2663      5F73656E 
 2663      736F7252 
 2664              	.LASF45:
 2665 03d5 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2665      656E7365 
 2665      5F435344 
 2665      5F536574 
 2665      5363616E 
 2666              	.LASF24:
 2667 03ef 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2667      656E7365 
 2667      5F435344 
 2667      5F53746F 
 2667      7000
 2668              	.LASF14:
 2669 0401 63686172 		.ascii	"char\000"
 2669      00
 2670              	.LASF26:
 2671 0406 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2671      656E7365 
 2671      5F435344 
 2671      5F536574 
 2671      5363616E 
 2672              	.LASF34:
 2673 0427 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2673      656E7365 
 2673      5F435344 
 2673      5F526561 
 2673      6453656E 
 2674              	.LASF58:
 2675 0442 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2675      656E7365 
 2675      5F435344 
 2675      5F776964 
 2675      67657452 
 2676              	.LASF57:
 2677 0460 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2677      656E7365 
 2677      5F435344 
 2677      5F696461 
 2677      63536574 
 2678              	.LASF21:
 2679 047a 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2679      656E7365 
 2679      5F435344 
 2679      5F456E61 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\cch3eEbd.s 			page 86


 2679      626C6500 
 2680              	.LASF22:
 2681 048e 656E6162 		.ascii	"enableInterrupts\000"
 2681      6C65496E 
 2681      74657272 
 2681      75707473 
 2681      00
 2682              	.LASF63:
 2683 049f 433A5C55 		.ascii	"C:\\Users\\henrichsc\\Desktop\\School\\Senior_year\\"
 2683      73657273 
 2683      5C68656E 
 2683      72696368 
 2683      73635C44 
 2684 04cd 66616C6C 		.ascii	"fall\\CE4920\\lab\\CapSense_CSD_Design01.cydsn\000"
 2684      5C434534 
 2684      3932305C 
 2684      6C61625C 
 2684      43617053 
 2685              	.LASF33:
 2686 04f9 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2686      656E7365 
 2686      5F435344 
 2686      5F46696E 
 2686      644E6578 
 2687              	.LASF47:
 2688 0515 43617053 		.ascii	"CapSense_CSD_SetAnalogSwitchesSource\000"
 2688      656E7365 
 2688      5F435344 
 2688      5F536574 
 2688      416E616C 
 2689              	.LASF49:
 2690 053a 43617053 		.ascii	"CapSense_CSD_csv\000"
 2690      656E7365 
 2690      5F435344 
 2690      5F637376 
 2690      00
 2691              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
