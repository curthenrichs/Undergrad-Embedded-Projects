
Embedded_Three_Servo_Tune.elf:     file format elf32-littlenios2
Embedded_Three_Servo_Tune.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00012338 memsz 0x00012338 flags r-x
    LOAD off    0x00013358 vaddr 0x00012358 paddr 0x00013de0 align 2**12
         filesz 0x00001a88 memsz 0x00001a88 flags rw-
    LOAD off    0x00015868 vaddr 0x00015868 paddr 0x00015868 align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011b48  000001b4  000001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000065c  00011cfc  00011cfc  00012cfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a88  00012358  00013de0  00013358  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  00015868  00015868  00015868  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  00014de0  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001038  00000000  00000000  00014e08  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00001839  00000000  00000000  00015e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002f40a  00000000  00000000  00017679  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a44a  00000000  00000000  00046a83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001a263  00000000  00000000  00050ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001f9c  00000000  00000000  0006b130  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002a98  00000000  00000000  0006d0cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00011fef  00000000  00000000  0006fb64  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00081b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000b30  00000000  00000000  00081b88  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00085e8a  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00085e8d  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00085e90  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00085e91  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00085e92  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00085e96  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00085e9a  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  00085e9e  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  00085ea9  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  00085eb4  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000011  00000000  00000000  00085ebf  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000040  00000000  00000000  00085ed0  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00093cf1  00000000  00000000  00085f10  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001b4 l    d  .text	00000000 .text
00011cfc l    d  .rodata	00000000 .rodata
00012358 l    d  .rwdata	00000000 .rwdata
00015868 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000001fc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 PWM.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
000005f8 l     F .text	00000058 std
00000704 l     F .text	00000008 __fp_lock
0000070c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00012358 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
0000160c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
00001698 l     F .text	00000008 eofread
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
00011d22 l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00011e45 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00013db4 l     O .rwdata	00000004 charset
00011fd8 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
00004ef0 l     F .text	00000048 match
00012b80 l     O .rwdata	00000014 fpi.1950
00012018 l     O .rodata	00000028 tinytens
00012b6c l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
000072b4 l     F .text	00000058 __sprint_r
000120ae l     O .rodata	00000010 blanks.3452
0001209e l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00009318 l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0000ab58 l     F .text	00000024 htinit
0000abe4 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0000b44c l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 mprec.c
00012204 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0000d668 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000e890 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0000f368 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000f3c8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000f4c8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000f5e8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000f6c8 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000f824 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000fa50 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00013dd0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000fcec l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00012d3c l     O .rwdata	00001060 jtag_uart_0
0000fddc l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0001001c l     F .text	00000228 altera_avalon_jtag_uart_irq
00010244 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000108c0 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00010c0c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00011030 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0001116c l     F .text	000000dc alt_file_locked
000113d0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00011ae4 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00011c98 l     F .text	00000040 alt_sim_halt
0000bb5c g     F .text	00000094 _mprec_log10
0000bc48 g     F .text	00000088 __any_on
0000b6e0 g     F .text	00000070 _isatty_r
000121dc g     O .rodata	00000028 __mprec_tinytens
0000f884 g     F .text	0000006c alt_main
00001394 g     F .text	000000a0 _puts_r
000159c4 g     O .bss	00000100 alt_irq
00004210 g     F .text	00000078 _lseek_r
00013de0 g       *ABS*	00000000 __flash_rwdata_start
0000e188 g     F .text	00000088 __eqdf2
00015c54 g       *ABS*	00000000 __alt_heap_start
000017b4 g     F .text	00000068 __sseek
00000660 g     F .text	000000a4 __sinit
00004170 g     F .text	00000084 _setlocale_r
00000760 g     F .text	00000068 __sfmoreglue
00007298 g     F .text	0000001c ungetc
0000f910 g     F .text	00000020 __malloc_unlock
00004f38 g     F .text	000014e4 _strtod_r
0000451c g     F .text	000000e0 memmove
00000750 g     F .text	00000010 _cleanup
0000bcd0 g     F .text	000000bc _Balloc
0000e298 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000aae4 g     F .text	00000074 _fstat_r
00015874 g     O .bss	00000004 errno
000030cc g     F .text	00000024 __svfscanf
0000ebcc g     F .text	0000002c __make_fp
00015888 g     O .bss	00000004 alt_argv
0001bd9c g       *ABS*	00000000 _gp
00000350 g     F .text	00000050 PWM_writeOCRB
000005d4 g     F .text	00000024 fgets
00012bbc g     O .rwdata	00000180 alt_fd_list
000115f4 g     F .text	00000094 alt_find_dev
0000125c g     F .text	000000a0 memcpy
0000b498 g     F .text	00000248 __hexnan
00000744 g     F .text	0000000c _cleanup_r
0000e4b8 g     F .text	000000f8 __floatsidf
000110f4 g     F .text	00000078 alt_io_redirect
0000e3a8 g     F .text	00000088 __ltdf2
00011cfc g       *ABS*	00000000 __DTOR_END__
00001434 g     F .text	00000014 puts
0000449c g     F .text	00000040 mbrtowc
000030f0 g     F .text	00000068 _vfscanf_r
0000baac g     F .text	000000b0 __ratio
0001045c g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00800000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000e9cc g     F .text	00000008 __udivsi3
0000f528 g     F .text	000000c0 isatty
00004120 g     F .text	0000002c iswspace
000120ec g     O .rodata	000000c8 __mprec_tens
0000414c g     F .text	00000008 __locale_charset
0000c8d0 g     F .text	000000a4 __fixunsdfsi
00011860 g     F .text	00000090 alt_icache_flush
00015868 g     O .bss	00000004 __malloc_top_pad
00006d0c g     F .text	00000024 strtoul
00013db0 g     O .rwdata	00000004 __mb_cur_max
00004154 g     F .text	0000000c _localeconv_r
00006d30 g     F .text	000002f0 _strtoull_r
0000c3c8 g     F .text	0000003c __i2b
00003c84 g     F .text	0000049c __sfvwrite_r
00001628 g     F .text	00000070 _sbrk_r
000045fc g     F .text	00000078 _read_r
00012b60 g     O .rwdata	0000000c __lc_ctype
00013dc8 g     O .rwdata	00000004 alt_max_fd
0000ef0c g     F .text	00000138 __unpack_d
000032b4 g     F .text	00000110 _fclose_r
000035d4 g     F .text	00000034 fflush
0001586c g     O .bss	00000004 __malloc_max_sbrked_mem
0000daf8 g     F .text	00000074 __adddf3
0000d500 g     F .text	00000078 __nesf2
0000b98c g     F .text	00000120 __b2d
0000cf50 g     F .text	000005b0 __umoddi3
0000f734 g     F .text	000000f0 lseek
00013da0 g     O .rwdata	00000004 _global_impure_ptr
00004674 g     F .text	000005f4 _realloc_r
00015c54 g       *ABS*	00000000 __bss_end
00010f38 g     F .text	000000f8 alt_iic_isr_register
000114c8 g     F .text	0000010c alt_tick
000158c4 g     O .bss	00000100 __hexdig
0000c974 g     F .text	000005dc __udivdi3
000121b4 g     O .rodata	00000028 __mprec_bigtens
0000c624 g     F .text	00000120 __s2b
0000e6fc g     F .text	00000194 __floatunsidf
0000b8ac g     F .text	00000060 __mcmp
00013dac g     O .rwdata	00000004 __ctype_ptr
0000072c g     F .text	00000018 __fp_lock_all
00010ef0 g     F .text	00000048 alt_ic_irq_enabled
00011430 g     F .text	00000098 alt_alarm_stop
000067a0 g     F .text	00000024 strtol
00015890 g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	000000c8 alt_irq_handler
00012b94 g     O .rwdata	00000028 alt_dev_null
0000ea5c g     F .text	000000c8 __unpack_f
000003cc g     F .text	0000002c PWM_readOCRB
00010b14 g     F .text	00000044 alt_dcache_flush_all
0000b778 g     F .text	00000070 __hi0bits
0000e5b0 g     F .text	000000d8 __fixdfsi
00006540 g     F .text	0000001c strtod
00013de0 g       *ABS*	00000000 __ram_rwdata_end
00013dc0 g     O .rwdata	00000008 alt_dev_list
0000fbcc g     F .text	00000120 write
0000d578 g     F .text	00000078 __gtsf2
00012358 g       *ABS*	00000000 __ram_rodata_end
0000f3f4 g     F .text	000000d4 fstat
0000e430 g     F .text	00000088 __ledf2
0000c504 g     F .text	00000120 __pow5mult
00015878 g     O .bss	00000004 __nlocale_changed
0000e9d4 g     F .text	00000008 __umodsi3
00015c54 g       *ABS*	00000000 end
0000f10c g     F .text	00000160 __pack_f
0000ff5c g     F .text	000000c0 altera_avalon_jtag_uart_init
00011cf8 g       *ABS*	00000000 __CTOR_LIST__
00800000 g       *ABS*	00000000 __alt_stack_pointer
00010930 g     F .text	00000090 alt_avalon_timer_sc_init
0000e9dc g     F .text	00000080 __clzsi2
00010680 g     F .text	00000240 altera_avalon_jtag_uart_write
00000650 g     F .text	00000004 __sfp_lock_acquire
00001178 g     F .text	000000e4 memchr
0000730c g     F .text	00001eac ___vfprintf_internal_r
00004dd4 g     F .text	00000060 _sprintf_r
00003970 g     F .text	00000314 _free_r
00011ae8 g     F .text	000001b0 __call_exitprocs
0001587c g     O .bss	00000004 __mlocale_changed
00013da8 g     O .rwdata	00000004 __malloc_sbrk_base
000001b4 g     F .text	0000004c _start
00015894 g     O .bss	00000004 _alt_tick_rate
000067c4 g     F .text	00000318 _strtoll_r
0000c094 g     F .text	0000014c __lshift
00015898 g     O .bss	00000004 _alt_nticks
0000f930 g     F .text	00000120 read
0000fd80 g     F .text	0000005c alt_sys_init
000119b0 g     F .text	00000134 __register_exitproc
0000c1e0 g     F .text	000001e8 __multiply
000102f4 g     F .text	00000074 altera_avalon_jtag_uart_close
00012358 g       *ABS*	00000000 __ram_rwdata_start
00011cfc g       *ABS*	00000000 __ram_rodata_start
0001589c g     O .bss	00000028 __malloc_current_mallinfo
0000bd8c g     F .text	0000017c __d2b
0000fe14 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
00006adc g     F .text	00000230 _strtoul_r
000117a8 g     F .text	000000b8 alt_get_fd
0000f044 g     F .text	000000c8 __fpcmp_parts_d
00003244 g     F .text	00000070 _close_r
0001193c g     F .text	00000074 memcmp
0000fec4 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
00015c54 g       *ABS*	00000000 __alt_stack_base
0000ff0c g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00001728 g     F .text	00000084 sscanf
000091dc g     F .text	0000013c __swsetup_r
0000df30 g     F .text	00000258 __divdf3
000007c8 g     F .text	000000f0 __sfp
0000bbf0 g     F .text	00000058 __copybits
00012758 g     O .rwdata	00000408 __malloc_av_
0000065c g     F .text	00000004 __sinit_lock_release
00000280 g     F .text	00000080 PWM_setDutyCycle_B
0000db6c g     F .text	000003c4 __muldf3
00001898 g     F .text	00000060 __sread
00003804 g     F .text	00000040 fread
00011688 g     F .text	00000120 alt_find_file
00010b58 g     F .text	000000b4 alt_dev_llist_insert
0000f8f0 g     F .text	00000020 __malloc_lock
0000fb10 g     F .text	000000bc sbrk
000033d8 g     F .text	000001fc _fflush_r
0000c784 g     F .text	000000b4 _calloc_r
00015868 g       *ABS*	00000000 __bss_start
000012fc g     F .text	00000098 memset
000003f8 g     F .text	00000094 main
0001588c g     O .bss	00000004 alt_envp
00015870 g     O .bss	00000004 __malloc_max_total_mem
0000fe6c g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0000d5f0 g     F .text	00000078 __ltsf2
00003608 g     F .text	000001fc _fread_r
000017ac g     F .text	00000008 __sclose
00800000 g       *ABS*	00000000 __alt_heap_limit
000033c4 g     F .text	00000014 fclose
0000655c g     F .text	00000244 _strtol_r
0000e688 g     F .text	00000074 __truncdfsf2
00015ac4 g     O .bss	00000190 _atexit0
00009530 g     F .text	000015b4 _dtoa_r
00000a38 g     F .text	00000740 _malloc_r
00013dcc g     O .rwdata	00000004 alt_errno
00007020 g     F .text	000000dc __submore
00000980 g     F .text	000000b8 _fwalk
0000048c g     F .text	00000148 _fgets_r
000044dc g     F .text	00000040 _mbtowc_r
0000e90c g     F .text	00000060 __divsi3
00012210 g     O .rodata	00000014 __thenan_df
00003844 g     F .text	0000012c _malloc_trim_r
00011cfc g       *ABS*	00000000 __CTOR_END__
00004e34 g     F .text	000000bc strcmp
00011cfc g       *ABS*	00000000 __flash_rodata_start
00011cfc g       *ABS*	00000000 __DTOR_LIST__
0000e210 g     F .text	00000088 __nedf2
0000fd4c g     F .text	00000034 alt_irq_init
0000fab0 g     F .text	00000060 alt_release_fd
000003a0 g     F .text	0000002c PWM_readOCRA
00004d60 g     F .text	00000074 sprintf
00012224 g     O .rodata	00000100 __clz_tab
00015880 g     O .bss	00000004 _PathLocale
0000641c g     F .text	00000124 strtof
000118f0 g     F .text	00000014 atexit
000031cc g     F .text	00000078 _write_r
000041f4 g     F .text	0000001c setlocale
00004d58 g     F .text	00000008 nanf
00013d9c g     O .rwdata	00000004 _impure_ptr
00015884 g     O .bss	00000004 alt_argc
0000441c g     F .text	00000080 _mbrtowc_r
00010cd0 g     F .text	00000064 _do_dtors
00000300 g     F .text	00000050 PWM_writeOCRA
00001448 g     F .text	000001c4 __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
0000b90c g     F .text	00000080 __ulp
0000c744 g     F .text	00000040 __isinfd
00000714 g     F .text	00000018 __fp_unlock_all
00013db8 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00004160 g     F .text	00000010 localeconv
00010d64 g     F .text	00000050 alt_ic_isr_register
0000ab7c g     F .text	00000068 __hexdig_init
000016a0 g     F .text	00000088 _sscanf_r
00013de0 g       *ABS*	00000000 _edata
00015c54 g       *ABS*	00000000 _end
000001b4 g       *ABS*	00000000 __ram_exceptions_end
00003158 g     F .text	00000074 vfscanf
00010368 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00010e50 g     F .text	000000a0 alt_ic_irq_disable
0000181c g     F .text	0000007c __swrite
00013da4 g     O .rwdata	00000004 __malloc_trim_threshold
000115d4 g     F .text	00000020 altera_nios2_qsys_irq_init
00011904 g     F .text	00000038 exit
000008b8 g     F .text	000000c8 _fwalk_reent
0000bf08 g     F .text	0000018c __mdiff
0000e96c g     F .text	00000060 __modsi3
00800000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00000654 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
00004c98 g     F .text	000000c0 __sccl
00011d44 g     O .rodata	00000101 _ctype_
0000eb24 g     F .text	000000a8 __fpcmp_parts_f
00011cd8 g     F .text	00000020 _exit
00004c68 g     F .text	00000030 __isnand
000109c0 g     F .text	00000154 alt_alarm_start
0000c838 g     F .text	00000098 __muldi3
00004288 g     F .text	00000194 __smakebuf_r
000019d8 g     F .text	00000074 strlen
00011248 g     F .text	00000188 open
0000e320 g     F .text	00000088 __gedf2
0000ac94 g     F .text	000007b8 __gethex
00000200 g     F .text	00000080 PWM_setDutyCycle_A
00010d34 g     F .text	00000030 alt_icache_flush_all
000018f8 g     F .text	000000e0 strchr
00013dd4 g     O .rwdata	00000004 alt_priority_mask
00010db4 g     F .text	0000009c alt_ic_irq_enable
000091b8 g     F .text	00000024 __vfprintf_internal
0000da78 g     F .text	00000080 __subdf3
0000b7e8 g     F .text	000000c4 __lo0bits
00001a4c g     F .text	00001680 __svfscanf_r
00013dd8 g     O .rwdata	00000008 alt_alarm_list
000070fc g     F .text	0000019c _ungetc_r
00010c6c g     F .text	00000064 _do_ctors
0000f26c g     F .text	000000fc close
0000f648 g     F .text	00000080 alt_load
0000ebf8 g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00000658 g     F .text	00000004 __sinit_lock_acquire
0000c404 g     F .text	00000100 __multadd
0000b750 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08406d14 	ori	at,at,436
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  44:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  fc:	0005313a 	rdctl	r2,ipending
 100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 10c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 110:	00800044 	movi	r2,1
 114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 118:	e0ffff17 	ldw	r3,-4(fp)
 11c:	e0bffe17 	ldw	r2,-8(fp)
 120:	1884703a 	and	r2,r3,r2
 124:	1005003a 	cmpeq	r2,r2,zero
 128:	1000161e 	bne	r2,zero,184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	e0bffd17 	ldw	r2,-12(fp)
 130:	00c00074 	movhi	r3,1
 134:	18d67104 	addi	r3,r3,22980
 138:	100490fa 	slli	r2,r2,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	11400017 	ldw	r5,0(r2)
 144:	e0bffd17 	ldw	r2,-12(fp)
 148:	00c00074 	movhi	r3,1
 14c:	18d67104 	addi	r3,r3,22980
 150:	100490fa 	slli	r2,r2,3
 154:	10c5883a 	add	r2,r2,r3
 158:	10800104 	addi	r2,r2,4
 15c:	11000017 	ldw	r4,0(r2)
 160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 164:	0005313a 	rdctl	r2,ipending
 168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 16c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	1004c03a 	cmpne	r2,r2,zero
 17c:	103fe31e 	bne	r2,zero,10c <alt_irq_handler+0x20>
 180:	00000706 	br	1a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 19c:	003fde06 	br	118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 1a0:	e037883a 	mov	sp,fp
 1a4:	dfc00117 	ldw	ra,4(sp)
 1a8:	df000017 	ldw	fp,0(sp)
 1ac:	dec00204 	addi	sp,sp,8
 1b0:	f800283a 	ret

Disassembly of section .text:

000001b4 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     1b4:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
     1b8:	10000033 	initd	0(r2)
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     1bc:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
     1c0:	00bffd16 	blt	zero,r2,1b8 <_start+0x4>
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1c4:	06c02034 	movhi	sp,128
    ori sp, sp, %lo(__alt_stack_pointer)
     1c8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
     1cc:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1d0:	d6af6714 	ori	gp,gp,48540
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1d4:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d8:	10961a14 	ori	r2,r2,22632

    movhi r3, %hi(__bss_end)
     1dc:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1e0:	18d71514 	ori	r3,r3,23636

    beq r2, r3, 1f
     1e4:	10c00326 	beq	r2,r3,1f4 <_start+0x40>

0:
    stw zero, (r2)
     1e8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1ec:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1f0:	10fffd36 	bltu	r2,r3,1e8 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1f4:	000f6480 	call	f648 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f8:	000f8840 	call	f884 <alt_main>

000001fc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1fc:	003fff06 	br	1fc <alt_after_alt_main>

00000200 <PWM_setDutyCycle_A>:
 * @param dutyPercent Duty cycle, given as a percent from 0 to 100. (anything
 *        lower or higher will be ignored and no change will occur to register
 * @return Either a 0 if there was no error (Bad input) or a EOF (-1) if the
 *         input was out of bounds.
 */
int PWM_setDutyCycle_A(int dutyCycle){
     200:	defffc04 	addi	sp,sp,-16
     204:	df000315 	stw	fp,12(sp)
     208:	df000304 	addi	fp,sp,12
     20c:	e13ffe15 	stw	r4,-8(fp)
	if((dutyCycle <= 100) && (dutyCycle >= 0)){
     210:	e0bffe17 	ldw	r2,-8(fp)
     214:	10801948 	cmpgei	r2,r2,101
     218:	1000121e 	bne	r2,zero,264 <PWM_setDutyCycle_A+0x64>
     21c:	e0bffe17 	ldw	r2,-8(fp)
     220:	1004803a 	cmplt	r2,r2,zero
     224:	10000f1e 	bne	r2,zero,264 <PWM_setDutyCycle_A+0x64>
		//Convert from percent to the acceptable OCR value with max 20000
		int duty = dutyCycle * (MAX_OCR_VALUE / 100);
     228:	e0bffe17 	ldw	r2,-8(fp)
     22c:	10803224 	muli	r2,r2,200
     230:	e0bffd15 	stw	r2,-12(fp)
		//We can never actually get to 20000 based on my CE2800 notes
		if(duty == MAX_OCR_VALUE)
     234:	e0bffd17 	ldw	r2,-12(fp)
     238:	10938818 	cmpnei	r2,r2,20000
     23c:	1000031e 	bne	r2,zero,24c <PWM_setDutyCycle_A+0x4c>
			duty--;
     240:	e0bffd17 	ldw	r2,-12(fp)
     244:	10bfffc4 	addi	r2,r2,-1
     248:	e0bffd15 	stw	r2,-12(fp)
		//set register
		*OCRA = duty;
     24c:	00a02034 	movhi	r2,32896
     250:	10880a04 	addi	r2,r2,8232
     254:	e0fffd17 	ldw	r3,-12(fp)
     258:	10c0000d 	sth	r3,0(r2)
	} else {
		return -1; // return an error
	}
	// no error
	return 0;
     25c:	e03fff15 	stw	zero,-4(fp)
     260:	00000206 	br	26c <PWM_setDutyCycle_A+0x6c>
		if(duty == MAX_OCR_VALUE)
			duty--;
		//set register
		*OCRA = duty;
	} else {
		return -1; // return an error
     264:	00bfffc4 	movi	r2,-1
     268:	e0bfff15 	stw	r2,-4(fp)
     26c:	e0bfff17 	ldw	r2,-4(fp)
	}
	// no error
	return 0;
}
     270:	e037883a 	mov	sp,fp
     274:	df000017 	ldw	fp,0(sp)
     278:	dec00104 	addi	sp,sp,4
     27c:	f800283a 	ret

00000280 <PWM_setDutyCycle_B>:
 * @param dutyPercent Duty cycle, given as a percent from 0 to 100. (anything
 *        lower or higher will be ignored and no change will occur to register
 * @return Either a 0 if there was no error (Bad input) or a EOF (-1) if the
 *         input was out of bounds.
 */
int PWM_setDutyCycle_B(int dutyCycle){
     280:	defffc04 	addi	sp,sp,-16
     284:	df000315 	stw	fp,12(sp)
     288:	df000304 	addi	fp,sp,12
     28c:	e13ffe15 	stw	r4,-8(fp)
	if((dutyCycle <= 100) && (dutyCycle >= 0)){
     290:	e0bffe17 	ldw	r2,-8(fp)
     294:	10801948 	cmpgei	r2,r2,101
     298:	1000121e 	bne	r2,zero,2e4 <PWM_setDutyCycle_B+0x64>
     29c:	e0bffe17 	ldw	r2,-8(fp)
     2a0:	1004803a 	cmplt	r2,r2,zero
     2a4:	10000f1e 	bne	r2,zero,2e4 <PWM_setDutyCycle_B+0x64>
		//Convert from percent to the acceptable OCR value with max 20000
		int duty = dutyCycle * (MAX_OCR_VALUE / 100);
     2a8:	e0bffe17 	ldw	r2,-8(fp)
     2ac:	10803224 	muli	r2,r2,200
     2b0:	e0bffd15 	stw	r2,-12(fp)
		//We can never actually get to 20000 based on my CE2800 notes
		if(duty == MAX_OCR_VALUE)
     2b4:	e0bffd17 	ldw	r2,-12(fp)
     2b8:	10938818 	cmpnei	r2,r2,20000
     2bc:	1000031e 	bne	r2,zero,2cc <PWM_setDutyCycle_B+0x4c>
			duty--;
     2c0:	e0bffd17 	ldw	r2,-12(fp)
     2c4:	10bfffc4 	addi	r2,r2,-1
     2c8:	e0bffd15 	stw	r2,-12(fp)
		//set register
		*OCRB = duty;
     2cc:	00a02034 	movhi	r2,32896
     2d0:	10880a84 	addi	r2,r2,8234
     2d4:	e0fffd17 	ldw	r3,-12(fp)
     2d8:	10c0000d 	sth	r3,0(r2)
	} else {
		return -1;
	}
	return 0;
     2dc:	e03fff15 	stw	zero,-4(fp)
     2e0:	00000206 	br	2ec <PWM_setDutyCycle_B+0x6c>
		if(duty == MAX_OCR_VALUE)
			duty--;
		//set register
		*OCRB = duty;
	} else {
		return -1;
     2e4:	00bfffc4 	movi	r2,-1
     2e8:	e0bfff15 	stw	r2,-4(fp)
     2ec:	e0bfff17 	ldw	r2,-4(fp)
	}
	return 0;
}
     2f0:	e037883a 	mov	sp,fp
     2f4:	df000017 	ldw	fp,0(sp)
     2f8:	dec00104 	addi	sp,sp,4
     2fc:	f800283a 	ret

00000300 <PWM_writeOCRA>:
 * Writes a value to the PWM register. Note that the function will only
 * write out valid ranged values.
 * @param value place number directly into register
 * @return -1 if invalid data, 0 otherwise
 */
int PWM_writeOCRA(unsigned int value){
     300:	defffd04 	addi	sp,sp,-12
     304:	df000215 	stw	fp,8(sp)
     308:	df000204 	addi	fp,sp,8
     30c:	e13ffe15 	stw	r4,-8(fp)
	if(value > MAX_OCR_VALUE){
     310:	e0bffe17 	ldw	r2,-8(fp)
     314:	10938870 	cmpltui	r2,r2,20001
     318:	1000031e 	bne	r2,zero,328 <PWM_writeOCRA+0x28>
		return -1;
     31c:	00bfffc4 	movi	r2,-1
     320:	e0bfff15 	stw	r2,-4(fp)
     324:	00000506 	br	33c <PWM_writeOCRA+0x3c>
	}
	*OCRA = value;
     328:	00a02034 	movhi	r2,32896
     32c:	10880a04 	addi	r2,r2,8232
     330:	e0fffe17 	ldw	r3,-8(fp)
     334:	10c0000d 	sth	r3,0(r2)
	return 0;
     338:	e03fff15 	stw	zero,-4(fp)
     33c:	e0bfff17 	ldw	r2,-4(fp)
}
     340:	e037883a 	mov	sp,fp
     344:	df000017 	ldw	fp,0(sp)
     348:	dec00104 	addi	sp,sp,4
     34c:	f800283a 	ret

00000350 <PWM_writeOCRB>:
 * Writes a value to the PWM register. Note that the function will only
 * write out valid ranged values.
 * @param value place number directly into register
 * @return -1 if invalid data, 0 otherwise
 */
int PWM_writeOCRB(unsigned int value){
     350:	defffd04 	addi	sp,sp,-12
     354:	df000215 	stw	fp,8(sp)
     358:	df000204 	addi	fp,sp,8
     35c:	e13ffe15 	stw	r4,-8(fp)
	if(value > MAX_OCR_VALUE){
     360:	e0bffe17 	ldw	r2,-8(fp)
     364:	10938870 	cmpltui	r2,r2,20001
     368:	1000031e 	bne	r2,zero,378 <PWM_writeOCRB+0x28>
		return -1;
     36c:	00bfffc4 	movi	r2,-1
     370:	e0bfff15 	stw	r2,-4(fp)
     374:	00000506 	br	38c <PWM_writeOCRB+0x3c>
	}
	*OCRB = value;
     378:	00a02034 	movhi	r2,32896
     37c:	10880a84 	addi	r2,r2,8234
     380:	e0fffe17 	ldw	r3,-8(fp)
     384:	10c0000d 	sth	r3,0(r2)
	return 0;
     388:	e03fff15 	stw	zero,-4(fp)
     38c:	e0bfff17 	ldw	r2,-4(fp)
}
     390:	e037883a 	mov	sp,fp
     394:	df000017 	ldw	fp,0(sp)
     398:	dec00104 	addi	sp,sp,4
     39c:	f800283a 	ret

000003a0 <PWM_readOCRA>:

/**
 * Reads from the OCRA register in counts.
 * @return count value.
 */
int PWM_readOCRA(){
     3a0:	deffff04 	addi	sp,sp,-4
     3a4:	df000015 	stw	fp,0(sp)
     3a8:	d839883a 	mov	fp,sp
	return *OCRA;
     3ac:	00a02034 	movhi	r2,32896
     3b0:	10880a04 	addi	r2,r2,8232
     3b4:	1080000b 	ldhu	r2,0(r2)
     3b8:	10bfffcc 	andi	r2,r2,65535
}
     3bc:	e037883a 	mov	sp,fp
     3c0:	df000017 	ldw	fp,0(sp)
     3c4:	dec00104 	addi	sp,sp,4
     3c8:	f800283a 	ret

000003cc <PWM_readOCRB>:

/**
 * Reads from the OCRB register in counts.
 * @return count value.
 */
int PWM_readOCRB(){
     3cc:	deffff04 	addi	sp,sp,-4
     3d0:	df000015 	stw	fp,0(sp)
     3d4:	d839883a 	mov	fp,sp
	return *OCRB;
     3d8:	00a02034 	movhi	r2,32896
     3dc:	10880a84 	addi	r2,r2,8234
     3e0:	1080000b 	ldhu	r2,0(r2)
     3e4:	10bfffcc 	andi	r2,r2,65535
}
     3e8:	e037883a 	mov	sp,fp
     3ec:	df000017 	ldw	fp,0(sp)
     3f0:	dec00104 	addi	sp,sp,4
     3f4:	f800283a 	ret

000003f8 <main>:
#include "PWM.h"

#include <stdio.h>
#include <system.h>

int main(){
     3f8:	deffe804 	addi	sp,sp,-96
     3fc:	dfc01715 	stw	ra,92(sp)
     400:	df001615 	stw	fp,88(sp)
     404:	df001604 	addi	fp,sp,88

	char inputStr[80];
	unsigned int value;

	PWM_writeOCRA(1400);
     408:	01015e04 	movi	r4,1400
     40c:	00003000 	call	300 <PWM_writeOCRA>
	PWM_writeOCRA(1400);
     410:	01015e04 	movi	r4,1400
     414:	00003000 	call	300 <PWM_writeOCRA>

	while(1){

		printf("Enter OCR Value:\n");
     418:	01000074 	movhi	r4,1
     41c:	21073f04 	addi	r4,r4,7420
     420:	00014340 	call	1434 <puts>

		if(fgets(inputStr,sizeof inputStr, stdin) != NULL){
     424:	00800074 	movhi	r2,1
     428:	108f6704 	addi	r2,r2,15772
     42c:	10800017 	ldw	r2,0(r2)
     430:	11800117 	ldw	r6,4(r2)
     434:	e13feb04 	addi	r4,fp,-84
     438:	01401404 	movi	r5,80
     43c:	00005d40 	call	5d4 <fgets>
     440:	1005003a 	cmpeq	r2,r2,zero
     444:	1000091e 	bne	r2,zero,46c <main+0x74>
			char* newline = strchr(inputStr,'\n');
     448:	e13feb04 	addi	r4,fp,-84
     44c:	01400284 	movi	r5,10
     450:	00018f80 	call	18f8 <strchr>
     454:	e0bfea15 	stw	r2,-88(fp)
			if(newline != NULL){
     458:	e0bfea17 	ldw	r2,-88(fp)
     45c:	1005003a 	cmpeq	r2,r2,zero
     460:	1000021e 	bne	r2,zero,46c <main+0x74>
				*newline = '\0';
     464:	e0bfea17 	ldw	r2,-88(fp)
     468:	10000005 	stb	zero,0(r2)
			}
		}

		sscanf(inputStr,"%d",&value);
     46c:	e13feb04 	addi	r4,fp,-84
     470:	e1bfff04 	addi	r6,fp,-4
     474:	01400074 	movhi	r5,1
     478:	29474404 	addi	r5,r5,7440
     47c:	00017280 	call	1728 <sscanf>
		PWM_writeOCRA(value);
     480:	e13fff17 	ldw	r4,-4(fp)
     484:	00003000 	call	300 <PWM_writeOCRA>
	}
     488:	003fe306 	br	418 <main+0x20>

0000048c <_fgets_r>:
     48c:	defff804 	addi	sp,sp,-32
     490:	00800044 	movi	r2,1
     494:	dd800615 	stw	r22,24(sp)
     498:	dd400515 	stw	r21,20(sp)
     49c:	dc400115 	stw	r17,4(sp)
     4a0:	dc000015 	stw	r16,0(sp)
     4a4:	dfc00715 	stw	ra,28(sp)
     4a8:	dd000415 	stw	r20,16(sp)
     4ac:	dcc00315 	stw	r19,12(sp)
     4b0:	dc800215 	stw	r18,8(sp)
     4b4:	3021883a 	mov	r16,r6
     4b8:	282d883a 	mov	r22,r5
     4bc:	3823883a 	mov	r17,r7
     4c0:	202b883a 	mov	r21,r4
     4c4:	1180410e 	bge	r2,r6,5cc <_fgets_r+0x140>
     4c8:	20000226 	beq	r4,zero,4d4 <_fgets_r+0x48>
     4cc:	20800e17 	ldw	r2,56(r4)
     4d0:	10002e26 	beq	r2,zero,58c <_fgets_r+0x100>
     4d4:	853fffc4 	addi	r20,r16,-1
     4d8:	b027883a 	mov	r19,r22
     4dc:	88800117 	ldw	r2,4(r17)
     4e0:	a809883a 	mov	r4,r21
     4e4:	880b883a 	mov	r5,r17
     4e8:	100d883a 	mov	r6,r2
     4ec:	1000031e 	bne	r2,zero,4fc <_fgets_r+0x70>
     4f0:	00014480 	call	1448 <__srefill_r>
     4f4:	1000341e 	bne	r2,zero,5c8 <_fgets_r+0x13c>
     4f8:	89800117 	ldw	r6,4(r17)
     4fc:	01400284 	movi	r5,10
     500:	3021883a 	mov	r16,r6
     504:	8c800017 	ldw	r18,0(r17)
     508:	a180012e 	bgeu	r20,r6,510 <_fgets_r+0x84>
     50c:	a021883a 	mov	r16,r20
     510:	9009883a 	mov	r4,r18
     514:	800d883a 	mov	r6,r16
     518:	00011780 	call	1178 <memchr>
     51c:	1007883a 	mov	r3,r2
     520:	900b883a 	mov	r5,r18
     524:	9809883a 	mov	r4,r19
     528:	800d883a 	mov	r6,r16
     52c:	1000191e 	bne	r2,zero,594 <_fgets_r+0x108>
     530:	88800117 	ldw	r2,4(r17)
     534:	88c00017 	ldw	r3,0(r17)
     538:	9c27883a 	add	r19,r19,r16
     53c:	1405c83a 	sub	r2,r2,r16
     540:	1c07883a 	add	r3,r3,r16
     544:	88c00015 	stw	r3,0(r17)
     548:	88800115 	stw	r2,4(r17)
     54c:	000125c0 	call	125c <memcpy>
     550:	a407c83a 	sub	r3,r20,r16
     554:	1829883a 	mov	r20,r3
     558:	183fe01e 	bne	r3,zero,4dc <_fgets_r+0x50>
     55c:	98000005 	stb	zero,0(r19)
     560:	b005883a 	mov	r2,r22
     564:	dfc00717 	ldw	ra,28(sp)
     568:	dd800617 	ldw	r22,24(sp)
     56c:	dd400517 	ldw	r21,20(sp)
     570:	dd000417 	ldw	r20,16(sp)
     574:	dcc00317 	ldw	r19,12(sp)
     578:	dc800217 	ldw	r18,8(sp)
     57c:	dc400117 	ldw	r17,4(sp)
     580:	dc000017 	ldw	r16,0(sp)
     584:	dec00804 	addi	sp,sp,32
     588:	f800283a 	ret
     58c:	00006600 	call	660 <__sinit>
     590:	003fd006 	br	4d4 <_fgets_r+0x48>
     594:	88800117 	ldw	r2,4(r17)
     598:	18c00044 	addi	r3,r3,1
     59c:	1ca1c83a 	sub	r16,r3,r18
     5a0:	1405c83a 	sub	r2,r2,r16
     5a4:	800d883a 	mov	r6,r16
     5a8:	88c00015 	stw	r3,0(r17)
     5ac:	88800115 	stw	r2,4(r17)
     5b0:	900b883a 	mov	r5,r18
     5b4:	9809883a 	mov	r4,r19
     5b8:	000125c0 	call	125c <memcpy>
     5bc:	9c21883a 	add	r16,r19,r16
     5c0:	80000005 	stb	zero,0(r16)
     5c4:	003fe606 	br	560 <_fgets_r+0xd4>
     5c8:	9dbfe41e 	bne	r19,r22,55c <_fgets_r+0xd0>
     5cc:	002d883a 	mov	r22,zero
     5d0:	003fe306 	br	560 <_fgets_r+0xd4>

000005d4 <fgets>:
     5d4:	00800074 	movhi	r2,1
     5d8:	108f6704 	addi	r2,r2,15772
     5dc:	2013883a 	mov	r9,r4
     5e0:	11000017 	ldw	r4,0(r2)
     5e4:	2805883a 	mov	r2,r5
     5e8:	300f883a 	mov	r7,r6
     5ec:	480b883a 	mov	r5,r9
     5f0:	100d883a 	mov	r6,r2
     5f4:	000048c1 	jmpi	48c <_fgets_r>

000005f8 <std>:
     5f8:	00800034 	movhi	r2,0
     5fc:	1085eb04 	addi	r2,r2,6060
     600:	20800b15 	stw	r2,44(r4)
     604:	00800034 	movhi	r2,0
     608:	10862604 	addi	r2,r2,6296
     60c:	20800815 	stw	r2,32(r4)
     610:	00c00034 	movhi	r3,0
     614:	18c60704 	addi	r3,r3,6172
     618:	00800034 	movhi	r2,0
     61c:	1085ed04 	addi	r2,r2,6068
     620:	2140030d 	sth	r5,12(r4)
     624:	2180038d 	sth	r6,14(r4)
     628:	20c00915 	stw	r3,36(r4)
     62c:	20800a15 	stw	r2,40(r4)
     630:	20000015 	stw	zero,0(r4)
     634:	20000115 	stw	zero,4(r4)
     638:	20000215 	stw	zero,8(r4)
     63c:	20000415 	stw	zero,16(r4)
     640:	20000515 	stw	zero,20(r4)
     644:	20000615 	stw	zero,24(r4)
     648:	21000715 	stw	r4,28(r4)
     64c:	f800283a 	ret

00000650 <__sfp_lock_acquire>:
     650:	f800283a 	ret

00000654 <__sfp_lock_release>:
     654:	f800283a 	ret

00000658 <__sinit_lock_acquire>:
     658:	f800283a 	ret

0000065c <__sinit_lock_release>:
     65c:	f800283a 	ret

00000660 <__sinit>:
     660:	20800e17 	ldw	r2,56(r4)
     664:	defffd04 	addi	sp,sp,-12
     668:	dc400115 	stw	r17,4(sp)
     66c:	dc000015 	stw	r16,0(sp)
     670:	dfc00215 	stw	ra,8(sp)
     674:	04400044 	movi	r17,1
     678:	01400104 	movi	r5,4
     67c:	000d883a 	mov	r6,zero
     680:	2021883a 	mov	r16,r4
     684:	2200bb04 	addi	r8,r4,748
     688:	200f883a 	mov	r7,r4
     68c:	10000526 	beq	r2,zero,6a4 <__sinit+0x44>
     690:	dfc00217 	ldw	ra,8(sp)
     694:	dc400117 	ldw	r17,4(sp)
     698:	dc000017 	ldw	r16,0(sp)
     69c:	dec00304 	addi	sp,sp,12
     6a0:	f800283a 	ret
     6a4:	21000117 	ldw	r4,4(r4)
     6a8:	00800034 	movhi	r2,0
     6ac:	1081d104 	addi	r2,r2,1860
     6b0:	00c000c4 	movi	r3,3
     6b4:	80800f15 	stw	r2,60(r16)
     6b8:	80c0b915 	stw	r3,740(r16)
     6bc:	8200ba15 	stw	r8,744(r16)
     6c0:	84400e15 	stw	r17,56(r16)
     6c4:	8000b815 	stw	zero,736(r16)
     6c8:	00005f80 	call	5f8 <std>
     6cc:	81000217 	ldw	r4,8(r16)
     6d0:	880d883a 	mov	r6,r17
     6d4:	800f883a 	mov	r7,r16
     6d8:	01400284 	movi	r5,10
     6dc:	00005f80 	call	5f8 <std>
     6e0:	81000317 	ldw	r4,12(r16)
     6e4:	800f883a 	mov	r7,r16
     6e8:	01400484 	movi	r5,18
     6ec:	01800084 	movi	r6,2
     6f0:	dfc00217 	ldw	ra,8(sp)
     6f4:	dc400117 	ldw	r17,4(sp)
     6f8:	dc000017 	ldw	r16,0(sp)
     6fc:	dec00304 	addi	sp,sp,12
     700:	00005f81 	jmpi	5f8 <std>

00000704 <__fp_lock>:
     704:	0005883a 	mov	r2,zero
     708:	f800283a 	ret

0000070c <__fp_unlock>:
     70c:	0005883a 	mov	r2,zero
     710:	f800283a 	ret

00000714 <__fp_unlock_all>:
     714:	00800074 	movhi	r2,1
     718:	108f6704 	addi	r2,r2,15772
     71c:	11000017 	ldw	r4,0(r2)
     720:	01400034 	movhi	r5,0
     724:	2941c304 	addi	r5,r5,1804
     728:	00009801 	jmpi	980 <_fwalk>

0000072c <__fp_lock_all>:
     72c:	00800074 	movhi	r2,1
     730:	108f6704 	addi	r2,r2,15772
     734:	11000017 	ldw	r4,0(r2)
     738:	01400034 	movhi	r5,0
     73c:	2941c104 	addi	r5,r5,1796
     740:	00009801 	jmpi	980 <_fwalk>

00000744 <_cleanup_r>:
     744:	01400034 	movhi	r5,0
     748:	294cf104 	addi	r5,r5,13252
     74c:	00009801 	jmpi	980 <_fwalk>

00000750 <_cleanup>:
     750:	00800074 	movhi	r2,1
     754:	108f6804 	addi	r2,r2,15776
     758:	11000017 	ldw	r4,0(r2)
     75c:	00007441 	jmpi	744 <_cleanup_r>

00000760 <__sfmoreglue>:
     760:	defffc04 	addi	sp,sp,-16
     764:	dc400115 	stw	r17,4(sp)
     768:	2c401724 	muli	r17,r5,92
     76c:	dc800215 	stw	r18,8(sp)
     770:	2825883a 	mov	r18,r5
     774:	89400304 	addi	r5,r17,12
     778:	dc000015 	stw	r16,0(sp)
     77c:	dfc00315 	stw	ra,12(sp)
     780:	0000a380 	call	a38 <_malloc_r>
     784:	0021883a 	mov	r16,zero
     788:	880d883a 	mov	r6,r17
     78c:	000b883a 	mov	r5,zero
     790:	10000626 	beq	r2,zero,7ac <__sfmoreglue+0x4c>
     794:	11000304 	addi	r4,r2,12
     798:	14800115 	stw	r18,4(r2)
     79c:	10000015 	stw	zero,0(r2)
     7a0:	11000215 	stw	r4,8(r2)
     7a4:	1021883a 	mov	r16,r2
     7a8:	00012fc0 	call	12fc <memset>
     7ac:	8005883a 	mov	r2,r16
     7b0:	dfc00317 	ldw	ra,12(sp)
     7b4:	dc800217 	ldw	r18,8(sp)
     7b8:	dc400117 	ldw	r17,4(sp)
     7bc:	dc000017 	ldw	r16,0(sp)
     7c0:	dec00404 	addi	sp,sp,16
     7c4:	f800283a 	ret

000007c8 <__sfp>:
     7c8:	defffd04 	addi	sp,sp,-12
     7cc:	00800074 	movhi	r2,1
     7d0:	108f6804 	addi	r2,r2,15776
     7d4:	dc000015 	stw	r16,0(sp)
     7d8:	14000017 	ldw	r16,0(r2)
     7dc:	dc400115 	stw	r17,4(sp)
     7e0:	dfc00215 	stw	ra,8(sp)
     7e4:	80800e17 	ldw	r2,56(r16)
     7e8:	2023883a 	mov	r17,r4
     7ec:	10002626 	beq	r2,zero,888 <__sfp+0xc0>
     7f0:	8400b804 	addi	r16,r16,736
     7f4:	80800117 	ldw	r2,4(r16)
     7f8:	81000217 	ldw	r4,8(r16)
     7fc:	10ffffc4 	addi	r3,r2,-1
     800:	18000916 	blt	r3,zero,828 <__sfp+0x60>
     804:	2080030f 	ldh	r2,12(r4)
     808:	10000b26 	beq	r2,zero,838 <__sfp+0x70>
     80c:	017fffc4 	movi	r5,-1
     810:	00000206 	br	81c <__sfp+0x54>
     814:	2080030f 	ldh	r2,12(r4)
     818:	10000726 	beq	r2,zero,838 <__sfp+0x70>
     81c:	18ffffc4 	addi	r3,r3,-1
     820:	21001704 	addi	r4,r4,92
     824:	197ffb1e 	bne	r3,r5,814 <__sfp+0x4c>
     828:	80800017 	ldw	r2,0(r16)
     82c:	10001926 	beq	r2,zero,894 <__sfp+0xcc>
     830:	1021883a 	mov	r16,r2
     834:	003fef06 	br	7f4 <__sfp+0x2c>
     838:	00bfffc4 	movi	r2,-1
     83c:	00c00044 	movi	r3,1
     840:	2080038d 	sth	r2,14(r4)
     844:	20c0030d 	sth	r3,12(r4)
     848:	20000015 	stw	zero,0(r4)
     84c:	20000215 	stw	zero,8(r4)
     850:	20000115 	stw	zero,4(r4)
     854:	20000415 	stw	zero,16(r4)
     858:	20000515 	stw	zero,20(r4)
     85c:	20000615 	stw	zero,24(r4)
     860:	20000c15 	stw	zero,48(r4)
     864:	20000d15 	stw	zero,52(r4)
     868:	20001115 	stw	zero,68(r4)
     86c:	20001215 	stw	zero,72(r4)
     870:	2005883a 	mov	r2,r4
     874:	dfc00217 	ldw	ra,8(sp)
     878:	dc400117 	ldw	r17,4(sp)
     87c:	dc000017 	ldw	r16,0(sp)
     880:	dec00304 	addi	sp,sp,12
     884:	f800283a 	ret
     888:	8009883a 	mov	r4,r16
     88c:	00006600 	call	660 <__sinit>
     890:	003fd706 	br	7f0 <__sfp+0x28>
     894:	8809883a 	mov	r4,r17
     898:	01400104 	movi	r5,4
     89c:	00007600 	call	760 <__sfmoreglue>
     8a0:	80800015 	stw	r2,0(r16)
     8a4:	103fe21e 	bne	r2,zero,830 <__sfp+0x68>
     8a8:	00800304 	movi	r2,12
     8ac:	0009883a 	mov	r4,zero
     8b0:	88800015 	stw	r2,0(r17)
     8b4:	003fee06 	br	870 <__sfp+0xa8>

000008b8 <_fwalk_reent>:
     8b8:	defff704 	addi	sp,sp,-36
     8bc:	dcc00315 	stw	r19,12(sp)
     8c0:	24c0b804 	addi	r19,r4,736
     8c4:	dd800615 	stw	r22,24(sp)
     8c8:	dd400515 	stw	r21,20(sp)
     8cc:	dfc00815 	stw	ra,32(sp)
     8d0:	ddc00715 	stw	r23,28(sp)
     8d4:	dd000415 	stw	r20,16(sp)
     8d8:	dc800215 	stw	r18,8(sp)
     8dc:	dc400115 	stw	r17,4(sp)
     8e0:	dc000015 	stw	r16,0(sp)
     8e4:	202b883a 	mov	r21,r4
     8e8:	282d883a 	mov	r22,r5
     8ec:	00006500 	call	650 <__sfp_lock_acquire>
     8f0:	98002126 	beq	r19,zero,978 <_fwalk_reent+0xc0>
     8f4:	002f883a 	mov	r23,zero
     8f8:	9c800117 	ldw	r18,4(r19)
     8fc:	9c000217 	ldw	r16,8(r19)
     900:	90bfffc4 	addi	r2,r18,-1
     904:	10000d16 	blt	r2,zero,93c <_fwalk_reent+0x84>
     908:	0023883a 	mov	r17,zero
     90c:	053fffc4 	movi	r20,-1
     910:	8080030f 	ldh	r2,12(r16)
     914:	8c400044 	addi	r17,r17,1
     918:	10000626 	beq	r2,zero,934 <_fwalk_reent+0x7c>
     91c:	8080038f 	ldh	r2,14(r16)
     920:	800b883a 	mov	r5,r16
     924:	a809883a 	mov	r4,r21
     928:	15000226 	beq	r2,r20,934 <_fwalk_reent+0x7c>
     92c:	b03ee83a 	callr	r22
     930:	b8aeb03a 	or	r23,r23,r2
     934:	84001704 	addi	r16,r16,92
     938:	947ff51e 	bne	r18,r17,910 <_fwalk_reent+0x58>
     93c:	9cc00017 	ldw	r19,0(r19)
     940:	983fed1e 	bne	r19,zero,8f8 <_fwalk_reent+0x40>
     944:	00006540 	call	654 <__sfp_lock_release>
     948:	b805883a 	mov	r2,r23
     94c:	dfc00817 	ldw	ra,32(sp)
     950:	ddc00717 	ldw	r23,28(sp)
     954:	dd800617 	ldw	r22,24(sp)
     958:	dd400517 	ldw	r21,20(sp)
     95c:	dd000417 	ldw	r20,16(sp)
     960:	dcc00317 	ldw	r19,12(sp)
     964:	dc800217 	ldw	r18,8(sp)
     968:	dc400117 	ldw	r17,4(sp)
     96c:	dc000017 	ldw	r16,0(sp)
     970:	dec00904 	addi	sp,sp,36
     974:	f800283a 	ret
     978:	002f883a 	mov	r23,zero
     97c:	003ff106 	br	944 <_fwalk_reent+0x8c>

00000980 <_fwalk>:
     980:	defff804 	addi	sp,sp,-32
     984:	dcc00315 	stw	r19,12(sp)
     988:	24c0b804 	addi	r19,r4,736
     98c:	dd400515 	stw	r21,20(sp)
     990:	dfc00715 	stw	ra,28(sp)
     994:	dd800615 	stw	r22,24(sp)
     998:	dd000415 	stw	r20,16(sp)
     99c:	dc800215 	stw	r18,8(sp)
     9a0:	dc400115 	stw	r17,4(sp)
     9a4:	dc000015 	stw	r16,0(sp)
     9a8:	282b883a 	mov	r21,r5
     9ac:	00006500 	call	650 <__sfp_lock_acquire>
     9b0:	98001f26 	beq	r19,zero,a30 <_fwalk+0xb0>
     9b4:	002d883a 	mov	r22,zero
     9b8:	9c800117 	ldw	r18,4(r19)
     9bc:	9c000217 	ldw	r16,8(r19)
     9c0:	90bfffc4 	addi	r2,r18,-1
     9c4:	10000c16 	blt	r2,zero,9f8 <_fwalk+0x78>
     9c8:	0023883a 	mov	r17,zero
     9cc:	053fffc4 	movi	r20,-1
     9d0:	8080030f 	ldh	r2,12(r16)
     9d4:	8c400044 	addi	r17,r17,1
     9d8:	10000526 	beq	r2,zero,9f0 <_fwalk+0x70>
     9dc:	8080038f 	ldh	r2,14(r16)
     9e0:	8009883a 	mov	r4,r16
     9e4:	15000226 	beq	r2,r20,9f0 <_fwalk+0x70>
     9e8:	a83ee83a 	callr	r21
     9ec:	b0acb03a 	or	r22,r22,r2
     9f0:	84001704 	addi	r16,r16,92
     9f4:	947ff61e 	bne	r18,r17,9d0 <_fwalk+0x50>
     9f8:	9cc00017 	ldw	r19,0(r19)
     9fc:	983fee1e 	bne	r19,zero,9b8 <_fwalk+0x38>
     a00:	00006540 	call	654 <__sfp_lock_release>
     a04:	b005883a 	mov	r2,r22
     a08:	dfc00717 	ldw	ra,28(sp)
     a0c:	dd800617 	ldw	r22,24(sp)
     a10:	dd400517 	ldw	r21,20(sp)
     a14:	dd000417 	ldw	r20,16(sp)
     a18:	dcc00317 	ldw	r19,12(sp)
     a1c:	dc800217 	ldw	r18,8(sp)
     a20:	dc400117 	ldw	r17,4(sp)
     a24:	dc000017 	ldw	r16,0(sp)
     a28:	dec00804 	addi	sp,sp,32
     a2c:	f800283a 	ret
     a30:	002d883a 	mov	r22,zero
     a34:	003ff206 	br	a00 <_fwalk+0x80>

00000a38 <_malloc_r>:
     a38:	defff604 	addi	sp,sp,-40
     a3c:	28c002c4 	addi	r3,r5,11
     a40:	00800584 	movi	r2,22
     a44:	dc800215 	stw	r18,8(sp)
     a48:	dfc00915 	stw	ra,36(sp)
     a4c:	df000815 	stw	fp,32(sp)
     a50:	ddc00715 	stw	r23,28(sp)
     a54:	dd800615 	stw	r22,24(sp)
     a58:	dd400515 	stw	r21,20(sp)
     a5c:	dd000415 	stw	r20,16(sp)
     a60:	dcc00315 	stw	r19,12(sp)
     a64:	dc400115 	stw	r17,4(sp)
     a68:	dc000015 	stw	r16,0(sp)
     a6c:	2025883a 	mov	r18,r4
     a70:	10c01236 	bltu	r2,r3,abc <_malloc_r+0x84>
     a74:	04400404 	movi	r17,16
     a78:	8940142e 	bgeu	r17,r5,acc <_malloc_r+0x94>
     a7c:	00800304 	movi	r2,12
     a80:	0007883a 	mov	r3,zero
     a84:	90800015 	stw	r2,0(r18)
     a88:	1805883a 	mov	r2,r3
     a8c:	dfc00917 	ldw	ra,36(sp)
     a90:	df000817 	ldw	fp,32(sp)
     a94:	ddc00717 	ldw	r23,28(sp)
     a98:	dd800617 	ldw	r22,24(sp)
     a9c:	dd400517 	ldw	r21,20(sp)
     aa0:	dd000417 	ldw	r20,16(sp)
     aa4:	dcc00317 	ldw	r19,12(sp)
     aa8:	dc800217 	ldw	r18,8(sp)
     aac:	dc400117 	ldw	r17,4(sp)
     ab0:	dc000017 	ldw	r16,0(sp)
     ab4:	dec00a04 	addi	sp,sp,40
     ab8:	f800283a 	ret
     abc:	00bffe04 	movi	r2,-8
     ac0:	18a2703a 	and	r17,r3,r2
     ac4:	883fed16 	blt	r17,zero,a7c <_malloc_r+0x44>
     ac8:	897fec36 	bltu	r17,r5,a7c <_malloc_r+0x44>
     acc:	9009883a 	mov	r4,r18
     ad0:	000f8f00 	call	f8f0 <__malloc_lock>
     ad4:	00807dc4 	movi	r2,503
     ad8:	14402b2e 	bgeu	r2,r17,b88 <_malloc_r+0x150>
     adc:	8806d27a 	srli	r3,r17,9
     ae0:	18003f1e 	bne	r3,zero,be0 <_malloc_r+0x1a8>
     ae4:	880cd0fa 	srli	r6,r17,3
     ae8:	300490fa 	slli	r2,r6,3
     aec:	02c00074 	movhi	r11,1
     af0:	5ac9d604 	addi	r11,r11,10072
     af4:	12cb883a 	add	r5,r2,r11
     af8:	2c000317 	ldw	r16,12(r5)
     afc:	580f883a 	mov	r7,r11
     b00:	2c00041e 	bne	r5,r16,b14 <_malloc_r+0xdc>
     b04:	00000a06 	br	b30 <_malloc_r+0xf8>
     b08:	1800860e 	bge	r3,zero,d24 <_malloc_r+0x2ec>
     b0c:	84000317 	ldw	r16,12(r16)
     b10:	2c000726 	beq	r5,r16,b30 <_malloc_r+0xf8>
     b14:	80800117 	ldw	r2,4(r16)
     b18:	00ffff04 	movi	r3,-4
     b1c:	10c8703a 	and	r4,r2,r3
     b20:	2447c83a 	sub	r3,r4,r17
     b24:	008003c4 	movi	r2,15
     b28:	10fff70e 	bge	r2,r3,b08 <_malloc_r+0xd0>
     b2c:	31bfffc4 	addi	r6,r6,-1
     b30:	32400044 	addi	r9,r6,1
     b34:	02800074 	movhi	r10,1
     b38:	5289d804 	addi	r10,r10,10080
     b3c:	54000217 	ldw	r16,8(r10)
     b40:	8280a026 	beq	r16,r10,dc4 <_malloc_r+0x38c>
     b44:	80800117 	ldw	r2,4(r16)
     b48:	00ffff04 	movi	r3,-4
     b4c:	10ca703a 	and	r5,r2,r3
     b50:	2c4dc83a 	sub	r6,r5,r17
     b54:	008003c4 	movi	r2,15
     b58:	11808316 	blt	r2,r6,d68 <_malloc_r+0x330>
     b5c:	52800315 	stw	r10,12(r10)
     b60:	52800215 	stw	r10,8(r10)
     b64:	30002916 	blt	r6,zero,c0c <_malloc_r+0x1d4>
     b68:	8147883a 	add	r3,r16,r5
     b6c:	18800117 	ldw	r2,4(r3)
     b70:	9009883a 	mov	r4,r18
     b74:	10800054 	ori	r2,r2,1
     b78:	18800115 	stw	r2,4(r3)
     b7c:	000f9100 	call	f910 <__malloc_unlock>
     b80:	80c00204 	addi	r3,r16,8
     b84:	003fc006 	br	a88 <_malloc_r+0x50>
     b88:	02c00074 	movhi	r11,1
     b8c:	5ac9d604 	addi	r11,r11,10072
     b90:	8ac5883a 	add	r2,r17,r11
     b94:	14000317 	ldw	r16,12(r2)
     b98:	580f883a 	mov	r7,r11
     b9c:	8806d0fa 	srli	r3,r17,3
     ba0:	14006c26 	beq	r2,r16,d54 <_malloc_r+0x31c>
     ba4:	80c00117 	ldw	r3,4(r16)
     ba8:	00bfff04 	movi	r2,-4
     bac:	81800317 	ldw	r6,12(r16)
     bb0:	1886703a 	and	r3,r3,r2
     bb4:	80c7883a 	add	r3,r16,r3
     bb8:	18800117 	ldw	r2,4(r3)
     bbc:	81400217 	ldw	r5,8(r16)
     bc0:	9009883a 	mov	r4,r18
     bc4:	10800054 	ori	r2,r2,1
     bc8:	18800115 	stw	r2,4(r3)
     bcc:	31400215 	stw	r5,8(r6)
     bd0:	29800315 	stw	r6,12(r5)
     bd4:	000f9100 	call	f910 <__malloc_unlock>
     bd8:	80c00204 	addi	r3,r16,8
     bdc:	003faa06 	br	a88 <_malloc_r+0x50>
     be0:	00800104 	movi	r2,4
     be4:	10c0052e 	bgeu	r2,r3,bfc <_malloc_r+0x1c4>
     be8:	00800504 	movi	r2,20
     bec:	10c07836 	bltu	r2,r3,dd0 <_malloc_r+0x398>
     bf0:	198016c4 	addi	r6,r3,91
     bf4:	300490fa 	slli	r2,r6,3
     bf8:	003fbc06 	br	aec <_malloc_r+0xb4>
     bfc:	8804d1ba 	srli	r2,r17,6
     c00:	11800e04 	addi	r6,r2,56
     c04:	300490fa 	slli	r2,r6,3
     c08:	003fb806 	br	aec <_malloc_r+0xb4>
     c0c:	00807fc4 	movi	r2,511
     c10:	1140bb36 	bltu	r2,r5,f00 <_malloc_r+0x4c8>
     c14:	2806d0fa 	srli	r3,r5,3
     c18:	573ffe04 	addi	fp,r10,-8
     c1c:	00800044 	movi	r2,1
     c20:	180890fa 	slli	r4,r3,3
     c24:	1807d0ba 	srai	r3,r3,2
     c28:	e1c00117 	ldw	r7,4(fp)
     c2c:	5909883a 	add	r4,r11,r4
     c30:	21400217 	ldw	r5,8(r4)
     c34:	10c4983a 	sll	r2,r2,r3
     c38:	81000315 	stw	r4,12(r16)
     c3c:	81400215 	stw	r5,8(r16)
     c40:	388eb03a 	or	r7,r7,r2
     c44:	2c000315 	stw	r16,12(r5)
     c48:	24000215 	stw	r16,8(r4)
     c4c:	e1c00115 	stw	r7,4(fp)
     c50:	4807883a 	mov	r3,r9
     c54:	4800cd16 	blt	r9,zero,f8c <_malloc_r+0x554>
     c58:	1807d0ba 	srai	r3,r3,2
     c5c:	00800044 	movi	r2,1
     c60:	10c8983a 	sll	r4,r2,r3
     c64:	39004436 	bltu	r7,r4,d78 <_malloc_r+0x340>
     c68:	21c4703a 	and	r2,r4,r7
     c6c:	10000a1e 	bne	r2,zero,c98 <_malloc_r+0x260>
     c70:	2109883a 	add	r4,r4,r4
     c74:	00bfff04 	movi	r2,-4
     c78:	4884703a 	and	r2,r9,r2
     c7c:	3906703a 	and	r3,r7,r4
     c80:	12400104 	addi	r9,r2,4
     c84:	1800041e 	bne	r3,zero,c98 <_malloc_r+0x260>
     c88:	2109883a 	add	r4,r4,r4
     c8c:	3904703a 	and	r2,r7,r4
     c90:	4a400104 	addi	r9,r9,4
     c94:	103ffc26 	beq	r2,zero,c88 <_malloc_r+0x250>
     c98:	480490fa 	slli	r2,r9,3
     c9c:	4819883a 	mov	r12,r9
     ca0:	023fff04 	movi	r8,-4
     ca4:	589b883a 	add	r13,r11,r2
     ca8:	6807883a 	mov	r3,r13
     cac:	014003c4 	movi	r5,15
     cb0:	1c000317 	ldw	r16,12(r3)
     cb4:	1c00041e 	bne	r3,r16,cc8 <_malloc_r+0x290>
     cb8:	0000a706 	br	f58 <_malloc_r+0x520>
     cbc:	3000ab0e 	bge	r6,zero,f6c <_malloc_r+0x534>
     cc0:	84000317 	ldw	r16,12(r16)
     cc4:	1c00a426 	beq	r3,r16,f58 <_malloc_r+0x520>
     cc8:	80800117 	ldw	r2,4(r16)
     ccc:	1204703a 	and	r2,r2,r8
     cd0:	144dc83a 	sub	r6,r2,r17
     cd4:	29bff90e 	bge	r5,r6,cbc <_malloc_r+0x284>
     cd8:	81000317 	ldw	r4,12(r16)
     cdc:	80c00217 	ldw	r3,8(r16)
     ce0:	89400054 	ori	r5,r17,1
     ce4:	8445883a 	add	r2,r16,r17
     ce8:	20c00215 	stw	r3,8(r4)
     cec:	19000315 	stw	r4,12(r3)
     cf0:	81400115 	stw	r5,4(r16)
     cf4:	1187883a 	add	r3,r2,r6
     cf8:	31000054 	ori	r4,r6,1
     cfc:	50800315 	stw	r2,12(r10)
     d00:	50800215 	stw	r2,8(r10)
     d04:	19800015 	stw	r6,0(r3)
     d08:	11000115 	stw	r4,4(r2)
     d0c:	12800215 	stw	r10,8(r2)
     d10:	12800315 	stw	r10,12(r2)
     d14:	9009883a 	mov	r4,r18
     d18:	000f9100 	call	f910 <__malloc_unlock>
     d1c:	80c00204 	addi	r3,r16,8
     d20:	003f5906 	br	a88 <_malloc_r+0x50>
     d24:	8109883a 	add	r4,r16,r4
     d28:	20800117 	ldw	r2,4(r4)
     d2c:	80c00217 	ldw	r3,8(r16)
     d30:	81400317 	ldw	r5,12(r16)
     d34:	10800054 	ori	r2,r2,1
     d38:	20800115 	stw	r2,4(r4)
     d3c:	28c00215 	stw	r3,8(r5)
     d40:	19400315 	stw	r5,12(r3)
     d44:	9009883a 	mov	r4,r18
     d48:	000f9100 	call	f910 <__malloc_unlock>
     d4c:	80c00204 	addi	r3,r16,8
     d50:	003f4d06 	br	a88 <_malloc_r+0x50>
     d54:	80800204 	addi	r2,r16,8
     d58:	14000317 	ldw	r16,12(r2)
     d5c:	143f911e 	bne	r2,r16,ba4 <_malloc_r+0x16c>
     d60:	1a400084 	addi	r9,r3,2
     d64:	003f7306 	br	b34 <_malloc_r+0xfc>
     d68:	88c00054 	ori	r3,r17,1
     d6c:	8445883a 	add	r2,r16,r17
     d70:	80c00115 	stw	r3,4(r16)
     d74:	003fdf06 	br	cf4 <_malloc_r+0x2bc>
     d78:	e4000217 	ldw	r16,8(fp)
     d7c:	00bfff04 	movi	r2,-4
     d80:	80c00117 	ldw	r3,4(r16)
     d84:	802d883a 	mov	r22,r16
     d88:	18aa703a 	and	r21,r3,r2
     d8c:	ac401636 	bltu	r21,r17,de8 <_malloc_r+0x3b0>
     d90:	ac49c83a 	sub	r4,r21,r17
     d94:	008003c4 	movi	r2,15
     d98:	1100130e 	bge	r2,r4,de8 <_malloc_r+0x3b0>
     d9c:	88800054 	ori	r2,r17,1
     da0:	8447883a 	add	r3,r16,r17
     da4:	80800115 	stw	r2,4(r16)
     da8:	20800054 	ori	r2,r4,1
     dac:	18800115 	stw	r2,4(r3)
     db0:	e0c00215 	stw	r3,8(fp)
     db4:	9009883a 	mov	r4,r18
     db8:	000f9100 	call	f910 <__malloc_unlock>
     dbc:	80c00204 	addi	r3,r16,8
     dc0:	003f3106 	br	a88 <_malloc_r+0x50>
     dc4:	39c00117 	ldw	r7,4(r7)
     dc8:	573ffe04 	addi	fp,r10,-8
     dcc:	003fa006 	br	c50 <_malloc_r+0x218>
     dd0:	00801504 	movi	r2,84
     dd4:	10c06736 	bltu	r2,r3,f74 <_malloc_r+0x53c>
     dd8:	8804d33a 	srli	r2,r17,12
     ddc:	11801b84 	addi	r6,r2,110
     de0:	300490fa 	slli	r2,r6,3
     de4:	003f4106 	br	aec <_malloc_r+0xb4>
     de8:	d0a6b317 	ldw	r2,-25908(gp)
     dec:	d0e00317 	ldw	r3,-32756(gp)
     df0:	053fffc4 	movi	r20,-1
     df4:	10800404 	addi	r2,r2,16
     df8:	88a7883a 	add	r19,r17,r2
     dfc:	1d000326 	beq	r3,r20,e0c <_malloc_r+0x3d4>
     e00:	98c3ffc4 	addi	r3,r19,4095
     e04:	00bc0004 	movi	r2,-4096
     e08:	18a6703a 	and	r19,r3,r2
     e0c:	9009883a 	mov	r4,r18
     e10:	980b883a 	mov	r5,r19
     e14:	00016280 	call	1628 <_sbrk_r>
     e18:	1009883a 	mov	r4,r2
     e1c:	15000426 	beq	r2,r20,e30 <_malloc_r+0x3f8>
     e20:	854b883a 	add	r5,r16,r21
     e24:	1029883a 	mov	r20,r2
     e28:	11405a2e 	bgeu	r2,r5,f94 <_malloc_r+0x55c>
     e2c:	87000c26 	beq	r16,fp,e60 <_malloc_r+0x428>
     e30:	e4000217 	ldw	r16,8(fp)
     e34:	80c00117 	ldw	r3,4(r16)
     e38:	00bfff04 	movi	r2,-4
     e3c:	1884703a 	and	r2,r3,r2
     e40:	14400336 	bltu	r2,r17,e50 <_malloc_r+0x418>
     e44:	1449c83a 	sub	r4,r2,r17
     e48:	008003c4 	movi	r2,15
     e4c:	113fd316 	blt	r2,r4,d9c <_malloc_r+0x364>
     e50:	9009883a 	mov	r4,r18
     e54:	000f9100 	call	f910 <__malloc_unlock>
     e58:	0007883a 	mov	r3,zero
     e5c:	003f0a06 	br	a88 <_malloc_r+0x50>
     e60:	05c00074 	movhi	r23,1
     e64:	bdd62704 	addi	r23,r23,22684
     e68:	b8800017 	ldw	r2,0(r23)
     e6c:	988d883a 	add	r6,r19,r2
     e70:	b9800015 	stw	r6,0(r23)
     e74:	d0e00317 	ldw	r3,-32756(gp)
     e78:	00bfffc4 	movi	r2,-1
     e7c:	18808e26 	beq	r3,r2,10b8 <_malloc_r+0x680>
     e80:	2145c83a 	sub	r2,r4,r5
     e84:	3085883a 	add	r2,r6,r2
     e88:	b8800015 	stw	r2,0(r23)
     e8c:	20c001cc 	andi	r3,r4,7
     e90:	18005f1e 	bne	r3,zero,1010 <_malloc_r+0x5d8>
     e94:	000b883a 	mov	r5,zero
     e98:	a4c5883a 	add	r2,r20,r19
     e9c:	1083ffcc 	andi	r2,r2,4095
     ea0:	00c40004 	movi	r3,4096
     ea4:	1887c83a 	sub	r3,r3,r2
     ea8:	28e7883a 	add	r19,r5,r3
     eac:	9009883a 	mov	r4,r18
     eb0:	980b883a 	mov	r5,r19
     eb4:	00016280 	call	1628 <_sbrk_r>
     eb8:	1007883a 	mov	r3,r2
     ebc:	00bfffc4 	movi	r2,-1
     ec0:	18807a26 	beq	r3,r2,10ac <_malloc_r+0x674>
     ec4:	1d05c83a 	sub	r2,r3,r20
     ec8:	9885883a 	add	r2,r19,r2
     ecc:	10c00054 	ori	r3,r2,1
     ed0:	b8800017 	ldw	r2,0(r23)
     ed4:	a021883a 	mov	r16,r20
     ed8:	a0c00115 	stw	r3,4(r20)
     edc:	9885883a 	add	r2,r19,r2
     ee0:	b8800015 	stw	r2,0(r23)
     ee4:	e5000215 	stw	r20,8(fp)
     ee8:	b7003626 	beq	r22,fp,fc4 <_malloc_r+0x58c>
     eec:	018003c4 	movi	r6,15
     ef0:	35404b36 	bltu	r6,r21,1020 <_malloc_r+0x5e8>
     ef4:	00800044 	movi	r2,1
     ef8:	a0800115 	stw	r2,4(r20)
     efc:	003fcd06 	br	e34 <_malloc_r+0x3fc>
     f00:	2808d27a 	srli	r4,r5,9
     f04:	2000371e 	bne	r4,zero,fe4 <_malloc_r+0x5ac>
     f08:	2808d0fa 	srli	r4,r5,3
     f0c:	200690fa 	slli	r3,r4,3
     f10:	1ad1883a 	add	r8,r3,r11
     f14:	41800217 	ldw	r6,8(r8)
     f18:	41805b26 	beq	r8,r6,1088 <_malloc_r+0x650>
     f1c:	30800117 	ldw	r2,4(r6)
     f20:	00ffff04 	movi	r3,-4
     f24:	10c4703a 	and	r2,r2,r3
     f28:	2880022e 	bgeu	r5,r2,f34 <_malloc_r+0x4fc>
     f2c:	31800217 	ldw	r6,8(r6)
     f30:	41bffa1e 	bne	r8,r6,f1c <_malloc_r+0x4e4>
     f34:	32000317 	ldw	r8,12(r6)
     f38:	39c00117 	ldw	r7,4(r7)
     f3c:	82000315 	stw	r8,12(r16)
     f40:	81800215 	stw	r6,8(r16)
     f44:	07000074 	movhi	fp,1
     f48:	e709d604 	addi	fp,fp,10072
     f4c:	34000315 	stw	r16,12(r6)
     f50:	44000215 	stw	r16,8(r8)
     f54:	003f3e06 	br	c50 <_malloc_r+0x218>
     f58:	63000044 	addi	r12,r12,1
     f5c:	608000cc 	andi	r2,r12,3
     f60:	10005d26 	beq	r2,zero,10d8 <_malloc_r+0x6a0>
     f64:	18c00204 	addi	r3,r3,8
     f68:	003f5106 	br	cb0 <_malloc_r+0x278>
     f6c:	8089883a 	add	r4,r16,r2
     f70:	003f6d06 	br	d28 <_malloc_r+0x2f0>
     f74:	00805504 	movi	r2,340
     f78:	10c02036 	bltu	r2,r3,ffc <_malloc_r+0x5c4>
     f7c:	8804d3fa 	srli	r2,r17,15
     f80:	11801dc4 	addi	r6,r2,119
     f84:	300490fa 	slli	r2,r6,3
     f88:	003ed806 	br	aec <_malloc_r+0xb4>
     f8c:	48c000c4 	addi	r3,r9,3
     f90:	003f3106 	br	c58 <_malloc_r+0x220>
     f94:	05c00074 	movhi	r23,1
     f98:	bdd62704 	addi	r23,r23,22684
     f9c:	b8800017 	ldw	r2,0(r23)
     fa0:	988d883a 	add	r6,r19,r2
     fa4:	b9800015 	stw	r6,0(r23)
     fa8:	293fb21e 	bne	r5,r4,e74 <_malloc_r+0x43c>
     fac:	2083ffcc 	andi	r2,r4,4095
     fb0:	103fb01e 	bne	r2,zero,e74 <_malloc_r+0x43c>
     fb4:	e4000217 	ldw	r16,8(fp)
     fb8:	9d45883a 	add	r2,r19,r21
     fbc:	10800054 	ori	r2,r2,1
     fc0:	80800115 	stw	r2,4(r16)
     fc4:	b8c00017 	ldw	r3,0(r23)
     fc8:	d0a6b417 	ldw	r2,-25904(gp)
     fcc:	10c0012e 	bgeu	r2,r3,fd4 <_malloc_r+0x59c>
     fd0:	d0e6b415 	stw	r3,-25904(gp)
     fd4:	d0a6b517 	ldw	r2,-25900(gp)
     fd8:	10ff962e 	bgeu	r2,r3,e34 <_malloc_r+0x3fc>
     fdc:	d0e6b515 	stw	r3,-25900(gp)
     fe0:	003f9406 	br	e34 <_malloc_r+0x3fc>
     fe4:	00800104 	movi	r2,4
     fe8:	11001e36 	bltu	r2,r4,1064 <_malloc_r+0x62c>
     fec:	2804d1ba 	srli	r2,r5,6
     ff0:	11000e04 	addi	r4,r2,56
     ff4:	200690fa 	slli	r3,r4,3
     ff8:	003fc506 	br	f10 <_malloc_r+0x4d8>
     ffc:	00815504 	movi	r2,1364
    1000:	10c01d2e 	bgeu	r2,r3,1078 <_malloc_r+0x640>
    1004:	01801f84 	movi	r6,126
    1008:	0080fc04 	movi	r2,1008
    100c:	003eb706 	br	aec <_malloc_r+0xb4>
    1010:	00800204 	movi	r2,8
    1014:	10cbc83a 	sub	r5,r2,r3
    1018:	2169883a 	add	r20,r4,r5
    101c:	003f9e06 	br	e98 <_malloc_r+0x460>
    1020:	00bffe04 	movi	r2,-8
    1024:	a93ffd04 	addi	r4,r21,-12
    1028:	2088703a 	and	r4,r4,r2
    102c:	b10b883a 	add	r5,r22,r4
    1030:	00c00144 	movi	r3,5
    1034:	28c00215 	stw	r3,8(r5)
    1038:	28c00115 	stw	r3,4(r5)
    103c:	b0800117 	ldw	r2,4(r22)
    1040:	1080004c 	andi	r2,r2,1
    1044:	2084b03a 	or	r2,r4,r2
    1048:	b0800115 	stw	r2,4(r22)
    104c:	313fdd2e 	bgeu	r6,r4,fc4 <_malloc_r+0x58c>
    1050:	b1400204 	addi	r5,r22,8
    1054:	9009883a 	mov	r4,r18
    1058:	00039700 	call	3970 <_free_r>
    105c:	e4000217 	ldw	r16,8(fp)
    1060:	003fd806 	br	fc4 <_malloc_r+0x58c>
    1064:	00800504 	movi	r2,20
    1068:	11001536 	bltu	r2,r4,10c0 <_malloc_r+0x688>
    106c:	210016c4 	addi	r4,r4,91
    1070:	200690fa 	slli	r3,r4,3
    1074:	003fa606 	br	f10 <_malloc_r+0x4d8>
    1078:	8804d4ba 	srli	r2,r17,18
    107c:	11801f04 	addi	r6,r2,124
    1080:	300490fa 	slli	r2,r6,3
    1084:	003e9906 	br	aec <_malloc_r+0xb4>
    1088:	2009d0ba 	srai	r4,r4,2
    108c:	01400074 	movhi	r5,1
    1090:	2949d604 	addi	r5,r5,10072
    1094:	00c00044 	movi	r3,1
    1098:	28800117 	ldw	r2,4(r5)
    109c:	1906983a 	sll	r3,r3,r4
    10a0:	10c4b03a 	or	r2,r2,r3
    10a4:	28800115 	stw	r2,4(r5)
    10a8:	003fa306 	br	f38 <_malloc_r+0x500>
    10ac:	0027883a 	mov	r19,zero
    10b0:	00c00044 	movi	r3,1
    10b4:	003f8606 	br	ed0 <_malloc_r+0x498>
    10b8:	d1200315 	stw	r4,-32756(gp)
    10bc:	003f7306 	br	e8c <_malloc_r+0x454>
    10c0:	00801504 	movi	r2,84
    10c4:	11001936 	bltu	r2,r4,112c <_malloc_r+0x6f4>
    10c8:	2804d33a 	srli	r2,r5,12
    10cc:	11001b84 	addi	r4,r2,110
    10d0:	200690fa 	slli	r3,r4,3
    10d4:	003f8e06 	br	f10 <_malloc_r+0x4d8>
    10d8:	480b883a 	mov	r5,r9
    10dc:	6807883a 	mov	r3,r13
    10e0:	288000cc 	andi	r2,r5,3
    10e4:	18fffe04 	addi	r3,r3,-8
    10e8:	297fffc4 	addi	r5,r5,-1
    10ec:	10001526 	beq	r2,zero,1144 <_malloc_r+0x70c>
    10f0:	18800217 	ldw	r2,8(r3)
    10f4:	10fffa26 	beq	r2,r3,10e0 <_malloc_r+0x6a8>
    10f8:	2109883a 	add	r4,r4,r4
    10fc:	393f1e36 	bltu	r7,r4,d78 <_malloc_r+0x340>
    1100:	203f1d26 	beq	r4,zero,d78 <_malloc_r+0x340>
    1104:	21c4703a 	and	r2,r4,r7
    1108:	10000226 	beq	r2,zero,1114 <_malloc_r+0x6dc>
    110c:	6013883a 	mov	r9,r12
    1110:	003ee106 	br	c98 <_malloc_r+0x260>
    1114:	2109883a 	add	r4,r4,r4
    1118:	3904703a 	and	r2,r7,r4
    111c:	63000104 	addi	r12,r12,4
    1120:	103ffc26 	beq	r2,zero,1114 <_malloc_r+0x6dc>
    1124:	6013883a 	mov	r9,r12
    1128:	003edb06 	br	c98 <_malloc_r+0x260>
    112c:	00805504 	movi	r2,340
    1130:	11000836 	bltu	r2,r4,1154 <_malloc_r+0x71c>
    1134:	2804d3fa 	srli	r2,r5,15
    1138:	11001dc4 	addi	r4,r2,119
    113c:	200690fa 	slli	r3,r4,3
    1140:	003f7306 	br	f10 <_malloc_r+0x4d8>
    1144:	0104303a 	nor	r2,zero,r4
    1148:	388e703a 	and	r7,r7,r2
    114c:	e1c00115 	stw	r7,4(fp)
    1150:	003fe906 	br	10f8 <_malloc_r+0x6c0>
    1154:	00815504 	movi	r2,1364
    1158:	1100032e 	bgeu	r2,r4,1168 <_malloc_r+0x730>
    115c:	01001f84 	movi	r4,126
    1160:	00c0fc04 	movi	r3,1008
    1164:	003f6a06 	br	f10 <_malloc_r+0x4d8>
    1168:	2804d4ba 	srli	r2,r5,18
    116c:	11001f04 	addi	r4,r2,124
    1170:	200690fa 	slli	r3,r4,3
    1174:	003f6606 	br	f10 <_malloc_r+0x4d8>

00001178 <memchr>:
    1178:	008000c4 	movi	r2,3
    117c:	29403fcc 	andi	r5,r5,255
    1180:	2007883a 	mov	r3,r4
    1184:	1180022e 	bgeu	r2,r6,1190 <memchr+0x18>
    1188:	2084703a 	and	r2,r4,r2
    118c:	10000b26 	beq	r2,zero,11bc <memchr+0x44>
    1190:	313fffc4 	addi	r4,r6,-1
    1194:	3000051e 	bne	r6,zero,11ac <memchr+0x34>
    1198:	00002c06 	br	124c <memchr+0xd4>
    119c:	213fffc4 	addi	r4,r4,-1
    11a0:	00bfffc4 	movi	r2,-1
    11a4:	18c00044 	addi	r3,r3,1
    11a8:	20802826 	beq	r4,r2,124c <memchr+0xd4>
    11ac:	18800003 	ldbu	r2,0(r3)
    11b0:	28bffa1e 	bne	r5,r2,119c <memchr+0x24>
    11b4:	1805883a 	mov	r2,r3
    11b8:	f800283a 	ret
    11bc:	0011883a 	mov	r8,zero
    11c0:	0007883a 	mov	r3,zero
    11c4:	01c00104 	movi	r7,4
    11c8:	4004923a 	slli	r2,r8,8
    11cc:	18c00044 	addi	r3,r3,1
    11d0:	1151883a 	add	r8,r2,r5
    11d4:	19fffc1e 	bne	r3,r7,11c8 <memchr+0x50>
    11d8:	02bfbff4 	movhi	r10,65279
    11dc:	52bfbfc4 	addi	r10,r10,-257
    11e0:	02602074 	movhi	r9,32897
    11e4:	4a602004 	addi	r9,r9,-32640
    11e8:	02c000c4 	movi	r11,3
    11ec:	20800017 	ldw	r2,0(r4)
    11f0:	31bfff04 	addi	r6,r6,-4
    11f4:	200f883a 	mov	r7,r4
    11f8:	1204f03a 	xor	r2,r2,r8
    11fc:	1287883a 	add	r3,r2,r10
    1200:	1a46703a 	and	r3,r3,r9
    1204:	0084303a 	nor	r2,zero,r2
    1208:	10c4703a 	and	r2,r2,r3
    120c:	10000b26 	beq	r2,zero,123c <memchr+0xc4>
    1210:	20800003 	ldbu	r2,0(r4)
    1214:	28800f26 	beq	r5,r2,1254 <memchr+0xdc>
    1218:	20800043 	ldbu	r2,1(r4)
    121c:	21c00044 	addi	r7,r4,1
    1220:	28800c26 	beq	r5,r2,1254 <memchr+0xdc>
    1224:	20800083 	ldbu	r2,2(r4)
    1228:	21c00084 	addi	r7,r4,2
    122c:	28800926 	beq	r5,r2,1254 <memchr+0xdc>
    1230:	208000c3 	ldbu	r2,3(r4)
    1234:	21c000c4 	addi	r7,r4,3
    1238:	28800626 	beq	r5,r2,1254 <memchr+0xdc>
    123c:	21000104 	addi	r4,r4,4
    1240:	59bfea36 	bltu	r11,r6,11ec <memchr+0x74>
    1244:	2007883a 	mov	r3,r4
    1248:	003fd106 	br	1190 <memchr+0x18>
    124c:	0005883a 	mov	r2,zero
    1250:	f800283a 	ret
    1254:	3805883a 	mov	r2,r7
    1258:	f800283a 	ret

0000125c <memcpy>:
    125c:	01c003c4 	movi	r7,15
    1260:	2007883a 	mov	r3,r4
    1264:	3980032e 	bgeu	r7,r6,1274 <memcpy+0x18>
    1268:	2904b03a 	or	r2,r5,r4
    126c:	108000cc 	andi	r2,r2,3
    1270:	10000926 	beq	r2,zero,1298 <memcpy+0x3c>
    1274:	30000626 	beq	r6,zero,1290 <memcpy+0x34>
    1278:	30cd883a 	add	r6,r6,r3
    127c:	28800003 	ldbu	r2,0(r5)
    1280:	29400044 	addi	r5,r5,1
    1284:	18800005 	stb	r2,0(r3)
    1288:	18c00044 	addi	r3,r3,1
    128c:	30fffb1e 	bne	r6,r3,127c <memcpy+0x20>
    1290:	2005883a 	mov	r2,r4
    1294:	f800283a 	ret
    1298:	3811883a 	mov	r8,r7
    129c:	200f883a 	mov	r7,r4
    12a0:	28c00017 	ldw	r3,0(r5)
    12a4:	31bffc04 	addi	r6,r6,-16
    12a8:	38c00015 	stw	r3,0(r7)
    12ac:	28800117 	ldw	r2,4(r5)
    12b0:	38800115 	stw	r2,4(r7)
    12b4:	28c00217 	ldw	r3,8(r5)
    12b8:	38c00215 	stw	r3,8(r7)
    12bc:	28800317 	ldw	r2,12(r5)
    12c0:	29400404 	addi	r5,r5,16
    12c4:	38800315 	stw	r2,12(r7)
    12c8:	39c00404 	addi	r7,r7,16
    12cc:	41bff436 	bltu	r8,r6,12a0 <memcpy+0x44>
    12d0:	008000c4 	movi	r2,3
    12d4:	1180072e 	bgeu	r2,r6,12f4 <memcpy+0x98>
    12d8:	1007883a 	mov	r3,r2
    12dc:	28800017 	ldw	r2,0(r5)
    12e0:	31bfff04 	addi	r6,r6,-4
    12e4:	29400104 	addi	r5,r5,4
    12e8:	38800015 	stw	r2,0(r7)
    12ec:	39c00104 	addi	r7,r7,4
    12f0:	19bffa36 	bltu	r3,r6,12dc <memcpy+0x80>
    12f4:	3807883a 	mov	r3,r7
    12f8:	003fde06 	br	1274 <memcpy+0x18>

000012fc <memset>:
    12fc:	008000c4 	movi	r2,3
    1300:	29403fcc 	andi	r5,r5,255
    1304:	2007883a 	mov	r3,r4
    1308:	1180022e 	bgeu	r2,r6,1314 <memset+0x18>
    130c:	2084703a 	and	r2,r4,r2
    1310:	10000826 	beq	r2,zero,1334 <memset+0x38>
    1314:	30000526 	beq	r6,zero,132c <memset+0x30>
    1318:	2805883a 	mov	r2,r5
    131c:	30cd883a 	add	r6,r6,r3
    1320:	18800005 	stb	r2,0(r3)
    1324:	18c00044 	addi	r3,r3,1
    1328:	19bffd1e 	bne	r3,r6,1320 <memset+0x24>
    132c:	2005883a 	mov	r2,r4
    1330:	f800283a 	ret
    1334:	2804923a 	slli	r2,r5,8
    1338:	020003c4 	movi	r8,15
    133c:	200f883a 	mov	r7,r4
    1340:	2884b03a 	or	r2,r5,r2
    1344:	1006943a 	slli	r3,r2,16
    1348:	10c6b03a 	or	r3,r2,r3
    134c:	41800a2e 	bgeu	r8,r6,1378 <memset+0x7c>
    1350:	4005883a 	mov	r2,r8
    1354:	31bffc04 	addi	r6,r6,-16
    1358:	38c00015 	stw	r3,0(r7)
    135c:	38c00115 	stw	r3,4(r7)
    1360:	38c00215 	stw	r3,8(r7)
    1364:	38c00315 	stw	r3,12(r7)
    1368:	39c00404 	addi	r7,r7,16
    136c:	11bff936 	bltu	r2,r6,1354 <memset+0x58>
    1370:	008000c4 	movi	r2,3
    1374:	1180052e 	bgeu	r2,r6,138c <memset+0x90>
    1378:	31bfff04 	addi	r6,r6,-4
    137c:	008000c4 	movi	r2,3
    1380:	38c00015 	stw	r3,0(r7)
    1384:	39c00104 	addi	r7,r7,4
    1388:	11bffb36 	bltu	r2,r6,1378 <memset+0x7c>
    138c:	3807883a 	mov	r3,r7
    1390:	003fe006 	br	1314 <memset+0x18>

00001394 <_puts_r>:
    1394:	defff604 	addi	sp,sp,-40
    1398:	dc400715 	stw	r17,28(sp)
    139c:	2023883a 	mov	r17,r4
    13a0:	2809883a 	mov	r4,r5
    13a4:	dfc00915 	stw	ra,36(sp)
    13a8:	dcc00815 	stw	r19,32(sp)
    13ac:	2827883a 	mov	r19,r5
    13b0:	00019d80 	call	19d8 <strlen>
    13b4:	89400217 	ldw	r5,8(r17)
    13b8:	00c00074 	movhi	r3,1
    13bc:	18c74604 	addi	r3,r3,7448
    13c0:	01c00044 	movi	r7,1
    13c4:	12000044 	addi	r8,r2,1
    13c8:	d8c00515 	stw	r3,20(sp)
    13cc:	d9c00615 	stw	r7,24(sp)
    13d0:	d8c00304 	addi	r3,sp,12
    13d4:	01c00084 	movi	r7,2
    13d8:	8809883a 	mov	r4,r17
    13dc:	d80d883a 	mov	r6,sp
    13e0:	d8c00015 	stw	r3,0(sp)
    13e4:	dcc00315 	stw	r19,12(sp)
    13e8:	da000215 	stw	r8,8(sp)
    13ec:	d9c00115 	stw	r7,4(sp)
    13f0:	d8800415 	stw	r2,16(sp)
    13f4:	0003c840 	call	3c84 <__sfvwrite_r>
    13f8:	00ffffc4 	movi	r3,-1
    13fc:	10000626 	beq	r2,zero,1418 <_puts_r+0x84>
    1400:	1805883a 	mov	r2,r3
    1404:	dfc00917 	ldw	ra,36(sp)
    1408:	dcc00817 	ldw	r19,32(sp)
    140c:	dc400717 	ldw	r17,28(sp)
    1410:	dec00a04 	addi	sp,sp,40
    1414:	f800283a 	ret
    1418:	00c00284 	movi	r3,10
    141c:	1805883a 	mov	r2,r3
    1420:	dfc00917 	ldw	ra,36(sp)
    1424:	dcc00817 	ldw	r19,32(sp)
    1428:	dc400717 	ldw	r17,28(sp)
    142c:	dec00a04 	addi	sp,sp,40
    1430:	f800283a 	ret

00001434 <puts>:
    1434:	00800074 	movhi	r2,1
    1438:	108f6704 	addi	r2,r2,15772
    143c:	200b883a 	mov	r5,r4
    1440:	11000017 	ldw	r4,0(r2)
    1444:	00013941 	jmpi	1394 <_puts_r>

00001448 <__srefill_r>:
    1448:	defffd04 	addi	sp,sp,-12
    144c:	dc400115 	stw	r17,4(sp)
    1450:	dc000015 	stw	r16,0(sp)
    1454:	dfc00215 	stw	ra,8(sp)
    1458:	2023883a 	mov	r17,r4
    145c:	2821883a 	mov	r16,r5
    1460:	20000226 	beq	r4,zero,146c <__srefill_r+0x24>
    1464:	20800e17 	ldw	r2,56(r4)
    1468:	10004126 	beq	r2,zero,1570 <__srefill_r+0x128>
    146c:	80c0030b 	ldhu	r3,12(r16)
    1470:	80000115 	stw	zero,4(r16)
    1474:	1880080c 	andi	r2,r3,32
    1478:	1000361e 	bne	r2,zero,1554 <__srefill_r+0x10c>
    147c:	1880010c 	andi	r2,r3,4
    1480:	1000211e 	bne	r2,zero,1508 <__srefill_r+0xc0>
    1484:	1880040c 	andi	r2,r3,16
    1488:	10005026 	beq	r2,zero,15cc <__srefill_r+0x184>
    148c:	1880020c 	andi	r2,r3,8
    1490:	1000541e 	bne	r2,zero,15e4 <__srefill_r+0x19c>
    1494:	8080030b 	ldhu	r2,12(r16)
    1498:	10800114 	ori	r2,r2,4
    149c:	8080030d 	sth	r2,12(r16)
    14a0:	80800417 	ldw	r2,16(r16)
    14a4:	10004526 	beq	r2,zero,15bc <__srefill_r+0x174>
    14a8:	8080030b 	ldhu	r2,12(r16)
    14ac:	108000cc 	andi	r2,r2,3
    14b0:	1000361e 	bne	r2,zero,158c <__srefill_r+0x144>
    14b4:	81800417 	ldw	r6,16(r16)
    14b8:	80c00817 	ldw	r3,32(r16)
    14bc:	81400717 	ldw	r5,28(r16)
    14c0:	81c00517 	ldw	r7,20(r16)
    14c4:	8809883a 	mov	r4,r17
    14c8:	81800015 	stw	r6,0(r16)
    14cc:	183ee83a 	callr	r3
    14d0:	80c0030b 	ldhu	r3,12(r16)
    14d4:	1009883a 	mov	r4,r2
    14d8:	80800115 	stw	r2,4(r16)
    14dc:	00b7ffc4 	movi	r2,-8193
    14e0:	1884703a 	and	r2,r3,r2
    14e4:	8080030d 	sth	r2,12(r16)
    14e8:	0100230e 	bge	zero,r4,1578 <__srefill_r+0x130>
    14ec:	0009883a 	mov	r4,zero
    14f0:	2005883a 	mov	r2,r4
    14f4:	dfc00217 	ldw	ra,8(sp)
    14f8:	dc400117 	ldw	r17,4(sp)
    14fc:	dc000017 	ldw	r16,0(sp)
    1500:	dec00304 	addi	sp,sp,12
    1504:	f800283a 	ret
    1508:	81400c17 	ldw	r5,48(r16)
    150c:	283fe426 	beq	r5,zero,14a0 <__srefill_r+0x58>
    1510:	80801004 	addi	r2,r16,64
    1514:	28800226 	beq	r5,r2,1520 <__srefill_r+0xd8>
    1518:	8809883a 	mov	r4,r17
    151c:	00039700 	call	3970 <_free_r>
    1520:	80800f17 	ldw	r2,60(r16)
    1524:	80000c15 	stw	zero,48(r16)
    1528:	80800115 	stw	r2,4(r16)
    152c:	103fdc26 	beq	r2,zero,14a0 <__srefill_r+0x58>
    1530:	80800e17 	ldw	r2,56(r16)
    1534:	0009883a 	mov	r4,zero
    1538:	80800015 	stw	r2,0(r16)
    153c:	2005883a 	mov	r2,r4
    1540:	dfc00217 	ldw	ra,8(sp)
    1544:	dc400117 	ldw	r17,4(sp)
    1548:	dc000017 	ldw	r16,0(sp)
    154c:	dec00304 	addi	sp,sp,12
    1550:	f800283a 	ret
    1554:	013fffc4 	movi	r4,-1
    1558:	2005883a 	mov	r2,r4
    155c:	dfc00217 	ldw	ra,8(sp)
    1560:	dc400117 	ldw	r17,4(sp)
    1564:	dc000017 	ldw	r16,0(sp)
    1568:	dec00304 	addi	sp,sp,12
    156c:	f800283a 	ret
    1570:	00006600 	call	660 <__sinit>
    1574:	003fbd06 	br	146c <__srefill_r+0x24>
    1578:	20000b1e 	bne	r4,zero,15a8 <__srefill_r+0x160>
    157c:	10800814 	ori	r2,r2,32
    1580:	013fffc4 	movi	r4,-1
    1584:	8080030d 	sth	r2,12(r16)
    1588:	003fd906 	br	14f0 <__srefill_r+0xa8>
    158c:	00800074 	movhi	r2,1
    1590:	108f6804 	addi	r2,r2,15776
    1594:	11000017 	ldw	r4,0(r2)
    1598:	01400034 	movhi	r5,0
    159c:	29458304 	addi	r5,r5,5644
    15a0:	00009800 	call	980 <_fwalk>
    15a4:	003fc306 	br	14b4 <__srefill_r+0x6c>
    15a8:	10801014 	ori	r2,r2,64
    15ac:	013fffc4 	movi	r4,-1
    15b0:	8080030d 	sth	r2,12(r16)
    15b4:	80000115 	stw	zero,4(r16)
    15b8:	003fcd06 	br	14f0 <__srefill_r+0xa8>
    15bc:	8809883a 	mov	r4,r17
    15c0:	800b883a 	mov	r5,r16
    15c4:	00042880 	call	4288 <__smakebuf_r>
    15c8:	003fb706 	br	14a8 <__srefill_r+0x60>
    15cc:	18c01014 	ori	r3,r3,64
    15d0:	00800244 	movi	r2,9
    15d4:	013fffc4 	movi	r4,-1
    15d8:	88800015 	stw	r2,0(r17)
    15dc:	80c0030d 	sth	r3,12(r16)
    15e0:	003fc306 	br	14f0 <__srefill_r+0xa8>
    15e4:	8809883a 	mov	r4,r17
    15e8:	800b883a 	mov	r5,r16
    15ec:	00033d80 	call	33d8 <_fflush_r>
    15f0:	103fd81e 	bne	r2,zero,1554 <__srefill_r+0x10c>
    15f4:	8080030b 	ldhu	r2,12(r16)
    15f8:	80000215 	stw	zero,8(r16)
    15fc:	80000615 	stw	zero,24(r16)
    1600:	10bffdcc 	andi	r2,r2,65527
    1604:	8080030d 	sth	r2,12(r16)
    1608:	003fa206 	br	1494 <__srefill_r+0x4c>

0000160c <lflush>:
    160c:	20c0030b 	ldhu	r3,12(r4)
    1610:	01400244 	movi	r5,9
    1614:	0005883a 	mov	r2,zero
    1618:	18c0024c 	andi	r3,r3,9
    161c:	19400126 	beq	r3,r5,1624 <lflush+0x18>
    1620:	f800283a 	ret
    1624:	00035d41 	jmpi	35d4 <fflush>

00001628 <_sbrk_r>:
    1628:	defffd04 	addi	sp,sp,-12
    162c:	dc000015 	stw	r16,0(sp)
    1630:	04000074 	movhi	r16,1
    1634:	84161d04 	addi	r16,r16,22644
    1638:	dc400115 	stw	r17,4(sp)
    163c:	80000015 	stw	zero,0(r16)
    1640:	2023883a 	mov	r17,r4
    1644:	2809883a 	mov	r4,r5
    1648:	dfc00215 	stw	ra,8(sp)
    164c:	000fb100 	call	fb10 <sbrk>
    1650:	1007883a 	mov	r3,r2
    1654:	00bfffc4 	movi	r2,-1
    1658:	18800626 	beq	r3,r2,1674 <_sbrk_r+0x4c>
    165c:	1805883a 	mov	r2,r3
    1660:	dfc00217 	ldw	ra,8(sp)
    1664:	dc400117 	ldw	r17,4(sp)
    1668:	dc000017 	ldw	r16,0(sp)
    166c:	dec00304 	addi	sp,sp,12
    1670:	f800283a 	ret
    1674:	80800017 	ldw	r2,0(r16)
    1678:	103ff826 	beq	r2,zero,165c <_sbrk_r+0x34>
    167c:	88800015 	stw	r2,0(r17)
    1680:	1805883a 	mov	r2,r3
    1684:	dfc00217 	ldw	ra,8(sp)
    1688:	dc400117 	ldw	r17,4(sp)
    168c:	dc000017 	ldw	r16,0(sp)
    1690:	dec00304 	addi	sp,sp,12
    1694:	f800283a 	ret

00001698 <eofread>:
    1698:	0005883a 	mov	r2,zero
    169c:	f800283a 	ret

000016a0 <_sscanf_r>:
    16a0:	deffe404 	addi	sp,sp,-112
    16a4:	dcc01915 	stw	r19,100(sp)
    16a8:	2027883a 	mov	r19,r4
    16ac:	dfc01a15 	stw	ra,104(sp)
    16b0:	dc401815 	stw	r17,96(sp)
    16b4:	d9c01b15 	stw	r7,108(sp)
    16b8:	00808104 	movi	r2,516
    16bc:	2809883a 	mov	r4,r5
    16c0:	3023883a 	mov	r17,r6
    16c4:	d9400115 	stw	r5,4(sp)
    16c8:	d9400515 	stw	r5,20(sp)
    16cc:	d880040d 	sth	r2,16(sp)
    16d0:	00019d80 	call	19d8 <strlen>
    16d4:	d8c01b04 	addi	r3,sp,108
    16d8:	d8c00015 	stw	r3,0(sp)
    16dc:	180f883a 	mov	r7,r3
    16e0:	023fffc4 	movi	r8,-1
    16e4:	00c00034 	movhi	r3,0
    16e8:	18c5a604 	addi	r3,r3,5784
    16ec:	9809883a 	mov	r4,r19
    16f0:	880d883a 	mov	r6,r17
    16f4:	d9400104 	addi	r5,sp,4
    16f8:	d8800615 	stw	r2,24(sp)
    16fc:	d8c00915 	stw	r3,36(sp)
    1700:	da00048d 	sth	r8,18(sp)
    1704:	d8800215 	stw	r2,8(sp)
    1708:	d8000d15 	stw	zero,52(sp)
    170c:	d8001215 	stw	zero,72(sp)
    1710:	0001a4c0 	call	1a4c <__svfscanf_r>
    1714:	dfc01a17 	ldw	ra,104(sp)
    1718:	dcc01917 	ldw	r19,100(sp)
    171c:	dc401817 	ldw	r17,96(sp)
    1720:	dec01c04 	addi	sp,sp,112
    1724:	f800283a 	ret

00001728 <sscanf>:
    1728:	deffe404 	addi	sp,sp,-112
    172c:	dfc01915 	stw	ra,100(sp)
    1730:	dc401815 	stw	r17,96(sp)
    1734:	d9801a15 	stw	r6,104(sp)
    1738:	d9c01b15 	stw	r7,108(sp)
    173c:	00808104 	movi	r2,516
    1740:	2823883a 	mov	r17,r5
    1744:	d9000515 	stw	r4,20(sp)
    1748:	d9000115 	stw	r4,4(sp)
    174c:	d880040d 	sth	r2,16(sp)
    1750:	00019d80 	call	19d8 <strlen>
    1754:	d8c01a04 	addi	r3,sp,104
    1758:	d8c00015 	stw	r3,0(sp)
    175c:	00c00074 	movhi	r3,1
    1760:	18cf6704 	addi	r3,r3,15772
    1764:	19000017 	ldw	r4,0(r3)
    1768:	d9c00017 	ldw	r7,0(sp)
    176c:	00c00034 	movhi	r3,0
    1770:	18c5a604 	addi	r3,r3,5784
    1774:	023fffc4 	movi	r8,-1
    1778:	880d883a 	mov	r6,r17
    177c:	d9400104 	addi	r5,sp,4
    1780:	d8800615 	stw	r2,24(sp)
    1784:	d8c00915 	stw	r3,36(sp)
    1788:	da00048d 	sth	r8,18(sp)
    178c:	d8800215 	stw	r2,8(sp)
    1790:	d8000d15 	stw	zero,52(sp)
    1794:	d8001215 	stw	zero,72(sp)
    1798:	0001a4c0 	call	1a4c <__svfscanf_r>
    179c:	dfc01917 	ldw	ra,100(sp)
    17a0:	dc401817 	ldw	r17,96(sp)
    17a4:	dec01c04 	addi	sp,sp,112
    17a8:	f800283a 	ret

000017ac <__sclose>:
    17ac:	2940038f 	ldh	r5,14(r5)
    17b0:	00032441 	jmpi	3244 <_close_r>

000017b4 <__sseek>:
    17b4:	defffe04 	addi	sp,sp,-8
    17b8:	dc000015 	stw	r16,0(sp)
    17bc:	2821883a 	mov	r16,r5
    17c0:	2940038f 	ldh	r5,14(r5)
    17c4:	dfc00115 	stw	ra,4(sp)
    17c8:	00042100 	call	4210 <_lseek_r>
    17cc:	1007883a 	mov	r3,r2
    17d0:	00bfffc4 	movi	r2,-1
    17d4:	18800926 	beq	r3,r2,17fc <__sseek+0x48>
    17d8:	8080030b 	ldhu	r2,12(r16)
    17dc:	80c01415 	stw	r3,80(r16)
    17e0:	10840014 	ori	r2,r2,4096
    17e4:	8080030d 	sth	r2,12(r16)
    17e8:	1805883a 	mov	r2,r3
    17ec:	dfc00117 	ldw	ra,4(sp)
    17f0:	dc000017 	ldw	r16,0(sp)
    17f4:	dec00204 	addi	sp,sp,8
    17f8:	f800283a 	ret
    17fc:	8080030b 	ldhu	r2,12(r16)
    1800:	10bbffcc 	andi	r2,r2,61439
    1804:	8080030d 	sth	r2,12(r16)
    1808:	1805883a 	mov	r2,r3
    180c:	dfc00117 	ldw	ra,4(sp)
    1810:	dc000017 	ldw	r16,0(sp)
    1814:	dec00204 	addi	sp,sp,8
    1818:	f800283a 	ret

0000181c <__swrite>:
    181c:	2880030b 	ldhu	r2,12(r5)
    1820:	defffb04 	addi	sp,sp,-20
    1824:	dcc00315 	stw	r19,12(sp)
    1828:	1080400c 	andi	r2,r2,256
    182c:	dc800215 	stw	r18,8(sp)
    1830:	dc400115 	stw	r17,4(sp)
    1834:	dc000015 	stw	r16,0(sp)
    1838:	3027883a 	mov	r19,r6
    183c:	3825883a 	mov	r18,r7
    1840:	dfc00415 	stw	ra,16(sp)
    1844:	2821883a 	mov	r16,r5
    1848:	000d883a 	mov	r6,zero
    184c:	01c00084 	movi	r7,2
    1850:	2023883a 	mov	r17,r4
    1854:	10000226 	beq	r2,zero,1860 <__swrite+0x44>
    1858:	2940038f 	ldh	r5,14(r5)
    185c:	00042100 	call	4210 <_lseek_r>
    1860:	8080030b 	ldhu	r2,12(r16)
    1864:	8140038f 	ldh	r5,14(r16)
    1868:	8809883a 	mov	r4,r17
    186c:	10bbffcc 	andi	r2,r2,61439
    1870:	980d883a 	mov	r6,r19
    1874:	900f883a 	mov	r7,r18
    1878:	8080030d 	sth	r2,12(r16)
    187c:	dfc00417 	ldw	ra,16(sp)
    1880:	dcc00317 	ldw	r19,12(sp)
    1884:	dc800217 	ldw	r18,8(sp)
    1888:	dc400117 	ldw	r17,4(sp)
    188c:	dc000017 	ldw	r16,0(sp)
    1890:	dec00504 	addi	sp,sp,20
    1894:	00031cc1 	jmpi	31cc <_write_r>

00001898 <__sread>:
    1898:	defffe04 	addi	sp,sp,-8
    189c:	dc000015 	stw	r16,0(sp)
    18a0:	2821883a 	mov	r16,r5
    18a4:	2940038f 	ldh	r5,14(r5)
    18a8:	dfc00115 	stw	ra,4(sp)
    18ac:	00045fc0 	call	45fc <_read_r>
    18b0:	1007883a 	mov	r3,r2
    18b4:	10000816 	blt	r2,zero,18d8 <__sread+0x40>
    18b8:	80801417 	ldw	r2,80(r16)
    18bc:	10c5883a 	add	r2,r2,r3
    18c0:	80801415 	stw	r2,80(r16)
    18c4:	1805883a 	mov	r2,r3
    18c8:	dfc00117 	ldw	ra,4(sp)
    18cc:	dc000017 	ldw	r16,0(sp)
    18d0:	dec00204 	addi	sp,sp,8
    18d4:	f800283a 	ret
    18d8:	8080030b 	ldhu	r2,12(r16)
    18dc:	10bbffcc 	andi	r2,r2,61439
    18e0:	8080030d 	sth	r2,12(r16)
    18e4:	1805883a 	mov	r2,r3
    18e8:	dfc00117 	ldw	ra,4(sp)
    18ec:	dc000017 	ldw	r16,0(sp)
    18f0:	dec00204 	addi	sp,sp,8
    18f4:	f800283a 	ret

000018f8 <strchr>:
    18f8:	208000cc 	andi	r2,r4,3
    18fc:	2007883a 	mov	r3,r4
    1900:	1000311e 	bne	r2,zero,19c8 <strchr+0xd0>
    1904:	29c03fcc 	andi	r7,r5,255
    1908:	0015883a 	mov	r10,zero
    190c:	0007883a 	mov	r3,zero
    1910:	01400104 	movi	r5,4
    1914:	5004923a 	slli	r2,r10,8
    1918:	18c00044 	addi	r3,r3,1
    191c:	3894b03a 	or	r10,r7,r2
    1920:	197ffc1e 	bne	r3,r5,1914 <strchr+0x1c>
    1924:	200d883a 	mov	r6,r4
    1928:	21000017 	ldw	r4,0(r4)
    192c:	017fbff4 	movhi	r5,65279
    1930:	297fbfc4 	addi	r5,r5,-257
    1934:	02202074 	movhi	r8,32897
    1938:	42202004 	addi	r8,r8,-32640
    193c:	2145883a 	add	r2,r4,r5
    1940:	1204703a 	and	r2,r2,r8
    1944:	0106303a 	nor	r3,zero,r4
    1948:	10c4703a 	and	r2,r2,r3
    194c:	1000151e 	bne	r2,zero,19a4 <strchr+0xac>
    1950:	2284f03a 	xor	r2,r4,r10
    1954:	1147883a 	add	r3,r2,r5
    1958:	1a06703a 	and	r3,r3,r8
    195c:	0084303a 	nor	r2,zero,r2
    1960:	10c4703a 	and	r2,r2,r3
    1964:	10000f1e 	bne	r2,zero,19a4 <strchr+0xac>
    1968:	2813883a 	mov	r9,r5
    196c:	00000106 	br	1974 <strchr+0x7c>
    1970:	18000c1e 	bne	r3,zero,19a4 <strchr+0xac>
    1974:	31800104 	addi	r6,r6,4
    1978:	30800017 	ldw	r2,0(r6)
    197c:	1286f03a 	xor	r3,r2,r10
    1980:	124b883a 	add	r5,r2,r9
    1984:	1a49883a 	add	r4,r3,r9
    1988:	2a0a703a 	and	r5,r5,r8
    198c:	0084303a 	nor	r2,zero,r2
    1990:	2208703a 	and	r4,r4,r8
    1994:	00c6303a 	nor	r3,zero,r3
    1998:	1144703a 	and	r2,r2,r5
    199c:	1906703a 	and	r3,r3,r4
    19a0:	103ff326 	beq	r2,zero,1970 <strchr+0x78>
    19a4:	3007883a 	mov	r3,r6
    19a8:	00000206 	br	19b4 <strchr+0xbc>
    19ac:	38800426 	beq	r7,r2,19c0 <strchr+0xc8>
    19b0:	18c00044 	addi	r3,r3,1
    19b4:	18800003 	ldbu	r2,0(r3)
    19b8:	103ffc1e 	bne	r2,zero,19ac <strchr+0xb4>
    19bc:	3800041e 	bne	r7,zero,19d0 <strchr+0xd8>
    19c0:	1805883a 	mov	r2,r3
    19c4:	f800283a 	ret
    19c8:	29c03fcc 	andi	r7,r5,255
    19cc:	003ff906 	br	19b4 <strchr+0xbc>
    19d0:	0005883a 	mov	r2,zero
    19d4:	f800283a 	ret

000019d8 <strlen>:
    19d8:	208000cc 	andi	r2,r4,3
    19dc:	2011883a 	mov	r8,r4
    19e0:	1000161e 	bne	r2,zero,1a3c <strlen+0x64>
    19e4:	20c00017 	ldw	r3,0(r4)
    19e8:	017fbff4 	movhi	r5,65279
    19ec:	297fbfc4 	addi	r5,r5,-257
    19f0:	01e02074 	movhi	r7,32897
    19f4:	39e02004 	addi	r7,r7,-32640
    19f8:	1945883a 	add	r2,r3,r5
    19fc:	11c4703a 	and	r2,r2,r7
    1a00:	00c6303a 	nor	r3,zero,r3
    1a04:	1886703a 	and	r3,r3,r2
    1a08:	18000c1e 	bne	r3,zero,1a3c <strlen+0x64>
    1a0c:	280d883a 	mov	r6,r5
    1a10:	380b883a 	mov	r5,r7
    1a14:	21000104 	addi	r4,r4,4
    1a18:	20800017 	ldw	r2,0(r4)
    1a1c:	1187883a 	add	r3,r2,r6
    1a20:	1946703a 	and	r3,r3,r5
    1a24:	0084303a 	nor	r2,zero,r2
    1a28:	10c4703a 	and	r2,r2,r3
    1a2c:	103ff926 	beq	r2,zero,1a14 <strlen+0x3c>
    1a30:	20800007 	ldb	r2,0(r4)
    1a34:	10000326 	beq	r2,zero,1a44 <strlen+0x6c>
    1a38:	21000044 	addi	r4,r4,1
    1a3c:	20800007 	ldb	r2,0(r4)
    1a40:	103ffd1e 	bne	r2,zero,1a38 <strlen+0x60>
    1a44:	2205c83a 	sub	r2,r4,r8
    1a48:	f800283a 	ret

00001a4c <__svfscanf_r>:
    1a4c:	deff4e04 	addi	sp,sp,-712
    1a50:	dd80ae15 	stw	r22,696(sp)
    1a54:	dd00ac15 	stw	r20,688(sp)
    1a58:	dc40a915 	stw	r17,676(sp)
    1a5c:	dc00a815 	stw	r16,672(sp)
    1a60:	dfc0b115 	stw	ra,708(sp)
    1a64:	df00b015 	stw	fp,704(sp)
    1a68:	ddc0af15 	stw	r23,700(sp)
    1a6c:	dd40ad15 	stw	r21,692(sp)
    1a70:	dcc0ab15 	stw	r19,684(sp)
    1a74:	dc80aa15 	stw	r18,680(sp)
    1a78:	202d883a 	mov	r22,r4
    1a7c:	2821883a 	mov	r16,r5
    1a80:	d9c0a415 	stw	r7,656(sp)
    1a84:	3029883a 	mov	r20,r6
    1a88:	d800a215 	stw	zero,648(sp)
    1a8c:	0023883a 	mov	r17,zero
    1a90:	d800a115 	stw	zero,644(sp)
    1a94:	d800a015 	stw	zero,640(sp)
    1a98:	a1000007 	ldb	r4,0(r20)
    1a9c:	d9000115 	stw	r4,4(sp)
    1aa0:	20001f26 	beq	r4,zero,1b20 <__svfscanf_r+0xd4>
    1aa4:	04800074 	movhi	r18,1
    1aa8:	948f6b04 	addi	r18,r18,15788
    1aac:	91800017 	ldw	r6,0(r18)
    1ab0:	a5000044 	addi	r20,r20,1
    1ab4:	3107883a 	add	r3,r6,r4
    1ab8:	18800003 	ldbu	r2,0(r3)
    1abc:	1080020c 	andi	r2,r2,8
    1ac0:	10002426 	beq	r2,zero,1b54 <__svfscanf_r+0x108>
    1ac4:	80c00117 	ldw	r3,4(r16)
    1ac8:	00c00e0e 	bge	zero,r3,1b04 <__svfscanf_r+0xb8>
    1acc:	81400017 	ldw	r5,0(r16)
    1ad0:	90800017 	ldw	r2,0(r18)
    1ad4:	28c00003 	ldbu	r3,0(r5)
    1ad8:	1887883a 	add	r3,r3,r2
    1adc:	19000003 	ldbu	r4,0(r3)
    1ae0:	2100020c 	andi	r4,r4,8
    1ae4:	203fec26 	beq	r4,zero,1a98 <__svfscanf_r+0x4c>
    1ae8:	80c00117 	ldw	r3,4(r16)
    1aec:	29800044 	addi	r6,r5,1
    1af0:	8c400044 	addi	r17,r17,1
    1af4:	18ffffc4 	addi	r3,r3,-1
    1af8:	81800015 	stw	r6,0(r16)
    1afc:	80c00115 	stw	r3,4(r16)
    1b00:	00fff216 	blt	zero,r3,1acc <__svfscanf_r+0x80>
    1b04:	b009883a 	mov	r4,r22
    1b08:	800b883a 	mov	r5,r16
    1b0c:	00014480 	call	1448 <__srefill_r>
    1b10:	103fee26 	beq	r2,zero,1acc <__svfscanf_r+0x80>
    1b14:	a1000007 	ldb	r4,0(r20)
    1b18:	d9000115 	stw	r4,4(sp)
    1b1c:	203fe11e 	bne	r4,zero,1aa4 <__svfscanf_r+0x58>
    1b20:	d880a217 	ldw	r2,648(sp)
    1b24:	dfc0b117 	ldw	ra,708(sp)
    1b28:	df00b017 	ldw	fp,704(sp)
    1b2c:	ddc0af17 	ldw	r23,700(sp)
    1b30:	dd80ae17 	ldw	r22,696(sp)
    1b34:	dd40ad17 	ldw	r21,692(sp)
    1b38:	dd00ac17 	ldw	r20,688(sp)
    1b3c:	dcc0ab17 	ldw	r19,684(sp)
    1b40:	dc80aa17 	ldw	r18,680(sp)
    1b44:	dc40a917 	ldw	r17,676(sp)
    1b48:	dc00a817 	ldw	r16,672(sp)
    1b4c:	dec0b204 	addi	sp,sp,712
    1b50:	f800283a 	ret
    1b54:	00800944 	movi	r2,37
    1b58:	20801626 	beq	r4,r2,1bb4 <__svfscanf_r+0x168>
    1b5c:	80800117 	ldw	r2,4(r16)
    1b60:	00800b0e 	bge	zero,r2,1b90 <__svfscanf_r+0x144>
    1b64:	81000017 	ldw	r4,0(r16)
    1b68:	a0ffffc7 	ldb	r3,-1(r20)
    1b6c:	20800003 	ldbu	r2,0(r4)
    1b70:	10ffeb1e 	bne	r2,r3,1b20 <__svfscanf_r+0xd4>
    1b74:	80c00117 	ldw	r3,4(r16)
    1b78:	21800044 	addi	r6,r4,1
    1b7c:	8c400044 	addi	r17,r17,1
    1b80:	18ffffc4 	addi	r3,r3,-1
    1b84:	80c00115 	stw	r3,4(r16)
    1b88:	81800015 	stw	r6,0(r16)
    1b8c:	003fc206 	br	1a98 <__svfscanf_r+0x4c>
    1b90:	b009883a 	mov	r4,r22
    1b94:	800b883a 	mov	r5,r16
    1b98:	00014480 	call	1448 <__srefill_r>
    1b9c:	103ff126 	beq	r2,zero,1b64 <__svfscanf_r+0x118>
    1ba0:	d900a217 	ldw	r4,648(sp)
    1ba4:	2004c91e 	bne	r4,zero,2ecc <__svfscanf_r+0x1480>
    1ba8:	00bfffc4 	movi	r2,-1
    1bac:	d880a215 	stw	r2,648(sp)
    1bb0:	003fdb06 	br	1b20 <__svfscanf_r+0xd4>
    1bb4:	d800a315 	stw	zero,652(sp)
    1bb8:	0027883a 	mov	r19,zero
    1bbc:	a0c00003 	ldbu	r3,0(r20)
    1bc0:	00801e04 	movi	r2,120
    1bc4:	a5000044 	addi	r20,r20,1
    1bc8:	19403fcc 	andi	r5,r3,255
    1bcc:	2940201c 	xori	r5,r5,128
    1bd0:	297fe004 	addi	r5,r5,-128
    1bd4:	10c08036 	bltu	r2,r3,1dd8 <__svfscanf_r+0x38c>
    1bd8:	18c5883a 	add	r2,r3,r3
    1bdc:	1085883a 	add	r2,r2,r2
    1be0:	00c00034 	movhi	r3,0
    1be4:	18c6fd04 	addi	r3,r3,7156
    1be8:	10c5883a 	add	r2,r2,r3
    1bec:	11000017 	ldw	r4,0(r2)
    1bf0:	2000683a 	jmp	r4
    1bf4:	00001ba8 	cmpgeui	zero,zero,110
    1bf8:	00001dd8 	cmpnei	zero,zero,119
    1bfc:	00001dd8 	cmpnei	zero,zero,119
    1c00:	00001dd8 	cmpnei	zero,zero,119
    1c04:	00001dd8 	cmpnei	zero,zero,119
    1c08:	00001dd8 	cmpnei	zero,zero,119
    1c0c:	00001dd8 	cmpnei	zero,zero,119
    1c10:	00001dd8 	cmpnei	zero,zero,119
    1c14:	00001dd8 	cmpnei	zero,zero,119
    1c18:	00001dd8 	cmpnei	zero,zero,119
    1c1c:	00001dd8 	cmpnei	zero,zero,119
    1c20:	00001dd8 	cmpnei	zero,zero,119
    1c24:	00001dd8 	cmpnei	zero,zero,119
    1c28:	00001dd8 	cmpnei	zero,zero,119
    1c2c:	00001dd8 	cmpnei	zero,zero,119
    1c30:	00001dd8 	cmpnei	zero,zero,119
    1c34:	00001dd8 	cmpnei	zero,zero,119
    1c38:	00001dd8 	cmpnei	zero,zero,119
    1c3c:	00001dd8 	cmpnei	zero,zero,119
    1c40:	00001dd8 	cmpnei	zero,zero,119
    1c44:	00001dd8 	cmpnei	zero,zero,119
    1c48:	00001dd8 	cmpnei	zero,zero,119
    1c4c:	00001dd8 	cmpnei	zero,zero,119
    1c50:	00001dd8 	cmpnei	zero,zero,119
    1c54:	00001dd8 	cmpnei	zero,zero,119
    1c58:	00001dd8 	cmpnei	zero,zero,119
    1c5c:	00001dd8 	cmpnei	zero,zero,119
    1c60:	00001dd8 	cmpnei	zero,zero,119
    1c64:	00001dd8 	cmpnei	zero,zero,119
    1c68:	00001dd8 	cmpnei	zero,zero,119
    1c6c:	00001dd8 	cmpnei	zero,zero,119
    1c70:	00001dd8 	cmpnei	zero,zero,119
    1c74:	00001dd8 	cmpnei	zero,zero,119
    1c78:	00001dd8 	cmpnei	zero,zero,119
    1c7c:	00001dd8 	cmpnei	zero,zero,119
    1c80:	00001dd8 	cmpnei	zero,zero,119
    1c84:	00001dd8 	cmpnei	zero,zero,119
    1c88:	00001b5c 	xori	zero,zero,109
    1c8c:	00001dd8 	cmpnei	zero,zero,119
    1c90:	00001dd8 	cmpnei	zero,zero,119
    1c94:	00001dd8 	cmpnei	zero,zero,119
    1c98:	00001dd8 	cmpnei	zero,zero,119
    1c9c:	00002dfc 	xorhi	zero,zero,183
    1ca0:	00001dd8 	cmpnei	zero,zero,119
    1ca4:	00001dd8 	cmpnei	zero,zero,119
    1ca8:	00001dd8 	cmpnei	zero,zero,119
    1cac:	00001dd8 	cmpnei	zero,zero,119
    1cb0:	00001dd8 	cmpnei	zero,zero,119
    1cb4:	000027f8 	rdprs	zero,zero,159
    1cb8:	000027f8 	rdprs	zero,zero,159
    1cbc:	000027f8 	rdprs	zero,zero,159
    1cc0:	000027f8 	rdprs	zero,zero,159
    1cc4:	000027f8 	rdprs	zero,zero,159
    1cc8:	000027f8 	rdprs	zero,zero,159
    1ccc:	000027f8 	rdprs	zero,zero,159
    1cd0:	000027f8 	rdprs	zero,zero,159
    1cd4:	000027f8 	rdprs	zero,zero,159
    1cd8:	000027f8 	rdprs	zero,zero,159
    1cdc:	00001dd8 	cmpnei	zero,zero,119
    1ce0:	00001dd8 	cmpnei	zero,zero,119
    1ce4:	00001dd8 	cmpnei	zero,zero,119
    1ce8:	00001dd8 	cmpnei	zero,zero,119
    1cec:	00001dd8 	cmpnei	zero,zero,119
    1cf0:	00001dd8 	cmpnei	zero,zero,119
    1cf4:	00001dd8 	cmpnei	zero,zero,119
    1cf8:	00001dd8 	cmpnei	zero,zero,119
    1cfc:	00001dd8 	cmpnei	zero,zero,119
    1d00:	00001dd8 	cmpnei	zero,zero,119
    1d04:	00002f78 	rdprs	zero,zero,189
    1d08:	00002f70 	cmpltui	zero,zero,189
    1d0c:	00001dd8 	cmpnei	zero,zero,119
    1d10:	00002f70 	cmpltui	zero,zero,189
    1d14:	00001dd8 	cmpnei	zero,zero,119
    1d18:	00001dd8 	cmpnei	zero,zero,119
    1d1c:	00001dd8 	cmpnei	zero,zero,119
    1d20:	00001dd8 	cmpnei	zero,zero,119
    1d24:	00003008 	cmpgei	zero,zero,192
    1d28:	00001dd8 	cmpnei	zero,zero,119
    1d2c:	00001dd8 	cmpnei	zero,zero,119
    1d30:	00002fc0 	call	2fc <PWM_setDutyCycle_B+0x7c>
    1d34:	00001dd8 	cmpnei	zero,zero,119
    1d38:	00001dd8 	cmpnei	zero,zero,119
    1d3c:	00001dd8 	cmpnei	zero,zero,119
    1d40:	00001dd8 	cmpnei	zero,zero,119
    1d44:	00001dd8 	cmpnei	zero,zero,119
    1d48:	00001dd8 	cmpnei	zero,zero,119
    1d4c:	00001dd8 	cmpnei	zero,zero,119
    1d50:	00001dd8 	cmpnei	zero,zero,119
    1d54:	00002e04 	movi	zero,184
    1d58:	00001dd8 	cmpnei	zero,zero,119
    1d5c:	00001dd8 	cmpnei	zero,zero,119
    1d60:	00002fa4 	muli	zero,zero,190
    1d64:	00001dd8 	cmpnei	zero,zero,119
    1d68:	00001dd8 	cmpnei	zero,zero,119
    1d6c:	00001dd8 	cmpnei	zero,zero,119
    1d70:	00001dd8 	cmpnei	zero,zero,119
    1d74:	00001dd8 	cmpnei	zero,zero,119
    1d78:	00001dd8 	cmpnei	zero,zero,119
    1d7c:	00001dd8 	cmpnei	zero,zero,119
    1d80:	00002f98 	cmpnei	zero,zero,190
    1d84:	00002f7c 	xorhi	zero,zero,189
    1d88:	00002f70 	cmpltui	zero,zero,189
    1d8c:	00002f70 	cmpltui	zero,zero,189
    1d90:	00002f70 	cmpltui	zero,zero,189
    1d94:	00002f68 	cmpgeui	zero,zero,189
    1d98:	0000305c 	xori	zero,zero,193
    1d9c:	00001dd8 	cmpnei	zero,zero,119
    1da0:	00001dd8 	cmpnei	zero,zero,119
    1da4:	00003048 	cmpgei	zero,zero,193
    1da8:	00001dd8 	cmpnei	zero,zero,119
    1dac:	00002fe0 	cmpeqi	zero,zero,191
    1db0:	00002fc4 	movi	zero,191
    1db4:	00003018 	cmpnei	zero,zero,192
    1db8:	00001dd8 	cmpnei	zero,zero,119
    1dbc:	00001dd8 	cmpnei	zero,zero,119
    1dc0:	00003010 	cmplti	zero,zero,192
    1dc4:	00001dd8 	cmpnei	zero,zero,119
    1dc8:	00002348 	cmpgei	zero,zero,141
    1dcc:	00001dd8 	cmpnei	zero,zero,119
    1dd0:	00001dd8 	cmpnei	zero,zero,119
    1dd4:	00002e04 	movi	zero,184
    1dd8:	2987883a 	add	r3,r5,r6
    1ddc:	18800003 	ldbu	r2,0(r3)
    1de0:	1080004c 	andi	r2,r2,1
    1de4:	1005003a 	cmpeq	r2,r2,zero
    1de8:	10002c26 	beq	r2,zero,1e9c <__svfscanf_r+0x450>
    1dec:	01000034 	movhi	r4,0
    1df0:	21195704 	addi	r4,r4,25948
    1df4:	00800284 	movi	r2,10
    1df8:	d900a015 	stw	r4,640(sp)
    1dfc:	054000c4 	movi	r21,3
    1e00:	d880a115 	stw	r2,644(sp)
    1e04:	80c00117 	ldw	r3,4(r16)
    1e08:	00c14a0e 	bge	zero,r3,2334 <__svfscanf_r+0x8e8>
    1e0c:	9880100c 	andi	r2,r19,64
    1e10:	10001326 	beq	r2,zero,1e60 <__svfscanf_r+0x414>
    1e14:	00800104 	movi	r2,4
    1e18:	157f1f36 	bltu	r2,r21,1a98 <__svfscanf_r+0x4c>
    1e1c:	ad45883a 	add	r2,r21,r21
    1e20:	1085883a 	add	r2,r2,r2
    1e24:	00c00034 	movhi	r3,0
    1e28:	18c78e04 	addi	r3,r3,7736
    1e2c:	10c5883a 	add	r2,r2,r3
    1e30:	11000017 	ldw	r4,0(r2)
    1e34:	2000683a 	jmp	r4
    1e38:	00001ea4 	muli	zero,zero,122
    1e3c:	00001fb0 	cmpltui	zero,zero,126
    1e40:	00002024 	muli	zero,zero,128
    1e44:	00002310 	cmplti	zero,zero,140
    1e48:	0000215c 	xori	zero,zero,133
    1e4c:	b009883a 	mov	r4,r22
    1e50:	800b883a 	mov	r5,r16
    1e54:	00014480 	call	1448 <__srefill_r>
    1e58:	103f511e 	bne	r2,zero,1ba0 <__svfscanf_r+0x154>
    1e5c:	8c400044 	addi	r17,r17,1
    1e60:	81400017 	ldw	r5,0(r16)
    1e64:	90800017 	ldw	r2,0(r18)
    1e68:	28c00003 	ldbu	r3,0(r5)
    1e6c:	1887883a 	add	r3,r3,r2
    1e70:	19000003 	ldbu	r4,0(r3)
    1e74:	2100020c 	andi	r4,r4,8
    1e78:	203fe626 	beq	r4,zero,1e14 <__svfscanf_r+0x3c8>
    1e7c:	80c00117 	ldw	r3,4(r16)
    1e80:	18ffffc4 	addi	r3,r3,-1
    1e84:	80c00115 	stw	r3,4(r16)
    1e88:	00fff00e 	bge	zero,r3,1e4c <__svfscanf_r+0x400>
    1e8c:	29800044 	addi	r6,r5,1
    1e90:	8c400044 	addi	r17,r17,1
    1e94:	81800015 	stw	r6,0(r16)
    1e98:	003ff106 	br	1e60 <__svfscanf_r+0x414>
    1e9c:	9cc00054 	ori	r19,r19,1
    1ea0:	003fd206 	br	1dec <__svfscanf_r+0x3a0>
    1ea4:	d8c0a317 	ldw	r3,652(sp)
    1ea8:	1800021e 	bne	r3,zero,1eb4 <__svfscanf_r+0x468>
    1eac:	01000044 	movi	r4,1
    1eb0:	d900a315 	stw	r4,652(sp)
    1eb4:	9880004c 	andi	r2,r19,1
    1eb8:	1005003a 	cmpeq	r2,r2,zero
    1ebc:	1003d91e 	bne	r2,zero,2e24 <__svfscanf_r+0x13d8>
    1ec0:	9d40040c 	andi	r21,r19,16
    1ec4:	a839003a 	cmpeq	fp,r21,zero
    1ec8:	e0042526 	beq	fp,zero,2f60 <__svfscanf_r+0x1514>
    1ecc:	d880a417 	ldw	r2,656(sp)
    1ed0:	14c00017 	ldw	r19,0(r2)
    1ed4:	10800104 	addi	r2,r2,4
    1ed8:	d880a415 	stw	r2,656(sp)
    1edc:	d8c0a317 	ldw	r3,652(sp)
    1ee0:	18041a26 	beq	r3,zero,2f4c <__svfscanf_r+0x1500>
    1ee4:	01000074 	movhi	r4,1
    1ee8:	210f6c04 	addi	r4,r4,15792
    1eec:	20800017 	ldw	r2,0(r4)
    1ef0:	103f2b26 	beq	r2,zero,1ba0 <__svfscanf_r+0x154>
    1ef4:	d8804404 	addi	r2,sp,272
    1ef8:	0025883a 	mov	r18,zero
    1efc:	d880a615 	stw	r2,664(sp)
    1f00:	05ffffc4 	movi	r23,-1
    1f04:	80800017 	ldw	r2,0(r16)
    1f08:	80c00117 	ldw	r3,4(r16)
    1f0c:	d900a617 	ldw	r4,664(sp)
    1f10:	12000003 	ldbu	r8,0(r2)
    1f14:	18ffffc4 	addi	r3,r3,-1
    1f18:	11800044 	addi	r6,r2,1
    1f1c:	248f883a 	add	r7,r4,r18
    1f20:	80c00115 	stw	r3,4(r16)
    1f24:	81800015 	stw	r6,0(r16)
    1f28:	3a000005 	stb	r8,0(r7)
    1f2c:	d9000204 	addi	r4,sp,8
    1f30:	000b883a 	mov	r5,zero
    1f34:	01800204 	movi	r6,8
    1f38:	00012fc0 	call	12fc <memset>
    1f3c:	d980a617 	ldw	r6,664(sp)
    1f40:	94800044 	addi	r18,r18,1
    1f44:	d8800204 	addi	r2,sp,8
    1f48:	b009883a 	mov	r4,r22
    1f4c:	980b883a 	mov	r5,r19
    1f50:	900f883a 	mov	r7,r18
    1f54:	d8800015 	stw	r2,0(sp)
    1f58:	000441c0 	call	441c <_mbrtowc_r>
    1f5c:	1007883a 	mov	r3,r2
    1f60:	15ff0f26 	beq	r2,r23,1ba0 <__svfscanf_r+0x154>
    1f64:	1003f11e 	bne	r2,zero,2f2c <__svfscanf_r+0x14e0>
    1f68:	a800011e 	bne	r21,zero,1f70 <__svfscanf_r+0x524>
    1f6c:	98000015 	stw	zero,0(r19)
    1f70:	d8c0a317 	ldw	r3,652(sp)
    1f74:	8ca3883a 	add	r17,r17,r18
    1f78:	18ffffc4 	addi	r3,r3,-1
    1f7c:	d8c0a315 	stw	r3,652(sp)
    1f80:	e0000126 	beq	fp,zero,1f88 <__svfscanf_r+0x53c>
    1f84:	9cc00104 	addi	r19,r19,4
    1f88:	0025883a 	mov	r18,zero
    1f8c:	80c00117 	ldw	r3,4(r16)
    1f90:	00c3e90e 	bge	zero,r3,2f38 <__svfscanf_r+0x14ec>
    1f94:	d900a317 	ldw	r4,652(sp)
    1f98:	2003ec26 	beq	r4,zero,2f4c <__svfscanf_r+0x1500>
    1f9c:	00c00074 	movhi	r3,1
    1fa0:	18cf6c04 	addi	r3,r3,15792
    1fa4:	18800017 	ldw	r2,0(r3)
    1fa8:	90bfd61e 	bne	r18,r2,1f04 <__svfscanf_r+0x4b8>
    1fac:	003efc06 	br	1ba0 <__svfscanf_r+0x154>
    1fb0:	d880a317 	ldw	r2,652(sp)
    1fb4:	1000021e 	bne	r2,zero,1fc0 <__svfscanf_r+0x574>
    1fb8:	00ffffc4 	movi	r3,-1
    1fbc:	d8c0a315 	stw	r3,652(sp)
    1fc0:	9880040c 	andi	r2,r19,16
    1fc4:	10036526 	beq	r2,zero,2d5c <__svfscanf_r+0x1310>
    1fc8:	0027883a 	mov	r19,zero
    1fcc:	dd400404 	addi	r21,sp,16
    1fd0:	81000017 	ldw	r4,0(r16)
    1fd4:	20800003 	ldbu	r2,0(r4)
    1fd8:	a885883a 	add	r2,r21,r2
    1fdc:	10c00007 	ldb	r3,0(r2)
    1fe0:	1803be26 	beq	r3,zero,2edc <__svfscanf_r+0x1490>
    1fe4:	80c00117 	ldw	r3,4(r16)
    1fe8:	21800044 	addi	r6,r4,1
    1fec:	d900a317 	ldw	r4,652(sp)
    1ff0:	18ffffc4 	addi	r3,r3,-1
    1ff4:	9cc00044 	addi	r19,r19,1
    1ff8:	81800015 	stw	r6,0(r16)
    1ffc:	80c00115 	stw	r3,4(r16)
    2000:	24c3b626 	beq	r4,r19,2edc <__svfscanf_r+0x1490>
    2004:	00fff216 	blt	zero,r3,1fd0 <__svfscanf_r+0x584>
    2008:	b009883a 	mov	r4,r22
    200c:	800b883a 	mov	r5,r16
    2010:	00014480 	call	1448 <__srefill_r>
    2014:	103fee26 	beq	r2,zero,1fd0 <__svfscanf_r+0x584>
    2018:	983ee126 	beq	r19,zero,1ba0 <__svfscanf_r+0x154>
    201c:	8ce3883a 	add	r17,r17,r19
    2020:	003e9d06 	br	1a98 <__svfscanf_r+0x4c>
    2024:	d900a317 	ldw	r4,652(sp)
    2028:	2000021e 	bne	r4,zero,2034 <__svfscanf_r+0x5e8>
    202c:	00bfffc4 	movi	r2,-1
    2030:	d880a315 	stw	r2,652(sp)
    2034:	9880004c 	andi	r2,r19,1
    2038:	1005003a 	cmpeq	r2,r2,zero
    203c:	1001f41e 	bne	r2,zero,2810 <__svfscanf_r+0xdc4>
    2040:	9dc0040c 	andi	r23,r19,16
    2044:	b807003a 	cmpeq	r3,r23,zero
    2048:	d8c0a515 	stw	r3,660(sp)
    204c:	1803b21e 	bne	r3,zero,2f18 <__svfscanf_r+0x14cc>
    2050:	dd400104 	addi	r21,sp,4
    2054:	0027883a 	mov	r19,zero
    2058:	073fffc4 	movi	fp,-1
    205c:	81400017 	ldw	r5,0(r16)
    2060:	90800017 	ldw	r2,0(r18)
    2064:	29c00003 	ldbu	r7,0(r5)
    2068:	38c03fcc 	andi	r3,r7,255
    206c:	1887883a 	add	r3,r3,r2
    2070:	19000003 	ldbu	r4,0(r3)
    2074:	2100020c 	andi	r4,r4,8
    2078:	2000321e 	bne	r4,zero,2144 <__svfscanf_r+0x6f8>
    207c:	d8c0a317 	ldw	r3,652(sp)
    2080:	18003026 	beq	r3,zero,2144 <__svfscanf_r+0x6f8>
    2084:	00800074 	movhi	r2,1
    2088:	108f6c04 	addi	r2,r2,15792
    208c:	10c00017 	ldw	r3,0(r2)
    2090:	98fec326 	beq	r19,r3,1ba0 <__svfscanf_r+0x154>
    2094:	d8c04404 	addi	r3,sp,272
    2098:	80800117 	ldw	r2,4(r16)
    209c:	d8c0a615 	stw	r3,664(sp)
    20a0:	d900a617 	ldw	r4,664(sp)
    20a4:	10ffffc4 	addi	r3,r2,-1
    20a8:	29800044 	addi	r6,r5,1
    20ac:	80c00115 	stw	r3,4(r16)
    20b0:	24c5883a 	add	r2,r4,r19
    20b4:	81800015 	stw	r6,0(r16)
    20b8:	d9000204 	addi	r4,sp,8
    20bc:	000b883a 	mov	r5,zero
    20c0:	01800204 	movi	r6,8
    20c4:	11c00005 	stb	r7,0(r2)
    20c8:	00012fc0 	call	12fc <memset>
    20cc:	d980a617 	ldw	r6,664(sp)
    20d0:	9cc00044 	addi	r19,r19,1
    20d4:	d8800204 	addi	r2,sp,8
    20d8:	b009883a 	mov	r4,r22
    20dc:	a80b883a 	mov	r5,r21
    20e0:	980f883a 	mov	r7,r19
    20e4:	d8800015 	stw	r2,0(sp)
    20e8:	000441c0 	call	441c <_mbrtowc_r>
    20ec:	1007883a 	mov	r3,r2
    20f0:	173eab26 	beq	r2,fp,1ba0 <__svfscanf_r+0x154>
    20f4:	1003851e 	bne	r2,zero,2f0c <__svfscanf_r+0x14c0>
    20f8:	a8000015 	stw	zero,0(r21)
    20fc:	a9000017 	ldw	r4,0(r21)
    2100:	00041200 	call	4120 <iswspace>
    2104:	1003781e 	bne	r2,zero,2ee8 <__svfscanf_r+0x149c>
    2108:	d900a317 	ldw	r4,652(sp)
    210c:	d880a517 	ldw	r2,660(sp)
    2110:	8ce3883a 	add	r17,r17,r19
    2114:	213fffc4 	addi	r4,r4,-1
    2118:	d900a315 	stw	r4,652(sp)
    211c:	10000126 	beq	r2,zero,2124 <__svfscanf_r+0x6d8>
    2120:	ad400104 	addi	r21,r21,4
    2124:	0027883a 	mov	r19,zero
    2128:	80c00117 	ldw	r3,4(r16)
    212c:	00ffcb16 	blt	zero,r3,205c <__svfscanf_r+0x610>
    2130:	b009883a 	mov	r4,r22
    2134:	800b883a 	mov	r5,r16
    2138:	00014480 	call	1448 <__srefill_r>
    213c:	103fc726 	beq	r2,zero,205c <__svfscanf_r+0x610>
    2140:	983e971e 	bne	r19,zero,1ba0 <__svfscanf_r+0x154>
    2144:	b83e541e 	bne	r23,zero,1a98 <__svfscanf_r+0x4c>
    2148:	d900a217 	ldw	r4,648(sp)
    214c:	a8000015 	stw	zero,0(r21)
    2150:	21000044 	addi	r4,r4,1
    2154:	d900a215 	stw	r4,648(sp)
    2158:	003e4f06 	br	1a98 <__svfscanf_r+0x4c>
    215c:	d900a317 	ldw	r4,652(sp)
    2160:	00805704 	movi	r2,348
    2164:	20ffffc4 	addi	r3,r4,-1
    2168:	10c1ed2e 	bgeu	r2,r3,2920 <__svfscanf_r+0xed4>
    216c:	00805744 	movi	r2,349
    2170:	21bfa8c4 	addi	r6,r4,-349
    2174:	9d41e014 	ori	r21,r19,1920
    2178:	d880a315 	stw	r2,652(sp)
    217c:	d8c04404 	addi	r3,sp,272
    2180:	d8c0a615 	stw	r3,664(sp)
    2184:	182f883a 	mov	r23,r3
    2188:	d8009f15 	stw	zero,636(sp)
    218c:	d8009e15 	stw	zero,632(sp)
    2190:	d8009d15 	stw	zero,628(sp)
    2194:	d8009c15 	stw	zero,624(sp)
    2198:	0039883a 	mov	fp,zero
    219c:	0025883a 	mov	r18,zero
    21a0:	80800017 	ldw	r2,0(r16)
    21a4:	11400003 	ldbu	r5,0(r2)
    21a8:	00801384 	movi	r2,78
    21ac:	28fff544 	addi	r3,r5,-43
    21b0:	18c03fcc 	andi	r3,r3,255
    21b4:	10c07d36 	bltu	r2,r3,23ac <__svfscanf_r+0x960>
    21b8:	18c5883a 	add	r2,r3,r3
    21bc:	1085883a 	add	r2,r2,r2
    21c0:	00c00034 	movhi	r3,0
    21c4:	18c87504 	addi	r3,r3,8660
    21c8:	10c5883a 	add	r2,r2,r3
    21cc:	11000017 	ldw	r4,0(r2)
    21d0:	2000683a 	jmp	r4
    21d4:	00002364 	muli	zero,zero,141
    21d8:	000023ac 	andhi	zero,zero,142
    21dc:	00002364 	muli	zero,zero,141
    21e0:	000024f8 	rdprs	zero,zero,147
    21e4:	000023ac 	andhi	zero,zero,142
    21e8:	00002530 	cmpltui	zero,zero,148
    21ec:	00002564 	muli	zero,zero,149
    21f0:	00002564 	muli	zero,zero,149
    21f4:	00002564 	muli	zero,zero,149
    21f8:	00002564 	muli	zero,zero,149
    21fc:	00002564 	muli	zero,zero,149
    2200:	00002564 	muli	zero,zero,149
    2204:	00002564 	muli	zero,zero,149
    2208:	00002564 	muli	zero,zero,149
    220c:	00002564 	muli	zero,zero,149
    2210:	000023ac 	andhi	zero,zero,142
    2214:	000023ac 	andhi	zero,zero,142
    2218:	000023ac 	andhi	zero,zero,142
    221c:	000023ac 	andhi	zero,zero,142
    2220:	000023ac 	andhi	zero,zero,142
    2224:	000023ac 	andhi	zero,zero,142
    2228:	000023ac 	andhi	zero,zero,142
    222c:	00002584 	movi	zero,150
    2230:	000023ac 	andhi	zero,zero,142
    2234:	000023ac 	andhi	zero,zero,142
    2238:	000023ac 	andhi	zero,zero,142
    223c:	00002594 	movui	zero,150
    2240:	00002630 	cmpltui	zero,zero,152
    2244:	000023ac 	andhi	zero,zero,142
    2248:	000023ac 	andhi	zero,zero,142
    224c:	0000264c 	andi	zero,zero,153
    2250:	000023ac 	andhi	zero,zero,142
    2254:	000023ac 	andhi	zero,zero,142
    2258:	000023ac 	andhi	zero,zero,142
    225c:	000023ac 	andhi	zero,zero,142
    2260:	00002678 	rdprs	zero,zero,153
    2264:	000023ac 	andhi	zero,zero,142
    2268:	000023ac 	andhi	zero,zero,142
    226c:	000023ac 	andhi	zero,zero,142
    2270:	000023ac 	andhi	zero,zero,142
    2274:	000023ac 	andhi	zero,zero,142
    2278:	000026cc 	andi	zero,zero,155
    227c:	000023ac 	andhi	zero,zero,142
    2280:	000023ac 	andhi	zero,zero,142
    2284:	000023ac 	andhi	zero,zero,142
    2288:	000023ac 	andhi	zero,zero,142
    228c:	000027dc 	xori	zero,zero,159
    2290:	000023ac 	andhi	zero,zero,142
    2294:	000023ac 	andhi	zero,zero,142
    2298:	000023ac 	andhi	zero,zero,142
    229c:	000023ac 	andhi	zero,zero,142
    22a0:	000023ac 	andhi	zero,zero,142
    22a4:	000023ac 	andhi	zero,zero,142
    22a8:	000023ac 	andhi	zero,zero,142
    22ac:	00002584 	movi	zero,150
    22b0:	000023ac 	andhi	zero,zero,142
    22b4:	000023ac 	andhi	zero,zero,142
    22b8:	000023ac 	andhi	zero,zero,142
    22bc:	00002594 	movui	zero,150
    22c0:	00002630 	cmpltui	zero,zero,152
    22c4:	000023ac 	andhi	zero,zero,142
    22c8:	000023ac 	andhi	zero,zero,142
    22cc:	0000264c 	andi	zero,zero,153
    22d0:	000023ac 	andhi	zero,zero,142
    22d4:	000023ac 	andhi	zero,zero,142
    22d8:	000023ac 	andhi	zero,zero,142
    22dc:	000023ac 	andhi	zero,zero,142
    22e0:	00002678 	rdprs	zero,zero,153
    22e4:	000023ac 	andhi	zero,zero,142
    22e8:	000023ac 	andhi	zero,zero,142
    22ec:	000023ac 	andhi	zero,zero,142
    22f0:	000023ac 	andhi	zero,zero,142
    22f4:	000023ac 	andhi	zero,zero,142
    22f8:	000026cc 	andi	zero,zero,155
    22fc:	000023ac 	andhi	zero,zero,142
    2300:	000023ac 	andhi	zero,zero,142
    2304:	000023ac 	andhi	zero,zero,142
    2308:	000023ac 	andhi	zero,zero,142
    230c:	000027dc 	xori	zero,zero,159
    2310:	d900a317 	ldw	r4,652(sp)
    2314:	00805704 	movi	r2,348
    2318:	20ffffc4 	addi	r3,r4,-1
    231c:	10c18c2e 	bgeu	r2,r3,2950 <__svfscanf_r+0xf04>
    2320:	00805744 	movi	r2,349
    2324:	257fa8c4 	addi	r21,r4,-349
    2328:	9c836014 	ori	r18,r19,3456
    232c:	d880a315 	stw	r2,652(sp)
    2330:	0001a106 	br	29b8 <__svfscanf_r+0xf6c>
    2334:	b009883a 	mov	r4,r22
    2338:	800b883a 	mov	r5,r16
    233c:	00014480 	call	1448 <__srefill_r>
    2340:	103eb226 	beq	r2,zero,1e0c <__svfscanf_r+0x3c0>
    2344:	003e1606 	br	1ba0 <__svfscanf_r+0x154>
    2348:	01000284 	movi	r4,10
    234c:	00800034 	movhi	r2,0
    2350:	109ab704 	addi	r2,r2,27356
    2354:	054000c4 	movi	r21,3
    2358:	d900a115 	stw	r4,644(sp)
    235c:	d880a015 	stw	r2,640(sp)
    2360:	003ea806 	br	1e04 <__svfscanf_r+0x3b8>
    2364:	a880200c 	andi	r2,r21,128
    2368:	10001026 	beq	r2,zero,23ac <__svfscanf_r+0x960>
    236c:	00bfdfc4 	movi	r2,-129
    2370:	a8aa703a 	and	r21,r21,r2
    2374:	b9400005 	stb	r5,0(r23)
    2378:	bdc00044 	addi	r23,r23,1
    237c:	80c00117 	ldw	r3,4(r16)
    2380:	8c400044 	addi	r17,r17,1
    2384:	18bfffc4 	addi	r2,r3,-1
    2388:	80800115 	stw	r2,4(r16)
    238c:	0080610e 	bge	zero,r2,2514 <__svfscanf_r+0xac8>
    2390:	80800017 	ldw	r2,0(r16)
    2394:	10800044 	addi	r2,r2,1
    2398:	80800015 	stw	r2,0(r16)
    239c:	d880a317 	ldw	r2,652(sp)
    23a0:	10bfffc4 	addi	r2,r2,-1
    23a4:	d880a315 	stw	r2,652(sp)
    23a8:	103f7d1e 	bne	r2,zero,21a0 <__svfscanf_r+0x754>
    23ac:	d8c09e17 	ldw	r3,632(sp)
    23b0:	18000226 	beq	r3,zero,23bc <__svfscanf_r+0x970>
    23b4:	00bfbfc4 	movi	r2,-257
    23b8:	a8aa703a 	and	r21,r21,r2
    23bc:	90ffffc4 	addi	r3,r18,-1
    23c0:	00800044 	movi	r2,1
    23c4:	10c0cd2e 	bgeu	r2,r3,26fc <__svfscanf_r+0xcb0>
    23c8:	e1003fcc 	andi	r4,fp,255
    23cc:	2100201c 	xori	r4,r4,128
    23d0:	213fe004 	addi	r4,r4,-128
    23d4:	20ffffc4 	addi	r3,r4,-1
    23d8:	00800184 	movi	r2,6
    23dc:	10c01736 	bltu	r2,r3,243c <__svfscanf_r+0x9f0>
    23e0:	00c00084 	movi	r3,2
    23e4:	1900880e 	bge	r3,r4,2608 <__svfscanf_r+0xbbc>
    23e8:	008000c4 	movi	r2,3
    23ec:	1100130e 	bge	r2,r4,243c <__svfscanf_r+0x9f0>
    23f0:	e4ffffc4 	addi	r19,fp,-1
    23f4:	b825883a 	mov	r18,r23
    23f8:	94bfffc4 	addi	r18,r18,-1
    23fc:	91400007 	ldb	r5,0(r18)
    2400:	b009883a 	mov	r4,r22
    2404:	800d883a 	mov	r6,r16
    2408:	00070fc0 	call	70fc <_ungetc_r>
    240c:	9cffffc4 	addi	r19,r19,-1
    2410:	98c03fcc 	andi	r3,r19,255
    2414:	18c0201c 	xori	r3,r3,128
    2418:	18ffe004 	addi	r3,r3,-128
    241c:	00800084 	movi	r2,2
    2420:	18bff51e 	bne	r3,r2,23f8 <__svfscanf_r+0x9ac>
    2424:	e0bfff04 	addi	r2,fp,-4
    2428:	10803fcc 	andi	r2,r2,255
    242c:	b887c83a 	sub	r3,r23,r2
    2430:	8885c83a 	sub	r2,r17,r2
    2434:	147fffc4 	addi	r17,r2,-1
    2438:	1dffffc4 	addi	r23,r3,-1
    243c:	a880400c 	andi	r2,r21,256
    2440:	10001226 	beq	r2,zero,248c <__svfscanf_r+0xa40>
    2444:	a881000c 	andi	r2,r21,1024
    2448:	1000651e 	bne	r2,zero,25e0 <__svfscanf_r+0xb94>
    244c:	bdffffc4 	addi	r23,r23,-1
    2450:	b9400007 	ldb	r5,0(r23)
    2454:	00801944 	movi	r2,101
    2458:	8c7fffc4 	addi	r17,r17,-1
    245c:	28800826 	beq	r5,r2,2480 <__svfscanf_r+0xa34>
    2460:	00801144 	movi	r2,69
    2464:	28800626 	beq	r5,r2,2480 <__svfscanf_r+0xa34>
    2468:	bdffffc4 	addi	r23,r23,-1
    246c:	b009883a 	mov	r4,r22
    2470:	800d883a 	mov	r6,r16
    2474:	00070fc0 	call	70fc <_ungetc_r>
    2478:	b9400007 	ldb	r5,0(r23)
    247c:	8c7fffc4 	addi	r17,r17,-1
    2480:	b009883a 	mov	r4,r22
    2484:	800d883a 	mov	r6,r16
    2488:	00070fc0 	call	70fc <_ungetc_r>
    248c:	a880040c 	andi	r2,r21,16
    2490:	103d811e 	bne	r2,zero,1a98 <__svfscanf_r+0x4c>
    2494:	a8c1800c 	andi	r3,r21,1536
    2498:	00810004 	movi	r2,1024
    249c:	b8000005 	stb	zero,0(r23)
    24a0:	1880bb26 	beq	r3,r2,2790 <__svfscanf_r+0xd44>
    24a4:	d8809d17 	ldw	r2,628(sp)
    24a8:	1000a61e 	bne	r2,zero,2744 <__svfscanf_r+0xcf8>
    24ac:	d940a617 	ldw	r5,664(sp)
    24b0:	b009883a 	mov	r4,r22
    24b4:	000d883a 	mov	r6,zero
    24b8:	0004f380 	call	4f38 <_strtod_r>
    24bc:	a900004c 	andi	r4,r21,1
    24c0:	2009003a 	cmpeq	r4,r4,zero
    24c4:	1025883a 	mov	r18,r2
    24c8:	1827883a 	mov	r19,r3
    24cc:	2000951e 	bne	r4,zero,2724 <__svfscanf_r+0xcd8>
    24d0:	d8c0a417 	ldw	r3,656(sp)
    24d4:	18800017 	ldw	r2,0(r3)
    24d8:	1d400104 	addi	r21,r3,4
    24dc:	14c00115 	stw	r19,4(r2)
    24e0:	14800015 	stw	r18,0(r2)
    24e4:	d8c0a217 	ldw	r3,648(sp)
    24e8:	dd40a415 	stw	r21,656(sp)
    24ec:	18c00044 	addi	r3,r3,1
    24f0:	d8c0a215 	stw	r3,648(sp)
    24f4:	003d6806 	br	1a98 <__svfscanf_r+0x4c>
    24f8:	a880800c 	andi	r2,r21,512
    24fc:	103fab26 	beq	r2,zero,23ac <__svfscanf_r+0x960>
    2500:	d9009e17 	ldw	r4,632(sp)
    2504:	00bf5fc4 	movi	r2,-641
    2508:	a8aa703a 	and	r21,r21,r2
    250c:	d9009f15 	stw	r4,636(sp)
    2510:	003f9806 	br	2374 <__svfscanf_r+0x928>
    2514:	b009883a 	mov	r4,r22
    2518:	800b883a 	mov	r5,r16
    251c:	d980a715 	stw	r6,668(sp)
    2520:	00014480 	call	1448 <__srefill_r>
    2524:	d980a717 	ldw	r6,668(sp)
    2528:	103f9c26 	beq	r2,zero,239c <__svfscanf_r+0x950>
    252c:	003f9f06 	br	23ac <__svfscanf_r+0x960>
    2530:	a880400c 	andi	r2,r21,256
    2534:	10000b26 	beq	r2,zero,2564 <__svfscanf_r+0xb18>
    2538:	00bfdfc4 	movi	r2,-129
    253c:	a8aa703a 	and	r21,r21,r2
    2540:	d8809e17 	ldw	r2,632(sp)
    2544:	10800044 	addi	r2,r2,1
    2548:	d8809e15 	stw	r2,632(sp)
    254c:	303f8b26 	beq	r6,zero,237c <__svfscanf_r+0x930>
    2550:	d8c0a317 	ldw	r3,652(sp)
    2554:	31bfffc4 	addi	r6,r6,-1
    2558:	18c00044 	addi	r3,r3,1
    255c:	d8c0a315 	stw	r3,652(sp)
    2560:	003f8606 	br	237c <__svfscanf_r+0x930>
    2564:	e0803fcc 	andi	r2,fp,255
    2568:	1080201c 	xori	r2,r2,128
    256c:	10bfe004 	addi	r2,r2,-128
    2570:	9085883a 	add	r2,r18,r2
    2574:	103f8d1e 	bne	r2,zero,23ac <__svfscanf_r+0x960>
    2578:	00bf9fc4 	movi	r2,-385
    257c:	a8aa703a 	and	r21,r21,r2
    2580:	003f7c06 	br	2374 <__svfscanf_r+0x928>
    2584:	00800044 	movi	r2,1
    2588:	90bf881e 	bne	r18,r2,23ac <__svfscanf_r+0x960>
    258c:	04800084 	movi	r18,2
    2590:	003f7806 	br	2374 <__svfscanf_r+0x928>
    2594:	a8c1400c 	andi	r3,r21,1280
    2598:	00810004 	movi	r2,1024
    259c:	18800426 	beq	r3,r2,25b0 <__svfscanf_r+0xb64>
    25a0:	a884703a 	and	r2,r21,r2
    25a4:	103f8126 	beq	r2,zero,23ac <__svfscanf_r+0x960>
    25a8:	d8809e17 	ldw	r2,632(sp)
    25ac:	103f8326 	beq	r2,zero,23bc <__svfscanf_r+0x970>
    25b0:	a880800c 	andi	r2,r21,512
    25b4:	1000051e 	bne	r2,zero,25cc <__svfscanf_r+0xb80>
    25b8:	d8c09e17 	ldw	r3,632(sp)
    25bc:	d9009f17 	ldw	r4,636(sp)
    25c0:	ddc09c15 	stw	r23,624(sp)
    25c4:	1907c83a 	sub	r3,r3,r4
    25c8:	d8c09d15 	stw	r3,628(sp)
    25cc:	00be7fc4 	movi	r2,-1537
    25d0:	a884703a 	and	r2,r21,r2
    25d4:	15406014 	ori	r21,r2,384
    25d8:	d8009e15 	stw	zero,632(sp)
    25dc:	003f6506 	br	2374 <__svfscanf_r+0x928>
    25e0:	d900a617 	ldw	r4,664(sp)
    25e4:	25fd4e2e 	bgeu	r4,r23,1b20 <__svfscanf_r+0xd4>
    25e8:	bdffffc4 	addi	r23,r23,-1
    25ec:	b9400007 	ldb	r5,0(r23)
    25f0:	b009883a 	mov	r4,r22
    25f4:	800d883a 	mov	r6,r16
    25f8:	00070fc0 	call	70fc <_ungetc_r>
    25fc:	d880a617 	ldw	r2,664(sp)
    2600:	15fff936 	bltu	r2,r23,25e8 <__svfscanf_r+0xb9c>
    2604:	003d4606 	br	1b20 <__svfscanf_r+0xd4>
    2608:	d900a617 	ldw	r4,664(sp)
    260c:	25fd442e 	bgeu	r4,r23,1b20 <__svfscanf_r+0xd4>
    2610:	bdffffc4 	addi	r23,r23,-1
    2614:	b9400007 	ldb	r5,0(r23)
    2618:	b009883a 	mov	r4,r22
    261c:	800d883a 	mov	r6,r16
    2620:	00070fc0 	call	70fc <_ungetc_r>
    2624:	d8c0a617 	ldw	r3,664(sp)
    2628:	1dfff936 	bltu	r3,r23,2610 <__svfscanf_r+0xbc4>
    262c:	003d3c06 	br	1b20 <__svfscanf_r+0xd4>
    2630:	e0c03fcc 	andi	r3,fp,255
    2634:	18c0201c 	xori	r3,r3,128
    2638:	18ffe004 	addi	r3,r3,-128
    263c:	00800084 	movi	r2,2
    2640:	18bf5a1e 	bne	r3,r2,23ac <__svfscanf_r+0x960>
    2644:	070000c4 	movi	fp,3
    2648:	003f4a06 	br	2374 <__svfscanf_r+0x928>
    264c:	e0c03fcc 	andi	r3,fp,255
    2650:	18c0201c 	xori	r3,r3,128
    2654:	18ffe004 	addi	r3,r3,-128
    2658:	1800231e 	bne	r3,zero,26e8 <__svfscanf_r+0xc9c>
    265c:	a8c1c00c 	andi	r3,r21,1792
    2660:	0081c004 	movi	r2,1792
    2664:	18bf511e 	bne	r3,r2,23ac <__svfscanf_r+0x960>
    2668:	00be1fc4 	movi	r2,-1921
    266c:	a8aa703a 	and	r21,r21,r2
    2670:	07000044 	movi	fp,1
    2674:	003f3f06 	br	2374 <__svfscanf_r+0x928>
    2678:	9000101e 	bne	r18,zero,26bc <__svfscanf_r+0xc70>
    267c:	a8c1c00c 	andi	r3,r21,1792
    2680:	0081c004 	movi	r2,1792
    2684:	18800926 	beq	r3,r2,26ac <__svfscanf_r+0xc60>
    2688:	e0c03fcc 	andi	r3,fp,255
    268c:	18c0201c 	xori	r3,r3,128
    2690:	18ffe004 	addi	r3,r3,-128
    2694:	00800044 	movi	r2,1
    2698:	18800226 	beq	r3,r2,26a4 <__svfscanf_r+0xc58>
    269c:	00800104 	movi	r2,4
    26a0:	18bf421e 	bne	r3,r2,23ac <__svfscanf_r+0x960>
    26a4:	e7000044 	addi	fp,fp,1
    26a8:	003f3206 	br	2374 <__svfscanf_r+0x928>
    26ac:	00be1fc4 	movi	r2,-1921
    26b0:	a8aa703a 	and	r21,r21,r2
    26b4:	04800044 	movi	r18,1
    26b8:	003f2e06 	br	2374 <__svfscanf_r+0x928>
    26bc:	00800084 	movi	r2,2
    26c0:	90bff11e 	bne	r18,r2,2688 <__svfscanf_r+0xc3c>
    26c4:	048000c4 	movi	r18,3
    26c8:	003f2a06 	br	2374 <__svfscanf_r+0x928>
    26cc:	e0c03fcc 	andi	r3,fp,255
    26d0:	18c0201c 	xori	r3,r3,128
    26d4:	18ffe004 	addi	r3,r3,-128
    26d8:	00800184 	movi	r2,6
    26dc:	18bf331e 	bne	r3,r2,23ac <__svfscanf_r+0x960>
    26e0:	070001c4 	movi	fp,7
    26e4:	003f2306 	br	2374 <__svfscanf_r+0x928>
    26e8:	008000c4 	movi	r2,3
    26ec:	18bfed26 	beq	r3,r2,26a4 <__svfscanf_r+0xc58>
    26f0:	00800144 	movi	r2,5
    26f4:	18bfeb26 	beq	r3,r2,26a4 <__svfscanf_r+0xc58>
    26f8:	003f2c06 	br	23ac <__svfscanf_r+0x960>
    26fc:	d900a617 	ldw	r4,664(sp)
    2700:	25fd072e 	bgeu	r4,r23,1b20 <__svfscanf_r+0xd4>
    2704:	bdffffc4 	addi	r23,r23,-1
    2708:	b9400007 	ldb	r5,0(r23)
    270c:	b009883a 	mov	r4,r22
    2710:	800d883a 	mov	r6,r16
    2714:	00070fc0 	call	70fc <_ungetc_r>
    2718:	d880a617 	ldw	r2,664(sp)
    271c:	15fff936 	bltu	r2,r23,2704 <__svfscanf_r+0xcb8>
    2720:	003cff06 	br	1b20 <__svfscanf_r+0xd4>
    2724:	a880008c 	andi	r2,r21,2
    2728:	10002026 	beq	r2,zero,27ac <__svfscanf_r+0xd60>
    272c:	d900a417 	ldw	r4,656(sp)
    2730:	20800017 	ldw	r2,0(r4)
    2734:	25400104 	addi	r21,r4,4
    2738:	10c00115 	stw	r3,4(r2)
    273c:	14800015 	stw	r18,0(r2)
    2740:	003f6806 	br	24e4 <__svfscanf_r+0xa98>
    2744:	d8c09c17 	ldw	r3,624(sp)
    2748:	b009883a 	mov	r4,r22
    274c:	000d883a 	mov	r6,zero
    2750:	19400044 	addi	r5,r3,1
    2754:	01c00284 	movi	r7,10
    2758:	000655c0 	call	655c <_strtol_r>
    275c:	d9009d17 	ldw	r4,628(sp)
    2760:	110dc83a 	sub	r6,r2,r4
    2764:	d8c0a617 	ldw	r3,664(sp)
    2768:	d9009c17 	ldw	r4,624(sp)
    276c:	188054c4 	addi	r2,r3,339
    2770:	20800236 	bltu	r4,r2,277c <__svfscanf_r+0xd30>
    2774:	18805484 	addi	r2,r3,338
    2778:	d8809c15 	stw	r2,624(sp)
    277c:	d9009c17 	ldw	r4,624(sp)
    2780:	01400074 	movhi	r5,1
    2784:	29474704 	addi	r5,r5,7452
    2788:	0004d600 	call	4d60 <sprintf>
    278c:	003f4706 	br	24ac <__svfscanf_r+0xa60>
    2790:	d8c09e17 	ldw	r3,632(sp)
    2794:	d9009f17 	ldw	r4,636(sp)
    2798:	1905c83a 	sub	r2,r3,r4
    279c:	103f4326 	beq	r2,zero,24ac <__svfscanf_r+0xa60>
    27a0:	008dc83a 	sub	r6,zero,r2
    27a4:	ddc09c15 	stw	r23,624(sp)
    27a8:	003fee06 	br	2764 <__svfscanf_r+0xd18>
    27ac:	d880a417 	ldw	r2,656(sp)
    27b0:	9009883a 	mov	r4,r18
    27b4:	180b883a 	mov	r5,r3
    27b8:	15c00017 	ldw	r23,0(r2)
    27bc:	15400104 	addi	r21,r2,4
    27c0:	0004c680 	call	4c68 <__isnand>
    27c4:	10021c1e 	bne	r2,zero,3038 <__svfscanf_r+0x15ec>
    27c8:	980b883a 	mov	r5,r19
    27cc:	9009883a 	mov	r4,r18
    27d0:	000e6880 	call	e688 <__truncdfsf2>
    27d4:	b8800015 	stw	r2,0(r23)
    27d8:	003f4206 	br	24e4 <__svfscanf_r+0xa98>
    27dc:	e0c03fcc 	andi	r3,fp,255
    27e0:	18c0201c 	xori	r3,r3,128
    27e4:	18ffe004 	addi	r3,r3,-128
    27e8:	008001c4 	movi	r2,7
    27ec:	18beef1e 	bne	r3,r2,23ac <__svfscanf_r+0x960>
    27f0:	07000204 	movi	fp,8
    27f4:	003edf06 	br	2374 <__svfscanf_r+0x928>
    27f8:	d900a317 	ldw	r4,652(sp)
    27fc:	208002a4 	muli	r2,r4,10
    2800:	1145883a 	add	r2,r2,r5
    2804:	10bff404 	addi	r2,r2,-48
    2808:	d880a315 	stw	r2,652(sp)
    280c:	003ceb06 	br	1bbc <__svfscanf_r+0x170>
    2810:	9880040c 	andi	r2,r19,16
    2814:	10001426 	beq	r2,zero,2868 <__svfscanf_r+0xe1c>
    2818:	0027883a 	mov	r19,zero
    281c:	00000906 	br	2844 <__svfscanf_r+0xdf8>
    2820:	80c00117 	ldw	r3,4(r16)
    2824:	d880a317 	ldw	r2,652(sp)
    2828:	29800044 	addi	r6,r5,1
    282c:	18ffffc4 	addi	r3,r3,-1
    2830:	9cc00044 	addi	r19,r19,1
    2834:	81800015 	stw	r6,0(r16)
    2838:	80c00115 	stw	r3,4(r16)
    283c:	14fdf726 	beq	r2,r19,201c <__svfscanf_r+0x5d0>
    2840:	00c02c0e 	bge	zero,r3,28f4 <__svfscanf_r+0xea8>
    2844:	81400017 	ldw	r5,0(r16)
    2848:	90800017 	ldw	r2,0(r18)
    284c:	28c00003 	ldbu	r3,0(r5)
    2850:	1887883a 	add	r3,r3,r2
    2854:	19000003 	ldbu	r4,0(r3)
    2858:	2100020c 	andi	r4,r4,8
    285c:	203ff026 	beq	r4,zero,2820 <__svfscanf_r+0xdd4>
    2860:	8ce3883a 	add	r17,r17,r19
    2864:	003c8c06 	br	1a98 <__svfscanf_r+0x4c>
    2868:	d8c0a417 	ldw	r3,656(sp)
    286c:	1d400017 	ldw	r21,0(r3)
    2870:	a827883a 	mov	r19,r21
    2874:	00000e06 	br	28b0 <__svfscanf_r+0xe64>
    2878:	80800117 	ldw	r2,4(r16)
    287c:	d900a317 	ldw	r4,652(sp)
    2880:	29800044 	addi	r6,r5,1
    2884:	10ffffc4 	addi	r3,r2,-1
    2888:	213fffc4 	addi	r4,r4,-1
    288c:	d900a315 	stw	r4,652(sp)
    2890:	80c00115 	stw	r3,4(r16)
    2894:	28800003 	ldbu	r2,0(r5)
    2898:	98800005 	stb	r2,0(r19)
    289c:	81800015 	stw	r6,0(r16)
    28a0:	9cc00044 	addi	r19,r19,1
    28a4:	20000926 	beq	r4,zero,28cc <__svfscanf_r+0xe80>
    28a8:	80800117 	ldw	r2,4(r16)
    28ac:	0080170e 	bge	zero,r2,290c <__svfscanf_r+0xec0>
    28b0:	81400017 	ldw	r5,0(r16)
    28b4:	90800017 	ldw	r2,0(r18)
    28b8:	28c00003 	ldbu	r3,0(r5)
    28bc:	1887883a 	add	r3,r3,r2
    28c0:	19000003 	ldbu	r4,0(r3)
    28c4:	2100020c 	andi	r4,r4,8
    28c8:	203feb26 	beq	r4,zero,2878 <__svfscanf_r+0xe2c>
    28cc:	9d45c83a 	sub	r2,r19,r21
    28d0:	d8c0a217 	ldw	r3,648(sp)
    28d4:	88a3883a 	add	r17,r17,r2
    28d8:	d880a417 	ldw	r2,656(sp)
    28dc:	18c00044 	addi	r3,r3,1
    28e0:	d8c0a215 	stw	r3,648(sp)
    28e4:	10800104 	addi	r2,r2,4
    28e8:	d880a415 	stw	r2,656(sp)
    28ec:	98000005 	stb	zero,0(r19)
    28f0:	003c6906 	br	1a98 <__svfscanf_r+0x4c>
    28f4:	b009883a 	mov	r4,r22
    28f8:	800b883a 	mov	r5,r16
    28fc:	00014480 	call	1448 <__srefill_r>
    2900:	103fd026 	beq	r2,zero,2844 <__svfscanf_r+0xdf8>
    2904:	8ce3883a 	add	r17,r17,r19
    2908:	003c6306 	br	1a98 <__svfscanf_r+0x4c>
    290c:	b009883a 	mov	r4,r22
    2910:	800b883a 	mov	r5,r16
    2914:	00014480 	call	1448 <__srefill_r>
    2918:	103fe526 	beq	r2,zero,28b0 <__svfscanf_r+0xe64>
    291c:	003feb06 	br	28cc <__svfscanf_r+0xe80>
    2920:	d900a317 	ldw	r4,652(sp)
    2924:	9d41e014 	ori	r21,r19,1920
    2928:	2000821e 	bne	r4,zero,2b34 <__svfscanf_r+0x10e8>
    292c:	d8c04404 	addi	r3,sp,272
    2930:	182f883a 	mov	r23,r3
    2934:	0039883a 	mov	fp,zero
    2938:	d8c0a615 	stw	r3,664(sp)
    293c:	d8009c15 	stw	zero,624(sp)
    2940:	d8009d15 	stw	zero,628(sp)
    2944:	d8009f15 	stw	zero,636(sp)
    2948:	d8009e15 	stw	zero,632(sp)
    294c:	003e9e06 	br	23c8 <__svfscanf_r+0x97c>
    2950:	d900a317 	ldw	r4,652(sp)
    2954:	9c836014 	ori	r18,r19,3456
    2958:	2000161e 	bne	r4,zero,29b4 <__svfscanf_r+0xf68>
    295c:	d8804404 	addi	r2,sp,272
    2960:	d880a615 	stw	r2,664(sp)
    2964:	002f883a 	mov	r23,zero
    2968:	1027883a 	mov	r19,r2
    296c:	9080400c 	andi	r2,r18,256
    2970:	10000926 	beq	r2,zero,2998 <__svfscanf_r+0xf4c>
    2974:	d8c0a617 	ldw	r3,664(sp)
    2978:	1cc0052e 	bgeu	r3,r19,2990 <__svfscanf_r+0xf44>
    297c:	9cffffc4 	addi	r19,r19,-1
    2980:	99400007 	ldb	r5,0(r19)
    2984:	b009883a 	mov	r4,r22
    2988:	800d883a 	mov	r6,r16
    298c:	00070fc0 	call	70fc <_ungetc_r>
    2990:	d900a617 	ldw	r4,664(sp)
    2994:	24fc6226 	beq	r4,r19,1b20 <__svfscanf_r+0xd4>
    2998:	9080040c 	andi	r2,r18,16
    299c:	10006726 	beq	r2,zero,2b3c <__svfscanf_r+0x10f0>
    29a0:	d8c0a617 	ldw	r3,664(sp)
    29a4:	98c5c83a 	sub	r2,r19,r3
    29a8:	b885883a 	add	r2,r23,r2
    29ac:	88a3883a 	add	r17,r17,r2
    29b0:	003c3906 	br	1a98 <__svfscanf_r+0x4c>
    29b4:	002b883a 	mov	r21,zero
    29b8:	d8c04404 	addi	r3,sp,272
    29bc:	d8c0a615 	stw	r3,664(sp)
    29c0:	002f883a 	mov	r23,zero
    29c4:	1827883a 	mov	r19,r3
    29c8:	81800017 	ldw	r6,0(r16)
    29cc:	00c01344 	movi	r3,77
    29d0:	31400003 	ldbu	r5,0(r6)
    29d4:	28bff544 	addi	r2,r5,-43
    29d8:	10803fcc 	andi	r2,r2,255
    29dc:	18bfe336 	bltu	r3,r2,296c <__svfscanf_r+0xf20>
    29e0:	1085883a 	add	r2,r2,r2
    29e4:	1085883a 	add	r2,r2,r2
    29e8:	00c00034 	movhi	r3,0
    29ec:	18ca7f04 	addi	r3,r3,10748
    29f0:	10c5883a 	add	r2,r2,r3
    29f4:	11000017 	ldw	r4,0(r2)
    29f8:	2000683a 	jmp	r4
    29fc:	00002b90 	cmplti	zero,zero,174
    2a00:	0000296c 	andhi	zero,zero,165
    2a04:	00002b90 	cmplti	zero,zero,174
    2a08:	0000296c 	andhi	zero,zero,165
    2a0c:	0000296c 	andhi	zero,zero,165
    2a10:	00002bd4 	movui	zero,175
    2a14:	00002cd0 	cmplti	zero,zero,179
    2a18:	00002cd0 	cmplti	zero,zero,179
    2a1c:	00002cd0 	cmplti	zero,zero,179
    2a20:	00002cd0 	cmplti	zero,zero,179
    2a24:	00002cd0 	cmplti	zero,zero,179
    2a28:	00002cd0 	cmplti	zero,zero,179
    2a2c:	00002cd0 	cmplti	zero,zero,179
    2a30:	00002cf8 	rdprs	zero,zero,179
    2a34:	00002cf8 	rdprs	zero,zero,179
    2a38:	0000296c 	andhi	zero,zero,165
    2a3c:	0000296c 	andhi	zero,zero,165
    2a40:	0000296c 	andhi	zero,zero,165
    2a44:	0000296c 	andhi	zero,zero,165
    2a48:	0000296c 	andhi	zero,zero,165
    2a4c:	0000296c 	andhi	zero,zero,165
    2a50:	0000296c 	andhi	zero,zero,165
    2a54:	00002d28 	cmpgeui	zero,zero,180
    2a58:	00002d28 	cmpgeui	zero,zero,180
    2a5c:	00002d28 	cmpgeui	zero,zero,180
    2a60:	00002d28 	cmpgeui	zero,zero,180
    2a64:	00002d28 	cmpgeui	zero,zero,180
    2a68:	00002d28 	cmpgeui	zero,zero,180
    2a6c:	0000296c 	andhi	zero,zero,165
    2a70:	0000296c 	andhi	zero,zero,165
    2a74:	0000296c 	andhi	zero,zero,165
    2a78:	0000296c 	andhi	zero,zero,165
    2a7c:	0000296c 	andhi	zero,zero,165
    2a80:	0000296c 	andhi	zero,zero,165
    2a84:	0000296c 	andhi	zero,zero,165
    2a88:	0000296c 	andhi	zero,zero,165
    2a8c:	0000296c 	andhi	zero,zero,165
    2a90:	0000296c 	andhi	zero,zero,165
    2a94:	0000296c 	andhi	zero,zero,165
    2a98:	0000296c 	andhi	zero,zero,165
    2a9c:	0000296c 	andhi	zero,zero,165
    2aa0:	0000296c 	andhi	zero,zero,165
    2aa4:	0000296c 	andhi	zero,zero,165
    2aa8:	0000296c 	andhi	zero,zero,165
    2aac:	0000296c 	andhi	zero,zero,165
    2ab0:	00002d38 	rdprs	zero,zero,180
    2ab4:	0000296c 	andhi	zero,zero,165
    2ab8:	0000296c 	andhi	zero,zero,165
    2abc:	0000296c 	andhi	zero,zero,165
    2ac0:	0000296c 	andhi	zero,zero,165
    2ac4:	0000296c 	andhi	zero,zero,165
    2ac8:	0000296c 	andhi	zero,zero,165
    2acc:	0000296c 	andhi	zero,zero,165
    2ad0:	0000296c 	andhi	zero,zero,165
    2ad4:	00002d28 	cmpgeui	zero,zero,180
    2ad8:	00002d28 	cmpgeui	zero,zero,180
    2adc:	00002d28 	cmpgeui	zero,zero,180
    2ae0:	00002d28 	cmpgeui	zero,zero,180
    2ae4:	00002d28 	cmpgeui	zero,zero,180
    2ae8:	00002d28 	cmpgeui	zero,zero,180
    2aec:	0000296c 	andhi	zero,zero,165
    2af0:	0000296c 	andhi	zero,zero,165
    2af4:	0000296c 	andhi	zero,zero,165
    2af8:	0000296c 	andhi	zero,zero,165
    2afc:	0000296c 	andhi	zero,zero,165
    2b00:	0000296c 	andhi	zero,zero,165
    2b04:	0000296c 	andhi	zero,zero,165
    2b08:	0000296c 	andhi	zero,zero,165
    2b0c:	0000296c 	andhi	zero,zero,165
    2b10:	0000296c 	andhi	zero,zero,165
    2b14:	0000296c 	andhi	zero,zero,165
    2b18:	0000296c 	andhi	zero,zero,165
    2b1c:	0000296c 	andhi	zero,zero,165
    2b20:	0000296c 	andhi	zero,zero,165
    2b24:	0000296c 	andhi	zero,zero,165
    2b28:	0000296c 	andhi	zero,zero,165
    2b2c:	0000296c 	andhi	zero,zero,165
    2b30:	00002d38 	rdprs	zero,zero,180
    2b34:	000d883a 	mov	r6,zero
    2b38:	003d9006 	br	217c <__svfscanf_r+0x730>
    2b3c:	98000005 	stb	zero,0(r19)
    2b40:	d8c0a017 	ldw	r3,640(sp)
    2b44:	d940a617 	ldw	r5,664(sp)
    2b48:	d9c0a117 	ldw	r7,644(sp)
    2b4c:	b009883a 	mov	r4,r22
    2b50:	000d883a 	mov	r6,zero
    2b54:	183ee83a 	callr	r3
    2b58:	1007883a 	mov	r3,r2
    2b5c:	9080080c 	andi	r2,r18,32
    2b60:	10004d1e 	bne	r2,zero,2c98 <__svfscanf_r+0x124c>
    2b64:	9080010c 	andi	r2,r18,4
    2b68:	10003426 	beq	r2,zero,2c3c <__svfscanf_r+0x11f0>
    2b6c:	d900a417 	ldw	r4,656(sp)
    2b70:	20800017 	ldw	r2,0(r4)
    2b74:	21000104 	addi	r4,r4,4
    2b78:	d900a415 	stw	r4,656(sp)
    2b7c:	10c0000d 	sth	r3,0(r2)
    2b80:	d880a217 	ldw	r2,648(sp)
    2b84:	10800044 	addi	r2,r2,1
    2b88:	d880a215 	stw	r2,648(sp)
    2b8c:	003f8406 	br	29a0 <__svfscanf_r+0xf54>
    2b90:	9080200c 	andi	r2,r18,128
    2b94:	103f7526 	beq	r2,zero,296c <__svfscanf_r+0xf20>
    2b98:	00bfdfc4 	movi	r2,-129
    2b9c:	90a4703a 	and	r18,r18,r2
    2ba0:	99400005 	stb	r5,0(r19)
    2ba4:	9cc00044 	addi	r19,r19,1
    2ba8:	80c00117 	ldw	r3,4(r16)
    2bac:	18ffffc4 	addi	r3,r3,-1
    2bb0:	80c00115 	stw	r3,4(r16)
    2bb4:	00c0130e 	bge	zero,r3,2c04 <__svfscanf_r+0x11b8>
    2bb8:	31800044 	addi	r6,r6,1
    2bbc:	81800015 	stw	r6,0(r16)
    2bc0:	d880a317 	ldw	r2,652(sp)
    2bc4:	10bfffc4 	addi	r2,r2,-1
    2bc8:	d880a315 	stw	r2,652(sp)
    2bcc:	103f7e1e 	bne	r2,zero,29c8 <__svfscanf_r+0xf7c>
    2bd0:	003f6606 	br	296c <__svfscanf_r+0xf20>
    2bd4:	9082000c 	andi	r2,r18,2048
    2bd8:	103ff126 	beq	r2,zero,2ba0 <__svfscanf_r+0x1154>
    2bdc:	d8c0a117 	ldw	r3,644(sp)
    2be0:	1800031e 	bne	r3,zero,2bf0 <__svfscanf_r+0x11a4>
    2be4:	01000204 	movi	r4,8
    2be8:	94808014 	ori	r18,r18,512
    2bec:	d900a115 	stw	r4,644(sp)
    2bf0:	9081000c 	andi	r2,r18,1024
    2bf4:	10000826 	beq	r2,zero,2c18 <__svfscanf_r+0x11cc>
    2bf8:	00be9fc4 	movi	r2,-1409
    2bfc:	90a4703a 	and	r18,r18,r2
    2c00:	003fe706 	br	2ba0 <__svfscanf_r+0x1154>
    2c04:	b009883a 	mov	r4,r22
    2c08:	800b883a 	mov	r5,r16
    2c0c:	00014480 	call	1448 <__srefill_r>
    2c10:	103feb26 	beq	r2,zero,2bc0 <__svfscanf_r+0x1174>
    2c14:	003f5506 	br	296c <__svfscanf_r+0xf20>
    2c18:	a8000426 	beq	r21,zero,2c2c <__svfscanf_r+0x11e0>
    2c1c:	d880a317 	ldw	r2,652(sp)
    2c20:	ad7fffc4 	addi	r21,r21,-1
    2c24:	10800044 	addi	r2,r2,1
    2c28:	d880a315 	stw	r2,652(sp)
    2c2c:	00bf1fc4 	movi	r2,-897
    2c30:	90a4703a 	and	r18,r18,r2
    2c34:	bdc00044 	addi	r23,r23,1
    2c38:	003fdb06 	br	2ba8 <__svfscanf_r+0x115c>
    2c3c:	9080004c 	andi	r2,r18,1
    2c40:	1005003a 	cmpeq	r2,r2,zero
    2c44:	10001426 	beq	r2,zero,2c98 <__svfscanf_r+0x124c>
    2c48:	9080008c 	andi	r2,r18,2
    2c4c:	10001226 	beq	r2,zero,2c98 <__svfscanf_r+0x124c>
    2c50:	d8c0a017 	ldw	r3,640(sp)
    2c54:	00800034 	movhi	r2,0
    2c58:	109ab704 	addi	r2,r2,27356
    2c5c:	18801426 	beq	r3,r2,2cb0 <__svfscanf_r+0x1264>
    2c60:	d9c0a117 	ldw	r7,644(sp)
    2c64:	d940a617 	ldw	r5,664(sp)
    2c68:	000d883a 	mov	r6,zero
    2c6c:	b009883a 	mov	r4,r22
    2c70:	00067c40 	call	67c4 <_strtoll_r>
    2c74:	100d883a 	mov	r6,r2
    2c78:	180f883a 	mov	r7,r3
    2c7c:	d900a417 	ldw	r4,656(sp)
    2c80:	20800017 	ldw	r2,0(r4)
    2c84:	21000104 	addi	r4,r4,4
    2c88:	d900a415 	stw	r4,656(sp)
    2c8c:	11c00115 	stw	r7,4(r2)
    2c90:	11800015 	stw	r6,0(r2)
    2c94:	003fba06 	br	2b80 <__svfscanf_r+0x1134>
    2c98:	d900a417 	ldw	r4,656(sp)
    2c9c:	20800017 	ldw	r2,0(r4)
    2ca0:	21000104 	addi	r4,r4,4
    2ca4:	d900a415 	stw	r4,656(sp)
    2ca8:	10c00015 	stw	r3,0(r2)
    2cac:	003fb406 	br	2b80 <__svfscanf_r+0x1134>
    2cb0:	d9c0a117 	ldw	r7,644(sp)
    2cb4:	d940a617 	ldw	r5,664(sp)
    2cb8:	000d883a 	mov	r6,zero
    2cbc:	b009883a 	mov	r4,r22
    2cc0:	0006d300 	call	6d30 <_strtoull_r>
    2cc4:	100d883a 	mov	r6,r2
    2cc8:	180f883a 	mov	r7,r3
    2ccc:	003feb06 	br	2c7c <__svfscanf_r+0x1230>
    2cd0:	d8c0a117 	ldw	r3,644(sp)
    2cd4:	18c5883a 	add	r2,r3,r3
    2cd8:	00c00074 	movhi	r3,1
    2cdc:	18c74884 	addi	r3,r3,7458
    2ce0:	10c5883a 	add	r2,r2,r3
    2ce4:	1080000f 	ldh	r2,0(r2)
    2ce8:	00fd1fc4 	movi	r3,-2945
    2cec:	90e4703a 	and	r18,r18,r3
    2cf0:	d880a115 	stw	r2,644(sp)
    2cf4:	003faa06 	br	2ba0 <__svfscanf_r+0x1154>
    2cf8:	d900a117 	ldw	r4,644(sp)
    2cfc:	00c00074 	movhi	r3,1
    2d00:	18c74884 	addi	r3,r3,7458
    2d04:	2105883a 	add	r2,r4,r4
    2d08:	10c5883a 	add	r2,r2,r3
    2d0c:	1080000f 	ldh	r2,0(r2)
    2d10:	00c00204 	movi	r3,8
    2d14:	d880a115 	stw	r2,644(sp)
    2d18:	18bf140e 	bge	r3,r2,296c <__svfscanf_r+0xf20>
    2d1c:	00bd1fc4 	movi	r2,-2945
    2d20:	90a4703a 	and	r18,r18,r2
    2d24:	003f9e06 	br	2ba0 <__svfscanf_r+0x1154>
    2d28:	d8c0a117 	ldw	r3,644(sp)
    2d2c:	00800284 	movi	r2,10
    2d30:	10fffa16 	blt	r2,r3,2d1c <__svfscanf_r+0x12d0>
    2d34:	003f0d06 	br	296c <__svfscanf_r+0xf20>
    2d38:	90c1800c 	andi	r3,r18,1536
    2d3c:	00808004 	movi	r2,512
    2d40:	18bf0a1e 	bne	r3,r2,296c <__svfscanf_r+0xf20>
    2d44:	00bf7fc4 	movi	r2,-513
    2d48:	9084703a 	and	r2,r18,r2
    2d4c:	01000404 	movi	r4,16
    2d50:	14814014 	ori	r18,r2,1280
    2d54:	d900a115 	stw	r4,644(sp)
    2d58:	003f9106 	br	2ba0 <__svfscanf_r+0x1154>
    2d5c:	d880a417 	ldw	r2,656(sp)
    2d60:	dd400404 	addi	r21,sp,16
    2d64:	14800017 	ldw	r18,0(r2)
    2d68:	9027883a 	mov	r19,r18
    2d6c:	81000017 	ldw	r4,0(r16)
    2d70:	20800003 	ldbu	r2,0(r4)
    2d74:	a885883a 	add	r2,r21,r2
    2d78:	10c00007 	ldb	r3,0(r2)
    2d7c:	18001426 	beq	r3,zero,2dd0 <__svfscanf_r+0x1384>
    2d80:	d8c0a317 	ldw	r3,652(sp)
    2d84:	80800117 	ldw	r2,4(r16)
    2d88:	21800044 	addi	r6,r4,1
    2d8c:	18ffffc4 	addi	r3,r3,-1
    2d90:	d8c0a315 	stw	r3,652(sp)
    2d94:	10ffffc4 	addi	r3,r2,-1
    2d98:	80c00115 	stw	r3,4(r16)
    2d9c:	20800003 	ldbu	r2,0(r4)
    2da0:	90800005 	stb	r2,0(r18)
    2da4:	d900a317 	ldw	r4,652(sp)
    2da8:	81800015 	stw	r6,0(r16)
    2dac:	94800044 	addi	r18,r18,1
    2db0:	20000726 	beq	r4,zero,2dd0 <__svfscanf_r+0x1384>
    2db4:	80800117 	ldw	r2,4(r16)
    2db8:	00bfec16 	blt	zero,r2,2d6c <__svfscanf_r+0x1320>
    2dbc:	b009883a 	mov	r4,r22
    2dc0:	800b883a 	mov	r5,r16
    2dc4:	00014480 	call	1448 <__srefill_r>
    2dc8:	103fe826 	beq	r2,zero,2d6c <__svfscanf_r+0x1320>
    2dcc:	9cbb7426 	beq	r19,r18,1ba0 <__svfscanf_r+0x154>
    2dd0:	94e7c83a 	sub	r19,r18,r19
    2dd4:	983b5226 	beq	r19,zero,1b20 <__svfscanf_r+0xd4>
    2dd8:	90000005 	stb	zero,0(r18)
    2ddc:	d880a417 	ldw	r2,656(sp)
    2de0:	d8c0a217 	ldw	r3,648(sp)
    2de4:	8ce3883a 	add	r17,r17,r19
    2de8:	10800104 	addi	r2,r2,4
    2dec:	18c00044 	addi	r3,r3,1
    2df0:	d880a415 	stw	r2,656(sp)
    2df4:	d8c0a215 	stw	r3,648(sp)
    2df8:	003b2706 	br	1a98 <__svfscanf_r+0x4c>
    2dfc:	9cc00414 	ori	r19,r19,16
    2e00:	003b6e06 	br	1bbc <__svfscanf_r+0x170>
    2e04:	00c00404 	movi	r3,16
    2e08:	01000034 	movhi	r4,0
    2e0c:	211ab704 	addi	r4,r4,27356
    2e10:	9cc08014 	ori	r19,r19,512
    2e14:	054000c4 	movi	r21,3
    2e18:	d8c0a115 	stw	r3,644(sp)
    2e1c:	d900a015 	stw	r4,640(sp)
    2e20:	003bf806 	br	1e04 <__svfscanf_r+0x3b8>
    2e24:	9880040c 	andi	r2,r19,16
    2e28:	10001926 	beq	r2,zero,2e90 <__svfscanf_r+0x1444>
    2e2c:	0027883a 	mov	r19,zero
    2e30:	00000b06 	br	2e60 <__svfscanf_r+0x1414>
    2e34:	80800017 	ldw	r2,0(r16)
    2e38:	b009883a 	mov	r4,r22
    2e3c:	800b883a 	mov	r5,r16
    2e40:	148d883a 	add	r6,r2,r18
    2e44:	81800015 	stw	r6,0(r16)
    2e48:	9ca7883a 	add	r19,r19,r18
    2e4c:	00014480 	call	1448 <__srefill_r>
    2e50:	103c711e 	bne	r2,zero,2018 <__svfscanf_r+0x5cc>
    2e54:	d900a317 	ldw	r4,652(sp)
    2e58:	2489c83a 	sub	r4,r4,r18
    2e5c:	d900a315 	stw	r4,652(sp)
    2e60:	84800117 	ldw	r18,4(r16)
    2e64:	d8c0a317 	ldw	r3,652(sp)
    2e68:	90fff216 	blt	r18,r3,2e34 <__svfscanf_r+0x13e8>
    2e6c:	d900a317 	ldw	r4,652(sp)
    2e70:	80800017 	ldw	r2,0(r16)
    2e74:	9927883a 	add	r19,r19,r4
    2e78:	9107c83a 	sub	r3,r18,r4
    2e7c:	110d883a 	add	r6,r2,r4
    2e80:	8ce3883a 	add	r17,r17,r19
    2e84:	80c00115 	stw	r3,4(r16)
    2e88:	81800015 	stw	r6,0(r16)
    2e8c:	003b0206 	br	1a98 <__svfscanf_r+0x4c>
    2e90:	d880a417 	ldw	r2,656(sp)
    2e94:	d980a317 	ldw	r6,652(sp)
    2e98:	01400044 	movi	r5,1
    2e9c:	11000017 	ldw	r4,0(r2)
    2ea0:	800f883a 	mov	r7,r16
    2ea4:	00038040 	call	3804 <fread>
    2ea8:	103b3d26 	beq	r2,zero,1ba0 <__svfscanf_r+0x154>
    2eac:	d8c0a417 	ldw	r3,656(sp)
    2eb0:	d900a217 	ldw	r4,648(sp)
    2eb4:	88a3883a 	add	r17,r17,r2
    2eb8:	18c00104 	addi	r3,r3,4
    2ebc:	21000044 	addi	r4,r4,1
    2ec0:	d8c0a415 	stw	r3,656(sp)
    2ec4:	d900a215 	stw	r4,648(sp)
    2ec8:	003af306 	br	1a98 <__svfscanf_r+0x4c>
    2ecc:	8080030b 	ldhu	r2,12(r16)
    2ed0:	1080100c 	andi	r2,r2,64
    2ed4:	103b1226 	beq	r2,zero,1b20 <__svfscanf_r+0xd4>
    2ed8:	003b3306 	br	1ba8 <__svfscanf_r+0x15c>
    2edc:	983b1026 	beq	r19,zero,1b20 <__svfscanf_r+0xd4>
    2ee0:	8ce3883a 	add	r17,r17,r19
    2ee4:	003aec06 	br	1a98 <__svfscanf_r+0x4c>
    2ee8:	983c9626 	beq	r19,zero,2144 <__svfscanf_r+0x6f8>
    2eec:	9cffffc4 	addi	r19,r19,-1
    2ef0:	d8c04404 	addi	r3,sp,272
    2ef4:	1cc5883a 	add	r2,r3,r19
    2ef8:	11400003 	ldbu	r5,0(r2)
    2efc:	b009883a 	mov	r4,r22
    2f00:	800d883a 	mov	r6,r16
    2f04:	00070fc0 	call	70fc <_ungetc_r>
    2f08:	003ff706 	br	2ee8 <__svfscanf_r+0x149c>
    2f0c:	00bfff84 	movi	r2,-2
    2f10:	18bc7a1e 	bne	r3,r2,20fc <__svfscanf_r+0x6b0>
    2f14:	003c8406 	br	2128 <__svfscanf_r+0x6dc>
    2f18:	d900a417 	ldw	r4,656(sp)
    2f1c:	25400017 	ldw	r21,0(r4)
    2f20:	21000104 	addi	r4,r4,4
    2f24:	d900a415 	stw	r4,656(sp)
    2f28:	003c4a06 	br	2054 <__svfscanf_r+0x608>
    2f2c:	00bfff84 	movi	r2,-2
    2f30:	18bc0f1e 	bne	r3,r2,1f70 <__svfscanf_r+0x524>
    2f34:	003c1506 	br	1f8c <__svfscanf_r+0x540>
    2f38:	b009883a 	mov	r4,r22
    2f3c:	800b883a 	mov	r5,r16
    2f40:	00014480 	call	1448 <__srefill_r>
    2f44:	103c1326 	beq	r2,zero,1f94 <__svfscanf_r+0x548>
    2f48:	903b151e 	bne	r18,zero,1ba0 <__svfscanf_r+0x154>
    2f4c:	a83ad21e 	bne	r21,zero,1a98 <__svfscanf_r+0x4c>
    2f50:	d880a217 	ldw	r2,648(sp)
    2f54:	10800044 	addi	r2,r2,1
    2f58:	d880a215 	stw	r2,648(sp)
    2f5c:	003ace06 	br	1a98 <__svfscanf_r+0x4c>
    2f60:	0027883a 	mov	r19,zero
    2f64:	003bdd06 	br	1edc <__svfscanf_r+0x490>
    2f68:	9cc00114 	ori	r19,r19,4
    2f6c:	003b1306 	br	1bbc <__svfscanf_r+0x170>
    2f70:	05400104 	movi	r21,4
    2f74:	003ba306 	br	1e04 <__svfscanf_r+0x3b8>
    2f78:	9cc00054 	ori	r19,r19,1
    2f7c:	00800034 	movhi	r2,0
    2f80:	10995704 	addi	r2,r2,25948
    2f84:	00c00284 	movi	r3,10
    2f88:	054000c4 	movi	r21,3
    2f8c:	d880a015 	stw	r2,640(sp)
    2f90:	d8c0a115 	stw	r3,644(sp)
    2f94:	003b9b06 	br	1e04 <__svfscanf_r+0x3b8>
    2f98:	9cc01014 	ori	r19,r19,64
    2f9c:	002b883a 	mov	r21,zero
    2fa0:	003b9806 	br	1e04 <__svfscanf_r+0x3b8>
    2fa4:	a00b883a 	mov	r5,r20
    2fa8:	d9000404 	addi	r4,sp,16
    2fac:	0004c980 	call	4c98 <__sccl>
    2fb0:	1029883a 	mov	r20,r2
    2fb4:	9cc01014 	ori	r19,r19,64
    2fb8:	05400044 	movi	r21,1
    2fbc:	003b9106 	br	1e04 <__svfscanf_r+0x3b8>
    2fc0:	9cc00054 	ori	r19,r19,1
    2fc4:	00800204 	movi	r2,8
    2fc8:	00c00034 	movhi	r3,0
    2fcc:	18dab704 	addi	r3,r3,27356
    2fd0:	054000c4 	movi	r21,3
    2fd4:	d880a115 	stw	r2,644(sp)
    2fd8:	d8c0a015 	stw	r3,640(sp)
    2fdc:	003b8906 	br	1e04 <__svfscanf_r+0x3b8>
    2fe0:	9880040c 	andi	r2,r19,16
    2fe4:	103aac1e 	bne	r2,zero,1a98 <__svfscanf_r+0x4c>
    2fe8:	9880010c 	andi	r2,r19,4
    2fec:	10002426 	beq	r2,zero,3080 <__svfscanf_r+0x1634>
    2ff0:	d900a417 	ldw	r4,656(sp)
    2ff4:	20800017 	ldw	r2,0(r4)
    2ff8:	21000104 	addi	r4,r4,4
    2ffc:	d900a415 	stw	r4,656(sp)
    3000:	1440000d 	sth	r17,0(r2)
    3004:	003aa406 	br	1a98 <__svfscanf_r+0x4c>
    3008:	9cc00094 	ori	r19,r19,2
    300c:	003aeb06 	br	1bbc <__svfscanf_r+0x170>
    3010:	05400084 	movi	r21,2
    3014:	003b7b06 	br	1e04 <__svfscanf_r+0x3b8>
    3018:	00800404 	movi	r2,16
    301c:	00c00034 	movhi	r3,0
    3020:	18dab704 	addi	r3,r3,27356
    3024:	9cc08814 	ori	r19,r19,544
    3028:	054000c4 	movi	r21,3
    302c:	d880a115 	stw	r2,644(sp)
    3030:	d8c0a015 	stw	r3,640(sp)
    3034:	003b7306 	br	1e04 <__svfscanf_r+0x3b8>
    3038:	0009883a 	mov	r4,zero
    303c:	0004d580 	call	4d58 <nanf>
    3040:	b8800015 	stw	r2,0(r23)
    3044:	003d2706 	br	24e4 <__svfscanf_r+0xa98>
    3048:	a0c00007 	ldb	r3,0(r20)
    304c:	00801b04 	movi	r2,108
    3050:	18800826 	beq	r3,r2,3074 <__svfscanf_r+0x1628>
    3054:	9cc00054 	ori	r19,r19,1
    3058:	003ad806 	br	1bbc <__svfscanf_r+0x170>
    305c:	01000034 	movhi	r4,0
    3060:	21195704 	addi	r4,r4,25948
    3064:	054000c4 	movi	r21,3
    3068:	d900a015 	stw	r4,640(sp)
    306c:	d800a115 	stw	zero,644(sp)
    3070:	003b6406 	br	1e04 <__svfscanf_r+0x3b8>
    3074:	a5000044 	addi	r20,r20,1
    3078:	9cc00094 	ori	r19,r19,2
    307c:	003acf06 	br	1bbc <__svfscanf_r+0x170>
    3080:	9880004c 	andi	r2,r19,1
    3084:	1005003a 	cmpeq	r2,r2,zero
    3088:	10000a26 	beq	r2,zero,30b4 <__svfscanf_r+0x1668>
    308c:	9880008c 	andi	r2,r19,2
    3090:	10000826 	beq	r2,zero,30b4 <__svfscanf_r+0x1668>
    3094:	d900a417 	ldw	r4,656(sp)
    3098:	8807d7fa 	srai	r3,r17,31
    309c:	20800017 	ldw	r2,0(r4)
    30a0:	21000104 	addi	r4,r4,4
    30a4:	d900a415 	stw	r4,656(sp)
    30a8:	14400015 	stw	r17,0(r2)
    30ac:	10c00115 	stw	r3,4(r2)
    30b0:	003a7906 	br	1a98 <__svfscanf_r+0x4c>
    30b4:	d8c0a417 	ldw	r3,656(sp)
    30b8:	18800017 	ldw	r2,0(r3)
    30bc:	18c00104 	addi	r3,r3,4
    30c0:	d8c0a415 	stw	r3,656(sp)
    30c4:	14400015 	stw	r17,0(r2)
    30c8:	003a7306 	br	1a98 <__svfscanf_r+0x4c>

000030cc <__svfscanf>:
    30cc:	00800074 	movhi	r2,1
    30d0:	108f6704 	addi	r2,r2,15772
    30d4:	2013883a 	mov	r9,r4
    30d8:	11000017 	ldw	r4,0(r2)
    30dc:	2805883a 	mov	r2,r5
    30e0:	300f883a 	mov	r7,r6
    30e4:	480b883a 	mov	r5,r9
    30e8:	100d883a 	mov	r6,r2
    30ec:	0001a4c1 	jmpi	1a4c <__svfscanf_r>

000030f0 <_vfscanf_r>:
    30f0:	defffb04 	addi	sp,sp,-20
    30f4:	dcc00315 	stw	r19,12(sp)
    30f8:	dc800215 	stw	r18,8(sp)
    30fc:	dc400115 	stw	r17,4(sp)
    3100:	dc000015 	stw	r16,0(sp)
    3104:	dfc00415 	stw	ra,16(sp)
    3108:	2021883a 	mov	r16,r4
    310c:	2823883a 	mov	r17,r5
    3110:	3025883a 	mov	r18,r6
    3114:	3827883a 	mov	r19,r7
    3118:	20000226 	beq	r4,zero,3124 <_vfscanf_r+0x34>
    311c:	20800e17 	ldw	r2,56(r4)
    3120:	10000b26 	beq	r2,zero,3150 <_vfscanf_r+0x60>
    3124:	8009883a 	mov	r4,r16
    3128:	880b883a 	mov	r5,r17
    312c:	900d883a 	mov	r6,r18
    3130:	980f883a 	mov	r7,r19
    3134:	dfc00417 	ldw	ra,16(sp)
    3138:	dcc00317 	ldw	r19,12(sp)
    313c:	dc800217 	ldw	r18,8(sp)
    3140:	dc400117 	ldw	r17,4(sp)
    3144:	dc000017 	ldw	r16,0(sp)
    3148:	dec00504 	addi	sp,sp,20
    314c:	0001a4c1 	jmpi	1a4c <__svfscanf_r>
    3150:	00006600 	call	660 <__sinit>
    3154:	003ff306 	br	3124 <_vfscanf_r+0x34>

00003158 <vfscanf>:
    3158:	defffb04 	addi	sp,sp,-20
    315c:	dcc00315 	stw	r19,12(sp)
    3160:	04c00074 	movhi	r19,1
    3164:	9ccf6704 	addi	r19,r19,15772
    3168:	98c00017 	ldw	r3,0(r19)
    316c:	dc800215 	stw	r18,8(sp)
    3170:	dc400115 	stw	r17,4(sp)
    3174:	dc000015 	stw	r16,0(sp)
    3178:	dfc00415 	stw	ra,16(sp)
    317c:	2021883a 	mov	r16,r4
    3180:	2823883a 	mov	r17,r5
    3184:	3025883a 	mov	r18,r6
    3188:	18000326 	beq	r3,zero,3198 <vfscanf+0x40>
    318c:	18800e17 	ldw	r2,56(r3)
    3190:	1809883a 	mov	r4,r3
    3194:	10000b26 	beq	r2,zero,31c4 <vfscanf+0x6c>
    3198:	99000017 	ldw	r4,0(r19)
    319c:	800b883a 	mov	r5,r16
    31a0:	880d883a 	mov	r6,r17
    31a4:	900f883a 	mov	r7,r18
    31a8:	dfc00417 	ldw	ra,16(sp)
    31ac:	dcc00317 	ldw	r19,12(sp)
    31b0:	dc800217 	ldw	r18,8(sp)
    31b4:	dc400117 	ldw	r17,4(sp)
    31b8:	dc000017 	ldw	r16,0(sp)
    31bc:	dec00504 	addi	sp,sp,20
    31c0:	0001a4c1 	jmpi	1a4c <__svfscanf_r>
    31c4:	00006600 	call	660 <__sinit>
    31c8:	003ff306 	br	3198 <vfscanf+0x40>

000031cc <_write_r>:
    31cc:	defffd04 	addi	sp,sp,-12
    31d0:	dc000015 	stw	r16,0(sp)
    31d4:	04000074 	movhi	r16,1
    31d8:	84161d04 	addi	r16,r16,22644
    31dc:	dc400115 	stw	r17,4(sp)
    31e0:	80000015 	stw	zero,0(r16)
    31e4:	2023883a 	mov	r17,r4
    31e8:	2809883a 	mov	r4,r5
    31ec:	300b883a 	mov	r5,r6
    31f0:	380d883a 	mov	r6,r7
    31f4:	dfc00215 	stw	ra,8(sp)
    31f8:	000fbcc0 	call	fbcc <write>
    31fc:	1007883a 	mov	r3,r2
    3200:	00bfffc4 	movi	r2,-1
    3204:	18800626 	beq	r3,r2,3220 <_write_r+0x54>
    3208:	1805883a 	mov	r2,r3
    320c:	dfc00217 	ldw	ra,8(sp)
    3210:	dc400117 	ldw	r17,4(sp)
    3214:	dc000017 	ldw	r16,0(sp)
    3218:	dec00304 	addi	sp,sp,12
    321c:	f800283a 	ret
    3220:	80800017 	ldw	r2,0(r16)
    3224:	103ff826 	beq	r2,zero,3208 <_write_r+0x3c>
    3228:	88800015 	stw	r2,0(r17)
    322c:	1805883a 	mov	r2,r3
    3230:	dfc00217 	ldw	ra,8(sp)
    3234:	dc400117 	ldw	r17,4(sp)
    3238:	dc000017 	ldw	r16,0(sp)
    323c:	dec00304 	addi	sp,sp,12
    3240:	f800283a 	ret

00003244 <_close_r>:
    3244:	defffd04 	addi	sp,sp,-12
    3248:	dc000015 	stw	r16,0(sp)
    324c:	04000074 	movhi	r16,1
    3250:	84161d04 	addi	r16,r16,22644
    3254:	dc400115 	stw	r17,4(sp)
    3258:	80000015 	stw	zero,0(r16)
    325c:	2023883a 	mov	r17,r4
    3260:	2809883a 	mov	r4,r5
    3264:	dfc00215 	stw	ra,8(sp)
    3268:	000f26c0 	call	f26c <close>
    326c:	1007883a 	mov	r3,r2
    3270:	00bfffc4 	movi	r2,-1
    3274:	18800626 	beq	r3,r2,3290 <_close_r+0x4c>
    3278:	1805883a 	mov	r2,r3
    327c:	dfc00217 	ldw	ra,8(sp)
    3280:	dc400117 	ldw	r17,4(sp)
    3284:	dc000017 	ldw	r16,0(sp)
    3288:	dec00304 	addi	sp,sp,12
    328c:	f800283a 	ret
    3290:	80800017 	ldw	r2,0(r16)
    3294:	103ff826 	beq	r2,zero,3278 <_close_r+0x34>
    3298:	88800015 	stw	r2,0(r17)
    329c:	1805883a 	mov	r2,r3
    32a0:	dfc00217 	ldw	ra,8(sp)
    32a4:	dc400117 	ldw	r17,4(sp)
    32a8:	dc000017 	ldw	r16,0(sp)
    32ac:	dec00304 	addi	sp,sp,12
    32b0:	f800283a 	ret

000032b4 <_fclose_r>:
    32b4:	defffc04 	addi	sp,sp,-16
    32b8:	dc400115 	stw	r17,4(sp)
    32bc:	dc000015 	stw	r16,0(sp)
    32c0:	dfc00315 	stw	ra,12(sp)
    32c4:	dc800215 	stw	r18,8(sp)
    32c8:	2821883a 	mov	r16,r5
    32cc:	2023883a 	mov	r17,r4
    32d0:	28002926 	beq	r5,zero,3378 <_fclose_r+0xc4>
    32d4:	00006500 	call	650 <__sfp_lock_acquire>
    32d8:	88000226 	beq	r17,zero,32e4 <_fclose_r+0x30>
    32dc:	88800e17 	ldw	r2,56(r17)
    32e0:	10002d26 	beq	r2,zero,3398 <_fclose_r+0xe4>
    32e4:	8080030f 	ldh	r2,12(r16)
    32e8:	10002226 	beq	r2,zero,3374 <_fclose_r+0xc0>
    32ec:	8809883a 	mov	r4,r17
    32f0:	800b883a 	mov	r5,r16
    32f4:	00033d80 	call	33d8 <_fflush_r>
    32f8:	1025883a 	mov	r18,r2
    32fc:	80800b17 	ldw	r2,44(r16)
    3300:	10000426 	beq	r2,zero,3314 <_fclose_r+0x60>
    3304:	81400717 	ldw	r5,28(r16)
    3308:	8809883a 	mov	r4,r17
    330c:	103ee83a 	callr	r2
    3310:	10002a16 	blt	r2,zero,33bc <_fclose_r+0x108>
    3314:	8080030b 	ldhu	r2,12(r16)
    3318:	1080200c 	andi	r2,r2,128
    331c:	1000231e 	bne	r2,zero,33ac <_fclose_r+0xf8>
    3320:	81400c17 	ldw	r5,48(r16)
    3324:	28000526 	beq	r5,zero,333c <_fclose_r+0x88>
    3328:	80801004 	addi	r2,r16,64
    332c:	28800226 	beq	r5,r2,3338 <_fclose_r+0x84>
    3330:	8809883a 	mov	r4,r17
    3334:	00039700 	call	3970 <_free_r>
    3338:	80000c15 	stw	zero,48(r16)
    333c:	81401117 	ldw	r5,68(r16)
    3340:	28000326 	beq	r5,zero,3350 <_fclose_r+0x9c>
    3344:	8809883a 	mov	r4,r17
    3348:	00039700 	call	3970 <_free_r>
    334c:	80001115 	stw	zero,68(r16)
    3350:	8000030d 	sth	zero,12(r16)
    3354:	00006540 	call	654 <__sfp_lock_release>
    3358:	9005883a 	mov	r2,r18
    335c:	dfc00317 	ldw	ra,12(sp)
    3360:	dc800217 	ldw	r18,8(sp)
    3364:	dc400117 	ldw	r17,4(sp)
    3368:	dc000017 	ldw	r16,0(sp)
    336c:	dec00404 	addi	sp,sp,16
    3370:	f800283a 	ret
    3374:	00006540 	call	654 <__sfp_lock_release>
    3378:	0025883a 	mov	r18,zero
    337c:	9005883a 	mov	r2,r18
    3380:	dfc00317 	ldw	ra,12(sp)
    3384:	dc800217 	ldw	r18,8(sp)
    3388:	dc400117 	ldw	r17,4(sp)
    338c:	dc000017 	ldw	r16,0(sp)
    3390:	dec00404 	addi	sp,sp,16
    3394:	f800283a 	ret
    3398:	8809883a 	mov	r4,r17
    339c:	00006600 	call	660 <__sinit>
    33a0:	8080030f 	ldh	r2,12(r16)
    33a4:	103fd11e 	bne	r2,zero,32ec <_fclose_r+0x38>
    33a8:	003ff206 	br	3374 <_fclose_r+0xc0>
    33ac:	81400417 	ldw	r5,16(r16)
    33b0:	8809883a 	mov	r4,r17
    33b4:	00039700 	call	3970 <_free_r>
    33b8:	003fd906 	br	3320 <_fclose_r+0x6c>
    33bc:	04bfffc4 	movi	r18,-1
    33c0:	003fd406 	br	3314 <_fclose_r+0x60>

000033c4 <fclose>:
    33c4:	00800074 	movhi	r2,1
    33c8:	108f6704 	addi	r2,r2,15772
    33cc:	200b883a 	mov	r5,r4
    33d0:	11000017 	ldw	r4,0(r2)
    33d4:	00032b41 	jmpi	32b4 <_fclose_r>

000033d8 <_fflush_r>:
    33d8:	defffb04 	addi	sp,sp,-20
    33dc:	dcc00315 	stw	r19,12(sp)
    33e0:	dc800215 	stw	r18,8(sp)
    33e4:	dfc00415 	stw	ra,16(sp)
    33e8:	dc400115 	stw	r17,4(sp)
    33ec:	dc000015 	stw	r16,0(sp)
    33f0:	2027883a 	mov	r19,r4
    33f4:	2825883a 	mov	r18,r5
    33f8:	20000226 	beq	r4,zero,3404 <_fflush_r+0x2c>
    33fc:	20800e17 	ldw	r2,56(r4)
    3400:	10005626 	beq	r2,zero,355c <_fflush_r+0x184>
    3404:	9100030b 	ldhu	r4,12(r18)
    3408:	20ffffcc 	andi	r3,r4,65535
    340c:	18e0001c 	xori	r3,r3,32768
    3410:	18e00004 	addi	r3,r3,-32768
    3414:	1880020c 	andi	r2,r3,8
    3418:	1000261e 	bne	r2,zero,34b4 <_fflush_r+0xdc>
    341c:	90c00117 	ldw	r3,4(r18)
    3420:	20820014 	ori	r2,r4,2048
    3424:	9080030d 	sth	r2,12(r18)
    3428:	1009883a 	mov	r4,r2
    342c:	00c0400e 	bge	zero,r3,3530 <_fflush_r+0x158>
    3430:	92000a17 	ldw	r8,40(r18)
    3434:	40004026 	beq	r8,zero,3538 <_fflush_r+0x160>
    3438:	2084000c 	andi	r2,r4,4096
    343c:	10005326 	beq	r2,zero,358c <_fflush_r+0x1b4>
    3440:	94001417 	ldw	r16,80(r18)
    3444:	9080030b 	ldhu	r2,12(r18)
    3448:	1080010c 	andi	r2,r2,4
    344c:	1000481e 	bne	r2,zero,3570 <_fflush_r+0x198>
    3450:	91400717 	ldw	r5,28(r18)
    3454:	9809883a 	mov	r4,r19
    3458:	800d883a 	mov	r6,r16
    345c:	000f883a 	mov	r7,zero
    3460:	403ee83a 	callr	r8
    3464:	8080261e 	bne	r16,r2,3500 <_fflush_r+0x128>
    3468:	9080030b 	ldhu	r2,12(r18)
    346c:	91000417 	ldw	r4,16(r18)
    3470:	90000115 	stw	zero,4(r18)
    3474:	10bdffcc 	andi	r2,r2,63487
    3478:	10ffffcc 	andi	r3,r2,65535
    347c:	18c4000c 	andi	r3,r3,4096
    3480:	9080030d 	sth	r2,12(r18)
    3484:	91000015 	stw	r4,0(r18)
    3488:	18002b26 	beq	r3,zero,3538 <_fflush_r+0x160>
    348c:	0007883a 	mov	r3,zero
    3490:	1805883a 	mov	r2,r3
    3494:	94001415 	stw	r16,80(r18)
    3498:	dfc00417 	ldw	ra,16(sp)
    349c:	dcc00317 	ldw	r19,12(sp)
    34a0:	dc800217 	ldw	r18,8(sp)
    34a4:	dc400117 	ldw	r17,4(sp)
    34a8:	dc000017 	ldw	r16,0(sp)
    34ac:	dec00504 	addi	sp,sp,20
    34b0:	f800283a 	ret
    34b4:	94400417 	ldw	r17,16(r18)
    34b8:	88001f26 	beq	r17,zero,3538 <_fflush_r+0x160>
    34bc:	90800017 	ldw	r2,0(r18)
    34c0:	18c000cc 	andi	r3,r3,3
    34c4:	94400015 	stw	r17,0(r18)
    34c8:	1461c83a 	sub	r16,r2,r17
    34cc:	18002526 	beq	r3,zero,3564 <_fflush_r+0x18c>
    34d0:	0005883a 	mov	r2,zero
    34d4:	90800215 	stw	r2,8(r18)
    34d8:	0400170e 	bge	zero,r16,3538 <_fflush_r+0x160>
    34dc:	90c00917 	ldw	r3,36(r18)
    34e0:	91400717 	ldw	r5,28(r18)
    34e4:	880d883a 	mov	r6,r17
    34e8:	800f883a 	mov	r7,r16
    34ec:	9809883a 	mov	r4,r19
    34f0:	183ee83a 	callr	r3
    34f4:	88a3883a 	add	r17,r17,r2
    34f8:	80a1c83a 	sub	r16,r16,r2
    34fc:	00bff616 	blt	zero,r2,34d8 <_fflush_r+0x100>
    3500:	9080030b 	ldhu	r2,12(r18)
    3504:	00ffffc4 	movi	r3,-1
    3508:	10801014 	ori	r2,r2,64
    350c:	9080030d 	sth	r2,12(r18)
    3510:	1805883a 	mov	r2,r3
    3514:	dfc00417 	ldw	ra,16(sp)
    3518:	dcc00317 	ldw	r19,12(sp)
    351c:	dc800217 	ldw	r18,8(sp)
    3520:	dc400117 	ldw	r17,4(sp)
    3524:	dc000017 	ldw	r16,0(sp)
    3528:	dec00504 	addi	sp,sp,20
    352c:	f800283a 	ret
    3530:	90800f17 	ldw	r2,60(r18)
    3534:	00bfbe16 	blt	zero,r2,3430 <_fflush_r+0x58>
    3538:	0007883a 	mov	r3,zero
    353c:	1805883a 	mov	r2,r3
    3540:	dfc00417 	ldw	ra,16(sp)
    3544:	dcc00317 	ldw	r19,12(sp)
    3548:	dc800217 	ldw	r18,8(sp)
    354c:	dc400117 	ldw	r17,4(sp)
    3550:	dc000017 	ldw	r16,0(sp)
    3554:	dec00504 	addi	sp,sp,20
    3558:	f800283a 	ret
    355c:	00006600 	call	660 <__sinit>
    3560:	003fa806 	br	3404 <_fflush_r+0x2c>
    3564:	90800517 	ldw	r2,20(r18)
    3568:	90800215 	stw	r2,8(r18)
    356c:	003fda06 	br	34d8 <_fflush_r+0x100>
    3570:	90800117 	ldw	r2,4(r18)
    3574:	90c00c17 	ldw	r3,48(r18)
    3578:	80a1c83a 	sub	r16,r16,r2
    357c:	183fb426 	beq	r3,zero,3450 <_fflush_r+0x78>
    3580:	90800f17 	ldw	r2,60(r18)
    3584:	80a1c83a 	sub	r16,r16,r2
    3588:	003fb106 	br	3450 <_fflush_r+0x78>
    358c:	91400717 	ldw	r5,28(r18)
    3590:	9809883a 	mov	r4,r19
    3594:	000d883a 	mov	r6,zero
    3598:	01c00044 	movi	r7,1
    359c:	403ee83a 	callr	r8
    35a0:	1021883a 	mov	r16,r2
    35a4:	00bfffc4 	movi	r2,-1
    35a8:	80800226 	beq	r16,r2,35b4 <_fflush_r+0x1dc>
    35ac:	92000a17 	ldw	r8,40(r18)
    35b0:	003fa406 	br	3444 <_fflush_r+0x6c>
    35b4:	98c00017 	ldw	r3,0(r19)
    35b8:	00800744 	movi	r2,29
    35bc:	18bfde26 	beq	r3,r2,3538 <_fflush_r+0x160>
    35c0:	9080030b 	ldhu	r2,12(r18)
    35c4:	8007883a 	mov	r3,r16
    35c8:	10801014 	ori	r2,r2,64
    35cc:	9080030d 	sth	r2,12(r18)
    35d0:	003fcf06 	br	3510 <_fflush_r+0x138>

000035d4 <fflush>:
    35d4:	01400034 	movhi	r5,0
    35d8:	294cf604 	addi	r5,r5,13272
    35dc:	2007883a 	mov	r3,r4
    35e0:	20000526 	beq	r4,zero,35f8 <fflush+0x24>
    35e4:	00800074 	movhi	r2,1
    35e8:	108f6704 	addi	r2,r2,15772
    35ec:	11000017 	ldw	r4,0(r2)
    35f0:	180b883a 	mov	r5,r3
    35f4:	00033d81 	jmpi	33d8 <_fflush_r>
    35f8:	00800074 	movhi	r2,1
    35fc:	108f6804 	addi	r2,r2,15776
    3600:	11000017 	ldw	r4,0(r2)
    3604:	00008b81 	jmpi	8b8 <_fwalk_reent>

00003608 <_fread_r>:
    3608:	defff504 	addi	sp,sp,-44
    360c:	ddc00815 	stw	r23,32(sp)
    3610:	39af383a 	mul	r23,r7,r6
    3614:	df000915 	stw	fp,36(sp)
    3618:	dd800715 	stw	r22,28(sp)
    361c:	dcc00415 	stw	r19,16(sp)
    3620:	dc000115 	stw	r16,4(sp)
    3624:	dfc00a15 	stw	ra,40(sp)
    3628:	dd400615 	stw	r21,24(sp)
    362c:	dd000515 	stw	r20,20(sp)
    3630:	dc800315 	stw	r18,12(sp)
    3634:	dc400215 	stw	r17,8(sp)
    3638:	d9800015 	stw	r6,0(sp)
    363c:	3839883a 	mov	fp,r7
    3640:	2821883a 	mov	r16,r5
    3644:	202d883a 	mov	r22,r4
    3648:	dcc00b17 	ldw	r19,44(sp)
    364c:	b8005926 	beq	r23,zero,37b4 <_fread_r+0x1ac>
    3650:	20000226 	beq	r4,zero,365c <_fread_r+0x54>
    3654:	20800e17 	ldw	r2,56(r4)
    3658:	10005826 	beq	r2,zero,37bc <_fread_r+0x1b4>
    365c:	9c400117 	ldw	r17,4(r19)
    3660:	88005916 	blt	r17,zero,37c8 <_fread_r+0x1c0>
    3664:	9880030b 	ldhu	r2,12(r19)
    3668:	8029883a 	mov	r20,r16
    366c:	1080008c 	andi	r2,r2,2
    3670:	1000221e 	bne	r2,zero,36fc <_fread_r+0xf4>
    3674:	b825883a 	mov	r18,r23
    3678:	00000106 	br	3680 <_fread_r+0x78>
    367c:	9c400117 	ldw	r17,4(r19)
    3680:	a009883a 	mov	r4,r20
    3684:	880d883a 	mov	r6,r17
    3688:	8c80542e 	bgeu	r17,r18,37dc <_fread_r+0x1d4>
    368c:	99400017 	ldw	r5,0(r19)
    3690:	a469883a 	add	r20,r20,r17
    3694:	9465c83a 	sub	r18,r18,r17
    3698:	000125c0 	call	125c <memcpy>
    369c:	98800017 	ldw	r2,0(r19)
    36a0:	b009883a 	mov	r4,r22
    36a4:	980b883a 	mov	r5,r19
    36a8:	1461883a 	add	r16,r2,r17
    36ac:	9c000015 	stw	r16,0(r19)
    36b0:	00014480 	call	1448 <__srefill_r>
    36b4:	103ff126 	beq	r2,zero,367c <_fread_r+0x74>
    36b8:	d9400017 	ldw	r5,0(sp)
    36bc:	bc89c83a 	sub	r4,r23,r18
    36c0:	000e9cc0 	call	e9cc <__udivsi3>
    36c4:	1039883a 	mov	fp,r2
    36c8:	e005883a 	mov	r2,fp
    36cc:	dfc00a17 	ldw	ra,40(sp)
    36d0:	df000917 	ldw	fp,36(sp)
    36d4:	ddc00817 	ldw	r23,32(sp)
    36d8:	dd800717 	ldw	r22,28(sp)
    36dc:	dd400617 	ldw	r21,24(sp)
    36e0:	dd000517 	ldw	r20,20(sp)
    36e4:	dcc00417 	ldw	r19,16(sp)
    36e8:	dc800317 	ldw	r18,12(sp)
    36ec:	dc400217 	ldw	r17,8(sp)
    36f0:	dc000117 	ldw	r16,4(sp)
    36f4:	dec00b04 	addi	sp,sp,44
    36f8:	f800283a 	ret
    36fc:	b825883a 	mov	r18,r23
    3700:	8dc03436 	bltu	r17,r23,37d4 <_fread_r+0x1cc>
    3704:	99400017 	ldw	r5,0(r19)
    3708:	a009883a 	mov	r4,r20
    370c:	900d883a 	mov	r6,r18
    3710:	000125c0 	call	125c <memcpy>
    3714:	9c000017 	ldw	r16,0(r19)
    3718:	98800117 	ldw	r2,4(r19)
    371c:	99400c17 	ldw	r5,48(r19)
    3720:	84a1883a 	add	r16,r16,r18
    3724:	14a3c83a 	sub	r17,r2,r18
    3728:	a4ab883a 	add	r21,r20,r18
    372c:	9c400115 	stw	r17,4(r19)
    3730:	9c000015 	stw	r16,0(r19)
    3734:	bca9c83a 	sub	r20,r23,r18
    3738:	28000826 	beq	r5,zero,375c <_fread_r+0x154>
    373c:	a03fe226 	beq	r20,zero,36c8 <_fread_r+0xc0>
    3740:	98801004 	addi	r2,r19,64
    3744:	28800326 	beq	r5,r2,3754 <_fread_r+0x14c>
    3748:	b009883a 	mov	r4,r22
    374c:	00039700 	call	3970 <_free_r>
    3750:	9c000017 	ldw	r16,0(r19)
    3754:	98000c15 	stw	zero,48(r19)
    3758:	00000106 	br	3760 <_fread_r+0x158>
    375c:	a03fda26 	beq	r20,zero,36c8 <_fread_r+0xc0>
    3760:	9c800417 	ldw	r18,16(r19)
    3764:	9c400517 	ldw	r17,20(r19)
    3768:	9d400015 	stw	r21,0(r19)
    376c:	9d400415 	stw	r21,16(r19)
    3770:	9d000515 	stw	r20,20(r19)
    3774:	b009883a 	mov	r4,r22
    3778:	980b883a 	mov	r5,r19
    377c:	00014480 	call	1448 <__srefill_r>
    3780:	98c00117 	ldw	r3,4(r19)
    3784:	9c800415 	stw	r18,16(r19)
    3788:	9c400515 	stw	r17,20(r19)
    378c:	a8eb883a 	add	r21,r21,r3
    3790:	9c000015 	stw	r16,0(r19)
    3794:	a0e9c83a 	sub	r20,r20,r3
    3798:	98000115 	stw	zero,4(r19)
    379c:	103fef26 	beq	r2,zero,375c <_fread_r+0x154>
    37a0:	d9400017 	ldw	r5,0(sp)
    37a4:	bd09c83a 	sub	r4,r23,r20
    37a8:	000e9cc0 	call	e9cc <__udivsi3>
    37ac:	1039883a 	mov	fp,r2
    37b0:	003fc506 	br	36c8 <_fread_r+0xc0>
    37b4:	0039883a 	mov	fp,zero
    37b8:	003fc306 	br	36c8 <_fread_r+0xc0>
    37bc:	00006600 	call	660 <__sinit>
    37c0:	9c400117 	ldw	r17,4(r19)
    37c4:	883fa70e 	bge	r17,zero,3664 <_fread_r+0x5c>
    37c8:	0023883a 	mov	r17,zero
    37cc:	98000115 	stw	zero,4(r19)
    37d0:	003fa406 	br	3664 <_fread_r+0x5c>
    37d4:	8825883a 	mov	r18,r17
    37d8:	003fca06 	br	3704 <_fread_r+0xfc>
    37dc:	99400017 	ldw	r5,0(r19)
    37e0:	900d883a 	mov	r6,r18
    37e4:	000125c0 	call	125c <memcpy>
    37e8:	98c00117 	ldw	r3,4(r19)
    37ec:	98800017 	ldw	r2,0(r19)
    37f0:	1c87c83a 	sub	r3,r3,r18
    37f4:	1485883a 	add	r2,r2,r18
    37f8:	98800015 	stw	r2,0(r19)
    37fc:	98c00115 	stw	r3,4(r19)
    3800:	003fb106 	br	36c8 <_fread_r+0xc0>

00003804 <fread>:
    3804:	00800074 	movhi	r2,1
    3808:	108f6704 	addi	r2,r2,15772
    380c:	2017883a 	mov	r11,r4
    3810:	11000017 	ldw	r4,0(r2)
    3814:	defffe04 	addi	sp,sp,-8
    3818:	3013883a 	mov	r9,r6
    381c:	2805883a 	mov	r2,r5
    3820:	d9c00015 	stw	r7,0(sp)
    3824:	580b883a 	mov	r5,r11
    3828:	100d883a 	mov	r6,r2
    382c:	480f883a 	mov	r7,r9
    3830:	dfc00115 	stw	ra,4(sp)
    3834:	00036080 	call	3608 <_fread_r>
    3838:	dfc00117 	ldw	ra,4(sp)
    383c:	dec00204 	addi	sp,sp,8
    3840:	f800283a 	ret

00003844 <_malloc_trim_r>:
    3844:	defffb04 	addi	sp,sp,-20
    3848:	dcc00315 	stw	r19,12(sp)
    384c:	04c00074 	movhi	r19,1
    3850:	9cc9d604 	addi	r19,r19,10072
    3854:	dc800215 	stw	r18,8(sp)
    3858:	dc400115 	stw	r17,4(sp)
    385c:	dc000015 	stw	r16,0(sp)
    3860:	2823883a 	mov	r17,r5
    3864:	2025883a 	mov	r18,r4
    3868:	dfc00415 	stw	ra,16(sp)
    386c:	000f8f00 	call	f8f0 <__malloc_lock>
    3870:	98800217 	ldw	r2,8(r19)
    3874:	9009883a 	mov	r4,r18
    3878:	000b883a 	mov	r5,zero
    387c:	10c00117 	ldw	r3,4(r2)
    3880:	00bfff04 	movi	r2,-4
    3884:	18a0703a 	and	r16,r3,r2
    3888:	8463c83a 	sub	r17,r16,r17
    388c:	8c43fbc4 	addi	r17,r17,4079
    3890:	8822d33a 	srli	r17,r17,12
    3894:	0083ffc4 	movi	r2,4095
    3898:	8c7fffc4 	addi	r17,r17,-1
    389c:	8822933a 	slli	r17,r17,12
    38a0:	1440060e 	bge	r2,r17,38bc <_malloc_trim_r+0x78>
    38a4:	00016280 	call	1628 <_sbrk_r>
    38a8:	98c00217 	ldw	r3,8(r19)
    38ac:	9009883a 	mov	r4,r18
    38b0:	044bc83a 	sub	r5,zero,r17
    38b4:	80c7883a 	add	r3,r16,r3
    38b8:	10c00926 	beq	r2,r3,38e0 <_malloc_trim_r+0x9c>
    38bc:	000f9100 	call	f910 <__malloc_unlock>
    38c0:	0005883a 	mov	r2,zero
    38c4:	dfc00417 	ldw	ra,16(sp)
    38c8:	dcc00317 	ldw	r19,12(sp)
    38cc:	dc800217 	ldw	r18,8(sp)
    38d0:	dc400117 	ldw	r17,4(sp)
    38d4:	dc000017 	ldw	r16,0(sp)
    38d8:	dec00504 	addi	sp,sp,20
    38dc:	f800283a 	ret
    38e0:	9009883a 	mov	r4,r18
    38e4:	00016280 	call	1628 <_sbrk_r>
    38e8:	844dc83a 	sub	r6,r16,r17
    38ec:	00ffffc4 	movi	r3,-1
    38f0:	9009883a 	mov	r4,r18
    38f4:	000b883a 	mov	r5,zero
    38f8:	01c00074 	movhi	r7,1
    38fc:	39d62704 	addi	r7,r7,22684
    3900:	31800054 	ori	r6,r6,1
    3904:	10c00926 	beq	r2,r3,392c <_malloc_trim_r+0xe8>
    3908:	38800017 	ldw	r2,0(r7)
    390c:	98c00217 	ldw	r3,8(r19)
    3910:	9009883a 	mov	r4,r18
    3914:	1445c83a 	sub	r2,r2,r17
    3918:	38800015 	stw	r2,0(r7)
    391c:	19800115 	stw	r6,4(r3)
    3920:	000f9100 	call	f910 <__malloc_unlock>
    3924:	00800044 	movi	r2,1
    3928:	003fe606 	br	38c4 <_malloc_trim_r+0x80>
    392c:	00016280 	call	1628 <_sbrk_r>
    3930:	99800217 	ldw	r6,8(r19)
    3934:	100f883a 	mov	r7,r2
    3938:	9009883a 	mov	r4,r18
    393c:	1187c83a 	sub	r3,r2,r6
    3940:	008003c4 	movi	r2,15
    3944:	19400054 	ori	r5,r3,1
    3948:	10ffdc0e 	bge	r2,r3,38bc <_malloc_trim_r+0x78>
    394c:	00800074 	movhi	r2,1
    3950:	108f6a04 	addi	r2,r2,15784
    3954:	10c00017 	ldw	r3,0(r2)
    3958:	00800074 	movhi	r2,1
    395c:	10962704 	addi	r2,r2,22684
    3960:	31400115 	stw	r5,4(r6)
    3964:	38c7c83a 	sub	r3,r7,r3
    3968:	10c00015 	stw	r3,0(r2)
    396c:	003fd306 	br	38bc <_malloc_trim_r+0x78>

00003970 <_free_r>:
    3970:	defffd04 	addi	sp,sp,-12
    3974:	dc400115 	stw	r17,4(sp)
    3978:	dc000015 	stw	r16,0(sp)
    397c:	dfc00215 	stw	ra,8(sp)
    3980:	2821883a 	mov	r16,r5
    3984:	2023883a 	mov	r17,r4
    3988:	28005a26 	beq	r5,zero,3af4 <_free_r+0x184>
    398c:	000f8f00 	call	f8f0 <__malloc_lock>
    3990:	823ffe04 	addi	r8,r16,-8
    3994:	41400117 	ldw	r5,4(r8)
    3998:	00bfff84 	movi	r2,-2
    399c:	02800074 	movhi	r10,1
    39a0:	5289d604 	addi	r10,r10,10072
    39a4:	288e703a 	and	r7,r5,r2
    39a8:	41cd883a 	add	r6,r8,r7
    39ac:	30c00117 	ldw	r3,4(r6)
    39b0:	51000217 	ldw	r4,8(r10)
    39b4:	00bfff04 	movi	r2,-4
    39b8:	1892703a 	and	r9,r3,r2
    39bc:	5017883a 	mov	r11,r10
    39c0:	31006726 	beq	r6,r4,3b60 <_free_r+0x1f0>
    39c4:	2880004c 	andi	r2,r5,1
    39c8:	1005003a 	cmpeq	r2,r2,zero
    39cc:	32400115 	stw	r9,4(r6)
    39d0:	10001a1e 	bne	r2,zero,3a3c <_free_r+0xcc>
    39d4:	000b883a 	mov	r5,zero
    39d8:	3247883a 	add	r3,r6,r9
    39dc:	18800117 	ldw	r2,4(r3)
    39e0:	1080004c 	andi	r2,r2,1
    39e4:	1000231e 	bne	r2,zero,3a74 <_free_r+0x104>
    39e8:	280ac03a 	cmpne	r5,r5,zero
    39ec:	3a4f883a 	add	r7,r7,r9
    39f0:	2800451e 	bne	r5,zero,3b08 <_free_r+0x198>
    39f4:	31000217 	ldw	r4,8(r6)
    39f8:	00800074 	movhi	r2,1
    39fc:	1089d804 	addi	r2,r2,10080
    3a00:	20807b26 	beq	r4,r2,3bf0 <_free_r+0x280>
    3a04:	30800317 	ldw	r2,12(r6)
    3a08:	3a07883a 	add	r3,r7,r8
    3a0c:	19c00015 	stw	r7,0(r3)
    3a10:	11000215 	stw	r4,8(r2)
    3a14:	20800315 	stw	r2,12(r4)
    3a18:	38800054 	ori	r2,r7,1
    3a1c:	40800115 	stw	r2,4(r8)
    3a20:	28001a26 	beq	r5,zero,3a8c <_free_r+0x11c>
    3a24:	8809883a 	mov	r4,r17
    3a28:	dfc00217 	ldw	ra,8(sp)
    3a2c:	dc400117 	ldw	r17,4(sp)
    3a30:	dc000017 	ldw	r16,0(sp)
    3a34:	dec00304 	addi	sp,sp,12
    3a38:	000f9101 	jmpi	f910 <__malloc_unlock>
    3a3c:	80bffe17 	ldw	r2,-8(r16)
    3a40:	50c00204 	addi	r3,r10,8
    3a44:	4091c83a 	sub	r8,r8,r2
    3a48:	41000217 	ldw	r4,8(r8)
    3a4c:	388f883a 	add	r7,r7,r2
    3a50:	20c06126 	beq	r4,r3,3bd8 <_free_r+0x268>
    3a54:	40800317 	ldw	r2,12(r8)
    3a58:	3247883a 	add	r3,r6,r9
    3a5c:	000b883a 	mov	r5,zero
    3a60:	11000215 	stw	r4,8(r2)
    3a64:	20800315 	stw	r2,12(r4)
    3a68:	18800117 	ldw	r2,4(r3)
    3a6c:	1080004c 	andi	r2,r2,1
    3a70:	103fdd26 	beq	r2,zero,39e8 <_free_r+0x78>
    3a74:	38800054 	ori	r2,r7,1
    3a78:	3a07883a 	add	r3,r7,r8
    3a7c:	280ac03a 	cmpne	r5,r5,zero
    3a80:	40800115 	stw	r2,4(r8)
    3a84:	19c00015 	stw	r7,0(r3)
    3a88:	283fe61e 	bne	r5,zero,3a24 <_free_r+0xb4>
    3a8c:	00807fc4 	movi	r2,511
    3a90:	11c01f2e 	bgeu	r2,r7,3b10 <_free_r+0x1a0>
    3a94:	3806d27a 	srli	r3,r7,9
    3a98:	1800481e 	bne	r3,zero,3bbc <_free_r+0x24c>
    3a9c:	3804d0fa 	srli	r2,r7,3
    3aa0:	100690fa 	slli	r3,r2,3
    3aa4:	1acd883a 	add	r6,r3,r11
    3aa8:	31400217 	ldw	r5,8(r6)
    3aac:	31405926 	beq	r6,r5,3c14 <_free_r+0x2a4>
    3ab0:	28800117 	ldw	r2,4(r5)
    3ab4:	00ffff04 	movi	r3,-4
    3ab8:	10c4703a 	and	r2,r2,r3
    3abc:	3880022e 	bgeu	r7,r2,3ac8 <_free_r+0x158>
    3ac0:	29400217 	ldw	r5,8(r5)
    3ac4:	317ffa1e 	bne	r6,r5,3ab0 <_free_r+0x140>
    3ac8:	29800317 	ldw	r6,12(r5)
    3acc:	41800315 	stw	r6,12(r8)
    3ad0:	41400215 	stw	r5,8(r8)
    3ad4:	8809883a 	mov	r4,r17
    3ad8:	2a000315 	stw	r8,12(r5)
    3adc:	32000215 	stw	r8,8(r6)
    3ae0:	dfc00217 	ldw	ra,8(sp)
    3ae4:	dc400117 	ldw	r17,4(sp)
    3ae8:	dc000017 	ldw	r16,0(sp)
    3aec:	dec00304 	addi	sp,sp,12
    3af0:	000f9101 	jmpi	f910 <__malloc_unlock>
    3af4:	dfc00217 	ldw	ra,8(sp)
    3af8:	dc400117 	ldw	r17,4(sp)
    3afc:	dc000017 	ldw	r16,0(sp)
    3b00:	dec00304 	addi	sp,sp,12
    3b04:	f800283a 	ret
    3b08:	31000217 	ldw	r4,8(r6)
    3b0c:	003fbd06 	br	3a04 <_free_r+0x94>
    3b10:	3806d0fa 	srli	r3,r7,3
    3b14:	00800044 	movi	r2,1
    3b18:	51400117 	ldw	r5,4(r10)
    3b1c:	180890fa 	slli	r4,r3,3
    3b20:	1807d0ba 	srai	r3,r3,2
    3b24:	22c9883a 	add	r4,r4,r11
    3b28:	21800217 	ldw	r6,8(r4)
    3b2c:	10c4983a 	sll	r2,r2,r3
    3b30:	41000315 	stw	r4,12(r8)
    3b34:	41800215 	stw	r6,8(r8)
    3b38:	288ab03a 	or	r5,r5,r2
    3b3c:	22000215 	stw	r8,8(r4)
    3b40:	8809883a 	mov	r4,r17
    3b44:	51400115 	stw	r5,4(r10)
    3b48:	32000315 	stw	r8,12(r6)
    3b4c:	dfc00217 	ldw	ra,8(sp)
    3b50:	dc400117 	ldw	r17,4(sp)
    3b54:	dc000017 	ldw	r16,0(sp)
    3b58:	dec00304 	addi	sp,sp,12
    3b5c:	000f9101 	jmpi	f910 <__malloc_unlock>
    3b60:	2880004c 	andi	r2,r5,1
    3b64:	3a4d883a 	add	r6,r7,r9
    3b68:	1000071e 	bne	r2,zero,3b88 <_free_r+0x218>
    3b6c:	80bffe17 	ldw	r2,-8(r16)
    3b70:	4091c83a 	sub	r8,r8,r2
    3b74:	41000317 	ldw	r4,12(r8)
    3b78:	40c00217 	ldw	r3,8(r8)
    3b7c:	308d883a 	add	r6,r6,r2
    3b80:	20c00215 	stw	r3,8(r4)
    3b84:	19000315 	stw	r4,12(r3)
    3b88:	00800074 	movhi	r2,1
    3b8c:	108f6904 	addi	r2,r2,15780
    3b90:	11000017 	ldw	r4,0(r2)
    3b94:	30c00054 	ori	r3,r6,1
    3b98:	52000215 	stw	r8,8(r10)
    3b9c:	40c00115 	stw	r3,4(r8)
    3ba0:	313fa036 	bltu	r6,r4,3a24 <_free_r+0xb4>
    3ba4:	00800074 	movhi	r2,1
    3ba8:	10961a04 	addi	r2,r2,22632
    3bac:	11400017 	ldw	r5,0(r2)
    3bb0:	8809883a 	mov	r4,r17
    3bb4:	00038440 	call	3844 <_malloc_trim_r>
    3bb8:	003f9a06 	br	3a24 <_free_r+0xb4>
    3bbc:	00800104 	movi	r2,4
    3bc0:	10c0072e 	bgeu	r2,r3,3be0 <_free_r+0x270>
    3bc4:	00800504 	movi	r2,20
    3bc8:	10c01936 	bltu	r2,r3,3c30 <_free_r+0x2c0>
    3bcc:	188016c4 	addi	r2,r3,91
    3bd0:	100690fa 	slli	r3,r2,3
    3bd4:	003fb306 	br	3aa4 <_free_r+0x134>
    3bd8:	01400044 	movi	r5,1
    3bdc:	003f7e06 	br	39d8 <_free_r+0x68>
    3be0:	3804d1ba 	srli	r2,r7,6
    3be4:	10800e04 	addi	r2,r2,56
    3be8:	100690fa 	slli	r3,r2,3
    3bec:	003fad06 	br	3aa4 <_free_r+0x134>
    3bf0:	22000315 	stw	r8,12(r4)
    3bf4:	22000215 	stw	r8,8(r4)
    3bf8:	3a05883a 	add	r2,r7,r8
    3bfc:	38c00054 	ori	r3,r7,1
    3c00:	11c00015 	stw	r7,0(r2)
    3c04:	41000215 	stw	r4,8(r8)
    3c08:	40c00115 	stw	r3,4(r8)
    3c0c:	41000315 	stw	r4,12(r8)
    3c10:	003f8406 	br	3a24 <_free_r+0xb4>
    3c14:	1005d0ba 	srai	r2,r2,2
    3c18:	00c00044 	movi	r3,1
    3c1c:	51000117 	ldw	r4,4(r10)
    3c20:	1886983a 	sll	r3,r3,r2
    3c24:	20c8b03a 	or	r4,r4,r3
    3c28:	51000115 	stw	r4,4(r10)
    3c2c:	003fa706 	br	3acc <_free_r+0x15c>
    3c30:	00801504 	movi	r2,84
    3c34:	10c00436 	bltu	r2,r3,3c48 <_free_r+0x2d8>
    3c38:	3804d33a 	srli	r2,r7,12
    3c3c:	10801b84 	addi	r2,r2,110
    3c40:	100690fa 	slli	r3,r2,3
    3c44:	003f9706 	br	3aa4 <_free_r+0x134>
    3c48:	00805504 	movi	r2,340
    3c4c:	10c00436 	bltu	r2,r3,3c60 <_free_r+0x2f0>
    3c50:	3804d3fa 	srli	r2,r7,15
    3c54:	10801dc4 	addi	r2,r2,119
    3c58:	100690fa 	slli	r3,r2,3
    3c5c:	003f9106 	br	3aa4 <_free_r+0x134>
    3c60:	00815504 	movi	r2,1364
    3c64:	10c0032e 	bgeu	r2,r3,3c74 <_free_r+0x304>
    3c68:	00801f84 	movi	r2,126
    3c6c:	00c0fc04 	movi	r3,1008
    3c70:	003f8c06 	br	3aa4 <_free_r+0x134>
    3c74:	3804d4ba 	srli	r2,r7,18
    3c78:	10801f04 	addi	r2,r2,124
    3c7c:	100690fa 	slli	r3,r2,3
    3c80:	003f8806 	br	3aa4 <_free_r+0x134>

00003c84 <__sfvwrite_r>:
    3c84:	30800217 	ldw	r2,8(r6)
    3c88:	defff504 	addi	sp,sp,-44
    3c8c:	df000915 	stw	fp,36(sp)
    3c90:	dd800715 	stw	r22,28(sp)
    3c94:	dc800315 	stw	r18,12(sp)
    3c98:	dfc00a15 	stw	ra,40(sp)
    3c9c:	ddc00815 	stw	r23,32(sp)
    3ca0:	dd400615 	stw	r21,24(sp)
    3ca4:	dd000515 	stw	r20,20(sp)
    3ca8:	dcc00415 	stw	r19,16(sp)
    3cac:	dc400215 	stw	r17,8(sp)
    3cb0:	dc000115 	stw	r16,4(sp)
    3cb4:	302d883a 	mov	r22,r6
    3cb8:	2039883a 	mov	fp,r4
    3cbc:	2825883a 	mov	r18,r5
    3cc0:	10001c26 	beq	r2,zero,3d34 <__sfvwrite_r+0xb0>
    3cc4:	29c0030b 	ldhu	r7,12(r5)
    3cc8:	3880020c 	andi	r2,r7,8
    3ccc:	10002726 	beq	r2,zero,3d6c <__sfvwrite_r+0xe8>
    3cd0:	28800417 	ldw	r2,16(r5)
    3cd4:	10002526 	beq	r2,zero,3d6c <__sfvwrite_r+0xe8>
    3cd8:	3880008c 	andi	r2,r7,2
    3cdc:	b5400017 	ldw	r21,0(r22)
    3ce0:	10002826 	beq	r2,zero,3d84 <__sfvwrite_r+0x100>
    3ce4:	0021883a 	mov	r16,zero
    3ce8:	0023883a 	mov	r17,zero
    3cec:	880d883a 	mov	r6,r17
    3cf0:	e009883a 	mov	r4,fp
    3cf4:	00810004 	movi	r2,1024
    3cf8:	80006e26 	beq	r16,zero,3eb4 <__sfvwrite_r+0x230>
    3cfc:	800f883a 	mov	r7,r16
    3d00:	91400717 	ldw	r5,28(r18)
    3d04:	1400012e 	bgeu	r2,r16,3d0c <__sfvwrite_r+0x88>
    3d08:	100f883a 	mov	r7,r2
    3d0c:	90c00917 	ldw	r3,36(r18)
    3d10:	183ee83a 	callr	r3
    3d14:	1007883a 	mov	r3,r2
    3d18:	80a1c83a 	sub	r16,r16,r2
    3d1c:	88a3883a 	add	r17,r17,r2
    3d20:	00806d0e 	bge	zero,r2,3ed8 <__sfvwrite_r+0x254>
    3d24:	b0800217 	ldw	r2,8(r22)
    3d28:	10c5c83a 	sub	r2,r2,r3
    3d2c:	b0800215 	stw	r2,8(r22)
    3d30:	103fee1e 	bne	r2,zero,3cec <__sfvwrite_r+0x68>
    3d34:	0009883a 	mov	r4,zero
    3d38:	2005883a 	mov	r2,r4
    3d3c:	dfc00a17 	ldw	ra,40(sp)
    3d40:	df000917 	ldw	fp,36(sp)
    3d44:	ddc00817 	ldw	r23,32(sp)
    3d48:	dd800717 	ldw	r22,28(sp)
    3d4c:	dd400617 	ldw	r21,24(sp)
    3d50:	dd000517 	ldw	r20,20(sp)
    3d54:	dcc00417 	ldw	r19,16(sp)
    3d58:	dc800317 	ldw	r18,12(sp)
    3d5c:	dc400217 	ldw	r17,8(sp)
    3d60:	dc000117 	ldw	r16,4(sp)
    3d64:	dec00b04 	addi	sp,sp,44
    3d68:	f800283a 	ret
    3d6c:	00091dc0 	call	91dc <__swsetup_r>
    3d70:	1000e41e 	bne	r2,zero,4104 <__sfvwrite_r+0x480>
    3d74:	91c0030b 	ldhu	r7,12(r18)
    3d78:	b5400017 	ldw	r21,0(r22)
    3d7c:	3880008c 	andi	r2,r7,2
    3d80:	103fd81e 	bne	r2,zero,3ce4 <__sfvwrite_r+0x60>
    3d84:	3880004c 	andi	r2,r7,1
    3d88:	1005003a 	cmpeq	r2,r2,zero
    3d8c:	10005726 	beq	r2,zero,3eec <__sfvwrite_r+0x268>
    3d90:	0029883a 	mov	r20,zero
    3d94:	002f883a 	mov	r23,zero
    3d98:	a0004226 	beq	r20,zero,3ea4 <__sfvwrite_r+0x220>
    3d9c:	3880800c 	andi	r2,r7,512
    3da0:	94000217 	ldw	r16,8(r18)
    3da4:	10008b26 	beq	r2,zero,3fd4 <__sfvwrite_r+0x350>
    3da8:	800d883a 	mov	r6,r16
    3dac:	a400a536 	bltu	r20,r16,4044 <__sfvwrite_r+0x3c0>
    3db0:	3881200c 	andi	r2,r7,1152
    3db4:	10002726 	beq	r2,zero,3e54 <__sfvwrite_r+0x1d0>
    3db8:	90800517 	ldw	r2,20(r18)
    3dbc:	92000417 	ldw	r8,16(r18)
    3dc0:	91400017 	ldw	r5,0(r18)
    3dc4:	1087883a 	add	r3,r2,r2
    3dc8:	1887883a 	add	r3,r3,r2
    3dcc:	1808d7fa 	srli	r4,r3,31
    3dd0:	2a21c83a 	sub	r16,r5,r8
    3dd4:	80800044 	addi	r2,r16,1
    3dd8:	20c9883a 	add	r4,r4,r3
    3ddc:	2027d07a 	srai	r19,r4,1
    3de0:	a085883a 	add	r2,r20,r2
    3de4:	980d883a 	mov	r6,r19
    3de8:	9880022e 	bgeu	r19,r2,3df4 <__sfvwrite_r+0x170>
    3dec:	1027883a 	mov	r19,r2
    3df0:	100d883a 	mov	r6,r2
    3df4:	3881000c 	andi	r2,r7,1024
    3df8:	1000b826 	beq	r2,zero,40dc <__sfvwrite_r+0x458>
    3dfc:	300b883a 	mov	r5,r6
    3e00:	e009883a 	mov	r4,fp
    3e04:	0000a380 	call	a38 <_malloc_r>
    3e08:	10003126 	beq	r2,zero,3ed0 <__sfvwrite_r+0x24c>
    3e0c:	91400417 	ldw	r5,16(r18)
    3e10:	1009883a 	mov	r4,r2
    3e14:	800d883a 	mov	r6,r16
    3e18:	1023883a 	mov	r17,r2
    3e1c:	000125c0 	call	125c <memcpy>
    3e20:	90c0030b 	ldhu	r3,12(r18)
    3e24:	00beffc4 	movi	r2,-1025
    3e28:	1886703a 	and	r3,r3,r2
    3e2c:	18c02014 	ori	r3,r3,128
    3e30:	90c0030d 	sth	r3,12(r18)
    3e34:	9c07c83a 	sub	r3,r19,r16
    3e38:	8c05883a 	add	r2,r17,r16
    3e3c:	a00d883a 	mov	r6,r20
    3e40:	a021883a 	mov	r16,r20
    3e44:	90800015 	stw	r2,0(r18)
    3e48:	90c00215 	stw	r3,8(r18)
    3e4c:	94400415 	stw	r17,16(r18)
    3e50:	94c00515 	stw	r19,20(r18)
    3e54:	91000017 	ldw	r4,0(r18)
    3e58:	b80b883a 	mov	r5,r23
    3e5c:	a023883a 	mov	r17,r20
    3e60:	000451c0 	call	451c <memmove>
    3e64:	90c00217 	ldw	r3,8(r18)
    3e68:	90800017 	ldw	r2,0(r18)
    3e6c:	a027883a 	mov	r19,r20
    3e70:	1c07c83a 	sub	r3,r3,r16
    3e74:	1405883a 	add	r2,r2,r16
    3e78:	90c00215 	stw	r3,8(r18)
    3e7c:	a021883a 	mov	r16,r20
    3e80:	90800015 	stw	r2,0(r18)
    3e84:	b0800217 	ldw	r2,8(r22)
    3e88:	1405c83a 	sub	r2,r2,r16
    3e8c:	b0800215 	stw	r2,8(r22)
    3e90:	103fa826 	beq	r2,zero,3d34 <__sfvwrite_r+0xb0>
    3e94:	a469c83a 	sub	r20,r20,r17
    3e98:	91c0030b 	ldhu	r7,12(r18)
    3e9c:	bcef883a 	add	r23,r23,r19
    3ea0:	a03fbe1e 	bne	r20,zero,3d9c <__sfvwrite_r+0x118>
    3ea4:	adc00017 	ldw	r23,0(r21)
    3ea8:	ad000117 	ldw	r20,4(r21)
    3eac:	ad400204 	addi	r21,r21,8
    3eb0:	003fb906 	br	3d98 <__sfvwrite_r+0x114>
    3eb4:	ac400017 	ldw	r17,0(r21)
    3eb8:	ac000117 	ldw	r16,4(r21)
    3ebc:	ad400204 	addi	r21,r21,8
    3ec0:	003f8a06 	br	3cec <__sfvwrite_r+0x68>
    3ec4:	91400417 	ldw	r5,16(r18)
    3ec8:	e009883a 	mov	r4,fp
    3ecc:	00039700 	call	3970 <_free_r>
    3ed0:	00800304 	movi	r2,12
    3ed4:	e0800015 	stw	r2,0(fp)
    3ed8:	9080030b 	ldhu	r2,12(r18)
    3edc:	013fffc4 	movi	r4,-1
    3ee0:	10801014 	ori	r2,r2,64
    3ee4:	9080030d 	sth	r2,12(r18)
    3ee8:	003f9306 	br	3d38 <__sfvwrite_r+0xb4>
    3eec:	0027883a 	mov	r19,zero
    3ef0:	002f883a 	mov	r23,zero
    3ef4:	d8000015 	stw	zero,0(sp)
    3ef8:	0029883a 	mov	r20,zero
    3efc:	98001e26 	beq	r19,zero,3f78 <__sfvwrite_r+0x2f4>
    3f00:	d8c00017 	ldw	r3,0(sp)
    3f04:	1804c03a 	cmpne	r2,r3,zero
    3f08:	10005e26 	beq	r2,zero,4084 <__sfvwrite_r+0x400>
    3f0c:	9821883a 	mov	r16,r19
    3f10:	a4c0012e 	bgeu	r20,r19,3f18 <__sfvwrite_r+0x294>
    3f14:	a021883a 	mov	r16,r20
    3f18:	91000017 	ldw	r4,0(r18)
    3f1c:	90800417 	ldw	r2,16(r18)
    3f20:	91800217 	ldw	r6,8(r18)
    3f24:	91c00517 	ldw	r7,20(r18)
    3f28:	1100022e 	bgeu	r2,r4,3f34 <__sfvwrite_r+0x2b0>
    3f2c:	31e3883a 	add	r17,r6,r7
    3f30:	8c001616 	blt	r17,r16,3f8c <__sfvwrite_r+0x308>
    3f34:	81c03816 	blt	r16,r7,4018 <__sfvwrite_r+0x394>
    3f38:	90c00917 	ldw	r3,36(r18)
    3f3c:	91400717 	ldw	r5,28(r18)
    3f40:	e009883a 	mov	r4,fp
    3f44:	b80d883a 	mov	r6,r23
    3f48:	183ee83a 	callr	r3
    3f4c:	1023883a 	mov	r17,r2
    3f50:	00bfe10e 	bge	zero,r2,3ed8 <__sfvwrite_r+0x254>
    3f54:	a469c83a 	sub	r20,r20,r17
    3f58:	a0001826 	beq	r20,zero,3fbc <__sfvwrite_r+0x338>
    3f5c:	b0800217 	ldw	r2,8(r22)
    3f60:	1445c83a 	sub	r2,r2,r17
    3f64:	b0800215 	stw	r2,8(r22)
    3f68:	103f7226 	beq	r2,zero,3d34 <__sfvwrite_r+0xb0>
    3f6c:	9c67c83a 	sub	r19,r19,r17
    3f70:	bc6f883a 	add	r23,r23,r17
    3f74:	983fe21e 	bne	r19,zero,3f00 <__sfvwrite_r+0x27c>
    3f78:	adc00017 	ldw	r23,0(r21)
    3f7c:	acc00117 	ldw	r19,4(r21)
    3f80:	ad400204 	addi	r21,r21,8
    3f84:	d8000015 	stw	zero,0(sp)
    3f88:	003fdc06 	br	3efc <__sfvwrite_r+0x278>
    3f8c:	b80b883a 	mov	r5,r23
    3f90:	880d883a 	mov	r6,r17
    3f94:	000451c0 	call	451c <memmove>
    3f98:	90c00017 	ldw	r3,0(r18)
    3f9c:	e009883a 	mov	r4,fp
    3fa0:	900b883a 	mov	r5,r18
    3fa4:	1c47883a 	add	r3,r3,r17
    3fa8:	90c00015 	stw	r3,0(r18)
    3fac:	00033d80 	call	33d8 <_fflush_r>
    3fb0:	103fc91e 	bne	r2,zero,3ed8 <__sfvwrite_r+0x254>
    3fb4:	a469c83a 	sub	r20,r20,r17
    3fb8:	a03fe81e 	bne	r20,zero,3f5c <__sfvwrite_r+0x2d8>
    3fbc:	e009883a 	mov	r4,fp
    3fc0:	900b883a 	mov	r5,r18
    3fc4:	00033d80 	call	33d8 <_fflush_r>
    3fc8:	103fc31e 	bne	r2,zero,3ed8 <__sfvwrite_r+0x254>
    3fcc:	d8000015 	stw	zero,0(sp)
    3fd0:	003fe206 	br	3f5c <__sfvwrite_r+0x2d8>
    3fd4:	91000017 	ldw	r4,0(r18)
    3fd8:	90800417 	ldw	r2,16(r18)
    3fdc:	1100022e 	bgeu	r2,r4,3fe8 <__sfvwrite_r+0x364>
    3fe0:	8023883a 	mov	r17,r16
    3fe4:	85003136 	bltu	r16,r20,40ac <__sfvwrite_r+0x428>
    3fe8:	91c00517 	ldw	r7,20(r18)
    3fec:	a1c01836 	bltu	r20,r7,4050 <__sfvwrite_r+0x3cc>
    3ff0:	90c00917 	ldw	r3,36(r18)
    3ff4:	91400717 	ldw	r5,28(r18)
    3ff8:	e009883a 	mov	r4,fp
    3ffc:	b80d883a 	mov	r6,r23
    4000:	183ee83a 	callr	r3
    4004:	1021883a 	mov	r16,r2
    4008:	00bfb30e 	bge	zero,r2,3ed8 <__sfvwrite_r+0x254>
    400c:	1023883a 	mov	r17,r2
    4010:	1027883a 	mov	r19,r2
    4014:	003f9b06 	br	3e84 <__sfvwrite_r+0x200>
    4018:	b80b883a 	mov	r5,r23
    401c:	800d883a 	mov	r6,r16
    4020:	000451c0 	call	451c <memmove>
    4024:	90c00217 	ldw	r3,8(r18)
    4028:	90800017 	ldw	r2,0(r18)
    402c:	8023883a 	mov	r17,r16
    4030:	1c07c83a 	sub	r3,r3,r16
    4034:	1405883a 	add	r2,r2,r16
    4038:	90c00215 	stw	r3,8(r18)
    403c:	90800015 	stw	r2,0(r18)
    4040:	003fc406 	br	3f54 <__sfvwrite_r+0x2d0>
    4044:	a00d883a 	mov	r6,r20
    4048:	a021883a 	mov	r16,r20
    404c:	003f8106 	br	3e54 <__sfvwrite_r+0x1d0>
    4050:	b80b883a 	mov	r5,r23
    4054:	a00d883a 	mov	r6,r20
    4058:	000451c0 	call	451c <memmove>
    405c:	90c00217 	ldw	r3,8(r18)
    4060:	90800017 	ldw	r2,0(r18)
    4064:	a021883a 	mov	r16,r20
    4068:	1d07c83a 	sub	r3,r3,r20
    406c:	1505883a 	add	r2,r2,r20
    4070:	a023883a 	mov	r17,r20
    4074:	a027883a 	mov	r19,r20
    4078:	90c00215 	stw	r3,8(r18)
    407c:	90800015 	stw	r2,0(r18)
    4080:	003f8006 	br	3e84 <__sfvwrite_r+0x200>
    4084:	b809883a 	mov	r4,r23
    4088:	01400284 	movi	r5,10
    408c:	980d883a 	mov	r6,r19
    4090:	00011780 	call	1178 <memchr>
    4094:	10001726 	beq	r2,zero,40f4 <__sfvwrite_r+0x470>
    4098:	15c5c83a 	sub	r2,r2,r23
    409c:	15000044 	addi	r20,r2,1
    40a0:	00800044 	movi	r2,1
    40a4:	d8800015 	stw	r2,0(sp)
    40a8:	003f9806 	br	3f0c <__sfvwrite_r+0x288>
    40ac:	b80b883a 	mov	r5,r23
    40b0:	800d883a 	mov	r6,r16
    40b4:	000451c0 	call	451c <memmove>
    40b8:	90c00017 	ldw	r3,0(r18)
    40bc:	e009883a 	mov	r4,fp
    40c0:	900b883a 	mov	r5,r18
    40c4:	1c07883a 	add	r3,r3,r16
    40c8:	90c00015 	stw	r3,0(r18)
    40cc:	8027883a 	mov	r19,r16
    40d0:	00033d80 	call	33d8 <_fflush_r>
    40d4:	103f6b26 	beq	r2,zero,3e84 <__sfvwrite_r+0x200>
    40d8:	003f7f06 	br	3ed8 <__sfvwrite_r+0x254>
    40dc:	400b883a 	mov	r5,r8
    40e0:	e009883a 	mov	r4,fp
    40e4:	00046740 	call	4674 <_realloc_r>
    40e8:	103f7626 	beq	r2,zero,3ec4 <__sfvwrite_r+0x240>
    40ec:	1023883a 	mov	r17,r2
    40f0:	003f5006 	br	3e34 <__sfvwrite_r+0x1b0>
    40f4:	00c00044 	movi	r3,1
    40f8:	9d000044 	addi	r20,r19,1
    40fc:	d8c00015 	stw	r3,0(sp)
    4100:	003f8206 	br	3f0c <__sfvwrite_r+0x288>
    4104:	9080030b 	ldhu	r2,12(r18)
    4108:	00c00244 	movi	r3,9
    410c:	013fffc4 	movi	r4,-1
    4110:	10801014 	ori	r2,r2,64
    4114:	9080030d 	sth	r2,12(r18)
    4118:	e0c00015 	stw	r3,0(fp)
    411c:	003f0606 	br	3d38 <__sfvwrite_r+0xb4>

00004120 <iswspace>:
    4120:	00803fc4 	movi	r2,255
    4124:	0007883a 	mov	r3,zero
    4128:	11000636 	bltu	r2,r4,4144 <iswspace+0x24>
    412c:	00800074 	movhi	r2,1
    4130:	108f6b04 	addi	r2,r2,15788
    4134:	10c00017 	ldw	r3,0(r2)
    4138:	1907883a 	add	r3,r3,r4
    413c:	18800003 	ldbu	r2,0(r3)
    4140:	10c0020c 	andi	r3,r2,8
    4144:	1805883a 	mov	r2,r3
    4148:	f800283a 	ret

0000414c <__locale_charset>:
    414c:	d0a00617 	ldw	r2,-32744(gp)
    4150:	f800283a 	ret

00004154 <_localeconv_r>:
    4154:	00800074 	movhi	r2,1
    4158:	1087f604 	addi	r2,r2,8152
    415c:	f800283a 	ret

00004160 <localeconv>:
    4160:	00800074 	movhi	r2,1
    4164:	108f6704 	addi	r2,r2,15772
    4168:	11000017 	ldw	r4,0(r2)
    416c:	00041541 	jmpi	4154 <_localeconv_r>

00004170 <_setlocale_r>:
    4170:	defffc04 	addi	sp,sp,-16
    4174:	00c00074 	movhi	r3,1
    4178:	18c74504 	addi	r3,r3,7444
    417c:	dc800215 	stw	r18,8(sp)
    4180:	dc400115 	stw	r17,4(sp)
    4184:	dc000015 	stw	r16,0(sp)
    4188:	2023883a 	mov	r17,r4
    418c:	2825883a 	mov	r18,r5
    4190:	dfc00315 	stw	ra,12(sp)
    4194:	3021883a 	mov	r16,r6
    4198:	3009883a 	mov	r4,r6
    419c:	180b883a 	mov	r5,r3
    41a0:	30000926 	beq	r6,zero,41c8 <_setlocale_r+0x58>
    41a4:	0004e340 	call	4e34 <strcmp>
    41a8:	8009883a 	mov	r4,r16
    41ac:	01400074 	movhi	r5,1
    41b0:	29481f04 	addi	r5,r5,8316
    41b4:	10000b1e 	bne	r2,zero,41e4 <_setlocale_r+0x74>
    41b8:	8c000d15 	stw	r16,52(r17)
    41bc:	8c800c15 	stw	r18,48(r17)
    41c0:	00c00074 	movhi	r3,1
    41c4:	18c74504 	addi	r3,r3,7444
    41c8:	1805883a 	mov	r2,r3
    41cc:	dfc00317 	ldw	ra,12(sp)
    41d0:	dc800217 	ldw	r18,8(sp)
    41d4:	dc400117 	ldw	r17,4(sp)
    41d8:	dc000017 	ldw	r16,0(sp)
    41dc:	dec00404 	addi	sp,sp,16
    41e0:	f800283a 	ret
    41e4:	0004e340 	call	4e34 <strcmp>
    41e8:	0007883a 	mov	r3,zero
    41ec:	103ff226 	beq	r2,zero,41b8 <_setlocale_r+0x48>
    41f0:	003ff506 	br	41c8 <_setlocale_r+0x58>

000041f4 <setlocale>:
    41f4:	01800074 	movhi	r6,1
    41f8:	318f6704 	addi	r6,r6,15772
    41fc:	2007883a 	mov	r3,r4
    4200:	31000017 	ldw	r4,0(r6)
    4204:	280d883a 	mov	r6,r5
    4208:	180b883a 	mov	r5,r3
    420c:	00041701 	jmpi	4170 <_setlocale_r>

00004210 <_lseek_r>:
    4210:	defffd04 	addi	sp,sp,-12
    4214:	dc000015 	stw	r16,0(sp)
    4218:	04000074 	movhi	r16,1
    421c:	84161d04 	addi	r16,r16,22644
    4220:	dc400115 	stw	r17,4(sp)
    4224:	80000015 	stw	zero,0(r16)
    4228:	2023883a 	mov	r17,r4
    422c:	2809883a 	mov	r4,r5
    4230:	300b883a 	mov	r5,r6
    4234:	380d883a 	mov	r6,r7
    4238:	dfc00215 	stw	ra,8(sp)
    423c:	000f7340 	call	f734 <lseek>
    4240:	1007883a 	mov	r3,r2
    4244:	00bfffc4 	movi	r2,-1
    4248:	18800626 	beq	r3,r2,4264 <_lseek_r+0x54>
    424c:	1805883a 	mov	r2,r3
    4250:	dfc00217 	ldw	ra,8(sp)
    4254:	dc400117 	ldw	r17,4(sp)
    4258:	dc000017 	ldw	r16,0(sp)
    425c:	dec00304 	addi	sp,sp,12
    4260:	f800283a 	ret
    4264:	80800017 	ldw	r2,0(r16)
    4268:	103ff826 	beq	r2,zero,424c <_lseek_r+0x3c>
    426c:	88800015 	stw	r2,0(r17)
    4270:	1805883a 	mov	r2,r3
    4274:	dfc00217 	ldw	ra,8(sp)
    4278:	dc400117 	ldw	r17,4(sp)
    427c:	dc000017 	ldw	r16,0(sp)
    4280:	dec00304 	addi	sp,sp,12
    4284:	f800283a 	ret

00004288 <__smakebuf_r>:
    4288:	2880030b 	ldhu	r2,12(r5)
    428c:	deffed04 	addi	sp,sp,-76
    4290:	dc401015 	stw	r17,64(sp)
    4294:	1080008c 	andi	r2,r2,2
    4298:	dc000f15 	stw	r16,60(sp)
    429c:	dfc01215 	stw	ra,72(sp)
    42a0:	dc801115 	stw	r18,68(sp)
    42a4:	2821883a 	mov	r16,r5
    42a8:	2023883a 	mov	r17,r4
    42ac:	10000b26 	beq	r2,zero,42dc <__smakebuf_r+0x54>
    42b0:	28c010c4 	addi	r3,r5,67
    42b4:	00800044 	movi	r2,1
    42b8:	28800515 	stw	r2,20(r5)
    42bc:	28c00415 	stw	r3,16(r5)
    42c0:	28c00015 	stw	r3,0(r5)
    42c4:	dfc01217 	ldw	ra,72(sp)
    42c8:	dc801117 	ldw	r18,68(sp)
    42cc:	dc401017 	ldw	r17,64(sp)
    42d0:	dc000f17 	ldw	r16,60(sp)
    42d4:	dec01304 	addi	sp,sp,76
    42d8:	f800283a 	ret
    42dc:	2940038f 	ldh	r5,14(r5)
    42e0:	28002116 	blt	r5,zero,4368 <__smakebuf_r+0xe0>
    42e4:	d80d883a 	mov	r6,sp
    42e8:	000aae40 	call	aae4 <_fstat_r>
    42ec:	10001e16 	blt	r2,zero,4368 <__smakebuf_r+0xe0>
    42f0:	d8800117 	ldw	r2,4(sp)
    42f4:	00e00014 	movui	r3,32768
    42f8:	113c000c 	andi	r4,r2,61440
    42fc:	20c03126 	beq	r4,r3,43c4 <__smakebuf_r+0x13c>
    4300:	8080030b 	ldhu	r2,12(r16)
    4304:	00c80004 	movi	r3,8192
    4308:	10820014 	ori	r2,r2,2048
    430c:	8080030d 	sth	r2,12(r16)
    4310:	20c01e26 	beq	r4,r3,438c <__smakebuf_r+0x104>
    4314:	04810004 	movi	r18,1024
    4318:	8809883a 	mov	r4,r17
    431c:	900b883a 	mov	r5,r18
    4320:	0000a380 	call	a38 <_malloc_r>
    4324:	1009883a 	mov	r4,r2
    4328:	10003126 	beq	r2,zero,43f0 <__smakebuf_r+0x168>
    432c:	80c0030b 	ldhu	r3,12(r16)
    4330:	00800034 	movhi	r2,0
    4334:	1081d104 	addi	r2,r2,1860
    4338:	88800f15 	stw	r2,60(r17)
    433c:	18c02014 	ori	r3,r3,128
    4340:	84800515 	stw	r18,20(r16)
    4344:	80c0030d 	sth	r3,12(r16)
    4348:	81000415 	stw	r4,16(r16)
    434c:	81000015 	stw	r4,0(r16)
    4350:	dfc01217 	ldw	ra,72(sp)
    4354:	dc801117 	ldw	r18,68(sp)
    4358:	dc401017 	ldw	r17,64(sp)
    435c:	dc000f17 	ldw	r16,60(sp)
    4360:	dec01304 	addi	sp,sp,76
    4364:	f800283a 	ret
    4368:	80c0030b 	ldhu	r3,12(r16)
    436c:	1880200c 	andi	r2,r3,128
    4370:	10000426 	beq	r2,zero,4384 <__smakebuf_r+0xfc>
    4374:	04801004 	movi	r18,64
    4378:	18820014 	ori	r2,r3,2048
    437c:	8080030d 	sth	r2,12(r16)
    4380:	003fe506 	br	4318 <__smakebuf_r+0x90>
    4384:	04810004 	movi	r18,1024
    4388:	003ffb06 	br	4378 <__smakebuf_r+0xf0>
    438c:	8140038f 	ldh	r5,14(r16)
    4390:	8809883a 	mov	r4,r17
    4394:	000b6e00 	call	b6e0 <_isatty_r>
    4398:	103fde26 	beq	r2,zero,4314 <__smakebuf_r+0x8c>
    439c:	8080030b 	ldhu	r2,12(r16)
    43a0:	80c010c4 	addi	r3,r16,67
    43a4:	04810004 	movi	r18,1024
    43a8:	10800054 	ori	r2,r2,1
    43ac:	8080030d 	sth	r2,12(r16)
    43b0:	00800044 	movi	r2,1
    43b4:	80c00415 	stw	r3,16(r16)
    43b8:	80800515 	stw	r2,20(r16)
    43bc:	80c00015 	stw	r3,0(r16)
    43c0:	003fd506 	br	4318 <__smakebuf_r+0x90>
    43c4:	80c00a17 	ldw	r3,40(r16)
    43c8:	00800034 	movhi	r2,0
    43cc:	1085ed04 	addi	r2,r2,6068
    43d0:	18bfcb1e 	bne	r3,r2,4300 <__smakebuf_r+0x78>
    43d4:	8080030b 	ldhu	r2,12(r16)
    43d8:	00c10004 	movi	r3,1024
    43dc:	1825883a 	mov	r18,r3
    43e0:	10c4b03a 	or	r2,r2,r3
    43e4:	8080030d 	sth	r2,12(r16)
    43e8:	80c01315 	stw	r3,76(r16)
    43ec:	003fca06 	br	4318 <__smakebuf_r+0x90>
    43f0:	8100030b 	ldhu	r4,12(r16)
    43f4:	2080800c 	andi	r2,r4,512
    43f8:	103fb21e 	bne	r2,zero,42c4 <__smakebuf_r+0x3c>
    43fc:	80c010c4 	addi	r3,r16,67
    4400:	21000094 	ori	r4,r4,2
    4404:	00800044 	movi	r2,1
    4408:	80800515 	stw	r2,20(r16)
    440c:	8100030d 	sth	r4,12(r16)
    4410:	80c00415 	stw	r3,16(r16)
    4414:	80c00015 	stw	r3,0(r16)
    4418:	003faa06 	br	42c4 <__smakebuf_r+0x3c>

0000441c <_mbrtowc_r>:
    441c:	defffc04 	addi	sp,sp,-16
    4420:	dc400215 	stw	r17,8(sp)
    4424:	dc000115 	stw	r16,4(sp)
    4428:	dfc00315 	stw	ra,12(sp)
    442c:	dc000417 	ldw	r16,16(sp)
    4430:	2023883a 	mov	r17,r4
    4434:	30000f26 	beq	r6,zero,4474 <_mbrtowc_r+0x58>
    4438:	dc000015 	stw	r16,0(sp)
    443c:	00044dc0 	call	44dc <_mbtowc_r>
    4440:	1007883a 	mov	r3,r2
    4444:	00bfffc4 	movi	r2,-1
    4448:	1809883a 	mov	r4,r3
    444c:	1880111e 	bne	r3,r2,4494 <_mbrtowc_r+0x78>
    4450:	80000015 	stw	zero,0(r16)
    4454:	00802284 	movi	r2,138
    4458:	88800015 	stw	r2,0(r17)
    445c:	2005883a 	mov	r2,r4
    4460:	dfc00317 	ldw	ra,12(sp)
    4464:	dc400217 	ldw	r17,8(sp)
    4468:	dc000117 	ldw	r16,4(sp)
    446c:	dec00404 	addi	sp,sp,16
    4470:	f800283a 	ret
    4474:	000b883a 	mov	r5,zero
    4478:	01800074 	movhi	r6,1
    447c:	31881f04 	addi	r6,r6,8316
    4480:	01c00044 	movi	r7,1
    4484:	dc000015 	stw	r16,0(sp)
    4488:	00044dc0 	call	44dc <_mbtowc_r>
    448c:	1007883a 	mov	r3,r2
    4490:	003fec06 	br	4444 <_mbrtowc_r+0x28>
    4494:	1809883a 	mov	r4,r3
    4498:	003ff006 	br	445c <_mbrtowc_r+0x40>

0000449c <mbrtowc>:
    449c:	00800074 	movhi	r2,1
    44a0:	108f6704 	addi	r2,r2,15772
    44a4:	2017883a 	mov	r11,r4
    44a8:	11000017 	ldw	r4,0(r2)
    44ac:	defffe04 	addi	sp,sp,-8
    44b0:	3013883a 	mov	r9,r6
    44b4:	2805883a 	mov	r2,r5
    44b8:	d9c00015 	stw	r7,0(sp)
    44bc:	580b883a 	mov	r5,r11
    44c0:	100d883a 	mov	r6,r2
    44c4:	480f883a 	mov	r7,r9
    44c8:	dfc00115 	stw	ra,4(sp)
    44cc:	000441c0 	call	441c <_mbrtowc_r>
    44d0:	dfc00117 	ldw	ra,4(sp)
    44d4:	dec00204 	addi	sp,sp,8
    44d8:	f800283a 	ret

000044dc <_mbtowc_r>:
    44dc:	deffff04 	addi	sp,sp,-4
    44e0:	0005883a 	mov	r2,zero
    44e4:	28000326 	beq	r5,zero,44f4 <_mbtowc_r+0x18>
    44e8:	3000041e 	bne	r6,zero,44fc <_mbtowc_r+0x20>
    44ec:	dec00104 	addi	sp,sp,4
    44f0:	f800283a 	ret
    44f4:	d80b883a 	mov	r5,sp
    44f8:	303ffc26 	beq	r6,zero,44ec <_mbtowc_r+0x10>
    44fc:	00bfff84 	movi	r2,-2
    4500:	383ffa26 	beq	r7,zero,44ec <_mbtowc_r+0x10>
    4504:	30800003 	ldbu	r2,0(r6)
    4508:	28800015 	stw	r2,0(r5)
    450c:	30c00003 	ldbu	r3,0(r6)
    4510:	1804c03a 	cmpne	r2,r3,zero
    4514:	dec00104 	addi	sp,sp,4
    4518:	f800283a 	ret

0000451c <memmove>:
    451c:	2807883a 	mov	r3,r5
    4520:	2011883a 	mov	r8,r4
    4524:	29000c2e 	bgeu	r5,r4,4558 <memmove+0x3c>
    4528:	298f883a 	add	r7,r5,r6
    452c:	21c00a2e 	bgeu	r4,r7,4558 <memmove+0x3c>
    4530:	30000726 	beq	r6,zero,4550 <memmove+0x34>
    4534:	2187883a 	add	r3,r4,r6
    4538:	198dc83a 	sub	r6,r3,r6
    453c:	39ffffc4 	addi	r7,r7,-1
    4540:	38800003 	ldbu	r2,0(r7)
    4544:	18ffffc4 	addi	r3,r3,-1
    4548:	18800005 	stb	r2,0(r3)
    454c:	19bffb1e 	bne	r3,r6,453c <memmove+0x20>
    4550:	2005883a 	mov	r2,r4
    4554:	f800283a 	ret
    4558:	01c003c4 	movi	r7,15
    455c:	39800a36 	bltu	r7,r6,4588 <memmove+0x6c>
    4560:	303ffb26 	beq	r6,zero,4550 <memmove+0x34>
    4564:	400f883a 	mov	r7,r8
    4568:	320d883a 	add	r6,r6,r8
    456c:	28800003 	ldbu	r2,0(r5)
    4570:	29400044 	addi	r5,r5,1
    4574:	38800005 	stb	r2,0(r7)
    4578:	39c00044 	addi	r7,r7,1
    457c:	39bffb1e 	bne	r7,r6,456c <memmove+0x50>
    4580:	2005883a 	mov	r2,r4
    4584:	f800283a 	ret
    4588:	1904b03a 	or	r2,r3,r4
    458c:	108000cc 	andi	r2,r2,3
    4590:	103ff31e 	bne	r2,zero,4560 <memmove+0x44>
    4594:	3811883a 	mov	r8,r7
    4598:	180b883a 	mov	r5,r3
    459c:	200f883a 	mov	r7,r4
    45a0:	28c00017 	ldw	r3,0(r5)
    45a4:	31bffc04 	addi	r6,r6,-16
    45a8:	38c00015 	stw	r3,0(r7)
    45ac:	28800117 	ldw	r2,4(r5)
    45b0:	38800115 	stw	r2,4(r7)
    45b4:	28c00217 	ldw	r3,8(r5)
    45b8:	38c00215 	stw	r3,8(r7)
    45bc:	28800317 	ldw	r2,12(r5)
    45c0:	29400404 	addi	r5,r5,16
    45c4:	38800315 	stw	r2,12(r7)
    45c8:	39c00404 	addi	r7,r7,16
    45cc:	41bff436 	bltu	r8,r6,45a0 <memmove+0x84>
    45d0:	008000c4 	movi	r2,3
    45d4:	1180072e 	bgeu	r2,r6,45f4 <memmove+0xd8>
    45d8:	1007883a 	mov	r3,r2
    45dc:	28800017 	ldw	r2,0(r5)
    45e0:	31bfff04 	addi	r6,r6,-4
    45e4:	29400104 	addi	r5,r5,4
    45e8:	38800015 	stw	r2,0(r7)
    45ec:	39c00104 	addi	r7,r7,4
    45f0:	19bffa36 	bltu	r3,r6,45dc <memmove+0xc0>
    45f4:	3811883a 	mov	r8,r7
    45f8:	003fd906 	br	4560 <memmove+0x44>

000045fc <_read_r>:
    45fc:	defffd04 	addi	sp,sp,-12
    4600:	dc000015 	stw	r16,0(sp)
    4604:	04000074 	movhi	r16,1
    4608:	84161d04 	addi	r16,r16,22644
    460c:	dc400115 	stw	r17,4(sp)
    4610:	80000015 	stw	zero,0(r16)
    4614:	2023883a 	mov	r17,r4
    4618:	2809883a 	mov	r4,r5
    461c:	300b883a 	mov	r5,r6
    4620:	380d883a 	mov	r6,r7
    4624:	dfc00215 	stw	ra,8(sp)
    4628:	000f9300 	call	f930 <read>
    462c:	1007883a 	mov	r3,r2
    4630:	00bfffc4 	movi	r2,-1
    4634:	18800626 	beq	r3,r2,4650 <_read_r+0x54>
    4638:	1805883a 	mov	r2,r3
    463c:	dfc00217 	ldw	ra,8(sp)
    4640:	dc400117 	ldw	r17,4(sp)
    4644:	dc000017 	ldw	r16,0(sp)
    4648:	dec00304 	addi	sp,sp,12
    464c:	f800283a 	ret
    4650:	80800017 	ldw	r2,0(r16)
    4654:	103ff826 	beq	r2,zero,4638 <_read_r+0x3c>
    4658:	88800015 	stw	r2,0(r17)
    465c:	1805883a 	mov	r2,r3
    4660:	dfc00217 	ldw	ra,8(sp)
    4664:	dc400117 	ldw	r17,4(sp)
    4668:	dc000017 	ldw	r16,0(sp)
    466c:	dec00304 	addi	sp,sp,12
    4670:	f800283a 	ret

00004674 <_realloc_r>:
    4674:	defff404 	addi	sp,sp,-48
    4678:	dd800815 	stw	r22,32(sp)
    467c:	dc800415 	stw	r18,16(sp)
    4680:	dc400315 	stw	r17,12(sp)
    4684:	dfc00b15 	stw	ra,44(sp)
    4688:	df000a15 	stw	fp,40(sp)
    468c:	ddc00915 	stw	r23,36(sp)
    4690:	dd400715 	stw	r21,28(sp)
    4694:	dd000615 	stw	r20,24(sp)
    4698:	dcc00515 	stw	r19,20(sp)
    469c:	dc000215 	stw	r16,8(sp)
    46a0:	2825883a 	mov	r18,r5
    46a4:	3023883a 	mov	r17,r6
    46a8:	202d883a 	mov	r22,r4
    46ac:	2800c926 	beq	r5,zero,49d4 <_realloc_r+0x360>
    46b0:	000f8f00 	call	f8f0 <__malloc_lock>
    46b4:	943ffe04 	addi	r16,r18,-8
    46b8:	88c002c4 	addi	r3,r17,11
    46bc:	00800584 	movi	r2,22
    46c0:	82000117 	ldw	r8,4(r16)
    46c4:	10c01b2e 	bgeu	r2,r3,4734 <_realloc_r+0xc0>
    46c8:	00bffe04 	movi	r2,-8
    46cc:	188e703a 	and	r7,r3,r2
    46d0:	3839883a 	mov	fp,r7
    46d4:	38001a16 	blt	r7,zero,4740 <_realloc_r+0xcc>
    46d8:	e4401936 	bltu	fp,r17,4740 <_realloc_r+0xcc>
    46dc:	013fff04 	movi	r4,-4
    46e0:	4126703a 	and	r19,r8,r4
    46e4:	99c02616 	blt	r19,r7,4780 <_realloc_r+0x10c>
    46e8:	802b883a 	mov	r21,r16
    46ec:	9829883a 	mov	r20,r19
    46f0:	84000204 	addi	r16,r16,8
    46f4:	a80f883a 	mov	r7,r21
    46f8:	a70dc83a 	sub	r6,r20,fp
    46fc:	008003c4 	movi	r2,15
    4700:	1180c136 	bltu	r2,r6,4a08 <_realloc_r+0x394>
    4704:	38800117 	ldw	r2,4(r7)
    4708:	a549883a 	add	r4,r20,r21
    470c:	1080004c 	andi	r2,r2,1
    4710:	a084b03a 	or	r2,r20,r2
    4714:	38800115 	stw	r2,4(r7)
    4718:	20c00117 	ldw	r3,4(r4)
    471c:	18c00054 	ori	r3,r3,1
    4720:	20c00115 	stw	r3,4(r4)
    4724:	b009883a 	mov	r4,r22
    4728:	000f9100 	call	f910 <__malloc_unlock>
    472c:	8023883a 	mov	r17,r16
    4730:	00000606 	br	474c <_realloc_r+0xd8>
    4734:	01c00404 	movi	r7,16
    4738:	3839883a 	mov	fp,r7
    473c:	e47fe72e 	bgeu	fp,r17,46dc <_realloc_r+0x68>
    4740:	00800304 	movi	r2,12
    4744:	0023883a 	mov	r17,zero
    4748:	b0800015 	stw	r2,0(r22)
    474c:	8805883a 	mov	r2,r17
    4750:	dfc00b17 	ldw	ra,44(sp)
    4754:	df000a17 	ldw	fp,40(sp)
    4758:	ddc00917 	ldw	r23,36(sp)
    475c:	dd800817 	ldw	r22,32(sp)
    4760:	dd400717 	ldw	r21,28(sp)
    4764:	dd000617 	ldw	r20,24(sp)
    4768:	dcc00517 	ldw	r19,20(sp)
    476c:	dc800417 	ldw	r18,16(sp)
    4770:	dc400317 	ldw	r17,12(sp)
    4774:	dc000217 	ldw	r16,8(sp)
    4778:	dec00c04 	addi	sp,sp,48
    477c:	f800283a 	ret
    4780:	00800074 	movhi	r2,1
    4784:	1089d604 	addi	r2,r2,10072
    4788:	12400217 	ldw	r9,8(r2)
    478c:	84cd883a 	add	r6,r16,r19
    4790:	802b883a 	mov	r21,r16
    4794:	3240b926 	beq	r6,r9,4a7c <_realloc_r+0x408>
    4798:	31400117 	ldw	r5,4(r6)
    479c:	00bfff84 	movi	r2,-2
    47a0:	2884703a 	and	r2,r5,r2
    47a4:	1185883a 	add	r2,r2,r6
    47a8:	10c00117 	ldw	r3,4(r2)
    47ac:	18c0004c 	andi	r3,r3,1
    47b0:	1807003a 	cmpeq	r3,r3,zero
    47b4:	1800a326 	beq	r3,zero,4a44 <_realloc_r+0x3d0>
    47b8:	2908703a 	and	r4,r5,r4
    47bc:	9929883a 	add	r20,r19,r4
    47c0:	a1c0a30e 	bge	r20,r7,4a50 <_realloc_r+0x3dc>
    47c4:	4080004c 	andi	r2,r8,1
    47c8:	1000551e 	bne	r2,zero,4920 <_realloc_r+0x2ac>
    47cc:	80800017 	ldw	r2,0(r16)
    47d0:	80afc83a 	sub	r23,r16,r2
    47d4:	b8c00117 	ldw	r3,4(r23)
    47d8:	00bfff04 	movi	r2,-4
    47dc:	1884703a 	and	r2,r3,r2
    47e0:	30002e26 	beq	r6,zero,489c <_realloc_r+0x228>
    47e4:	3240b926 	beq	r6,r9,4acc <_realloc_r+0x458>
    47e8:	98a9883a 	add	r20,r19,r2
    47ec:	2509883a 	add	r4,r4,r20
    47f0:	d9000015 	stw	r4,0(sp)
    47f4:	21c02a16 	blt	r4,r7,48a0 <_realloc_r+0x22c>
    47f8:	30800317 	ldw	r2,12(r6)
    47fc:	30c00217 	ldw	r3,8(r6)
    4800:	01400904 	movi	r5,36
    4804:	99bfff04 	addi	r6,r19,-4
    4808:	18800315 	stw	r2,12(r3)
    480c:	10c00215 	stw	r3,8(r2)
    4810:	b9000317 	ldw	r4,12(r23)
    4814:	b8800217 	ldw	r2,8(r23)
    4818:	b82b883a 	mov	r21,r23
    481c:	bc000204 	addi	r16,r23,8
    4820:	20800215 	stw	r2,8(r4)
    4824:	11000315 	stw	r4,12(r2)
    4828:	2980e436 	bltu	r5,r6,4bbc <_realloc_r+0x548>
    482c:	008004c4 	movi	r2,19
    4830:	9009883a 	mov	r4,r18
    4834:	8011883a 	mov	r8,r16
    4838:	11800f2e 	bgeu	r2,r6,4878 <_realloc_r+0x204>
    483c:	90800017 	ldw	r2,0(r18)
    4840:	ba000404 	addi	r8,r23,16
    4844:	91000204 	addi	r4,r18,8
    4848:	b8800215 	stw	r2,8(r23)
    484c:	90c00117 	ldw	r3,4(r18)
    4850:	008006c4 	movi	r2,27
    4854:	b8c00315 	stw	r3,12(r23)
    4858:	1180072e 	bgeu	r2,r6,4878 <_realloc_r+0x204>
    485c:	90c00217 	ldw	r3,8(r18)
    4860:	ba000604 	addi	r8,r23,24
    4864:	91000404 	addi	r4,r18,16
    4868:	b8c00415 	stw	r3,16(r23)
    486c:	90800317 	ldw	r2,12(r18)
    4870:	b8800515 	stw	r2,20(r23)
    4874:	3140e726 	beq	r6,r5,4c14 <_realloc_r+0x5a0>
    4878:	20800017 	ldw	r2,0(r4)
    487c:	dd000017 	ldw	r20,0(sp)
    4880:	b80f883a 	mov	r7,r23
    4884:	40800015 	stw	r2,0(r8)
    4888:	20c00117 	ldw	r3,4(r4)
    488c:	40c00115 	stw	r3,4(r8)
    4890:	20800217 	ldw	r2,8(r4)
    4894:	40800215 	stw	r2,8(r8)
    4898:	003f9706 	br	46f8 <_realloc_r+0x84>
    489c:	98a9883a 	add	r20,r19,r2
    48a0:	a1c01f16 	blt	r20,r7,4920 <_realloc_r+0x2ac>
    48a4:	b8c00317 	ldw	r3,12(r23)
    48a8:	b8800217 	ldw	r2,8(r23)
    48ac:	99bfff04 	addi	r6,r19,-4
    48b0:	01400904 	movi	r5,36
    48b4:	b82b883a 	mov	r21,r23
    48b8:	18800215 	stw	r2,8(r3)
    48bc:	10c00315 	stw	r3,12(r2)
    48c0:	bc000204 	addi	r16,r23,8
    48c4:	2980c336 	bltu	r5,r6,4bd4 <_realloc_r+0x560>
    48c8:	008004c4 	movi	r2,19
    48cc:	9009883a 	mov	r4,r18
    48d0:	8011883a 	mov	r8,r16
    48d4:	11800f2e 	bgeu	r2,r6,4914 <_realloc_r+0x2a0>
    48d8:	90800017 	ldw	r2,0(r18)
    48dc:	ba000404 	addi	r8,r23,16
    48e0:	91000204 	addi	r4,r18,8
    48e4:	b8800215 	stw	r2,8(r23)
    48e8:	90c00117 	ldw	r3,4(r18)
    48ec:	008006c4 	movi	r2,27
    48f0:	b8c00315 	stw	r3,12(r23)
    48f4:	1180072e 	bgeu	r2,r6,4914 <_realloc_r+0x2a0>
    48f8:	90c00217 	ldw	r3,8(r18)
    48fc:	ba000604 	addi	r8,r23,24
    4900:	91000404 	addi	r4,r18,16
    4904:	b8c00415 	stw	r3,16(r23)
    4908:	90800317 	ldw	r2,12(r18)
    490c:	b8800515 	stw	r2,20(r23)
    4910:	3140c726 	beq	r6,r5,4c30 <_realloc_r+0x5bc>
    4914:	20800017 	ldw	r2,0(r4)
    4918:	b80f883a 	mov	r7,r23
    491c:	003fd906 	br	4884 <_realloc_r+0x210>
    4920:	880b883a 	mov	r5,r17
    4924:	b009883a 	mov	r4,r22
    4928:	0000a380 	call	a38 <_malloc_r>
    492c:	1023883a 	mov	r17,r2
    4930:	10002526 	beq	r2,zero,49c8 <_realloc_r+0x354>
    4934:	80800117 	ldw	r2,4(r16)
    4938:	00ffff84 	movi	r3,-2
    493c:	893ffe04 	addi	r4,r17,-8
    4940:	10c4703a 	and	r2,r2,r3
    4944:	8085883a 	add	r2,r16,r2
    4948:	20809526 	beq	r4,r2,4ba0 <_realloc_r+0x52c>
    494c:	99bfff04 	addi	r6,r19,-4
    4950:	01c00904 	movi	r7,36
    4954:	39804536 	bltu	r7,r6,4a6c <_realloc_r+0x3f8>
    4958:	008004c4 	movi	r2,19
    495c:	9009883a 	mov	r4,r18
    4960:	880b883a 	mov	r5,r17
    4964:	11800f2e 	bgeu	r2,r6,49a4 <_realloc_r+0x330>
    4968:	90800017 	ldw	r2,0(r18)
    496c:	89400204 	addi	r5,r17,8
    4970:	91000204 	addi	r4,r18,8
    4974:	88800015 	stw	r2,0(r17)
    4978:	90c00117 	ldw	r3,4(r18)
    497c:	008006c4 	movi	r2,27
    4980:	88c00115 	stw	r3,4(r17)
    4984:	1180072e 	bgeu	r2,r6,49a4 <_realloc_r+0x330>
    4988:	90c00217 	ldw	r3,8(r18)
    498c:	89400404 	addi	r5,r17,16
    4990:	91000404 	addi	r4,r18,16
    4994:	88c00215 	stw	r3,8(r17)
    4998:	90800317 	ldw	r2,12(r18)
    499c:	88800315 	stw	r2,12(r17)
    49a0:	31c09126 	beq	r6,r7,4be8 <_realloc_r+0x574>
    49a4:	20800017 	ldw	r2,0(r4)
    49a8:	28800015 	stw	r2,0(r5)
    49ac:	20c00117 	ldw	r3,4(r4)
    49b0:	28c00115 	stw	r3,4(r5)
    49b4:	20800217 	ldw	r2,8(r4)
    49b8:	28800215 	stw	r2,8(r5)
    49bc:	900b883a 	mov	r5,r18
    49c0:	b009883a 	mov	r4,r22
    49c4:	00039700 	call	3970 <_free_r>
    49c8:	b009883a 	mov	r4,r22
    49cc:	000f9100 	call	f910 <__malloc_unlock>
    49d0:	003f5e06 	br	474c <_realloc_r+0xd8>
    49d4:	300b883a 	mov	r5,r6
    49d8:	dfc00b17 	ldw	ra,44(sp)
    49dc:	df000a17 	ldw	fp,40(sp)
    49e0:	ddc00917 	ldw	r23,36(sp)
    49e4:	dd800817 	ldw	r22,32(sp)
    49e8:	dd400717 	ldw	r21,28(sp)
    49ec:	dd000617 	ldw	r20,24(sp)
    49f0:	dcc00517 	ldw	r19,20(sp)
    49f4:	dc800417 	ldw	r18,16(sp)
    49f8:	dc400317 	ldw	r17,12(sp)
    49fc:	dc000217 	ldw	r16,8(sp)
    4a00:	dec00c04 	addi	sp,sp,48
    4a04:	0000a381 	jmpi	a38 <_malloc_r>
    4a08:	38800117 	ldw	r2,4(r7)
    4a0c:	e54b883a 	add	r5,fp,r21
    4a10:	31000054 	ori	r4,r6,1
    4a14:	1080004c 	andi	r2,r2,1
    4a18:	1704b03a 	or	r2,r2,fp
    4a1c:	38800115 	stw	r2,4(r7)
    4a20:	29000115 	stw	r4,4(r5)
    4a24:	2987883a 	add	r3,r5,r6
    4a28:	18800117 	ldw	r2,4(r3)
    4a2c:	29400204 	addi	r5,r5,8
    4a30:	b009883a 	mov	r4,r22
    4a34:	10800054 	ori	r2,r2,1
    4a38:	18800115 	stw	r2,4(r3)
    4a3c:	00039700 	call	3970 <_free_r>
    4a40:	003f3806 	br	4724 <_realloc_r+0xb0>
    4a44:	000d883a 	mov	r6,zero
    4a48:	0009883a 	mov	r4,zero
    4a4c:	003f5d06 	br	47c4 <_realloc_r+0x150>
    4a50:	30c00217 	ldw	r3,8(r6)
    4a54:	30800317 	ldw	r2,12(r6)
    4a58:	800f883a 	mov	r7,r16
    4a5c:	84000204 	addi	r16,r16,8
    4a60:	10c00215 	stw	r3,8(r2)
    4a64:	18800315 	stw	r2,12(r3)
    4a68:	003f2306 	br	46f8 <_realloc_r+0x84>
    4a6c:	8809883a 	mov	r4,r17
    4a70:	900b883a 	mov	r5,r18
    4a74:	000451c0 	call	451c <memmove>
    4a78:	003fd006 	br	49bc <_realloc_r+0x348>
    4a7c:	30800117 	ldw	r2,4(r6)
    4a80:	e0c00404 	addi	r3,fp,16
    4a84:	1108703a 	and	r4,r2,r4
    4a88:	9905883a 	add	r2,r19,r4
    4a8c:	10ff4d16 	blt	r2,r3,47c4 <_realloc_r+0x150>
    4a90:	1705c83a 	sub	r2,r2,fp
    4a94:	870b883a 	add	r5,r16,fp
    4a98:	10800054 	ori	r2,r2,1
    4a9c:	28800115 	stw	r2,4(r5)
    4aa0:	80c00117 	ldw	r3,4(r16)
    4aa4:	00800074 	movhi	r2,1
    4aa8:	1089d604 	addi	r2,r2,10072
    4aac:	b009883a 	mov	r4,r22
    4ab0:	18c0004c 	andi	r3,r3,1
    4ab4:	e0c6b03a 	or	r3,fp,r3
    4ab8:	11400215 	stw	r5,8(r2)
    4abc:	80c00115 	stw	r3,4(r16)
    4ac0:	000f9100 	call	f910 <__malloc_unlock>
    4ac4:	84400204 	addi	r17,r16,8
    4ac8:	003f2006 	br	474c <_realloc_r+0xd8>
    4acc:	98a9883a 	add	r20,r19,r2
    4ad0:	2509883a 	add	r4,r4,r20
    4ad4:	e0800404 	addi	r2,fp,16
    4ad8:	d9000115 	stw	r4,4(sp)
    4adc:	20bf7016 	blt	r4,r2,48a0 <_realloc_r+0x22c>
    4ae0:	b8c00317 	ldw	r3,12(r23)
    4ae4:	b8800217 	ldw	r2,8(r23)
    4ae8:	99bfff04 	addi	r6,r19,-4
    4aec:	01400904 	movi	r5,36
    4af0:	18800215 	stw	r2,8(r3)
    4af4:	10c00315 	stw	r3,12(r2)
    4af8:	bc400204 	addi	r17,r23,8
    4afc:	29804136 	bltu	r5,r6,4c04 <_realloc_r+0x590>
    4b00:	008004c4 	movi	r2,19
    4b04:	9009883a 	mov	r4,r18
    4b08:	880f883a 	mov	r7,r17
    4b0c:	11800f2e 	bgeu	r2,r6,4b4c <_realloc_r+0x4d8>
    4b10:	90800017 	ldw	r2,0(r18)
    4b14:	b9c00404 	addi	r7,r23,16
    4b18:	91000204 	addi	r4,r18,8
    4b1c:	b8800215 	stw	r2,8(r23)
    4b20:	90c00117 	ldw	r3,4(r18)
    4b24:	008006c4 	movi	r2,27
    4b28:	b8c00315 	stw	r3,12(r23)
    4b2c:	1180072e 	bgeu	r2,r6,4b4c <_realloc_r+0x4d8>
    4b30:	90c00217 	ldw	r3,8(r18)
    4b34:	b9c00604 	addi	r7,r23,24
    4b38:	91000404 	addi	r4,r18,16
    4b3c:	b8c00415 	stw	r3,16(r23)
    4b40:	90800317 	ldw	r2,12(r18)
    4b44:	b8800515 	stw	r2,20(r23)
    4b48:	31404026 	beq	r6,r5,4c4c <_realloc_r+0x5d8>
    4b4c:	20800017 	ldw	r2,0(r4)
    4b50:	38800015 	stw	r2,0(r7)
    4b54:	20c00117 	ldw	r3,4(r4)
    4b58:	38c00115 	stw	r3,4(r7)
    4b5c:	20800217 	ldw	r2,8(r4)
    4b60:	38800215 	stw	r2,8(r7)
    4b64:	d8c00117 	ldw	r3,4(sp)
    4b68:	bf0b883a 	add	r5,r23,fp
    4b6c:	b009883a 	mov	r4,r22
    4b70:	1f05c83a 	sub	r2,r3,fp
    4b74:	10800054 	ori	r2,r2,1
    4b78:	28800115 	stw	r2,4(r5)
    4b7c:	b8c00117 	ldw	r3,4(r23)
    4b80:	00800074 	movhi	r2,1
    4b84:	1089d604 	addi	r2,r2,10072
    4b88:	11400215 	stw	r5,8(r2)
    4b8c:	18c0004c 	andi	r3,r3,1
    4b90:	e0c6b03a 	or	r3,fp,r3
    4b94:	b8c00115 	stw	r3,4(r23)
    4b98:	000f9100 	call	f910 <__malloc_unlock>
    4b9c:	003eeb06 	br	474c <_realloc_r+0xd8>
    4ba0:	20800117 	ldw	r2,4(r4)
    4ba4:	00ffff04 	movi	r3,-4
    4ba8:	800f883a 	mov	r7,r16
    4bac:	10c4703a 	and	r2,r2,r3
    4bb0:	98a9883a 	add	r20,r19,r2
    4bb4:	84000204 	addi	r16,r16,8
    4bb8:	003ecf06 	br	46f8 <_realloc_r+0x84>
    4bbc:	900b883a 	mov	r5,r18
    4bc0:	8009883a 	mov	r4,r16
    4bc4:	000451c0 	call	451c <memmove>
    4bc8:	dd000017 	ldw	r20,0(sp)
    4bcc:	b80f883a 	mov	r7,r23
    4bd0:	003ec906 	br	46f8 <_realloc_r+0x84>
    4bd4:	900b883a 	mov	r5,r18
    4bd8:	8009883a 	mov	r4,r16
    4bdc:	000451c0 	call	451c <memmove>
    4be0:	b80f883a 	mov	r7,r23
    4be4:	003ec406 	br	46f8 <_realloc_r+0x84>
    4be8:	90c00417 	ldw	r3,16(r18)
    4bec:	89400604 	addi	r5,r17,24
    4bf0:	91000604 	addi	r4,r18,24
    4bf4:	88c00415 	stw	r3,16(r17)
    4bf8:	90800517 	ldw	r2,20(r18)
    4bfc:	88800515 	stw	r2,20(r17)
    4c00:	003f6806 	br	49a4 <_realloc_r+0x330>
    4c04:	900b883a 	mov	r5,r18
    4c08:	8809883a 	mov	r4,r17
    4c0c:	000451c0 	call	451c <memmove>
    4c10:	003fd406 	br	4b64 <_realloc_r+0x4f0>
    4c14:	90c00417 	ldw	r3,16(r18)
    4c18:	91000604 	addi	r4,r18,24
    4c1c:	ba000804 	addi	r8,r23,32
    4c20:	b8c00615 	stw	r3,24(r23)
    4c24:	90800517 	ldw	r2,20(r18)
    4c28:	b8800715 	stw	r2,28(r23)
    4c2c:	003f1206 	br	4878 <_realloc_r+0x204>
    4c30:	90c00417 	ldw	r3,16(r18)
    4c34:	91000604 	addi	r4,r18,24
    4c38:	ba000804 	addi	r8,r23,32
    4c3c:	b8c00615 	stw	r3,24(r23)
    4c40:	90800517 	ldw	r2,20(r18)
    4c44:	b8800715 	stw	r2,28(r23)
    4c48:	003f3206 	br	4914 <_realloc_r+0x2a0>
    4c4c:	90c00417 	ldw	r3,16(r18)
    4c50:	91000604 	addi	r4,r18,24
    4c54:	b9c00804 	addi	r7,r23,32
    4c58:	b8c00615 	stw	r3,24(r23)
    4c5c:	90800517 	ldw	r2,20(r18)
    4c60:	b8800715 	stw	r2,28(r23)
    4c64:	003fb906 	br	4b4c <_realloc_r+0x4d8>

00004c68 <__isnand>:
    4c68:	200d883a 	mov	r6,r4
    4c6c:	0109c83a 	sub	r4,zero,r4
    4c70:	2188b03a 	or	r4,r4,r6
    4c74:	2008d7fa 	srli	r4,r4,31
    4c78:	00a00034 	movhi	r2,32768
    4c7c:	10bfffc4 	addi	r2,r2,-1
    4c80:	1144703a 	and	r2,r2,r5
    4c84:	2088b03a 	or	r4,r4,r2
    4c88:	009ffc34 	movhi	r2,32752
    4c8c:	1105c83a 	sub	r2,r2,r4
    4c90:	1004d7fa 	srli	r2,r2,31
    4c94:	f800283a 	ret

00004c98 <__sccl>:
    4c98:	28c00003 	ldbu	r3,0(r5)
    4c9c:	00801784 	movi	r2,94
    4ca0:	2a000044 	addi	r8,r5,1
    4ca4:	18802526 	beq	r3,r2,4d3c <__sccl+0xa4>
    4ca8:	180f883a 	mov	r7,r3
    4cac:	0013883a 	mov	r9,zero
    4cb0:	000d883a 	mov	r6,zero
    4cb4:	0007883a 	mov	r3,zero
    4cb8:	01404004 	movi	r5,256
    4cbc:	1905883a 	add	r2,r3,r4
    4cc0:	18c00044 	addi	r3,r3,1
    4cc4:	11800005 	stb	r6,0(r2)
    4cc8:	197ffc1e 	bne	r3,r5,4cbc <__sccl+0x24>
    4ccc:	38000c26 	beq	r7,zero,4d00 <__sccl+0x68>
    4cd0:	00800044 	movi	r2,1
    4cd4:	124dc83a 	sub	r6,r2,r9
    4cd8:	3905883a 	add	r2,r7,r4
    4cdc:	11800005 	stb	r6,0(r2)
    4ce0:	41400044 	addi	r5,r8,1
    4ce4:	02400b44 	movi	r9,45
    4ce8:	02801744 	movi	r10,93
    4cec:	28bfffc3 	ldbu	r2,-1(r5)
    4cf0:	2811883a 	mov	r8,r5
    4cf4:	12400726 	beq	r2,r9,4d14 <__sccl+0x7c>
    4cf8:	12800226 	beq	r2,r10,4d04 <__sccl+0x6c>
    4cfc:	1000031e 	bne	r2,zero,4d0c <__sccl+0x74>
    4d00:	423fffc4 	addi	r8,r8,-1
    4d04:	4005883a 	mov	r2,r8
    4d08:	f800283a 	ret
    4d0c:	100f883a 	mov	r7,r2
    4d10:	003ff106 	br	4cd8 <__sccl+0x40>
    4d14:	28c00003 	ldbu	r3,0(r5)
    4d18:	1a800d26 	beq	r3,r10,4d50 <__sccl+0xb8>
    4d1c:	19c00c16 	blt	r3,r7,4d50 <__sccl+0xb8>
    4d20:	21c5883a 	add	r2,r4,r7
    4d24:	39c00044 	addi	r7,r7,1
    4d28:	11800045 	stb	r6,1(r2)
    4d2c:	10800044 	addi	r2,r2,1
    4d30:	38fffc16 	blt	r7,r3,4d24 <__sccl+0x8c>
    4d34:	29400084 	addi	r5,r5,2
    4d38:	003fec06 	br	4cec <__sccl+0x54>
    4d3c:	29c00043 	ldbu	r7,1(r5)
    4d40:	02400044 	movi	r9,1
    4d44:	2a000084 	addi	r8,r5,2
    4d48:	480d883a 	mov	r6,r9
    4d4c:	003fd906 	br	4cb4 <__sccl+0x1c>
    4d50:	01c00b44 	movi	r7,45
    4d54:	003fe006 	br	4cd8 <__sccl+0x40>

00004d58 <nanf>:
    4d58:	009ff034 	movhi	r2,32704
    4d5c:	f800283a 	ret

00004d60 <sprintf>:
    4d60:	deffe504 	addi	sp,sp,-108
    4d64:	2013883a 	mov	r9,r4
    4d68:	dfc01815 	stw	ra,96(sp)
    4d6c:	d9801915 	stw	r6,100(sp)
    4d70:	d9c01a15 	stw	r7,104(sp)
    4d74:	d8801904 	addi	r2,sp,100
    4d78:	d8800015 	stw	r2,0(sp)
    4d7c:	00800074 	movhi	r2,1
    4d80:	108f6704 	addi	r2,r2,15772
    4d84:	11000017 	ldw	r4,0(r2)
    4d88:	d9c00017 	ldw	r7,0(sp)
    4d8c:	00808204 	movi	r2,520
    4d90:	00e00034 	movhi	r3,32768
    4d94:	18ffffc4 	addi	r3,r3,-1
    4d98:	280d883a 	mov	r6,r5
    4d9c:	d880040d 	sth	r2,16(sp)
    4da0:	d9400104 	addi	r5,sp,4
    4da4:	00bfffc4 	movi	r2,-1
    4da8:	d8c00615 	stw	r3,24(sp)
    4dac:	d8c00315 	stw	r3,12(sp)
    4db0:	da400515 	stw	r9,20(sp)
    4db4:	d880048d 	sth	r2,18(sp)
    4db8:	da400115 	stw	r9,4(sp)
    4dbc:	000730c0 	call	730c <___vfprintf_internal_r>
    4dc0:	d8c00117 	ldw	r3,4(sp)
    4dc4:	18000005 	stb	zero,0(r3)
    4dc8:	dfc01817 	ldw	ra,96(sp)
    4dcc:	dec01b04 	addi	sp,sp,108
    4dd0:	f800283a 	ret

00004dd4 <_sprintf_r>:
    4dd4:	deffe604 	addi	sp,sp,-104
    4dd8:	2813883a 	mov	r9,r5
    4ddc:	dfc01815 	stw	ra,96(sp)
    4de0:	d9c01915 	stw	r7,100(sp)
    4de4:	d8801904 	addi	r2,sp,100
    4de8:	d8800015 	stw	r2,0(sp)
    4dec:	100f883a 	mov	r7,r2
    4df0:	00808204 	movi	r2,520
    4df4:	00e00034 	movhi	r3,32768
    4df8:	18ffffc4 	addi	r3,r3,-1
    4dfc:	d880040d 	sth	r2,16(sp)
    4e00:	d9400104 	addi	r5,sp,4
    4e04:	00bfffc4 	movi	r2,-1
    4e08:	d8c00615 	stw	r3,24(sp)
    4e0c:	d8c00315 	stw	r3,12(sp)
    4e10:	da400515 	stw	r9,20(sp)
    4e14:	d880048d 	sth	r2,18(sp)
    4e18:	da400115 	stw	r9,4(sp)
    4e1c:	000730c0 	call	730c <___vfprintf_internal_r>
    4e20:	d8c00117 	ldw	r3,4(sp)
    4e24:	18000005 	stb	zero,0(r3)
    4e28:	dfc01817 	ldw	ra,96(sp)
    4e2c:	dec01a04 	addi	sp,sp,104
    4e30:	f800283a 	ret

00004e34 <strcmp>:
    4e34:	2144b03a 	or	r2,r4,r5
    4e38:	108000cc 	andi	r2,r2,3
    4e3c:	10001d1e 	bne	r2,zero,4eb4 <strcmp+0x80>
    4e40:	200f883a 	mov	r7,r4
    4e44:	28800017 	ldw	r2,0(r5)
    4e48:	21000017 	ldw	r4,0(r4)
    4e4c:	280d883a 	mov	r6,r5
    4e50:	2080161e 	bne	r4,r2,4eac <strcmp+0x78>
    4e54:	023fbff4 	movhi	r8,65279
    4e58:	423fbfc4 	addi	r8,r8,-257
    4e5c:	2207883a 	add	r3,r4,r8
    4e60:	01602074 	movhi	r5,32897
    4e64:	29602004 	addi	r5,r5,-32640
    4e68:	1946703a 	and	r3,r3,r5
    4e6c:	0104303a 	nor	r2,zero,r4
    4e70:	10c4703a 	and	r2,r2,r3
    4e74:	10001c1e 	bne	r2,zero,4ee8 <strcmp+0xb4>
    4e78:	4013883a 	mov	r9,r8
    4e7c:	2811883a 	mov	r8,r5
    4e80:	00000106 	br	4e88 <strcmp+0x54>
    4e84:	1800181e 	bne	r3,zero,4ee8 <strcmp+0xb4>
    4e88:	39c00104 	addi	r7,r7,4
    4e8c:	39000017 	ldw	r4,0(r7)
    4e90:	31800104 	addi	r6,r6,4
    4e94:	31400017 	ldw	r5,0(r6)
    4e98:	2245883a 	add	r2,r4,r9
    4e9c:	1204703a 	and	r2,r2,r8
    4ea0:	0106303a 	nor	r3,zero,r4
    4ea4:	1886703a 	and	r3,r3,r2
    4ea8:	217ff626 	beq	r4,r5,4e84 <strcmp+0x50>
    4eac:	3809883a 	mov	r4,r7
    4eb0:	300b883a 	mov	r5,r6
    4eb4:	20c00007 	ldb	r3,0(r4)
    4eb8:	1800051e 	bne	r3,zero,4ed0 <strcmp+0x9c>
    4ebc:	00000606 	br	4ed8 <strcmp+0xa4>
    4ec0:	21000044 	addi	r4,r4,1
    4ec4:	20c00007 	ldb	r3,0(r4)
    4ec8:	29400044 	addi	r5,r5,1
    4ecc:	18000226 	beq	r3,zero,4ed8 <strcmp+0xa4>
    4ed0:	28800007 	ldb	r2,0(r5)
    4ed4:	18bffa26 	beq	r3,r2,4ec0 <strcmp+0x8c>
    4ed8:	20c00003 	ldbu	r3,0(r4)
    4edc:	28800003 	ldbu	r2,0(r5)
    4ee0:	1885c83a 	sub	r2,r3,r2
    4ee4:	f800283a 	ret
    4ee8:	0005883a 	mov	r2,zero
    4eec:	f800283a 	ret

00004ef0 <match>:
    4ef0:	21800017 	ldw	r6,0(r4)
    4ef4:	01c01004 	movi	r7,64
    4ef8:	02001684 	movi	r8,90
    4efc:	28800007 	ldb	r2,0(r5)
    4f00:	29400044 	addi	r5,r5,1
    4f04:	10000826 	beq	r2,zero,4f28 <match+0x38>
    4f08:	31800044 	addi	r6,r6,1
    4f0c:	30c00007 	ldb	r3,0(r6)
    4f10:	38c0020e 	bge	r7,r3,4f1c <match+0x2c>
    4f14:	40c00116 	blt	r8,r3,4f1c <match+0x2c>
    4f18:	18c00804 	addi	r3,r3,32
    4f1c:	18bff726 	beq	r3,r2,4efc <match+0xc>
    4f20:	0005883a 	mov	r2,zero
    4f24:	f800283a 	ret
    4f28:	30800044 	addi	r2,r6,1
    4f2c:	20800015 	stw	r2,0(r4)
    4f30:	00800044 	movi	r2,1
    4f34:	f800283a 	ret

00004f38 <_strtod_r>:
    4f38:	deffde04 	addi	sp,sp,-136
    4f3c:	df002015 	stw	fp,128(sp)
    4f40:	dd401d15 	stw	r21,116(sp)
    4f44:	dc401915 	stw	r17,100(sp)
    4f48:	dfc02115 	stw	ra,132(sp)
    4f4c:	ddc01f15 	stw	r23,124(sp)
    4f50:	dd801e15 	stw	r22,120(sp)
    4f54:	dd001c15 	stw	r20,112(sp)
    4f58:	dcc01b15 	stw	r19,108(sp)
    4f5c:	dc801a15 	stw	r18,104(sp)
    4f60:	dc001815 	stw	r16,96(sp)
    4f64:	2823883a 	mov	r17,r5
    4f68:	202b883a 	mov	r21,r4
    4f6c:	d9801515 	stw	r6,84(sp)
    4f70:	d8000915 	stw	zero,36(sp)
    4f74:	d8000a15 	stw	zero,40(sp)
    4f78:	d9400415 	stw	r5,16(sp)
    4f7c:	df000904 	addi	fp,sp,36
    4f80:	da000417 	ldw	r8,16(sp)
    4f84:	00800b44 	movi	r2,45
    4f88:	40c00003 	ldbu	r3,0(r8)
    4f8c:	10c03536 	bltu	r2,r3,5064 <_strtod_r+0x12c>
    4f90:	18c5883a 	add	r2,r3,r3
    4f94:	1085883a 	add	r2,r2,r2
    4f98:	00c00034 	movhi	r3,0
    4f9c:	18d3eb04 	addi	r3,r3,20396
    4fa0:	10c5883a 	add	r2,r2,r3
    4fa4:	11000017 	ldw	r4,0(r2)
    4fa8:	2000683a 	jmp	r4
    4fac:	000051a0 	cmpeqi	zero,zero,326
    4fb0:	00005064 	muli	zero,zero,321
    4fb4:	00005064 	muli	zero,zero,321
    4fb8:	00005064 	muli	zero,zero,321
    4fbc:	00005064 	muli	zero,zero,321
    4fc0:	00005064 	muli	zero,zero,321
    4fc4:	00005064 	muli	zero,zero,321
    4fc8:	00005064 	muli	zero,zero,321
    4fcc:	00005064 	muli	zero,zero,321
    4fd0:	000054b8 	rdprs	zero,zero,338
    4fd4:	000054b8 	rdprs	zero,zero,338
    4fd8:	000054b8 	rdprs	zero,zero,338
    4fdc:	000054b8 	rdprs	zero,zero,338
    4fe0:	000054b8 	rdprs	zero,zero,338
    4fe4:	00005064 	muli	zero,zero,321
    4fe8:	00005064 	muli	zero,zero,321
    4fec:	00005064 	muli	zero,zero,321
    4ff0:	00005064 	muli	zero,zero,321
    4ff4:	00005064 	muli	zero,zero,321
    4ff8:	00005064 	muli	zero,zero,321
    4ffc:	00005064 	muli	zero,zero,321
    5000:	00005064 	muli	zero,zero,321
    5004:	00005064 	muli	zero,zero,321
    5008:	00005064 	muli	zero,zero,321
    500c:	00005064 	muli	zero,zero,321
    5010:	00005064 	muli	zero,zero,321
    5014:	00005064 	muli	zero,zero,321
    5018:	00005064 	muli	zero,zero,321
    501c:	00005064 	muli	zero,zero,321
    5020:	00005064 	muli	zero,zero,321
    5024:	00005064 	muli	zero,zero,321
    5028:	00005064 	muli	zero,zero,321
    502c:	000054b8 	rdprs	zero,zero,338
    5030:	00005064 	muli	zero,zero,321
    5034:	00005064 	muli	zero,zero,321
    5038:	00005064 	muli	zero,zero,321
    503c:	00005064 	muli	zero,zero,321
    5040:	00005064 	muli	zero,zero,321
    5044:	00005064 	muli	zero,zero,321
    5048:	00005064 	muli	zero,zero,321
    504c:	00005064 	muli	zero,zero,321
    5050:	00005064 	muli	zero,zero,321
    5054:	00005064 	muli	zero,zero,321
    5058:	00005498 	cmpnei	zero,zero,338
    505c:	00005064 	muli	zero,zero,321
    5060:	000054c4 	movi	zero,339
    5064:	d8001115 	stw	zero,68(sp)
    5068:	40c00007 	ldb	r3,0(r8)
    506c:	00800c04 	movi	r2,48
    5070:	1880d026 	beq	r3,r2,53b4 <_strtod_r+0x47c>
    5074:	001f883a 	mov	r15,zero
    5078:	41000007 	ldb	r4,0(r8)
    507c:	00c00bc4 	movi	r3,47
    5080:	402d883a 	mov	r22,r8
    5084:	1903470e 	bge	r3,r4,5da4 <_strtod_r+0xe6c>
    5088:	00800e44 	movi	r2,57
    508c:	11034516 	blt	r2,r4,5da4 <_strtod_r+0xe6c>
    5090:	180f883a 	mov	r7,r3
    5094:	1013883a 	mov	r9,r2
    5098:	4007883a 	mov	r3,r8
    509c:	000d883a 	mov	r6,zero
    50a0:	0029883a 	mov	r20,zero
    50a4:	0021883a 	mov	r16,zero
    50a8:	01400204 	movi	r5,8
    50ac:	028003c4 	movi	r10,15
    50b0:	29803116 	blt	r5,r6,5178 <_strtod_r+0x240>
    50b4:	a08002a4 	muli	r2,r20,10
    50b8:	1105883a 	add	r2,r2,r4
    50bc:	153ff404 	addi	r20,r2,-48
    50c0:	1a000044 	addi	r8,r3,1
    50c4:	da000415 	stw	r8,16(sp)
    50c8:	41000007 	ldb	r4,0(r8)
    50cc:	31800044 	addi	r6,r6,1
    50d0:	4007883a 	mov	r3,r8
    50d4:	3900010e 	bge	r7,r4,50dc <_strtod_r+0x1a4>
    50d8:	493ff50e 	bge	r9,r4,50b0 <_strtod_r+0x178>
    50dc:	00800b84 	movi	r2,46
    50e0:	2080c126 	beq	r4,r2,53e8 <_strtod_r+0x4b0>
    50e4:	3027883a 	mov	r19,r6
    50e8:	0025883a 	mov	r18,zero
    50ec:	0015883a 	mov	r10,zero
    50f0:	000f883a 	mov	r7,zero
    50f4:	00801944 	movi	r2,101
    50f8:	20802426 	beq	r4,r2,518c <_strtod_r+0x254>
    50fc:	00801144 	movi	r2,69
    5100:	20802226 	beq	r4,r2,518c <_strtod_r+0x254>
    5104:	9816c03a 	cmpne	r11,r19,zero
    5108:	000b883a 	mov	r5,zero
    510c:	5800631e 	bne	r11,zero,529c <_strtod_r+0x364>
    5110:	3800c126 	beq	r7,zero,5418 <_strtod_r+0x4e0>
    5114:	d8c01517 	ldw	r3,84(sp)
    5118:	18000226 	beq	r3,zero,5124 <_strtod_r+0x1ec>
    511c:	d8800417 	ldw	r2,16(sp)
    5120:	18800015 	stw	r2,0(r3)
    5124:	d9001117 	ldw	r4,68(sp)
    5128:	2005003a 	cmpeq	r2,r4,zero
    512c:	10001f1e 	bne	r2,zero,51ac <_strtod_r+0x274>
    5130:	e0800017 	ldw	r2,0(fp)
    5134:	e0c00117 	ldw	r3,4(fp)
    5138:	1009883a 	mov	r4,r2
    513c:	1960003c 	xorhi	r5,r3,32768
    5140:	2005883a 	mov	r2,r4
    5144:	2807883a 	mov	r3,r5
    5148:	dfc02117 	ldw	ra,132(sp)
    514c:	df002017 	ldw	fp,128(sp)
    5150:	ddc01f17 	ldw	r23,124(sp)
    5154:	dd801e17 	ldw	r22,120(sp)
    5158:	dd401d17 	ldw	r21,116(sp)
    515c:	dd001c17 	ldw	r20,112(sp)
    5160:	dcc01b17 	ldw	r19,108(sp)
    5164:	dc801a17 	ldw	r18,104(sp)
    5168:	dc401917 	ldw	r17,100(sp)
    516c:	dc001817 	ldw	r16,96(sp)
    5170:	dec02204 	addi	sp,sp,136
    5174:	f800283a 	ret
    5178:	51bfd116 	blt	r10,r6,50c0 <_strtod_r+0x188>
    517c:	808002a4 	muli	r2,r16,10
    5180:	1105883a 	add	r2,r2,r4
    5184:	143ff404 	addi	r16,r2,-48
    5188:	003fcd06 	br	50c0 <_strtod_r+0x188>
    518c:	9816c03a 	cmpne	r11,r19,zero
    5190:	5800091e 	bne	r11,zero,51b8 <_strtod_r+0x280>
    5194:	3800081e 	bne	r7,zero,51b8 <_strtod_r+0x280>
    5198:	7805003a 	cmpeq	r2,r15,zero
    519c:	10000626 	beq	r2,zero,51b8 <_strtod_r+0x280>
    51a0:	d8001115 	stw	zero,68(sp)
    51a4:	dc400415 	stw	r17,16(sp)
    51a8:	003fda06 	br	5114 <_strtod_r+0x1dc>
    51ac:	e1000017 	ldw	r4,0(fp)
    51b0:	e1400117 	ldw	r5,4(fp)
    51b4:	003fe206 	br	5140 <_strtod_r+0x208>
    51b8:	dc400417 	ldw	r17,16(sp)
    51bc:	00800ac4 	movi	r2,43
    51c0:	8a000044 	addi	r8,r17,1
    51c4:	da000415 	stw	r8,16(sp)
    51c8:	88c00047 	ldb	r3,1(r17)
    51cc:	4009883a 	mov	r4,r8
    51d0:	1880bf26 	beq	r3,r2,54d0 <_strtod_r+0x598>
    51d4:	00800b44 	movi	r2,45
    51d8:	18834526 	beq	r3,r2,5ef0 <_strtod_r+0xfb8>
    51dc:	1809883a 	mov	r4,r3
    51e0:	20fff404 	addi	r3,r4,-48
    51e4:	00800244 	movi	r2,9
    51e8:	001d883a 	mov	r14,zero
    51ec:	10c0bf36 	bltu	r2,r3,54ec <_strtod_r+0x5b4>
    51f0:	00800c04 	movi	r2,48
    51f4:	2080061e 	bne	r4,r2,5210 <_strtod_r+0x2d8>
    51f8:	da000417 	ldw	r8,16(sp)
    51fc:	2005883a 	mov	r2,r4
    5200:	42000044 	addi	r8,r8,1
    5204:	da000415 	stw	r8,16(sp)
    5208:	41000007 	ldb	r4,0(r8)
    520c:	20bffc26 	beq	r4,r2,5200 <_strtod_r+0x2c8>
    5210:	20fff3c4 	addi	r3,r4,-49
    5214:	00800204 	movi	r2,8
    5218:	10ffbb36 	bltu	r2,r3,5108 <_strtod_r+0x1d0>
    521c:	da000417 	ldw	r8,16(sp)
    5220:	227ff404 	addi	r9,r4,-48
    5224:	03000bc4 	movi	r12,47
    5228:	4007883a 	mov	r3,r8
    522c:	42000044 	addi	r8,r8,1
    5230:	da000415 	stw	r8,16(sp)
    5234:	41000007 	ldb	r4,0(r8)
    5238:	61000d0e 	bge	r12,r4,5270 <_strtod_r+0x338>
    523c:	00800e44 	movi	r2,57
    5240:	11000b16 	blt	r2,r4,5270 <_strtod_r+0x338>
    5244:	601b883a 	mov	r13,r12
    5248:	1019883a 	mov	r12,r2
    524c:	00000106 	br	5254 <_strtod_r+0x31c>
    5250:	61000716 	blt	r12,r4,5270 <_strtod_r+0x338>
    5254:	488002a4 	muli	r2,r9,10
    5258:	42000044 	addi	r8,r8,1
    525c:	da000415 	stw	r8,16(sp)
    5260:	2085883a 	add	r2,r4,r2
    5264:	41000007 	ldb	r4,0(r8)
    5268:	127ff404 	addi	r9,r2,-48
    526c:	693ff816 	blt	r13,r4,5250 <_strtod_r+0x318>
    5270:	40c7c83a 	sub	r3,r8,r3
    5274:	00800204 	movi	r2,8
    5278:	10c2e416 	blt	r2,r3,5e0c <_strtod_r+0xed4>
    527c:	009387c4 	movi	r2,19999
    5280:	480b883a 	mov	r5,r9
    5284:	1240010e 	bge	r2,r9,528c <_strtod_r+0x354>
    5288:	100b883a 	mov	r5,r2
    528c:	7005003a 	cmpeq	r2,r14,zero
    5290:	103f9e1e 	bne	r2,zero,510c <_strtod_r+0x1d4>
    5294:	014bc83a 	sub	r5,zero,r5
    5298:	583f9d26 	beq	r11,zero,5110 <_strtod_r+0x1d8>
    529c:	2a8bc83a 	sub	r5,r5,r10
    52a0:	d9400f15 	stw	r5,60(sp)
    52a4:	30007a1e 	bne	r6,zero,5490 <_strtod_r+0x558>
    52a8:	dcc01215 	stw	r19,72(sp)
    52ac:	00800404 	movi	r2,16
    52b0:	9825883a 	mov	r18,r19
    52b4:	14c0010e 	bge	r2,r19,52bc <_strtod_r+0x384>
    52b8:	1025883a 	mov	r18,r2
    52bc:	a009883a 	mov	r4,r20
    52c0:	000e6fc0 	call	e6fc <__floatunsidf>
    52c4:	100f883a 	mov	r7,r2
    52c8:	e0800015 	stw	r2,0(fp)
    52cc:	00800244 	movi	r2,9
    52d0:	e0c00115 	stw	r3,4(fp)
    52d4:	1480160e 	bge	r2,r18,5330 <_strtod_r+0x3f8>
    52d8:	900c90fa 	slli	r6,r18,3
    52dc:	01000074 	movhi	r4,1
    52e0:	21083b04 	addi	r4,r4,8428
    52e4:	180b883a 	mov	r5,r3
    52e8:	310d883a 	add	r6,r6,r4
    52ec:	30ffef17 	ldw	r3,-68(r6)
    52f0:	30bfee17 	ldw	r2,-72(r6)
    52f4:	3809883a 	mov	r4,r7
    52f8:	180f883a 	mov	r7,r3
    52fc:	100d883a 	mov	r6,r2
    5300:	000db6c0 	call	db6c <__muldf3>
    5304:	8009883a 	mov	r4,r16
    5308:	1823883a 	mov	r17,r3
    530c:	1021883a 	mov	r16,r2
    5310:	000e6fc0 	call	e6fc <__floatunsidf>
    5314:	880b883a 	mov	r5,r17
    5318:	180f883a 	mov	r7,r3
    531c:	8009883a 	mov	r4,r16
    5320:	100d883a 	mov	r6,r2
    5324:	000daf80 	call	daf8 <__adddf3>
    5328:	e0c00115 	stw	r3,4(fp)
    532c:	e0800015 	stw	r2,0(fp)
    5330:	010003c4 	movi	r4,15
    5334:	24c09816 	blt	r4,r19,5598 <_strtod_r+0x660>
    5338:	d9800f17 	ldw	r6,60(sp)
    533c:	303f7526 	beq	r6,zero,5114 <_strtod_r+0x1dc>
    5340:	0183be0e 	bge	zero,r6,623c <_strtod_r+0x1304>
    5344:	00800584 	movi	r2,22
    5348:	1182b20e 	bge	r2,r6,5e14 <_strtod_r+0xedc>
    534c:	d8c00f17 	ldw	r3,60(sp)
    5350:	24e3c83a 	sub	r17,r4,r19
    5354:	88800584 	addi	r2,r17,22
    5358:	10c08f16 	blt	r2,r3,5598 <_strtod_r+0x660>
    535c:	880890fa 	slli	r4,r17,3
    5360:	04000074 	movhi	r16,1
    5364:	84083b04 	addi	r16,r16,8428
    5368:	e0800017 	ldw	r2,0(fp)
    536c:	2409883a 	add	r4,r4,r16
    5370:	22000017 	ldw	r8,0(r4)
    5374:	22400117 	ldw	r9,4(r4)
    5378:	e0c00117 	ldw	r3,4(fp)
    537c:	1009883a 	mov	r4,r2
    5380:	480f883a 	mov	r7,r9
    5384:	180b883a 	mov	r5,r3
    5388:	400d883a 	mov	r6,r8
    538c:	000db6c0 	call	db6c <__muldf3>
    5390:	d9000f17 	ldw	r4,60(sp)
    5394:	180b883a 	mov	r5,r3
    5398:	2455c83a 	sub	r10,r4,r17
    539c:	501490fa 	slli	r10,r10,3
    53a0:	1009883a 	mov	r4,r2
    53a4:	5415883a 	add	r10,r10,r16
    53a8:	52000017 	ldw	r8,0(r10)
    53ac:	52400117 	ldw	r9,4(r10)
    53b0:	0002a206 	br	5e3c <_strtod_r+0xf04>
    53b4:	40c00047 	ldb	r3,1(r8)
    53b8:	00801604 	movi	r2,88
    53bc:	18804e26 	beq	r3,r2,54f8 <_strtod_r+0x5c0>
    53c0:	00801e04 	movi	r2,120
    53c4:	18804c26 	beq	r3,r2,54f8 <_strtod_r+0x5c0>
    53c8:	42000044 	addi	r8,r8,1
    53cc:	da000415 	stw	r8,16(sp)
    53d0:	40c00007 	ldb	r3,0(r8)
    53d4:	00800c04 	movi	r2,48
    53d8:	18bffb26 	beq	r3,r2,53c8 <_strtod_r+0x490>
    53dc:	183f4d26 	beq	r3,zero,5114 <_strtod_r+0x1dc>
    53e0:	03c00044 	movi	r15,1
    53e4:	003f2406 	br	5078 <_strtod_r+0x140>
    53e8:	42000044 	addi	r8,r8,1
    53ec:	da000415 	stw	r8,16(sp)
    53f0:	19000047 	ldb	r4,1(r3)
    53f4:	3000b726 	beq	r6,zero,56d4 <_strtod_r+0x79c>
    53f8:	3027883a 	mov	r19,r6
    53fc:	0015883a 	mov	r10,zero
    5400:	000f883a 	mov	r7,zero
    5404:	227ff404 	addi	r9,r4,-48
    5408:	00800244 	movi	r2,9
    540c:	1242592e 	bgeu	r2,r9,5d74 <_strtod_r+0xe3c>
    5410:	04800044 	movi	r18,1
    5414:	003f3706 	br	50f4 <_strtod_r+0x1bc>
    5418:	7804c03a 	cmpne	r2,r15,zero
    541c:	103f3d1e 	bne	r2,zero,5114 <_strtod_r+0x1dc>
    5420:	9004c03a 	cmpne	r2,r18,zero
    5424:	103f5e1e 	bne	r2,zero,51a0 <_strtod_r+0x268>
    5428:	00801384 	movi	r2,78
    542c:	2083a226 	beq	r4,r2,62b8 <_strtod_r+0x1380>
    5430:	11039d16 	blt	r2,r4,62a8 <_strtod_r+0x1370>
    5434:	00801244 	movi	r2,73
    5438:	20bf591e 	bne	r4,r2,51a0 <_strtod_r+0x268>
    543c:	dc000404 	addi	r16,sp,16
    5440:	8009883a 	mov	r4,r16
    5444:	01400074 	movhi	r5,1
    5448:	29480204 	addi	r5,r5,8200
    544c:	0004ef00 	call	4ef0 <match>
    5450:	103f5326 	beq	r2,zero,51a0 <_strtod_r+0x268>
    5454:	d8800417 	ldw	r2,16(sp)
    5458:	8009883a 	mov	r4,r16
    545c:	01400074 	movhi	r5,1
    5460:	29480304 	addi	r5,r5,8204
    5464:	123fffc4 	addi	r8,r2,-1
    5468:	da000415 	stw	r8,16(sp)
    546c:	0004ef00 	call	4ef0 <match>
    5470:	1000031e 	bne	r2,zero,5480 <_strtod_r+0x548>
    5474:	d8800417 	ldw	r2,16(sp)
    5478:	12000044 	addi	r8,r2,1
    547c:	da000415 	stw	r8,16(sp)
    5480:	019ffc34 	movhi	r6,32752
    5484:	e1800115 	stw	r6,4(fp)
    5488:	e0000015 	stw	zero,0(fp)
    548c:	003f2106 	br	5114 <_strtod_r+0x1dc>
    5490:	d9801215 	stw	r6,72(sp)
    5494:	003f8506 	br	52ac <_strtod_r+0x374>
    5498:	d8001115 	stw	zero,68(sp)
    549c:	42000044 	addi	r8,r8,1
    54a0:	da000415 	stw	r8,16(sp)
    54a4:	40800007 	ldb	r2,0(r8)
    54a8:	103eef1e 	bne	r2,zero,5068 <_strtod_r+0x130>
    54ac:	d8001115 	stw	zero,68(sp)
    54b0:	dc400415 	stw	r17,16(sp)
    54b4:	003f1706 	br	5114 <_strtod_r+0x1dc>
    54b8:	42000044 	addi	r8,r8,1
    54bc:	da000415 	stw	r8,16(sp)
    54c0:	003eaf06 	br	4f80 <_strtod_r+0x48>
    54c4:	00800044 	movi	r2,1
    54c8:	d8801115 	stw	r2,68(sp)
    54cc:	003ff306 	br	549c <_strtod_r+0x564>
    54d0:	001d883a 	mov	r14,zero
    54d4:	42000044 	addi	r8,r8,1
    54d8:	da000415 	stw	r8,16(sp)
    54dc:	21000047 	ldb	r4,1(r4)
    54e0:	00800244 	movi	r2,9
    54e4:	20fff404 	addi	r3,r4,-48
    54e8:	10ff412e 	bgeu	r2,r3,51f0 <_strtod_r+0x2b8>
    54ec:	000b883a 	mov	r5,zero
    54f0:	dc400415 	stw	r17,16(sp)
    54f4:	003f0506 	br	510c <_strtod_r+0x1d4>
    54f8:	d8c01117 	ldw	r3,68(sp)
    54fc:	04800074 	movhi	r18,1
    5500:	948ae004 	addi	r18,r18,11136
    5504:	d8800504 	addi	r2,sp,20
    5508:	a809883a 	mov	r4,r21
    550c:	d9400404 	addi	r5,sp,16
    5510:	900d883a 	mov	r6,r18
    5514:	d9c00604 	addi	r7,sp,24
    5518:	d8800015 	stw	r2,0(sp)
    551c:	d8c00115 	stw	r3,4(sp)
    5520:	000ac940 	call	ac94 <__gethex>
    5524:	140001cc 	andi	r16,r2,7
    5528:	1027883a 	mov	r19,r2
    552c:	803ef926 	beq	r16,zero,5114 <_strtod_r+0x1dc>
    5530:	05000184 	movi	r20,6
    5534:	853f1a26 	beq	r16,r20,51a0 <_strtod_r+0x268>
    5538:	d9800517 	ldw	r6,20(sp)
    553c:	30000626 	beq	r6,zero,5558 <_strtod_r+0x620>
    5540:	91400017 	ldw	r5,0(r18)
    5544:	d9000d04 	addi	r4,sp,52
    5548:	000bbf00 	call	bbf0 <__copybits>
    554c:	d9400517 	ldw	r5,20(sp)
    5550:	a809883a 	mov	r4,r21
    5554:	000b7500 	call	b750 <_Bfree>
    5558:	d9400617 	ldw	r5,24(sp)
    555c:	a4024136 	bltu	r20,r16,5e64 <_strtod_r+0xf2c>
    5560:	8405883a 	add	r2,r16,r16
    5564:	1085883a 	add	r2,r2,r2
    5568:	00c00034 	movhi	r3,0
    556c:	18d55f04 	addi	r3,r3,21884
    5570:	10c5883a 	add	r2,r2,r3
    5574:	11000017 	ldw	r4,0(r2)
    5578:	2000683a 	jmp	r4
    557c:	00005ea4 	muli	zero,zero,378
    5580:	00005eb0 	cmpltui	zero,zero,378
    5584:	00005e54 	movui	zero,377
    5588:	00005e7c 	xorhi	zero,zero,377
    558c:	00005e8c 	andi	zero,zero,378
    5590:	00005eb0 	cmpltui	zero,zero,378
    5594:	00005ea4 	muli	zero,zero,378
    5598:	d8c00f17 	ldw	r3,60(sp)
    559c:	9c85c83a 	sub	r2,r19,r18
    55a0:	18a1883a 	add	r16,r3,r2
    55a4:	0402d00e 	bge	zero,r16,60e8 <_strtod_r+0x11b0>
    55a8:	814003cc 	andi	r5,r16,15
    55ac:	28000f26 	beq	r5,zero,55ec <_strtod_r+0x6b4>
    55b0:	280a90fa 	slli	r5,r5,3
    55b4:	01000074 	movhi	r4,1
    55b8:	21083b04 	addi	r4,r4,8428
    55bc:	e0800017 	ldw	r2,0(fp)
    55c0:	290b883a 	add	r5,r5,r4
    55c4:	2a000017 	ldw	r8,0(r5)
    55c8:	e0c00117 	ldw	r3,4(fp)
    55cc:	2a400117 	ldw	r9,4(r5)
    55d0:	1009883a 	mov	r4,r2
    55d4:	180b883a 	mov	r5,r3
    55d8:	480f883a 	mov	r7,r9
    55dc:	400d883a 	mov	r6,r8
    55e0:	000db6c0 	call	db6c <__muldf3>
    55e4:	e0c00115 	stw	r3,4(fp)
    55e8:	e0800015 	stw	r2,0(fp)
    55ec:	00bffc04 	movi	r2,-16
    55f0:	808c703a 	and	r6,r16,r2
    55f4:	30005b26 	beq	r6,zero,5764 <_strtod_r+0x82c>
    55f8:	00804d04 	movi	r2,308
    55fc:	1181fd16 	blt	r2,r6,5df4 <_strtod_r+0xebc>
    5600:	3021d13a 	srai	r16,r6,4
    5604:	00800044 	movi	r2,1
    5608:	1403610e 	bge	r2,r16,6390 <_strtod_r+0x1458>
    560c:	102f883a 	mov	r23,r2
    5610:	0025883a 	mov	r18,zero
    5614:	04400074 	movhi	r17,1
    5618:	8c486d04 	addi	r17,r17,8628
    561c:	8080004c 	andi	r2,r16,1
    5620:	1005003a 	cmpeq	r2,r2,zero
    5624:	1000091e 	bne	r2,zero,564c <_strtod_r+0x714>
    5628:	e0800017 	ldw	r2,0(fp)
    562c:	e0c00117 	ldw	r3,4(fp)
    5630:	89800017 	ldw	r6,0(r17)
    5634:	89c00117 	ldw	r7,4(r17)
    5638:	180b883a 	mov	r5,r3
    563c:	1009883a 	mov	r4,r2
    5640:	000db6c0 	call	db6c <__muldf3>
    5644:	e0c00115 	stw	r3,4(fp)
    5648:	e0800015 	stw	r2,0(fp)
    564c:	8021d07a 	srai	r16,r16,1
    5650:	94800044 	addi	r18,r18,1
    5654:	8c400204 	addi	r17,r17,8
    5658:	bc3ff016 	blt	r23,r16,561c <_strtod_r+0x6e4>
    565c:	900e90fa 	slli	r7,r18,3
    5660:	01800074 	movhi	r6,1
    5664:	31886d04 	addi	r6,r6,8628
    5668:	e2000117 	ldw	r8,4(fp)
    566c:	398f883a 	add	r7,r7,r6
    5670:	38800017 	ldw	r2,0(r7)
    5674:	38c00117 	ldw	r3,4(r7)
    5678:	e1000017 	ldw	r4,0(fp)
    567c:	01bf2c34 	movhi	r6,64688
    5680:	418d883a 	add	r6,r8,r6
    5684:	300b883a 	mov	r5,r6
    5688:	180f883a 	mov	r7,r3
    568c:	100d883a 	mov	r6,r2
    5690:	000db6c0 	call	db6c <__muldf3>
    5694:	1009883a 	mov	r4,r2
    5698:	180b883a 	mov	r5,r3
    569c:	199ffc2c 	andhi	r6,r3,32752
    56a0:	009f2834 	movhi	r2,31904
    56a4:	e1000015 	stw	r4,0(fp)
    56a8:	e1400115 	stw	r5,4(fp)
    56ac:	1181d136 	bltu	r2,r6,5df4 <_strtod_r+0xebc>
    56b0:	009f2434 	movhi	r2,31888
    56b4:	1183202e 	bgeu	r2,r6,6338 <_strtod_r+0x1400>
    56b8:	d8001415 	stw	zero,80(sp)
    56bc:	019ffc34 	movhi	r6,32752
    56c0:	31bfffc4 	addi	r6,r6,-1
    56c4:	01ffffc4 	movi	r7,-1
    56c8:	e1800115 	stw	r6,4(fp)
    56cc:	e1c00015 	stw	r7,0(fp)
    56d0:	00002506 	br	5768 <_strtod_r+0x830>
    56d4:	00800c04 	movi	r2,48
    56d8:	2083151e 	bne	r4,r2,6330 <_strtod_r+0x13f8>
    56dc:	2005883a 	mov	r2,r4
    56e0:	000f883a 	mov	r7,zero
    56e4:	42000044 	addi	r8,r8,1
    56e8:	da000415 	stw	r8,16(sp)
    56ec:	41000007 	ldb	r4,0(r8)
    56f0:	39c00044 	addi	r7,r7,1
    56f4:	20bffb26 	beq	r4,r2,56e4 <_strtod_r+0x7ac>
    56f8:	20fff3c4 	addi	r3,r4,-49
    56fc:	00800204 	movi	r2,8
    5700:	10c1b836 	bltu	r2,r3,5de4 <_strtod_r+0xeac>
    5704:	dd800417 	ldw	r22,16(sp)
    5708:	3815883a 	mov	r10,r7
    570c:	227ff404 	addi	r9,r4,-48
    5710:	b011883a 	mov	r8,r22
    5714:	0027883a 	mov	r19,zero
    5718:	01c00044 	movi	r7,1
    571c:	4801fe26 	beq	r9,zero,5f18 <_strtod_r+0xfe0>
    5720:	00800044 	movi	r2,1
    5724:	51d5883a 	add	r10,r10,r7
    5728:	11c31f0e 	bge	r2,r7,63a8 <_strtod_r+0x1470>
    572c:	1009883a 	mov	r4,r2
    5730:	9807883a 	mov	r3,r19
    5734:	02c00204 	movi	r11,8
    5738:	03000404 	movi	r12,16
    573c:	00000306 	br	574c <_strtod_r+0x814>
    5740:	a50002a4 	muli	r20,r20,10
    5744:	21000044 	addi	r4,r4,1
    5748:	21c1eb26 	beq	r4,r7,5ef8 <_strtod_r+0xfc0>
    574c:	18c00044 	addi	r3,r3,1
    5750:	18bfffc4 	addi	r2,r3,-1
    5754:	58bffa0e 	bge	r11,r2,5740 <_strtod_r+0x808>
    5758:	60fffa16 	blt	r12,r3,5744 <_strtod_r+0x80c>
    575c:	840002a4 	muli	r16,r16,10
    5760:	003ff806 	br	5744 <_strtod_r+0x80c>
    5764:	d8001415 	stw	zero,80(sp)
    5768:	d9801217 	ldw	r6,72(sp)
    576c:	a809883a 	mov	r4,r21
    5770:	b00b883a 	mov	r5,r22
    5774:	980f883a 	mov	r7,r19
    5778:	dd000015 	stw	r20,0(sp)
    577c:	000c6240 	call	c624 <__s2b>
    5780:	d9800f17 	ldw	r6,60(sp)
    5784:	11000304 	addi	r4,r2,12
    5788:	d8801015 	stw	r2,64(sp)
    578c:	300c803a 	cmplt	r6,r6,zero
    5790:	d9001715 	stw	r4,92(sp)
    5794:	d9801615 	stw	r6,88(sp)
    5798:	d8801017 	ldw	r2,64(sp)
    579c:	a809883a 	mov	r4,r21
    57a0:	11400117 	ldw	r5,4(r2)
    57a4:	000bcd00 	call	bcd0 <_Balloc>
    57a8:	d8c01017 	ldw	r3,64(sp)
    57ac:	d9401717 	ldw	r5,92(sp)
    57b0:	11000304 	addi	r4,r2,12
    57b4:	19800417 	ldw	r6,16(r3)
    57b8:	102f883a 	mov	r23,r2
    57bc:	318d883a 	add	r6,r6,r6
    57c0:	318d883a 	add	r6,r6,r6
    57c4:	31800204 	addi	r6,r6,8
    57c8:	000125c0 	call	125c <memcpy>
    57cc:	e2000017 	ldw	r8,0(fp)
    57d0:	e2400117 	ldw	r9,4(fp)
    57d4:	d9800304 	addi	r6,sp,12
    57d8:	400b883a 	mov	r5,r8
    57dc:	a809883a 	mov	r4,r21
    57e0:	d9c00204 	addi	r7,sp,8
    57e4:	d9800015 	stw	r6,0(sp)
    57e8:	480d883a 	mov	r6,r9
    57ec:	000bd8c0 	call	bd8c <__d2b>
    57f0:	a809883a 	mov	r4,r21
    57f4:	01400044 	movi	r5,1
    57f8:	d8800515 	stw	r2,20(sp)
    57fc:	000c3c80 	call	c3c8 <__i2b>
    5800:	102d883a 	mov	r22,r2
    5804:	d8801617 	ldw	r2,88(sp)
    5808:	1001051e 	bne	r2,zero,5c20 <_strtod_r+0xce8>
    580c:	dd000f17 	ldw	r20,60(sp)
    5810:	000f883a 	mov	r7,zero
    5814:	0013883a 	mov	r9,zero
    5818:	a011883a 	mov	r8,r20
    581c:	d8800217 	ldw	r2,8(sp)
    5820:	1000fd16 	blt	r2,zero,5c18 <_strtod_r+0xce0>
    5824:	388f883a 	add	r7,r7,r2
    5828:	d9801417 	ldw	r6,80(sp)
    582c:	d9400317 	ldw	r5,12(sp)
    5830:	00ff0084 	movi	r3,-1022
    5834:	1189c83a 	sub	r4,r2,r6
    5838:	2145883a 	add	r2,r4,r5
    583c:	10bfffc4 	addi	r2,r2,-1
    5840:	10c09f0e 	bge	r2,r3,5ac0 <_strtod_r+0xb88>
    5844:	21810cc4 	addi	r6,r4,1075
    5848:	d8c01417 	ldw	r3,80(sp)
    584c:	4185883a 	add	r2,r8,r6
    5850:	39a1883a 	add	r16,r7,r6
    5854:	18a5883a 	add	r18,r3,r2
    5858:	3807883a 	mov	r3,r7
    585c:	81c0010e 	bge	r16,r7,5864 <_strtod_r+0x92c>
    5860:	8007883a 	mov	r3,r16
    5864:	9005883a 	mov	r2,r18
    5868:	1c80010e 	bge	r3,r18,5870 <_strtod_r+0x938>
    586c:	1805883a 	mov	r2,r3
    5870:	0080e70e 	bge	zero,r2,5c10 <_strtod_r+0xcd8>
    5874:	38a7c83a 	sub	r19,r7,r2
    5878:	80a1c83a 	sub	r16,r16,r2
    587c:	90a5c83a 	sub	r18,r18,r2
    5880:	02400e0e 	bge	zero,r9,58bc <_strtod_r+0x984>
    5884:	480d883a 	mov	r6,r9
    5888:	b00b883a 	mov	r5,r22
    588c:	a809883a 	mov	r4,r21
    5890:	000c5040 	call	c504 <__pow5mult>
    5894:	d9800517 	ldw	r6,20(sp)
    5898:	a809883a 	mov	r4,r21
    589c:	100b883a 	mov	r5,r2
    58a0:	102d883a 	mov	r22,r2
    58a4:	000c1e00 	call	c1e0 <__multiply>
    58a8:	d9400517 	ldw	r5,20(sp)
    58ac:	1023883a 	mov	r17,r2
    58b0:	a809883a 	mov	r4,r21
    58b4:	000b7500 	call	b750 <_Bfree>
    58b8:	dc400515 	stw	r17,20(sp)
    58bc:	0400050e 	bge	zero,r16,58d4 <_strtod_r+0x99c>
    58c0:	d9400517 	ldw	r5,20(sp)
    58c4:	800d883a 	mov	r6,r16
    58c8:	a809883a 	mov	r4,r21
    58cc:	000c0940 	call	c094 <__lshift>
    58d0:	d8800515 	stw	r2,20(sp)
    58d4:	a000741e 	bne	r20,zero,5aa8 <_strtod_r+0xb70>
    58d8:	0480050e 	bge	zero,r18,58f0 <_strtod_r+0x9b8>
    58dc:	b80b883a 	mov	r5,r23
    58e0:	900d883a 	mov	r6,r18
    58e4:	a809883a 	mov	r4,r21
    58e8:	000c0940 	call	c094 <__lshift>
    58ec:	102f883a 	mov	r23,r2
    58f0:	04c0050e 	bge	zero,r19,5908 <_strtod_r+0x9d0>
    58f4:	b00b883a 	mov	r5,r22
    58f8:	980d883a 	mov	r6,r19
    58fc:	a809883a 	mov	r4,r21
    5900:	000c0940 	call	c094 <__lshift>
    5904:	102d883a 	mov	r22,r2
    5908:	d9400517 	ldw	r5,20(sp)
    590c:	a809883a 	mov	r4,r21
    5910:	b80d883a 	mov	r6,r23
    5914:	000bf080 	call	bf08 <__mdiff>
    5918:	11000317 	ldw	r4,12(r2)
    591c:	b00b883a 	mov	r5,r22
    5920:	10000315 	stw	zero,12(r2)
    5924:	d9001315 	stw	r4,76(sp)
    5928:	1009883a 	mov	r4,r2
    592c:	1029883a 	mov	r20,r2
    5930:	000b8ac0 	call	b8ac <__mcmp>
    5934:	10017c16 	blt	r2,zero,5f28 <_strtod_r+0xff0>
    5938:	1001af26 	beq	r2,zero,5ff8 <_strtod_r+0x10c0>
    593c:	a009883a 	mov	r4,r20
    5940:	b00b883a 	mov	r5,r22
    5944:	000baac0 	call	baac <__ratio>
    5948:	0011883a 	mov	r8,zero
    594c:	02500034 	movhi	r9,16384
    5950:	480f883a 	mov	r7,r9
    5954:	1009883a 	mov	r4,r2
    5958:	180b883a 	mov	r5,r3
    595c:	400d883a 	mov	r6,r8
    5960:	1021883a 	mov	r16,r2
    5964:	1823883a 	mov	r17,r3
    5968:	000e4300 	call	e430 <__ledf2>
    596c:	00805716 	blt	zero,r2,5acc <_strtod_r+0xb94>
    5970:	d9801317 	ldw	r6,76(sp)
    5974:	3025003a 	cmpeq	r18,r6,zero
    5978:	90008b1e 	bne	r18,zero,5ba8 <_strtod_r+0xc70>
    597c:	008ffc34 	movhi	r2,16368
    5980:	0021883a 	mov	r16,zero
    5984:	1023883a 	mov	r17,r2
    5988:	d8000715 	stw	zero,28(sp)
    598c:	d8800815 	stw	r2,32(sp)
    5990:	e1c00117 	ldw	r7,4(fp)
    5994:	009ff834 	movhi	r2,32736
    5998:	3cdffc2c 	andhi	r19,r7,32752
    599c:	98805e26 	beq	r19,r2,5b18 <_strtod_r+0xbe0>
    59a0:	d8801417 	ldw	r2,80(sp)
    59a4:	10001b26 	beq	r2,zero,5a14 <_strtod_r+0xadc>
    59a8:	0081a834 	movhi	r2,1696
    59ac:	14c01936 	bltu	r2,r19,5a14 <_strtod_r+0xadc>
    59b0:	00bff034 	movhi	r2,65472
    59b4:	00d07834 	movhi	r3,16864
    59b8:	18ffffc4 	addi	r3,r3,-1
    59bc:	180f883a 	mov	r7,r3
    59c0:	8009883a 	mov	r4,r16
    59c4:	880b883a 	mov	r5,r17
    59c8:	100d883a 	mov	r6,r2
    59cc:	000e4300 	call	e430 <__ledf2>
    59d0:	00800b16 	blt	zero,r2,5a00 <_strtod_r+0xac8>
    59d4:	880b883a 	mov	r5,r17
    59d8:	8009883a 	mov	r4,r16
    59dc:	000c8d00 	call	c8d0 <__fixunsdfsi>
    59e0:	1000df1e 	bne	r2,zero,5d60 <_strtod_r+0xe28>
    59e4:	0021883a 	mov	r16,zero
    59e8:	044ffc34 	movhi	r17,16368
    59ec:	9000d91e 	bne	r18,zero,5d54 <_strtod_r+0xe1c>
    59f0:	8005883a 	mov	r2,r16
    59f4:	8807883a 	mov	r3,r17
    59f8:	d8c00815 	stw	r3,32(sp)
    59fc:	d8800715 	stw	r2,28(sp)
    5a00:	d8800817 	ldw	r2,32(sp)
    5a04:	00c1ac34 	movhi	r3,1712
    5a08:	14c5c83a 	sub	r2,r2,r19
    5a0c:	10c5883a 	add	r2,r2,r3
    5a10:	d8800815 	stw	r2,32(sp)
    5a14:	e0800017 	ldw	r2,0(fp)
    5a18:	e0c00117 	ldw	r3,4(fp)
    5a1c:	1009883a 	mov	r4,r2
    5a20:	180b883a 	mov	r5,r3
    5a24:	000b90c0 	call	b90c <__ulp>
    5a28:	d9800717 	ldw	r6,28(sp)
    5a2c:	d9c00817 	ldw	r7,32(sp)
    5a30:	180b883a 	mov	r5,r3
    5a34:	1009883a 	mov	r4,r2
    5a38:	000db6c0 	call	db6c <__muldf3>
    5a3c:	e2000017 	ldw	r8,0(fp)
    5a40:	e2400117 	ldw	r9,4(fp)
    5a44:	180b883a 	mov	r5,r3
    5a48:	1009883a 	mov	r4,r2
    5a4c:	480f883a 	mov	r7,r9
    5a50:	400d883a 	mov	r6,r8
    5a54:	000daf80 	call	daf8 <__adddf3>
    5a58:	e0c00115 	stw	r3,4(fp)
    5a5c:	e0800015 	stw	r2,0(fp)
    5a60:	d8c01417 	ldw	r3,80(sp)
    5a64:	e4800117 	ldw	r18,4(fp)
    5a68:	1800021e 	bne	r3,zero,5a74 <_strtod_r+0xb3c>
    5a6c:	909ffc2c 	andhi	r2,r18,32752
    5a70:	98807b26 	beq	r19,r2,5c60 <_strtod_r+0xd28>
    5a74:	d9400517 	ldw	r5,20(sp)
    5a78:	a809883a 	mov	r4,r21
    5a7c:	000b7500 	call	b750 <_Bfree>
    5a80:	a809883a 	mov	r4,r21
    5a84:	b80b883a 	mov	r5,r23
    5a88:	000b7500 	call	b750 <_Bfree>
    5a8c:	a809883a 	mov	r4,r21
    5a90:	b00b883a 	mov	r5,r22
    5a94:	000b7500 	call	b750 <_Bfree>
    5a98:	a809883a 	mov	r4,r21
    5a9c:	a00b883a 	mov	r5,r20
    5aa0:	000b7500 	call	b750 <_Bfree>
    5aa4:	003f3c06 	br	5798 <_strtod_r+0x860>
    5aa8:	b80b883a 	mov	r5,r23
    5aac:	a00d883a 	mov	r6,r20
    5ab0:	a809883a 	mov	r4,r21
    5ab4:	000c5040 	call	c504 <__pow5mult>
    5ab8:	102f883a 	mov	r23,r2
    5abc:	003f8606 	br	58d8 <_strtod_r+0x9a0>
    5ac0:	00800d84 	movi	r2,54
    5ac4:	114dc83a 	sub	r6,r2,r5
    5ac8:	003f5f06 	br	5848 <_strtod_r+0x910>
    5acc:	0005883a 	mov	r2,zero
    5ad0:	00cff834 	movhi	r3,16352
    5ad4:	880b883a 	mov	r5,r17
    5ad8:	8009883a 	mov	r4,r16
    5adc:	100d883a 	mov	r6,r2
    5ae0:	180f883a 	mov	r7,r3
    5ae4:	000db6c0 	call	db6c <__muldf3>
    5ae8:	d9801317 	ldw	r6,76(sp)
    5aec:	1021883a 	mov	r16,r2
    5af0:	1823883a 	mov	r17,r3
    5af4:	3025003a 	cmpeq	r18,r6,zero
    5af8:	90000126 	beq	r18,zero,5b00 <_strtod_r+0xbc8>
    5afc:	18e0003c 	xorhi	r3,r3,32768
    5b00:	d8800715 	stw	r2,28(sp)
    5b04:	d8c00815 	stw	r3,32(sp)
    5b08:	e1c00117 	ldw	r7,4(fp)
    5b0c:	009ff834 	movhi	r2,32736
    5b10:	3cdffc2c 	andhi	r19,r7,32752
    5b14:	98bfa21e 	bne	r19,r2,59a0 <_strtod_r+0xa68>
    5b18:	e1000017 	ldw	r4,0(fp)
    5b1c:	01bf2c34 	movhi	r6,64688
    5b20:	398d883a 	add	r6,r7,r6
    5b24:	d9000b15 	stw	r4,44(sp)
    5b28:	d9c00c15 	stw	r7,48(sp)
    5b2c:	300b883a 	mov	r5,r6
    5b30:	e1800115 	stw	r6,4(fp)
    5b34:	000b90c0 	call	b90c <__ulp>
    5b38:	d9800717 	ldw	r6,28(sp)
    5b3c:	d9c00817 	ldw	r7,32(sp)
    5b40:	180b883a 	mov	r5,r3
    5b44:	1009883a 	mov	r4,r2
    5b48:	000db6c0 	call	db6c <__muldf3>
    5b4c:	e2000017 	ldw	r8,0(fp)
    5b50:	e2400117 	ldw	r9,4(fp)
    5b54:	180b883a 	mov	r5,r3
    5b58:	1009883a 	mov	r4,r2
    5b5c:	480f883a 	mov	r7,r9
    5b60:	400d883a 	mov	r6,r8
    5b64:	000daf80 	call	daf8 <__adddf3>
    5b68:	1009883a 	mov	r4,r2
    5b6c:	180b883a 	mov	r5,r3
    5b70:	009f2834 	movhi	r2,31904
    5b74:	10bfffc4 	addi	r2,r2,-1
    5b78:	18dffc2c 	andhi	r3,r3,32752
    5b7c:	e1000015 	stw	r4,0(fp)
    5b80:	e1400115 	stw	r5,4(fp)
    5b84:	10c06f2e 	bgeu	r2,r3,5d44 <_strtod_r+0xe0c>
    5b88:	d8800c17 	ldw	r2,48(sp)
    5b8c:	011ffc34 	movhi	r4,32752
    5b90:	213fffc4 	addi	r4,r4,-1
    5b94:	11007a26 	beq	r2,r4,5d80 <_strtod_r+0xe48>
    5b98:	01ffffc4 	movi	r7,-1
    5b9c:	e1000115 	stw	r4,4(fp)
    5ba0:	e1c00015 	stw	r7,0(fp)
    5ba4:	003fb306 	br	5a74 <_strtod_r+0xb3c>
    5ba8:	e0c00017 	ldw	r3,0(fp)
    5bac:	1800221e 	bne	r3,zero,5c38 <_strtod_r+0xd00>
    5bb0:	e0800117 	ldw	r2,4(fp)
    5bb4:	00c00434 	movhi	r3,16
    5bb8:	18ffffc4 	addi	r3,r3,-1
    5bbc:	10c4703a 	and	r2,r2,r3
    5bc0:	1000211e 	bne	r2,zero,5c48 <_strtod_r+0xd10>
    5bc4:	0005883a 	mov	r2,zero
    5bc8:	00cffc34 	movhi	r3,16368
    5bcc:	180f883a 	mov	r7,r3
    5bd0:	8009883a 	mov	r4,r16
    5bd4:	880b883a 	mov	r5,r17
    5bd8:	100d883a 	mov	r6,r2
    5bdc:	000e3a80 	call	e3a8 <__ltdf2>
    5be0:	10013c16 	blt	r2,zero,60d4 <_strtod_r+0x119c>
    5be4:	0005883a 	mov	r2,zero
    5be8:	00cff834 	movhi	r3,16352
    5bec:	880b883a 	mov	r5,r17
    5bf0:	8009883a 	mov	r4,r16
    5bf4:	180f883a 	mov	r7,r3
    5bf8:	100d883a 	mov	r6,r2
    5bfc:	000db6c0 	call	db6c <__muldf3>
    5c00:	1823883a 	mov	r17,r3
    5c04:	1021883a 	mov	r16,r2
    5c08:	18e0003c 	xorhi	r3,r3,32768
    5c0c:	003fbc06 	br	5b00 <_strtod_r+0xbc8>
    5c10:	3827883a 	mov	r19,r7
    5c14:	003f1a06 	br	5880 <_strtod_r+0x948>
    5c18:	4091c83a 	sub	r8,r8,r2
    5c1c:	003f0206 	br	5828 <_strtod_r+0x8f0>
    5c20:	d8c00f17 	ldw	r3,60(sp)
    5c24:	0011883a 	mov	r8,zero
    5c28:	0029883a 	mov	r20,zero
    5c2c:	00d3c83a 	sub	r9,zero,r3
    5c30:	480f883a 	mov	r7,r9
    5c34:	003ef906 	br	581c <_strtod_r+0x8e4>
    5c38:	00800044 	movi	r2,1
    5c3c:	1880021e 	bne	r3,r2,5c48 <_strtod_r+0xd10>
    5c40:	e0800117 	ldw	r2,4(fp)
    5c44:	1000a526 	beq	r2,zero,5edc <_strtod_r+0xfa4>
    5c48:	00affc34 	movhi	r2,49136
    5c4c:	0021883a 	mov	r16,zero
    5c50:	044ffc34 	movhi	r17,16368
    5c54:	d8800815 	stw	r2,32(sp)
    5c58:	d8000715 	stw	zero,28(sp)
    5c5c:	003f4c06 	br	5990 <_strtod_r+0xa58>
    5c60:	880b883a 	mov	r5,r17
    5c64:	8009883a 	mov	r4,r16
    5c68:	000e5b00 	call	e5b0 <__fixdfsi>
    5c6c:	1009883a 	mov	r4,r2
    5c70:	000e4b80 	call	e4b8 <__floatsidf>
    5c74:	880b883a 	mov	r5,r17
    5c78:	8009883a 	mov	r4,r16
    5c7c:	100d883a 	mov	r6,r2
    5c80:	180f883a 	mov	r7,r3
    5c84:	000da780 	call	da78 <__subdf3>
    5c88:	d9001317 	ldw	r4,76(sp)
    5c8c:	100b883a 	mov	r5,r2
    5c90:	180d883a 	mov	r6,r3
    5c94:	1021883a 	mov	r16,r2
    5c98:	1823883a 	mov	r17,r3
    5c9c:	2000061e 	bne	r4,zero,5cb8 <_strtod_r+0xd80>
    5ca0:	e0800017 	ldw	r2,0(fp)
    5ca4:	1000041e 	bne	r2,zero,5cb8 <_strtod_r+0xd80>
    5ca8:	00c00434 	movhi	r3,16
    5cac:	18ffffc4 	addi	r3,r3,-1
    5cb0:	90c4703a 	and	r2,r18,r3
    5cb4:	10004026 	beq	r2,zero,5db8 <_strtod_r+0xe80>
    5cb8:	00a52834 	movhi	r2,38048
    5cbc:	108d6544 	addi	r2,r2,13717
    5cc0:	00cff834 	movhi	r3,16352
    5cc4:	18ffffc4 	addi	r3,r3,-1
    5cc8:	180f883a 	mov	r7,r3
    5ccc:	8009883a 	mov	r4,r16
    5cd0:	880b883a 	mov	r5,r17
    5cd4:	100d883a 	mov	r6,r2
    5cd8:	000e3a80 	call	e3a8 <__ltdf2>
    5cdc:	10000916 	blt	r2,zero,5d04 <_strtod_r+0xdcc>
    5ce0:	008d6c34 	movhi	r2,13744
    5ce4:	10b94d44 	addi	r2,r2,-6859
    5ce8:	00cff834 	movhi	r3,16352
    5cec:	880b883a 	mov	r5,r17
    5cf0:	180f883a 	mov	r7,r3
    5cf4:	8009883a 	mov	r4,r16
    5cf8:	100d883a 	mov	r6,r2
    5cfc:	000e2980 	call	e298 <__gtdf2>
    5d00:	00bf5c0e 	bge	zero,r2,5a74 <_strtod_r+0xb3c>
    5d04:	d9400517 	ldw	r5,20(sp)
    5d08:	a809883a 	mov	r4,r21
    5d0c:	000b7500 	call	b750 <_Bfree>
    5d10:	a809883a 	mov	r4,r21
    5d14:	b80b883a 	mov	r5,r23
    5d18:	000b7500 	call	b750 <_Bfree>
    5d1c:	a809883a 	mov	r4,r21
    5d20:	b00b883a 	mov	r5,r22
    5d24:	000b7500 	call	b750 <_Bfree>
    5d28:	d9401017 	ldw	r5,64(sp)
    5d2c:	a809883a 	mov	r4,r21
    5d30:	000b7500 	call	b750 <_Bfree>
    5d34:	a809883a 	mov	r4,r21
    5d38:	a00b883a 	mov	r5,r20
    5d3c:	000b7500 	call	b750 <_Bfree>
    5d40:	003cf406 	br	5114 <_strtod_r+0x1dc>
    5d44:	0080d434 	movhi	r2,848
    5d48:	288d883a 	add	r6,r5,r2
    5d4c:	e1800115 	stw	r6,4(fp)
    5d50:	003f4306 	br	5a60 <_strtod_r+0xb28>
    5d54:	8005883a 	mov	r2,r16
    5d58:	88e0003c 	xorhi	r3,r17,32768
    5d5c:	003f2606 	br	59f8 <_strtod_r+0xac0>
    5d60:	1009883a 	mov	r4,r2
    5d64:	000e6fc0 	call	e6fc <__floatunsidf>
    5d68:	1021883a 	mov	r16,r2
    5d6c:	1823883a 	mov	r17,r3
    5d70:	003f1e06 	br	59ec <_strtod_r+0xab4>
    5d74:	da000417 	ldw	r8,16(sp)
    5d78:	39c00044 	addi	r7,r7,1
    5d7c:	003e6706 	br	571c <_strtod_r+0x7e4>
    5d80:	d8c00b17 	ldw	r3,44(sp)
    5d84:	00bfffc4 	movi	r2,-1
    5d88:	18bf831e 	bne	r3,r2,5b98 <_strtod_r+0xc60>
    5d8c:	00c00884 	movi	r3,34
    5d90:	a8c00015 	stw	r3,0(r21)
    5d94:	009ffc34 	movhi	r2,32752
    5d98:	e0800115 	stw	r2,4(fp)
    5d9c:	e0000015 	stw	zero,0(fp)
    5da0:	003fd806 	br	5d04 <_strtod_r+0xdcc>
    5da4:	4007883a 	mov	r3,r8
    5da8:	000d883a 	mov	r6,zero
    5dac:	0029883a 	mov	r20,zero
    5db0:	0021883a 	mov	r16,zero
    5db4:	003cc906 	br	50dc <_strtod_r+0x1a4>
    5db8:	00a52834 	movhi	r2,38048
    5dbc:	108d6544 	addi	r2,r2,13717
    5dc0:	00cff434 	movhi	r3,16336
    5dc4:	18ffffc4 	addi	r3,r3,-1
    5dc8:	2809883a 	mov	r4,r5
    5dcc:	180f883a 	mov	r7,r3
    5dd0:	300b883a 	mov	r5,r6
    5dd4:	100d883a 	mov	r6,r2
    5dd8:	000e3a80 	call	e3a8 <__ltdf2>
    5ddc:	103f250e 	bge	r2,zero,5a74 <_strtod_r+0xb3c>
    5de0:	003fc806 	br	5d04 <_strtod_r+0xdcc>
    5de4:	0027883a 	mov	r19,zero
    5de8:	04800044 	movi	r18,1
    5dec:	0015883a 	mov	r10,zero
    5df0:	003cc006 	br	50f4 <_strtod_r+0x1bc>
    5df4:	00800884 	movi	r2,34
    5df8:	a8800015 	stw	r2,0(r21)
    5dfc:	019ffc34 	movhi	r6,32752
    5e00:	e1800115 	stw	r6,4(fp)
    5e04:	e0000015 	stw	zero,0(fp)
    5e08:	003cc206 	br	5114 <_strtod_r+0x1dc>
    5e0c:	015387c4 	movi	r5,19999
    5e10:	003d1e06 	br	528c <_strtod_r+0x354>
    5e14:	300a90fa 	slli	r5,r6,3
    5e18:	e0800017 	ldw	r2,0(fp)
    5e1c:	e0c00117 	ldw	r3,4(fp)
    5e20:	01000074 	movhi	r4,1
    5e24:	21083b04 	addi	r4,r4,8428
    5e28:	290b883a 	add	r5,r5,r4
    5e2c:	2a000017 	ldw	r8,0(r5)
    5e30:	2a400117 	ldw	r9,4(r5)
    5e34:	1009883a 	mov	r4,r2
    5e38:	180b883a 	mov	r5,r3
    5e3c:	480f883a 	mov	r7,r9
    5e40:	400d883a 	mov	r6,r8
    5e44:	000db6c0 	call	db6c <__muldf3>
    5e48:	e0c00115 	stw	r3,4(fp)
    5e4c:	e0800015 	stw	r2,0(fp)
    5e50:	003cb006 	br	5114 <_strtod_r+0x1dc>
    5e54:	d8800d17 	ldw	r2,52(sp)
    5e58:	e0800015 	stw	r2,0(fp)
    5e5c:	d8c00e17 	ldw	r3,56(sp)
    5e60:	e0c00115 	stw	r3,4(fp)
    5e64:	9880020c 	andi	r2,r19,8
    5e68:	103caa26 	beq	r2,zero,5114 <_strtod_r+0x1dc>
    5e6c:	e0800117 	ldw	r2,4(fp)
    5e70:	10a00034 	orhi	r2,r2,32768
    5e74:	e0800115 	stw	r2,4(fp)
    5e78:	003ca606 	br	5114 <_strtod_r+0x1dc>
    5e7c:	009ffc34 	movhi	r2,32752
    5e80:	e0800115 	stw	r2,4(fp)
    5e84:	e0000015 	stw	zero,0(fp)
    5e88:	003ff606 	br	5e64 <_strtod_r+0xf2c>
    5e8c:	00a00034 	movhi	r2,32768
    5e90:	10bfffc4 	addi	r2,r2,-1
    5e94:	00ffffc4 	movi	r3,-1
    5e98:	e0800115 	stw	r2,4(fp)
    5e9c:	e0c00015 	stw	r3,0(fp)
    5ea0:	003ff006 	br	5e64 <_strtod_r+0xf2c>
    5ea4:	e0000115 	stw	zero,4(fp)
    5ea8:	e0000015 	stw	zero,0(fp)
    5eac:	003fed06 	br	5e64 <_strtod_r+0xf2c>
    5eb0:	d8800e17 	ldw	r2,56(sp)
    5eb4:	29010cc4 	addi	r4,r5,1075
    5eb8:	00fffc34 	movhi	r3,65520
    5ebc:	18ffffc4 	addi	r3,r3,-1
    5ec0:	2008953a 	slli	r4,r4,20
    5ec4:	10c4703a 	and	r2,r2,r3
    5ec8:	d8c00d17 	ldw	r3,52(sp)
    5ecc:	1104b03a 	or	r2,r2,r4
    5ed0:	e0800115 	stw	r2,4(fp)
    5ed4:	e0c00015 	stw	r3,0(fp)
    5ed8:	003fe206 	br	5e64 <_strtod_r+0xf2c>
    5edc:	00800884 	movi	r2,34
    5ee0:	a8800015 	stw	r2,0(r21)
    5ee4:	e0000015 	stw	zero,0(fp)
    5ee8:	e0000115 	stw	zero,4(fp)
    5eec:	003f8506 	br	5d04 <_strtod_r+0xdcc>
    5ef0:	03800044 	movi	r14,1
    5ef4:	003d7706 	br	54d4 <_strtod_r+0x59c>
    5ef8:	99c5883a 	add	r2,r19,r7
    5efc:	11ffffc4 	addi	r7,r2,-1
    5f00:	00800204 	movi	r2,8
    5f04:	3cc00044 	addi	r19,r7,1
    5f08:	11c0df16 	blt	r2,r7,6288 <_strtod_r+0x1350>
    5f0c:	a08002a4 	muli	r2,r20,10
    5f10:	000f883a 	mov	r7,zero
    5f14:	1269883a 	add	r20,r2,r9
    5f18:	42000044 	addi	r8,r8,1
    5f1c:	da000415 	stw	r8,16(sp)
    5f20:	41000007 	ldb	r4,0(r8)
    5f24:	003d3706 	br	5404 <_strtod_r+0x4cc>
    5f28:	d9801317 	ldw	r6,76(sp)
    5f2c:	3000511e 	bne	r6,zero,6074 <_strtod_r+0x113c>
    5f30:	e0800017 	ldw	r2,0(fp)
    5f34:	1000d81e 	bne	r2,zero,6298 <_strtod_r+0x1360>
    5f38:	e0c00117 	ldw	r3,4(fp)
    5f3c:	01000434 	movhi	r4,16
    5f40:	213fffc4 	addi	r4,r4,-1
    5f44:	1904703a 	and	r2,r3,r4
    5f48:	1000b01e 	bne	r2,zero,620c <_strtod_r+0x12d4>
    5f4c:	18dffc2c 	andhi	r3,r3,32752
    5f50:	0081ac34 	movhi	r2,1712
    5f54:	10c1102e 	bgeu	r2,r3,6398 <_strtod_r+0x1460>
    5f58:	a0800517 	ldw	r2,20(r20)
    5f5c:	1000031e 	bne	r2,zero,5f6c <_strtod_r+0x1034>
    5f60:	a0c00417 	ldw	r3,16(r20)
    5f64:	00800044 	movi	r2,1
    5f68:	10c0420e 	bge	r2,r3,6074 <_strtod_r+0x113c>
    5f6c:	a00b883a 	mov	r5,r20
    5f70:	a809883a 	mov	r4,r21
    5f74:	01800044 	movi	r6,1
    5f78:	000c0940 	call	c094 <__lshift>
    5f7c:	1009883a 	mov	r4,r2
    5f80:	b00b883a 	mov	r5,r22
    5f84:	1029883a 	mov	r20,r2
    5f88:	000b8ac0 	call	b8ac <__mcmp>
    5f8c:	0080c20e 	bge	zero,r2,6298 <_strtod_r+0x1360>
    5f90:	e1800117 	ldw	r6,4(fp)
    5f94:	d9001417 	ldw	r4,80(sp)
    5f98:	2013003a 	cmpeq	r9,r4,zero
    5f9c:	4800ef1e 	bne	r9,zero,635c <_strtod_r+0x1424>
    5fa0:	30dffc2c 	andhi	r3,r6,32752
    5fa4:	0081ac34 	movhi	r2,1712
    5fa8:	10c0ec36 	bltu	r2,r3,635c <_strtod_r+0x1424>
    5fac:	0080dc34 	movhi	r2,880
    5fb0:	10ffca2e 	bgeu	r2,r3,5edc <_strtod_r+0xfa4>
    5fb4:	e0800017 	ldw	r2,0(fp)
    5fb8:	e0c00117 	ldw	r3,4(fp)
    5fbc:	020e5434 	movhi	r8,14672
    5fc0:	000d883a 	mov	r6,zero
    5fc4:	400f883a 	mov	r7,r8
    5fc8:	180b883a 	mov	r5,r3
    5fcc:	1009883a 	mov	r4,r2
    5fd0:	da000c15 	stw	r8,48(sp)
    5fd4:	d8000b15 	stw	zero,44(sp)
    5fd8:	000db6c0 	call	db6c <__muldf3>
    5fdc:	e0800015 	stw	r2,0(fp)
    5fe0:	e0c00115 	stw	r3,4(fp)
    5fe4:	183f471e 	bne	r3,zero,5d04 <_strtod_r+0xdcc>
    5fe8:	103f461e 	bne	r2,zero,5d04 <_strtod_r+0xdcc>
    5fec:	00800884 	movi	r2,34
    5ff0:	a8800015 	stw	r2,0(r21)
    5ff4:	003f4306 	br	5d04 <_strtod_r+0xdcc>
    5ff8:	d8801317 	ldw	r2,76(sp)
    5ffc:	1025003a 	cmpeq	r18,r2,zero
    6000:	9000861e 	bne	r18,zero,621c <_strtod_r+0x12e4>
    6004:	e1400117 	ldw	r5,4(fp)
    6008:	00c00434 	movhi	r3,16
    600c:	18ffffc4 	addi	r3,r3,-1
    6010:	28c4703a 	and	r2,r5,r3
    6014:	10c01b26 	beq	r2,r3,6084 <_strtod_r+0x114c>
    6018:	e1c00017 	ldw	r7,0(fp)
    601c:	3880004c 	andi	r2,r7,1
    6020:	1005003a 	cmpeq	r2,r2,zero
    6024:	1000791e 	bne	r2,zero,620c <_strtod_r+0x12d4>
    6028:	9000b126 	beq	r18,zero,62f0 <_strtod_r+0x13b8>
    602c:	e4400117 	ldw	r17,4(fp)
    6030:	3809883a 	mov	r4,r7
    6034:	3821883a 	mov	r16,r7
    6038:	880b883a 	mov	r5,r17
    603c:	000b90c0 	call	b90c <__ulp>
    6040:	180f883a 	mov	r7,r3
    6044:	880b883a 	mov	r5,r17
    6048:	8009883a 	mov	r4,r16
    604c:	100d883a 	mov	r6,r2
    6050:	000da780 	call	da78 <__subdf3>
    6054:	1009883a 	mov	r4,r2
    6058:	000d883a 	mov	r6,zero
    605c:	000f883a 	mov	r7,zero
    6060:	180b883a 	mov	r5,r3
    6064:	e0800015 	stw	r2,0(fp)
    6068:	e0c00115 	stw	r3,4(fp)
    606c:	000e2100 	call	e210 <__nedf2>
    6070:	103f9a26 	beq	r2,zero,5edc <_strtod_r+0xfa4>
    6074:	d9001417 	ldw	r4,80(sp)
    6078:	2013003a 	cmpeq	r9,r4,zero
    607c:	483f211e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    6080:	003fcc06 	br	5fb4 <_strtod_r+0x107c>
    6084:	d9001417 	ldw	r4,80(sp)
    6088:	e1c00017 	ldw	r7,0(fp)
    608c:	2013003a 	cmpeq	r9,r4,zero
    6090:	4800bd1e 	bne	r9,zero,6388 <_strtod_r+0x1450>
    6094:	28dffc2c 	andhi	r3,r5,32752
    6098:	0081a834 	movhi	r2,1696
    609c:	10c0ba36 	bltu	r2,r3,6388 <_strtod_r+0x1450>
    60a0:	1804d53a 	srli	r2,r3,20
    60a4:	00c01ac4 	movi	r3,107
    60a8:	013fffc4 	movi	r4,-1
    60ac:	1887c83a 	sub	r3,r3,r2
    60b0:	20c4983a 	sll	r2,r4,r3
    60b4:	11ffd91e 	bne	r2,r7,601c <_strtod_r+0x10e4>
    60b8:	28dffc2c 	andhi	r3,r5,32752
    60bc:	00800434 	movhi	r2,16
    60c0:	188d883a 	add	r6,r3,r2
    60c4:	e1800115 	stw	r6,4(fp)
    60c8:	e0000015 	stw	zero,0(fp)
    60cc:	483f0d1e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    60d0:	003fb806 	br	5fb4 <_strtod_r+0x107c>
    60d4:	0021883a 	mov	r16,zero
    60d8:	0005883a 	mov	r2,zero
    60dc:	044ff834 	movhi	r17,16352
    60e0:	00eff834 	movhi	r3,49120
    60e4:	003e8606 	br	5b00 <_strtod_r+0xbc8>
    60e8:	803d9e26 	beq	r16,zero,5764 <_strtod_r+0x82c>
    60ec:	0421c83a 	sub	r16,zero,r16
    60f0:	814003cc 	andi	r5,r16,15
    60f4:	28000f26 	beq	r5,zero,6134 <_strtod_r+0x11fc>
    60f8:	280a90fa 	slli	r5,r5,3
    60fc:	01000074 	movhi	r4,1
    6100:	21083b04 	addi	r4,r4,8428
    6104:	e0800017 	ldw	r2,0(fp)
    6108:	290b883a 	add	r5,r5,r4
    610c:	2a000017 	ldw	r8,0(r5)
    6110:	e0c00117 	ldw	r3,4(fp)
    6114:	2a400117 	ldw	r9,4(r5)
    6118:	1009883a 	mov	r4,r2
    611c:	180b883a 	mov	r5,r3
    6120:	480f883a 	mov	r7,r9
    6124:	400d883a 	mov	r6,r8
    6128:	000df300 	call	df30 <__divdf3>
    612c:	e0c00115 	stw	r3,4(fp)
    6130:	e0800015 	stw	r2,0(fp)
    6134:	8021d13a 	srai	r16,r16,4
    6138:	803d8a26 	beq	r16,zero,5764 <_strtod_r+0x82c>
    613c:	008007c4 	movi	r2,31
    6140:	14002d16 	blt	r2,r16,61f8 <_strtod_r+0x12c0>
    6144:	8080040c 	andi	r2,r16,16
    6148:	10009926 	beq	r2,zero,63b0 <_strtod_r+0x1478>
    614c:	00801a84 	movi	r2,106
    6150:	d8801415 	stw	r2,80(sp)
    6154:	0400110e 	bge	zero,r16,619c <_strtod_r+0x1264>
    6158:	04400074 	movhi	r17,1
    615c:	8c480604 	addi	r17,r17,8216
    6160:	8080004c 	andi	r2,r16,1
    6164:	1005003a 	cmpeq	r2,r2,zero
    6168:	1000091e 	bne	r2,zero,6190 <_strtod_r+0x1258>
    616c:	e0800017 	ldw	r2,0(fp)
    6170:	e0c00117 	ldw	r3,4(fp)
    6174:	89800017 	ldw	r6,0(r17)
    6178:	89c00117 	ldw	r7,4(r17)
    617c:	180b883a 	mov	r5,r3
    6180:	1009883a 	mov	r4,r2
    6184:	000db6c0 	call	db6c <__muldf3>
    6188:	e0c00115 	stw	r3,4(fp)
    618c:	e0800015 	stw	r2,0(fp)
    6190:	8021d07a 	srai	r16,r16,1
    6194:	8c400204 	addi	r17,r17,8
    6198:	043ff116 	blt	zero,r16,6160 <_strtod_r+0x1228>
    619c:	d8c01417 	ldw	r3,80(sp)
    61a0:	18000d26 	beq	r3,zero,61d8 <_strtod_r+0x12a0>
    61a4:	e1000117 	ldw	r4,4(fp)
    61a8:	00c01ac4 	movi	r3,107
    61ac:	209ffc2c 	andhi	r2,r4,32752
    61b0:	1004d53a 	srli	r2,r2,20
    61b4:	1887c83a 	sub	r3,r3,r2
    61b8:	00c0070e 	bge	zero,r3,61d8 <_strtod_r+0x12a0>
    61bc:	008007c4 	movi	r2,31
    61c0:	10c0900e 	bge	r2,r3,6404 <_strtod_r+0x14cc>
    61c4:	00800d04 	movi	r2,52
    61c8:	e0000015 	stw	zero,0(fp)
    61cc:	10c0870e 	bge	r2,r3,63ec <_strtod_r+0x14b4>
    61d0:	0180dc34 	movhi	r6,880
    61d4:	e1800115 	stw	r6,4(fp)
    61d8:	e0800017 	ldw	r2,0(fp)
    61dc:	e0c00117 	ldw	r3,4(fp)
    61e0:	000d883a 	mov	r6,zero
    61e4:	000f883a 	mov	r7,zero
    61e8:	180b883a 	mov	r5,r3
    61ec:	1009883a 	mov	r4,r2
    61f0:	000e2100 	call	e210 <__nedf2>
    61f4:	103d5c1e 	bne	r2,zero,5768 <_strtod_r+0x830>
    61f8:	00800884 	movi	r2,34
    61fc:	a8800015 	stw	r2,0(r21)
    6200:	e0000015 	stw	zero,0(fp)
    6204:	e0000115 	stw	zero,4(fp)
    6208:	003bc206 	br	5114 <_strtod_r+0x1dc>
    620c:	d8801417 	ldw	r2,80(sp)
    6210:	1013003a 	cmpeq	r9,r2,zero
    6214:	483ebb1e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    6218:	003f6606 	br	5fb4 <_strtod_r+0x107c>
    621c:	e1800117 	ldw	r6,4(fp)
    6220:	00c00434 	movhi	r3,16
    6224:	18ffffc4 	addi	r3,r3,-1
    6228:	30c4703a 	and	r2,r6,r3
    622c:	103f7a1e 	bne	r2,zero,6018 <_strtod_r+0x10e0>
    6230:	e1c00017 	ldw	r7,0(fp)
    6234:	383f791e 	bne	r7,zero,601c <_strtod_r+0x10e4>
    6238:	003f5606 	br	5f94 <_strtod_r+0x105c>
    623c:	d9800f17 	ldw	r6,60(sp)
    6240:	00bffa84 	movi	r2,-22
    6244:	30bcd416 	blt	r6,r2,5598 <_strtod_r+0x660>
    6248:	317ffe24 	muli	r5,r6,-8
    624c:	01000074 	movhi	r4,1
    6250:	21083b04 	addi	r4,r4,8428
    6254:	e0800017 	ldw	r2,0(fp)
    6258:	290b883a 	add	r5,r5,r4
    625c:	2a000017 	ldw	r8,0(r5)
    6260:	e0c00117 	ldw	r3,4(fp)
    6264:	2a400117 	ldw	r9,4(r5)
    6268:	1009883a 	mov	r4,r2
    626c:	180b883a 	mov	r5,r3
    6270:	480f883a 	mov	r7,r9
    6274:	400d883a 	mov	r6,r8
    6278:	000df300 	call	df30 <__divdf3>
    627c:	e0c00115 	stw	r3,4(fp)
    6280:	e0800015 	stw	r2,0(fp)
    6284:	003ba306 	br	5114 <_strtod_r+0x1dc>
    6288:	00800404 	movi	r2,16
    628c:	14c02f0e 	bge	r2,r19,634c <_strtod_r+0x1414>
    6290:	000f883a 	mov	r7,zero
    6294:	003f2006 	br	5f18 <_strtod_r+0xfe0>
    6298:	d9801417 	ldw	r6,80(sp)
    629c:	3013003a 	cmpeq	r9,r6,zero
    62a0:	483e981e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    62a4:	003f4306 	br	5fb4 <_strtod_r+0x107c>
    62a8:	00801a44 	movi	r2,105
    62ac:	20bc6326 	beq	r4,r2,543c <_strtod_r+0x504>
    62b0:	00801b84 	movi	r2,110
    62b4:	20bbba1e 	bne	r4,r2,51a0 <_strtod_r+0x268>
    62b8:	dc000404 	addi	r16,sp,16
    62bc:	8009883a 	mov	r4,r16
    62c0:	01400074 	movhi	r5,1
    62c4:	29480504 	addi	r5,r5,8212
    62c8:	0004ef00 	call	4ef0 <match>
    62cc:	103bb426 	beq	r2,zero,51a0 <_strtod_r+0x268>
    62d0:	d8800417 	ldw	r2,16(sp)
    62d4:	00c00a04 	movi	r3,40
    62d8:	11000007 	ldb	r4,0(r2)
    62dc:	20c03626 	beq	r4,r3,63b8 <_strtod_r+0x1480>
    62e0:	01bffe34 	movhi	r6,65528
    62e4:	e1800115 	stw	r6,4(fp)
    62e8:	e0000015 	stw	zero,0(fp)
    62ec:	003b8906 	br	5114 <_strtod_r+0x1dc>
    62f0:	e4400117 	ldw	r17,4(fp)
    62f4:	3809883a 	mov	r4,r7
    62f8:	3821883a 	mov	r16,r7
    62fc:	880b883a 	mov	r5,r17
    6300:	000b90c0 	call	b90c <__ulp>
    6304:	100d883a 	mov	r6,r2
    6308:	880b883a 	mov	r5,r17
    630c:	180f883a 	mov	r7,r3
    6310:	8009883a 	mov	r4,r16
    6314:	000daf80 	call	daf8 <__adddf3>
    6318:	d9801417 	ldw	r6,80(sp)
    631c:	e0c00115 	stw	r3,4(fp)
    6320:	e0800015 	stw	r2,0(fp)
    6324:	3013003a 	cmpeq	r9,r6,zero
    6328:	483e761e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    632c:	003f2106 	br	5fb4 <_strtod_r+0x107c>
    6330:	000f883a 	mov	r7,zero
    6334:	003cf006 	br	56f8 <_strtod_r+0x7c0>
    6338:	0080d434 	movhi	r2,848
    633c:	188d883a 	add	r6,r3,r2
    6340:	d8001415 	stw	zero,80(sp)
    6344:	e1800115 	stw	r6,4(fp)
    6348:	003d0706 	br	5768 <_strtod_r+0x830>
    634c:	808002a4 	muli	r2,r16,10
    6350:	000f883a 	mov	r7,zero
    6354:	1261883a 	add	r16,r2,r9
    6358:	003eef06 	br	5f18 <_strtod_r+0xfe0>
    635c:	309ffc2c 	andhi	r2,r6,32752
    6360:	00fffc34 	movhi	r3,65520
    6364:	10c5883a 	add	r2,r2,r3
    6368:	00c00434 	movhi	r3,16
    636c:	18ffffc4 	addi	r3,r3,-1
    6370:	10ccb03a 	or	r6,r2,r3
    6374:	01ffffc4 	movi	r7,-1
    6378:	e1800115 	stw	r6,4(fp)
    637c:	e1c00015 	stw	r7,0(fp)
    6380:	483e601e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    6384:	003f0b06 	br	5fb4 <_strtod_r+0x107c>
    6388:	00bfffc4 	movi	r2,-1
    638c:	003f4906 	br	60b4 <_strtod_r+0x117c>
    6390:	0025883a 	mov	r18,zero
    6394:	003cb106 	br	565c <_strtod_r+0x724>
    6398:	d8c01417 	ldw	r3,80(sp)
    639c:	1813003a 	cmpeq	r9,r3,zero
    63a0:	483e581e 	bne	r9,zero,5d04 <_strtod_r+0xdcc>
    63a4:	003f0306 	br	5fb4 <_strtod_r+0x107c>
    63a8:	980f883a 	mov	r7,r19
    63ac:	003ed406 	br	5f00 <_strtod_r+0xfc8>
    63b0:	d8001415 	stw	zero,80(sp)
    63b4:	003f6706 	br	6154 <_strtod_r+0x121c>
    63b8:	8009883a 	mov	r4,r16
    63bc:	01400074 	movhi	r5,1
    63c0:	294adb04 	addi	r5,r5,11116
    63c4:	d9800d04 	addi	r6,sp,52
    63c8:	000b4980 	call	b498 <__hexnan>
    63cc:	00c00144 	movi	r3,5
    63d0:	10ffc31e 	bne	r2,r3,62e0 <_strtod_r+0x13a8>
    63d4:	d8800e17 	ldw	r2,56(sp)
    63d8:	d9c00d17 	ldw	r7,52(sp)
    63dc:	119ffc34 	orhi	r6,r2,32752
    63e0:	e1800115 	stw	r6,4(fp)
    63e4:	e1c00015 	stw	r7,0(fp)
    63e8:	003b4a06 	br	5114 <_strtod_r+0x1dc>
    63ec:	18fff804 	addi	r3,r3,-32
    63f0:	00bfffc4 	movi	r2,-1
    63f4:	10c4983a 	sll	r2,r2,r3
    63f8:	208c703a 	and	r6,r4,r2
    63fc:	e1800115 	stw	r6,4(fp)
    6400:	003f7506 	br	61d8 <_strtod_r+0x12a0>
    6404:	00bfffc4 	movi	r2,-1
    6408:	10c4983a 	sll	r2,r2,r3
    640c:	e0c00017 	ldw	r3,0(fp)
    6410:	188e703a 	and	r7,r3,r2
    6414:	e1c00015 	stw	r7,0(fp)
    6418:	003f6f06 	br	61d8 <_strtod_r+0x12a0>

0000641c <strtof>:
    641c:	defffa04 	addi	sp,sp,-24
    6420:	dd000415 	stw	r20,16(sp)
    6424:	05000074 	movhi	r20,1
    6428:	a50f6704 	addi	r20,r20,15772
    642c:	2007883a 	mov	r3,r4
    6430:	a1000017 	ldw	r4,0(r20)
    6434:	280d883a 	mov	r6,r5
    6438:	180b883a 	mov	r5,r3
    643c:	dfc00515 	stw	ra,20(sp)
    6440:	dcc00315 	stw	r19,12(sp)
    6444:	dc800215 	stw	r18,8(sp)
    6448:	dc400115 	stw	r17,4(sp)
    644c:	dc000015 	stw	r16,0(sp)
    6450:	0004f380 	call	4f38 <_strtod_r>
    6454:	180b883a 	mov	r5,r3
    6458:	1009883a 	mov	r4,r2
    645c:	1823883a 	mov	r17,r3
    6460:	1021883a 	mov	r16,r2
    6464:	000e6880 	call	e688 <__truncdfsf2>
    6468:	1009883a 	mov	r4,r2
    646c:	000b883a 	mov	r5,zero
    6470:	1025883a 	mov	r18,r2
    6474:	1027883a 	mov	r19,r2
    6478:	000d5000 	call	d500 <__nesf2>
    647c:	000d883a 	mov	r6,zero
    6480:	000f883a 	mov	r7,zero
    6484:	8009883a 	mov	r4,r16
    6488:	880b883a 	mov	r5,r17
    648c:	10000e1e 	bne	r2,zero,64c8 <strtof+0xac>
    6490:	000e2100 	call	e210 <__nedf2>
    6494:	10000c26 	beq	r2,zero,64c8 <strtof+0xac>
    6498:	a0c00017 	ldw	r3,0(r20)
    649c:	00800884 	movi	r2,34
    64a0:	18800015 	stw	r2,0(r3)
    64a4:	9805883a 	mov	r2,r19
    64a8:	dfc00517 	ldw	ra,20(sp)
    64ac:	dd000417 	ldw	r20,16(sp)
    64b0:	dcc00317 	ldw	r19,12(sp)
    64b4:	dc800217 	ldw	r18,8(sp)
    64b8:	dc400117 	ldw	r17,4(sp)
    64bc:	dc000017 	ldw	r16,0(sp)
    64c0:	dec00604 	addi	sp,sp,24
    64c4:	f800283a 	ret
    64c8:	9009883a 	mov	r4,r18
    64cc:	015fe034 	movhi	r5,32640
    64d0:	297fffc4 	addi	r5,r5,-1
    64d4:	000d5780 	call	d578 <__gtsf2>
    64d8:	00ffffc4 	movi	r3,-1
    64dc:	011ffc34 	movhi	r4,32752
    64e0:	213fffc4 	addi	r4,r4,-1
    64e4:	200f883a 	mov	r7,r4
    64e8:	180d883a 	mov	r6,r3
    64ec:	8009883a 	mov	r4,r16
    64f0:	880b883a 	mov	r5,r17
    64f4:	00800f16 	blt	zero,r2,6534 <strtof+0x118>
    64f8:	9009883a 	mov	r4,r18
    64fc:	017fe034 	movhi	r5,65408
    6500:	297fffc4 	addi	r5,r5,-1
    6504:	000d5f00 	call	d5f0 <__ltsf2>
    6508:	023fffc4 	movi	r8,-1
    650c:	027ffc34 	movhi	r9,65520
    6510:	4a7fffc4 	addi	r9,r9,-1
    6514:	880b883a 	mov	r5,r17
    6518:	480f883a 	mov	r7,r9
    651c:	8009883a 	mov	r4,r16
    6520:	400d883a 	mov	r6,r8
    6524:	103fdf0e 	bge	r2,zero,64a4 <strtof+0x88>
    6528:	000e3a80 	call	e3a8 <__ltdf2>
    652c:	103fda0e 	bge	r2,zero,6498 <strtof+0x7c>
    6530:	003fdc06 	br	64a4 <strtof+0x88>
    6534:	000e2980 	call	e298 <__gtdf2>
    6538:	00bfd70e 	bge	zero,r2,6498 <strtof+0x7c>
    653c:	003fee06 	br	64f8 <strtof+0xdc>

00006540 <strtod>:
    6540:	01800074 	movhi	r6,1
    6544:	318f6704 	addi	r6,r6,15772
    6548:	2007883a 	mov	r3,r4
    654c:	31000017 	ldw	r4,0(r6)
    6550:	280d883a 	mov	r6,r5
    6554:	180b883a 	mov	r5,r3
    6558:	0004f381 	jmpi	4f38 <_strtod_r>

0000655c <_strtol_r>:
    655c:	defff304 	addi	sp,sp,-52
    6560:	00800074 	movhi	r2,1
    6564:	108f6b04 	addi	r2,r2,15788
    6568:	dcc00615 	stw	r19,24(sp)
    656c:	14c00017 	ldw	r19,0(r2)
    6570:	ddc00a15 	stw	r23,40(sp)
    6574:	dc000315 	stw	r16,12(sp)
    6578:	dfc00c15 	stw	ra,48(sp)
    657c:	df000b15 	stw	fp,44(sp)
    6580:	dd800915 	stw	r22,36(sp)
    6584:	dd400815 	stw	r21,32(sp)
    6588:	dd000715 	stw	r20,28(sp)
    658c:	dc800515 	stw	r18,20(sp)
    6590:	dc400415 	stw	r17,16(sp)
    6594:	282f883a 	mov	r23,r5
    6598:	d9000015 	stw	r4,0(sp)
    659c:	d9800115 	stw	r6,4(sp)
    65a0:	2821883a 	mov	r16,r5
    65a4:	84400007 	ldb	r17,0(r16)
    65a8:	84000044 	addi	r16,r16,1
    65ac:	9c47883a 	add	r3,r19,r17
    65b0:	18800003 	ldbu	r2,0(r3)
    65b4:	1080020c 	andi	r2,r2,8
    65b8:	103ffa1e 	bne	r2,zero,65a4 <_strtol_r+0x48>
    65bc:	00800b44 	movi	r2,45
    65c0:	88805c26 	beq	r17,r2,6734 <_strtol_r+0x1d8>
    65c4:	00800ac4 	movi	r2,43
    65c8:	88805726 	beq	r17,r2,6728 <_strtol_r+0x1cc>
    65cc:	0039883a 	mov	fp,zero
    65d0:	3807003a 	cmpeq	r3,r7,zero
    65d4:	1800431e 	bne	r3,zero,66e4 <_strtol_r+0x188>
    65d8:	00800404 	movi	r2,16
    65dc:	38804126 	beq	r7,r2,66e4 <_strtol_r+0x188>
    65e0:	3829883a 	mov	r20,r7
    65e4:	e02cc03a 	cmpne	r22,fp,zero
    65e8:	b0004b1e 	bne	r22,zero,6718 <_strtol_r+0x1bc>
    65ec:	04a00034 	movhi	r18,32768
    65f0:	94bfffc4 	addi	r18,r18,-1
    65f4:	9009883a 	mov	r4,r18
    65f8:	a00b883a 	mov	r5,r20
    65fc:	d9c00215 	stw	r7,8(sp)
    6600:	000e9d40 	call	e9d4 <__umodsi3>
    6604:	9009883a 	mov	r4,r18
    6608:	a00b883a 	mov	r5,r20
    660c:	102b883a 	mov	r21,r2
    6610:	000e9cc0 	call	e9cc <__udivsi3>
    6614:	1011883a 	mov	r8,r2
    6618:	9c45883a 	add	r2,r19,r17
    661c:	11000003 	ldbu	r4,0(r2)
    6620:	000b883a 	mov	r5,zero
    6624:	000d883a 	mov	r6,zero
    6628:	20c0010c 	andi	r3,r4,4
    662c:	d9c00217 	ldw	r7,8(sp)
    6630:	18000e26 	beq	r3,zero,666c <_strtol_r+0x110>
    6634:	88fff404 	addi	r3,r17,-48
    6638:	19c0140e 	bge	r3,r7,668c <_strtol_r+0x130>
    663c:	30003116 	blt	r6,zero,6704 <_strtol_r+0x1a8>
    6640:	41403036 	bltu	r8,r5,6704 <_strtol_r+0x1a8>
    6644:	2a002e26 	beq	r5,r8,6700 <_strtol_r+0x1a4>
    6648:	2d05383a 	mul	r2,r5,r20
    664c:	01800044 	movi	r6,1
    6650:	10cb883a 	add	r5,r2,r3
    6654:	84400007 	ldb	r17,0(r16)
    6658:	84000044 	addi	r16,r16,1
    665c:	9c45883a 	add	r2,r19,r17
    6660:	11000003 	ldbu	r4,0(r2)
    6664:	20c0010c 	andi	r3,r4,4
    6668:	183ff21e 	bne	r3,zero,6634 <_strtol_r+0xd8>
    666c:	208000cc 	andi	r2,r4,3
    6670:	10000626 	beq	r2,zero,668c <_strtol_r+0x130>
    6674:	2080004c 	andi	r2,r4,1
    6678:	1005003a 	cmpeq	r2,r2,zero
    667c:	1000231e 	bne	r2,zero,670c <_strtol_r+0x1b0>
    6680:	00800dc4 	movi	r2,55
    6684:	8887c83a 	sub	r3,r17,r2
    6688:	19ffec16 	blt	r3,r7,663c <_strtol_r+0xe0>
    668c:	30002d16 	blt	r6,zero,6744 <_strtol_r+0x1e8>
    6690:	b000231e 	bne	r22,zero,6720 <_strtol_r+0x1c4>
    6694:	2807883a 	mov	r3,r5
    6698:	d8800117 	ldw	r2,4(sp)
    669c:	10000426 	beq	r2,zero,66b0 <_strtol_r+0x154>
    66a0:	30000126 	beq	r6,zero,66a8 <_strtol_r+0x14c>
    66a4:	85ffffc4 	addi	r23,r16,-1
    66a8:	d9000117 	ldw	r4,4(sp)
    66ac:	25c00015 	stw	r23,0(r4)
    66b0:	1805883a 	mov	r2,r3
    66b4:	dfc00c17 	ldw	ra,48(sp)
    66b8:	df000b17 	ldw	fp,44(sp)
    66bc:	ddc00a17 	ldw	r23,40(sp)
    66c0:	dd800917 	ldw	r22,36(sp)
    66c4:	dd400817 	ldw	r21,32(sp)
    66c8:	dd000717 	ldw	r20,28(sp)
    66cc:	dcc00617 	ldw	r19,24(sp)
    66d0:	dc800517 	ldw	r18,20(sp)
    66d4:	dc400417 	ldw	r17,16(sp)
    66d8:	dc000317 	ldw	r16,12(sp)
    66dc:	dec00d04 	addi	sp,sp,52
    66e0:	f800283a 	ret
    66e4:	00800c04 	movi	r2,48
    66e8:	88801d26 	beq	r17,r2,6760 <_strtol_r+0x204>
    66ec:	183fbc26 	beq	r3,zero,65e0 <_strtol_r+0x84>
    66f0:	00800c04 	movi	r2,48
    66f4:	88802726 	beq	r17,r2,6794 <_strtol_r+0x238>
    66f8:	01c00284 	movi	r7,10
    66fc:	003fb806 	br	65e0 <_strtol_r+0x84>
    6700:	a8ffd10e 	bge	r21,r3,6648 <_strtol_r+0xec>
    6704:	01bfffc4 	movi	r6,-1
    6708:	003fd206 	br	6654 <_strtol_r+0xf8>
    670c:	008015c4 	movi	r2,87
    6710:	8887c83a 	sub	r3,r17,r2
    6714:	003fdc06 	br	6688 <_strtol_r+0x12c>
    6718:	04a00034 	movhi	r18,32768
    671c:	003fb506 	br	65f4 <_strtol_r+0x98>
    6720:	0147c83a 	sub	r3,zero,r5
    6724:	003fdc06 	br	6698 <_strtol_r+0x13c>
    6728:	84400007 	ldb	r17,0(r16)
    672c:	84000044 	addi	r16,r16,1
    6730:	003fa606 	br	65cc <_strtol_r+0x70>
    6734:	84400007 	ldb	r17,0(r16)
    6738:	07000044 	movi	fp,1
    673c:	84000044 	addi	r16,r16,1
    6740:	003fa306 	br	65d0 <_strtol_r+0x74>
    6744:	e005003a 	cmpeq	r2,fp,zero
    6748:	10000f1e 	bne	r2,zero,6788 <_strtol_r+0x22c>
    674c:	00e00034 	movhi	r3,32768
    6750:	d9000017 	ldw	r4,0(sp)
    6754:	00800884 	movi	r2,34
    6758:	20800015 	stw	r2,0(r4)
    675c:	003fce06 	br	6698 <_strtol_r+0x13c>
    6760:	81000007 	ldb	r4,0(r16)
    6764:	00801e04 	movi	r2,120
    6768:	20800226 	beq	r4,r2,6774 <_strtol_r+0x218>
    676c:	00801604 	movi	r2,88
    6770:	20bfde1e 	bne	r4,r2,66ec <_strtol_r+0x190>
    6774:	84400047 	ldb	r17,1(r16)
    6778:	01c00404 	movi	r7,16
    677c:	84000084 	addi	r16,r16,2
    6780:	3829883a 	mov	r20,r7
    6784:	003f9706 	br	65e4 <_strtol_r+0x88>
    6788:	00e00034 	movhi	r3,32768
    678c:	18ffffc4 	addi	r3,r3,-1
    6790:	003fef06 	br	6750 <_strtol_r+0x1f4>
    6794:	01c00204 	movi	r7,8
    6798:	3829883a 	mov	r20,r7
    679c:	003f9106 	br	65e4 <_strtol_r+0x88>

000067a0 <strtol>:
    67a0:	00800074 	movhi	r2,1
    67a4:	108f6704 	addi	r2,r2,15772
    67a8:	2013883a 	mov	r9,r4
    67ac:	11000017 	ldw	r4,0(r2)
    67b0:	2805883a 	mov	r2,r5
    67b4:	300f883a 	mov	r7,r6
    67b8:	480b883a 	mov	r5,r9
    67bc:	100d883a 	mov	r6,r2
    67c0:	000655c1 	jmpi	655c <_strtol_r>

000067c4 <_strtoll_r>:
    67c4:	defff004 	addi	sp,sp,-64
    67c8:	00800074 	movhi	r2,1
    67cc:	108f6b04 	addi	r2,r2,15788
    67d0:	df000e15 	stw	fp,56(sp)
    67d4:	17000017 	ldw	fp,0(r2)
    67d8:	ddc00d15 	stw	r23,52(sp)
    67dc:	dd000a15 	stw	r20,40(sp)
    67e0:	dfc00f15 	stw	ra,60(sp)
    67e4:	dd800c15 	stw	r22,48(sp)
    67e8:	dd400b15 	stw	r21,44(sp)
    67ec:	dcc00915 	stw	r19,36(sp)
    67f0:	dc800815 	stw	r18,32(sp)
    67f4:	dc400715 	stw	r17,28(sp)
    67f8:	dc000615 	stw	r16,24(sp)
    67fc:	d9400315 	stw	r5,12(sp)
    6800:	d9000215 	stw	r4,8(sp)
    6804:	d9800415 	stw	r6,16(sp)
    6808:	382f883a 	mov	r23,r7
    680c:	2829883a 	mov	r20,r5
    6810:	a4c00007 	ldb	r19,0(r20)
    6814:	a5000044 	addi	r20,r20,1
    6818:	e4c7883a 	add	r3,fp,r19
    681c:	18800003 	ldbu	r2,0(r3)
    6820:	1080020c 	andi	r2,r2,8
    6824:	103ffa1e 	bne	r2,zero,6810 <_strtoll_r+0x4c>
    6828:	00800b44 	movi	r2,45
    682c:	98808826 	beq	r19,r2,6a50 <_strtoll_r+0x28c>
    6830:	00800ac4 	movi	r2,43
    6834:	98808326 	beq	r19,r2,6a44 <_strtoll_r+0x280>
    6838:	d8000115 	stw	zero,4(sp)
    683c:	b807003a 	cmpeq	r3,r23,zero
    6840:	18005f1e 	bne	r3,zero,69c0 <_strtoll_r+0x1fc>
    6844:	00800404 	movi	r2,16
    6848:	b8805d26 	beq	r23,r2,69c0 <_strtoll_r+0x1fc>
    684c:	b82dd7fa 	srai	r22,r23,31
    6850:	b82b883a 	mov	r21,r23
    6854:	d8c00117 	ldw	r3,4(sp)
    6858:	1806c03a 	cmpne	r3,r3,zero
    685c:	d8c00515 	stw	r3,20(sp)
    6860:	1800631e 	bne	r3,zero,69f0 <_strtoll_r+0x22c>
    6864:	043fffc4 	movi	r16,-1
    6868:	04600034 	movhi	r17,32768
    686c:	8c7fffc4 	addi	r17,r17,-1
    6870:	880b883a 	mov	r5,r17
    6874:	8009883a 	mov	r4,r16
    6878:	a80d883a 	mov	r6,r21
    687c:	b00f883a 	mov	r7,r22
    6880:	000cf500 	call	cf50 <__umoddi3>
    6884:	880b883a 	mov	r5,r17
    6888:	8009883a 	mov	r4,r16
    688c:	b00f883a 	mov	r7,r22
    6890:	a80d883a 	mov	r6,r21
    6894:	d8800015 	stw	r2,0(sp)
    6898:	000c9740 	call	c974 <__udivdi3>
    689c:	1023883a 	mov	r17,r2
    68a0:	e4c5883a 	add	r2,fp,r19
    68a4:	11000003 	ldbu	r4,0(r2)
    68a8:	1825883a 	mov	r18,r3
    68ac:	0015883a 	mov	r10,zero
    68b0:	20c0010c 	andi	r3,r4,4
    68b4:	0017883a 	mov	r11,zero
    68b8:	000f883a 	mov	r7,zero
    68bc:	18001a26 	beq	r3,zero,6928 <_strtoll_r+0x164>
    68c0:	9c3ff404 	addi	r16,r19,-48
    68c4:	85c0200e 	bge	r16,r23,6948 <_strtoll_r+0x184>
    68c8:	38003b16 	blt	r7,zero,69b8 <_strtoll_r+0x1f4>
    68cc:	92c03a36 	bltu	r18,r11,69b8 <_strtoll_r+0x1f4>
    68d0:	5c803826 	beq	r11,r18,69b4 <_strtoll_r+0x1f0>
    68d4:	54404c26 	beq	r10,r17,6a08 <_strtoll_r+0x244>
    68d8:	580b883a 	mov	r5,r11
    68dc:	5009883a 	mov	r4,r10
    68e0:	a80d883a 	mov	r6,r21
    68e4:	b00f883a 	mov	r7,r22
    68e8:	000c8380 	call	c838 <__muldi3>
    68ec:	8013d7fa 	srai	r9,r16,31
    68f0:	100d883a 	mov	r6,r2
    68f4:	1405883a 	add	r2,r2,r16
    68f8:	118d803a 	cmpltu	r6,r2,r6
    68fc:	1a47883a 	add	r3,r3,r9
    6900:	30cd883a 	add	r6,r6,r3
    6904:	1015883a 	mov	r10,r2
    6908:	3017883a 	mov	r11,r6
    690c:	01c00044 	movi	r7,1
    6910:	a4c00007 	ldb	r19,0(r20)
    6914:	a5000044 	addi	r20,r20,1
    6918:	e4c5883a 	add	r2,fp,r19
    691c:	11000003 	ldbu	r4,0(r2)
    6920:	20c0010c 	andi	r3,r4,4
    6924:	183fe61e 	bne	r3,zero,68c0 <_strtoll_r+0xfc>
    6928:	208000cc 	andi	r2,r4,3
    692c:	10000626 	beq	r2,zero,6948 <_strtoll_r+0x184>
    6930:	2080004c 	andi	r2,r4,1
    6934:	1005003a 	cmpeq	r2,r2,zero
    6938:	1000301e 	bne	r2,zero,69fc <_strtoll_r+0x238>
    693c:	02000dc4 	movi	r8,55
    6940:	9a21c83a 	sub	r16,r19,r8
    6944:	85ffe016 	blt	r16,r23,68c8 <_strtoll_r+0x104>
    6948:	38004616 	blt	r7,zero,6a64 <_strtoll_r+0x2a0>
    694c:	d8800517 	ldw	r2,20(sp)
    6950:	1000341e 	bne	r2,zero,6a24 <_strtoll_r+0x260>
    6954:	500b883a 	mov	r5,r10
    6958:	580d883a 	mov	r6,r11
    695c:	d8c00417 	ldw	r3,16(sp)
    6960:	18000626 	beq	r3,zero,697c <_strtoll_r+0x1b8>
    6964:	38000226 	beq	r7,zero,6970 <_strtoll_r+0x1ac>
    6968:	a53fffc4 	addi	r20,r20,-1
    696c:	dd000315 	stw	r20,12(sp)
    6970:	d8c00317 	ldw	r3,12(sp)
    6974:	d8800417 	ldw	r2,16(sp)
    6978:	10c00015 	stw	r3,0(r2)
    697c:	2805883a 	mov	r2,r5
    6980:	3007883a 	mov	r3,r6
    6984:	dfc00f17 	ldw	ra,60(sp)
    6988:	df000e17 	ldw	fp,56(sp)
    698c:	ddc00d17 	ldw	r23,52(sp)
    6990:	dd800c17 	ldw	r22,48(sp)
    6994:	dd400b17 	ldw	r21,44(sp)
    6998:	dd000a17 	ldw	r20,40(sp)
    699c:	dcc00917 	ldw	r19,36(sp)
    69a0:	dc800817 	ldw	r18,32(sp)
    69a4:	dc400717 	ldw	r17,28(sp)
    69a8:	dc000617 	ldw	r16,24(sp)
    69ac:	dec01004 	addi	sp,sp,64
    69b0:	f800283a 	ret
    69b4:	8abfc72e 	bgeu	r17,r10,68d4 <_strtoll_r+0x110>
    69b8:	01ffffc4 	movi	r7,-1
    69bc:	003fd406 	br	6910 <_strtoll_r+0x14c>
    69c0:	00800c04 	movi	r2,48
    69c4:	98803226 	beq	r19,r2,6a90 <_strtoll_r+0x2cc>
    69c8:	183fa026 	beq	r3,zero,684c <_strtoll_r+0x88>
    69cc:	00800c04 	movi	r2,48
    69d0:	98803e26 	beq	r19,r2,6acc <_strtoll_r+0x308>
    69d4:	d8c00117 	ldw	r3,4(sp)
    69d8:	05c00284 	movi	r23,10
    69dc:	b82b883a 	mov	r21,r23
    69e0:	1806c03a 	cmpne	r3,r3,zero
    69e4:	002d883a 	mov	r22,zero
    69e8:	d8c00515 	stw	r3,20(sp)
    69ec:	183f9d26 	beq	r3,zero,6864 <_strtoll_r+0xa0>
    69f0:	0021883a 	mov	r16,zero
    69f4:	04600034 	movhi	r17,32768
    69f8:	003f9d06 	br	6870 <_strtoll_r+0xac>
    69fc:	020015c4 	movi	r8,87
    6a00:	9a21c83a 	sub	r16,r19,r8
    6a04:	003fcf06 	br	6944 <_strtoll_r+0x180>
    6a08:	5cbfb31e 	bne	r11,r18,68d8 <_strtoll_r+0x114>
    6a0c:	d8800017 	ldw	r2,0(sp)
    6a10:	143fb10e 	bge	r2,r16,68d8 <_strtoll_r+0x114>
    6a14:	8815883a 	mov	r10,r17
    6a18:	9017883a 	mov	r11,r18
    6a1c:	01ffffc4 	movi	r7,-1
    6a20:	003fbb06 	br	6910 <_strtoll_r+0x14c>
    6a24:	0009883a 	mov	r4,zero
    6a28:	2285c83a 	sub	r2,r4,r10
    6a2c:	2089803a 	cmpltu	r4,r4,r2
    6a30:	02c7c83a 	sub	r3,zero,r11
    6a34:	1909c83a 	sub	r4,r3,r4
    6a38:	100b883a 	mov	r5,r2
    6a3c:	200d883a 	mov	r6,r4
    6a40:	003fc606 	br	695c <_strtoll_r+0x198>
    6a44:	a4c00007 	ldb	r19,0(r20)
    6a48:	a5000044 	addi	r20,r20,1
    6a4c:	003f7a06 	br	6838 <_strtoll_r+0x74>
    6a50:	a4c00007 	ldb	r19,0(r20)
    6a54:	00800044 	movi	r2,1
    6a58:	a5000044 	addi	r20,r20,1
    6a5c:	d8800115 	stw	r2,4(sp)
    6a60:	003f7606 	br	683c <_strtoll_r+0x78>
    6a64:	d8c00117 	ldw	r3,4(sp)
    6a68:	1805003a 	cmpeq	r2,r3,zero
    6a6c:	1000131e 	bne	r2,zero,6abc <_strtoll_r+0x2f8>
    6a70:	0005883a 	mov	r2,zero
    6a74:	00e00034 	movhi	r3,32768
    6a78:	100b883a 	mov	r5,r2
    6a7c:	180d883a 	mov	r6,r3
    6a80:	d8c00217 	ldw	r3,8(sp)
    6a84:	00800884 	movi	r2,34
    6a88:	18800015 	stw	r2,0(r3)
    6a8c:	003fb306 	br	695c <_strtoll_r+0x198>
    6a90:	a1000007 	ldb	r4,0(r20)
    6a94:	00801e04 	movi	r2,120
    6a98:	20800226 	beq	r4,r2,6aa4 <_strtoll_r+0x2e0>
    6a9c:	00801604 	movi	r2,88
    6aa0:	20bfc91e 	bne	r4,r2,69c8 <_strtoll_r+0x204>
    6aa4:	a4c00047 	ldb	r19,1(r20)
    6aa8:	05c00404 	movi	r23,16
    6aac:	b82b883a 	mov	r21,r23
    6ab0:	a5000084 	addi	r20,r20,2
    6ab4:	002d883a 	mov	r22,zero
    6ab8:	003f6606 	br	6854 <_strtoll_r+0x90>
    6abc:	017fffc4 	movi	r5,-1
    6ac0:	01a00034 	movhi	r6,32768
    6ac4:	31bfffc4 	addi	r6,r6,-1
    6ac8:	003fed06 	br	6a80 <_strtoll_r+0x2bc>
    6acc:	05c00204 	movi	r23,8
    6ad0:	b82b883a 	mov	r21,r23
    6ad4:	002d883a 	mov	r22,zero
    6ad8:	003f5e06 	br	6854 <_strtoll_r+0x90>

00006adc <_strtoul_r>:
    6adc:	defff604 	addi	sp,sp,-40
    6ae0:	00800074 	movhi	r2,1
    6ae4:	108f6b04 	addi	r2,r2,15788
    6ae8:	dd000415 	stw	r20,16(sp)
    6aec:	15000017 	ldw	r20,0(r2)
    6af0:	ddc00715 	stw	r23,28(sp)
    6af4:	dd800615 	stw	r22,24(sp)
    6af8:	dd400515 	stw	r21,20(sp)
    6afc:	dc800215 	stw	r18,8(sp)
    6b00:	dc000015 	stw	r16,0(sp)
    6b04:	dfc00915 	stw	ra,36(sp)
    6b08:	df000815 	stw	fp,32(sp)
    6b0c:	dcc00315 	stw	r19,12(sp)
    6b10:	dc400115 	stw	r17,4(sp)
    6b14:	282b883a 	mov	r21,r5
    6b18:	202f883a 	mov	r23,r4
    6b1c:	302d883a 	mov	r22,r6
    6b20:	3825883a 	mov	r18,r7
    6b24:	2821883a 	mov	r16,r5
    6b28:	84400007 	ldb	r17,0(r16)
    6b2c:	84000044 	addi	r16,r16,1
    6b30:	a447883a 	add	r3,r20,r17
    6b34:	18800003 	ldbu	r2,0(r3)
    6b38:	1080020c 	andi	r2,r2,8
    6b3c:	103ffa1e 	bne	r2,zero,6b28 <_strtoul_r+0x4c>
    6b40:	00800b44 	movi	r2,45
    6b44:	88805626 	beq	r17,r2,6ca0 <_strtoul_r+0x1c4>
    6b48:	00800ac4 	movi	r2,43
    6b4c:	88805126 	beq	r17,r2,6c94 <_strtoul_r+0x1b8>
    6b50:	0039883a 	mov	fp,zero
    6b54:	9007003a 	cmpeq	r3,r18,zero
    6b58:	18003b1e 	bne	r3,zero,6c48 <_strtoul_r+0x16c>
    6b5c:	00800404 	movi	r2,16
    6b60:	90803926 	beq	r18,r2,6c48 <_strtoul_r+0x16c>
    6b64:	013fffc4 	movi	r4,-1
    6b68:	900b883a 	mov	r5,r18
    6b6c:	000e9cc0 	call	e9cc <__udivsi3>
    6b70:	013fffc4 	movi	r4,-1
    6b74:	900b883a 	mov	r5,r18
    6b78:	1027883a 	mov	r19,r2
    6b7c:	000e9d40 	call	e9d4 <__umodsi3>
    6b80:	1011883a 	mov	r8,r2
    6b84:	900f883a 	mov	r7,r18
    6b88:	a445883a 	add	r2,r20,r17
    6b8c:	11000003 	ldbu	r4,0(r2)
    6b90:	000b883a 	mov	r5,zero
    6b94:	000d883a 	mov	r6,zero
    6b98:	20c0010c 	andi	r3,r4,4
    6b9c:	18000e26 	beq	r3,zero,6bd8 <_strtoul_r+0xfc>
    6ba0:	88fff404 	addi	r3,r17,-48
    6ba4:	1c80140e 	bge	r3,r18,6bf8 <_strtoul_r+0x11c>
    6ba8:	30003316 	blt	r6,zero,6c78 <_strtoul_r+0x19c>
    6bac:	99403236 	bltu	r19,r5,6c78 <_strtoul_r+0x19c>
    6bb0:	2cc03026 	beq	r5,r19,6c74 <_strtoul_r+0x198>
    6bb4:	29c5383a 	mul	r2,r5,r7
    6bb8:	01800044 	movi	r6,1
    6bbc:	10cb883a 	add	r5,r2,r3
    6bc0:	84400007 	ldb	r17,0(r16)
    6bc4:	84000044 	addi	r16,r16,1
    6bc8:	a445883a 	add	r2,r20,r17
    6bcc:	11000003 	ldbu	r4,0(r2)
    6bd0:	20c0010c 	andi	r3,r4,4
    6bd4:	183ff21e 	bne	r3,zero,6ba0 <_strtoul_r+0xc4>
    6bd8:	208000cc 	andi	r2,r4,3
    6bdc:	10000626 	beq	r2,zero,6bf8 <_strtoul_r+0x11c>
    6be0:	2080004c 	andi	r2,r4,1
    6be4:	1005003a 	cmpeq	r2,r2,zero
    6be8:	1000251e 	bne	r2,zero,6c80 <_strtoul_r+0x1a4>
    6bec:	00800dc4 	movi	r2,55
    6bf0:	8887c83a 	sub	r3,r17,r2
    6bf4:	1cbfec16 	blt	r3,r18,6ba8 <_strtoul_r+0xcc>
    6bf8:	3000400e 	bge	r6,zero,6cfc <_strtoul_r+0x220>
    6bfc:	00800884 	movi	r2,34
    6c00:	017fffc4 	movi	r5,-1
    6c04:	b8800015 	stw	r2,0(r23)
    6c08:	b0000226 	beq	r22,zero,6c14 <_strtoul_r+0x138>
    6c0c:	30001f1e 	bne	r6,zero,6c8c <_strtoul_r+0x1b0>
    6c10:	b5400015 	stw	r21,0(r22)
    6c14:	2805883a 	mov	r2,r5
    6c18:	dfc00917 	ldw	ra,36(sp)
    6c1c:	df000817 	ldw	fp,32(sp)
    6c20:	ddc00717 	ldw	r23,28(sp)
    6c24:	dd800617 	ldw	r22,24(sp)
    6c28:	dd400517 	ldw	r21,20(sp)
    6c2c:	dd000417 	ldw	r20,16(sp)
    6c30:	dcc00317 	ldw	r19,12(sp)
    6c34:	dc800217 	ldw	r18,8(sp)
    6c38:	dc400117 	ldw	r17,4(sp)
    6c3c:	dc000017 	ldw	r16,0(sp)
    6c40:	dec00a04 	addi	sp,sp,40
    6c44:	f800283a 	ret
    6c48:	00800c04 	movi	r2,48
    6c4c:	88801826 	beq	r17,r2,6cb0 <_strtoul_r+0x1d4>
    6c50:	183fc426 	beq	r3,zero,6b64 <_strtoul_r+0x88>
    6c54:	00800c04 	movi	r2,48
    6c58:	88802226 	beq	r17,r2,6ce4 <_strtoul_r+0x208>
    6c5c:	04800284 	movi	r18,10
    6c60:	900f883a 	mov	r7,r18
    6c64:	04c666b4 	movhi	r19,6554
    6c68:	9ce66644 	addi	r19,r19,-26215
    6c6c:	02000144 	movi	r8,5
    6c70:	003fc506 	br	6b88 <_strtoul_r+0xac>
    6c74:	40ffcf0e 	bge	r8,r3,6bb4 <_strtoul_r+0xd8>
    6c78:	01bfffc4 	movi	r6,-1
    6c7c:	003fd006 	br	6bc0 <_strtoul_r+0xe4>
    6c80:	008015c4 	movi	r2,87
    6c84:	8887c83a 	sub	r3,r17,r2
    6c88:	003fda06 	br	6bf4 <_strtoul_r+0x118>
    6c8c:	857fffc4 	addi	r21,r16,-1
    6c90:	003fdf06 	br	6c10 <_strtoul_r+0x134>
    6c94:	84400007 	ldb	r17,0(r16)
    6c98:	84000044 	addi	r16,r16,1
    6c9c:	003fac06 	br	6b50 <_strtoul_r+0x74>
    6ca0:	84400007 	ldb	r17,0(r16)
    6ca4:	07000044 	movi	fp,1
    6ca8:	84000044 	addi	r16,r16,1
    6cac:	003fa906 	br	6b54 <_strtoul_r+0x78>
    6cb0:	81000007 	ldb	r4,0(r16)
    6cb4:	00801e04 	movi	r2,120
    6cb8:	20800226 	beq	r4,r2,6cc4 <_strtoul_r+0x1e8>
    6cbc:	00801604 	movi	r2,88
    6cc0:	20bfe31e 	bne	r4,r2,6c50 <_strtoul_r+0x174>
    6cc4:	84400047 	ldb	r17,1(r16)
    6cc8:	04800404 	movi	r18,16
    6ccc:	84000084 	addi	r16,r16,2
    6cd0:	900f883a 	mov	r7,r18
    6cd4:	04c40034 	movhi	r19,4096
    6cd8:	9cffffc4 	addi	r19,r19,-1
    6cdc:	020003c4 	movi	r8,15
    6ce0:	003fa906 	br	6b88 <_strtoul_r+0xac>
    6ce4:	04800204 	movi	r18,8
    6ce8:	900f883a 	mov	r7,r18
    6cec:	04c80034 	movhi	r19,8192
    6cf0:	9cffffc4 	addi	r19,r19,-1
    6cf4:	020001c4 	movi	r8,7
    6cf8:	003fa306 	br	6b88 <_strtoul_r+0xac>
    6cfc:	e005003a 	cmpeq	r2,fp,zero
    6d00:	103fc11e 	bne	r2,zero,6c08 <_strtoul_r+0x12c>
    6d04:	014bc83a 	sub	r5,zero,r5
    6d08:	003fbf06 	br	6c08 <_strtoul_r+0x12c>

00006d0c <strtoul>:
    6d0c:	00800074 	movhi	r2,1
    6d10:	108f6704 	addi	r2,r2,15772
    6d14:	2013883a 	mov	r9,r4
    6d18:	11000017 	ldw	r4,0(r2)
    6d1c:	2805883a 	mov	r2,r5
    6d20:	300f883a 	mov	r7,r6
    6d24:	480b883a 	mov	r5,r9
    6d28:	100d883a 	mov	r6,r2
    6d2c:	0006adc1 	jmpi	6adc <_strtoul_r>

00006d30 <_strtoull_r>:
    6d30:	defff104 	addi	sp,sp,-60
    6d34:	00800074 	movhi	r2,1
    6d38:	108f6b04 	addi	r2,r2,15788
    6d3c:	df000d15 	stw	fp,52(sp)
    6d40:	17000017 	ldw	fp,0(r2)
    6d44:	ddc00c15 	stw	r23,48(sp)
    6d48:	dcc00815 	stw	r19,32(sp)
    6d4c:	dfc00e15 	stw	ra,56(sp)
    6d50:	dd800b15 	stw	r22,44(sp)
    6d54:	dd400a15 	stw	r21,40(sp)
    6d58:	dd000915 	stw	r20,36(sp)
    6d5c:	dc800715 	stw	r18,28(sp)
    6d60:	dc400615 	stw	r17,24(sp)
    6d64:	dc000515 	stw	r16,20(sp)
    6d68:	d9400215 	stw	r5,8(sp)
    6d6c:	d9000115 	stw	r4,4(sp)
    6d70:	d9800315 	stw	r6,12(sp)
    6d74:	382f883a 	mov	r23,r7
    6d78:	2827883a 	mov	r19,r5
    6d7c:	9d000007 	ldb	r20,0(r19)
    6d80:	9cc00044 	addi	r19,r19,1
    6d84:	e507883a 	add	r3,fp,r20
    6d88:	18800003 	ldbu	r2,0(r3)
    6d8c:	1080020c 	andi	r2,r2,8
    6d90:	103ffa1e 	bne	r2,zero,6d7c <_strtoull_r+0x4c>
    6d94:	00800b44 	movi	r2,45
    6d98:	a0807a26 	beq	r20,r2,6f84 <_strtoull_r+0x254>
    6d9c:	00800ac4 	movi	r2,43
    6da0:	a0807526 	beq	r20,r2,6f78 <_strtoull_r+0x248>
    6da4:	d8000015 	stw	zero,0(sp)
    6da8:	b807003a 	cmpeq	r3,r23,zero
    6dac:	18005a1e 	bne	r3,zero,6f18 <_strtoull_r+0x1e8>
    6db0:	00800404 	movi	r2,16
    6db4:	b8805826 	beq	r23,r2,6f18 <_strtoull_r+0x1e8>
    6db8:	b82dd7fa 	srai	r22,r23,31
    6dbc:	043fffc4 	movi	r16,-1
    6dc0:	8009883a 	mov	r4,r16
    6dc4:	800b883a 	mov	r5,r16
    6dc8:	b80d883a 	mov	r6,r23
    6dcc:	b00f883a 	mov	r7,r22
    6dd0:	000c9740 	call	c974 <__udivdi3>
    6dd4:	8009883a 	mov	r4,r16
    6dd8:	800b883a 	mov	r5,r16
    6ddc:	b80d883a 	mov	r6,r23
    6de0:	b00f883a 	mov	r7,r22
    6de4:	1023883a 	mov	r17,r2
    6de8:	1825883a 	mov	r18,r3
    6dec:	000cf500 	call	cf50 <__umoddi3>
    6df0:	b82b883a 	mov	r21,r23
    6df4:	1019883a 	mov	r12,r2
    6df8:	e505883a 	add	r2,fp,r20
    6dfc:	11000003 	ldbu	r4,0(r2)
    6e00:	0015883a 	mov	r10,zero
    6e04:	0017883a 	mov	r11,zero
    6e08:	20c0010c 	andi	r3,r4,4
    6e0c:	000d883a 	mov	r6,zero
    6e10:	18001c26 	beq	r3,zero,6e84 <_strtoull_r+0x154>
    6e14:	a43ff404 	addi	r16,r20,-48
    6e18:	85c0220e 	bge	r16,r23,6ea4 <_strtoull_r+0x174>
    6e1c:	30003c16 	blt	r6,zero,6f10 <_strtoull_r+0x1e0>
    6e20:	92c03b36 	bltu	r18,r11,6f10 <_strtoull_r+0x1e0>
    6e24:	5c803926 	beq	r11,r18,6f0c <_strtoull_r+0x1dc>
    6e28:	54404c26 	beq	r10,r17,6f5c <_strtoull_r+0x22c>
    6e2c:	580b883a 	mov	r5,r11
    6e30:	5009883a 	mov	r4,r10
    6e34:	a80d883a 	mov	r6,r21
    6e38:	b00f883a 	mov	r7,r22
    6e3c:	db000415 	stw	r12,16(sp)
    6e40:	000c8380 	call	c838 <__muldi3>
    6e44:	8013d7fa 	srai	r9,r16,31
    6e48:	100d883a 	mov	r6,r2
    6e4c:	1405883a 	add	r2,r2,r16
    6e50:	118d803a 	cmpltu	r6,r2,r6
    6e54:	1a47883a 	add	r3,r3,r9
    6e58:	db000417 	ldw	r12,16(sp)
    6e5c:	30cd883a 	add	r6,r6,r3
    6e60:	3017883a 	mov	r11,r6
    6e64:	1015883a 	mov	r10,r2
    6e68:	01800044 	movi	r6,1
    6e6c:	9d000007 	ldb	r20,0(r19)
    6e70:	9cc00044 	addi	r19,r19,1
    6e74:	e505883a 	add	r2,fp,r20
    6e78:	11000003 	ldbu	r4,0(r2)
    6e7c:	20c0010c 	andi	r3,r4,4
    6e80:	183fe41e 	bne	r3,zero,6e14 <_strtoull_r+0xe4>
    6e84:	208000cc 	andi	r2,r4,3
    6e88:	10000626 	beq	r2,zero,6ea4 <_strtoull_r+0x174>
    6e8c:	2080004c 	andi	r2,r4,1
    6e90:	1005003a 	cmpeq	r2,r2,zero
    6e94:	10002e1e 	bne	r2,zero,6f50 <_strtoull_r+0x220>
    6e98:	02000dc4 	movi	r8,55
    6e9c:	a221c83a 	sub	r16,r20,r8
    6ea0:	85ffde16 	blt	r16,r23,6e1c <_strtoull_r+0xec>
    6ea4:	3000530e 	bge	r6,zero,6ff4 <_strtoull_r+0x2c4>
    6ea8:	d8c00117 	ldw	r3,4(sp)
    6eac:	02bfffc4 	movi	r10,-1
    6eb0:	00800884 	movi	r2,34
    6eb4:	5017883a 	mov	r11,r10
    6eb8:	18800015 	stw	r2,0(r3)
    6ebc:	d8800317 	ldw	r2,12(sp)
    6ec0:	10000426 	beq	r2,zero,6ed4 <_strtoull_r+0x1a4>
    6ec4:	3000291e 	bne	r6,zero,6f6c <_strtoull_r+0x23c>
    6ec8:	d8800217 	ldw	r2,8(sp)
    6ecc:	d8c00317 	ldw	r3,12(sp)
    6ed0:	18800015 	stw	r2,0(r3)
    6ed4:	5005883a 	mov	r2,r10
    6ed8:	5807883a 	mov	r3,r11
    6edc:	dfc00e17 	ldw	ra,56(sp)
    6ee0:	df000d17 	ldw	fp,52(sp)
    6ee4:	ddc00c17 	ldw	r23,48(sp)
    6ee8:	dd800b17 	ldw	r22,44(sp)
    6eec:	dd400a17 	ldw	r21,40(sp)
    6ef0:	dd000917 	ldw	r20,36(sp)
    6ef4:	dcc00817 	ldw	r19,32(sp)
    6ef8:	dc800717 	ldw	r18,28(sp)
    6efc:	dc400617 	ldw	r17,24(sp)
    6f00:	dc000517 	ldw	r16,20(sp)
    6f04:	dec00f04 	addi	sp,sp,60
    6f08:	f800283a 	ret
    6f0c:	8abfc62e 	bgeu	r17,r10,6e28 <_strtoull_r+0xf8>
    6f10:	01bfffc4 	movi	r6,-1
    6f14:	003fd506 	br	6e6c <_strtoull_r+0x13c>
    6f18:	00800c04 	movi	r2,48
    6f1c:	a0801e26 	beq	r20,r2,6f98 <_strtoull_r+0x268>
    6f20:	183fa526 	beq	r3,zero,6db8 <_strtoull_r+0x88>
    6f24:	00800c04 	movi	r2,48
    6f28:	a0802a26 	beq	r20,r2,6fd4 <_strtoull_r+0x2a4>
    6f2c:	05c00284 	movi	r23,10
    6f30:	b82b883a 	mov	r21,r23
    6f34:	046666b4 	movhi	r17,39322
    6f38:	8c666644 	addi	r17,r17,-26215
    6f3c:	002d883a 	mov	r22,zero
    6f40:	048666b4 	movhi	r18,6554
    6f44:	94a66644 	addi	r18,r18,-26215
    6f48:	03000144 	movi	r12,5
    6f4c:	003faa06 	br	6df8 <_strtoull_r+0xc8>
    6f50:	020015c4 	movi	r8,87
    6f54:	a221c83a 	sub	r16,r20,r8
    6f58:	003fd106 	br	6ea0 <_strtoull_r+0x170>
    6f5c:	5cbfb31e 	bne	r11,r18,6e2c <_strtoull_r+0xfc>
    6f60:	643fb20e 	bge	r12,r16,6e2c <_strtoull_r+0xfc>
    6f64:	01bfffc4 	movi	r6,-1
    6f68:	003fc006 	br	6e6c <_strtoull_r+0x13c>
    6f6c:	9cffffc4 	addi	r19,r19,-1
    6f70:	dcc00215 	stw	r19,8(sp)
    6f74:	003fd406 	br	6ec8 <_strtoull_r+0x198>
    6f78:	9d000007 	ldb	r20,0(r19)
    6f7c:	9cc00044 	addi	r19,r19,1
    6f80:	003f8806 	br	6da4 <_strtoull_r+0x74>
    6f84:	9d000007 	ldb	r20,0(r19)
    6f88:	00800044 	movi	r2,1
    6f8c:	9cc00044 	addi	r19,r19,1
    6f90:	d8800015 	stw	r2,0(sp)
    6f94:	003f8406 	br	6da8 <_strtoull_r+0x78>
    6f98:	99000007 	ldb	r4,0(r19)
    6f9c:	00801e04 	movi	r2,120
    6fa0:	20800226 	beq	r4,r2,6fac <_strtoull_r+0x27c>
    6fa4:	00801604 	movi	r2,88
    6fa8:	20bfdd1e 	bne	r4,r2,6f20 <_strtoull_r+0x1f0>
    6fac:	9d000047 	ldb	r20,1(r19)
    6fb0:	05c00404 	movi	r23,16
    6fb4:	b82b883a 	mov	r21,r23
    6fb8:	047fffc4 	movi	r17,-1
    6fbc:	9cc00084 	addi	r19,r19,2
    6fc0:	002d883a 	mov	r22,zero
    6fc4:	04840034 	movhi	r18,4096
    6fc8:	94bfffc4 	addi	r18,r18,-1
    6fcc:	030003c4 	movi	r12,15
    6fd0:	003f8906 	br	6df8 <_strtoull_r+0xc8>
    6fd4:	05c00204 	movi	r23,8
    6fd8:	b82b883a 	mov	r21,r23
    6fdc:	047fffc4 	movi	r17,-1
    6fe0:	002d883a 	mov	r22,zero
    6fe4:	04880034 	movhi	r18,8192
    6fe8:	94bfffc4 	addi	r18,r18,-1
    6fec:	030001c4 	movi	r12,7
    6ff0:	003f8106 	br	6df8 <_strtoull_r+0xc8>
    6ff4:	d8c00017 	ldw	r3,0(sp)
    6ff8:	1805003a 	cmpeq	r2,r3,zero
    6ffc:	103faf1e 	bne	r2,zero,6ebc <_strtoull_r+0x18c>
    7000:	0009883a 	mov	r4,zero
    7004:	2285c83a 	sub	r2,r4,r10
    7008:	02c7c83a 	sub	r3,zero,r11
    700c:	2089803a 	cmpltu	r4,r4,r2
    7010:	1909c83a 	sub	r4,r3,r4
    7014:	1015883a 	mov	r10,r2
    7018:	2017883a 	mov	r11,r4
    701c:	003fa706 	br	6ebc <_strtoull_r+0x18c>

00007020 <__submore>:
    7020:	defffa04 	addi	sp,sp,-24
    7024:	28c00c17 	ldw	r3,48(r5)
    7028:	dc800215 	stw	r18,8(sp)
    702c:	2825883a 	mov	r18,r5
    7030:	dc000015 	stw	r16,0(sp)
    7034:	90801004 	addi	r2,r18,64
    7038:	04010004 	movi	r16,1024
    703c:	dfc00515 	stw	ra,20(sp)
    7040:	dd000415 	stw	r20,16(sp)
    7044:	dcc00315 	stw	r19,12(sp)
    7048:	dc400115 	stw	r17,4(sp)
    704c:	800b883a 	mov	r5,r16
    7050:	18801b26 	beq	r3,r2,70c0 <__submore+0xa0>
    7054:	94400d17 	ldw	r17,52(r18)
    7058:	180b883a 	mov	r5,r3
    705c:	8c69883a 	add	r20,r17,r17
    7060:	a00d883a 	mov	r6,r20
    7064:	00046740 	call	4674 <_realloc_r>
    7068:	1467883a 	add	r19,r2,r17
    706c:	1021883a 	mov	r16,r2
    7070:	880d883a 	mov	r6,r17
    7074:	9809883a 	mov	r4,r19
    7078:	100b883a 	mov	r5,r2
    707c:	10000e26 	beq	r2,zero,70b8 <__submore+0x98>
    7080:	000125c0 	call	125c <memcpy>
    7084:	000d883a 	mov	r6,zero
    7088:	95000d15 	stw	r20,52(r18)
    708c:	94c00015 	stw	r19,0(r18)
    7090:	94000c15 	stw	r16,48(r18)
    7094:	3005883a 	mov	r2,r6
    7098:	dfc00517 	ldw	ra,20(sp)
    709c:	dd000417 	ldw	r20,16(sp)
    70a0:	dcc00317 	ldw	r19,12(sp)
    70a4:	dc800217 	ldw	r18,8(sp)
    70a8:	dc400117 	ldw	r17,4(sp)
    70ac:	dc000017 	ldw	r16,0(sp)
    70b0:	dec00604 	addi	sp,sp,24
    70b4:	f800283a 	ret
    70b8:	01bfffc4 	movi	r6,-1
    70bc:	003ff506 	br	7094 <__submore+0x74>
    70c0:	0000a380 	call	a38 <_malloc_r>
    70c4:	1009883a 	mov	r4,r2
    70c8:	1140ff44 	addi	r5,r2,1021
    70cc:	000d883a 	mov	r6,zero
    70d0:	103ff926 	beq	r2,zero,70b8 <__submore+0x98>
    70d4:	90801083 	ldbu	r2,66(r18)
    70d8:	94000d15 	stw	r16,52(r18)
    70dc:	91000c15 	stw	r4,48(r18)
    70e0:	28800085 	stb	r2,2(r5)
    70e4:	90c01043 	ldbu	r3,65(r18)
    70e8:	28c00045 	stb	r3,1(r5)
    70ec:	90801003 	ldbu	r2,64(r18)
    70f0:	2080ff45 	stb	r2,1021(r4)
    70f4:	91400015 	stw	r5,0(r18)
    70f8:	003fe606 	br	7094 <__submore+0x74>

000070fc <_ungetc_r>:
    70fc:	defffc04 	addi	sp,sp,-16
    7100:	00bfffc4 	movi	r2,-1
    7104:	dc400215 	stw	r17,8(sp)
    7108:	dc000115 	stw	r16,4(sp)
    710c:	dfc00315 	stw	ra,12(sp)
    7110:	2821883a 	mov	r16,r5
    7114:	2023883a 	mov	r17,r4
    7118:	28801826 	beq	r5,r2,717c <_ungetc_r+0x80>
    711c:	20000226 	beq	r4,zero,7128 <_ungetc_r+0x2c>
    7120:	20800e17 	ldw	r2,56(r4)
    7124:	10001b26 	beq	r2,zero,7194 <_ungetc_r+0x98>
    7128:	3100030b 	ldhu	r4,12(r6)
    712c:	00bff7c4 	movi	r2,-33
    7130:	2084703a 	and	r2,r4,r2
    7134:	117fffcc 	andi	r5,r2,65535
    7138:	28c0010c 	andi	r3,r5,4
    713c:	1009883a 	mov	r4,r2
    7140:	3080030d 	sth	r2,12(r6)
    7144:	18003526 	beq	r3,zero,721c <_ungetc_r+0x120>
    7148:	30800c17 	ldw	r2,48(r6)
    714c:	84003fcc 	andi	r16,r16,255
    7150:	10001426 	beq	r2,zero,71a4 <_ungetc_r+0xa8>
    7154:	30c00117 	ldw	r3,4(r6)
    7158:	30800d17 	ldw	r2,52(r6)
    715c:	1880380e 	bge	r3,r2,7240 <_ungetc_r+0x144>
    7160:	30c00017 	ldw	r3,0(r6)
    7164:	19ffffc4 	addi	r7,r3,-1
    7168:	31c00015 	stw	r7,0(r6)
    716c:	1c3fffc5 	stb	r16,-1(r3)
    7170:	30800117 	ldw	r2,4(r6)
    7174:	10800044 	addi	r2,r2,1
    7178:	30800115 	stw	r2,4(r6)
    717c:	8005883a 	mov	r2,r16
    7180:	dfc00317 	ldw	ra,12(sp)
    7184:	dc400217 	ldw	r17,8(sp)
    7188:	dc000117 	ldw	r16,4(sp)
    718c:	dec00404 	addi	sp,sp,16
    7190:	f800283a 	ret
    7194:	d9800015 	stw	r6,0(sp)
    7198:	00006600 	call	660 <__sinit>
    719c:	d9800017 	ldw	r6,0(sp)
    71a0:	003fe106 	br	7128 <_ungetc_r+0x2c>
    71a4:	30800417 	ldw	r2,16(r6)
    71a8:	10002326 	beq	r2,zero,7238 <_ungetc_r+0x13c>
    71ac:	31c00017 	ldw	r7,0(r6)
    71b0:	11c0022e 	bgeu	r2,r7,71bc <_ungetc_r+0xc0>
    71b4:	38bfffc3 	ldbu	r2,-1(r7)
    71b8:	80801226 	beq	r16,r2,7204 <_ungetc_r+0x108>
    71bc:	30c00117 	ldw	r3,4(r6)
    71c0:	00800044 	movi	r2,1
    71c4:	30800115 	stw	r2,4(r6)
    71c8:	008000c4 	movi	r2,3
    71cc:	31001004 	addi	r4,r6,64
    71d0:	31401084 	addi	r5,r6,66
    71d4:	30800d15 	stw	r2,52(r6)
    71d8:	8005883a 	mov	r2,r16
    71dc:	30c00f15 	stw	r3,60(r6)
    71e0:	31c00e15 	stw	r7,56(r6)
    71e4:	31000c15 	stw	r4,48(r6)
    71e8:	31400015 	stw	r5,0(r6)
    71ec:	34001085 	stb	r16,66(r6)
    71f0:	dfc00317 	ldw	ra,12(sp)
    71f4:	dc400217 	ldw	r17,8(sp)
    71f8:	dc000117 	ldw	r16,4(sp)
    71fc:	dec00404 	addi	sp,sp,16
    7200:	f800283a 	ret
    7204:	30800117 	ldw	r2,4(r6)
    7208:	39ffffc4 	addi	r7,r7,-1
    720c:	31c00015 	stw	r7,0(r6)
    7210:	10800044 	addi	r2,r2,1
    7214:	30800115 	stw	r2,4(r6)
    7218:	003fd806 	br	717c <_ungetc_r+0x80>
    721c:	2880040c 	andi	r2,r5,16
    7220:	10000d26 	beq	r2,zero,7258 <_ungetc_r+0x15c>
    7224:	2880020c 	andi	r2,r5,8
    7228:	10000d1e 	bne	r2,zero,7260 <_ungetc_r+0x164>
    722c:	20800114 	ori	r2,r4,4
    7230:	3080030d 	sth	r2,12(r6)
    7234:	003fc406 	br	7148 <_ungetc_r+0x4c>
    7238:	31c00017 	ldw	r7,0(r6)
    723c:	003fdf06 	br	71bc <_ungetc_r+0xc0>
    7240:	300b883a 	mov	r5,r6
    7244:	8809883a 	mov	r4,r17
    7248:	d9800015 	stw	r6,0(sp)
    724c:	00070200 	call	7020 <__submore>
    7250:	d9800017 	ldw	r6,0(sp)
    7254:	103fc226 	beq	r2,zero,7160 <_ungetc_r+0x64>
    7258:	043fffc4 	movi	r16,-1
    725c:	003fc706 	br	717c <_ungetc_r+0x80>
    7260:	300b883a 	mov	r5,r6
    7264:	8809883a 	mov	r4,r17
    7268:	d9800015 	stw	r6,0(sp)
    726c:	00033d80 	call	33d8 <_fflush_r>
    7270:	d9800017 	ldw	r6,0(sp)
    7274:	103ff81e 	bne	r2,zero,7258 <_ungetc_r+0x15c>
    7278:	3100030b 	ldhu	r4,12(r6)
    727c:	00bffdc4 	movi	r2,-9
    7280:	30000215 	stw	zero,8(r6)
    7284:	2084703a 	and	r2,r4,r2
    7288:	1009883a 	mov	r4,r2
    728c:	3080030d 	sth	r2,12(r6)
    7290:	30000615 	stw	zero,24(r6)
    7294:	003fe506 	br	722c <_ungetc_r+0x130>

00007298 <ungetc>:
    7298:	01800074 	movhi	r6,1
    729c:	318f6704 	addi	r6,r6,15772
    72a0:	2007883a 	mov	r3,r4
    72a4:	31000017 	ldw	r4,0(r6)
    72a8:	280d883a 	mov	r6,r5
    72ac:	180b883a 	mov	r5,r3
    72b0:	00070fc1 	jmpi	70fc <_ungetc_r>

000072b4 <__sprint_r>:
    72b4:	30800217 	ldw	r2,8(r6)
    72b8:	defffe04 	addi	sp,sp,-8
    72bc:	dc000015 	stw	r16,0(sp)
    72c0:	dfc00115 	stw	ra,4(sp)
    72c4:	3021883a 	mov	r16,r6
    72c8:	0007883a 	mov	r3,zero
    72cc:	1000061e 	bne	r2,zero,72e8 <__sprint_r+0x34>
    72d0:	1805883a 	mov	r2,r3
    72d4:	30000115 	stw	zero,4(r6)
    72d8:	dfc00117 	ldw	ra,4(sp)
    72dc:	dc000017 	ldw	r16,0(sp)
    72e0:	dec00204 	addi	sp,sp,8
    72e4:	f800283a 	ret
    72e8:	0003c840 	call	3c84 <__sfvwrite_r>
    72ec:	1007883a 	mov	r3,r2
    72f0:	1805883a 	mov	r2,r3
    72f4:	80000115 	stw	zero,4(r16)
    72f8:	80000215 	stw	zero,8(r16)
    72fc:	dfc00117 	ldw	ra,4(sp)
    7300:	dc000017 	ldw	r16,0(sp)
    7304:	dec00204 	addi	sp,sp,8
    7308:	f800283a 	ret

0000730c <___vfprintf_internal_r>:
    730c:	defea404 	addi	sp,sp,-1392
    7310:	dd815815 	stw	r22,1376(sp)
    7314:	dc015215 	stw	r16,1352(sp)
    7318:	d9c15115 	stw	r7,1348(sp)
    731c:	dfc15b15 	stw	ra,1388(sp)
    7320:	df015a15 	stw	fp,1384(sp)
    7324:	ddc15915 	stw	r23,1380(sp)
    7328:	dd415715 	stw	r21,1372(sp)
    732c:	dd015615 	stw	r20,1368(sp)
    7330:	dcc15515 	stw	r19,1364(sp)
    7334:	dc815415 	stw	r18,1360(sp)
    7338:	dc415315 	stw	r17,1356(sp)
    733c:	282d883a 	mov	r22,r5
    7340:	3021883a 	mov	r16,r6
    7344:	d9014f15 	stw	r4,1340(sp)
    7348:	00041540 	call	4154 <_localeconv_r>
    734c:	10800017 	ldw	r2,0(r2)
    7350:	d9c15117 	ldw	r7,1348(sp)
    7354:	d8814915 	stw	r2,1316(sp)
    7358:	d8814f17 	ldw	r2,1340(sp)
    735c:	10000226 	beq	r2,zero,7368 <___vfprintf_internal_r+0x5c>
    7360:	10800e17 	ldw	r2,56(r2)
    7364:	10020d26 	beq	r2,zero,7b9c <___vfprintf_internal_r+0x890>
    7368:	b080030b 	ldhu	r2,12(r22)
    736c:	1080020c 	andi	r2,r2,8
    7370:	10020e26 	beq	r2,zero,7bac <___vfprintf_internal_r+0x8a0>
    7374:	b0800417 	ldw	r2,16(r22)
    7378:	10020c26 	beq	r2,zero,7bac <___vfprintf_internal_r+0x8a0>
    737c:	b200030b 	ldhu	r8,12(r22)
    7380:	00800284 	movi	r2,10
    7384:	40c0068c 	andi	r3,r8,26
    7388:	18802f1e 	bne	r3,r2,7448 <___vfprintf_internal_r+0x13c>
    738c:	b080038f 	ldh	r2,14(r22)
    7390:	10002d16 	blt	r2,zero,7448 <___vfprintf_internal_r+0x13c>
    7394:	b240038b 	ldhu	r9,14(r22)
    7398:	b2800717 	ldw	r10,28(r22)
    739c:	b2c00917 	ldw	r11,36(r22)
    73a0:	d9014f17 	ldw	r4,1340(sp)
    73a4:	dc402904 	addi	r17,sp,164
    73a8:	d8804004 	addi	r2,sp,256
    73ac:	00c10004 	movi	r3,1024
    73b0:	423fff4c 	andi	r8,r8,65533
    73b4:	800d883a 	mov	r6,r16
    73b8:	880b883a 	mov	r5,r17
    73bc:	da002c0d 	sth	r8,176(sp)
    73c0:	da402c8d 	sth	r9,178(sp)
    73c4:	da803015 	stw	r10,192(sp)
    73c8:	dac03215 	stw	r11,200(sp)
    73cc:	d8802d15 	stw	r2,180(sp)
    73d0:	d8c02e15 	stw	r3,184(sp)
    73d4:	d8802915 	stw	r2,164(sp)
    73d8:	d8c02b15 	stw	r3,172(sp)
    73dc:	d8002f15 	stw	zero,188(sp)
    73e0:	000730c0 	call	730c <___vfprintf_internal_r>
    73e4:	d8814b15 	stw	r2,1324(sp)
    73e8:	10000416 	blt	r2,zero,73fc <___vfprintf_internal_r+0xf0>
    73ec:	d9014f17 	ldw	r4,1340(sp)
    73f0:	880b883a 	mov	r5,r17
    73f4:	00033d80 	call	33d8 <_fflush_r>
    73f8:	1002321e 	bne	r2,zero,7cc4 <___vfprintf_internal_r+0x9b8>
    73fc:	d8802c0b 	ldhu	r2,176(sp)
    7400:	1080100c 	andi	r2,r2,64
    7404:	10000326 	beq	r2,zero,7414 <___vfprintf_internal_r+0x108>
    7408:	b080030b 	ldhu	r2,12(r22)
    740c:	10801014 	ori	r2,r2,64
    7410:	b080030d 	sth	r2,12(r22)
    7414:	d8814b17 	ldw	r2,1324(sp)
    7418:	dfc15b17 	ldw	ra,1388(sp)
    741c:	df015a17 	ldw	fp,1384(sp)
    7420:	ddc15917 	ldw	r23,1380(sp)
    7424:	dd815817 	ldw	r22,1376(sp)
    7428:	dd415717 	ldw	r21,1372(sp)
    742c:	dd015617 	ldw	r20,1368(sp)
    7430:	dcc15517 	ldw	r19,1364(sp)
    7434:	dc815417 	ldw	r18,1360(sp)
    7438:	dc415317 	ldw	r17,1356(sp)
    743c:	dc015217 	ldw	r16,1352(sp)
    7440:	dec15c04 	addi	sp,sp,1392
    7444:	f800283a 	ret
    7448:	0005883a 	mov	r2,zero
    744c:	0007883a 	mov	r3,zero
    7450:	dd401904 	addi	r21,sp,100
    7454:	d8814215 	stw	r2,1288(sp)
    7458:	802f883a 	mov	r23,r16
    745c:	d8c14315 	stw	r3,1292(sp)
    7460:	d8014b15 	stw	zero,1324(sp)
    7464:	d8014815 	stw	zero,1312(sp)
    7468:	d8014415 	stw	zero,1296(sp)
    746c:	d8014715 	stw	zero,1308(sp)
    7470:	dd400c15 	stw	r21,48(sp)
    7474:	d8000e15 	stw	zero,56(sp)
    7478:	d8000d15 	stw	zero,52(sp)
    747c:	b8800007 	ldb	r2,0(r23)
    7480:	10001926 	beq	r2,zero,74e8 <___vfprintf_internal_r+0x1dc>
    7484:	00c00944 	movi	r3,37
    7488:	10c01726 	beq	r2,r3,74e8 <___vfprintf_internal_r+0x1dc>
    748c:	b821883a 	mov	r16,r23
    7490:	00000106 	br	7498 <___vfprintf_internal_r+0x18c>
    7494:	10c00326 	beq	r2,r3,74a4 <___vfprintf_internal_r+0x198>
    7498:	84000044 	addi	r16,r16,1
    749c:	80800007 	ldb	r2,0(r16)
    74a0:	103ffc1e 	bne	r2,zero,7494 <___vfprintf_internal_r+0x188>
    74a4:	85e7c83a 	sub	r19,r16,r23
    74a8:	98000e26 	beq	r19,zero,74e4 <___vfprintf_internal_r+0x1d8>
    74ac:	dc800e17 	ldw	r18,56(sp)
    74b0:	dc400d17 	ldw	r17,52(sp)
    74b4:	008001c4 	movi	r2,7
    74b8:	94e5883a 	add	r18,r18,r19
    74bc:	8c400044 	addi	r17,r17,1
    74c0:	adc00015 	stw	r23,0(r21)
    74c4:	dc800e15 	stw	r18,56(sp)
    74c8:	acc00115 	stw	r19,4(r21)
    74cc:	dc400d15 	stw	r17,52(sp)
    74d0:	14428b16 	blt	r2,r17,7f00 <___vfprintf_internal_r+0xbf4>
    74d4:	ad400204 	addi	r21,r21,8
    74d8:	d9014b17 	ldw	r4,1324(sp)
    74dc:	24c9883a 	add	r4,r4,r19
    74e0:	d9014b15 	stw	r4,1324(sp)
    74e4:	802f883a 	mov	r23,r16
    74e8:	b8800007 	ldb	r2,0(r23)
    74ec:	10013c26 	beq	r2,zero,79e0 <___vfprintf_internal_r+0x6d4>
    74f0:	bdc00044 	addi	r23,r23,1
    74f4:	d8000405 	stb	zero,16(sp)
    74f8:	b8c00007 	ldb	r3,0(r23)
    74fc:	04ffffc4 	movi	r19,-1
    7500:	d8014c15 	stw	zero,1328(sp)
    7504:	d8014a15 	stw	zero,1320(sp)
    7508:	d8c14d15 	stw	r3,1332(sp)
    750c:	bdc00044 	addi	r23,r23,1
    7510:	d9414d17 	ldw	r5,1332(sp)
    7514:	00801604 	movi	r2,88
    7518:	28fff804 	addi	r3,r5,-32
    751c:	10c06036 	bltu	r2,r3,76a0 <___vfprintf_internal_r+0x394>
    7520:	18c5883a 	add	r2,r3,r3
    7524:	1085883a 	add	r2,r2,r2
    7528:	00c00034 	movhi	r3,0
    752c:	18dd4f04 	addi	r3,r3,30012
    7530:	10c5883a 	add	r2,r2,r3
    7534:	11000017 	ldw	r4,0(r2)
    7538:	2000683a 	jmp	r4
    753c:	000084b0 	cmpltui	zero,zero,530
    7540:	000076a0 	cmpeqi	zero,zero,474
    7544:	000076a0 	cmpeqi	zero,zero,474
    7548:	0000849c 	xori	zero,zero,530
    754c:	000076a0 	cmpeqi	zero,zero,474
    7550:	000076a0 	cmpeqi	zero,zero,474
    7554:	000076a0 	cmpeqi	zero,zero,474
    7558:	000076a0 	cmpeqi	zero,zero,474
    755c:	000076a0 	cmpeqi	zero,zero,474
    7560:	000076a0 	cmpeqi	zero,zero,474
    7564:	0000827c 	xorhi	zero,zero,521
    7568:	0000848c 	andi	zero,zero,530
    756c:	000076a0 	cmpeqi	zero,zero,474
    7570:	00008294 	movui	zero,522
    7574:	00008528 	cmpgeui	zero,zero,532
    7578:	000076a0 	cmpeqi	zero,zero,474
    757c:	00008514 	movui	zero,532
    7580:	000084dc 	xori	zero,zero,531
    7584:	000084dc 	xori	zero,zero,531
    7588:	000084dc 	xori	zero,zero,531
    758c:	000084dc 	xori	zero,zero,531
    7590:	000084dc 	xori	zero,zero,531
    7594:	000084dc 	xori	zero,zero,531
    7598:	000084dc 	xori	zero,zero,531
    759c:	000084dc 	xori	zero,zero,531
    75a0:	000084dc 	xori	zero,zero,531
    75a4:	000076a0 	cmpeqi	zero,zero,474
    75a8:	000076a0 	cmpeqi	zero,zero,474
    75ac:	000076a0 	cmpeqi	zero,zero,474
    75b0:	000076a0 	cmpeqi	zero,zero,474
    75b4:	000076a0 	cmpeqi	zero,zero,474
    75b8:	000076a0 	cmpeqi	zero,zero,474
    75bc:	000076a0 	cmpeqi	zero,zero,474
    75c0:	000076a0 	cmpeqi	zero,zero,474
    75c4:	000076a0 	cmpeqi	zero,zero,474
    75c8:	000076a0 	cmpeqi	zero,zero,474
    75cc:	00007cf8 	rdprs	zero,zero,499
    75d0:	00008364 	muli	zero,zero,525
    75d4:	000076a0 	cmpeqi	zero,zero,474
    75d8:	00008364 	muli	zero,zero,525
    75dc:	000076a0 	cmpeqi	zero,zero,474
    75e0:	000076a0 	cmpeqi	zero,zero,474
    75e4:	000076a0 	cmpeqi	zero,zero,474
    75e8:	000076a0 	cmpeqi	zero,zero,474
    75ec:	000084c8 	cmpgei	zero,zero,531
    75f0:	000076a0 	cmpeqi	zero,zero,474
    75f4:	000076a0 	cmpeqi	zero,zero,474
    75f8:	00007dac 	andhi	zero,zero,502
    75fc:	000076a0 	cmpeqi	zero,zero,474
    7600:	000076a0 	cmpeqi	zero,zero,474
    7604:	000076a0 	cmpeqi	zero,zero,474
    7608:	000076a0 	cmpeqi	zero,zero,474
    760c:	000076a0 	cmpeqi	zero,zero,474
    7610:	00007df8 	rdprs	zero,zero,503
    7614:	000076a0 	cmpeqi	zero,zero,474
    7618:	000076a0 	cmpeqi	zero,zero,474
    761c:	00008418 	cmpnei	zero,zero,528
    7620:	000076a0 	cmpeqi	zero,zero,474
    7624:	000076a0 	cmpeqi	zero,zero,474
    7628:	000076a0 	cmpeqi	zero,zero,474
    762c:	000076a0 	cmpeqi	zero,zero,474
    7630:	000076a0 	cmpeqi	zero,zero,474
    7634:	000076a0 	cmpeqi	zero,zero,474
    7638:	000076a0 	cmpeqi	zero,zero,474
    763c:	000076a0 	cmpeqi	zero,zero,474
    7640:	000076a0 	cmpeqi	zero,zero,474
    7644:	000076a0 	cmpeqi	zero,zero,474
    7648:	000083ec 	andhi	zero,zero,527
    764c:	00007d04 	movi	zero,500
    7650:	00008364 	muli	zero,zero,525
    7654:	00008364 	muli	zero,zero,525
    7658:	00008364 	muli	zero,zero,525
    765c:	00008350 	cmplti	zero,zero,525
    7660:	00007d04 	movi	zero,500
    7664:	000076a0 	cmpeqi	zero,zero,474
    7668:	000076a0 	cmpeqi	zero,zero,474
    766c:	000082d8 	cmpnei	zero,zero,523
    7670:	000076a0 	cmpeqi	zero,zero,474
    7674:	000082a8 	cmpgeui	zero,zero,522
    7678:	00007db8 	rdprs	zero,zero,502
    767c:	00008308 	cmpgei	zero,zero,524
    7680:	000082f4 	movhi	zero,523
    7684:	000076a0 	cmpeqi	zero,zero,474
    7688:	00008584 	movi	zero,534
    768c:	000076a0 	cmpeqi	zero,zero,474
    7690:	00007e04 	movi	zero,504
    7694:	000076a0 	cmpeqi	zero,zero,474
    7698:	000076a0 	cmpeqi	zero,zero,474
    769c:	0000847c 	xorhi	zero,zero,529
    76a0:	d9014d17 	ldw	r4,1332(sp)
    76a4:	2000ce26 	beq	r4,zero,79e0 <___vfprintf_internal_r+0x6d4>
    76a8:	01400044 	movi	r5,1
    76ac:	d9800f04 	addi	r6,sp,60
    76b0:	d9c14015 	stw	r7,1280(sp)
    76b4:	d9414515 	stw	r5,1300(sp)
    76b8:	d9814115 	stw	r6,1284(sp)
    76bc:	280f883a 	mov	r7,r5
    76c0:	d9000f05 	stb	r4,60(sp)
    76c4:	d8000405 	stb	zero,16(sp)
    76c8:	d8014615 	stw	zero,1304(sp)
    76cc:	d8c14c17 	ldw	r3,1328(sp)
    76d0:	1880008c 	andi	r2,r3,2
    76d4:	1005003a 	cmpeq	r2,r2,zero
    76d8:	d8815015 	stw	r2,1344(sp)
    76dc:	1000031e 	bne	r2,zero,76ec <___vfprintf_internal_r+0x3e0>
    76e0:	d9014517 	ldw	r4,1300(sp)
    76e4:	21000084 	addi	r4,r4,2
    76e8:	d9014515 	stw	r4,1300(sp)
    76ec:	d9414c17 	ldw	r5,1328(sp)
    76f0:	2940210c 	andi	r5,r5,132
    76f4:	d9414e15 	stw	r5,1336(sp)
    76f8:	28002d1e 	bne	r5,zero,77b0 <___vfprintf_internal_r+0x4a4>
    76fc:	d9814a17 	ldw	r6,1320(sp)
    7700:	d8814517 	ldw	r2,1300(sp)
    7704:	30a1c83a 	sub	r16,r6,r2
    7708:	0400290e 	bge	zero,r16,77b0 <___vfprintf_internal_r+0x4a4>
    770c:	00800404 	movi	r2,16
    7710:	1404580e 	bge	r2,r16,8874 <___vfprintf_internal_r+0x1568>
    7714:	dc800e17 	ldw	r18,56(sp)
    7718:	dc400d17 	ldw	r17,52(sp)
    771c:	1027883a 	mov	r19,r2
    7720:	07000074 	movhi	fp,1
    7724:	e7082b84 	addi	fp,fp,8366
    7728:	050001c4 	movi	r20,7
    772c:	00000306 	br	773c <___vfprintf_internal_r+0x430>
    7730:	843ffc04 	addi	r16,r16,-16
    7734:	ad400204 	addi	r21,r21,8
    7738:	9c00130e 	bge	r19,r16,7788 <___vfprintf_internal_r+0x47c>
    773c:	94800404 	addi	r18,r18,16
    7740:	8c400044 	addi	r17,r17,1
    7744:	af000015 	stw	fp,0(r21)
    7748:	acc00115 	stw	r19,4(r21)
    774c:	dc800e15 	stw	r18,56(sp)
    7750:	dc400d15 	stw	r17,52(sp)
    7754:	a47ff60e 	bge	r20,r17,7730 <___vfprintf_internal_r+0x424>
    7758:	d9014f17 	ldw	r4,1340(sp)
    775c:	b00b883a 	mov	r5,r22
    7760:	d9800c04 	addi	r6,sp,48
    7764:	d9c15115 	stw	r7,1348(sp)
    7768:	00072b40 	call	72b4 <__sprint_r>
    776c:	d9c15117 	ldw	r7,1348(sp)
    7770:	10009e1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7774:	843ffc04 	addi	r16,r16,-16
    7778:	dc800e17 	ldw	r18,56(sp)
    777c:	dc400d17 	ldw	r17,52(sp)
    7780:	dd401904 	addi	r21,sp,100
    7784:	9c3fed16 	blt	r19,r16,773c <___vfprintf_internal_r+0x430>
    7788:	9425883a 	add	r18,r18,r16
    778c:	8c400044 	addi	r17,r17,1
    7790:	008001c4 	movi	r2,7
    7794:	af000015 	stw	fp,0(r21)
    7798:	ac000115 	stw	r16,4(r21)
    779c:	dc800e15 	stw	r18,56(sp)
    77a0:	dc400d15 	stw	r17,52(sp)
    77a4:	1441f516 	blt	r2,r17,7f7c <___vfprintf_internal_r+0xc70>
    77a8:	ad400204 	addi	r21,r21,8
    77ac:	00000206 	br	77b8 <___vfprintf_internal_r+0x4ac>
    77b0:	dc800e17 	ldw	r18,56(sp)
    77b4:	dc400d17 	ldw	r17,52(sp)
    77b8:	d8800407 	ldb	r2,16(sp)
    77bc:	10000b26 	beq	r2,zero,77ec <___vfprintf_internal_r+0x4e0>
    77c0:	00800044 	movi	r2,1
    77c4:	94800044 	addi	r18,r18,1
    77c8:	8c400044 	addi	r17,r17,1
    77cc:	a8800115 	stw	r2,4(r21)
    77d0:	d8c00404 	addi	r3,sp,16
    77d4:	008001c4 	movi	r2,7
    77d8:	a8c00015 	stw	r3,0(r21)
    77dc:	dc800e15 	stw	r18,56(sp)
    77e0:	dc400d15 	stw	r17,52(sp)
    77e4:	1441da16 	blt	r2,r17,7f50 <___vfprintf_internal_r+0xc44>
    77e8:	ad400204 	addi	r21,r21,8
    77ec:	d9015017 	ldw	r4,1344(sp)
    77f0:	20000b1e 	bne	r4,zero,7820 <___vfprintf_internal_r+0x514>
    77f4:	d8800444 	addi	r2,sp,17
    77f8:	94800084 	addi	r18,r18,2
    77fc:	8c400044 	addi	r17,r17,1
    7800:	a8800015 	stw	r2,0(r21)
    7804:	00c00084 	movi	r3,2
    7808:	008001c4 	movi	r2,7
    780c:	a8c00115 	stw	r3,4(r21)
    7810:	dc800e15 	stw	r18,56(sp)
    7814:	dc400d15 	stw	r17,52(sp)
    7818:	1441c216 	blt	r2,r17,7f24 <___vfprintf_internal_r+0xc18>
    781c:	ad400204 	addi	r21,r21,8
    7820:	d9414e17 	ldw	r5,1336(sp)
    7824:	00802004 	movi	r2,128
    7828:	2880b126 	beq	r5,r2,7af0 <___vfprintf_internal_r+0x7e4>
    782c:	d8c14617 	ldw	r3,1304(sp)
    7830:	19e1c83a 	sub	r16,r3,r7
    7834:	0400260e 	bge	zero,r16,78d0 <___vfprintf_internal_r+0x5c4>
    7838:	00800404 	movi	r2,16
    783c:	1403c90e 	bge	r2,r16,8764 <___vfprintf_internal_r+0x1458>
    7840:	1027883a 	mov	r19,r2
    7844:	07000074 	movhi	fp,1
    7848:	e7082784 	addi	fp,fp,8350
    784c:	050001c4 	movi	r20,7
    7850:	00000306 	br	7860 <___vfprintf_internal_r+0x554>
    7854:	843ffc04 	addi	r16,r16,-16
    7858:	ad400204 	addi	r21,r21,8
    785c:	9c00130e 	bge	r19,r16,78ac <___vfprintf_internal_r+0x5a0>
    7860:	94800404 	addi	r18,r18,16
    7864:	8c400044 	addi	r17,r17,1
    7868:	af000015 	stw	fp,0(r21)
    786c:	acc00115 	stw	r19,4(r21)
    7870:	dc800e15 	stw	r18,56(sp)
    7874:	dc400d15 	stw	r17,52(sp)
    7878:	a47ff60e 	bge	r20,r17,7854 <___vfprintf_internal_r+0x548>
    787c:	d9014f17 	ldw	r4,1340(sp)
    7880:	b00b883a 	mov	r5,r22
    7884:	d9800c04 	addi	r6,sp,48
    7888:	d9c15115 	stw	r7,1348(sp)
    788c:	00072b40 	call	72b4 <__sprint_r>
    7890:	d9c15117 	ldw	r7,1348(sp)
    7894:	1000551e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7898:	843ffc04 	addi	r16,r16,-16
    789c:	dc800e17 	ldw	r18,56(sp)
    78a0:	dc400d17 	ldw	r17,52(sp)
    78a4:	dd401904 	addi	r21,sp,100
    78a8:	9c3fed16 	blt	r19,r16,7860 <___vfprintf_internal_r+0x554>
    78ac:	9425883a 	add	r18,r18,r16
    78b0:	8c400044 	addi	r17,r17,1
    78b4:	008001c4 	movi	r2,7
    78b8:	af000015 	stw	fp,0(r21)
    78bc:	ac000115 	stw	r16,4(r21)
    78c0:	dc800e15 	stw	r18,56(sp)
    78c4:	dc400d15 	stw	r17,52(sp)
    78c8:	14418216 	blt	r2,r17,7ed4 <___vfprintf_internal_r+0xbc8>
    78cc:	ad400204 	addi	r21,r21,8
    78d0:	d9014c17 	ldw	r4,1328(sp)
    78d4:	2080400c 	andi	r2,r4,256
    78d8:	10004a1e 	bne	r2,zero,7a04 <___vfprintf_internal_r+0x6f8>
    78dc:	d9414117 	ldw	r5,1284(sp)
    78e0:	91e5883a 	add	r18,r18,r7
    78e4:	8c400044 	addi	r17,r17,1
    78e8:	008001c4 	movi	r2,7
    78ec:	a9400015 	stw	r5,0(r21)
    78f0:	a9c00115 	stw	r7,4(r21)
    78f4:	dc800e15 	stw	r18,56(sp)
    78f8:	dc400d15 	stw	r17,52(sp)
    78fc:	14416716 	blt	r2,r17,7e9c <___vfprintf_internal_r+0xb90>
    7900:	a8c00204 	addi	r3,r21,8
    7904:	d9814c17 	ldw	r6,1328(sp)
    7908:	3080010c 	andi	r2,r6,4
    790c:	10002826 	beq	r2,zero,79b0 <___vfprintf_internal_r+0x6a4>
    7910:	d8814a17 	ldw	r2,1320(sp)
    7914:	d9014517 	ldw	r4,1300(sp)
    7918:	1121c83a 	sub	r16,r2,r4
    791c:	0400240e 	bge	zero,r16,79b0 <___vfprintf_internal_r+0x6a4>
    7920:	00800404 	movi	r2,16
    7924:	14044f0e 	bge	r2,r16,8a64 <___vfprintf_internal_r+0x1758>
    7928:	dc400d17 	ldw	r17,52(sp)
    792c:	1027883a 	mov	r19,r2
    7930:	07000074 	movhi	fp,1
    7934:	e7082b84 	addi	fp,fp,8366
    7938:	050001c4 	movi	r20,7
    793c:	00000306 	br	794c <___vfprintf_internal_r+0x640>
    7940:	843ffc04 	addi	r16,r16,-16
    7944:	18c00204 	addi	r3,r3,8
    7948:	9c00110e 	bge	r19,r16,7990 <___vfprintf_internal_r+0x684>
    794c:	94800404 	addi	r18,r18,16
    7950:	8c400044 	addi	r17,r17,1
    7954:	1f000015 	stw	fp,0(r3)
    7958:	1cc00115 	stw	r19,4(r3)
    795c:	dc800e15 	stw	r18,56(sp)
    7960:	dc400d15 	stw	r17,52(sp)
    7964:	a47ff60e 	bge	r20,r17,7940 <___vfprintf_internal_r+0x634>
    7968:	d9014f17 	ldw	r4,1340(sp)
    796c:	b00b883a 	mov	r5,r22
    7970:	d9800c04 	addi	r6,sp,48
    7974:	00072b40 	call	72b4 <__sprint_r>
    7978:	10001c1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    797c:	843ffc04 	addi	r16,r16,-16
    7980:	dc800e17 	ldw	r18,56(sp)
    7984:	dc400d17 	ldw	r17,52(sp)
    7988:	d8c01904 	addi	r3,sp,100
    798c:	9c3fef16 	blt	r19,r16,794c <___vfprintf_internal_r+0x640>
    7990:	9425883a 	add	r18,r18,r16
    7994:	8c400044 	addi	r17,r17,1
    7998:	008001c4 	movi	r2,7
    799c:	1f000015 	stw	fp,0(r3)
    79a0:	1c000115 	stw	r16,4(r3)
    79a4:	dc800e15 	stw	r18,56(sp)
    79a8:	dc400d15 	stw	r17,52(sp)
    79ac:	1440cb16 	blt	r2,r17,7cdc <___vfprintf_internal_r+0x9d0>
    79b0:	d8814a17 	ldw	r2,1320(sp)
    79b4:	d9414517 	ldw	r5,1300(sp)
    79b8:	1140010e 	bge	r2,r5,79c0 <___vfprintf_internal_r+0x6b4>
    79bc:	2805883a 	mov	r2,r5
    79c0:	d9814b17 	ldw	r6,1324(sp)
    79c4:	308d883a 	add	r6,r6,r2
    79c8:	d9814b15 	stw	r6,1324(sp)
    79cc:	90013b1e 	bne	r18,zero,7ebc <___vfprintf_internal_r+0xbb0>
    79d0:	d9c14017 	ldw	r7,1280(sp)
    79d4:	dd401904 	addi	r21,sp,100
    79d8:	d8000d15 	stw	zero,52(sp)
    79dc:	003ea706 	br	747c <___vfprintf_internal_r+0x170>
    79e0:	d8800e17 	ldw	r2,56(sp)
    79e4:	10053f1e 	bne	r2,zero,8ee4 <___vfprintf_internal_r+0x1bd8>
    79e8:	d8000d15 	stw	zero,52(sp)
    79ec:	b080030b 	ldhu	r2,12(r22)
    79f0:	1080100c 	andi	r2,r2,64
    79f4:	103e8726 	beq	r2,zero,7414 <___vfprintf_internal_r+0x108>
    79f8:	00bfffc4 	movi	r2,-1
    79fc:	d8814b15 	stw	r2,1324(sp)
    7a00:	003e8406 	br	7414 <___vfprintf_internal_r+0x108>
    7a04:	d9814d17 	ldw	r6,1332(sp)
    7a08:	00801944 	movi	r2,101
    7a0c:	11806e16 	blt	r2,r6,7bc8 <___vfprintf_internal_r+0x8bc>
    7a10:	d9414717 	ldw	r5,1308(sp)
    7a14:	00c00044 	movi	r3,1
    7a18:	1943430e 	bge	r3,r5,8728 <___vfprintf_internal_r+0x141c>
    7a1c:	d8814117 	ldw	r2,1284(sp)
    7a20:	94800044 	addi	r18,r18,1
    7a24:	8c400044 	addi	r17,r17,1
    7a28:	a8800015 	stw	r2,0(r21)
    7a2c:	008001c4 	movi	r2,7
    7a30:	a8c00115 	stw	r3,4(r21)
    7a34:	dc800e15 	stw	r18,56(sp)
    7a38:	dc400d15 	stw	r17,52(sp)
    7a3c:	1441ca16 	blt	r2,r17,8168 <___vfprintf_internal_r+0xe5c>
    7a40:	a8c00204 	addi	r3,r21,8
    7a44:	d9014917 	ldw	r4,1316(sp)
    7a48:	00800044 	movi	r2,1
    7a4c:	94800044 	addi	r18,r18,1
    7a50:	8c400044 	addi	r17,r17,1
    7a54:	18800115 	stw	r2,4(r3)
    7a58:	008001c4 	movi	r2,7
    7a5c:	19000015 	stw	r4,0(r3)
    7a60:	dc800e15 	stw	r18,56(sp)
    7a64:	dc400d15 	stw	r17,52(sp)
    7a68:	1441b616 	blt	r2,r17,8144 <___vfprintf_internal_r+0xe38>
    7a6c:	1cc00204 	addi	r19,r3,8
    7a70:	d9014217 	ldw	r4,1288(sp)
    7a74:	d9414317 	ldw	r5,1292(sp)
    7a78:	000d883a 	mov	r6,zero
    7a7c:	000f883a 	mov	r7,zero
    7a80:	000e2100 	call	e210 <__nedf2>
    7a84:	10017426 	beq	r2,zero,8058 <___vfprintf_internal_r+0xd4c>
    7a88:	d9414717 	ldw	r5,1308(sp)
    7a8c:	d9814117 	ldw	r6,1284(sp)
    7a90:	8c400044 	addi	r17,r17,1
    7a94:	2c85883a 	add	r2,r5,r18
    7a98:	14bfffc4 	addi	r18,r2,-1
    7a9c:	28bfffc4 	addi	r2,r5,-1
    7aa0:	30c00044 	addi	r3,r6,1
    7aa4:	98800115 	stw	r2,4(r19)
    7aa8:	008001c4 	movi	r2,7
    7aac:	98c00015 	stw	r3,0(r19)
    7ab0:	dc800e15 	stw	r18,56(sp)
    7ab4:	dc400d15 	stw	r17,52(sp)
    7ab8:	14418e16 	blt	r2,r17,80f4 <___vfprintf_internal_r+0xde8>
    7abc:	9cc00204 	addi	r19,r19,8
    7ac0:	d9414817 	ldw	r5,1312(sp)
    7ac4:	d8800804 	addi	r2,sp,32
    7ac8:	8c400044 	addi	r17,r17,1
    7acc:	9165883a 	add	r18,r18,r5
    7ad0:	98800015 	stw	r2,0(r19)
    7ad4:	008001c4 	movi	r2,7
    7ad8:	99400115 	stw	r5,4(r19)
    7adc:	dc800e15 	stw	r18,56(sp)
    7ae0:	dc400d15 	stw	r17,52(sp)
    7ae4:	1440ed16 	blt	r2,r17,7e9c <___vfprintf_internal_r+0xb90>
    7ae8:	98c00204 	addi	r3,r19,8
    7aec:	003f8506 	br	7904 <___vfprintf_internal_r+0x5f8>
    7af0:	d9814a17 	ldw	r6,1320(sp)
    7af4:	d8814517 	ldw	r2,1300(sp)
    7af8:	30a1c83a 	sub	r16,r6,r2
    7afc:	043f4b0e 	bge	zero,r16,782c <___vfprintf_internal_r+0x520>
    7b00:	00800404 	movi	r2,16
    7b04:	1404340e 	bge	r2,r16,8bd8 <___vfprintf_internal_r+0x18cc>
    7b08:	1027883a 	mov	r19,r2
    7b0c:	07000074 	movhi	fp,1
    7b10:	e7082784 	addi	fp,fp,8350
    7b14:	050001c4 	movi	r20,7
    7b18:	00000306 	br	7b28 <___vfprintf_internal_r+0x81c>
    7b1c:	843ffc04 	addi	r16,r16,-16
    7b20:	ad400204 	addi	r21,r21,8
    7b24:	9c00130e 	bge	r19,r16,7b74 <___vfprintf_internal_r+0x868>
    7b28:	94800404 	addi	r18,r18,16
    7b2c:	8c400044 	addi	r17,r17,1
    7b30:	af000015 	stw	fp,0(r21)
    7b34:	acc00115 	stw	r19,4(r21)
    7b38:	dc800e15 	stw	r18,56(sp)
    7b3c:	dc400d15 	stw	r17,52(sp)
    7b40:	a47ff60e 	bge	r20,r17,7b1c <___vfprintf_internal_r+0x810>
    7b44:	d9014f17 	ldw	r4,1340(sp)
    7b48:	b00b883a 	mov	r5,r22
    7b4c:	d9800c04 	addi	r6,sp,48
    7b50:	d9c15115 	stw	r7,1348(sp)
    7b54:	00072b40 	call	72b4 <__sprint_r>
    7b58:	d9c15117 	ldw	r7,1348(sp)
    7b5c:	103fa31e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7b60:	843ffc04 	addi	r16,r16,-16
    7b64:	dc800e17 	ldw	r18,56(sp)
    7b68:	dc400d17 	ldw	r17,52(sp)
    7b6c:	dd401904 	addi	r21,sp,100
    7b70:	9c3fed16 	blt	r19,r16,7b28 <___vfprintf_internal_r+0x81c>
    7b74:	9425883a 	add	r18,r18,r16
    7b78:	8c400044 	addi	r17,r17,1
    7b7c:	008001c4 	movi	r2,7
    7b80:	af000015 	stw	fp,0(r21)
    7b84:	ac000115 	stw	r16,4(r21)
    7b88:	dc800e15 	stw	r18,56(sp)
    7b8c:	dc400d15 	stw	r17,52(sp)
    7b90:	14416116 	blt	r2,r17,8118 <___vfprintf_internal_r+0xe0c>
    7b94:	ad400204 	addi	r21,r21,8
    7b98:	003f2406 	br	782c <___vfprintf_internal_r+0x520>
    7b9c:	d9014f17 	ldw	r4,1340(sp)
    7ba0:	00006600 	call	660 <__sinit>
    7ba4:	d9c15117 	ldw	r7,1348(sp)
    7ba8:	003def06 	br	7368 <___vfprintf_internal_r+0x5c>
    7bac:	d9014f17 	ldw	r4,1340(sp)
    7bb0:	b00b883a 	mov	r5,r22
    7bb4:	d9c15115 	stw	r7,1348(sp)
    7bb8:	00091dc0 	call	91dc <__swsetup_r>
    7bbc:	d9c15117 	ldw	r7,1348(sp)
    7bc0:	103dee26 	beq	r2,zero,737c <___vfprintf_internal_r+0x70>
    7bc4:	003f8c06 	br	79f8 <___vfprintf_internal_r+0x6ec>
    7bc8:	d9014217 	ldw	r4,1288(sp)
    7bcc:	d9414317 	ldw	r5,1292(sp)
    7bd0:	000d883a 	mov	r6,zero
    7bd4:	000f883a 	mov	r7,zero
    7bd8:	000e1880 	call	e188 <__eqdf2>
    7bdc:	1000f21e 	bne	r2,zero,7fa8 <___vfprintf_internal_r+0xc9c>
    7be0:	00800074 	movhi	r2,1
    7be4:	10882704 	addi	r2,r2,8348
    7be8:	94800044 	addi	r18,r18,1
    7bec:	8c400044 	addi	r17,r17,1
    7bf0:	a8800015 	stw	r2,0(r21)
    7bf4:	00c00044 	movi	r3,1
    7bf8:	008001c4 	movi	r2,7
    7bfc:	a8c00115 	stw	r3,4(r21)
    7c00:	dc800e15 	stw	r18,56(sp)
    7c04:	dc400d15 	stw	r17,52(sp)
    7c08:	1442fa16 	blt	r2,r17,87f4 <___vfprintf_internal_r+0x14e8>
    7c0c:	a8c00204 	addi	r3,r21,8
    7c10:	d8800517 	ldw	r2,20(sp)
    7c14:	d9014717 	ldw	r4,1308(sp)
    7c18:	11015c0e 	bge	r2,r4,818c <___vfprintf_internal_r+0xe80>
    7c1c:	dc400d17 	ldw	r17,52(sp)
    7c20:	d9814917 	ldw	r6,1316(sp)
    7c24:	00800044 	movi	r2,1
    7c28:	94800044 	addi	r18,r18,1
    7c2c:	8c400044 	addi	r17,r17,1
    7c30:	18800115 	stw	r2,4(r3)
    7c34:	008001c4 	movi	r2,7
    7c38:	19800015 	stw	r6,0(r3)
    7c3c:	dc800e15 	stw	r18,56(sp)
    7c40:	dc400d15 	stw	r17,52(sp)
    7c44:	14431016 	blt	r2,r17,8888 <___vfprintf_internal_r+0x157c>
    7c48:	18c00204 	addi	r3,r3,8
    7c4c:	d8814717 	ldw	r2,1308(sp)
    7c50:	143fffc4 	addi	r16,r2,-1
    7c54:	043f2b0e 	bge	zero,r16,7904 <___vfprintf_internal_r+0x5f8>
    7c58:	00800404 	movi	r2,16
    7c5c:	1402a20e 	bge	r2,r16,86e8 <___vfprintf_internal_r+0x13dc>
    7c60:	dc400d17 	ldw	r17,52(sp)
    7c64:	1027883a 	mov	r19,r2
    7c68:	07000074 	movhi	fp,1
    7c6c:	e7082784 	addi	fp,fp,8350
    7c70:	050001c4 	movi	r20,7
    7c74:	00000306 	br	7c84 <___vfprintf_internal_r+0x978>
    7c78:	18c00204 	addi	r3,r3,8
    7c7c:	843ffc04 	addi	r16,r16,-16
    7c80:	9c029c0e 	bge	r19,r16,86f4 <___vfprintf_internal_r+0x13e8>
    7c84:	94800404 	addi	r18,r18,16
    7c88:	8c400044 	addi	r17,r17,1
    7c8c:	1f000015 	stw	fp,0(r3)
    7c90:	1cc00115 	stw	r19,4(r3)
    7c94:	dc800e15 	stw	r18,56(sp)
    7c98:	dc400d15 	stw	r17,52(sp)
    7c9c:	a47ff60e 	bge	r20,r17,7c78 <___vfprintf_internal_r+0x96c>
    7ca0:	d9014f17 	ldw	r4,1340(sp)
    7ca4:	b00b883a 	mov	r5,r22
    7ca8:	d9800c04 	addi	r6,sp,48
    7cac:	00072b40 	call	72b4 <__sprint_r>
    7cb0:	103f4e1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7cb4:	dc800e17 	ldw	r18,56(sp)
    7cb8:	dc400d17 	ldw	r17,52(sp)
    7cbc:	d8c01904 	addi	r3,sp,100
    7cc0:	003fee06 	br	7c7c <___vfprintf_internal_r+0x970>
    7cc4:	d8802c0b 	ldhu	r2,176(sp)
    7cc8:	00ffffc4 	movi	r3,-1
    7ccc:	d8c14b15 	stw	r3,1324(sp)
    7cd0:	1080100c 	andi	r2,r2,64
    7cd4:	103dcc1e 	bne	r2,zero,7408 <___vfprintf_internal_r+0xfc>
    7cd8:	003dce06 	br	7414 <___vfprintf_internal_r+0x108>
    7cdc:	d9014f17 	ldw	r4,1340(sp)
    7ce0:	b00b883a 	mov	r5,r22
    7ce4:	d9800c04 	addi	r6,sp,48
    7ce8:	00072b40 	call	72b4 <__sprint_r>
    7cec:	103f3f1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7cf0:	dc800e17 	ldw	r18,56(sp)
    7cf4:	003f2e06 	br	79b0 <___vfprintf_internal_r+0x6a4>
    7cf8:	d9414c17 	ldw	r5,1328(sp)
    7cfc:	29400414 	ori	r5,r5,16
    7d00:	d9414c15 	stw	r5,1328(sp)
    7d04:	d9814c17 	ldw	r6,1328(sp)
    7d08:	3080080c 	andi	r2,r6,32
    7d0c:	10014f1e 	bne	r2,zero,824c <___vfprintf_internal_r+0xf40>
    7d10:	d8c14c17 	ldw	r3,1328(sp)
    7d14:	1880040c 	andi	r2,r3,16
    7d18:	1002ea1e 	bne	r2,zero,88c4 <___vfprintf_internal_r+0x15b8>
    7d1c:	d9014c17 	ldw	r4,1328(sp)
    7d20:	2080100c 	andi	r2,r4,64
    7d24:	1002e726 	beq	r2,zero,88c4 <___vfprintf_internal_r+0x15b8>
    7d28:	3880000f 	ldh	r2,0(r7)
    7d2c:	39c00104 	addi	r7,r7,4
    7d30:	d9c14015 	stw	r7,1280(sp)
    7d34:	1023d7fa 	srai	r17,r2,31
    7d38:	1021883a 	mov	r16,r2
    7d3c:	88037216 	blt	r17,zero,8b08 <___vfprintf_internal_r+0x17fc>
    7d40:	01000044 	movi	r4,1
    7d44:	98000416 	blt	r19,zero,7d58 <___vfprintf_internal_r+0xa4c>
    7d48:	d8c14c17 	ldw	r3,1328(sp)
    7d4c:	00bfdfc4 	movi	r2,-129
    7d50:	1886703a 	and	r3,r3,r2
    7d54:	d8c14c15 	stw	r3,1328(sp)
    7d58:	8444b03a 	or	r2,r16,r17
    7d5c:	1002261e 	bne	r2,zero,85f8 <___vfprintf_internal_r+0x12ec>
    7d60:	9802251e 	bne	r19,zero,85f8 <___vfprintf_internal_r+0x12ec>
    7d64:	20803fcc 	andi	r2,r4,255
    7d68:	10029b26 	beq	r2,zero,87d8 <___vfprintf_internal_r+0x14cc>
    7d6c:	d8c01904 	addi	r3,sp,100
    7d70:	dd000f04 	addi	r20,sp,60
    7d74:	d8c14115 	stw	r3,1284(sp)
    7d78:	d8c14117 	ldw	r3,1284(sp)
    7d7c:	dcc14515 	stw	r19,1300(sp)
    7d80:	a0c5c83a 	sub	r2,r20,r3
    7d84:	11c00a04 	addi	r7,r2,40
    7d88:	99c0010e 	bge	r19,r7,7d90 <___vfprintf_internal_r+0xa84>
    7d8c:	d9c14515 	stw	r7,1300(sp)
    7d90:	dcc14615 	stw	r19,1304(sp)
    7d94:	d8800407 	ldb	r2,16(sp)
    7d98:	103e4c26 	beq	r2,zero,76cc <___vfprintf_internal_r+0x3c0>
    7d9c:	d8814517 	ldw	r2,1300(sp)
    7da0:	10800044 	addi	r2,r2,1
    7da4:	d8814515 	stw	r2,1300(sp)
    7da8:	003e4806 	br	76cc <___vfprintf_internal_r+0x3c0>
    7dac:	d9814c17 	ldw	r6,1328(sp)
    7db0:	31800414 	ori	r6,r6,16
    7db4:	d9814c15 	stw	r6,1328(sp)
    7db8:	d8c14c17 	ldw	r3,1328(sp)
    7dbc:	1880080c 	andi	r2,r3,32
    7dc0:	1001271e 	bne	r2,zero,8260 <___vfprintf_internal_r+0xf54>
    7dc4:	d9414c17 	ldw	r5,1328(sp)
    7dc8:	2880040c 	andi	r2,r5,16
    7dcc:	1002b61e 	bne	r2,zero,88a8 <___vfprintf_internal_r+0x159c>
    7dd0:	d9814c17 	ldw	r6,1328(sp)
    7dd4:	3080100c 	andi	r2,r6,64
    7dd8:	1002b326 	beq	r2,zero,88a8 <___vfprintf_internal_r+0x159c>
    7ddc:	3c00000b 	ldhu	r16,0(r7)
    7de0:	0009883a 	mov	r4,zero
    7de4:	39c00104 	addi	r7,r7,4
    7de8:	0023883a 	mov	r17,zero
    7dec:	d9c14015 	stw	r7,1280(sp)
    7df0:	d8000405 	stb	zero,16(sp)
    7df4:	003fd306 	br	7d44 <___vfprintf_internal_r+0xa38>
    7df8:	d9014c17 	ldw	r4,1328(sp)
    7dfc:	21000414 	ori	r4,r4,16
    7e00:	d9014c15 	stw	r4,1328(sp)
    7e04:	d9414c17 	ldw	r5,1328(sp)
    7e08:	2880080c 	andi	r2,r5,32
    7e0c:	1001081e 	bne	r2,zero,8230 <___vfprintf_internal_r+0xf24>
    7e10:	d8c14c17 	ldw	r3,1328(sp)
    7e14:	1880040c 	andi	r2,r3,16
    7e18:	1002b01e 	bne	r2,zero,88dc <___vfprintf_internal_r+0x15d0>
    7e1c:	d9014c17 	ldw	r4,1328(sp)
    7e20:	2080100c 	andi	r2,r4,64
    7e24:	1002ad26 	beq	r2,zero,88dc <___vfprintf_internal_r+0x15d0>
    7e28:	3c00000b 	ldhu	r16,0(r7)
    7e2c:	01000044 	movi	r4,1
    7e30:	39c00104 	addi	r7,r7,4
    7e34:	0023883a 	mov	r17,zero
    7e38:	d9c14015 	stw	r7,1280(sp)
    7e3c:	d8000405 	stb	zero,16(sp)
    7e40:	003fc006 	br	7d44 <___vfprintf_internal_r+0xa38>
    7e44:	d9014f17 	ldw	r4,1340(sp)
    7e48:	b00b883a 	mov	r5,r22
    7e4c:	d9800c04 	addi	r6,sp,48
    7e50:	00072b40 	call	72b4 <__sprint_r>
    7e54:	103ee51e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7e58:	dc800e17 	ldw	r18,56(sp)
    7e5c:	d8c01904 	addi	r3,sp,100
    7e60:	d9814c17 	ldw	r6,1328(sp)
    7e64:	3080004c 	andi	r2,r6,1
    7e68:	1005003a 	cmpeq	r2,r2,zero
    7e6c:	103ea51e 	bne	r2,zero,7904 <___vfprintf_internal_r+0x5f8>
    7e70:	00800044 	movi	r2,1
    7e74:	dc400d17 	ldw	r17,52(sp)
    7e78:	18800115 	stw	r2,4(r3)
    7e7c:	d8814917 	ldw	r2,1316(sp)
    7e80:	94800044 	addi	r18,r18,1
    7e84:	8c400044 	addi	r17,r17,1
    7e88:	18800015 	stw	r2,0(r3)
    7e8c:	008001c4 	movi	r2,7
    7e90:	dc800e15 	stw	r18,56(sp)
    7e94:	dc400d15 	stw	r17,52(sp)
    7e98:	14421e0e 	bge	r2,r17,8714 <___vfprintf_internal_r+0x1408>
    7e9c:	d9014f17 	ldw	r4,1340(sp)
    7ea0:	b00b883a 	mov	r5,r22
    7ea4:	d9800c04 	addi	r6,sp,48
    7ea8:	00072b40 	call	72b4 <__sprint_r>
    7eac:	103ecf1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7eb0:	dc800e17 	ldw	r18,56(sp)
    7eb4:	d8c01904 	addi	r3,sp,100
    7eb8:	003e9206 	br	7904 <___vfprintf_internal_r+0x5f8>
    7ebc:	d9014f17 	ldw	r4,1340(sp)
    7ec0:	b00b883a 	mov	r5,r22
    7ec4:	d9800c04 	addi	r6,sp,48
    7ec8:	00072b40 	call	72b4 <__sprint_r>
    7ecc:	103ec026 	beq	r2,zero,79d0 <___vfprintf_internal_r+0x6c4>
    7ed0:	003ec606 	br	79ec <___vfprintf_internal_r+0x6e0>
    7ed4:	d9014f17 	ldw	r4,1340(sp)
    7ed8:	b00b883a 	mov	r5,r22
    7edc:	d9800c04 	addi	r6,sp,48
    7ee0:	d9c15115 	stw	r7,1348(sp)
    7ee4:	00072b40 	call	72b4 <__sprint_r>
    7ee8:	d9c15117 	ldw	r7,1348(sp)
    7eec:	103ebf1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7ef0:	dc800e17 	ldw	r18,56(sp)
    7ef4:	dc400d17 	ldw	r17,52(sp)
    7ef8:	dd401904 	addi	r21,sp,100
    7efc:	003e7406 	br	78d0 <___vfprintf_internal_r+0x5c4>
    7f00:	d9014f17 	ldw	r4,1340(sp)
    7f04:	b00b883a 	mov	r5,r22
    7f08:	d9800c04 	addi	r6,sp,48
    7f0c:	d9c15115 	stw	r7,1348(sp)
    7f10:	00072b40 	call	72b4 <__sprint_r>
    7f14:	d9c15117 	ldw	r7,1348(sp)
    7f18:	103eb41e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7f1c:	dd401904 	addi	r21,sp,100
    7f20:	003d6d06 	br	74d8 <___vfprintf_internal_r+0x1cc>
    7f24:	d9014f17 	ldw	r4,1340(sp)
    7f28:	b00b883a 	mov	r5,r22
    7f2c:	d9800c04 	addi	r6,sp,48
    7f30:	d9c15115 	stw	r7,1348(sp)
    7f34:	00072b40 	call	72b4 <__sprint_r>
    7f38:	d9c15117 	ldw	r7,1348(sp)
    7f3c:	103eab1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7f40:	dc800e17 	ldw	r18,56(sp)
    7f44:	dc400d17 	ldw	r17,52(sp)
    7f48:	dd401904 	addi	r21,sp,100
    7f4c:	003e3406 	br	7820 <___vfprintf_internal_r+0x514>
    7f50:	d9014f17 	ldw	r4,1340(sp)
    7f54:	b00b883a 	mov	r5,r22
    7f58:	d9800c04 	addi	r6,sp,48
    7f5c:	d9c15115 	stw	r7,1348(sp)
    7f60:	00072b40 	call	72b4 <__sprint_r>
    7f64:	d9c15117 	ldw	r7,1348(sp)
    7f68:	103ea01e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7f6c:	dc800e17 	ldw	r18,56(sp)
    7f70:	dc400d17 	ldw	r17,52(sp)
    7f74:	dd401904 	addi	r21,sp,100
    7f78:	003e1c06 	br	77ec <___vfprintf_internal_r+0x4e0>
    7f7c:	d9014f17 	ldw	r4,1340(sp)
    7f80:	b00b883a 	mov	r5,r22
    7f84:	d9800c04 	addi	r6,sp,48
    7f88:	d9c15115 	stw	r7,1348(sp)
    7f8c:	00072b40 	call	72b4 <__sprint_r>
    7f90:	d9c15117 	ldw	r7,1348(sp)
    7f94:	103e951e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    7f98:	dc800e17 	ldw	r18,56(sp)
    7f9c:	dc400d17 	ldw	r17,52(sp)
    7fa0:	dd401904 	addi	r21,sp,100
    7fa4:	003e0406 	br	77b8 <___vfprintf_internal_r+0x4ac>
    7fa8:	d9000517 	ldw	r4,20(sp)
    7fac:	0102520e 	bge	zero,r4,88f8 <___vfprintf_internal_r+0x15ec>
    7fb0:	d9814717 	ldw	r6,1308(sp)
    7fb4:	21807a16 	blt	r4,r6,81a0 <___vfprintf_internal_r+0xe94>
    7fb8:	d8814117 	ldw	r2,1284(sp)
    7fbc:	91a5883a 	add	r18,r18,r6
    7fc0:	8c400044 	addi	r17,r17,1
    7fc4:	a8800015 	stw	r2,0(r21)
    7fc8:	008001c4 	movi	r2,7
    7fcc:	a9800115 	stw	r6,4(r21)
    7fd0:	dc800e15 	stw	r18,56(sp)
    7fd4:	dc400d15 	stw	r17,52(sp)
    7fd8:	1442f616 	blt	r2,r17,8bb4 <___vfprintf_internal_r+0x18a8>
    7fdc:	a8c00204 	addi	r3,r21,8
    7fe0:	d9414717 	ldw	r5,1308(sp)
    7fe4:	2161c83a 	sub	r16,r4,r5
    7fe8:	043f9d0e 	bge	zero,r16,7e60 <___vfprintf_internal_r+0xb54>
    7fec:	00800404 	movi	r2,16
    7ff0:	1402130e 	bge	r2,r16,8840 <___vfprintf_internal_r+0x1534>
    7ff4:	dc400d17 	ldw	r17,52(sp)
    7ff8:	1027883a 	mov	r19,r2
    7ffc:	07000074 	movhi	fp,1
    8000:	e7082784 	addi	fp,fp,8350
    8004:	050001c4 	movi	r20,7
    8008:	00000306 	br	8018 <___vfprintf_internal_r+0xd0c>
    800c:	18c00204 	addi	r3,r3,8
    8010:	843ffc04 	addi	r16,r16,-16
    8014:	9c020d0e 	bge	r19,r16,884c <___vfprintf_internal_r+0x1540>
    8018:	94800404 	addi	r18,r18,16
    801c:	8c400044 	addi	r17,r17,1
    8020:	1f000015 	stw	fp,0(r3)
    8024:	1cc00115 	stw	r19,4(r3)
    8028:	dc800e15 	stw	r18,56(sp)
    802c:	dc400d15 	stw	r17,52(sp)
    8030:	a47ff60e 	bge	r20,r17,800c <___vfprintf_internal_r+0xd00>
    8034:	d9014f17 	ldw	r4,1340(sp)
    8038:	b00b883a 	mov	r5,r22
    803c:	d9800c04 	addi	r6,sp,48
    8040:	00072b40 	call	72b4 <__sprint_r>
    8044:	103e691e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8048:	dc800e17 	ldw	r18,56(sp)
    804c:	dc400d17 	ldw	r17,52(sp)
    8050:	d8c01904 	addi	r3,sp,100
    8054:	003fee06 	br	8010 <___vfprintf_internal_r+0xd04>
    8058:	d8814717 	ldw	r2,1308(sp)
    805c:	143fffc4 	addi	r16,r2,-1
    8060:	043e970e 	bge	zero,r16,7ac0 <___vfprintf_internal_r+0x7b4>
    8064:	00800404 	movi	r2,16
    8068:	1400180e 	bge	r2,r16,80cc <___vfprintf_internal_r+0xdc0>
    806c:	1029883a 	mov	r20,r2
    8070:	07000074 	movhi	fp,1
    8074:	e7082784 	addi	fp,fp,8350
    8078:	054001c4 	movi	r21,7
    807c:	00000306 	br	808c <___vfprintf_internal_r+0xd80>
    8080:	9cc00204 	addi	r19,r19,8
    8084:	843ffc04 	addi	r16,r16,-16
    8088:	a400120e 	bge	r20,r16,80d4 <___vfprintf_internal_r+0xdc8>
    808c:	94800404 	addi	r18,r18,16
    8090:	8c400044 	addi	r17,r17,1
    8094:	9f000015 	stw	fp,0(r19)
    8098:	9d000115 	stw	r20,4(r19)
    809c:	dc800e15 	stw	r18,56(sp)
    80a0:	dc400d15 	stw	r17,52(sp)
    80a4:	ac7ff60e 	bge	r21,r17,8080 <___vfprintf_internal_r+0xd74>
    80a8:	d9014f17 	ldw	r4,1340(sp)
    80ac:	b00b883a 	mov	r5,r22
    80b0:	d9800c04 	addi	r6,sp,48
    80b4:	00072b40 	call	72b4 <__sprint_r>
    80b8:	103e4c1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    80bc:	dc800e17 	ldw	r18,56(sp)
    80c0:	dc400d17 	ldw	r17,52(sp)
    80c4:	dcc01904 	addi	r19,sp,100
    80c8:	003fee06 	br	8084 <___vfprintf_internal_r+0xd78>
    80cc:	07000074 	movhi	fp,1
    80d0:	e7082784 	addi	fp,fp,8350
    80d4:	9425883a 	add	r18,r18,r16
    80d8:	8c400044 	addi	r17,r17,1
    80dc:	008001c4 	movi	r2,7
    80e0:	9f000015 	stw	fp,0(r19)
    80e4:	9c000115 	stw	r16,4(r19)
    80e8:	dc800e15 	stw	r18,56(sp)
    80ec:	dc400d15 	stw	r17,52(sp)
    80f0:	147e720e 	bge	r2,r17,7abc <___vfprintf_internal_r+0x7b0>
    80f4:	d9014f17 	ldw	r4,1340(sp)
    80f8:	b00b883a 	mov	r5,r22
    80fc:	d9800c04 	addi	r6,sp,48
    8100:	00072b40 	call	72b4 <__sprint_r>
    8104:	103e391e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8108:	dc800e17 	ldw	r18,56(sp)
    810c:	dc400d17 	ldw	r17,52(sp)
    8110:	dcc01904 	addi	r19,sp,100
    8114:	003e6a06 	br	7ac0 <___vfprintf_internal_r+0x7b4>
    8118:	d9014f17 	ldw	r4,1340(sp)
    811c:	b00b883a 	mov	r5,r22
    8120:	d9800c04 	addi	r6,sp,48
    8124:	d9c15115 	stw	r7,1348(sp)
    8128:	00072b40 	call	72b4 <__sprint_r>
    812c:	d9c15117 	ldw	r7,1348(sp)
    8130:	103e2e1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8134:	dc800e17 	ldw	r18,56(sp)
    8138:	dc400d17 	ldw	r17,52(sp)
    813c:	dd401904 	addi	r21,sp,100
    8140:	003dba06 	br	782c <___vfprintf_internal_r+0x520>
    8144:	d9014f17 	ldw	r4,1340(sp)
    8148:	b00b883a 	mov	r5,r22
    814c:	d9800c04 	addi	r6,sp,48
    8150:	00072b40 	call	72b4 <__sprint_r>
    8154:	103e251e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8158:	dc800e17 	ldw	r18,56(sp)
    815c:	dc400d17 	ldw	r17,52(sp)
    8160:	dcc01904 	addi	r19,sp,100
    8164:	003e4206 	br	7a70 <___vfprintf_internal_r+0x764>
    8168:	d9014f17 	ldw	r4,1340(sp)
    816c:	b00b883a 	mov	r5,r22
    8170:	d9800c04 	addi	r6,sp,48
    8174:	00072b40 	call	72b4 <__sprint_r>
    8178:	103e1c1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    817c:	dc800e17 	ldw	r18,56(sp)
    8180:	dc400d17 	ldw	r17,52(sp)
    8184:	d8c01904 	addi	r3,sp,100
    8188:	003e2e06 	br	7a44 <___vfprintf_internal_r+0x738>
    818c:	d9414c17 	ldw	r5,1328(sp)
    8190:	2880004c 	andi	r2,r5,1
    8194:	1005003a 	cmpeq	r2,r2,zero
    8198:	103dda1e 	bne	r2,zero,7904 <___vfprintf_internal_r+0x5f8>
    819c:	003e9f06 	br	7c1c <___vfprintf_internal_r+0x910>
    81a0:	d8c14117 	ldw	r3,1284(sp)
    81a4:	9125883a 	add	r18,r18,r4
    81a8:	8c400044 	addi	r17,r17,1
    81ac:	008001c4 	movi	r2,7
    81b0:	a8c00015 	stw	r3,0(r21)
    81b4:	a9000115 	stw	r4,4(r21)
    81b8:	dc800e15 	stw	r18,56(sp)
    81bc:	dc400d15 	stw	r17,52(sp)
    81c0:	14426616 	blt	r2,r17,8b5c <___vfprintf_internal_r+0x1850>
    81c4:	a8c00204 	addi	r3,r21,8
    81c8:	d9414917 	ldw	r5,1316(sp)
    81cc:	00800044 	movi	r2,1
    81d0:	94800044 	addi	r18,r18,1
    81d4:	8c400044 	addi	r17,r17,1
    81d8:	18800115 	stw	r2,4(r3)
    81dc:	008001c4 	movi	r2,7
    81e0:	19400015 	stw	r5,0(r3)
    81e4:	dc800e15 	stw	r18,56(sp)
    81e8:	dc400d15 	stw	r17,52(sp)
    81ec:	2021883a 	mov	r16,r4
    81f0:	14425016 	blt	r2,r17,8b34 <___vfprintf_internal_r+0x1828>
    81f4:	19400204 	addi	r5,r3,8
    81f8:	d9814717 	ldw	r6,1308(sp)
    81fc:	8c400044 	addi	r17,r17,1
    8200:	dc400d15 	stw	r17,52(sp)
    8204:	3107c83a 	sub	r3,r6,r4
    8208:	d9014117 	ldw	r4,1284(sp)
    820c:	90e5883a 	add	r18,r18,r3
    8210:	28c00115 	stw	r3,4(r5)
    8214:	8105883a 	add	r2,r16,r4
    8218:	28800015 	stw	r2,0(r5)
    821c:	008001c4 	movi	r2,7
    8220:	dc800e15 	stw	r18,56(sp)
    8224:	147f1d16 	blt	r2,r17,7e9c <___vfprintf_internal_r+0xb90>
    8228:	28c00204 	addi	r3,r5,8
    822c:	003db506 	br	7904 <___vfprintf_internal_r+0x5f8>
    8230:	3c000017 	ldw	r16,0(r7)
    8234:	3c400117 	ldw	r17,4(r7)
    8238:	39800204 	addi	r6,r7,8
    823c:	01000044 	movi	r4,1
    8240:	d9814015 	stw	r6,1280(sp)
    8244:	d8000405 	stb	zero,16(sp)
    8248:	003ebe06 	br	7d44 <___vfprintf_internal_r+0xa38>
    824c:	3c000017 	ldw	r16,0(r7)
    8250:	3c400117 	ldw	r17,4(r7)
    8254:	38800204 	addi	r2,r7,8
    8258:	d8814015 	stw	r2,1280(sp)
    825c:	003eb706 	br	7d3c <___vfprintf_internal_r+0xa30>
    8260:	3c000017 	ldw	r16,0(r7)
    8264:	3c400117 	ldw	r17,4(r7)
    8268:	39000204 	addi	r4,r7,8
    826c:	d9014015 	stw	r4,1280(sp)
    8270:	0009883a 	mov	r4,zero
    8274:	d8000405 	stb	zero,16(sp)
    8278:	003eb206 	br	7d44 <___vfprintf_internal_r+0xa38>
    827c:	38c00017 	ldw	r3,0(r7)
    8280:	39c00104 	addi	r7,r7,4
    8284:	d8c14a15 	stw	r3,1320(sp)
    8288:	1800d10e 	bge	r3,zero,85d0 <___vfprintf_internal_r+0x12c4>
    828c:	00c7c83a 	sub	r3,zero,r3
    8290:	d8c14a15 	stw	r3,1320(sp)
    8294:	d9014c17 	ldw	r4,1328(sp)
    8298:	b8c00007 	ldb	r3,0(r23)
    829c:	21000114 	ori	r4,r4,4
    82a0:	d9014c15 	stw	r4,1328(sp)
    82a4:	003c9806 	br	7508 <___vfprintf_internal_r+0x1fc>
    82a8:	d9814c17 	ldw	r6,1328(sp)
    82ac:	3080080c 	andi	r2,r6,32
    82b0:	1001f026 	beq	r2,zero,8a74 <___vfprintf_internal_r+0x1768>
    82b4:	d9014b17 	ldw	r4,1324(sp)
    82b8:	38800017 	ldw	r2,0(r7)
    82bc:	39c00104 	addi	r7,r7,4
    82c0:	d9c14015 	stw	r7,1280(sp)
    82c4:	2007d7fa 	srai	r3,r4,31
    82c8:	d9c14017 	ldw	r7,1280(sp)
    82cc:	11000015 	stw	r4,0(r2)
    82d0:	10c00115 	stw	r3,4(r2)
    82d4:	003c6906 	br	747c <___vfprintf_internal_r+0x170>
    82d8:	b8c00007 	ldb	r3,0(r23)
    82dc:	00801b04 	movi	r2,108
    82e0:	18824f26 	beq	r3,r2,8c20 <___vfprintf_internal_r+0x1914>
    82e4:	d9414c17 	ldw	r5,1328(sp)
    82e8:	29400414 	ori	r5,r5,16
    82ec:	d9414c15 	stw	r5,1328(sp)
    82f0:	003c8506 	br	7508 <___vfprintf_internal_r+0x1fc>
    82f4:	d9814c17 	ldw	r6,1328(sp)
    82f8:	b8c00007 	ldb	r3,0(r23)
    82fc:	31800814 	ori	r6,r6,32
    8300:	d9814c15 	stw	r6,1328(sp)
    8304:	003c8006 	br	7508 <___vfprintf_internal_r+0x1fc>
    8308:	d8814c17 	ldw	r2,1328(sp)
    830c:	3c000017 	ldw	r16,0(r7)
    8310:	00c01e04 	movi	r3,120
    8314:	10800094 	ori	r2,r2,2
    8318:	d8814c15 	stw	r2,1328(sp)
    831c:	39c00104 	addi	r7,r7,4
    8320:	01400074 	movhi	r5,1
    8324:	29481004 	addi	r5,r5,8256
    8328:	00800c04 	movi	r2,48
    832c:	0023883a 	mov	r17,zero
    8330:	01000084 	movi	r4,2
    8334:	d9c14015 	stw	r7,1280(sp)
    8338:	d8c14d15 	stw	r3,1332(sp)
    833c:	d9414415 	stw	r5,1296(sp)
    8340:	d8800445 	stb	r2,17(sp)
    8344:	d8c00485 	stb	r3,18(sp)
    8348:	d8000405 	stb	zero,16(sp)
    834c:	003e7d06 	br	7d44 <___vfprintf_internal_r+0xa38>
    8350:	d8814c17 	ldw	r2,1328(sp)
    8354:	b8c00007 	ldb	r3,0(r23)
    8358:	10801014 	ori	r2,r2,64
    835c:	d8814c15 	stw	r2,1328(sp)
    8360:	003c6906 	br	7508 <___vfprintf_internal_r+0x1fc>
    8364:	d9414c17 	ldw	r5,1328(sp)
    8368:	2880020c 	andi	r2,r5,8
    836c:	1001df26 	beq	r2,zero,8aec <___vfprintf_internal_r+0x17e0>
    8370:	39800017 	ldw	r6,0(r7)
    8374:	38800204 	addi	r2,r7,8
    8378:	d8814015 	stw	r2,1280(sp)
    837c:	d9814215 	stw	r6,1288(sp)
    8380:	39c00117 	ldw	r7,4(r7)
    8384:	d9c14315 	stw	r7,1292(sp)
    8388:	d9014217 	ldw	r4,1288(sp)
    838c:	d9414317 	ldw	r5,1292(sp)
    8390:	000c7440 	call	c744 <__isinfd>
    8394:	10021726 	beq	r2,zero,8bf4 <___vfprintf_internal_r+0x18e8>
    8398:	d9014217 	ldw	r4,1288(sp)
    839c:	d9414317 	ldw	r5,1292(sp)
    83a0:	000d883a 	mov	r6,zero
    83a4:	000f883a 	mov	r7,zero
    83a8:	000e3a80 	call	e3a8 <__ltdf2>
    83ac:	1002ca16 	blt	r2,zero,8ed8 <___vfprintf_internal_r+0x1bcc>
    83b0:	d9414d17 	ldw	r5,1332(sp)
    83b4:	008011c4 	movi	r2,71
    83b8:	11420a16 	blt	r2,r5,8be4 <___vfprintf_internal_r+0x18d8>
    83bc:	01800074 	movhi	r6,1
    83c0:	31881504 	addi	r6,r6,8276
    83c4:	d9814115 	stw	r6,1284(sp)
    83c8:	d9014c17 	ldw	r4,1328(sp)
    83cc:	00c000c4 	movi	r3,3
    83d0:	00bfdfc4 	movi	r2,-129
    83d4:	2088703a 	and	r4,r4,r2
    83d8:	180f883a 	mov	r7,r3
    83dc:	d8c14515 	stw	r3,1300(sp)
    83e0:	d9014c15 	stw	r4,1328(sp)
    83e4:	d8014615 	stw	zero,1304(sp)
    83e8:	003e6a06 	br	7d94 <___vfprintf_internal_r+0xa88>
    83ec:	38800017 	ldw	r2,0(r7)
    83f0:	00c00044 	movi	r3,1
    83f4:	39c00104 	addi	r7,r7,4
    83f8:	d9c14015 	stw	r7,1280(sp)
    83fc:	d9000f04 	addi	r4,sp,60
    8400:	180f883a 	mov	r7,r3
    8404:	d8c14515 	stw	r3,1300(sp)
    8408:	d9014115 	stw	r4,1284(sp)
    840c:	d8800f05 	stb	r2,60(sp)
    8410:	d8000405 	stb	zero,16(sp)
    8414:	003cac06 	br	76c8 <___vfprintf_internal_r+0x3bc>
    8418:	01400074 	movhi	r5,1
    841c:	29481b04 	addi	r5,r5,8300
    8420:	d9414415 	stw	r5,1296(sp)
    8424:	d9814c17 	ldw	r6,1328(sp)
    8428:	3080080c 	andi	r2,r6,32
    842c:	1000f926 	beq	r2,zero,8814 <___vfprintf_internal_r+0x1508>
    8430:	3c000017 	ldw	r16,0(r7)
    8434:	3c400117 	ldw	r17,4(r7)
    8438:	38800204 	addi	r2,r7,8
    843c:	d8814015 	stw	r2,1280(sp)
    8440:	d9414c17 	ldw	r5,1328(sp)
    8444:	2880004c 	andi	r2,r5,1
    8448:	1005003a 	cmpeq	r2,r2,zero
    844c:	1000b31e 	bne	r2,zero,871c <___vfprintf_internal_r+0x1410>
    8450:	8444b03a 	or	r2,r16,r17
    8454:	1000b126 	beq	r2,zero,871c <___vfprintf_internal_r+0x1410>
    8458:	d9814d17 	ldw	r6,1332(sp)
    845c:	29400094 	ori	r5,r5,2
    8460:	00800c04 	movi	r2,48
    8464:	01000084 	movi	r4,2
    8468:	d9414c15 	stw	r5,1328(sp)
    846c:	d8800445 	stb	r2,17(sp)
    8470:	d9800485 	stb	r6,18(sp)
    8474:	d8000405 	stb	zero,16(sp)
    8478:	003e3206 	br	7d44 <___vfprintf_internal_r+0xa38>
    847c:	01800074 	movhi	r6,1
    8480:	31881004 	addi	r6,r6,8256
    8484:	d9814415 	stw	r6,1296(sp)
    8488:	003fe606 	br	8424 <___vfprintf_internal_r+0x1118>
    848c:	00800ac4 	movi	r2,43
    8490:	d8800405 	stb	r2,16(sp)
    8494:	b8c00007 	ldb	r3,0(r23)
    8498:	003c1b06 	br	7508 <___vfprintf_internal_r+0x1fc>
    849c:	d8814c17 	ldw	r2,1328(sp)
    84a0:	b8c00007 	ldb	r3,0(r23)
    84a4:	10800054 	ori	r2,r2,1
    84a8:	d8814c15 	stw	r2,1328(sp)
    84ac:	003c1606 	br	7508 <___vfprintf_internal_r+0x1fc>
    84b0:	d8800407 	ldb	r2,16(sp)
    84b4:	1000461e 	bne	r2,zero,85d0 <___vfprintf_internal_r+0x12c4>
    84b8:	00800804 	movi	r2,32
    84bc:	d8800405 	stb	r2,16(sp)
    84c0:	b8c00007 	ldb	r3,0(r23)
    84c4:	003c1006 	br	7508 <___vfprintf_internal_r+0x1fc>
    84c8:	d9814c17 	ldw	r6,1328(sp)
    84cc:	b8c00007 	ldb	r3,0(r23)
    84d0:	31800214 	ori	r6,r6,8
    84d4:	d9814c15 	stw	r6,1328(sp)
    84d8:	003c0b06 	br	7508 <___vfprintf_internal_r+0x1fc>
    84dc:	0007883a 	mov	r3,zero
    84e0:	01000244 	movi	r4,9
    84e4:	188002a4 	muli	r2,r3,10
    84e8:	b8c00007 	ldb	r3,0(r23)
    84ec:	d9814d17 	ldw	r6,1332(sp)
    84f0:	bdc00044 	addi	r23,r23,1
    84f4:	d8c14d15 	stw	r3,1332(sp)
    84f8:	d9414d17 	ldw	r5,1332(sp)
    84fc:	3085883a 	add	r2,r6,r2
    8500:	10fff404 	addi	r3,r2,-48
    8504:	28bff404 	addi	r2,r5,-48
    8508:	20bff62e 	bgeu	r4,r2,84e4 <___vfprintf_internal_r+0x11d8>
    850c:	d8c14a15 	stw	r3,1320(sp)
    8510:	003bff06 	br	7510 <___vfprintf_internal_r+0x204>
    8514:	d9414c17 	ldw	r5,1328(sp)
    8518:	b8c00007 	ldb	r3,0(r23)
    851c:	29402014 	ori	r5,r5,128
    8520:	d9414c15 	stw	r5,1328(sp)
    8524:	003bf806 	br	7508 <___vfprintf_internal_r+0x1fc>
    8528:	b8c00007 	ldb	r3,0(r23)
    852c:	00800a84 	movi	r2,42
    8530:	bdc00044 	addi	r23,r23,1
    8534:	18831526 	beq	r3,r2,918c <___vfprintf_internal_r+0x1e80>
    8538:	d8c14d15 	stw	r3,1332(sp)
    853c:	18bff404 	addi	r2,r3,-48
    8540:	00c00244 	movi	r3,9
    8544:	18827836 	bltu	r3,r2,8f28 <___vfprintf_internal_r+0x1c1c>
    8548:	000d883a 	mov	r6,zero
    854c:	308002a4 	muli	r2,r6,10
    8550:	b9800007 	ldb	r6,0(r23)
    8554:	d9414d17 	ldw	r5,1332(sp)
    8558:	bdc00044 	addi	r23,r23,1
    855c:	d9814d15 	stw	r6,1332(sp)
    8560:	d9014d17 	ldw	r4,1332(sp)
    8564:	1145883a 	add	r2,r2,r5
    8568:	11bff404 	addi	r6,r2,-48
    856c:	20bff404 	addi	r2,r4,-48
    8570:	18bff62e 	bgeu	r3,r2,854c <___vfprintf_internal_r+0x1240>
    8574:	3027883a 	mov	r19,r6
    8578:	303be50e 	bge	r6,zero,7510 <___vfprintf_internal_r+0x204>
    857c:	04ffffc4 	movi	r19,-1
    8580:	003be306 	br	7510 <___vfprintf_internal_r+0x204>
    8584:	d8000405 	stb	zero,16(sp)
    8588:	39800017 	ldw	r6,0(r7)
    858c:	39c00104 	addi	r7,r7,4
    8590:	d9c14015 	stw	r7,1280(sp)
    8594:	d9814115 	stw	r6,1284(sp)
    8598:	3001c926 	beq	r6,zero,8cc0 <___vfprintf_internal_r+0x19b4>
    859c:	98000e16 	blt	r19,zero,85d8 <___vfprintf_internal_r+0x12cc>
    85a0:	d9014117 	ldw	r4,1284(sp)
    85a4:	000b883a 	mov	r5,zero
    85a8:	980d883a 	mov	r6,r19
    85ac:	00011780 	call	1178 <memchr>
    85b0:	10025926 	beq	r2,zero,8f18 <___vfprintf_internal_r+0x1c0c>
    85b4:	d8c14117 	ldw	r3,1284(sp)
    85b8:	10cfc83a 	sub	r7,r2,r3
    85bc:	99c19e16 	blt	r19,r7,8c38 <___vfprintf_internal_r+0x192c>
    85c0:	d9c14515 	stw	r7,1300(sp)
    85c4:	38000916 	blt	r7,zero,85ec <___vfprintf_internal_r+0x12e0>
    85c8:	d8014615 	stw	zero,1304(sp)
    85cc:	003df106 	br	7d94 <___vfprintf_internal_r+0xa88>
    85d0:	b8c00007 	ldb	r3,0(r23)
    85d4:	003bcc06 	br	7508 <___vfprintf_internal_r+0x1fc>
    85d8:	d9014117 	ldw	r4,1284(sp)
    85dc:	00019d80 	call	19d8 <strlen>
    85e0:	d8814515 	stw	r2,1300(sp)
    85e4:	100f883a 	mov	r7,r2
    85e8:	103ff70e 	bge	r2,zero,85c8 <___vfprintf_internal_r+0x12bc>
    85ec:	d8014515 	stw	zero,1300(sp)
    85f0:	d8014615 	stw	zero,1304(sp)
    85f4:	003de706 	br	7d94 <___vfprintf_internal_r+0xa88>
    85f8:	20c03fcc 	andi	r3,r4,255
    85fc:	00800044 	movi	r2,1
    8600:	18802d26 	beq	r3,r2,86b8 <___vfprintf_internal_r+0x13ac>
    8604:	18800e36 	bltu	r3,r2,8640 <___vfprintf_internal_r+0x1334>
    8608:	00800084 	movi	r2,2
    860c:	1880fa26 	beq	r3,r2,89f8 <___vfprintf_internal_r+0x16ec>
    8610:	01000074 	movhi	r4,1
    8614:	21082004 	addi	r4,r4,8320
    8618:	00019d80 	call	19d8 <strlen>
    861c:	100f883a 	mov	r7,r2
    8620:	dcc14515 	stw	r19,1300(sp)
    8624:	9880010e 	bge	r19,r2,862c <___vfprintf_internal_r+0x1320>
    8628:	d8814515 	stw	r2,1300(sp)
    862c:	00800074 	movhi	r2,1
    8630:	10882004 	addi	r2,r2,8320
    8634:	dcc14615 	stw	r19,1304(sp)
    8638:	d8814115 	stw	r2,1284(sp)
    863c:	003dd506 	br	7d94 <___vfprintf_internal_r+0xa88>
    8640:	d9401904 	addi	r5,sp,100
    8644:	dd000f04 	addi	r20,sp,60
    8648:	d9414115 	stw	r5,1284(sp)
    864c:	880a977a 	slli	r5,r17,29
    8650:	d9814117 	ldw	r6,1284(sp)
    8654:	8004d0fa 	srli	r2,r16,3
    8658:	8806d0fa 	srli	r3,r17,3
    865c:	810001cc 	andi	r4,r16,7
    8660:	2884b03a 	or	r2,r5,r2
    8664:	31bfffc4 	addi	r6,r6,-1
    8668:	21000c04 	addi	r4,r4,48
    866c:	d9814115 	stw	r6,1284(sp)
    8670:	10cab03a 	or	r5,r2,r3
    8674:	31000005 	stb	r4,0(r6)
    8678:	1021883a 	mov	r16,r2
    867c:	1823883a 	mov	r17,r3
    8680:	283ff21e 	bne	r5,zero,864c <___vfprintf_internal_r+0x1340>
    8684:	d8c14c17 	ldw	r3,1328(sp)
    8688:	1880004c 	andi	r2,r3,1
    868c:	1005003a 	cmpeq	r2,r2,zero
    8690:	103db91e 	bne	r2,zero,7d78 <___vfprintf_internal_r+0xa6c>
    8694:	20803fcc 	andi	r2,r4,255
    8698:	1080201c 	xori	r2,r2,128
    869c:	10bfe004 	addi	r2,r2,-128
    86a0:	00c00c04 	movi	r3,48
    86a4:	10fdb426 	beq	r2,r3,7d78 <___vfprintf_internal_r+0xa6c>
    86a8:	31bfffc4 	addi	r6,r6,-1
    86ac:	d9814115 	stw	r6,1284(sp)
    86b0:	30c00005 	stb	r3,0(r6)
    86b4:	003db006 	br	7d78 <___vfprintf_internal_r+0xa6c>
    86b8:	88800068 	cmpgeui	r2,r17,1
    86bc:	10002c1e 	bne	r2,zero,8770 <___vfprintf_internal_r+0x1464>
    86c0:	8800021e 	bne	r17,zero,86cc <___vfprintf_internal_r+0x13c0>
    86c4:	00800244 	movi	r2,9
    86c8:	14002936 	bltu	r2,r16,8770 <___vfprintf_internal_r+0x1464>
    86cc:	d90018c4 	addi	r4,sp,99
    86d0:	dd000f04 	addi	r20,sp,60
    86d4:	d9014115 	stw	r4,1284(sp)
    86d8:	d9014117 	ldw	r4,1284(sp)
    86dc:	80800c04 	addi	r2,r16,48
    86e0:	20800005 	stb	r2,0(r4)
    86e4:	003da406 	br	7d78 <___vfprintf_internal_r+0xa6c>
    86e8:	dc400d17 	ldw	r17,52(sp)
    86ec:	07000074 	movhi	fp,1
    86f0:	e7082784 	addi	fp,fp,8350
    86f4:	9425883a 	add	r18,r18,r16
    86f8:	8c400044 	addi	r17,r17,1
    86fc:	008001c4 	movi	r2,7
    8700:	1f000015 	stw	fp,0(r3)
    8704:	1c000115 	stw	r16,4(r3)
    8708:	dc800e15 	stw	r18,56(sp)
    870c:	dc400d15 	stw	r17,52(sp)
    8710:	147de216 	blt	r2,r17,7e9c <___vfprintf_internal_r+0xb90>
    8714:	18c00204 	addi	r3,r3,8
    8718:	003c7a06 	br	7904 <___vfprintf_internal_r+0x5f8>
    871c:	01000084 	movi	r4,2
    8720:	d8000405 	stb	zero,16(sp)
    8724:	003d8706 	br	7d44 <___vfprintf_internal_r+0xa38>
    8728:	d9814c17 	ldw	r6,1328(sp)
    872c:	30c4703a 	and	r2,r6,r3
    8730:	1005003a 	cmpeq	r2,r2,zero
    8734:	103cb926 	beq	r2,zero,7a1c <___vfprintf_internal_r+0x710>
    8738:	d9014117 	ldw	r4,1284(sp)
    873c:	94800044 	addi	r18,r18,1
    8740:	8c400044 	addi	r17,r17,1
    8744:	008001c4 	movi	r2,7
    8748:	a9000015 	stw	r4,0(r21)
    874c:	a8c00115 	stw	r3,4(r21)
    8750:	dc800e15 	stw	r18,56(sp)
    8754:	dc400d15 	stw	r17,52(sp)
    8758:	147e6616 	blt	r2,r17,80f4 <___vfprintf_internal_r+0xde8>
    875c:	acc00204 	addi	r19,r21,8
    8760:	003cd706 	br	7ac0 <___vfprintf_internal_r+0x7b4>
    8764:	07000074 	movhi	fp,1
    8768:	e7082784 	addi	fp,fp,8350
    876c:	003c4f06 	br	78ac <___vfprintf_internal_r+0x5a0>
    8770:	dd000f04 	addi	r20,sp,60
    8774:	dc801904 	addi	r18,sp,100
    8778:	8009883a 	mov	r4,r16
    877c:	880b883a 	mov	r5,r17
    8780:	01800284 	movi	r6,10
    8784:	000f883a 	mov	r7,zero
    8788:	000cf500 	call	cf50 <__umoddi3>
    878c:	12000c04 	addi	r8,r2,48
    8790:	94bfffc4 	addi	r18,r18,-1
    8794:	8009883a 	mov	r4,r16
    8798:	880b883a 	mov	r5,r17
    879c:	01800284 	movi	r6,10
    87a0:	000f883a 	mov	r7,zero
    87a4:	92000005 	stb	r8,0(r18)
    87a8:	000c9740 	call	c974 <__udivdi3>
    87ac:	1009883a 	mov	r4,r2
    87b0:	1021883a 	mov	r16,r2
    87b4:	18800068 	cmpgeui	r2,r3,1
    87b8:	1823883a 	mov	r17,r3
    87bc:	103fee1e 	bne	r2,zero,8778 <___vfprintf_internal_r+0x146c>
    87c0:	1800021e 	bne	r3,zero,87cc <___vfprintf_internal_r+0x14c0>
    87c4:	00800244 	movi	r2,9
    87c8:	113feb36 	bltu	r2,r4,8778 <___vfprintf_internal_r+0x146c>
    87cc:	94bfffc4 	addi	r18,r18,-1
    87d0:	dc814115 	stw	r18,1284(sp)
    87d4:	003fc006 	br	86d8 <___vfprintf_internal_r+0x13cc>
    87d8:	d9014c17 	ldw	r4,1328(sp)
    87dc:	2080004c 	andi	r2,r4,1
    87e0:	10009a1e 	bne	r2,zero,8a4c <___vfprintf_internal_r+0x1740>
    87e4:	d9401904 	addi	r5,sp,100
    87e8:	dd000f04 	addi	r20,sp,60
    87ec:	d9414115 	stw	r5,1284(sp)
    87f0:	003d6106 	br	7d78 <___vfprintf_internal_r+0xa6c>
    87f4:	d9014f17 	ldw	r4,1340(sp)
    87f8:	b00b883a 	mov	r5,r22
    87fc:	d9800c04 	addi	r6,sp,48
    8800:	00072b40 	call	72b4 <__sprint_r>
    8804:	103c791e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8808:	dc800e17 	ldw	r18,56(sp)
    880c:	d8c01904 	addi	r3,sp,100
    8810:	003cff06 	br	7c10 <___vfprintf_internal_r+0x904>
    8814:	d8c14c17 	ldw	r3,1328(sp)
    8818:	1880040c 	andi	r2,r3,16
    881c:	1000711e 	bne	r2,zero,89e4 <___vfprintf_internal_r+0x16d8>
    8820:	d9014c17 	ldw	r4,1328(sp)
    8824:	2080100c 	andi	r2,r4,64
    8828:	10006e26 	beq	r2,zero,89e4 <___vfprintf_internal_r+0x16d8>
    882c:	3c00000b 	ldhu	r16,0(r7)
    8830:	0023883a 	mov	r17,zero
    8834:	39c00104 	addi	r7,r7,4
    8838:	d9c14015 	stw	r7,1280(sp)
    883c:	003f0006 	br	8440 <___vfprintf_internal_r+0x1134>
    8840:	dc400d17 	ldw	r17,52(sp)
    8844:	07000074 	movhi	fp,1
    8848:	e7082784 	addi	fp,fp,8350
    884c:	9425883a 	add	r18,r18,r16
    8850:	8c400044 	addi	r17,r17,1
    8854:	008001c4 	movi	r2,7
    8858:	1f000015 	stw	fp,0(r3)
    885c:	1c000115 	stw	r16,4(r3)
    8860:	dc800e15 	stw	r18,56(sp)
    8864:	dc400d15 	stw	r17,52(sp)
    8868:	147d7616 	blt	r2,r17,7e44 <___vfprintf_internal_r+0xb38>
    886c:	18c00204 	addi	r3,r3,8
    8870:	003d7b06 	br	7e60 <___vfprintf_internal_r+0xb54>
    8874:	dc800e17 	ldw	r18,56(sp)
    8878:	dc400d17 	ldw	r17,52(sp)
    887c:	07000074 	movhi	fp,1
    8880:	e7082b84 	addi	fp,fp,8366
    8884:	003bc006 	br	7788 <___vfprintf_internal_r+0x47c>
    8888:	d9014f17 	ldw	r4,1340(sp)
    888c:	b00b883a 	mov	r5,r22
    8890:	d9800c04 	addi	r6,sp,48
    8894:	00072b40 	call	72b4 <__sprint_r>
    8898:	103c541e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    889c:	dc800e17 	ldw	r18,56(sp)
    88a0:	d8c01904 	addi	r3,sp,100
    88a4:	003ce906 	br	7c4c <___vfprintf_internal_r+0x940>
    88a8:	3c000017 	ldw	r16,0(r7)
    88ac:	0009883a 	mov	r4,zero
    88b0:	39c00104 	addi	r7,r7,4
    88b4:	0023883a 	mov	r17,zero
    88b8:	d9c14015 	stw	r7,1280(sp)
    88bc:	d8000405 	stb	zero,16(sp)
    88c0:	003d2006 	br	7d44 <___vfprintf_internal_r+0xa38>
    88c4:	38800017 	ldw	r2,0(r7)
    88c8:	39c00104 	addi	r7,r7,4
    88cc:	d9c14015 	stw	r7,1280(sp)
    88d0:	1023d7fa 	srai	r17,r2,31
    88d4:	1021883a 	mov	r16,r2
    88d8:	003d1806 	br	7d3c <___vfprintf_internal_r+0xa30>
    88dc:	3c000017 	ldw	r16,0(r7)
    88e0:	01000044 	movi	r4,1
    88e4:	39c00104 	addi	r7,r7,4
    88e8:	0023883a 	mov	r17,zero
    88ec:	d9c14015 	stw	r7,1280(sp)
    88f0:	d8000405 	stb	zero,16(sp)
    88f4:	003d1306 	br	7d44 <___vfprintf_internal_r+0xa38>
    88f8:	00800074 	movhi	r2,1
    88fc:	10882704 	addi	r2,r2,8348
    8900:	94800044 	addi	r18,r18,1
    8904:	8c400044 	addi	r17,r17,1
    8908:	a8800015 	stw	r2,0(r21)
    890c:	00c00044 	movi	r3,1
    8910:	008001c4 	movi	r2,7
    8914:	a8c00115 	stw	r3,4(r21)
    8918:	dc800e15 	stw	r18,56(sp)
    891c:	dc400d15 	stw	r17,52(sp)
    8920:	1440ca16 	blt	r2,r17,8c4c <___vfprintf_internal_r+0x1940>
    8924:	a8c00204 	addi	r3,r21,8
    8928:	2000061e 	bne	r4,zero,8944 <___vfprintf_internal_r+0x1638>
    892c:	d9414717 	ldw	r5,1308(sp)
    8930:	2800041e 	bne	r5,zero,8944 <___vfprintf_internal_r+0x1638>
    8934:	d9814c17 	ldw	r6,1328(sp)
    8938:	3080004c 	andi	r2,r6,1
    893c:	1005003a 	cmpeq	r2,r2,zero
    8940:	103bf01e 	bne	r2,zero,7904 <___vfprintf_internal_r+0x5f8>
    8944:	00800044 	movi	r2,1
    8948:	dc400d17 	ldw	r17,52(sp)
    894c:	18800115 	stw	r2,4(r3)
    8950:	d8814917 	ldw	r2,1316(sp)
    8954:	94800044 	addi	r18,r18,1
    8958:	8c400044 	addi	r17,r17,1
    895c:	18800015 	stw	r2,0(r3)
    8960:	008001c4 	movi	r2,7
    8964:	dc800e15 	stw	r18,56(sp)
    8968:	dc400d15 	stw	r17,52(sp)
    896c:	1440ca16 	blt	r2,r17,8c98 <___vfprintf_internal_r+0x198c>
    8970:	18c00204 	addi	r3,r3,8
    8974:	0121c83a 	sub	r16,zero,r4
    8978:	0400500e 	bge	zero,r16,8abc <___vfprintf_internal_r+0x17b0>
    897c:	00800404 	movi	r2,16
    8980:	1400800e 	bge	r2,r16,8b84 <___vfprintf_internal_r+0x1878>
    8984:	1027883a 	mov	r19,r2
    8988:	07000074 	movhi	fp,1
    898c:	e7082784 	addi	fp,fp,8350
    8990:	050001c4 	movi	r20,7
    8994:	00000306 	br	89a4 <___vfprintf_internal_r+0x1698>
    8998:	18c00204 	addi	r3,r3,8
    899c:	843ffc04 	addi	r16,r16,-16
    89a0:	9c007a0e 	bge	r19,r16,8b8c <___vfprintf_internal_r+0x1880>
    89a4:	94800404 	addi	r18,r18,16
    89a8:	8c400044 	addi	r17,r17,1
    89ac:	1f000015 	stw	fp,0(r3)
    89b0:	1cc00115 	stw	r19,4(r3)
    89b4:	dc800e15 	stw	r18,56(sp)
    89b8:	dc400d15 	stw	r17,52(sp)
    89bc:	a47ff60e 	bge	r20,r17,8998 <___vfprintf_internal_r+0x168c>
    89c0:	d9014f17 	ldw	r4,1340(sp)
    89c4:	b00b883a 	mov	r5,r22
    89c8:	d9800c04 	addi	r6,sp,48
    89cc:	00072b40 	call	72b4 <__sprint_r>
    89d0:	103c061e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    89d4:	dc800e17 	ldw	r18,56(sp)
    89d8:	dc400d17 	ldw	r17,52(sp)
    89dc:	d8c01904 	addi	r3,sp,100
    89e0:	003fee06 	br	899c <___vfprintf_internal_r+0x1690>
    89e4:	3c000017 	ldw	r16,0(r7)
    89e8:	0023883a 	mov	r17,zero
    89ec:	39c00104 	addi	r7,r7,4
    89f0:	d9c14015 	stw	r7,1280(sp)
    89f4:	003e9206 	br	8440 <___vfprintf_internal_r+0x1134>
    89f8:	d9401904 	addi	r5,sp,100
    89fc:	dd000f04 	addi	r20,sp,60
    8a00:	d9414115 	stw	r5,1284(sp)
    8a04:	d9814417 	ldw	r6,1296(sp)
    8a08:	880a973a 	slli	r5,r17,28
    8a0c:	8004d13a 	srli	r2,r16,4
    8a10:	810003cc 	andi	r4,r16,15
    8a14:	3109883a 	add	r4,r6,r4
    8a18:	2884b03a 	or	r2,r5,r2
    8a1c:	21400003 	ldbu	r5,0(r4)
    8a20:	d9014117 	ldw	r4,1284(sp)
    8a24:	8806d13a 	srli	r3,r17,4
    8a28:	1021883a 	mov	r16,r2
    8a2c:	213fffc4 	addi	r4,r4,-1
    8a30:	d9014115 	stw	r4,1284(sp)
    8a34:	d9814117 	ldw	r6,1284(sp)
    8a38:	10c8b03a 	or	r4,r2,r3
    8a3c:	1823883a 	mov	r17,r3
    8a40:	31400005 	stb	r5,0(r6)
    8a44:	203fef1e 	bne	r4,zero,8a04 <___vfprintf_internal_r+0x16f8>
    8a48:	003ccb06 	br	7d78 <___vfprintf_internal_r+0xa6c>
    8a4c:	00800c04 	movi	r2,48
    8a50:	d98018c4 	addi	r6,sp,99
    8a54:	dd000f04 	addi	r20,sp,60
    8a58:	d88018c5 	stb	r2,99(sp)
    8a5c:	d9814115 	stw	r6,1284(sp)
    8a60:	003cc506 	br	7d78 <___vfprintf_internal_r+0xa6c>
    8a64:	dc400d17 	ldw	r17,52(sp)
    8a68:	07000074 	movhi	fp,1
    8a6c:	e7082b84 	addi	fp,fp,8366
    8a70:	003bc706 	br	7990 <___vfprintf_internal_r+0x684>
    8a74:	d9414c17 	ldw	r5,1328(sp)
    8a78:	2880040c 	andi	r2,r5,16
    8a7c:	10007c26 	beq	r2,zero,8c70 <___vfprintf_internal_r+0x1964>
    8a80:	38800017 	ldw	r2,0(r7)
    8a84:	39c00104 	addi	r7,r7,4
    8a88:	d9c14015 	stw	r7,1280(sp)
    8a8c:	d9814b17 	ldw	r6,1324(sp)
    8a90:	d9c14017 	ldw	r7,1280(sp)
    8a94:	11800015 	stw	r6,0(r2)
    8a98:	003a7806 	br	747c <___vfprintf_internal_r+0x170>
    8a9c:	d9014f17 	ldw	r4,1340(sp)
    8aa0:	b00b883a 	mov	r5,r22
    8aa4:	d9800c04 	addi	r6,sp,48
    8aa8:	00072b40 	call	72b4 <__sprint_r>
    8aac:	103bcf1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8ab0:	dc800e17 	ldw	r18,56(sp)
    8ab4:	dc400d17 	ldw	r17,52(sp)
    8ab8:	d8c01904 	addi	r3,sp,100
    8abc:	d9014717 	ldw	r4,1308(sp)
    8ac0:	d9414117 	ldw	r5,1284(sp)
    8ac4:	8c400044 	addi	r17,r17,1
    8ac8:	9125883a 	add	r18,r18,r4
    8acc:	008001c4 	movi	r2,7
    8ad0:	19400015 	stw	r5,0(r3)
    8ad4:	19000115 	stw	r4,4(r3)
    8ad8:	dc800e15 	stw	r18,56(sp)
    8adc:	dc400d15 	stw	r17,52(sp)
    8ae0:	147cee16 	blt	r2,r17,7e9c <___vfprintf_internal_r+0xb90>
    8ae4:	18c00204 	addi	r3,r3,8
    8ae8:	003b8606 	br	7904 <___vfprintf_internal_r+0x5f8>
    8aec:	38c00017 	ldw	r3,0(r7)
    8af0:	39000204 	addi	r4,r7,8
    8af4:	d9014015 	stw	r4,1280(sp)
    8af8:	d8c14215 	stw	r3,1288(sp)
    8afc:	39c00117 	ldw	r7,4(r7)
    8b00:	d9c14315 	stw	r7,1292(sp)
    8b04:	003e2006 	br	8388 <___vfprintf_internal_r+0x107c>
    8b08:	0005883a 	mov	r2,zero
    8b0c:	1409c83a 	sub	r4,r2,r16
    8b10:	1105803a 	cmpltu	r2,r2,r4
    8b14:	044bc83a 	sub	r5,zero,r17
    8b18:	2885c83a 	sub	r2,r5,r2
    8b1c:	2021883a 	mov	r16,r4
    8b20:	1023883a 	mov	r17,r2
    8b24:	01000044 	movi	r4,1
    8b28:	00800b44 	movi	r2,45
    8b2c:	d8800405 	stb	r2,16(sp)
    8b30:	003c8406 	br	7d44 <___vfprintf_internal_r+0xa38>
    8b34:	d9014f17 	ldw	r4,1340(sp)
    8b38:	b00b883a 	mov	r5,r22
    8b3c:	d9800c04 	addi	r6,sp,48
    8b40:	00072b40 	call	72b4 <__sprint_r>
    8b44:	103ba91e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8b48:	dc800e17 	ldw	r18,56(sp)
    8b4c:	dc400d17 	ldw	r17,52(sp)
    8b50:	d9000517 	ldw	r4,20(sp)
    8b54:	d9401904 	addi	r5,sp,100
    8b58:	003da706 	br	81f8 <___vfprintf_internal_r+0xeec>
    8b5c:	d9014f17 	ldw	r4,1340(sp)
    8b60:	b00b883a 	mov	r5,r22
    8b64:	d9800c04 	addi	r6,sp,48
    8b68:	00072b40 	call	72b4 <__sprint_r>
    8b6c:	103b9f1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8b70:	dc800e17 	ldw	r18,56(sp)
    8b74:	dc400d17 	ldw	r17,52(sp)
    8b78:	d9000517 	ldw	r4,20(sp)
    8b7c:	d8c01904 	addi	r3,sp,100
    8b80:	003d9106 	br	81c8 <___vfprintf_internal_r+0xebc>
    8b84:	07000074 	movhi	fp,1
    8b88:	e7082784 	addi	fp,fp,8350
    8b8c:	9425883a 	add	r18,r18,r16
    8b90:	8c400044 	addi	r17,r17,1
    8b94:	008001c4 	movi	r2,7
    8b98:	1f000015 	stw	fp,0(r3)
    8b9c:	1c000115 	stw	r16,4(r3)
    8ba0:	dc800e15 	stw	r18,56(sp)
    8ba4:	dc400d15 	stw	r17,52(sp)
    8ba8:	147fbc16 	blt	r2,r17,8a9c <___vfprintf_internal_r+0x1790>
    8bac:	18c00204 	addi	r3,r3,8
    8bb0:	003fc206 	br	8abc <___vfprintf_internal_r+0x17b0>
    8bb4:	d9014f17 	ldw	r4,1340(sp)
    8bb8:	b00b883a 	mov	r5,r22
    8bbc:	d9800c04 	addi	r6,sp,48
    8bc0:	00072b40 	call	72b4 <__sprint_r>
    8bc4:	103b891e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8bc8:	dc800e17 	ldw	r18,56(sp)
    8bcc:	d9000517 	ldw	r4,20(sp)
    8bd0:	d8c01904 	addi	r3,sp,100
    8bd4:	003d0206 	br	7fe0 <___vfprintf_internal_r+0xcd4>
    8bd8:	07000074 	movhi	fp,1
    8bdc:	e7082784 	addi	fp,fp,8350
    8be0:	003be406 	br	7b74 <___vfprintf_internal_r+0x868>
    8be4:	00800074 	movhi	r2,1
    8be8:	10881604 	addi	r2,r2,8280
    8bec:	d8814115 	stw	r2,1284(sp)
    8bf0:	003df506 	br	83c8 <___vfprintf_internal_r+0x10bc>
    8bf4:	d9014217 	ldw	r4,1288(sp)
    8bf8:	d9414317 	ldw	r5,1292(sp)
    8bfc:	0004c680 	call	4c68 <__isnand>
    8c00:	10003926 	beq	r2,zero,8ce8 <___vfprintf_internal_r+0x19dc>
    8c04:	d9414d17 	ldw	r5,1332(sp)
    8c08:	008011c4 	movi	r2,71
    8c0c:	1140ce16 	blt	r2,r5,8f48 <___vfprintf_internal_r+0x1c3c>
    8c10:	01800074 	movhi	r6,1
    8c14:	31881704 	addi	r6,r6,8284
    8c18:	d9814115 	stw	r6,1284(sp)
    8c1c:	003dea06 	br	83c8 <___vfprintf_internal_r+0x10bc>
    8c20:	d9014c17 	ldw	r4,1328(sp)
    8c24:	bdc00044 	addi	r23,r23,1
    8c28:	b8c00007 	ldb	r3,0(r23)
    8c2c:	21000814 	ori	r4,r4,32
    8c30:	d9014c15 	stw	r4,1328(sp)
    8c34:	003a3406 	br	7508 <___vfprintf_internal_r+0x1fc>
    8c38:	dcc14515 	stw	r19,1300(sp)
    8c3c:	98011016 	blt	r19,zero,9080 <___vfprintf_internal_r+0x1d74>
    8c40:	980f883a 	mov	r7,r19
    8c44:	d8014615 	stw	zero,1304(sp)
    8c48:	003c5206 	br	7d94 <___vfprintf_internal_r+0xa88>
    8c4c:	d9014f17 	ldw	r4,1340(sp)
    8c50:	b00b883a 	mov	r5,r22
    8c54:	d9800c04 	addi	r6,sp,48
    8c58:	00072b40 	call	72b4 <__sprint_r>
    8c5c:	103b631e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8c60:	dc800e17 	ldw	r18,56(sp)
    8c64:	d9000517 	ldw	r4,20(sp)
    8c68:	d8c01904 	addi	r3,sp,100
    8c6c:	003f2e06 	br	8928 <___vfprintf_internal_r+0x161c>
    8c70:	d8c14c17 	ldw	r3,1328(sp)
    8c74:	1880100c 	andi	r2,r3,64
    8c78:	1000a026 	beq	r2,zero,8efc <___vfprintf_internal_r+0x1bf0>
    8c7c:	38800017 	ldw	r2,0(r7)
    8c80:	39c00104 	addi	r7,r7,4
    8c84:	d9c14015 	stw	r7,1280(sp)
    8c88:	d9014b17 	ldw	r4,1324(sp)
    8c8c:	d9c14017 	ldw	r7,1280(sp)
    8c90:	1100000d 	sth	r4,0(r2)
    8c94:	0039f906 	br	747c <___vfprintf_internal_r+0x170>
    8c98:	d9014f17 	ldw	r4,1340(sp)
    8c9c:	b00b883a 	mov	r5,r22
    8ca0:	d9800c04 	addi	r6,sp,48
    8ca4:	00072b40 	call	72b4 <__sprint_r>
    8ca8:	103b501e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8cac:	dc800e17 	ldw	r18,56(sp)
    8cb0:	dc400d17 	ldw	r17,52(sp)
    8cb4:	d9000517 	ldw	r4,20(sp)
    8cb8:	d8c01904 	addi	r3,sp,100
    8cbc:	003f2d06 	br	8974 <___vfprintf_internal_r+0x1668>
    8cc0:	00800184 	movi	r2,6
    8cc4:	14c09a36 	bltu	r2,r19,8f30 <___vfprintf_internal_r+0x1c24>
    8cc8:	dcc14515 	stw	r19,1300(sp)
    8ccc:	9800010e 	bge	r19,zero,8cd4 <___vfprintf_internal_r+0x19c8>
    8cd0:	d8014515 	stw	zero,1300(sp)
    8cd4:	00800074 	movhi	r2,1
    8cd8:	10881904 	addi	r2,r2,8292
    8cdc:	980f883a 	mov	r7,r19
    8ce0:	d8814115 	stw	r2,1284(sp)
    8ce4:	003a7806 	br	76c8 <___vfprintf_internal_r+0x3bc>
    8ce8:	00bfffc4 	movi	r2,-1
    8cec:	9880e226 	beq	r19,r2,9078 <___vfprintf_internal_r+0x1d6c>
    8cf0:	d9414d17 	ldw	r5,1332(sp)
    8cf4:	008019c4 	movi	r2,103
    8cf8:	2880dc26 	beq	r5,r2,906c <___vfprintf_internal_r+0x1d60>
    8cfc:	008011c4 	movi	r2,71
    8d00:	2880da26 	beq	r5,r2,906c <___vfprintf_internal_r+0x1d60>
    8d04:	d9414c17 	ldw	r5,1328(sp)
    8d08:	d9014317 	ldw	r4,1292(sp)
    8d0c:	d9814217 	ldw	r6,1288(sp)
    8d10:	29404014 	ori	r5,r5,256
    8d14:	d9414c15 	stw	r5,1328(sp)
    8d18:	2000cc16 	blt	r4,zero,904c <___vfprintf_internal_r+0x1d40>
    8d1c:	3021883a 	mov	r16,r6
    8d20:	2023883a 	mov	r17,r4
    8d24:	0039883a 	mov	fp,zero
    8d28:	d9414d17 	ldw	r5,1332(sp)
    8d2c:	00801984 	movi	r2,102
    8d30:	2880b726 	beq	r5,r2,9010 <___vfprintf_internal_r+0x1d04>
    8d34:	00801184 	movi	r2,70
    8d38:	2880b526 	beq	r5,r2,9010 <___vfprintf_internal_r+0x1d04>
    8d3c:	00801944 	movi	r2,101
    8d40:	2880c826 	beq	r5,r2,9064 <___vfprintf_internal_r+0x1d58>
    8d44:	00801144 	movi	r2,69
    8d48:	2880c626 	beq	r5,r2,9064 <___vfprintf_internal_r+0x1d58>
    8d4c:	9829883a 	mov	r20,r19
    8d50:	d9014f17 	ldw	r4,1340(sp)
    8d54:	d8800504 	addi	r2,sp,20
    8d58:	880d883a 	mov	r6,r17
    8d5c:	d8800115 	stw	r2,4(sp)
    8d60:	d8c00604 	addi	r3,sp,24
    8d64:	d8800704 	addi	r2,sp,28
    8d68:	800b883a 	mov	r5,r16
    8d6c:	01c00084 	movi	r7,2
    8d70:	d8c00215 	stw	r3,8(sp)
    8d74:	d8800315 	stw	r2,12(sp)
    8d78:	dd000015 	stw	r20,0(sp)
    8d7c:	00095300 	call	9530 <_dtoa_r>
    8d80:	d9814d17 	ldw	r6,1332(sp)
    8d84:	d8814115 	stw	r2,1284(sp)
    8d88:	008019c4 	movi	r2,103
    8d8c:	30809526 	beq	r6,r2,8fe4 <___vfprintf_internal_r+0x1cd8>
    8d90:	d8c14d17 	ldw	r3,1332(sp)
    8d94:	008011c4 	movi	r2,71
    8d98:	18809226 	beq	r3,r2,8fe4 <___vfprintf_internal_r+0x1cd8>
    8d9c:	d9414117 	ldw	r5,1284(sp)
    8da0:	d9814d17 	ldw	r6,1332(sp)
    8da4:	00801984 	movi	r2,102
    8da8:	2d25883a 	add	r18,r5,r20
    8dac:	30808626 	beq	r6,r2,8fc8 <___vfprintf_internal_r+0x1cbc>
    8db0:	00801184 	movi	r2,70
    8db4:	30808426 	beq	r6,r2,8fc8 <___vfprintf_internal_r+0x1cbc>
    8db8:	000d883a 	mov	r6,zero
    8dbc:	000f883a 	mov	r7,zero
    8dc0:	880b883a 	mov	r5,r17
    8dc4:	8009883a 	mov	r4,r16
    8dc8:	000e1880 	call	e188 <__eqdf2>
    8dcc:	1000751e 	bne	r2,zero,8fa4 <___vfprintf_internal_r+0x1c98>
    8dd0:	9005883a 	mov	r2,r18
    8dd4:	dc800715 	stw	r18,28(sp)
    8dd8:	d9014117 	ldw	r4,1284(sp)
    8ddc:	d9414d17 	ldw	r5,1332(sp)
    8de0:	00c019c4 	movi	r3,103
    8de4:	1125c83a 	sub	r18,r2,r4
    8de8:	28c06826 	beq	r5,r3,8f8c <___vfprintf_internal_r+0x1c80>
    8dec:	008011c4 	movi	r2,71
    8df0:	28806626 	beq	r5,r2,8f8c <___vfprintf_internal_r+0x1c80>
    8df4:	d9000517 	ldw	r4,20(sp)
    8df8:	d8c14d17 	ldw	r3,1332(sp)
    8dfc:	00801944 	movi	r2,101
    8e00:	10c05516 	blt	r2,r3,8f58 <___vfprintf_internal_r+0x1c4c>
    8e04:	213fffc4 	addi	r4,r4,-1
    8e08:	d9000515 	stw	r4,20(sp)
    8e0c:	d8c00805 	stb	r3,32(sp)
    8e10:	2021883a 	mov	r16,r4
    8e14:	2000c116 	blt	r4,zero,911c <___vfprintf_internal_r+0x1e10>
    8e18:	00800ac4 	movi	r2,43
    8e1c:	d8800845 	stb	r2,33(sp)
    8e20:	00800244 	movi	r2,9
    8e24:	1400af0e 	bge	r2,r16,90e4 <___vfprintf_internal_r+0x1dd8>
    8e28:	1027883a 	mov	r19,r2
    8e2c:	dc400b84 	addi	r17,sp,46
    8e30:	8009883a 	mov	r4,r16
    8e34:	01400284 	movi	r5,10
    8e38:	000e96c0 	call	e96c <__modsi3>
    8e3c:	10800c04 	addi	r2,r2,48
    8e40:	8c7fffc4 	addi	r17,r17,-1
    8e44:	8009883a 	mov	r4,r16
    8e48:	01400284 	movi	r5,10
    8e4c:	88800005 	stb	r2,0(r17)
    8e50:	000e90c0 	call	e90c <__divsi3>
    8e54:	1021883a 	mov	r16,r2
    8e58:	98bff516 	blt	r19,r2,8e30 <___vfprintf_internal_r+0x1b24>
    8e5c:	10c00c04 	addi	r3,r2,48
    8e60:	d88009c4 	addi	r2,sp,39
    8e64:	108001c4 	addi	r2,r2,7
    8e68:	897fffc4 	addi	r5,r17,-1
    8e6c:	88ffffc5 	stb	r3,-1(r17)
    8e70:	2880a72e 	bgeu	r5,r2,9110 <___vfprintf_internal_r+0x1e04>
    8e74:	1009883a 	mov	r4,r2
    8e78:	d9800804 	addi	r6,sp,32
    8e7c:	d8c00884 	addi	r3,sp,34
    8e80:	28800003 	ldbu	r2,0(r5)
    8e84:	29400044 	addi	r5,r5,1
    8e88:	18800005 	stb	r2,0(r3)
    8e8c:	18c00044 	addi	r3,r3,1
    8e90:	293ffb36 	bltu	r5,r4,8e80 <___vfprintf_internal_r+0x1b74>
    8e94:	1987c83a 	sub	r3,r3,r6
    8e98:	00800044 	movi	r2,1
    8e9c:	d8c14815 	stw	r3,1312(sp)
    8ea0:	90cf883a 	add	r7,r18,r3
    8ea4:	1480960e 	bge	r2,r18,9100 <___vfprintf_internal_r+0x1df4>
    8ea8:	39c00044 	addi	r7,r7,1
    8eac:	d9c14515 	stw	r7,1300(sp)
    8eb0:	38003416 	blt	r7,zero,8f84 <___vfprintf_internal_r+0x1c78>
    8eb4:	e0803fcc 	andi	r2,fp,255
    8eb8:	1080201c 	xori	r2,r2,128
    8ebc:	10bfe004 	addi	r2,r2,-128
    8ec0:	10004e26 	beq	r2,zero,8ffc <___vfprintf_internal_r+0x1cf0>
    8ec4:	00800b44 	movi	r2,45
    8ec8:	dc814715 	stw	r18,1308(sp)
    8ecc:	d8014615 	stw	zero,1304(sp)
    8ed0:	d8800405 	stb	r2,16(sp)
    8ed4:	003bb106 	br	7d9c <___vfprintf_internal_r+0xa90>
    8ed8:	00800b44 	movi	r2,45
    8edc:	d8800405 	stb	r2,16(sp)
    8ee0:	003d3306 	br	83b0 <___vfprintf_internal_r+0x10a4>
    8ee4:	d9014f17 	ldw	r4,1340(sp)
    8ee8:	b00b883a 	mov	r5,r22
    8eec:	d9800c04 	addi	r6,sp,48
    8ef0:	00072b40 	call	72b4 <__sprint_r>
    8ef4:	103abd1e 	bne	r2,zero,79ec <___vfprintf_internal_r+0x6e0>
    8ef8:	003abb06 	br	79e8 <___vfprintf_internal_r+0x6dc>
    8efc:	38800017 	ldw	r2,0(r7)
    8f00:	39c00104 	addi	r7,r7,4
    8f04:	d9c14015 	stw	r7,1280(sp)
    8f08:	d9414b17 	ldw	r5,1324(sp)
    8f0c:	d9c14017 	ldw	r7,1280(sp)
    8f10:	11400015 	stw	r5,0(r2)
    8f14:	00395906 	br	747c <___vfprintf_internal_r+0x170>
    8f18:	980f883a 	mov	r7,r19
    8f1c:	dcc14515 	stw	r19,1300(sp)
    8f20:	d8014615 	stw	zero,1304(sp)
    8f24:	003b9b06 	br	7d94 <___vfprintf_internal_r+0xa88>
    8f28:	0027883a 	mov	r19,zero
    8f2c:	00397806 	br	7510 <___vfprintf_internal_r+0x204>
    8f30:	00c00074 	movhi	r3,1
    8f34:	18c81904 	addi	r3,r3,8292
    8f38:	100f883a 	mov	r7,r2
    8f3c:	d8814515 	stw	r2,1300(sp)
    8f40:	d8c14115 	stw	r3,1284(sp)
    8f44:	0039e006 	br	76c8 <___vfprintf_internal_r+0x3bc>
    8f48:	00800074 	movhi	r2,1
    8f4c:	10881804 	addi	r2,r2,8288
    8f50:	d8814115 	stw	r2,1284(sp)
    8f54:	003d1c06 	br	83c8 <___vfprintf_internal_r+0x10bc>
    8f58:	d9414d17 	ldw	r5,1332(sp)
    8f5c:	00801984 	movi	r2,102
    8f60:	28804926 	beq	r5,r2,9088 <___vfprintf_internal_r+0x1d7c>
    8f64:	200f883a 	mov	r7,r4
    8f68:	24805716 	blt	r4,r18,90c8 <___vfprintf_internal_r+0x1dbc>
    8f6c:	d9414c17 	ldw	r5,1328(sp)
    8f70:	2880004c 	andi	r2,r5,1
    8f74:	10000126 	beq	r2,zero,8f7c <___vfprintf_internal_r+0x1c70>
    8f78:	21c00044 	addi	r7,r4,1
    8f7c:	d9c14515 	stw	r7,1300(sp)
    8f80:	383fcc0e 	bge	r7,zero,8eb4 <___vfprintf_internal_r+0x1ba8>
    8f84:	d8014515 	stw	zero,1300(sp)
    8f88:	003fca06 	br	8eb4 <___vfprintf_internal_r+0x1ba8>
    8f8c:	d9000517 	ldw	r4,20(sp)
    8f90:	00bfff04 	movi	r2,-4
    8f94:	1100480e 	bge	r2,r4,90b8 <___vfprintf_internal_r+0x1dac>
    8f98:	99004716 	blt	r19,r4,90b8 <___vfprintf_internal_r+0x1dac>
    8f9c:	d8c14d15 	stw	r3,1332(sp)
    8fa0:	003ff006 	br	8f64 <___vfprintf_internal_r+0x1c58>
    8fa4:	d8800717 	ldw	r2,28(sp)
    8fa8:	14bf8b2e 	bgeu	r2,r18,8dd8 <___vfprintf_internal_r+0x1acc>
    8fac:	9007883a 	mov	r3,r18
    8fb0:	01000c04 	movi	r4,48
    8fb4:	11000005 	stb	r4,0(r2)
    8fb8:	10800044 	addi	r2,r2,1
    8fbc:	d8800715 	stw	r2,28(sp)
    8fc0:	18bffc1e 	bne	r3,r2,8fb4 <___vfprintf_internal_r+0x1ca8>
    8fc4:	003f8406 	br	8dd8 <___vfprintf_internal_r+0x1acc>
    8fc8:	d8814117 	ldw	r2,1284(sp)
    8fcc:	10c00007 	ldb	r3,0(r2)
    8fd0:	00800c04 	movi	r2,48
    8fd4:	18805b26 	beq	r3,r2,9144 <___vfprintf_internal_r+0x1e38>
    8fd8:	d9000517 	ldw	r4,20(sp)
    8fdc:	9125883a 	add	r18,r18,r4
    8fe0:	003f7506 	br	8db8 <___vfprintf_internal_r+0x1aac>
    8fe4:	d9014c17 	ldw	r4,1328(sp)
    8fe8:	2080004c 	andi	r2,r4,1
    8fec:	1005003a 	cmpeq	r2,r2,zero
    8ff0:	103f6a26 	beq	r2,zero,8d9c <___vfprintf_internal_r+0x1a90>
    8ff4:	d8800717 	ldw	r2,28(sp)
    8ff8:	003f7706 	br	8dd8 <___vfprintf_internal_r+0x1acc>
    8ffc:	d9c14515 	stw	r7,1300(sp)
    9000:	38004d16 	blt	r7,zero,9138 <___vfprintf_internal_r+0x1e2c>
    9004:	dc814715 	stw	r18,1308(sp)
    9008:	d8014615 	stw	zero,1304(sp)
    900c:	003b6106 	br	7d94 <___vfprintf_internal_r+0xa88>
    9010:	d9014f17 	ldw	r4,1340(sp)
    9014:	d8800504 	addi	r2,sp,20
    9018:	d8800115 	stw	r2,4(sp)
    901c:	d8c00604 	addi	r3,sp,24
    9020:	d8800704 	addi	r2,sp,28
    9024:	800b883a 	mov	r5,r16
    9028:	880d883a 	mov	r6,r17
    902c:	01c000c4 	movi	r7,3
    9030:	d8c00215 	stw	r3,8(sp)
    9034:	d8800315 	stw	r2,12(sp)
    9038:	dcc00015 	stw	r19,0(sp)
    903c:	9829883a 	mov	r20,r19
    9040:	00095300 	call	9530 <_dtoa_r>
    9044:	d8814115 	stw	r2,1284(sp)
    9048:	003f5106 	br	8d90 <___vfprintf_internal_r+0x1a84>
    904c:	d8c14217 	ldw	r3,1288(sp)
    9050:	d9014317 	ldw	r4,1292(sp)
    9054:	07000b44 	movi	fp,45
    9058:	1821883a 	mov	r16,r3
    905c:	2460003c 	xorhi	r17,r4,32768
    9060:	003f3106 	br	8d28 <___vfprintf_internal_r+0x1a1c>
    9064:	9d000044 	addi	r20,r19,1
    9068:	003f3906 	br	8d50 <___vfprintf_internal_r+0x1a44>
    906c:	983f251e 	bne	r19,zero,8d04 <___vfprintf_internal_r+0x19f8>
    9070:	04c00044 	movi	r19,1
    9074:	003f2306 	br	8d04 <___vfprintf_internal_r+0x19f8>
    9078:	04c00184 	movi	r19,6
    907c:	003f2106 	br	8d04 <___vfprintf_internal_r+0x19f8>
    9080:	d8014515 	stw	zero,1300(sp)
    9084:	003eee06 	br	8c40 <___vfprintf_internal_r+0x1934>
    9088:	200f883a 	mov	r7,r4
    908c:	0100370e 	bge	zero,r4,916c <___vfprintf_internal_r+0x1e60>
    9090:	9800031e 	bne	r19,zero,90a0 <___vfprintf_internal_r+0x1d94>
    9094:	d9814c17 	ldw	r6,1328(sp)
    9098:	3080004c 	andi	r2,r6,1
    909c:	103fb726 	beq	r2,zero,8f7c <___vfprintf_internal_r+0x1c70>
    90a0:	20800044 	addi	r2,r4,1
    90a4:	98a7883a 	add	r19,r19,r2
    90a8:	dcc14515 	stw	r19,1300(sp)
    90ac:	980f883a 	mov	r7,r19
    90b0:	983f800e 	bge	r19,zero,8eb4 <___vfprintf_internal_r+0x1ba8>
    90b4:	003fb306 	br	8f84 <___vfprintf_internal_r+0x1c78>
    90b8:	d9814d17 	ldw	r6,1332(sp)
    90bc:	31bfff84 	addi	r6,r6,-2
    90c0:	d9814d15 	stw	r6,1332(sp)
    90c4:	003f4c06 	br	8df8 <___vfprintf_internal_r+0x1aec>
    90c8:	0100180e 	bge	zero,r4,912c <___vfprintf_internal_r+0x1e20>
    90cc:	00800044 	movi	r2,1
    90d0:	1485883a 	add	r2,r2,r18
    90d4:	d8814515 	stw	r2,1300(sp)
    90d8:	100f883a 	mov	r7,r2
    90dc:	103f750e 	bge	r2,zero,8eb4 <___vfprintf_internal_r+0x1ba8>
    90e0:	003fa806 	br	8f84 <___vfprintf_internal_r+0x1c78>
    90e4:	80c00c04 	addi	r3,r16,48
    90e8:	00800c04 	movi	r2,48
    90ec:	d8c008c5 	stb	r3,35(sp)
    90f0:	d9800804 	addi	r6,sp,32
    90f4:	d8c00904 	addi	r3,sp,36
    90f8:	d8800885 	stb	r2,34(sp)
    90fc:	003f6506 	br	8e94 <___vfprintf_internal_r+0x1b88>
    9100:	d9014c17 	ldw	r4,1328(sp)
    9104:	2084703a 	and	r2,r4,r2
    9108:	103f9c26 	beq	r2,zero,8f7c <___vfprintf_internal_r+0x1c70>
    910c:	003f6606 	br	8ea8 <___vfprintf_internal_r+0x1b9c>
    9110:	d9800804 	addi	r6,sp,32
    9114:	d8c00884 	addi	r3,sp,34
    9118:	003f5e06 	br	8e94 <___vfprintf_internal_r+0x1b88>
    911c:	00800b44 	movi	r2,45
    9120:	0121c83a 	sub	r16,zero,r4
    9124:	d8800845 	stb	r2,33(sp)
    9128:	003f3d06 	br	8e20 <___vfprintf_internal_r+0x1b14>
    912c:	00800084 	movi	r2,2
    9130:	1105c83a 	sub	r2,r2,r4
    9134:	003fe606 	br	90d0 <___vfprintf_internal_r+0x1dc4>
    9138:	d8014515 	stw	zero,1300(sp)
    913c:	dc814715 	stw	r18,1308(sp)
    9140:	003fb106 	br	9008 <___vfprintf_internal_r+0x1cfc>
    9144:	000d883a 	mov	r6,zero
    9148:	000f883a 	mov	r7,zero
    914c:	8009883a 	mov	r4,r16
    9150:	880b883a 	mov	r5,r17
    9154:	000e2100 	call	e210 <__nedf2>
    9158:	103f9f26 	beq	r2,zero,8fd8 <___vfprintf_internal_r+0x1ccc>
    915c:	00800044 	movi	r2,1
    9160:	1509c83a 	sub	r4,r2,r20
    9164:	d9000515 	stw	r4,20(sp)
    9168:	003f9b06 	br	8fd8 <___vfprintf_internal_r+0x1ccc>
    916c:	98000d1e 	bne	r19,zero,91a4 <___vfprintf_internal_r+0x1e98>
    9170:	d8c14c17 	ldw	r3,1328(sp)
    9174:	1880004c 	andi	r2,r3,1
    9178:	10000a1e 	bne	r2,zero,91a4 <___vfprintf_internal_r+0x1e98>
    917c:	01000044 	movi	r4,1
    9180:	200f883a 	mov	r7,r4
    9184:	d9014515 	stw	r4,1300(sp)
    9188:	003f4a06 	br	8eb4 <___vfprintf_internal_r+0x1ba8>
    918c:	3cc00017 	ldw	r19,0(r7)
    9190:	39c00104 	addi	r7,r7,4
    9194:	983d0e0e 	bge	r19,zero,85d0 <___vfprintf_internal_r+0x12c4>
    9198:	b8c00007 	ldb	r3,0(r23)
    919c:	04ffffc4 	movi	r19,-1
    91a0:	0038d906 	br	7508 <___vfprintf_internal_r+0x1fc>
    91a4:	9cc00084 	addi	r19,r19,2
    91a8:	dcc14515 	stw	r19,1300(sp)
    91ac:	980f883a 	mov	r7,r19
    91b0:	983f400e 	bge	r19,zero,8eb4 <___vfprintf_internal_r+0x1ba8>
    91b4:	003f7306 	br	8f84 <___vfprintf_internal_r+0x1c78>

000091b8 <__vfprintf_internal>:
    91b8:	00800074 	movhi	r2,1
    91bc:	108f6704 	addi	r2,r2,15772
    91c0:	2013883a 	mov	r9,r4
    91c4:	11000017 	ldw	r4,0(r2)
    91c8:	2805883a 	mov	r2,r5
    91cc:	300f883a 	mov	r7,r6
    91d0:	480b883a 	mov	r5,r9
    91d4:	100d883a 	mov	r6,r2
    91d8:	000730c1 	jmpi	730c <___vfprintf_internal_r>

000091dc <__swsetup_r>:
    91dc:	00800074 	movhi	r2,1
    91e0:	108f6704 	addi	r2,r2,15772
    91e4:	10c00017 	ldw	r3,0(r2)
    91e8:	defffd04 	addi	sp,sp,-12
    91ec:	dc400115 	stw	r17,4(sp)
    91f0:	dc000015 	stw	r16,0(sp)
    91f4:	dfc00215 	stw	ra,8(sp)
    91f8:	2023883a 	mov	r17,r4
    91fc:	2821883a 	mov	r16,r5
    9200:	18000226 	beq	r3,zero,920c <__swsetup_r+0x30>
    9204:	18800e17 	ldw	r2,56(r3)
    9208:	10001f26 	beq	r2,zero,9288 <__swsetup_r+0xac>
    920c:	8100030b 	ldhu	r4,12(r16)
    9210:	2080020c 	andi	r2,r4,8
    9214:	10002826 	beq	r2,zero,92b8 <__swsetup_r+0xdc>
    9218:	81400417 	ldw	r5,16(r16)
    921c:	28001d26 	beq	r5,zero,9294 <__swsetup_r+0xb8>
    9220:	2080004c 	andi	r2,r4,1
    9224:	1005003a 	cmpeq	r2,r2,zero
    9228:	10000b26 	beq	r2,zero,9258 <__swsetup_r+0x7c>
    922c:	2080008c 	andi	r2,r4,2
    9230:	10001226 	beq	r2,zero,927c <__swsetup_r+0xa0>
    9234:	0005883a 	mov	r2,zero
    9238:	80800215 	stw	r2,8(r16)
    923c:	28000b26 	beq	r5,zero,926c <__swsetup_r+0x90>
    9240:	0005883a 	mov	r2,zero
    9244:	dfc00217 	ldw	ra,8(sp)
    9248:	dc400117 	ldw	r17,4(sp)
    924c:	dc000017 	ldw	r16,0(sp)
    9250:	dec00304 	addi	sp,sp,12
    9254:	f800283a 	ret
    9258:	80800517 	ldw	r2,20(r16)
    925c:	80000215 	stw	zero,8(r16)
    9260:	0085c83a 	sub	r2,zero,r2
    9264:	80800615 	stw	r2,24(r16)
    9268:	283ff51e 	bne	r5,zero,9240 <__swsetup_r+0x64>
    926c:	2080200c 	andi	r2,r4,128
    9270:	103ff326 	beq	r2,zero,9240 <__swsetup_r+0x64>
    9274:	00bfffc4 	movi	r2,-1
    9278:	003ff206 	br	9244 <__swsetup_r+0x68>
    927c:	80800517 	ldw	r2,20(r16)
    9280:	80800215 	stw	r2,8(r16)
    9284:	003fed06 	br	923c <__swsetup_r+0x60>
    9288:	1809883a 	mov	r4,r3
    928c:	00006600 	call	660 <__sinit>
    9290:	003fde06 	br	920c <__swsetup_r+0x30>
    9294:	20c0a00c 	andi	r3,r4,640
    9298:	00808004 	movi	r2,512
    929c:	18bfe026 	beq	r3,r2,9220 <__swsetup_r+0x44>
    92a0:	8809883a 	mov	r4,r17
    92a4:	800b883a 	mov	r5,r16
    92a8:	00042880 	call	4288 <__smakebuf_r>
    92ac:	8100030b 	ldhu	r4,12(r16)
    92b0:	81400417 	ldw	r5,16(r16)
    92b4:	003fda06 	br	9220 <__swsetup_r+0x44>
    92b8:	2080040c 	andi	r2,r4,16
    92bc:	103fed26 	beq	r2,zero,9274 <__swsetup_r+0x98>
    92c0:	2080010c 	andi	r2,r4,4
    92c4:	10001226 	beq	r2,zero,9310 <__swsetup_r+0x134>
    92c8:	81400c17 	ldw	r5,48(r16)
    92cc:	28000526 	beq	r5,zero,92e4 <__swsetup_r+0x108>
    92d0:	80801004 	addi	r2,r16,64
    92d4:	28800226 	beq	r5,r2,92e0 <__swsetup_r+0x104>
    92d8:	8809883a 	mov	r4,r17
    92dc:	00039700 	call	3970 <_free_r>
    92e0:	80000c15 	stw	zero,48(r16)
    92e4:	8080030b 	ldhu	r2,12(r16)
    92e8:	81400417 	ldw	r5,16(r16)
    92ec:	80000115 	stw	zero,4(r16)
    92f0:	10bff6cc 	andi	r2,r2,65499
    92f4:	8080030d 	sth	r2,12(r16)
    92f8:	81400015 	stw	r5,0(r16)
    92fc:	8080030b 	ldhu	r2,12(r16)
    9300:	10800214 	ori	r2,r2,8
    9304:	113fffcc 	andi	r4,r2,65535
    9308:	8080030d 	sth	r2,12(r16)
    930c:	003fc306 	br	921c <__swsetup_r+0x40>
    9310:	81400417 	ldw	r5,16(r16)
    9314:	003ff906 	br	92fc <__swsetup_r+0x120>

00009318 <quorem>:
    9318:	28c00417 	ldw	r3,16(r5)
    931c:	20800417 	ldw	r2,16(r4)
    9320:	defff604 	addi	sp,sp,-40
    9324:	ddc00715 	stw	r23,28(sp)
    9328:	dd400515 	stw	r21,20(sp)
    932c:	dfc00915 	stw	ra,36(sp)
    9330:	df000815 	stw	fp,32(sp)
    9334:	dd800615 	stw	r22,24(sp)
    9338:	dd000415 	stw	r20,16(sp)
    933c:	dcc00315 	stw	r19,12(sp)
    9340:	dc800215 	stw	r18,8(sp)
    9344:	dc400115 	stw	r17,4(sp)
    9348:	dc000015 	stw	r16,0(sp)
    934c:	202f883a 	mov	r23,r4
    9350:	282b883a 	mov	r21,r5
    9354:	10c07416 	blt	r2,r3,9528 <quorem+0x210>
    9358:	1c7fffc4 	addi	r17,r3,-1
    935c:	8c45883a 	add	r2,r17,r17
    9360:	1085883a 	add	r2,r2,r2
    9364:	2c000504 	addi	r16,r5,20
    9368:	24c00504 	addi	r19,r4,20
    936c:	14ed883a 	add	r22,r2,r19
    9370:	80a5883a 	add	r18,r16,r2
    9374:	b7000017 	ldw	fp,0(r22)
    9378:	91400017 	ldw	r5,0(r18)
    937c:	e009883a 	mov	r4,fp
    9380:	29400044 	addi	r5,r5,1
    9384:	000e9cc0 	call	e9cc <__udivsi3>
    9388:	1029883a 	mov	r20,r2
    938c:	10003c1e 	bne	r2,zero,9480 <quorem+0x168>
    9390:	a80b883a 	mov	r5,r21
    9394:	b809883a 	mov	r4,r23
    9398:	000b8ac0 	call	b8ac <__mcmp>
    939c:	10002b16 	blt	r2,zero,944c <quorem+0x134>
    93a0:	a5000044 	addi	r20,r20,1
    93a4:	980f883a 	mov	r7,r19
    93a8:	0011883a 	mov	r8,zero
    93ac:	0009883a 	mov	r4,zero
    93b0:	81400017 	ldw	r5,0(r16)
    93b4:	38c00017 	ldw	r3,0(r7)
    93b8:	84000104 	addi	r16,r16,4
    93bc:	28bfffcc 	andi	r2,r5,65535
    93c0:	2085883a 	add	r2,r4,r2
    93c4:	11bfffcc 	andi	r6,r2,65535
    93c8:	193fffcc 	andi	r4,r3,65535
    93cc:	1004d43a 	srli	r2,r2,16
    93d0:	280ad43a 	srli	r5,r5,16
    93d4:	2189c83a 	sub	r4,r4,r6
    93d8:	2209883a 	add	r4,r4,r8
    93dc:	1806d43a 	srli	r3,r3,16
    93e0:	288b883a 	add	r5,r5,r2
    93e4:	200dd43a 	srai	r6,r4,16
    93e8:	28bfffcc 	andi	r2,r5,65535
    93ec:	1887c83a 	sub	r3,r3,r2
    93f0:	1987883a 	add	r3,r3,r6
    93f4:	3900000d 	sth	r4,0(r7)
    93f8:	38c0008d 	sth	r3,2(r7)
    93fc:	2808d43a 	srli	r4,r5,16
    9400:	39c00104 	addi	r7,r7,4
    9404:	1811d43a 	srai	r8,r3,16
    9408:	943fe92e 	bgeu	r18,r16,93b0 <quorem+0x98>
    940c:	8c45883a 	add	r2,r17,r17
    9410:	1085883a 	add	r2,r2,r2
    9414:	9885883a 	add	r2,r19,r2
    9418:	10c00017 	ldw	r3,0(r2)
    941c:	18000b1e 	bne	r3,zero,944c <quorem+0x134>
    9420:	113fff04 	addi	r4,r2,-4
    9424:	9900082e 	bgeu	r19,r4,9448 <quorem+0x130>
    9428:	10bfff17 	ldw	r2,-4(r2)
    942c:	10000326 	beq	r2,zero,943c <quorem+0x124>
    9430:	00000506 	br	9448 <quorem+0x130>
    9434:	20800017 	ldw	r2,0(r4)
    9438:	1000031e 	bne	r2,zero,9448 <quorem+0x130>
    943c:	213fff04 	addi	r4,r4,-4
    9440:	8c7fffc4 	addi	r17,r17,-1
    9444:	993ffb36 	bltu	r19,r4,9434 <quorem+0x11c>
    9448:	bc400415 	stw	r17,16(r23)
    944c:	a005883a 	mov	r2,r20
    9450:	dfc00917 	ldw	ra,36(sp)
    9454:	df000817 	ldw	fp,32(sp)
    9458:	ddc00717 	ldw	r23,28(sp)
    945c:	dd800617 	ldw	r22,24(sp)
    9460:	dd400517 	ldw	r21,20(sp)
    9464:	dd000417 	ldw	r20,16(sp)
    9468:	dcc00317 	ldw	r19,12(sp)
    946c:	dc800217 	ldw	r18,8(sp)
    9470:	dc400117 	ldw	r17,4(sp)
    9474:	dc000017 	ldw	r16,0(sp)
    9478:	dec00a04 	addi	sp,sp,40
    947c:	f800283a 	ret
    9480:	980f883a 	mov	r7,r19
    9484:	8011883a 	mov	r8,r16
    9488:	0013883a 	mov	r9,zero
    948c:	000d883a 	mov	r6,zero
    9490:	40c00017 	ldw	r3,0(r8)
    9494:	39000017 	ldw	r4,0(r7)
    9498:	42000104 	addi	r8,r8,4
    949c:	18bfffcc 	andi	r2,r3,65535
    94a0:	a085383a 	mul	r2,r20,r2
    94a4:	1806d43a 	srli	r3,r3,16
    94a8:	217fffcc 	andi	r5,r4,65535
    94ac:	3085883a 	add	r2,r6,r2
    94b0:	11bfffcc 	andi	r6,r2,65535
    94b4:	a0c7383a 	mul	r3,r20,r3
    94b8:	1004d43a 	srli	r2,r2,16
    94bc:	298bc83a 	sub	r5,r5,r6
    94c0:	2a4b883a 	add	r5,r5,r9
    94c4:	2008d43a 	srli	r4,r4,16
    94c8:	1887883a 	add	r3,r3,r2
    94cc:	280dd43a 	srai	r6,r5,16
    94d0:	18bfffcc 	andi	r2,r3,65535
    94d4:	2089c83a 	sub	r4,r4,r2
    94d8:	2189883a 	add	r4,r4,r6
    94dc:	3900008d 	sth	r4,2(r7)
    94e0:	3940000d 	sth	r5,0(r7)
    94e4:	180cd43a 	srli	r6,r3,16
    94e8:	39c00104 	addi	r7,r7,4
    94ec:	2013d43a 	srai	r9,r4,16
    94f0:	923fe72e 	bgeu	r18,r8,9490 <quorem+0x178>
    94f4:	e03fa61e 	bne	fp,zero,9390 <quorem+0x78>
    94f8:	b0ffff04 	addi	r3,r22,-4
    94fc:	98c0082e 	bgeu	r19,r3,9520 <quorem+0x208>
    9500:	b0bfff17 	ldw	r2,-4(r22)
    9504:	10000326 	beq	r2,zero,9514 <quorem+0x1fc>
    9508:	00000506 	br	9520 <quorem+0x208>
    950c:	18800017 	ldw	r2,0(r3)
    9510:	1000031e 	bne	r2,zero,9520 <quorem+0x208>
    9514:	18ffff04 	addi	r3,r3,-4
    9518:	8c7fffc4 	addi	r17,r17,-1
    951c:	98fffb36 	bltu	r19,r3,950c <quorem+0x1f4>
    9520:	bc400415 	stw	r17,16(r23)
    9524:	003f9a06 	br	9390 <quorem+0x78>
    9528:	0005883a 	mov	r2,zero
    952c:	003fc806 	br	9450 <quorem+0x138>

00009530 <_dtoa_r>:
    9530:	22001017 	ldw	r8,64(r4)
    9534:	deffda04 	addi	sp,sp,-152
    9538:	dd402115 	stw	r21,132(sp)
    953c:	dd002015 	stw	r20,128(sp)
    9540:	dc801e15 	stw	r18,120(sp)
    9544:	dc401d15 	stw	r17,116(sp)
    9548:	dfc02515 	stw	ra,148(sp)
    954c:	df002415 	stw	fp,144(sp)
    9550:	ddc02315 	stw	r23,140(sp)
    9554:	dd802215 	stw	r22,136(sp)
    9558:	dcc01f15 	stw	r19,124(sp)
    955c:	dc001c15 	stw	r16,112(sp)
    9560:	d9001615 	stw	r4,88(sp)
    9564:	3023883a 	mov	r17,r6
    9568:	2829883a 	mov	r20,r5
    956c:	d9c01715 	stw	r7,92(sp)
    9570:	dc802817 	ldw	r18,160(sp)
    9574:	302b883a 	mov	r21,r6
    9578:	40000a26 	beq	r8,zero,95a4 <_dtoa_r+0x74>
    957c:	20801117 	ldw	r2,68(r4)
    9580:	400b883a 	mov	r5,r8
    9584:	40800115 	stw	r2,4(r8)
    9588:	20c01117 	ldw	r3,68(r4)
    958c:	00800044 	movi	r2,1
    9590:	10c4983a 	sll	r2,r2,r3
    9594:	40800215 	stw	r2,8(r8)
    9598:	000b7500 	call	b750 <_Bfree>
    959c:	d8c01617 	ldw	r3,88(sp)
    95a0:	18001015 	stw	zero,64(r3)
    95a4:	8800a316 	blt	r17,zero,9834 <_dtoa_r+0x304>
    95a8:	90000015 	stw	zero,0(r18)
    95ac:	a8dffc2c 	andhi	r3,r21,32752
    95b0:	009ffc34 	movhi	r2,32752
    95b4:	18809126 	beq	r3,r2,97fc <_dtoa_r+0x2cc>
    95b8:	000d883a 	mov	r6,zero
    95bc:	000f883a 	mov	r7,zero
    95c0:	a009883a 	mov	r4,r20
    95c4:	a80b883a 	mov	r5,r21
    95c8:	dd001215 	stw	r20,72(sp)
    95cc:	dd401315 	stw	r21,76(sp)
    95d0:	000e2100 	call	e210 <__nedf2>
    95d4:	1000171e 	bne	r2,zero,9634 <_dtoa_r+0x104>
    95d8:	d9802717 	ldw	r6,156(sp)
    95dc:	00800044 	movi	r2,1
    95e0:	30800015 	stw	r2,0(r6)
    95e4:	d8802917 	ldw	r2,164(sp)
    95e8:	10029b26 	beq	r2,zero,a058 <_dtoa_r+0xb28>
    95ec:	d9002917 	ldw	r4,164(sp)
    95f0:	00800074 	movhi	r2,1
    95f4:	10882744 	addi	r2,r2,8349
    95f8:	10ffffc4 	addi	r3,r2,-1
    95fc:	20800015 	stw	r2,0(r4)
    9600:	1805883a 	mov	r2,r3
    9604:	dfc02517 	ldw	ra,148(sp)
    9608:	df002417 	ldw	fp,144(sp)
    960c:	ddc02317 	ldw	r23,140(sp)
    9610:	dd802217 	ldw	r22,136(sp)
    9614:	dd402117 	ldw	r21,132(sp)
    9618:	dd002017 	ldw	r20,128(sp)
    961c:	dcc01f17 	ldw	r19,124(sp)
    9620:	dc801e17 	ldw	r18,120(sp)
    9624:	dc401d17 	ldw	r17,116(sp)
    9628:	dc001c17 	ldw	r16,112(sp)
    962c:	dec02604 	addi	sp,sp,152
    9630:	f800283a 	ret
    9634:	d9001617 	ldw	r4,88(sp)
    9638:	d9401217 	ldw	r5,72(sp)
    963c:	d8800104 	addi	r2,sp,4
    9640:	a80d883a 	mov	r6,r21
    9644:	d9c00204 	addi	r7,sp,8
    9648:	d8800015 	stw	r2,0(sp)
    964c:	000bd8c0 	call	bd8c <__d2b>
    9650:	d8800715 	stw	r2,28(sp)
    9654:	a804d53a 	srli	r2,r21,20
    9658:	1101ffcc 	andi	r4,r2,2047
    965c:	20008626 	beq	r4,zero,9878 <_dtoa_r+0x348>
    9660:	d8c01217 	ldw	r3,72(sp)
    9664:	00800434 	movhi	r2,16
    9668:	10bfffc4 	addi	r2,r2,-1
    966c:	ddc00117 	ldw	r23,4(sp)
    9670:	a884703a 	and	r2,r21,r2
    9674:	1811883a 	mov	r8,r3
    9678:	124ffc34 	orhi	r9,r2,16368
    967c:	25bf0044 	addi	r22,r4,-1023
    9680:	d8000815 	stw	zero,32(sp)
    9684:	0005883a 	mov	r2,zero
    9688:	00cffe34 	movhi	r3,16376
    968c:	480b883a 	mov	r5,r9
    9690:	4009883a 	mov	r4,r8
    9694:	180f883a 	mov	r7,r3
    9698:	100d883a 	mov	r6,r2
    969c:	000da780 	call	da78 <__subdf3>
    96a0:	0218dbf4 	movhi	r8,25455
    96a4:	4210d844 	addi	r8,r8,17249
    96a8:	024ff4f4 	movhi	r9,16339
    96ac:	4a61e9c4 	addi	r9,r9,-30809
    96b0:	480f883a 	mov	r7,r9
    96b4:	400d883a 	mov	r6,r8
    96b8:	180b883a 	mov	r5,r3
    96bc:	1009883a 	mov	r4,r2
    96c0:	000db6c0 	call	db6c <__muldf3>
    96c4:	0222d874 	movhi	r8,35681
    96c8:	42322cc4 	addi	r8,r8,-14157
    96cc:	024ff1f4 	movhi	r9,16327
    96d0:	4a628a04 	addi	r9,r9,-30168
    96d4:	480f883a 	mov	r7,r9
    96d8:	400d883a 	mov	r6,r8
    96dc:	180b883a 	mov	r5,r3
    96e0:	1009883a 	mov	r4,r2
    96e4:	000daf80 	call	daf8 <__adddf3>
    96e8:	b009883a 	mov	r4,r22
    96ec:	1021883a 	mov	r16,r2
    96f0:	1823883a 	mov	r17,r3
    96f4:	000e4b80 	call	e4b8 <__floatsidf>
    96f8:	021427f4 	movhi	r8,20639
    96fc:	421e7ec4 	addi	r8,r8,31227
    9700:	024ff4f4 	movhi	r9,16339
    9704:	4a5104c4 	addi	r9,r9,17427
    9708:	480f883a 	mov	r7,r9
    970c:	400d883a 	mov	r6,r8
    9710:	180b883a 	mov	r5,r3
    9714:	1009883a 	mov	r4,r2
    9718:	000db6c0 	call	db6c <__muldf3>
    971c:	180f883a 	mov	r7,r3
    9720:	880b883a 	mov	r5,r17
    9724:	100d883a 	mov	r6,r2
    9728:	8009883a 	mov	r4,r16
    972c:	000daf80 	call	daf8 <__adddf3>
    9730:	1009883a 	mov	r4,r2
    9734:	180b883a 	mov	r5,r3
    9738:	1021883a 	mov	r16,r2
    973c:	1823883a 	mov	r17,r3
    9740:	000e5b00 	call	e5b0 <__fixdfsi>
    9744:	000d883a 	mov	r6,zero
    9748:	000f883a 	mov	r7,zero
    974c:	8009883a 	mov	r4,r16
    9750:	880b883a 	mov	r5,r17
    9754:	d8800d15 	stw	r2,52(sp)
    9758:	000e3a80 	call	e3a8 <__ltdf2>
    975c:	10031716 	blt	r2,zero,a3bc <_dtoa_r+0xe8c>
    9760:	d8c00d17 	ldw	r3,52(sp)
    9764:	00800584 	movi	r2,22
    9768:	10c1482e 	bgeu	r2,r3,9c8c <_dtoa_r+0x75c>
    976c:	01000044 	movi	r4,1
    9770:	d9000c15 	stw	r4,48(sp)
    9774:	bd85c83a 	sub	r2,r23,r22
    9778:	11bfffc4 	addi	r6,r2,-1
    977c:	30030b16 	blt	r6,zero,a3ac <_dtoa_r+0xe7c>
    9780:	d9800a15 	stw	r6,40(sp)
    9784:	d8001115 	stw	zero,68(sp)
    9788:	d8c00d17 	ldw	r3,52(sp)
    978c:	1802ff16 	blt	r3,zero,a38c <_dtoa_r+0xe5c>
    9790:	d9000a17 	ldw	r4,40(sp)
    9794:	d8c00915 	stw	r3,36(sp)
    9798:	d8001015 	stw	zero,64(sp)
    979c:	20c9883a 	add	r4,r4,r3
    97a0:	d9000a15 	stw	r4,40(sp)
    97a4:	d9001717 	ldw	r4,92(sp)
    97a8:	00800244 	movi	r2,9
    97ac:	11004636 	bltu	r2,r4,98c8 <_dtoa_r+0x398>
    97b0:	00800144 	movi	r2,5
    97b4:	11020416 	blt	r2,r4,9fc8 <_dtoa_r+0xa98>
    97b8:	04400044 	movi	r17,1
    97bc:	d8c01717 	ldw	r3,92(sp)
    97c0:	00800144 	movi	r2,5
    97c4:	10c1ed36 	bltu	r2,r3,9f7c <_dtoa_r+0xa4c>
    97c8:	18c5883a 	add	r2,r3,r3
    97cc:	1085883a 	add	r2,r2,r2
    97d0:	00c00074 	movhi	r3,1
    97d4:	18e5f904 	addi	r3,r3,-26652
    97d8:	10c5883a 	add	r2,r2,r3
    97dc:	11000017 	ldw	r4,0(r2)
    97e0:	2000683a 	jmp	r4
    97e4:	000098d0 	cmplti	zero,zero,611
    97e8:	000098d0 	cmplti	zero,zero,611
    97ec:	0000a2d0 	cmplti	zero,zero,651
    97f0:	0000a2a8 	cmpgeui	zero,zero,650
    97f4:	0000a2ec 	andhi	zero,zero,651
    97f8:	0000a2f8 	rdprs	zero,zero,651
    97fc:	d9002717 	ldw	r4,156(sp)
    9800:	0089c3c4 	movi	r2,9999
    9804:	20800015 	stw	r2,0(r4)
    9808:	a0001026 	beq	r20,zero,984c <_dtoa_r+0x31c>
    980c:	00c00074 	movhi	r3,1
    9810:	18c83304 	addi	r3,r3,8396
    9814:	d9802917 	ldw	r6,164(sp)
    9818:	303f7926 	beq	r6,zero,9600 <_dtoa_r+0xd0>
    981c:	188000c7 	ldb	r2,3(r3)
    9820:	190000c4 	addi	r4,r3,3
    9824:	1000101e 	bne	r2,zero,9868 <_dtoa_r+0x338>
    9828:	d8802917 	ldw	r2,164(sp)
    982c:	11000015 	stw	r4,0(r2)
    9830:	003f7306 	br	9600 <_dtoa_r+0xd0>
    9834:	00a00034 	movhi	r2,32768
    9838:	10bfffc4 	addi	r2,r2,-1
    983c:	00c00044 	movi	r3,1
    9840:	88aa703a 	and	r21,r17,r2
    9844:	90c00015 	stw	r3,0(r18)
    9848:	003f5806 	br	95ac <_dtoa_r+0x7c>
    984c:	00800434 	movhi	r2,16
    9850:	10bfffc4 	addi	r2,r2,-1
    9854:	a884703a 	and	r2,r21,r2
    9858:	103fec1e 	bne	r2,zero,980c <_dtoa_r+0x2dc>
    985c:	00c00074 	movhi	r3,1
    9860:	18c83004 	addi	r3,r3,8384
    9864:	003feb06 	br	9814 <_dtoa_r+0x2e4>
    9868:	d8802917 	ldw	r2,164(sp)
    986c:	19000204 	addi	r4,r3,8
    9870:	11000015 	stw	r4,0(r2)
    9874:	003f6206 	br	9600 <_dtoa_r+0xd0>
    9878:	ddc00117 	ldw	r23,4(sp)
    987c:	d8800217 	ldw	r2,8(sp)
    9880:	01000804 	movi	r4,32
    9884:	b8c10c84 	addi	r3,r23,1074
    9888:	18a3883a 	add	r17,r3,r2
    988c:	2441b80e 	bge	r4,r17,9f70 <_dtoa_r+0xa40>
    9890:	00c01004 	movi	r3,64
    9894:	1c47c83a 	sub	r3,r3,r17
    9898:	88bff804 	addi	r2,r17,-32
    989c:	a8c6983a 	sll	r3,r21,r3
    98a0:	a084d83a 	srl	r2,r20,r2
    98a4:	1888b03a 	or	r4,r3,r2
    98a8:	000e6fc0 	call	e6fc <__floatunsidf>
    98ac:	1011883a 	mov	r8,r2
    98b0:	00bf8434 	movhi	r2,65040
    98b4:	01000044 	movi	r4,1
    98b8:	10d3883a 	add	r9,r2,r3
    98bc:	8dbef344 	addi	r22,r17,-1075
    98c0:	d9000815 	stw	r4,32(sp)
    98c4:	003f6f06 	br	9684 <_dtoa_r+0x154>
    98c8:	d8001715 	stw	zero,92(sp)
    98cc:	04400044 	movi	r17,1
    98d0:	00bfffc4 	movi	r2,-1
    98d4:	00c00044 	movi	r3,1
    98d8:	d8800e15 	stw	r2,56(sp)
    98dc:	d8002615 	stw	zero,152(sp)
    98e0:	d8800f15 	stw	r2,60(sp)
    98e4:	d8c00b15 	stw	r3,44(sp)
    98e8:	1021883a 	mov	r16,r2
    98ec:	d8801617 	ldw	r2,88(sp)
    98f0:	10001115 	stw	zero,68(r2)
    98f4:	d8801617 	ldw	r2,88(sp)
    98f8:	11401117 	ldw	r5,68(r2)
    98fc:	1009883a 	mov	r4,r2
    9900:	000bcd00 	call	bcd0 <_Balloc>
    9904:	d8c01617 	ldw	r3,88(sp)
    9908:	d8800515 	stw	r2,20(sp)
    990c:	18801015 	stw	r2,64(r3)
    9910:	00800384 	movi	r2,14
    9914:	14006836 	bltu	r2,r16,9ab8 <_dtoa_r+0x588>
    9918:	8805003a 	cmpeq	r2,r17,zero
    991c:	1000661e 	bne	r2,zero,9ab8 <_dtoa_r+0x588>
    9920:	d9000d17 	ldw	r4,52(sp)
    9924:	0102300e 	bge	zero,r4,a1e8 <_dtoa_r+0xcb8>
    9928:	208003cc 	andi	r2,r4,15
    992c:	100490fa 	slli	r2,r2,3
    9930:	2025d13a 	srai	r18,r4,4
    9934:	00c00074 	movhi	r3,1
    9938:	18c83b04 	addi	r3,r3,8428
    993c:	10c5883a 	add	r2,r2,r3
    9940:	90c0040c 	andi	r3,r18,16
    9944:	14000017 	ldw	r16,0(r2)
    9948:	14400117 	ldw	r17,4(r2)
    994c:	18036a1e 	bne	r3,zero,a6f8 <_dtoa_r+0x11c8>
    9950:	05800084 	movi	r22,2
    9954:	90001026 	beq	r18,zero,9998 <_dtoa_r+0x468>
    9958:	04c00074 	movhi	r19,1
    995c:	9cc86d04 	addi	r19,r19,8628
    9960:	9080004c 	andi	r2,r18,1
    9964:	1005003a 	cmpeq	r2,r2,zero
    9968:	1000081e 	bne	r2,zero,998c <_dtoa_r+0x45c>
    996c:	99800017 	ldw	r6,0(r19)
    9970:	99c00117 	ldw	r7,4(r19)
    9974:	880b883a 	mov	r5,r17
    9978:	8009883a 	mov	r4,r16
    997c:	000db6c0 	call	db6c <__muldf3>
    9980:	1021883a 	mov	r16,r2
    9984:	b5800044 	addi	r22,r22,1
    9988:	1823883a 	mov	r17,r3
    998c:	9025d07a 	srai	r18,r18,1
    9990:	9cc00204 	addi	r19,r19,8
    9994:	903ff21e 	bne	r18,zero,9960 <_dtoa_r+0x430>
    9998:	a80b883a 	mov	r5,r21
    999c:	a009883a 	mov	r4,r20
    99a0:	880f883a 	mov	r7,r17
    99a4:	800d883a 	mov	r6,r16
    99a8:	000df300 	call	df30 <__divdf3>
    99ac:	1029883a 	mov	r20,r2
    99b0:	182b883a 	mov	r21,r3
    99b4:	d8c00c17 	ldw	r3,48(sp)
    99b8:	1805003a 	cmpeq	r2,r3,zero
    99bc:	1000081e 	bne	r2,zero,99e0 <_dtoa_r+0x4b0>
    99c0:	0005883a 	mov	r2,zero
    99c4:	00cffc34 	movhi	r3,16368
    99c8:	180f883a 	mov	r7,r3
    99cc:	a009883a 	mov	r4,r20
    99d0:	a80b883a 	mov	r5,r21
    99d4:	100d883a 	mov	r6,r2
    99d8:	000e3a80 	call	e3a8 <__ltdf2>
    99dc:	1003fe16 	blt	r2,zero,a9d8 <_dtoa_r+0x14a8>
    99e0:	b009883a 	mov	r4,r22
    99e4:	000e4b80 	call	e4b8 <__floatsidf>
    99e8:	180b883a 	mov	r5,r3
    99ec:	1009883a 	mov	r4,r2
    99f0:	a00d883a 	mov	r6,r20
    99f4:	a80f883a 	mov	r7,r21
    99f8:	000db6c0 	call	db6c <__muldf3>
    99fc:	0011883a 	mov	r8,zero
    9a00:	02500734 	movhi	r9,16412
    9a04:	1009883a 	mov	r4,r2
    9a08:	180b883a 	mov	r5,r3
    9a0c:	480f883a 	mov	r7,r9
    9a10:	400d883a 	mov	r6,r8
    9a14:	000daf80 	call	daf8 <__adddf3>
    9a18:	d9000f17 	ldw	r4,60(sp)
    9a1c:	102d883a 	mov	r22,r2
    9a20:	00bf3034 	movhi	r2,64704
    9a24:	18b9883a 	add	fp,r3,r2
    9a28:	e02f883a 	mov	r23,fp
    9a2c:	20028f1e 	bne	r4,zero,a46c <_dtoa_r+0xf3c>
    9a30:	0005883a 	mov	r2,zero
    9a34:	00d00534 	movhi	r3,16404
    9a38:	a009883a 	mov	r4,r20
    9a3c:	a80b883a 	mov	r5,r21
    9a40:	180f883a 	mov	r7,r3
    9a44:	100d883a 	mov	r6,r2
    9a48:	000da780 	call	da78 <__subdf3>
    9a4c:	1009883a 	mov	r4,r2
    9a50:	e00f883a 	mov	r7,fp
    9a54:	180b883a 	mov	r5,r3
    9a58:	b00d883a 	mov	r6,r22
    9a5c:	1025883a 	mov	r18,r2
    9a60:	1827883a 	mov	r19,r3
    9a64:	000e2980 	call	e298 <__gtdf2>
    9a68:	00834f16 	blt	zero,r2,a7a8 <_dtoa_r+0x1278>
    9a6c:	e0e0003c 	xorhi	r3,fp,32768
    9a70:	9009883a 	mov	r4,r18
    9a74:	980b883a 	mov	r5,r19
    9a78:	180f883a 	mov	r7,r3
    9a7c:	b00d883a 	mov	r6,r22
    9a80:	000e3a80 	call	e3a8 <__ltdf2>
    9a84:	1000080e 	bge	r2,zero,9aa8 <_dtoa_r+0x578>
    9a88:	0027883a 	mov	r19,zero
    9a8c:	0025883a 	mov	r18,zero
    9a90:	d8802617 	ldw	r2,152(sp)
    9a94:	df000517 	ldw	fp,20(sp)
    9a98:	d8000615 	stw	zero,24(sp)
    9a9c:	0084303a 	nor	r2,zero,r2
    9aa0:	d8800d15 	stw	r2,52(sp)
    9aa4:	00019b06 	br	a114 <_dtoa_r+0xbe4>
    9aa8:	d9801217 	ldw	r6,72(sp)
    9aac:	d8801317 	ldw	r2,76(sp)
    9ab0:	3029883a 	mov	r20,r6
    9ab4:	102b883a 	mov	r21,r2
    9ab8:	d8c00217 	ldw	r3,8(sp)
    9abc:	18008516 	blt	r3,zero,9cd4 <_dtoa_r+0x7a4>
    9ac0:	d9000d17 	ldw	r4,52(sp)
    9ac4:	00800384 	movi	r2,14
    9ac8:	11008216 	blt	r2,r4,9cd4 <_dtoa_r+0x7a4>
    9acc:	200490fa 	slli	r2,r4,3
    9ad0:	d9802617 	ldw	r6,152(sp)
    9ad4:	00c00074 	movhi	r3,1
    9ad8:	18c83b04 	addi	r3,r3,8428
    9adc:	10c5883a 	add	r2,r2,r3
    9ae0:	14800017 	ldw	r18,0(r2)
    9ae4:	14c00117 	ldw	r19,4(r2)
    9ae8:	30031e16 	blt	r6,zero,a764 <_dtoa_r+0x1234>
    9aec:	d9000517 	ldw	r4,20(sp)
    9af0:	d8c00f17 	ldw	r3,60(sp)
    9af4:	a823883a 	mov	r17,r21
    9af8:	a021883a 	mov	r16,r20
    9afc:	192b883a 	add	r21,r3,r4
    9b00:	2039883a 	mov	fp,r4
    9b04:	00000f06 	br	9b44 <_dtoa_r+0x614>
    9b08:	0005883a 	mov	r2,zero
    9b0c:	00d00934 	movhi	r3,16420
    9b10:	5009883a 	mov	r4,r10
    9b14:	580b883a 	mov	r5,r11
    9b18:	180f883a 	mov	r7,r3
    9b1c:	100d883a 	mov	r6,r2
    9b20:	000db6c0 	call	db6c <__muldf3>
    9b24:	180b883a 	mov	r5,r3
    9b28:	000d883a 	mov	r6,zero
    9b2c:	000f883a 	mov	r7,zero
    9b30:	1009883a 	mov	r4,r2
    9b34:	1021883a 	mov	r16,r2
    9b38:	1823883a 	mov	r17,r3
    9b3c:	000e2100 	call	e210 <__nedf2>
    9b40:	10004526 	beq	r2,zero,9c58 <_dtoa_r+0x728>
    9b44:	900d883a 	mov	r6,r18
    9b48:	980f883a 	mov	r7,r19
    9b4c:	8009883a 	mov	r4,r16
    9b50:	880b883a 	mov	r5,r17
    9b54:	000df300 	call	df30 <__divdf3>
    9b58:	180b883a 	mov	r5,r3
    9b5c:	1009883a 	mov	r4,r2
    9b60:	000e5b00 	call	e5b0 <__fixdfsi>
    9b64:	1009883a 	mov	r4,r2
    9b68:	1029883a 	mov	r20,r2
    9b6c:	000e4b80 	call	e4b8 <__floatsidf>
    9b70:	180f883a 	mov	r7,r3
    9b74:	9009883a 	mov	r4,r18
    9b78:	980b883a 	mov	r5,r19
    9b7c:	100d883a 	mov	r6,r2
    9b80:	000db6c0 	call	db6c <__muldf3>
    9b84:	180f883a 	mov	r7,r3
    9b88:	880b883a 	mov	r5,r17
    9b8c:	8009883a 	mov	r4,r16
    9b90:	100d883a 	mov	r6,r2
    9b94:	000da780 	call	da78 <__subdf3>
    9b98:	1015883a 	mov	r10,r2
    9b9c:	a0800c04 	addi	r2,r20,48
    9ba0:	e0800005 	stb	r2,0(fp)
    9ba4:	e7000044 	addi	fp,fp,1
    9ba8:	1817883a 	mov	r11,r3
    9bac:	e57fd61e 	bne	fp,r21,9b08 <_dtoa_r+0x5d8>
    9bb0:	500d883a 	mov	r6,r10
    9bb4:	180f883a 	mov	r7,r3
    9bb8:	5009883a 	mov	r4,r10
    9bbc:	180b883a 	mov	r5,r3
    9bc0:	000daf80 	call	daf8 <__adddf3>
    9bc4:	100d883a 	mov	r6,r2
    9bc8:	9009883a 	mov	r4,r18
    9bcc:	980b883a 	mov	r5,r19
    9bd0:	180f883a 	mov	r7,r3
    9bd4:	1021883a 	mov	r16,r2
    9bd8:	1823883a 	mov	r17,r3
    9bdc:	000e3a80 	call	e3a8 <__ltdf2>
    9be0:	10000816 	blt	r2,zero,9c04 <_dtoa_r+0x6d4>
    9be4:	980b883a 	mov	r5,r19
    9be8:	800d883a 	mov	r6,r16
    9bec:	880f883a 	mov	r7,r17
    9bf0:	9009883a 	mov	r4,r18
    9bf4:	000e1880 	call	e188 <__eqdf2>
    9bf8:	1000171e 	bne	r2,zero,9c58 <_dtoa_r+0x728>
    9bfc:	a080004c 	andi	r2,r20,1
    9c00:	10001526 	beq	r2,zero,9c58 <_dtoa_r+0x728>
    9c04:	d8800d17 	ldw	r2,52(sp)
    9c08:	d8800415 	stw	r2,16(sp)
    9c0c:	e009883a 	mov	r4,fp
    9c10:	213fffc4 	addi	r4,r4,-1
    9c14:	20c00007 	ldb	r3,0(r4)
    9c18:	00800e44 	movi	r2,57
    9c1c:	1880081e 	bne	r3,r2,9c40 <_dtoa_r+0x710>
    9c20:	d8800517 	ldw	r2,20(sp)
    9c24:	113ffa1e 	bne	r2,r4,9c10 <_dtoa_r+0x6e0>
    9c28:	d8c00417 	ldw	r3,16(sp)
    9c2c:	d9800517 	ldw	r6,20(sp)
    9c30:	00800c04 	movi	r2,48
    9c34:	18c00044 	addi	r3,r3,1
    9c38:	d8c00415 	stw	r3,16(sp)
    9c3c:	30800005 	stb	r2,0(r6)
    9c40:	20800003 	ldbu	r2,0(r4)
    9c44:	d8c00417 	ldw	r3,16(sp)
    9c48:	27000044 	addi	fp,r4,1
    9c4c:	10800044 	addi	r2,r2,1
    9c50:	d8c00d15 	stw	r3,52(sp)
    9c54:	20800005 	stb	r2,0(r4)
    9c58:	d9001617 	ldw	r4,88(sp)
    9c5c:	d9400717 	ldw	r5,28(sp)
    9c60:	000b7500 	call	b750 <_Bfree>
    9c64:	e0000005 	stb	zero,0(fp)
    9c68:	d9800d17 	ldw	r6,52(sp)
    9c6c:	d8c02717 	ldw	r3,156(sp)
    9c70:	d9002917 	ldw	r4,164(sp)
    9c74:	30800044 	addi	r2,r6,1
    9c78:	18800015 	stw	r2,0(r3)
    9c7c:	20029c26 	beq	r4,zero,a6f0 <_dtoa_r+0x11c0>
    9c80:	d8c00517 	ldw	r3,20(sp)
    9c84:	27000015 	stw	fp,0(r4)
    9c88:	003e5d06 	br	9600 <_dtoa_r+0xd0>
    9c8c:	d9800d17 	ldw	r6,52(sp)
    9c90:	00c00074 	movhi	r3,1
    9c94:	18c83b04 	addi	r3,r3,8428
    9c98:	d9001217 	ldw	r4,72(sp)
    9c9c:	300490fa 	slli	r2,r6,3
    9ca0:	d9401317 	ldw	r5,76(sp)
    9ca4:	10c5883a 	add	r2,r2,r3
    9ca8:	12000017 	ldw	r8,0(r2)
    9cac:	12400117 	ldw	r9,4(r2)
    9cb0:	400d883a 	mov	r6,r8
    9cb4:	480f883a 	mov	r7,r9
    9cb8:	000e3a80 	call	e3a8 <__ltdf2>
    9cbc:	1000030e 	bge	r2,zero,9ccc <_dtoa_r+0x79c>
    9cc0:	d8800d17 	ldw	r2,52(sp)
    9cc4:	10bfffc4 	addi	r2,r2,-1
    9cc8:	d8800d15 	stw	r2,52(sp)
    9ccc:	d8000c15 	stw	zero,48(sp)
    9cd0:	003ea806 	br	9774 <_dtoa_r+0x244>
    9cd4:	d9000b17 	ldw	r4,44(sp)
    9cd8:	202cc03a 	cmpne	r22,r4,zero
    9cdc:	b000c71e 	bne	r22,zero,9ffc <_dtoa_r+0xacc>
    9ce0:	dc001117 	ldw	r16,68(sp)
    9ce4:	dc801017 	ldw	r18,64(sp)
    9ce8:	0027883a 	mov	r19,zero
    9cec:	04000b0e 	bge	zero,r16,9d1c <_dtoa_r+0x7ec>
    9cf0:	d8c00a17 	ldw	r3,40(sp)
    9cf4:	00c0090e 	bge	zero,r3,9d1c <_dtoa_r+0x7ec>
    9cf8:	8005883a 	mov	r2,r16
    9cfc:	1c011316 	blt	r3,r16,a14c <_dtoa_r+0xc1c>
    9d00:	d9000a17 	ldw	r4,40(sp)
    9d04:	d9801117 	ldw	r6,68(sp)
    9d08:	80a1c83a 	sub	r16,r16,r2
    9d0c:	2089c83a 	sub	r4,r4,r2
    9d10:	308dc83a 	sub	r6,r6,r2
    9d14:	d9000a15 	stw	r4,40(sp)
    9d18:	d9801115 	stw	r6,68(sp)
    9d1c:	d8801017 	ldw	r2,64(sp)
    9d20:	0080150e 	bge	zero,r2,9d78 <_dtoa_r+0x848>
    9d24:	d8c00b17 	ldw	r3,44(sp)
    9d28:	1805003a 	cmpeq	r2,r3,zero
    9d2c:	1001c91e 	bne	r2,zero,a454 <_dtoa_r+0xf24>
    9d30:	04800e0e 	bge	zero,r18,9d6c <_dtoa_r+0x83c>
    9d34:	d9001617 	ldw	r4,88(sp)
    9d38:	980b883a 	mov	r5,r19
    9d3c:	900d883a 	mov	r6,r18
    9d40:	000c5040 	call	c504 <__pow5mult>
    9d44:	d9001617 	ldw	r4,88(sp)
    9d48:	d9800717 	ldw	r6,28(sp)
    9d4c:	100b883a 	mov	r5,r2
    9d50:	1027883a 	mov	r19,r2
    9d54:	000c1e00 	call	c1e0 <__multiply>
    9d58:	d9001617 	ldw	r4,88(sp)
    9d5c:	d9400717 	ldw	r5,28(sp)
    9d60:	1023883a 	mov	r17,r2
    9d64:	000b7500 	call	b750 <_Bfree>
    9d68:	dc400715 	stw	r17,28(sp)
    9d6c:	d9001017 	ldw	r4,64(sp)
    9d70:	248dc83a 	sub	r6,r4,r18
    9d74:	30010e1e 	bne	r6,zero,a1b0 <_dtoa_r+0xc80>
    9d78:	d9001617 	ldw	r4,88(sp)
    9d7c:	04400044 	movi	r17,1
    9d80:	880b883a 	mov	r5,r17
    9d84:	000c3c80 	call	c3c8 <__i2b>
    9d88:	d9800917 	ldw	r6,36(sp)
    9d8c:	1025883a 	mov	r18,r2
    9d90:	0180040e 	bge	zero,r6,9da4 <_dtoa_r+0x874>
    9d94:	d9001617 	ldw	r4,88(sp)
    9d98:	100b883a 	mov	r5,r2
    9d9c:	000c5040 	call	c504 <__pow5mult>
    9da0:	1025883a 	mov	r18,r2
    9da4:	d8801717 	ldw	r2,92(sp)
    9da8:	8880f30e 	bge	r17,r2,a178 <_dtoa_r+0xc48>
    9dac:	0023883a 	mov	r17,zero
    9db0:	d9800917 	ldw	r6,36(sp)
    9db4:	30019e1e 	bne	r6,zero,a430 <_dtoa_r+0xf00>
    9db8:	00c00044 	movi	r3,1
    9dbc:	d9000a17 	ldw	r4,40(sp)
    9dc0:	20c5883a 	add	r2,r4,r3
    9dc4:	10c007cc 	andi	r3,r2,31
    9dc8:	1800841e 	bne	r3,zero,9fdc <_dtoa_r+0xaac>
    9dcc:	00800704 	movi	r2,28
    9dd0:	d9000a17 	ldw	r4,40(sp)
    9dd4:	d9801117 	ldw	r6,68(sp)
    9dd8:	80a1883a 	add	r16,r16,r2
    9ddc:	2089883a 	add	r4,r4,r2
    9de0:	308d883a 	add	r6,r6,r2
    9de4:	d9000a15 	stw	r4,40(sp)
    9de8:	d9801115 	stw	r6,68(sp)
    9dec:	d8801117 	ldw	r2,68(sp)
    9df0:	0080050e 	bge	zero,r2,9e08 <_dtoa_r+0x8d8>
    9df4:	d9400717 	ldw	r5,28(sp)
    9df8:	d9001617 	ldw	r4,88(sp)
    9dfc:	100d883a 	mov	r6,r2
    9e00:	000c0940 	call	c094 <__lshift>
    9e04:	d8800715 	stw	r2,28(sp)
    9e08:	d8c00a17 	ldw	r3,40(sp)
    9e0c:	00c0050e 	bge	zero,r3,9e24 <_dtoa_r+0x8f4>
    9e10:	d9001617 	ldw	r4,88(sp)
    9e14:	900b883a 	mov	r5,r18
    9e18:	180d883a 	mov	r6,r3
    9e1c:	000c0940 	call	c094 <__lshift>
    9e20:	1025883a 	mov	r18,r2
    9e24:	d9000c17 	ldw	r4,48(sp)
    9e28:	2005003a 	cmpeq	r2,r4,zero
    9e2c:	10016f26 	beq	r2,zero,a3ec <_dtoa_r+0xebc>
    9e30:	d9000f17 	ldw	r4,60(sp)
    9e34:	0102170e 	bge	zero,r4,a694 <_dtoa_r+0x1164>
    9e38:	d9800b17 	ldw	r6,44(sp)
    9e3c:	3005003a 	cmpeq	r2,r6,zero
    9e40:	1000881e 	bne	r2,zero,a064 <_dtoa_r+0xb34>
    9e44:	0400050e 	bge	zero,r16,9e5c <_dtoa_r+0x92c>
    9e48:	d9001617 	ldw	r4,88(sp)
    9e4c:	980b883a 	mov	r5,r19
    9e50:	800d883a 	mov	r6,r16
    9e54:	000c0940 	call	c094 <__lshift>
    9e58:	1027883a 	mov	r19,r2
    9e5c:	8804c03a 	cmpne	r2,r17,zero
    9e60:	1002541e 	bne	r2,zero,a7b4 <_dtoa_r+0x1284>
    9e64:	980b883a 	mov	r5,r19
    9e68:	dd800517 	ldw	r22,20(sp)
    9e6c:	dcc00615 	stw	r19,24(sp)
    9e70:	a700004c 	andi	fp,r20,1
    9e74:	2827883a 	mov	r19,r5
    9e78:	d9000717 	ldw	r4,28(sp)
    9e7c:	900b883a 	mov	r5,r18
    9e80:	00093180 	call	9318 <quorem>
    9e84:	d9000717 	ldw	r4,28(sp)
    9e88:	d9400617 	ldw	r5,24(sp)
    9e8c:	1023883a 	mov	r17,r2
    9e90:	8dc00c04 	addi	r23,r17,48
    9e94:	000b8ac0 	call	b8ac <__mcmp>
    9e98:	d9001617 	ldw	r4,88(sp)
    9e9c:	900b883a 	mov	r5,r18
    9ea0:	980d883a 	mov	r6,r19
    9ea4:	1029883a 	mov	r20,r2
    9ea8:	000bf080 	call	bf08 <__mdiff>
    9eac:	102b883a 	mov	r21,r2
    9eb0:	10800317 	ldw	r2,12(r2)
    9eb4:	1001281e 	bne	r2,zero,a358 <_dtoa_r+0xe28>
    9eb8:	d9000717 	ldw	r4,28(sp)
    9ebc:	a80b883a 	mov	r5,r21
    9ec0:	000b8ac0 	call	b8ac <__mcmp>
    9ec4:	d9001617 	ldw	r4,88(sp)
    9ec8:	1021883a 	mov	r16,r2
    9ecc:	a80b883a 	mov	r5,r21
    9ed0:	000b7500 	call	b750 <_Bfree>
    9ed4:	8000041e 	bne	r16,zero,9ee8 <_dtoa_r+0x9b8>
    9ed8:	d8801717 	ldw	r2,92(sp)
    9edc:	1000021e 	bne	r2,zero,9ee8 <_dtoa_r+0x9b8>
    9ee0:	e004c03a 	cmpne	r2,fp,zero
    9ee4:	10011726 	beq	r2,zero,a344 <_dtoa_r+0xe14>
    9ee8:	a0010616 	blt	r20,zero,a304 <_dtoa_r+0xdd4>
    9eec:	a000041e 	bne	r20,zero,9f00 <_dtoa_r+0x9d0>
    9ef0:	d8c01717 	ldw	r3,92(sp)
    9ef4:	1800021e 	bne	r3,zero,9f00 <_dtoa_r+0x9d0>
    9ef8:	e004c03a 	cmpne	r2,fp,zero
    9efc:	10010126 	beq	r2,zero,a304 <_dtoa_r+0xdd4>
    9f00:	04023d16 	blt	zero,r16,a7f8 <_dtoa_r+0x12c8>
    9f04:	b5c00005 	stb	r23,0(r22)
    9f08:	d9800517 	ldw	r6,20(sp)
    9f0c:	d9000f17 	ldw	r4,60(sp)
    9f10:	b5800044 	addi	r22,r22,1
    9f14:	3105883a 	add	r2,r6,r4
    9f18:	b0806526 	beq	r22,r2,a0b0 <_dtoa_r+0xb80>
    9f1c:	d9400717 	ldw	r5,28(sp)
    9f20:	d9001617 	ldw	r4,88(sp)
    9f24:	01800284 	movi	r6,10
    9f28:	000f883a 	mov	r7,zero
    9f2c:	000c4040 	call	c404 <__multadd>
    9f30:	d8800715 	stw	r2,28(sp)
    9f34:	d8800617 	ldw	r2,24(sp)
    9f38:	14c10c26 	beq	r2,r19,a36c <_dtoa_r+0xe3c>
    9f3c:	d9400617 	ldw	r5,24(sp)
    9f40:	d9001617 	ldw	r4,88(sp)
    9f44:	01800284 	movi	r6,10
    9f48:	000f883a 	mov	r7,zero
    9f4c:	000c4040 	call	c404 <__multadd>
    9f50:	d9001617 	ldw	r4,88(sp)
    9f54:	980b883a 	mov	r5,r19
    9f58:	01800284 	movi	r6,10
    9f5c:	000f883a 	mov	r7,zero
    9f60:	d8800615 	stw	r2,24(sp)
    9f64:	000c4040 	call	c404 <__multadd>
    9f68:	1027883a 	mov	r19,r2
    9f6c:	003fc206 	br	9e78 <_dtoa_r+0x948>
    9f70:	2445c83a 	sub	r2,r4,r17
    9f74:	a088983a 	sll	r4,r20,r2
    9f78:	003e4b06 	br	98a8 <_dtoa_r+0x378>
    9f7c:	01bfffc4 	movi	r6,-1
    9f80:	00800044 	movi	r2,1
    9f84:	d9800e15 	stw	r6,56(sp)
    9f88:	d9800f15 	stw	r6,60(sp)
    9f8c:	d8800b15 	stw	r2,44(sp)
    9f90:	d8c01617 	ldw	r3,88(sp)
    9f94:	008005c4 	movi	r2,23
    9f98:	18001115 	stw	zero,68(r3)
    9f9c:	1580082e 	bgeu	r2,r22,9fc0 <_dtoa_r+0xa90>
    9fa0:	00c00104 	movi	r3,4
    9fa4:	0009883a 	mov	r4,zero
    9fa8:	18c7883a 	add	r3,r3,r3
    9fac:	18800504 	addi	r2,r3,20
    9fb0:	21000044 	addi	r4,r4,1
    9fb4:	b0bffc2e 	bgeu	r22,r2,9fa8 <_dtoa_r+0xa78>
    9fb8:	d9801617 	ldw	r6,88(sp)
    9fbc:	31001115 	stw	r4,68(r6)
    9fc0:	dc000f17 	ldw	r16,60(sp)
    9fc4:	003e4b06 	br	98f4 <_dtoa_r+0x3c4>
    9fc8:	d9801717 	ldw	r6,92(sp)
    9fcc:	0023883a 	mov	r17,zero
    9fd0:	31bfff04 	addi	r6,r6,-4
    9fd4:	d9801715 	stw	r6,92(sp)
    9fd8:	003df806 	br	97bc <_dtoa_r+0x28c>
    9fdc:	00800804 	movi	r2,32
    9fe0:	10c9c83a 	sub	r4,r2,r3
    9fe4:	00c00104 	movi	r3,4
    9fe8:	19005a16 	blt	r3,r4,a154 <_dtoa_r+0xc24>
    9fec:	008000c4 	movi	r2,3
    9ff0:	113f7e16 	blt	r2,r4,9dec <_dtoa_r+0x8bc>
    9ff4:	20800704 	addi	r2,r4,28
    9ff8:	003f7506 	br	9dd0 <_dtoa_r+0x8a0>
    9ffc:	d9801717 	ldw	r6,92(sp)
    a000:	00800044 	movi	r2,1
    a004:	1180a10e 	bge	r2,r6,a28c <_dtoa_r+0xd5c>
    a008:	d9800f17 	ldw	r6,60(sp)
    a00c:	d8c01017 	ldw	r3,64(sp)
    a010:	30bfffc4 	addi	r2,r6,-1
    a014:	1881c616 	blt	r3,r2,a730 <_dtoa_r+0x1200>
    a018:	18a5c83a 	sub	r18,r3,r2
    a01c:	d8800f17 	ldw	r2,60(sp)
    a020:	10026216 	blt	r2,zero,a9ac <_dtoa_r+0x147c>
    a024:	dc001117 	ldw	r16,68(sp)
    a028:	1007883a 	mov	r3,r2
    a02c:	d9800a17 	ldw	r6,40(sp)
    a030:	d8801117 	ldw	r2,68(sp)
    a034:	d9001617 	ldw	r4,88(sp)
    a038:	30cd883a 	add	r6,r6,r3
    a03c:	10c5883a 	add	r2,r2,r3
    a040:	01400044 	movi	r5,1
    a044:	d9800a15 	stw	r6,40(sp)
    a048:	d8801115 	stw	r2,68(sp)
    a04c:	000c3c80 	call	c3c8 <__i2b>
    a050:	1027883a 	mov	r19,r2
    a054:	003f2506 	br	9cec <_dtoa_r+0x7bc>
    a058:	00c00074 	movhi	r3,1
    a05c:	18c82704 	addi	r3,r3,8348
    a060:	003d6706 	br	9600 <_dtoa_r+0xd0>
    a064:	dd800517 	ldw	r22,20(sp)
    a068:	04000044 	movi	r16,1
    a06c:	00000706 	br	a08c <_dtoa_r+0xb5c>
    a070:	d9400717 	ldw	r5,28(sp)
    a074:	d9001617 	ldw	r4,88(sp)
    a078:	01800284 	movi	r6,10
    a07c:	000f883a 	mov	r7,zero
    a080:	000c4040 	call	c404 <__multadd>
    a084:	d8800715 	stw	r2,28(sp)
    a088:	84000044 	addi	r16,r16,1
    a08c:	d9000717 	ldw	r4,28(sp)
    a090:	900b883a 	mov	r5,r18
    a094:	00093180 	call	9318 <quorem>
    a098:	15c00c04 	addi	r23,r2,48
    a09c:	b5c00005 	stb	r23,0(r22)
    a0a0:	d8c00f17 	ldw	r3,60(sp)
    a0a4:	b5800044 	addi	r22,r22,1
    a0a8:	80fff116 	blt	r16,r3,a070 <_dtoa_r+0xb40>
    a0ac:	d8000615 	stw	zero,24(sp)
    a0b0:	d9400717 	ldw	r5,28(sp)
    a0b4:	d9001617 	ldw	r4,88(sp)
    a0b8:	01800044 	movi	r6,1
    a0bc:	000c0940 	call	c094 <__lshift>
    a0c0:	1009883a 	mov	r4,r2
    a0c4:	900b883a 	mov	r5,r18
    a0c8:	d8800715 	stw	r2,28(sp)
    a0cc:	000b8ac0 	call	b8ac <__mcmp>
    a0d0:	00803c0e 	bge	zero,r2,a1c4 <_dtoa_r+0xc94>
    a0d4:	b009883a 	mov	r4,r22
    a0d8:	213fffc4 	addi	r4,r4,-1
    a0dc:	21400003 	ldbu	r5,0(r4)
    a0e0:	00800e44 	movi	r2,57
    a0e4:	28c03fcc 	andi	r3,r5,255
    a0e8:	18c0201c 	xori	r3,r3,128
    a0ec:	18ffe004 	addi	r3,r3,-128
    a0f0:	1881981e 	bne	r3,r2,a754 <_dtoa_r+0x1224>
    a0f4:	d9800517 	ldw	r6,20(sp)
    a0f8:	21bff71e 	bne	r4,r6,a0d8 <_dtoa_r+0xba8>
    a0fc:	d8800d17 	ldw	r2,52(sp)
    a100:	37000044 	addi	fp,r6,1
    a104:	10800044 	addi	r2,r2,1
    a108:	d8800d15 	stw	r2,52(sp)
    a10c:	00800c44 	movi	r2,49
    a110:	30800005 	stb	r2,0(r6)
    a114:	d9001617 	ldw	r4,88(sp)
    a118:	900b883a 	mov	r5,r18
    a11c:	000b7500 	call	b750 <_Bfree>
    a120:	983ecd26 	beq	r19,zero,9c58 <_dtoa_r+0x728>
    a124:	d8c00617 	ldw	r3,24(sp)
    a128:	18000426 	beq	r3,zero,a13c <_dtoa_r+0xc0c>
    a12c:	1cc00326 	beq	r3,r19,a13c <_dtoa_r+0xc0c>
    a130:	d9001617 	ldw	r4,88(sp)
    a134:	180b883a 	mov	r5,r3
    a138:	000b7500 	call	b750 <_Bfree>
    a13c:	d9001617 	ldw	r4,88(sp)
    a140:	980b883a 	mov	r5,r19
    a144:	000b7500 	call	b750 <_Bfree>
    a148:	003ec306 	br	9c58 <_dtoa_r+0x728>
    a14c:	1805883a 	mov	r2,r3
    a150:	003eeb06 	br	9d00 <_dtoa_r+0x7d0>
    a154:	d9800a17 	ldw	r6,40(sp)
    a158:	d8c01117 	ldw	r3,68(sp)
    a15c:	20bfff04 	addi	r2,r4,-4
    a160:	308d883a 	add	r6,r6,r2
    a164:	1887883a 	add	r3,r3,r2
    a168:	80a1883a 	add	r16,r16,r2
    a16c:	d9800a15 	stw	r6,40(sp)
    a170:	d8c01115 	stw	r3,68(sp)
    a174:	003f1d06 	br	9dec <_dtoa_r+0x8bc>
    a178:	a03f0c1e 	bne	r20,zero,9dac <_dtoa_r+0x87c>
    a17c:	00800434 	movhi	r2,16
    a180:	10bfffc4 	addi	r2,r2,-1
    a184:	a884703a 	and	r2,r21,r2
    a188:	103f081e 	bne	r2,zero,9dac <_dtoa_r+0x87c>
    a18c:	a89ffc2c 	andhi	r2,r21,32752
    a190:	103f0626 	beq	r2,zero,9dac <_dtoa_r+0x87c>
    a194:	d8c01117 	ldw	r3,68(sp)
    a198:	d9000a17 	ldw	r4,40(sp)
    a19c:	18c00044 	addi	r3,r3,1
    a1a0:	21000044 	addi	r4,r4,1
    a1a4:	d8c01115 	stw	r3,68(sp)
    a1a8:	d9000a15 	stw	r4,40(sp)
    a1ac:	003f0006 	br	9db0 <_dtoa_r+0x880>
    a1b0:	d9400717 	ldw	r5,28(sp)
    a1b4:	d9001617 	ldw	r4,88(sp)
    a1b8:	000c5040 	call	c504 <__pow5mult>
    a1bc:	d8800715 	stw	r2,28(sp)
    a1c0:	003eed06 	br	9d78 <_dtoa_r+0x848>
    a1c4:	1000021e 	bne	r2,zero,a1d0 <_dtoa_r+0xca0>
    a1c8:	b880004c 	andi	r2,r23,1
    a1cc:	103fc11e 	bne	r2,zero,a0d4 <_dtoa_r+0xba4>
    a1d0:	b5bfffc4 	addi	r22,r22,-1
    a1d4:	b0c00007 	ldb	r3,0(r22)
    a1d8:	00800c04 	movi	r2,48
    a1dc:	18bffc26 	beq	r3,r2,a1d0 <_dtoa_r+0xca0>
    a1e0:	b7000044 	addi	fp,r22,1
    a1e4:	003fcb06 	br	a114 <_dtoa_r+0xbe4>
    a1e8:	d9800d17 	ldw	r6,52(sp)
    a1ec:	018fc83a 	sub	r7,zero,r6
    a1f0:	3801f726 	beq	r7,zero,a9d0 <_dtoa_r+0x14a0>
    a1f4:	398003cc 	andi	r6,r7,15
    a1f8:	300c90fa 	slli	r6,r6,3
    a1fc:	01400074 	movhi	r5,1
    a200:	29483b04 	addi	r5,r5,8428
    a204:	d9001217 	ldw	r4,72(sp)
    a208:	314d883a 	add	r6,r6,r5
    a20c:	30c00117 	ldw	r3,4(r6)
    a210:	30800017 	ldw	r2,0(r6)
    a214:	d9401317 	ldw	r5,76(sp)
    a218:	3821d13a 	srai	r16,r7,4
    a21c:	100d883a 	mov	r6,r2
    a220:	180f883a 	mov	r7,r3
    a224:	000db6c0 	call	db6c <__muldf3>
    a228:	1011883a 	mov	r8,r2
    a22c:	1813883a 	mov	r9,r3
    a230:	1029883a 	mov	r20,r2
    a234:	182b883a 	mov	r21,r3
    a238:	8001e526 	beq	r16,zero,a9d0 <_dtoa_r+0x14a0>
    a23c:	05800084 	movi	r22,2
    a240:	04400074 	movhi	r17,1
    a244:	8c486d04 	addi	r17,r17,8628
    a248:	8080004c 	andi	r2,r16,1
    a24c:	1005003a 	cmpeq	r2,r2,zero
    a250:	1000081e 	bne	r2,zero,a274 <_dtoa_r+0xd44>
    a254:	89800017 	ldw	r6,0(r17)
    a258:	89c00117 	ldw	r7,4(r17)
    a25c:	480b883a 	mov	r5,r9
    a260:	4009883a 	mov	r4,r8
    a264:	000db6c0 	call	db6c <__muldf3>
    a268:	1011883a 	mov	r8,r2
    a26c:	b5800044 	addi	r22,r22,1
    a270:	1813883a 	mov	r9,r3
    a274:	8021d07a 	srai	r16,r16,1
    a278:	8c400204 	addi	r17,r17,8
    a27c:	803ff21e 	bne	r16,zero,a248 <_dtoa_r+0xd18>
    a280:	4029883a 	mov	r20,r8
    a284:	482b883a 	mov	r21,r9
    a288:	003dca06 	br	99b4 <_dtoa_r+0x484>
    a28c:	d9000817 	ldw	r4,32(sp)
    a290:	2005003a 	cmpeq	r2,r4,zero
    a294:	1001f61e 	bne	r2,zero,aa70 <_dtoa_r+0x1540>
    a298:	dc001117 	ldw	r16,68(sp)
    a29c:	dc801017 	ldw	r18,64(sp)
    a2a0:	18c10cc4 	addi	r3,r3,1075
    a2a4:	003f6106 	br	a02c <_dtoa_r+0xafc>
    a2a8:	d8000b15 	stw	zero,44(sp)
    a2ac:	d9802617 	ldw	r6,152(sp)
    a2b0:	d8c00d17 	ldw	r3,52(sp)
    a2b4:	30800044 	addi	r2,r6,1
    a2b8:	18ad883a 	add	r22,r3,r2
    a2bc:	b13fffc4 	addi	r4,r22,-1
    a2c0:	d9000e15 	stw	r4,56(sp)
    a2c4:	0581f60e 	bge	zero,r22,aaa0 <_dtoa_r+0x1570>
    a2c8:	dd800f15 	stw	r22,60(sp)
    a2cc:	003f3006 	br	9f90 <_dtoa_r+0xa60>
    a2d0:	d8000b15 	stw	zero,44(sp)
    a2d4:	d9002617 	ldw	r4,152(sp)
    a2d8:	0101eb0e 	bge	zero,r4,aa88 <_dtoa_r+0x1558>
    a2dc:	202d883a 	mov	r22,r4
    a2e0:	d9000e15 	stw	r4,56(sp)
    a2e4:	d9000f15 	stw	r4,60(sp)
    a2e8:	003f2906 	br	9f90 <_dtoa_r+0xa60>
    a2ec:	01800044 	movi	r6,1
    a2f0:	d9800b15 	stw	r6,44(sp)
    a2f4:	003ff706 	br	a2d4 <_dtoa_r+0xda4>
    a2f8:	01000044 	movi	r4,1
    a2fc:	d9000b15 	stw	r4,44(sp)
    a300:	003fea06 	br	a2ac <_dtoa_r+0xd7c>
    a304:	04000c0e 	bge	zero,r16,a338 <_dtoa_r+0xe08>
    a308:	d9400717 	ldw	r5,28(sp)
    a30c:	d9001617 	ldw	r4,88(sp)
    a310:	01800044 	movi	r6,1
    a314:	000c0940 	call	c094 <__lshift>
    a318:	1009883a 	mov	r4,r2
    a31c:	900b883a 	mov	r5,r18
    a320:	d8800715 	stw	r2,28(sp)
    a324:	000b8ac0 	call	b8ac <__mcmp>
    a328:	0081e00e 	bge	zero,r2,aaac <_dtoa_r+0x157c>
    a32c:	bdc00044 	addi	r23,r23,1
    a330:	00800e84 	movi	r2,58
    a334:	b881a226 	beq	r23,r2,a9c0 <_dtoa_r+0x1490>
    a338:	b7000044 	addi	fp,r22,1
    a33c:	b5c00005 	stb	r23,0(r22)
    a340:	003f7406 	br	a114 <_dtoa_r+0xbe4>
    a344:	00800e44 	movi	r2,57
    a348:	b8819d26 	beq	r23,r2,a9c0 <_dtoa_r+0x1490>
    a34c:	053ffa0e 	bge	zero,r20,a338 <_dtoa_r+0xe08>
    a350:	8dc00c44 	addi	r23,r17,49
    a354:	003ff806 	br	a338 <_dtoa_r+0xe08>
    a358:	d9001617 	ldw	r4,88(sp)
    a35c:	a80b883a 	mov	r5,r21
    a360:	04000044 	movi	r16,1
    a364:	000b7500 	call	b750 <_Bfree>
    a368:	003edf06 	br	9ee8 <_dtoa_r+0x9b8>
    a36c:	d9001617 	ldw	r4,88(sp)
    a370:	980b883a 	mov	r5,r19
    a374:	01800284 	movi	r6,10
    a378:	000f883a 	mov	r7,zero
    a37c:	000c4040 	call	c404 <__multadd>
    a380:	1027883a 	mov	r19,r2
    a384:	d8800615 	stw	r2,24(sp)
    a388:	003ebb06 	br	9e78 <_dtoa_r+0x948>
    a38c:	d9801117 	ldw	r6,68(sp)
    a390:	d8800d17 	ldw	r2,52(sp)
    a394:	d8000915 	stw	zero,36(sp)
    a398:	308dc83a 	sub	r6,r6,r2
    a39c:	0087c83a 	sub	r3,zero,r2
    a3a0:	d9801115 	stw	r6,68(sp)
    a3a4:	d8c01015 	stw	r3,64(sp)
    a3a8:	003cfe06 	br	97a4 <_dtoa_r+0x274>
    a3ac:	018dc83a 	sub	r6,zero,r6
    a3b0:	d9801115 	stw	r6,68(sp)
    a3b4:	d8000a15 	stw	zero,40(sp)
    a3b8:	003cf306 	br	9788 <_dtoa_r+0x258>
    a3bc:	d9000d17 	ldw	r4,52(sp)
    a3c0:	000e4b80 	call	e4b8 <__floatsidf>
    a3c4:	880b883a 	mov	r5,r17
    a3c8:	8009883a 	mov	r4,r16
    a3cc:	180f883a 	mov	r7,r3
    a3d0:	100d883a 	mov	r6,r2
    a3d4:	000e2100 	call	e210 <__nedf2>
    a3d8:	103ce126 	beq	r2,zero,9760 <_dtoa_r+0x230>
    a3dc:	d9800d17 	ldw	r6,52(sp)
    a3e0:	31bfffc4 	addi	r6,r6,-1
    a3e4:	d9800d15 	stw	r6,52(sp)
    a3e8:	003cdd06 	br	9760 <_dtoa_r+0x230>
    a3ec:	d9000717 	ldw	r4,28(sp)
    a3f0:	900b883a 	mov	r5,r18
    a3f4:	000b8ac0 	call	b8ac <__mcmp>
    a3f8:	103e8d0e 	bge	r2,zero,9e30 <_dtoa_r+0x900>
    a3fc:	d9400717 	ldw	r5,28(sp)
    a400:	d9001617 	ldw	r4,88(sp)
    a404:	01800284 	movi	r6,10
    a408:	000f883a 	mov	r7,zero
    a40c:	000c4040 	call	c404 <__multadd>
    a410:	d9800d17 	ldw	r6,52(sp)
    a414:	d8800715 	stw	r2,28(sp)
    a418:	31bfffc4 	addi	r6,r6,-1
    a41c:	d9800d15 	stw	r6,52(sp)
    a420:	b001a71e 	bne	r22,zero,aac0 <_dtoa_r+0x1590>
    a424:	d8800e17 	ldw	r2,56(sp)
    a428:	d8800f15 	stw	r2,60(sp)
    a42c:	003e8006 	br	9e30 <_dtoa_r+0x900>
    a430:	90800417 	ldw	r2,16(r18)
    a434:	1085883a 	add	r2,r2,r2
    a438:	1085883a 	add	r2,r2,r2
    a43c:	1485883a 	add	r2,r2,r18
    a440:	11000417 	ldw	r4,16(r2)
    a444:	000b7780 	call	b778 <__hi0bits>
    a448:	00c00804 	movi	r3,32
    a44c:	1887c83a 	sub	r3,r3,r2
    a450:	003e5a06 	br	9dbc <_dtoa_r+0x88c>
    a454:	d9400717 	ldw	r5,28(sp)
    a458:	d9801017 	ldw	r6,64(sp)
    a45c:	d9001617 	ldw	r4,88(sp)
    a460:	000c5040 	call	c504 <__pow5mult>
    a464:	d8800715 	stw	r2,28(sp)
    a468:	003e4306 	br	9d78 <_dtoa_r+0x848>
    a46c:	d9800f17 	ldw	r6,60(sp)
    a470:	d8800d17 	ldw	r2,52(sp)
    a474:	d9800315 	stw	r6,12(sp)
    a478:	d8800415 	stw	r2,16(sp)
    a47c:	d8c00b17 	ldw	r3,44(sp)
    a480:	1805003a 	cmpeq	r2,r3,zero
    a484:	1000e21e 	bne	r2,zero,a810 <_dtoa_r+0x12e0>
    a488:	d9000317 	ldw	r4,12(sp)
    a48c:	0005883a 	mov	r2,zero
    a490:	00cff834 	movhi	r3,16352
    a494:	200c90fa 	slli	r6,r4,3
    a498:	01000074 	movhi	r4,1
    a49c:	21083b04 	addi	r4,r4,8428
    a4a0:	180b883a 	mov	r5,r3
    a4a4:	310d883a 	add	r6,r6,r4
    a4a8:	327fff17 	ldw	r9,-4(r6)
    a4ac:	323ffe17 	ldw	r8,-8(r6)
    a4b0:	1009883a 	mov	r4,r2
    a4b4:	480f883a 	mov	r7,r9
    a4b8:	400d883a 	mov	r6,r8
    a4bc:	000df300 	call	df30 <__divdf3>
    a4c0:	180b883a 	mov	r5,r3
    a4c4:	b00d883a 	mov	r6,r22
    a4c8:	b80f883a 	mov	r7,r23
    a4cc:	1009883a 	mov	r4,r2
    a4d0:	000da780 	call	da78 <__subdf3>
    a4d4:	a80b883a 	mov	r5,r21
    a4d8:	a009883a 	mov	r4,r20
    a4dc:	d8c01915 	stw	r3,100(sp)
    a4e0:	d8801815 	stw	r2,96(sp)
    a4e4:	000e5b00 	call	e5b0 <__fixdfsi>
    a4e8:	1009883a 	mov	r4,r2
    a4ec:	1027883a 	mov	r19,r2
    a4f0:	000e4b80 	call	e4b8 <__floatsidf>
    a4f4:	a80b883a 	mov	r5,r21
    a4f8:	a009883a 	mov	r4,r20
    a4fc:	180f883a 	mov	r7,r3
    a500:	100d883a 	mov	r6,r2
    a504:	000da780 	call	da78 <__subdf3>
    a508:	d9801817 	ldw	r6,96(sp)
    a50c:	1823883a 	mov	r17,r3
    a510:	d8801415 	stw	r2,80(sp)
    a514:	302d883a 	mov	r22,r6
    a518:	d9800517 	ldw	r6,20(sp)
    a51c:	9cc00c04 	addi	r19,r19,48
    a520:	dc401515 	stw	r17,84(sp)
    a524:	d8c01917 	ldw	r3,100(sp)
    a528:	34c00005 	stb	r19,0(r6)
    a52c:	d8800517 	ldw	r2,20(sp)
    a530:	d9401917 	ldw	r5,100(sp)
    a534:	d9801417 	ldw	r6,80(sp)
    a538:	b009883a 	mov	r4,r22
    a53c:	880f883a 	mov	r7,r17
    a540:	182f883a 	mov	r23,r3
    a544:	17000044 	addi	fp,r2,1
    a548:	000e2980 	call	e298 <__gtdf2>
    a54c:	00804e16 	blt	zero,r2,a688 <_dtoa_r+0x1158>
    a550:	d9801417 	ldw	r6,80(sp)
    a554:	0005883a 	mov	r2,zero
    a558:	00cffc34 	movhi	r3,16368
    a55c:	180b883a 	mov	r5,r3
    a560:	880f883a 	mov	r7,r17
    a564:	1009883a 	mov	r4,r2
    a568:	000da780 	call	da78 <__subdf3>
    a56c:	d9401917 	ldw	r5,100(sp)
    a570:	180f883a 	mov	r7,r3
    a574:	b009883a 	mov	r4,r22
    a578:	100d883a 	mov	r6,r2
    a57c:	000e2980 	call	e298 <__gtdf2>
    a580:	00bda216 	blt	zero,r2,9c0c <_dtoa_r+0x6dc>
    a584:	d8c00317 	ldw	r3,12(sp)
    a588:	00800044 	movi	r2,1
    a58c:	10c01216 	blt	r2,r3,a5d8 <_dtoa_r+0x10a8>
    a590:	003d4506 	br	9aa8 <_dtoa_r+0x578>
    a594:	d9801417 	ldw	r6,80(sp)
    a598:	0005883a 	mov	r2,zero
    a59c:	00cffc34 	movhi	r3,16368
    a5a0:	180b883a 	mov	r5,r3
    a5a4:	880f883a 	mov	r7,r17
    a5a8:	1009883a 	mov	r4,r2
    a5ac:	000da780 	call	da78 <__subdf3>
    a5b0:	d9c01b17 	ldw	r7,108(sp)
    a5b4:	180b883a 	mov	r5,r3
    a5b8:	1009883a 	mov	r4,r2
    a5bc:	b00d883a 	mov	r6,r22
    a5c0:	000e3a80 	call	e3a8 <__ltdf2>
    a5c4:	103d9116 	blt	r2,zero,9c0c <_dtoa_r+0x6dc>
    a5c8:	d9800517 	ldw	r6,20(sp)
    a5cc:	d9000317 	ldw	r4,12(sp)
    a5d0:	3105883a 	add	r2,r6,r4
    a5d4:	e0bd3426 	beq	fp,r2,9aa8 <_dtoa_r+0x578>
    a5d8:	04500934 	movhi	r17,16420
    a5dc:	0021883a 	mov	r16,zero
    a5e0:	b80b883a 	mov	r5,r23
    a5e4:	b009883a 	mov	r4,r22
    a5e8:	800d883a 	mov	r6,r16
    a5ec:	880f883a 	mov	r7,r17
    a5f0:	000db6c0 	call	db6c <__muldf3>
    a5f4:	d9401517 	ldw	r5,84(sp)
    a5f8:	d9001417 	ldw	r4,80(sp)
    a5fc:	880f883a 	mov	r7,r17
    a600:	000d883a 	mov	r6,zero
    a604:	d8801a15 	stw	r2,104(sp)
    a608:	d8c01b15 	stw	r3,108(sp)
    a60c:	000db6c0 	call	db6c <__muldf3>
    a610:	180b883a 	mov	r5,r3
    a614:	1009883a 	mov	r4,r2
    a618:	1823883a 	mov	r17,r3
    a61c:	1021883a 	mov	r16,r2
    a620:	000e5b00 	call	e5b0 <__fixdfsi>
    a624:	1009883a 	mov	r4,r2
    a628:	102b883a 	mov	r21,r2
    a62c:	000e4b80 	call	e4b8 <__floatsidf>
    a630:	880b883a 	mov	r5,r17
    a634:	8009883a 	mov	r4,r16
    a638:	180f883a 	mov	r7,r3
    a63c:	100d883a 	mov	r6,r2
    a640:	000da780 	call	da78 <__subdf3>
    a644:	1021883a 	mov	r16,r2
    a648:	d9001b17 	ldw	r4,108(sp)
    a64c:	1823883a 	mov	r17,r3
    a650:	dc001415 	stw	r16,80(sp)
    a654:	ad400c04 	addi	r21,r21,48
    a658:	dc401515 	stw	r17,84(sp)
    a65c:	d8801a17 	ldw	r2,104(sp)
    a660:	e5400005 	stb	r21,0(fp)
    a664:	202f883a 	mov	r23,r4
    a668:	d9c01b17 	ldw	r7,108(sp)
    a66c:	d9001417 	ldw	r4,80(sp)
    a670:	880b883a 	mov	r5,r17
    a674:	100d883a 	mov	r6,r2
    a678:	102d883a 	mov	r22,r2
    a67c:	e7000044 	addi	fp,fp,1
    a680:	000e3a80 	call	e3a8 <__ltdf2>
    a684:	103fc30e 	bge	r2,zero,a594 <_dtoa_r+0x1064>
    a688:	d9000417 	ldw	r4,16(sp)
    a68c:	d9000d15 	stw	r4,52(sp)
    a690:	003d7106 	br	9c58 <_dtoa_r+0x728>
    a694:	d9801717 	ldw	r6,92(sp)
    a698:	00800084 	movi	r2,2
    a69c:	11bde60e 	bge	r2,r6,9e38 <_dtoa_r+0x908>
    a6a0:	203cfb1e 	bne	r4,zero,9a90 <_dtoa_r+0x560>
    a6a4:	d9001617 	ldw	r4,88(sp)
    a6a8:	900b883a 	mov	r5,r18
    a6ac:	01800144 	movi	r6,5
    a6b0:	000f883a 	mov	r7,zero
    a6b4:	000c4040 	call	c404 <__multadd>
    a6b8:	d9000717 	ldw	r4,28(sp)
    a6bc:	100b883a 	mov	r5,r2
    a6c0:	1025883a 	mov	r18,r2
    a6c4:	000b8ac0 	call	b8ac <__mcmp>
    a6c8:	00bcf10e 	bge	zero,r2,9a90 <_dtoa_r+0x560>
    a6cc:	d8c00d17 	ldw	r3,52(sp)
    a6d0:	d9000517 	ldw	r4,20(sp)
    a6d4:	d8000615 	stw	zero,24(sp)
    a6d8:	18c00044 	addi	r3,r3,1
    a6dc:	d8c00d15 	stw	r3,52(sp)
    a6e0:	00800c44 	movi	r2,49
    a6e4:	27000044 	addi	fp,r4,1
    a6e8:	20800005 	stb	r2,0(r4)
    a6ec:	003e8906 	br	a114 <_dtoa_r+0xbe4>
    a6f0:	d8c00517 	ldw	r3,20(sp)
    a6f4:	003bc206 	br	9600 <_dtoa_r+0xd0>
    a6f8:	01800074 	movhi	r6,1
    a6fc:	31886d04 	addi	r6,r6,8628
    a700:	30c00917 	ldw	r3,36(r6)
    a704:	30800817 	ldw	r2,32(r6)
    a708:	d9001217 	ldw	r4,72(sp)
    a70c:	d9401317 	ldw	r5,76(sp)
    a710:	180f883a 	mov	r7,r3
    a714:	100d883a 	mov	r6,r2
    a718:	000df300 	call	df30 <__divdf3>
    a71c:	948003cc 	andi	r18,r18,15
    a720:	058000c4 	movi	r22,3
    a724:	1029883a 	mov	r20,r2
    a728:	182b883a 	mov	r21,r3
    a72c:	003c8906 	br	9954 <_dtoa_r+0x424>
    a730:	d9001017 	ldw	r4,64(sp)
    a734:	d9800917 	ldw	r6,36(sp)
    a738:	0025883a 	mov	r18,zero
    a73c:	1105c83a 	sub	r2,r2,r4
    a740:	2089883a 	add	r4,r4,r2
    a744:	308d883a 	add	r6,r6,r2
    a748:	d9001015 	stw	r4,64(sp)
    a74c:	d9800915 	stw	r6,36(sp)
    a750:	003e3206 	br	a01c <_dtoa_r+0xaec>
    a754:	28800044 	addi	r2,r5,1
    a758:	27000044 	addi	fp,r4,1
    a75c:	20800005 	stb	r2,0(r4)
    a760:	003e6c06 	br	a114 <_dtoa_r+0xbe4>
    a764:	d8800f17 	ldw	r2,60(sp)
    a768:	00bce016 	blt	zero,r2,9aec <_dtoa_r+0x5bc>
    a76c:	d9800f17 	ldw	r6,60(sp)
    a770:	303cc51e 	bne	r6,zero,9a88 <_dtoa_r+0x558>
    a774:	0005883a 	mov	r2,zero
    a778:	00d00534 	movhi	r3,16404
    a77c:	980b883a 	mov	r5,r19
    a780:	180f883a 	mov	r7,r3
    a784:	9009883a 	mov	r4,r18
    a788:	100d883a 	mov	r6,r2
    a78c:	000db6c0 	call	db6c <__muldf3>
    a790:	180b883a 	mov	r5,r3
    a794:	a80f883a 	mov	r7,r21
    a798:	1009883a 	mov	r4,r2
    a79c:	a00d883a 	mov	r6,r20
    a7a0:	000e3200 	call	e320 <__gedf2>
    a7a4:	103cb80e 	bge	r2,zero,9a88 <_dtoa_r+0x558>
    a7a8:	0027883a 	mov	r19,zero
    a7ac:	0025883a 	mov	r18,zero
    a7b0:	003fc606 	br	a6cc <_dtoa_r+0x119c>
    a7b4:	99400117 	ldw	r5,4(r19)
    a7b8:	d9001617 	ldw	r4,88(sp)
    a7bc:	000bcd00 	call	bcd0 <_Balloc>
    a7c0:	99800417 	ldw	r6,16(r19)
    a7c4:	11000304 	addi	r4,r2,12
    a7c8:	99400304 	addi	r5,r19,12
    a7cc:	318d883a 	add	r6,r6,r6
    a7d0:	318d883a 	add	r6,r6,r6
    a7d4:	31800204 	addi	r6,r6,8
    a7d8:	1023883a 	mov	r17,r2
    a7dc:	000125c0 	call	125c <memcpy>
    a7e0:	d9001617 	ldw	r4,88(sp)
    a7e4:	880b883a 	mov	r5,r17
    a7e8:	01800044 	movi	r6,1
    a7ec:	000c0940 	call	c094 <__lshift>
    a7f0:	100b883a 	mov	r5,r2
    a7f4:	003d9c06 	br	9e68 <_dtoa_r+0x938>
    a7f8:	00800e44 	movi	r2,57
    a7fc:	b8807026 	beq	r23,r2,a9c0 <_dtoa_r+0x1490>
    a800:	b8800044 	addi	r2,r23,1
    a804:	b7000044 	addi	fp,r22,1
    a808:	b0800005 	stb	r2,0(r22)
    a80c:	003e4106 	br	a114 <_dtoa_r+0xbe4>
    a810:	d8800317 	ldw	r2,12(sp)
    a814:	01800074 	movhi	r6,1
    a818:	31883b04 	addi	r6,r6,8428
    a81c:	b009883a 	mov	r4,r22
    a820:	100e90fa 	slli	r7,r2,3
    a824:	b80b883a 	mov	r5,r23
    a828:	398f883a 	add	r7,r7,r6
    a82c:	38bffe17 	ldw	r2,-8(r7)
    a830:	d9800517 	ldw	r6,20(sp)
    a834:	38ffff17 	ldw	r3,-4(r7)
    a838:	37000044 	addi	fp,r6,1
    a83c:	180f883a 	mov	r7,r3
    a840:	100d883a 	mov	r6,r2
    a844:	000db6c0 	call	db6c <__muldf3>
    a848:	a80b883a 	mov	r5,r21
    a84c:	a009883a 	mov	r4,r20
    a850:	182f883a 	mov	r23,r3
    a854:	102d883a 	mov	r22,r2
    a858:	000e5b00 	call	e5b0 <__fixdfsi>
    a85c:	1009883a 	mov	r4,r2
    a860:	1027883a 	mov	r19,r2
    a864:	000e4b80 	call	e4b8 <__floatsidf>
    a868:	a80b883a 	mov	r5,r21
    a86c:	a009883a 	mov	r4,r20
    a870:	180f883a 	mov	r7,r3
    a874:	100d883a 	mov	r6,r2
    a878:	000da780 	call	da78 <__subdf3>
    a87c:	180b883a 	mov	r5,r3
    a880:	d8c00517 	ldw	r3,20(sp)
    a884:	9cc00c04 	addi	r19,r19,48
    a888:	1009883a 	mov	r4,r2
    a88c:	1cc00005 	stb	r19,0(r3)
    a890:	2021883a 	mov	r16,r4
    a894:	d9000317 	ldw	r4,12(sp)
    a898:	00800044 	movi	r2,1
    a89c:	2823883a 	mov	r17,r5
    a8a0:	20802226 	beq	r4,r2,a92c <_dtoa_r+0x13fc>
    a8a4:	1029883a 	mov	r20,r2
    a8a8:	0005883a 	mov	r2,zero
    a8ac:	00d00934 	movhi	r3,16420
    a8b0:	180f883a 	mov	r7,r3
    a8b4:	100d883a 	mov	r6,r2
    a8b8:	880b883a 	mov	r5,r17
    a8bc:	8009883a 	mov	r4,r16
    a8c0:	000db6c0 	call	db6c <__muldf3>
    a8c4:	180b883a 	mov	r5,r3
    a8c8:	1009883a 	mov	r4,r2
    a8cc:	1823883a 	mov	r17,r3
    a8d0:	1021883a 	mov	r16,r2
    a8d4:	000e5b00 	call	e5b0 <__fixdfsi>
    a8d8:	1009883a 	mov	r4,r2
    a8dc:	102b883a 	mov	r21,r2
    a8e0:	000e4b80 	call	e4b8 <__floatsidf>
    a8e4:	880b883a 	mov	r5,r17
    a8e8:	8009883a 	mov	r4,r16
    a8ec:	180f883a 	mov	r7,r3
    a8f0:	100d883a 	mov	r6,r2
    a8f4:	000da780 	call	da78 <__subdf3>
    a8f8:	180b883a 	mov	r5,r3
    a8fc:	d8c00517 	ldw	r3,20(sp)
    a900:	1009883a 	mov	r4,r2
    a904:	ad400c04 	addi	r21,r21,48
    a908:	1d05883a 	add	r2,r3,r20
    a90c:	15400005 	stb	r21,0(r2)
    a910:	2021883a 	mov	r16,r4
    a914:	d9000317 	ldw	r4,12(sp)
    a918:	a5000044 	addi	r20,r20,1
    a91c:	2823883a 	mov	r17,r5
    a920:	a13fe11e 	bne	r20,r4,a8a8 <_dtoa_r+0x1378>
    a924:	e505883a 	add	r2,fp,r20
    a928:	173fffc4 	addi	fp,r2,-1
    a92c:	0025883a 	mov	r18,zero
    a930:	04cff834 	movhi	r19,16352
    a934:	b009883a 	mov	r4,r22
    a938:	b80b883a 	mov	r5,r23
    a93c:	900d883a 	mov	r6,r18
    a940:	980f883a 	mov	r7,r19
    a944:	000daf80 	call	daf8 <__adddf3>
    a948:	180b883a 	mov	r5,r3
    a94c:	1009883a 	mov	r4,r2
    a950:	800d883a 	mov	r6,r16
    a954:	880f883a 	mov	r7,r17
    a958:	000e3a80 	call	e3a8 <__ltdf2>
    a95c:	103cab16 	blt	r2,zero,9c0c <_dtoa_r+0x6dc>
    a960:	0009883a 	mov	r4,zero
    a964:	980b883a 	mov	r5,r19
    a968:	b80f883a 	mov	r7,r23
    a96c:	b00d883a 	mov	r6,r22
    a970:	000da780 	call	da78 <__subdf3>
    a974:	180b883a 	mov	r5,r3
    a978:	880f883a 	mov	r7,r17
    a97c:	1009883a 	mov	r4,r2
    a980:	800d883a 	mov	r6,r16
    a984:	000e2980 	call	e298 <__gtdf2>
    a988:	00bc470e 	bge	zero,r2,9aa8 <_dtoa_r+0x578>
    a98c:	00c00c04 	movi	r3,48
    a990:	e73fffc4 	addi	fp,fp,-1
    a994:	e0800007 	ldb	r2,0(fp)
    a998:	10fffd26 	beq	r2,r3,a990 <_dtoa_r+0x1460>
    a99c:	d9800417 	ldw	r6,16(sp)
    a9a0:	e7000044 	addi	fp,fp,1
    a9a4:	d9800d15 	stw	r6,52(sp)
    a9a8:	003cab06 	br	9c58 <_dtoa_r+0x728>
    a9ac:	d8c00f17 	ldw	r3,60(sp)
    a9b0:	d9001117 	ldw	r4,68(sp)
    a9b4:	20e1c83a 	sub	r16,r4,r3
    a9b8:	0007883a 	mov	r3,zero
    a9bc:	003d9b06 	br	a02c <_dtoa_r+0xafc>
    a9c0:	00800e44 	movi	r2,57
    a9c4:	b0800005 	stb	r2,0(r22)
    a9c8:	b5800044 	addi	r22,r22,1
    a9cc:	003dc106 	br	a0d4 <_dtoa_r+0xba4>
    a9d0:	05800084 	movi	r22,2
    a9d4:	003bf706 	br	99b4 <_dtoa_r+0x484>
    a9d8:	d9000f17 	ldw	r4,60(sp)
    a9dc:	013c000e 	bge	zero,r4,99e0 <_dtoa_r+0x4b0>
    a9e0:	d9800e17 	ldw	r6,56(sp)
    a9e4:	01bc300e 	bge	zero,r6,9aa8 <_dtoa_r+0x578>
    a9e8:	0005883a 	mov	r2,zero
    a9ec:	00d00934 	movhi	r3,16420
    a9f0:	a80b883a 	mov	r5,r21
    a9f4:	180f883a 	mov	r7,r3
    a9f8:	a009883a 	mov	r4,r20
    a9fc:	100d883a 	mov	r6,r2
    aa00:	000db6c0 	call	db6c <__muldf3>
    aa04:	b1000044 	addi	r4,r22,1
    aa08:	1021883a 	mov	r16,r2
    aa0c:	1823883a 	mov	r17,r3
    aa10:	000e4b80 	call	e4b8 <__floatsidf>
    aa14:	880b883a 	mov	r5,r17
    aa18:	8009883a 	mov	r4,r16
    aa1c:	180f883a 	mov	r7,r3
    aa20:	100d883a 	mov	r6,r2
    aa24:	000db6c0 	call	db6c <__muldf3>
    aa28:	0011883a 	mov	r8,zero
    aa2c:	02500734 	movhi	r9,16412
    aa30:	180b883a 	mov	r5,r3
    aa34:	480f883a 	mov	r7,r9
    aa38:	1009883a 	mov	r4,r2
    aa3c:	400d883a 	mov	r6,r8
    aa40:	000daf80 	call	daf8 <__adddf3>
    aa44:	102d883a 	mov	r22,r2
    aa48:	00bf3034 	movhi	r2,64704
    aa4c:	10ef883a 	add	r23,r2,r3
    aa50:	d8800d17 	ldw	r2,52(sp)
    aa54:	d8c00e17 	ldw	r3,56(sp)
    aa58:	8029883a 	mov	r20,r16
    aa5c:	10bfffc4 	addi	r2,r2,-1
    aa60:	882b883a 	mov	r21,r17
    aa64:	d8800415 	stw	r2,16(sp)
    aa68:	d8c00315 	stw	r3,12(sp)
    aa6c:	003e8306 	br	a47c <_dtoa_r+0xf4c>
    aa70:	d8800117 	ldw	r2,4(sp)
    aa74:	dc001117 	ldw	r16,68(sp)
    aa78:	dc801017 	ldw	r18,64(sp)
    aa7c:	00c00d84 	movi	r3,54
    aa80:	1887c83a 	sub	r3,r3,r2
    aa84:	003d6906 	br	a02c <_dtoa_r+0xafc>
    aa88:	01800044 	movi	r6,1
    aa8c:	3021883a 	mov	r16,r6
    aa90:	d9800f15 	stw	r6,60(sp)
    aa94:	d9802615 	stw	r6,152(sp)
    aa98:	d9800e15 	stw	r6,56(sp)
    aa9c:	003b9306 	br	98ec <_dtoa_r+0x3bc>
    aaa0:	b021883a 	mov	r16,r22
    aaa4:	dd800f15 	stw	r22,60(sp)
    aaa8:	003b9006 	br	98ec <_dtoa_r+0x3bc>
    aaac:	103e221e 	bne	r2,zero,a338 <_dtoa_r+0xe08>
    aab0:	b880004c 	andi	r2,r23,1
    aab4:	1005003a 	cmpeq	r2,r2,zero
    aab8:	103e1f1e 	bne	r2,zero,a338 <_dtoa_r+0xe08>
    aabc:	003e1b06 	br	a32c <_dtoa_r+0xdfc>
    aac0:	d9001617 	ldw	r4,88(sp)
    aac4:	980b883a 	mov	r5,r19
    aac8:	01800284 	movi	r6,10
    aacc:	000f883a 	mov	r7,zero
    aad0:	000c4040 	call	c404 <__multadd>
    aad4:	d8c00e17 	ldw	r3,56(sp)
    aad8:	1027883a 	mov	r19,r2
    aadc:	d8c00f15 	stw	r3,60(sp)
    aae0:	003cd306 	br	9e30 <_dtoa_r+0x900>

0000aae4 <_fstat_r>:
    aae4:	defffd04 	addi	sp,sp,-12
    aae8:	dc000015 	stw	r16,0(sp)
    aaec:	04000074 	movhi	r16,1
    aaf0:	84161d04 	addi	r16,r16,22644
    aaf4:	dc400115 	stw	r17,4(sp)
    aaf8:	80000015 	stw	zero,0(r16)
    aafc:	2023883a 	mov	r17,r4
    ab00:	2809883a 	mov	r4,r5
    ab04:	300b883a 	mov	r5,r6
    ab08:	dfc00215 	stw	ra,8(sp)
    ab0c:	000f3f40 	call	f3f4 <fstat>
    ab10:	1007883a 	mov	r3,r2
    ab14:	00bfffc4 	movi	r2,-1
    ab18:	18800626 	beq	r3,r2,ab34 <_fstat_r+0x50>
    ab1c:	1805883a 	mov	r2,r3
    ab20:	dfc00217 	ldw	ra,8(sp)
    ab24:	dc400117 	ldw	r17,4(sp)
    ab28:	dc000017 	ldw	r16,0(sp)
    ab2c:	dec00304 	addi	sp,sp,12
    ab30:	f800283a 	ret
    ab34:	80800017 	ldw	r2,0(r16)
    ab38:	103ff826 	beq	r2,zero,ab1c <_fstat_r+0x38>
    ab3c:	88800015 	stw	r2,0(r17)
    ab40:	1805883a 	mov	r2,r3
    ab44:	dfc00217 	ldw	ra,8(sp)
    ab48:	dc400117 	ldw	r17,4(sp)
    ab4c:	dc000017 	ldw	r16,0(sp)
    ab50:	dec00304 	addi	sp,sp,12
    ab54:	f800283a 	ret

0000ab58 <htinit>:
    ab58:	28800003 	ldbu	r2,0(r5)
    ab5c:	10000626 	beq	r2,zero,ab78 <htinit+0x20>
    ab60:	1105883a 	add	r2,r2,r4
    ab64:	11800005 	stb	r6,0(r2)
    ab68:	28800043 	ldbu	r2,1(r5)
    ab6c:	31800044 	addi	r6,r6,1
    ab70:	29400044 	addi	r5,r5,1
    ab74:	103ffa1e 	bne	r2,zero,ab60 <htinit+0x8>
    ab78:	f800283a 	ret

0000ab7c <__hexdig_init>:
    ab7c:	defffd04 	addi	sp,sp,-12
    ab80:	dc400015 	stw	r17,0(sp)
    ab84:	04400074 	movhi	r17,1
    ab88:	8c563104 	addi	r17,r17,22724
    ab8c:	dcc00115 	stw	r19,4(sp)
    ab90:	8809883a 	mov	r4,r17
    ab94:	04c00684 	movi	r19,26
    ab98:	01400074 	movhi	r5,1
    ab9c:	29483404 	addi	r5,r5,8400
    aba0:	01800404 	movi	r6,16
    aba4:	dfc00215 	stw	ra,8(sp)
    aba8:	000ab580 	call	ab58 <htinit>
    abac:	980d883a 	mov	r6,r19
    abb0:	8809883a 	mov	r4,r17
    abb4:	01400074 	movhi	r5,1
    abb8:	29483704 	addi	r5,r5,8412
    abbc:	000ab580 	call	ab58 <htinit>
    abc0:	8809883a 	mov	r4,r17
    abc4:	980d883a 	mov	r6,r19
    abc8:	01400074 	movhi	r5,1
    abcc:	29483904 	addi	r5,r5,8420
    abd0:	dfc00217 	ldw	ra,8(sp)
    abd4:	dcc00117 	ldw	r19,4(sp)
    abd8:	dc400017 	ldw	r17,0(sp)
    abdc:	dec00304 	addi	sp,sp,12
    abe0:	000ab581 	jmpi	ab58 <htinit>

0000abe4 <rshift>:
    abe4:	2807d17a 	srai	r3,r5,5
    abe8:	20800417 	ldw	r2,16(r4)
    abec:	22400504 	addi	r9,r4,20
    abf0:	480f883a 	mov	r7,r9
    abf4:	1880190e 	bge	r3,r2,ac5c <rshift+0x78>
    abf8:	1085883a 	add	r2,r2,r2
    abfc:	18c7883a 	add	r3,r3,r3
    ac00:	1085883a 	add	r2,r2,r2
    ac04:	18c7883a 	add	r3,r3,r3
    ac08:	294007cc 	andi	r5,r5,31
    ac0c:	4891883a 	add	r8,r9,r2
    ac10:	48cd883a 	add	r6,r9,r3
    ac14:	28001726 	beq	r5,zero,ac74 <rshift+0x90>
    ac18:	30c00017 	ldw	r3,0(r6)
    ac1c:	00800804 	movi	r2,32
    ac20:	31800104 	addi	r6,r6,4
    ac24:	1155c83a 	sub	r10,r2,r5
    ac28:	1946d83a 	srl	r3,r3,r5
    ac2c:	3200092e 	bgeu	r6,r8,ac54 <rshift+0x70>
    ac30:	30800017 	ldw	r2,0(r6)
    ac34:	1284983a 	sll	r2,r2,r10
    ac38:	10c4b03a 	or	r2,r2,r3
    ac3c:	38800015 	stw	r2,0(r7)
    ac40:	30c00017 	ldw	r3,0(r6)
    ac44:	31800104 	addi	r6,r6,4
    ac48:	39c00104 	addi	r7,r7,4
    ac4c:	1946d83a 	srl	r3,r3,r5
    ac50:	323ff736 	bltu	r6,r8,ac30 <rshift+0x4c>
    ac54:	38c00015 	stw	r3,0(r7)
    ac58:	18000c1e 	bne	r3,zero,ac8c <rshift+0xa8>
    ac5c:	3a45c83a 	sub	r2,r7,r9
    ac60:	1005d0ba 	srai	r2,r2,2
    ac64:	20800415 	stw	r2,16(r4)
    ac68:	1000011e 	bne	r2,zero,ac70 <rshift+0x8c>
    ac6c:	20000515 	stw	zero,20(r4)
    ac70:	f800283a 	ret
    ac74:	323ff92e 	bgeu	r6,r8,ac5c <rshift+0x78>
    ac78:	30800017 	ldw	r2,0(r6)
    ac7c:	31800104 	addi	r6,r6,4
    ac80:	38800015 	stw	r2,0(r7)
    ac84:	39c00104 	addi	r7,r7,4
    ac88:	003ffa06 	br	ac74 <rshift+0x90>
    ac8c:	39c00104 	addi	r7,r7,4
    ac90:	003ff206 	br	ac5c <rshift+0x78>

0000ac94 <__gethex>:
    ac94:	defff304 	addi	sp,sp,-52
    ac98:	dd400815 	stw	r21,32(sp)
    ac9c:	dd000715 	stw	r20,28(sp)
    aca0:	dcc00615 	stw	r19,24(sp)
    aca4:	dc400415 	stw	r17,16(sp)
    aca8:	dfc00c15 	stw	ra,48(sp)
    acac:	df000b15 	stw	fp,44(sp)
    acb0:	ddc00a15 	stw	r23,40(sp)
    acb4:	dd800915 	stw	r22,36(sp)
    acb8:	dc800515 	stw	r18,20(sp)
    acbc:	dc000315 	stw	r16,12(sp)
    acc0:	04400074 	movhi	r17,1
    acc4:	8c563104 	addi	r17,r17,22724
    acc8:	88800c03 	ldbu	r2,48(r17)
    accc:	202b883a 	mov	r21,r4
    acd0:	2827883a 	mov	r19,r5
    acd4:	3029883a 	mov	r20,r6
    acd8:	d9c00115 	stw	r7,4(sp)
    acdc:	10006e26 	beq	r2,zero,ae98 <__gethex+0x204>
    ace0:	99800017 	ldw	r6,0(r19)
    ace4:	00800c04 	movi	r2,48
    ace8:	31000083 	ldbu	r4,2(r6)
    acec:	30c00084 	addi	r3,r6,2
    acf0:	20806f1e 	bne	r4,r2,aeb0 <__gethex+0x21c>
    acf4:	200b883a 	mov	r5,r4
    acf8:	3007883a 	mov	r3,r6
    acfc:	188000c3 	ldbu	r2,3(r3)
    ad00:	18c00044 	addi	r3,r3,1
    ad04:	1009883a 	mov	r4,r2
    ad08:	117ffc26 	beq	r2,r5,acfc <__gethex+0x68>
    ad0c:	1997c83a 	sub	r11,r3,r6
    ad10:	19400084 	addi	r5,r3,2
    ad14:	2445883a 	add	r2,r4,r17
    ad18:	10c00003 	ldbu	r3,0(r2)
    ad1c:	18002d26 	beq	r3,zero,add4 <__gethex+0x140>
    ad20:	29000003 	ldbu	r4,0(r5)
    ad24:	2825883a 	mov	r18,r5
    ad28:	000d883a 	mov	r6,zero
    ad2c:	0013883a 	mov	r9,zero
    ad30:	21003fcc 	andi	r4,r4,255
    ad34:	2445883a 	add	r2,r4,r17
    ad38:	10c00003 	ldbu	r3,0(r2)
    ad3c:	18000526 	beq	r3,zero,ad54 <__gethex+0xc0>
    ad40:	29400044 	addi	r5,r5,1
    ad44:	29000003 	ldbu	r4,0(r5)
    ad48:	2445883a 	add	r2,r4,r17
    ad4c:	10c00003 	ldbu	r3,0(r2)
    ad50:	183ffb1e 	bne	r3,zero,ad40 <__gethex+0xac>
    ad54:	00800b84 	movi	r2,46
    ad58:	20805826 	beq	r4,r2,aebc <__gethex+0x228>
    ad5c:	30007a26 	beq	r6,zero,af48 <__gethex+0x2b4>
    ad60:	2985c83a 	sub	r2,r5,r6
    ad64:	1085883a 	add	r2,r2,r2
    ad68:	1085883a 	add	r2,r2,r2
    ad6c:	00adc83a 	sub	r22,zero,r2
    ad70:	2821883a 	mov	r16,r5
    ad74:	80c00003 	ldbu	r3,0(r16)
    ad78:	00801404 	movi	r2,80
    ad7c:	18801e26 	beq	r3,r2,adf8 <__gethex+0x164>
    ad80:	00801c04 	movi	r2,112
    ad84:	18801c26 	beq	r3,r2,adf8 <__gethex+0x164>
    ad88:	800d883a 	mov	r6,r16
    ad8c:	4805003a 	cmpeq	r2,r9,zero
    ad90:	99800015 	stw	r6,0(r19)
    ad94:	1000861e 	bne	r2,zero,afb0 <__gethex+0x31c>
    ad98:	58003d26 	beq	r11,zero,ae90 <__gethex+0x1fc>
    ad9c:	0025883a 	mov	r18,zero
    ada0:	9005883a 	mov	r2,r18
    ada4:	dfc00c17 	ldw	ra,48(sp)
    ada8:	df000b17 	ldw	fp,44(sp)
    adac:	ddc00a17 	ldw	r23,40(sp)
    adb0:	dd800917 	ldw	r22,36(sp)
    adb4:	dd400817 	ldw	r21,32(sp)
    adb8:	dd000717 	ldw	r20,28(sp)
    adbc:	dcc00617 	ldw	r19,24(sp)
    adc0:	dc800517 	ldw	r18,20(sp)
    adc4:	dc400417 	ldw	r17,16(sp)
    adc8:	dc000317 	ldw	r16,12(sp)
    adcc:	dec00d04 	addi	sp,sp,52
    add0:	f800283a 	ret
    add4:	00800b84 	movi	r2,46
    add8:	20804a26 	beq	r4,r2,af04 <__gethex+0x270>
    addc:	2821883a 	mov	r16,r5
    ade0:	80c00003 	ldbu	r3,0(r16)
    ade4:	00801404 	movi	r2,80
    ade8:	2825883a 	mov	r18,r5
    adec:	02400044 	movi	r9,1
    adf0:	002d883a 	mov	r22,zero
    adf4:	18bfe21e 	bne	r3,r2,ad80 <__gethex+0xec>
    adf8:	80c00043 	ldbu	r3,1(r16)
    adfc:	00800ac4 	movi	r2,43
    ae00:	81000044 	addi	r4,r16,1
    ae04:	18804a26 	beq	r3,r2,af30 <__gethex+0x29c>
    ae08:	00800b44 	movi	r2,45
    ae0c:	18804c26 	beq	r3,r2,af40 <__gethex+0x2ac>
    ae10:	0015883a 	mov	r10,zero
    ae14:	1c45883a 	add	r2,r3,r17
    ae18:	10800003 	ldbu	r2,0(r2)
    ae1c:	103fda26 	beq	r2,zero,ad88 <__gethex+0xf4>
    ae20:	02000644 	movi	r8,25
    ae24:	40bfd816 	blt	r8,r2,ad88 <__gethex+0xf4>
    ae28:	20c00043 	ldbu	r3,1(r4)
    ae2c:	11fffc04 	addi	r7,r2,-16
    ae30:	00800074 	movhi	r2,1
    ae34:	10963104 	addi	r2,r2,22724
    ae38:	1887883a 	add	r3,r3,r2
    ae3c:	18800003 	ldbu	r2,0(r3)
    ae40:	21800044 	addi	r6,r4,1
    ae44:	10000d26 	beq	r2,zero,ae7c <__gethex+0x1e8>
    ae48:	100b883a 	mov	r5,r2
    ae4c:	4080020e 	bge	r8,r2,ae58 <__gethex+0x1c4>
    ae50:	00000a06 	br	ae7c <__gethex+0x1e8>
    ae54:	41000916 	blt	r8,r4,ae7c <__gethex+0x1e8>
    ae58:	31800044 	addi	r6,r6,1
    ae5c:	30800003 	ldbu	r2,0(r6)
    ae60:	38c002a4 	muli	r3,r7,10
    ae64:	1445883a 	add	r2,r2,r17
    ae68:	11000003 	ldbu	r4,0(r2)
    ae6c:	1947883a 	add	r3,r3,r5
    ae70:	19fffc04 	addi	r7,r3,-16
    ae74:	200b883a 	mov	r5,r4
    ae78:	203ff61e 	bne	r4,zero,ae54 <__gethex+0x1c0>
    ae7c:	5005003a 	cmpeq	r2,r10,zero
    ae80:	1000011e 	bne	r2,zero,ae88 <__gethex+0x1f4>
    ae84:	01cfc83a 	sub	r7,zero,r7
    ae88:	b1ed883a 	add	r22,r22,r7
    ae8c:	003fbf06 	br	ad8c <__gethex+0xf8>
    ae90:	04800184 	movi	r18,6
    ae94:	003fc206 	br	ada0 <__gethex+0x10c>
    ae98:	000ab7c0 	call	ab7c <__hexdig_init>
    ae9c:	99800017 	ldw	r6,0(r19)
    aea0:	00800c04 	movi	r2,48
    aea4:	31000083 	ldbu	r4,2(r6)
    aea8:	30c00084 	addi	r3,r6,2
    aeac:	20bf9126 	beq	r4,r2,acf4 <__gethex+0x60>
    aeb0:	180b883a 	mov	r5,r3
    aeb4:	0017883a 	mov	r11,zero
    aeb8:	003f9606 	br	ad14 <__gethex+0x80>
    aebc:	303fa81e 	bne	r6,zero,ad60 <__gethex+0xcc>
    aec0:	29400044 	addi	r5,r5,1
    aec4:	28800003 	ldbu	r2,0(r5)
    aec8:	1445883a 	add	r2,r2,r17
    aecc:	10c00003 	ldbu	r3,0(r2)
    aed0:	1800ad26 	beq	r3,zero,b188 <__gethex+0x4f4>
    aed4:	2809883a 	mov	r4,r5
    aed8:	21000044 	addi	r4,r4,1
    aedc:	20800003 	ldbu	r2,0(r4)
    aee0:	1445883a 	add	r2,r2,r17
    aee4:	10c00003 	ldbu	r3,0(r2)
    aee8:	183ffb1e 	bne	r3,zero,aed8 <__gethex+0x244>
    aeec:	2145c83a 	sub	r2,r4,r5
    aef0:	1085883a 	add	r2,r2,r2
    aef4:	1085883a 	add	r2,r2,r2
    aef8:	00adc83a 	sub	r22,zero,r2
    aefc:	200b883a 	mov	r5,r4
    af00:	003f9b06 	br	ad70 <__gethex+0xdc>
    af04:	29000043 	ldbu	r4,1(r5)
    af08:	00800074 	movhi	r2,1
    af0c:	10963104 	addi	r2,r2,22724
    af10:	2c000044 	addi	r16,r5,1
    af14:	2085883a 	add	r2,r4,r2
    af18:	10c00003 	ldbu	r3,0(r2)
    af1c:	18000d1e 	bne	r3,zero,af54 <__gethex+0x2c0>
    af20:	2825883a 	mov	r18,r5
    af24:	02400044 	movi	r9,1
    af28:	002d883a 	mov	r22,zero
    af2c:	003f9106 	br	ad74 <__gethex+0xe0>
    af30:	0015883a 	mov	r10,zero
    af34:	21000044 	addi	r4,r4,1
    af38:	20c00003 	ldbu	r3,0(r4)
    af3c:	003fb506 	br	ae14 <__gethex+0x180>
    af40:	02800044 	movi	r10,1
    af44:	003ffb06 	br	af34 <__gethex+0x2a0>
    af48:	2821883a 	mov	r16,r5
    af4c:	002d883a 	mov	r22,zero
    af50:	003f8806 	br	ad74 <__gethex+0xe0>
    af54:	00800c04 	movi	r2,48
    af58:	20800e1e 	bne	r4,r2,af94 <__gethex+0x300>
    af5c:	2007883a 	mov	r3,r4
    af60:	800b883a 	mov	r5,r16
    af64:	29400044 	addi	r5,r5,1
    af68:	29000003 	ldbu	r4,0(r5)
    af6c:	20803fcc 	andi	r2,r4,255
    af70:	10fffc26 	beq	r2,r3,af64 <__gethex+0x2d0>
    af74:	1445883a 	add	r2,r2,r17
    af78:	10c00003 	ldbu	r3,0(r2)
    af7c:	1800071e 	bne	r3,zero,af9c <__gethex+0x308>
    af80:	02c00044 	movi	r11,1
    af84:	800d883a 	mov	r6,r16
    af88:	2825883a 	mov	r18,r5
    af8c:	5813883a 	mov	r9,r11
    af90:	003f6706 	br	ad30 <__gethex+0x9c>
    af94:	81000003 	ldbu	r4,0(r16)
    af98:	800b883a 	mov	r5,r16
    af9c:	800d883a 	mov	r6,r16
    afa0:	2825883a 	mov	r18,r5
    afa4:	02c00044 	movi	r11,1
    afa8:	0013883a 	mov	r9,zero
    afac:	003f6006 	br	ad30 <__gethex+0x9c>
    afb0:	8485c83a 	sub	r2,r16,r18
    afb4:	10bfffc4 	addi	r2,r2,-1
    afb8:	00c001c4 	movi	r3,7
    afbc:	1880700e 	bge	r3,r2,b180 <__gethex+0x4ec>
    afc0:	000b883a 	mov	r5,zero
    afc4:	1005d07a 	srai	r2,r2,1
    afc8:	29400044 	addi	r5,r5,1
    afcc:	18bffd16 	blt	r3,r2,afc4 <__gethex+0x330>
    afd0:	a809883a 	mov	r4,r21
    afd4:	000bcd00 	call	bcd0 <_Balloc>
    afd8:	1027883a 	mov	r19,r2
    afdc:	10800504 	addi	r2,r2,20
    afe0:	d8800215 	stw	r2,8(sp)
    afe4:	9400522e 	bgeu	r18,r16,b130 <__gethex+0x49c>
    afe8:	da000217 	ldw	r8,8(sp)
    afec:	800b883a 	mov	r5,r16
    aff0:	000f883a 	mov	r7,zero
    aff4:	0009883a 	mov	r4,zero
    aff8:	02400b84 	movi	r9,46
    affc:	02800804 	movi	r10,32
    b000:	297fffc4 	addi	r5,r5,-1
    b004:	28c00003 	ldbu	r3,0(r5)
    b008:	1a400826 	beq	r3,r9,b02c <__gethex+0x398>
    b00c:	380d883a 	mov	r6,r7
    b010:	3a802726 	beq	r7,r10,b0b0 <__gethex+0x41c>
    b014:	39c00104 	addi	r7,r7,4
    b018:	1c47883a 	add	r3,r3,r17
    b01c:	18800003 	ldbu	r2,0(r3)
    b020:	108003cc 	andi	r2,r2,15
    b024:	1184983a 	sll	r2,r2,r6
    b028:	2088b03a 	or	r4,r4,r2
    b02c:	917ff436 	bltu	r18,r5,b000 <__gethex+0x36c>
    b030:	d8c00217 	ldw	r3,8(sp)
    b034:	40800104 	addi	r2,r8,4
    b038:	41000015 	stw	r4,0(r8)
    b03c:	10c5c83a 	sub	r2,r2,r3
    b040:	1021d0ba 	srai	r16,r2,2
    b044:	9c000415 	stw	r16,16(r19)
    b048:	000b7780 	call	b778 <__hi0bits>
    b04c:	8006917a 	slli	r3,r16,5
    b050:	a5c00017 	ldw	r23,0(r20)
    b054:	1885c83a 	sub	r2,r3,r2
    b058:	b8801c16 	blt	r23,r2,b0cc <__gethex+0x438>
    b05c:	15c00a16 	blt	r2,r23,b088 <__gethex+0x3f4>
    b060:	0039883a 	mov	fp,zero
    b064:	a0800217 	ldw	r2,8(r20)
    b068:	1580340e 	bge	r2,r22,b13c <__gethex+0x4a8>
    b06c:	a809883a 	mov	r4,r21
    b070:	980b883a 	mov	r5,r19
    b074:	000b7500 	call	b750 <_Bfree>
    b078:	d8c00d17 	ldw	r3,52(sp)
    b07c:	048028c4 	movi	r18,163
    b080:	18000015 	stw	zero,0(r3)
    b084:	003f4606 	br	ada0 <__gethex+0x10c>
    b088:	b8a1c83a 	sub	r16,r23,r2
    b08c:	980b883a 	mov	r5,r19
    b090:	a809883a 	mov	r4,r21
    b094:	800d883a 	mov	r6,r16
    b098:	000c0940 	call	c094 <__lshift>
    b09c:	1027883a 	mov	r19,r2
    b0a0:	b42dc83a 	sub	r22,r22,r16
    b0a4:	10800504 	addi	r2,r2,20
    b0a8:	d8800215 	stw	r2,8(sp)
    b0ac:	003fec06 	br	b060 <__gethex+0x3cc>
    b0b0:	41000015 	stw	r4,0(r8)
    b0b4:	28c00003 	ldbu	r3,0(r5)
    b0b8:	01c00104 	movi	r7,4
    b0bc:	000d883a 	mov	r6,zero
    b0c0:	41d1883a 	add	r8,r8,r7
    b0c4:	0009883a 	mov	r4,zero
    b0c8:	003fd306 	br	b018 <__gethex+0x384>
    b0cc:	15e1c83a 	sub	r16,r2,r23
    b0d0:	9809883a 	mov	r4,r19
    b0d4:	800b883a 	mov	r5,r16
    b0d8:	000bc480 	call	bc48 <__any_on>
    b0dc:	1000061e 	bne	r2,zero,b0f8 <__gethex+0x464>
    b0e0:	0039883a 	mov	fp,zero
    b0e4:	9809883a 	mov	r4,r19
    b0e8:	800b883a 	mov	r5,r16
    b0ec:	000abe40 	call	abe4 <rshift>
    b0f0:	b42d883a 	add	r22,r22,r16
    b0f4:	003fdb06 	br	b064 <__gethex+0x3d0>
    b0f8:	817fffc4 	addi	r5,r16,-1
    b0fc:	2805d17a 	srai	r2,r5,5
    b100:	d8c00217 	ldw	r3,8(sp)
    b104:	290007cc 	andi	r4,r5,31
    b108:	1085883a 	add	r2,r2,r2
    b10c:	1085883a 	add	r2,r2,r2
    b110:	01800044 	movi	r6,1
    b114:	10c5883a 	add	r2,r2,r3
    b118:	3108983a 	sll	r4,r6,r4
    b11c:	10c00017 	ldw	r3,0(r2)
    b120:	20c8703a 	and	r4,r4,r3
    b124:	20001a1e 	bne	r4,zero,b190 <__gethex+0x4fc>
    b128:	3039883a 	mov	fp,r6
    b12c:	003fed06 	br	b0e4 <__gethex+0x450>
    b130:	1011883a 	mov	r8,r2
    b134:	0009883a 	mov	r4,zero
    b138:	003fbd06 	br	b030 <__gethex+0x39c>
    b13c:	a1000117 	ldw	r4,4(r20)
    b140:	b1001a16 	blt	r22,r4,b1ac <__gethex+0x518>
    b144:	04800044 	movi	r18,1
    b148:	e0000826 	beq	fp,zero,b16c <__gethex+0x4d8>
    b14c:	a1000317 	ldw	r4,12(r20)
    b150:	00800084 	movi	r2,2
    b154:	20809426 	beq	r4,r2,b3a8 <__gethex+0x714>
    b158:	008000c4 	movi	r2,3
    b15c:	20805826 	beq	r4,r2,b2c0 <__gethex+0x62c>
    b160:	00800044 	movi	r2,1
    b164:	20803f26 	beq	r4,r2,b264 <__gethex+0x5d0>
    b168:	94800414 	ori	r18,r18,16
    b16c:	d8800d17 	ldw	r2,52(sp)
    b170:	d8c00117 	ldw	r3,4(sp)
    b174:	14c00015 	stw	r19,0(r2)
    b178:	1d800015 	stw	r22,0(r3)
    b17c:	003f0806 	br	ada0 <__gethex+0x10c>
    b180:	000b883a 	mov	r5,zero
    b184:	003f9206 	br	afd0 <__gethex+0x33c>
    b188:	002d883a 	mov	r22,zero
    b18c:	003ef806 	br	ad70 <__gethex+0xdc>
    b190:	3140160e 	bge	r6,r5,b1ec <__gethex+0x558>
    b194:	9809883a 	mov	r4,r19
    b198:	817fff84 	addi	r5,r16,-2
    b19c:	000bc480 	call	bc48 <__any_on>
    b1a0:	10001226 	beq	r2,zero,b1ec <__gethex+0x558>
    b1a4:	070000c4 	movi	fp,3
    b1a8:	003fce06 	br	b0e4 <__gethex+0x450>
    b1ac:	25a3c83a 	sub	r17,r4,r22
    b1b0:	8dc01016 	blt	r17,r23,b1f4 <__gethex+0x560>
    b1b4:	a0c00317 	ldw	r3,12(r20)
    b1b8:	00800084 	movi	r2,2
    b1bc:	18809326 	beq	r3,r2,b40c <__gethex+0x778>
    b1c0:	008000c4 	movi	r2,3
    b1c4:	18808e26 	beq	r3,r2,b400 <__gethex+0x76c>
    b1c8:	00800044 	movi	r2,1
    b1cc:	18807b26 	beq	r3,r2,b3bc <__gethex+0x728>
    b1d0:	a809883a 	mov	r4,r21
    b1d4:	980b883a 	mov	r5,r19
    b1d8:	000b7500 	call	b750 <_Bfree>
    b1dc:	d8c00d17 	ldw	r3,52(sp)
    b1e0:	04801404 	movi	r18,80
    b1e4:	18000015 	stw	zero,0(r3)
    b1e8:	003eed06 	br	ada0 <__gethex+0x10c>
    b1ec:	07000084 	movi	fp,2
    b1f0:	003fbc06 	br	b0e4 <__gethex+0x450>
    b1f4:	8c3fffc4 	addi	r16,r17,-1
    b1f8:	e0001426 	beq	fp,zero,b24c <__gethex+0x5b8>
    b1fc:	07000044 	movi	fp,1
    b200:	8005d17a 	srai	r2,r16,5
    b204:	d8c00217 	ldw	r3,8(sp)
    b208:	814007cc 	andi	r5,r16,31
    b20c:	1085883a 	add	r2,r2,r2
    b210:	1085883a 	add	r2,r2,r2
    b214:	10c5883a 	add	r2,r2,r3
    b218:	00c00044 	movi	r3,1
    b21c:	1946983a 	sll	r3,r3,r5
    b220:	11000017 	ldw	r4,0(r2)
    b224:	1906703a 	and	r3,r3,r4
    b228:	18000126 	beq	r3,zero,b230 <__gethex+0x59c>
    b22c:	e7000094 	ori	fp,fp,2
    b230:	880b883a 	mov	r5,r17
    b234:	9809883a 	mov	r4,r19
    b238:	000abe40 	call	abe4 <rshift>
    b23c:	a5800117 	ldw	r22,4(r20)
    b240:	bc6fc83a 	sub	r23,r23,r17
    b244:	04800084 	movi	r18,2
    b248:	003fbf06 	br	b148 <__gethex+0x4b4>
    b24c:	043fec0e 	bge	zero,r16,b200 <__gethex+0x56c>
    b250:	9809883a 	mov	r4,r19
    b254:	800b883a 	mov	r5,r16
    b258:	000bc480 	call	bc48 <__any_on>
    b25c:	1039883a 	mov	fp,r2
    b260:	003fe706 	br	b200 <__gethex+0x56c>
    b264:	e080008c 	andi	r2,fp,2
    b268:	103fbf26 	beq	r2,zero,b168 <__gethex+0x4d4>
    b26c:	d8c00217 	ldw	r3,8(sp)
    b270:	18800017 	ldw	r2,0(r3)
    b274:	e084b03a 	or	r2,fp,r2
    b278:	1104703a 	and	r2,r2,r4
    b27c:	103fba26 	beq	r2,zero,b168 <__gethex+0x4d4>
    b280:	9c000417 	ldw	r16,16(r19)
    b284:	d8c00217 	ldw	r3,8(sp)
    b288:	017fffc4 	movi	r5,-1
    b28c:	8405883a 	add	r2,r16,r16
    b290:	10b9883a 	add	fp,r2,r2
    b294:	1f09883a 	add	r4,r3,fp
    b298:	dc000015 	stw	r16,0(sp)
    b29c:	00000306 	br	b2ac <__gethex+0x618>
    b2a0:	18000015 	stw	zero,0(r3)
    b2a4:	18c00104 	addi	r3,r3,4
    b2a8:	1900082e 	bgeu	r3,r4,b2cc <__gethex+0x638>
    b2ac:	18800017 	ldw	r2,0(r3)
    b2b0:	117ffb26 	beq	r2,r5,b2a0 <__gethex+0x60c>
    b2b4:	10800044 	addi	r2,r2,1
    b2b8:	18800015 	stw	r2,0(r3)
    b2bc:	00001f06 	br	b33c <__gethex+0x6a8>
    b2c0:	d8800e17 	ldw	r2,56(sp)
    b2c4:	103fa826 	beq	r2,zero,b168 <__gethex+0x4d4>
    b2c8:	003fed06 	br	b280 <__gethex+0x5ec>
    b2cc:	98800217 	ldw	r2,8(r19)
    b2d0:	80801316 	blt	r16,r2,b320 <__gethex+0x68c>
    b2d4:	99400117 	ldw	r5,4(r19)
    b2d8:	a809883a 	mov	r4,r21
    b2dc:	29400044 	addi	r5,r5,1
    b2e0:	000bcd00 	call	bcd0 <_Balloc>
    b2e4:	99800417 	ldw	r6,16(r19)
    b2e8:	99400304 	addi	r5,r19,12
    b2ec:	11000304 	addi	r4,r2,12
    b2f0:	318d883a 	add	r6,r6,r6
    b2f4:	318d883a 	add	r6,r6,r6
    b2f8:	31800204 	addi	r6,r6,8
    b2fc:	1023883a 	mov	r17,r2
    b300:	000125c0 	call	125c <memcpy>
    b304:	980b883a 	mov	r5,r19
    b308:	a809883a 	mov	r4,r21
    b30c:	000b7500 	call	b750 <_Bfree>
    b310:	8c000417 	ldw	r16,16(r17)
    b314:	88800504 	addi	r2,r17,20
    b318:	8827883a 	mov	r19,r17
    b31c:	d8800215 	stw	r2,8(sp)
    b320:	8405883a 	add	r2,r16,r16
    b324:	1085883a 	add	r2,r2,r2
    b328:	14c5883a 	add	r2,r2,r19
    b32c:	84000044 	addi	r16,r16,1
    b330:	00c00044 	movi	r3,1
    b334:	10c00515 	stw	r3,20(r2)
    b338:	9c000415 	stw	r16,16(r19)
    b33c:	00800084 	movi	r2,2
    b340:	90801426 	beq	r18,r2,b394 <__gethex+0x700>
    b344:	d8800017 	ldw	r2,0(sp)
    b348:	14000b16 	blt	r2,r16,b378 <__gethex+0x6e4>
    b34c:	bc0007cc 	andi	r16,r23,31
    b350:	8000021e 	bne	r16,zero,b35c <__gethex+0x6c8>
    b354:	94800814 	ori	r18,r18,32
    b358:	003f8406 	br	b16c <__gethex+0x4d8>
    b35c:	d8c00217 	ldw	r3,8(sp)
    b360:	1f05883a 	add	r2,r3,fp
    b364:	113fff17 	ldw	r4,-4(r2)
    b368:	000b7780 	call	b778 <__hi0bits>
    b36c:	00c00804 	movi	r3,32
    b370:	1c07c83a 	sub	r3,r3,r16
    b374:	10fff70e 	bge	r2,r3,b354 <__gethex+0x6c0>
    b378:	9809883a 	mov	r4,r19
    b37c:	01400044 	movi	r5,1
    b380:	000abe40 	call	abe4 <rshift>
    b384:	a0800217 	ldw	r2,8(r20)
    b388:	b5800044 	addi	r22,r22,1
    b38c:	15bf3716 	blt	r2,r22,b06c <__gethex+0x3d8>
    b390:	003ff006 	br	b354 <__gethex+0x6c0>
    b394:	a0800017 	ldw	r2,0(r20)
    b398:	10bfffc4 	addi	r2,r2,-1
    b39c:	b8801e26 	beq	r23,r2,b418 <__gethex+0x784>
    b3a0:	04800884 	movi	r18,34
    b3a4:	003f7106 	br	b16c <__gethex+0x4d8>
    b3a8:	d8c00e17 	ldw	r3,56(sp)
    b3ac:	00800044 	movi	r2,1
    b3b0:	10c5c83a 	sub	r2,r2,r3
    b3b4:	103f6c26 	beq	r2,zero,b168 <__gethex+0x4d4>
    b3b8:	003fb106 	br	b280 <__gethex+0x5ec>
    b3bc:	bc7f841e 	bne	r23,r17,b1d0 <__gethex+0x53c>
    b3c0:	1dc0050e 	bge	r3,r23,b3d8 <__gethex+0x744>
    b3c4:	b8cbc83a 	sub	r5,r23,r3
    b3c8:	9809883a 	mov	r4,r19
    b3cc:	000bc480 	call	bc48 <__any_on>
    b3d0:	103f7f26 	beq	r2,zero,b1d0 <__gethex+0x53c>
    b3d4:	a1000117 	ldw	r4,4(r20)
    b3d8:	d8800117 	ldw	r2,4(sp)
    b3dc:	d8c00217 	ldw	r3,8(sp)
    b3e0:	04000044 	movi	r16,1
    b3e4:	11000015 	stw	r4,0(r2)
    b3e8:	d8800d17 	ldw	r2,52(sp)
    b3ec:	04801884 	movi	r18,98
    b3f0:	1c000015 	stw	r16,0(r3)
    b3f4:	14c00015 	stw	r19,0(r2)
    b3f8:	9c000415 	stw	r16,16(r19)
    b3fc:	003e6806 	br	ada0 <__gethex+0x10c>
    b400:	d8c00e17 	ldw	r3,56(sp)
    b404:	183f7226 	beq	r3,zero,b1d0 <__gethex+0x53c>
    b408:	003ff306 	br	b3d8 <__gethex+0x744>
    b40c:	d8800e17 	ldw	r2,56(sp)
    b410:	103ff126 	beq	r2,zero,b3d8 <__gethex+0x744>
    b414:	003f6e06 	br	b1d0 <__gethex+0x53c>
    b418:	b805d17a 	srai	r2,r23,5
    b41c:	d8c00217 	ldw	r3,8(sp)
    b420:	b94007cc 	andi	r5,r23,31
    b424:	1085883a 	add	r2,r2,r2
    b428:	1085883a 	add	r2,r2,r2
    b42c:	10c5883a 	add	r2,r2,r3
    b430:	00c00044 	movi	r3,1
    b434:	1946983a 	sll	r3,r3,r5
    b438:	11000017 	ldw	r4,0(r2)
    b43c:	1906703a 	and	r3,r3,r4
    b440:	183fd726 	beq	r3,zero,b3a0 <__gethex+0x70c>
    b444:	04800844 	movi	r18,33
    b448:	003f4806 	br	b16c <__gethex+0x4d8>

0000b44c <L_shift>:
    b44c:	00800204 	movi	r2,8
    b450:	1185c83a 	sub	r2,r2,r6
    b454:	1085883a 	add	r2,r2,r2
    b458:	21c00017 	ldw	r7,0(r4)
    b45c:	1093883a 	add	r9,r2,r2
    b460:	00800804 	movi	r2,32
    b464:	200d883a 	mov	r6,r4
    b468:	1251c83a 	sub	r8,r2,r9
    b46c:	31800104 	addi	r6,r6,4
    b470:	3805883a 	mov	r2,r7
    b474:	31c00017 	ldw	r7,0(r6)
    b478:	3a08983a 	sll	r4,r7,r8
    b47c:	3a46d83a 	srl	r3,r7,r9
    b480:	1104b03a 	or	r2,r2,r4
    b484:	180f883a 	mov	r7,r3
    b488:	30bfff15 	stw	r2,-4(r6)
    b48c:	30c00015 	stw	r3,0(r6)
    b490:	317ff636 	bltu	r6,r5,b46c <L_shift+0x20>
    b494:	f800283a 	ret

0000b498 <__hexnan>:
    b498:	defff404 	addi	sp,sp,-48
    b49c:	dd800815 	stw	r22,32(sp)
    b4a0:	05800074 	movhi	r22,1
    b4a4:	b5963104 	addi	r22,r22,22724
    b4a8:	b0800c03 	ldbu	r2,48(r22)
    b4ac:	dcc00515 	stw	r19,20(sp)
    b4b0:	dc000215 	stw	r16,8(sp)
    b4b4:	dfc00b15 	stw	ra,44(sp)
    b4b8:	df000a15 	stw	fp,40(sp)
    b4bc:	ddc00915 	stw	r23,36(sp)
    b4c0:	dd400715 	stw	r21,28(sp)
    b4c4:	dd000615 	stw	r20,24(sp)
    b4c8:	dc800415 	stw	r18,16(sp)
    b4cc:	dc400315 	stw	r17,12(sp)
    b4d0:	d9000115 	stw	r4,4(sp)
    b4d4:	2821883a 	mov	r16,r5
    b4d8:	3027883a 	mov	r19,r6
    b4dc:	10007426 	beq	r2,zero,b6b0 <__hexnan+0x218>
    b4e0:	80c00017 	ldw	r3,0(r16)
    b4e4:	1805d17a 	srai	r2,r3,5
    b4e8:	18c007cc 	andi	r3,r3,31
    b4ec:	1839003a 	cmpeq	fp,r3,zero
    b4f0:	1085883a 	add	r2,r2,r2
    b4f4:	1085883a 	add	r2,r2,r2
    b4f8:	d8c00015 	stw	r3,0(sp)
    b4fc:	14c5883a 	add	r2,r2,r19
    b500:	e000011e 	bne	fp,zero,b508 <__hexnan+0x70>
    b504:	10800104 	addi	r2,r2,4
    b508:	d8c00117 	ldw	r3,4(sp)
    b50c:	153fff04 	addi	r20,r2,-4
    b510:	a021883a 	mov	r16,r20
    b514:	1c400017 	ldw	r17,0(r3)
    b518:	a02b883a 	mov	r21,r20
    b51c:	0025883a 	mov	r18,zero
    b520:	002f883a 	mov	r23,zero
    b524:	000d883a 	mov	r6,zero
    b528:	103fff15 	stw	zero,-4(r2)
    b52c:	8c400044 	addi	r17,r17,1
    b530:	89000003 	ldbu	r4,0(r17)
    b534:	20000e26 	beq	r4,zero,b570 <__hexnan+0xd8>
    b538:	2585883a 	add	r2,r4,r22
    b53c:	10c00003 	ldbu	r3,0(r2)
    b540:	18002e1e 	bne	r3,zero,b5fc <__hexnan+0x164>
    b544:	00800804 	movi	r2,32
    b548:	11005536 	bltu	r2,r4,b6a0 <__hexnan+0x208>
    b54c:	bcbff70e 	bge	r23,r18,b52c <__hexnan+0x94>
    b550:	8540022e 	bgeu	r16,r21,b55c <__hexnan+0xc4>
    b554:	008001c4 	movi	r2,7
    b558:	11803c0e 	bge	r2,r6,b64c <__hexnan+0x1b4>
    b55c:	9c003536 	bltu	r19,r16,b634 <__hexnan+0x19c>
    b560:	8c400044 	addi	r17,r17,1
    b564:	89000003 	ldbu	r4,0(r17)
    b568:	01800204 	movi	r6,8
    b56c:	203ff21e 	bne	r4,zero,b538 <__hexnan+0xa0>
    b570:	90004d26 	beq	r18,zero,b6a8 <__hexnan+0x210>
    b574:	85404336 	bltu	r16,r21,b684 <__hexnan+0x1ec>
    b578:	9c00382e 	bgeu	r19,r16,b65c <__hexnan+0x1c4>
    b57c:	9807883a 	mov	r3,r19
    b580:	80800017 	ldw	r2,0(r16)
    b584:	84000104 	addi	r16,r16,4
    b588:	18800015 	stw	r2,0(r3)
    b58c:	18c00104 	addi	r3,r3,4
    b590:	a43ffb2e 	bgeu	r20,r16,b580 <__hexnan+0xe8>
    b594:	18000015 	stw	zero,0(r3)
    b598:	18c00104 	addi	r3,r3,4
    b59c:	a0fffd2e 	bgeu	r20,r3,b594 <__hexnan+0xfc>
    b5a0:	a0800017 	ldw	r2,0(r20)
    b5a4:	1000071e 	bne	r2,zero,b5c4 <__hexnan+0x12c>
    b5a8:	9d004326 	beq	r19,r20,b6b8 <__hexnan+0x220>
    b5ac:	a007883a 	mov	r3,r20
    b5b0:	00000106 	br	b5b8 <__hexnan+0x120>
    b5b4:	98c04026 	beq	r19,r3,b6b8 <__hexnan+0x220>
    b5b8:	18ffff04 	addi	r3,r3,-4
    b5bc:	18800017 	ldw	r2,0(r3)
    b5c0:	103ffc26 	beq	r2,zero,b5b4 <__hexnan+0x11c>
    b5c4:	00c00144 	movi	r3,5
    b5c8:	1805883a 	mov	r2,r3
    b5cc:	dfc00b17 	ldw	ra,44(sp)
    b5d0:	df000a17 	ldw	fp,40(sp)
    b5d4:	ddc00917 	ldw	r23,36(sp)
    b5d8:	dd800817 	ldw	r22,32(sp)
    b5dc:	dd400717 	ldw	r21,28(sp)
    b5e0:	dd000617 	ldw	r20,24(sp)
    b5e4:	dcc00517 	ldw	r19,20(sp)
    b5e8:	dc800417 	ldw	r18,16(sp)
    b5ec:	dc400317 	ldw	r17,12(sp)
    b5f0:	dc000217 	ldw	r16,8(sp)
    b5f4:	dec00c04 	addi	sp,sp,48
    b5f8:	f800283a 	ret
    b5fc:	31800044 	addi	r6,r6,1
    b600:	00800204 	movi	r2,8
    b604:	94800044 	addi	r18,r18,1
    b608:	1180040e 	bge	r2,r6,b61c <__hexnan+0x184>
    b60c:	9c3fc72e 	bgeu	r19,r16,b52c <__hexnan+0x94>
    b610:	843fff04 	addi	r16,r16,-4
    b614:	80000015 	stw	zero,0(r16)
    b618:	01800044 	movi	r6,1
    b61c:	80800017 	ldw	r2,0(r16)
    b620:	18c003cc 	andi	r3,r3,15
    b624:	1004913a 	slli	r2,r2,4
    b628:	10c4b03a 	or	r2,r2,r3
    b62c:	80800015 	stw	r2,0(r16)
    b630:	003fbe06 	br	b52c <__hexnan+0x94>
    b634:	843fff04 	addi	r16,r16,-4
    b638:	802b883a 	mov	r21,r16
    b63c:	902f883a 	mov	r23,r18
    b640:	000d883a 	mov	r6,zero
    b644:	80000015 	stw	zero,0(r16)
    b648:	003fb806 	br	b52c <__hexnan+0x94>
    b64c:	8009883a 	mov	r4,r16
    b650:	a80b883a 	mov	r5,r21
    b654:	000b44c0 	call	b44c <L_shift>
    b658:	003fc006 	br	b55c <__hexnan+0xc4>
    b65c:	e03fd01e 	bne	fp,zero,b5a0 <__hexnan+0x108>
    b660:	d8c00017 	ldw	r3,0(sp)
    b664:	00800804 	movi	r2,32
    b668:	10c5c83a 	sub	r2,r2,r3
    b66c:	00ffffc4 	movi	r3,-1
    b670:	1886d83a 	srl	r3,r3,r2
    b674:	a0800017 	ldw	r2,0(r20)
    b678:	10c4703a 	and	r2,r2,r3
    b67c:	a0800015 	stw	r2,0(r20)
    b680:	003fc806 	br	b5a4 <__hexnan+0x10c>
    b684:	008001c4 	movi	r2,7
    b688:	11bfbb16 	blt	r2,r6,b578 <__hexnan+0xe0>
    b68c:	a80b883a 	mov	r5,r21
    b690:	8009883a 	mov	r4,r16
    b694:	000b44c0 	call	b44c <L_shift>
    b698:	9c3ff02e 	bgeu	r19,r16,b65c <__hexnan+0x1c4>
    b69c:	003fb706 	br	b57c <__hexnan+0xe4>
    b6a0:	00800a44 	movi	r2,41
    b6a4:	20800826 	beq	r4,r2,b6c8 <__hexnan+0x230>
    b6a8:	00c00104 	movi	r3,4
    b6ac:	003fc606 	br	b5c8 <__hexnan+0x130>
    b6b0:	000ab7c0 	call	ab7c <__hexdig_init>
    b6b4:	003f8a06 	br	b4e0 <__hexnan+0x48>
    b6b8:	00800044 	movi	r2,1
    b6bc:	00c00144 	movi	r3,5
    b6c0:	98800015 	stw	r2,0(r19)
    b6c4:	003fc006 	br	b5c8 <__hexnan+0x130>
    b6c8:	903ff726 	beq	r18,zero,b6a8 <__hexnan+0x210>
    b6cc:	d8c00117 	ldw	r3,4(sp)
    b6d0:	88800044 	addi	r2,r17,1
    b6d4:	18800015 	stw	r2,0(r3)
    b6d8:	857fa72e 	bgeu	r16,r21,b578 <__hexnan+0xe0>
    b6dc:	003fe906 	br	b684 <__hexnan+0x1ec>

0000b6e0 <_isatty_r>:
    b6e0:	defffd04 	addi	sp,sp,-12
    b6e4:	dc000015 	stw	r16,0(sp)
    b6e8:	04000074 	movhi	r16,1
    b6ec:	84161d04 	addi	r16,r16,22644
    b6f0:	dc400115 	stw	r17,4(sp)
    b6f4:	80000015 	stw	zero,0(r16)
    b6f8:	2023883a 	mov	r17,r4
    b6fc:	2809883a 	mov	r4,r5
    b700:	dfc00215 	stw	ra,8(sp)
    b704:	000f5280 	call	f528 <isatty>
    b708:	1007883a 	mov	r3,r2
    b70c:	00bfffc4 	movi	r2,-1
    b710:	18800626 	beq	r3,r2,b72c <_isatty_r+0x4c>
    b714:	1805883a 	mov	r2,r3
    b718:	dfc00217 	ldw	ra,8(sp)
    b71c:	dc400117 	ldw	r17,4(sp)
    b720:	dc000017 	ldw	r16,0(sp)
    b724:	dec00304 	addi	sp,sp,12
    b728:	f800283a 	ret
    b72c:	80800017 	ldw	r2,0(r16)
    b730:	103ff826 	beq	r2,zero,b714 <_isatty_r+0x34>
    b734:	88800015 	stw	r2,0(r17)
    b738:	1805883a 	mov	r2,r3
    b73c:	dfc00217 	ldw	ra,8(sp)
    b740:	dc400117 	ldw	r17,4(sp)
    b744:	dc000017 	ldw	r16,0(sp)
    b748:	dec00304 	addi	sp,sp,12
    b74c:	f800283a 	ret

0000b750 <_Bfree>:
    b750:	28000826 	beq	r5,zero,b774 <_Bfree+0x24>
    b754:	28800117 	ldw	r2,4(r5)
    b758:	21001317 	ldw	r4,76(r4)
    b75c:	1085883a 	add	r2,r2,r2
    b760:	1085883a 	add	r2,r2,r2
    b764:	1105883a 	add	r2,r2,r4
    b768:	10c00017 	ldw	r3,0(r2)
    b76c:	28c00015 	stw	r3,0(r5)
    b770:	11400015 	stw	r5,0(r2)
    b774:	f800283a 	ret

0000b778 <__hi0bits>:
    b778:	20bfffec 	andhi	r2,r4,65535
    b77c:	10001426 	beq	r2,zero,b7d0 <__hi0bits+0x58>
    b780:	0007883a 	mov	r3,zero
    b784:	20bfc02c 	andhi	r2,r4,65280
    b788:	1000021e 	bne	r2,zero,b794 <__hi0bits+0x1c>
    b78c:	2008923a 	slli	r4,r4,8
    b790:	18c00204 	addi	r3,r3,8
    b794:	20bc002c 	andhi	r2,r4,61440
    b798:	1000021e 	bne	r2,zero,b7a4 <__hi0bits+0x2c>
    b79c:	2008913a 	slli	r4,r4,4
    b7a0:	18c00104 	addi	r3,r3,4
    b7a4:	20b0002c 	andhi	r2,r4,49152
    b7a8:	1000031e 	bne	r2,zero,b7b8 <__hi0bits+0x40>
    b7ac:	2105883a 	add	r2,r4,r4
    b7b0:	18c00084 	addi	r3,r3,2
    b7b4:	1089883a 	add	r4,r2,r2
    b7b8:	20000316 	blt	r4,zero,b7c8 <__hi0bits+0x50>
    b7bc:	2090002c 	andhi	r2,r4,16384
    b7c0:	10000626 	beq	r2,zero,b7dc <__hi0bits+0x64>
    b7c4:	18c00044 	addi	r3,r3,1
    b7c8:	1805883a 	mov	r2,r3
    b7cc:	f800283a 	ret
    b7d0:	2008943a 	slli	r4,r4,16
    b7d4:	00c00404 	movi	r3,16
    b7d8:	003fea06 	br	b784 <__hi0bits+0xc>
    b7dc:	00c00804 	movi	r3,32
    b7e0:	1805883a 	mov	r2,r3
    b7e4:	f800283a 	ret

0000b7e8 <__lo0bits>:
    b7e8:	20c00017 	ldw	r3,0(r4)
    b7ec:	188001cc 	andi	r2,r3,7
    b7f0:	10000a26 	beq	r2,zero,b81c <__lo0bits+0x34>
    b7f4:	1880004c 	andi	r2,r3,1
    b7f8:	1005003a 	cmpeq	r2,r2,zero
    b7fc:	10002126 	beq	r2,zero,b884 <__lo0bits+0x9c>
    b800:	1880008c 	andi	r2,r3,2
    b804:	1000251e 	bne	r2,zero,b89c <__lo0bits+0xb4>
    b808:	1804d0ba 	srli	r2,r3,2
    b80c:	01400084 	movi	r5,2
    b810:	20800015 	stw	r2,0(r4)
    b814:	2805883a 	mov	r2,r5
    b818:	f800283a 	ret
    b81c:	18bfffcc 	andi	r2,r3,65535
    b820:	10001526 	beq	r2,zero,b878 <__lo0bits+0x90>
    b824:	000b883a 	mov	r5,zero
    b828:	18803fcc 	andi	r2,r3,255
    b82c:	1000021e 	bne	r2,zero,b838 <__lo0bits+0x50>
    b830:	1806d23a 	srli	r3,r3,8
    b834:	29400204 	addi	r5,r5,8
    b838:	188003cc 	andi	r2,r3,15
    b83c:	1000021e 	bne	r2,zero,b848 <__lo0bits+0x60>
    b840:	1806d13a 	srli	r3,r3,4
    b844:	29400104 	addi	r5,r5,4
    b848:	188000cc 	andi	r2,r3,3
    b84c:	1000021e 	bne	r2,zero,b858 <__lo0bits+0x70>
    b850:	1806d0ba 	srli	r3,r3,2
    b854:	29400084 	addi	r5,r5,2
    b858:	1880004c 	andi	r2,r3,1
    b85c:	1000031e 	bne	r2,zero,b86c <__lo0bits+0x84>
    b860:	1806d07a 	srli	r3,r3,1
    b864:	18000a26 	beq	r3,zero,b890 <__lo0bits+0xa8>
    b868:	29400044 	addi	r5,r5,1
    b86c:	2805883a 	mov	r2,r5
    b870:	20c00015 	stw	r3,0(r4)
    b874:	f800283a 	ret
    b878:	1806d43a 	srli	r3,r3,16
    b87c:	01400404 	movi	r5,16
    b880:	003fe906 	br	b828 <__lo0bits+0x40>
    b884:	000b883a 	mov	r5,zero
    b888:	2805883a 	mov	r2,r5
    b88c:	f800283a 	ret
    b890:	01400804 	movi	r5,32
    b894:	2805883a 	mov	r2,r5
    b898:	f800283a 	ret
    b89c:	1804d07a 	srli	r2,r3,1
    b8a0:	01400044 	movi	r5,1
    b8a4:	20800015 	stw	r2,0(r4)
    b8a8:	003fda06 	br	b814 <__lo0bits+0x2c>

0000b8ac <__mcmp>:
    b8ac:	20800417 	ldw	r2,16(r4)
    b8b0:	28c00417 	ldw	r3,16(r5)
    b8b4:	10cfc83a 	sub	r7,r2,r3
    b8b8:	38000c1e 	bne	r7,zero,b8ec <__mcmp+0x40>
    b8bc:	18c5883a 	add	r2,r3,r3
    b8c0:	1085883a 	add	r2,r2,r2
    b8c4:	10c00504 	addi	r3,r2,20
    b8c8:	21000504 	addi	r4,r4,20
    b8cc:	28cb883a 	add	r5,r5,r3
    b8d0:	2085883a 	add	r2,r4,r2
    b8d4:	10bfff04 	addi	r2,r2,-4
    b8d8:	297fff04 	addi	r5,r5,-4
    b8dc:	11800017 	ldw	r6,0(r2)
    b8e0:	28c00017 	ldw	r3,0(r5)
    b8e4:	30c0031e 	bne	r6,r3,b8f4 <__mcmp+0x48>
    b8e8:	20bffa36 	bltu	r4,r2,b8d4 <__mcmp+0x28>
    b8ec:	3805883a 	mov	r2,r7
    b8f0:	f800283a 	ret
    b8f4:	30c00336 	bltu	r6,r3,b904 <__mcmp+0x58>
    b8f8:	01c00044 	movi	r7,1
    b8fc:	3805883a 	mov	r2,r7
    b900:	f800283a 	ret
    b904:	01ffffc4 	movi	r7,-1
    b908:	003ff806 	br	b8ec <__mcmp+0x40>

0000b90c <__ulp>:
    b90c:	295ffc2c 	andhi	r5,r5,32752
    b910:	013f3034 	movhi	r4,64704
    b914:	290b883a 	add	r5,r5,r4
    b918:	0145c83a 	sub	r2,zero,r5
    b91c:	1007d53a 	srai	r3,r2,20
    b920:	000d883a 	mov	r6,zero
    b924:	0140040e 	bge	zero,r5,b938 <__ulp+0x2c>
    b928:	280f883a 	mov	r7,r5
    b92c:	3807883a 	mov	r3,r7
    b930:	3005883a 	mov	r2,r6
    b934:	f800283a 	ret
    b938:	008004c4 	movi	r2,19
    b93c:	193ffb04 	addi	r4,r3,-20
    b940:	10c00c0e 	bge	r2,r3,b974 <__ulp+0x68>
    b944:	008007c4 	movi	r2,31
    b948:	1107c83a 	sub	r3,r2,r4
    b94c:	00800784 	movi	r2,30
    b950:	01400044 	movi	r5,1
    b954:	11000216 	blt	r2,r4,b960 <__ulp+0x54>
    b958:	00800044 	movi	r2,1
    b95c:	10ca983a 	sll	r5,r2,r3
    b960:	000f883a 	mov	r7,zero
    b964:	280d883a 	mov	r6,r5
    b968:	3807883a 	mov	r3,r7
    b96c:	3005883a 	mov	r2,r6
    b970:	f800283a 	ret
    b974:	00800234 	movhi	r2,8
    b978:	10cfd83a 	sra	r7,r2,r3
    b97c:	000d883a 	mov	r6,zero
    b980:	3005883a 	mov	r2,r6
    b984:	3807883a 	mov	r3,r7
    b988:	f800283a 	ret

0000b98c <__b2d>:
    b98c:	20800417 	ldw	r2,16(r4)
    b990:	defff904 	addi	sp,sp,-28
    b994:	dd000415 	stw	r20,16(sp)
    b998:	1085883a 	add	r2,r2,r2
    b99c:	25000504 	addi	r20,r4,20
    b9a0:	1085883a 	add	r2,r2,r2
    b9a4:	dc000015 	stw	r16,0(sp)
    b9a8:	a0a1883a 	add	r16,r20,r2
    b9ac:	dd400515 	stw	r21,20(sp)
    b9b0:	857fff17 	ldw	r21,-4(r16)
    b9b4:	dc400115 	stw	r17,4(sp)
    b9b8:	dfc00615 	stw	ra,24(sp)
    b9bc:	a809883a 	mov	r4,r21
    b9c0:	2823883a 	mov	r17,r5
    b9c4:	dcc00315 	stw	r19,12(sp)
    b9c8:	dc800215 	stw	r18,8(sp)
    b9cc:	000b7780 	call	b778 <__hi0bits>
    b9d0:	100b883a 	mov	r5,r2
    b9d4:	00800804 	movi	r2,32
    b9d8:	1145c83a 	sub	r2,r2,r5
    b9dc:	88800015 	stw	r2,0(r17)
    b9e0:	00800284 	movi	r2,10
    b9e4:	80ffff04 	addi	r3,r16,-4
    b9e8:	11401416 	blt	r2,r5,ba3c <__b2d+0xb0>
    b9ec:	008002c4 	movi	r2,11
    b9f0:	1149c83a 	sub	r4,r2,r5
    b9f4:	a0c02736 	bltu	r20,r3,ba94 <__b2d+0x108>
    b9f8:	000d883a 	mov	r6,zero
    b9fc:	28800544 	addi	r2,r5,21
    ba00:	a906d83a 	srl	r3,r21,r4
    ba04:	a884983a 	sll	r2,r21,r2
    ba08:	1ccffc34 	orhi	r19,r3,16368
    ba0c:	11a4b03a 	or	r18,r2,r6
    ba10:	9005883a 	mov	r2,r18
    ba14:	9807883a 	mov	r3,r19
    ba18:	dfc00617 	ldw	ra,24(sp)
    ba1c:	dd400517 	ldw	r21,20(sp)
    ba20:	dd000417 	ldw	r20,16(sp)
    ba24:	dcc00317 	ldw	r19,12(sp)
    ba28:	dc800217 	ldw	r18,8(sp)
    ba2c:	dc400117 	ldw	r17,4(sp)
    ba30:	dc000017 	ldw	r16,0(sp)
    ba34:	dec00704 	addi	sp,sp,28
    ba38:	f800283a 	ret
    ba3c:	a0c00e36 	bltu	r20,r3,ba78 <__b2d+0xec>
    ba40:	293ffd44 	addi	r4,r5,-11
    ba44:	000d883a 	mov	r6,zero
    ba48:	20000f26 	beq	r4,zero,ba88 <__b2d+0xfc>
    ba4c:	00800804 	movi	r2,32
    ba50:	110bc83a 	sub	r5,r2,r4
    ba54:	a0c01236 	bltu	r20,r3,baa0 <__b2d+0x114>
    ba58:	000f883a 	mov	r7,zero
    ba5c:	a904983a 	sll	r2,r21,r4
    ba60:	3146d83a 	srl	r3,r6,r5
    ba64:	3108983a 	sll	r4,r6,r4
    ba68:	108ffc34 	orhi	r2,r2,16368
    ba6c:	18a6b03a 	or	r19,r3,r2
    ba70:	3924b03a 	or	r18,r7,r4
    ba74:	003fe606 	br	ba10 <__b2d+0x84>
    ba78:	293ffd44 	addi	r4,r5,-11
    ba7c:	81bffe17 	ldw	r6,-8(r16)
    ba80:	80fffe04 	addi	r3,r16,-8
    ba84:	203ff11e 	bne	r4,zero,ba4c <__b2d+0xc0>
    ba88:	accffc34 	orhi	r19,r21,16368
    ba8c:	3025883a 	mov	r18,r6
    ba90:	003fdf06 	br	ba10 <__b2d+0x84>
    ba94:	18bfff17 	ldw	r2,-4(r3)
    ba98:	110cd83a 	srl	r6,r2,r4
    ba9c:	003fd706 	br	b9fc <__b2d+0x70>
    baa0:	18bfff17 	ldw	r2,-4(r3)
    baa4:	114ed83a 	srl	r7,r2,r5
    baa8:	003fec06 	br	ba5c <__b2d+0xd0>

0000baac <__ratio>:
    baac:	defff904 	addi	sp,sp,-28
    bab0:	dc400215 	stw	r17,8(sp)
    bab4:	2823883a 	mov	r17,r5
    bab8:	d80b883a 	mov	r5,sp
    babc:	dfc00615 	stw	ra,24(sp)
    bac0:	dd000515 	stw	r20,20(sp)
    bac4:	dcc00415 	stw	r19,16(sp)
    bac8:	dc800315 	stw	r18,12(sp)
    bacc:	2025883a 	mov	r18,r4
    bad0:	000b98c0 	call	b98c <__b2d>
    bad4:	8809883a 	mov	r4,r17
    bad8:	d9400104 	addi	r5,sp,4
    badc:	1027883a 	mov	r19,r2
    bae0:	1829883a 	mov	r20,r3
    bae4:	000b98c0 	call	b98c <__b2d>
    bae8:	89000417 	ldw	r4,16(r17)
    baec:	91c00417 	ldw	r7,16(r18)
    baf0:	d9800117 	ldw	r6,4(sp)
    baf4:	180b883a 	mov	r5,r3
    baf8:	390fc83a 	sub	r7,r7,r4
    bafc:	1009883a 	mov	r4,r2
    bb00:	d8800017 	ldw	r2,0(sp)
    bb04:	380e917a 	slli	r7,r7,5
    bb08:	2011883a 	mov	r8,r4
    bb0c:	1185c83a 	sub	r2,r2,r6
    bb10:	11c5883a 	add	r2,r2,r7
    bb14:	1006953a 	slli	r3,r2,20
    bb18:	2813883a 	mov	r9,r5
    bb1c:	00800d0e 	bge	zero,r2,bb54 <__ratio+0xa8>
    bb20:	1d29883a 	add	r20,r3,r20
    bb24:	a00b883a 	mov	r5,r20
    bb28:	480f883a 	mov	r7,r9
    bb2c:	9809883a 	mov	r4,r19
    bb30:	400d883a 	mov	r6,r8
    bb34:	000df300 	call	df30 <__divdf3>
    bb38:	dfc00617 	ldw	ra,24(sp)
    bb3c:	dd000517 	ldw	r20,20(sp)
    bb40:	dcc00417 	ldw	r19,16(sp)
    bb44:	dc800317 	ldw	r18,12(sp)
    bb48:	dc400217 	ldw	r17,8(sp)
    bb4c:	dec00704 	addi	sp,sp,28
    bb50:	f800283a 	ret
    bb54:	28d3c83a 	sub	r9,r5,r3
    bb58:	003ff206 	br	bb24 <__ratio+0x78>

0000bb5c <_mprec_log10>:
    bb5c:	defffe04 	addi	sp,sp,-8
    bb60:	008005c4 	movi	r2,23
    bb64:	dc000015 	stw	r16,0(sp)
    bb68:	dfc00115 	stw	ra,4(sp)
    bb6c:	2021883a 	mov	r16,r4
    bb70:	11000c16 	blt	r2,r4,bba4 <_mprec_log10+0x48>
    bb74:	200490fa 	slli	r2,r4,3
    bb78:	00c00074 	movhi	r3,1
    bb7c:	18c83b04 	addi	r3,r3,8428
    bb80:	10c5883a 	add	r2,r2,r3
    bb84:	12400117 	ldw	r9,4(r2)
    bb88:	12000017 	ldw	r8,0(r2)
    bb8c:	4807883a 	mov	r3,r9
    bb90:	4005883a 	mov	r2,r8
    bb94:	dfc00117 	ldw	ra,4(sp)
    bb98:	dc000017 	ldw	r16,0(sp)
    bb9c:	dec00204 	addi	sp,sp,8
    bba0:	f800283a 	ret
    bba4:	0011883a 	mov	r8,zero
    bba8:	024ffc34 	movhi	r9,16368
    bbac:	0005883a 	mov	r2,zero
    bbb0:	00d00934 	movhi	r3,16420
    bbb4:	480b883a 	mov	r5,r9
    bbb8:	4009883a 	mov	r4,r8
    bbbc:	180f883a 	mov	r7,r3
    bbc0:	100d883a 	mov	r6,r2
    bbc4:	000db6c0 	call	db6c <__muldf3>
    bbc8:	843fffc4 	addi	r16,r16,-1
    bbcc:	1011883a 	mov	r8,r2
    bbd0:	1813883a 	mov	r9,r3
    bbd4:	803ff51e 	bne	r16,zero,bbac <_mprec_log10+0x50>
    bbd8:	4005883a 	mov	r2,r8
    bbdc:	4807883a 	mov	r3,r9
    bbe0:	dfc00117 	ldw	ra,4(sp)
    bbe4:	dc000017 	ldw	r16,0(sp)
    bbe8:	dec00204 	addi	sp,sp,8
    bbec:	f800283a 	ret

0000bbf0 <__copybits>:
    bbf0:	297fffc4 	addi	r5,r5,-1
    bbf4:	30800417 	ldw	r2,16(r6)
    bbf8:	280bd17a 	srai	r5,r5,5
    bbfc:	31800504 	addi	r6,r6,20
    bc00:	1085883a 	add	r2,r2,r2
    bc04:	294b883a 	add	r5,r5,r5
    bc08:	294b883a 	add	r5,r5,r5
    bc0c:	1085883a 	add	r2,r2,r2
    bc10:	290b883a 	add	r5,r5,r4
    bc14:	3087883a 	add	r3,r6,r2
    bc18:	29400104 	addi	r5,r5,4
    bc1c:	30c0052e 	bgeu	r6,r3,bc34 <__copybits+0x44>
    bc20:	30800017 	ldw	r2,0(r6)
    bc24:	31800104 	addi	r6,r6,4
    bc28:	20800015 	stw	r2,0(r4)
    bc2c:	21000104 	addi	r4,r4,4
    bc30:	30fffb36 	bltu	r6,r3,bc20 <__copybits+0x30>
    bc34:	2140032e 	bgeu	r4,r5,bc44 <__copybits+0x54>
    bc38:	20000015 	stw	zero,0(r4)
    bc3c:	21000104 	addi	r4,r4,4
    bc40:	217ffd36 	bltu	r4,r5,bc38 <__copybits+0x48>
    bc44:	f800283a 	ret

0000bc48 <__any_on>:
    bc48:	20800417 	ldw	r2,16(r4)
    bc4c:	2807d17a 	srai	r3,r5,5
    bc50:	21000504 	addi	r4,r4,20
    bc54:	10c00d0e 	bge	r2,r3,bc8c <__any_on+0x44>
    bc58:	1085883a 	add	r2,r2,r2
    bc5c:	1085883a 	add	r2,r2,r2
    bc60:	208d883a 	add	r6,r4,r2
    bc64:	2180182e 	bgeu	r4,r6,bcc8 <__any_on+0x80>
    bc68:	30bfff17 	ldw	r2,-4(r6)
    bc6c:	30ffff04 	addi	r3,r6,-4
    bc70:	1000041e 	bne	r2,zero,bc84 <__any_on+0x3c>
    bc74:	20c0142e 	bgeu	r4,r3,bcc8 <__any_on+0x80>
    bc78:	18ffff04 	addi	r3,r3,-4
    bc7c:	18800017 	ldw	r2,0(r3)
    bc80:	103ffc26 	beq	r2,zero,bc74 <__any_on+0x2c>
    bc84:	00800044 	movi	r2,1
    bc88:	f800283a 	ret
    bc8c:	18800a0e 	bge	r3,r2,bcb8 <__any_on+0x70>
    bc90:	294007cc 	andi	r5,r5,31
    bc94:	28000826 	beq	r5,zero,bcb8 <__any_on+0x70>
    bc98:	18c5883a 	add	r2,r3,r3
    bc9c:	1085883a 	add	r2,r2,r2
    bca0:	208d883a 	add	r6,r4,r2
    bca4:	30c00017 	ldw	r3,0(r6)
    bca8:	1944d83a 	srl	r2,r3,r5
    bcac:	1144983a 	sll	r2,r2,r5
    bcb0:	18bff41e 	bne	r3,r2,bc84 <__any_on+0x3c>
    bcb4:	003feb06 	br	bc64 <__any_on+0x1c>
    bcb8:	18c5883a 	add	r2,r3,r3
    bcbc:	1085883a 	add	r2,r2,r2
    bcc0:	208d883a 	add	r6,r4,r2
    bcc4:	003fe706 	br	bc64 <__any_on+0x1c>
    bcc8:	0005883a 	mov	r2,zero
    bccc:	f800283a 	ret

0000bcd0 <_Balloc>:
    bcd0:	20c01317 	ldw	r3,76(r4)
    bcd4:	defffb04 	addi	sp,sp,-20
    bcd8:	dcc00315 	stw	r19,12(sp)
    bcdc:	dc800215 	stw	r18,8(sp)
    bce0:	dfc00415 	stw	ra,16(sp)
    bce4:	2825883a 	mov	r18,r5
    bce8:	dc400115 	stw	r17,4(sp)
    bcec:	dc000015 	stw	r16,0(sp)
    bcf0:	2027883a 	mov	r19,r4
    bcf4:	01800404 	movi	r6,16
    bcf8:	01400104 	movi	r5,4
    bcfc:	18001726 	beq	r3,zero,bd5c <_Balloc+0x8c>
    bd00:	01400044 	movi	r5,1
    bd04:	9485883a 	add	r2,r18,r18
    bd08:	2ca2983a 	sll	r17,r5,r18
    bd0c:	1085883a 	add	r2,r2,r2
    bd10:	10c7883a 	add	r3,r2,r3
    bd14:	1c000017 	ldw	r16,0(r3)
    bd18:	8c4d883a 	add	r6,r17,r17
    bd1c:	318d883a 	add	r6,r6,r6
    bd20:	9809883a 	mov	r4,r19
    bd24:	31800504 	addi	r6,r6,20
    bd28:	80001226 	beq	r16,zero,bd74 <_Balloc+0xa4>
    bd2c:	80800017 	ldw	r2,0(r16)
    bd30:	18800015 	stw	r2,0(r3)
    bd34:	80000415 	stw	zero,16(r16)
    bd38:	80000315 	stw	zero,12(r16)
    bd3c:	8005883a 	mov	r2,r16
    bd40:	dfc00417 	ldw	ra,16(sp)
    bd44:	dcc00317 	ldw	r19,12(sp)
    bd48:	dc800217 	ldw	r18,8(sp)
    bd4c:	dc400117 	ldw	r17,4(sp)
    bd50:	dc000017 	ldw	r16,0(sp)
    bd54:	dec00504 	addi	sp,sp,20
    bd58:	f800283a 	ret
    bd5c:	000c7840 	call	c784 <_calloc_r>
    bd60:	1007883a 	mov	r3,r2
    bd64:	0021883a 	mov	r16,zero
    bd68:	98801315 	stw	r2,76(r19)
    bd6c:	103fe41e 	bne	r2,zero,bd00 <_Balloc+0x30>
    bd70:	003ff206 	br	bd3c <_Balloc+0x6c>
    bd74:	000c7840 	call	c784 <_calloc_r>
    bd78:	103ff026 	beq	r2,zero,bd3c <_Balloc+0x6c>
    bd7c:	1021883a 	mov	r16,r2
    bd80:	14800115 	stw	r18,4(r2)
    bd84:	14400215 	stw	r17,8(r2)
    bd88:	003fea06 	br	bd34 <_Balloc+0x64>

0000bd8c <__d2b>:
    bd8c:	defff504 	addi	sp,sp,-44
    bd90:	dcc00515 	stw	r19,20(sp)
    bd94:	04c00044 	movi	r19,1
    bd98:	dc000215 	stw	r16,8(sp)
    bd9c:	2821883a 	mov	r16,r5
    bda0:	980b883a 	mov	r5,r19
    bda4:	ddc00915 	stw	r23,36(sp)
    bda8:	dd800815 	stw	r22,32(sp)
    bdac:	dd400715 	stw	r21,28(sp)
    bdb0:	dd000615 	stw	r20,24(sp)
    bdb4:	dc800415 	stw	r18,16(sp)
    bdb8:	dc400315 	stw	r17,12(sp)
    bdbc:	dfc00a15 	stw	ra,40(sp)
    bdc0:	3023883a 	mov	r17,r6
    bdc4:	382d883a 	mov	r22,r7
    bdc8:	ddc00b17 	ldw	r23,44(sp)
    bdcc:	000bcd00 	call	bcd0 <_Balloc>
    bdd0:	1025883a 	mov	r18,r2
    bdd4:	00a00034 	movhi	r2,32768
    bdd8:	10bfffc4 	addi	r2,r2,-1
    bddc:	8888703a 	and	r4,r17,r2
    bde0:	202ad53a 	srli	r21,r4,20
    bde4:	00800434 	movhi	r2,16
    bde8:	10bfffc4 	addi	r2,r2,-1
    bdec:	8886703a 	and	r3,r17,r2
    bdf0:	a829003a 	cmpeq	r20,r21,zero
    bdf4:	800b883a 	mov	r5,r16
    bdf8:	d8c00115 	stw	r3,4(sp)
    bdfc:	94000504 	addi	r16,r18,20
    be00:	a000021e 	bne	r20,zero,be0c <__d2b+0x80>
    be04:	18c00434 	orhi	r3,r3,16
    be08:	d8c00115 	stw	r3,4(sp)
    be0c:	28002726 	beq	r5,zero,beac <__d2b+0x120>
    be10:	d809883a 	mov	r4,sp
    be14:	d9400015 	stw	r5,0(sp)
    be18:	000b7e80 	call	b7e8 <__lo0bits>
    be1c:	100d883a 	mov	r6,r2
    be20:	10003526 	beq	r2,zero,bef8 <__d2b+0x16c>
    be24:	d8c00117 	ldw	r3,4(sp)
    be28:	00800804 	movi	r2,32
    be2c:	1185c83a 	sub	r2,r2,r6
    be30:	d9000017 	ldw	r4,0(sp)
    be34:	1886983a 	sll	r3,r3,r2
    be38:	1906b03a 	or	r3,r3,r4
    be3c:	90c00515 	stw	r3,20(r18)
    be40:	d8c00117 	ldw	r3,4(sp)
    be44:	1986d83a 	srl	r3,r3,r6
    be48:	d8c00115 	stw	r3,4(sp)
    be4c:	180b003a 	cmpeq	r5,r3,zero
    be50:	00800084 	movi	r2,2
    be54:	114bc83a 	sub	r5,r2,r5
    be58:	80c00115 	stw	r3,4(r16)
    be5c:	91400415 	stw	r5,16(r18)
    be60:	a0001a1e 	bne	r20,zero,becc <__d2b+0x140>
    be64:	3545883a 	add	r2,r6,r21
    be68:	10bef344 	addi	r2,r2,-1075
    be6c:	00c00d44 	movi	r3,53
    be70:	b0800015 	stw	r2,0(r22)
    be74:	1987c83a 	sub	r3,r3,r6
    be78:	b8c00015 	stw	r3,0(r23)
    be7c:	9005883a 	mov	r2,r18
    be80:	dfc00a17 	ldw	ra,40(sp)
    be84:	ddc00917 	ldw	r23,36(sp)
    be88:	dd800817 	ldw	r22,32(sp)
    be8c:	dd400717 	ldw	r21,28(sp)
    be90:	dd000617 	ldw	r20,24(sp)
    be94:	dcc00517 	ldw	r19,20(sp)
    be98:	dc800417 	ldw	r18,16(sp)
    be9c:	dc400317 	ldw	r17,12(sp)
    bea0:	dc000217 	ldw	r16,8(sp)
    bea4:	dec00b04 	addi	sp,sp,44
    bea8:	f800283a 	ret
    beac:	d9000104 	addi	r4,sp,4
    beb0:	000b7e80 	call	b7e8 <__lo0bits>
    beb4:	11800804 	addi	r6,r2,32
    beb8:	d8800117 	ldw	r2,4(sp)
    bebc:	94c00415 	stw	r19,16(r18)
    bec0:	980b883a 	mov	r5,r19
    bec4:	90800515 	stw	r2,20(r18)
    bec8:	a03fe626 	beq	r20,zero,be64 <__d2b+0xd8>
    becc:	2945883a 	add	r2,r5,r5
    bed0:	1085883a 	add	r2,r2,r2
    bed4:	1405883a 	add	r2,r2,r16
    bed8:	113fff17 	ldw	r4,-4(r2)
    bedc:	30fef384 	addi	r3,r6,-1074
    bee0:	2820917a 	slli	r16,r5,5
    bee4:	b0c00015 	stw	r3,0(r22)
    bee8:	000b7780 	call	b778 <__hi0bits>
    beec:	80a1c83a 	sub	r16,r16,r2
    bef0:	bc000015 	stw	r16,0(r23)
    bef4:	003fe106 	br	be7c <__d2b+0xf0>
    bef8:	d8800017 	ldw	r2,0(sp)
    befc:	90800515 	stw	r2,20(r18)
    bf00:	d8c00117 	ldw	r3,4(sp)
    bf04:	003fd106 	br	be4c <__d2b+0xc0>

0000bf08 <__mdiff>:
    bf08:	defffb04 	addi	sp,sp,-20
    bf0c:	dc000015 	stw	r16,0(sp)
    bf10:	2821883a 	mov	r16,r5
    bf14:	dc800215 	stw	r18,8(sp)
    bf18:	300b883a 	mov	r5,r6
    bf1c:	2025883a 	mov	r18,r4
    bf20:	8009883a 	mov	r4,r16
    bf24:	dc400115 	stw	r17,4(sp)
    bf28:	dfc00415 	stw	ra,16(sp)
    bf2c:	dcc00315 	stw	r19,12(sp)
    bf30:	3023883a 	mov	r17,r6
    bf34:	000b8ac0 	call	b8ac <__mcmp>
    bf38:	10004226 	beq	r2,zero,c044 <__mdiff+0x13c>
    bf3c:	10005016 	blt	r2,zero,c080 <__mdiff+0x178>
    bf40:	0027883a 	mov	r19,zero
    bf44:	81400117 	ldw	r5,4(r16)
    bf48:	9009883a 	mov	r4,r18
    bf4c:	000bcd00 	call	bcd0 <_Balloc>
    bf50:	1019883a 	mov	r12,r2
    bf54:	82800417 	ldw	r10,16(r16)
    bf58:	88800417 	ldw	r2,16(r17)
    bf5c:	81800504 	addi	r6,r16,20
    bf60:	5287883a 	add	r3,r10,r10
    bf64:	1085883a 	add	r2,r2,r2
    bf68:	18c7883a 	add	r3,r3,r3
    bf6c:	1085883a 	add	r2,r2,r2
    bf70:	8a000504 	addi	r8,r17,20
    bf74:	64c00315 	stw	r19,12(r12)
    bf78:	30db883a 	add	r13,r6,r3
    bf7c:	4097883a 	add	r11,r8,r2
    bf80:	61c00504 	addi	r7,r12,20
    bf84:	0013883a 	mov	r9,zero
    bf88:	31000017 	ldw	r4,0(r6)
    bf8c:	41400017 	ldw	r5,0(r8)
    bf90:	42000104 	addi	r8,r8,4
    bf94:	20bfffcc 	andi	r2,r4,65535
    bf98:	28ffffcc 	andi	r3,r5,65535
    bf9c:	10c5c83a 	sub	r2,r2,r3
    bfa0:	1245883a 	add	r2,r2,r9
    bfa4:	2008d43a 	srli	r4,r4,16
    bfa8:	280ad43a 	srli	r5,r5,16
    bfac:	1007d43a 	srai	r3,r2,16
    bfb0:	3880000d 	sth	r2,0(r7)
    bfb4:	2149c83a 	sub	r4,r4,r5
    bfb8:	20c9883a 	add	r4,r4,r3
    bfbc:	3900008d 	sth	r4,2(r7)
    bfc0:	31800104 	addi	r6,r6,4
    bfc4:	39c00104 	addi	r7,r7,4
    bfc8:	2013d43a 	srai	r9,r4,16
    bfcc:	42ffee36 	bltu	r8,r11,bf88 <__mdiff+0x80>
    bfd0:	33400c2e 	bgeu	r6,r13,c004 <__mdiff+0xfc>
    bfd4:	30800017 	ldw	r2,0(r6)
    bfd8:	31800104 	addi	r6,r6,4
    bfdc:	10ffffcc 	andi	r3,r2,65535
    bfe0:	1a47883a 	add	r3,r3,r9
    bfe4:	1004d43a 	srli	r2,r2,16
    bfe8:	1809d43a 	srai	r4,r3,16
    bfec:	38c0000d 	sth	r3,0(r7)
    bff0:	1105883a 	add	r2,r2,r4
    bff4:	3880008d 	sth	r2,2(r7)
    bff8:	1013d43a 	srai	r9,r2,16
    bffc:	39c00104 	addi	r7,r7,4
    c000:	337ff436 	bltu	r6,r13,bfd4 <__mdiff+0xcc>
    c004:	38bfff17 	ldw	r2,-4(r7)
    c008:	38ffff04 	addi	r3,r7,-4
    c00c:	1000041e 	bne	r2,zero,c020 <__mdiff+0x118>
    c010:	18ffff04 	addi	r3,r3,-4
    c014:	18800017 	ldw	r2,0(r3)
    c018:	52bfffc4 	addi	r10,r10,-1
    c01c:	103ffc26 	beq	r2,zero,c010 <__mdiff+0x108>
    c020:	6005883a 	mov	r2,r12
    c024:	62800415 	stw	r10,16(r12)
    c028:	dfc00417 	ldw	ra,16(sp)
    c02c:	dcc00317 	ldw	r19,12(sp)
    c030:	dc800217 	ldw	r18,8(sp)
    c034:	dc400117 	ldw	r17,4(sp)
    c038:	dc000017 	ldw	r16,0(sp)
    c03c:	dec00504 	addi	sp,sp,20
    c040:	f800283a 	ret
    c044:	9009883a 	mov	r4,r18
    c048:	000b883a 	mov	r5,zero
    c04c:	000bcd00 	call	bcd0 <_Balloc>
    c050:	1019883a 	mov	r12,r2
    c054:	00800044 	movi	r2,1
    c058:	60800415 	stw	r2,16(r12)
    c05c:	6005883a 	mov	r2,r12
    c060:	60000515 	stw	zero,20(r12)
    c064:	dfc00417 	ldw	ra,16(sp)
    c068:	dcc00317 	ldw	r19,12(sp)
    c06c:	dc800217 	ldw	r18,8(sp)
    c070:	dc400117 	ldw	r17,4(sp)
    c074:	dc000017 	ldw	r16,0(sp)
    c078:	dec00504 	addi	sp,sp,20
    c07c:	f800283a 	ret
    c080:	880d883a 	mov	r6,r17
    c084:	04c00044 	movi	r19,1
    c088:	8023883a 	mov	r17,r16
    c08c:	3021883a 	mov	r16,r6
    c090:	003fac06 	br	bf44 <__mdiff+0x3c>

0000c094 <__lshift>:
    c094:	defff904 	addi	sp,sp,-28
    c098:	28800417 	ldw	r2,16(r5)
    c09c:	dc000015 	stw	r16,0(sp)
    c0a0:	3021d17a 	srai	r16,r6,5
    c0a4:	28c00217 	ldw	r3,8(r5)
    c0a8:	10800044 	addi	r2,r2,1
    c0ac:	dc400115 	stw	r17,4(sp)
    c0b0:	80a3883a 	add	r17,r16,r2
    c0b4:	dd400515 	stw	r21,20(sp)
    c0b8:	dd000415 	stw	r20,16(sp)
    c0bc:	dc800215 	stw	r18,8(sp)
    c0c0:	dfc00615 	stw	ra,24(sp)
    c0c4:	2825883a 	mov	r18,r5
    c0c8:	dcc00315 	stw	r19,12(sp)
    c0cc:	3029883a 	mov	r20,r6
    c0d0:	202b883a 	mov	r21,r4
    c0d4:	29400117 	ldw	r5,4(r5)
    c0d8:	1c40030e 	bge	r3,r17,c0e8 <__lshift+0x54>
    c0dc:	18c7883a 	add	r3,r3,r3
    c0e0:	29400044 	addi	r5,r5,1
    c0e4:	1c7ffd16 	blt	r3,r17,c0dc <__lshift+0x48>
    c0e8:	a809883a 	mov	r4,r21
    c0ec:	000bcd00 	call	bcd0 <_Balloc>
    c0f0:	1027883a 	mov	r19,r2
    c0f4:	11400504 	addi	r5,r2,20
    c0f8:	0400090e 	bge	zero,r16,c120 <__lshift+0x8c>
    c0fc:	2805883a 	mov	r2,r5
    c100:	0007883a 	mov	r3,zero
    c104:	18c00044 	addi	r3,r3,1
    c108:	10000015 	stw	zero,0(r2)
    c10c:	10800104 	addi	r2,r2,4
    c110:	80fffc1e 	bne	r16,r3,c104 <__lshift+0x70>
    c114:	8405883a 	add	r2,r16,r16
    c118:	1085883a 	add	r2,r2,r2
    c11c:	288b883a 	add	r5,r5,r2
    c120:	90800417 	ldw	r2,16(r18)
    c124:	91000504 	addi	r4,r18,20
    c128:	a18007cc 	andi	r6,r20,31
    c12c:	1085883a 	add	r2,r2,r2
    c130:	1085883a 	add	r2,r2,r2
    c134:	208f883a 	add	r7,r4,r2
    c138:	30001e26 	beq	r6,zero,c1b4 <__lshift+0x120>
    c13c:	00800804 	movi	r2,32
    c140:	1191c83a 	sub	r8,r2,r6
    c144:	0007883a 	mov	r3,zero
    c148:	20800017 	ldw	r2,0(r4)
    c14c:	1184983a 	sll	r2,r2,r6
    c150:	1884b03a 	or	r2,r3,r2
    c154:	28800015 	stw	r2,0(r5)
    c158:	20c00017 	ldw	r3,0(r4)
    c15c:	21000104 	addi	r4,r4,4
    c160:	29400104 	addi	r5,r5,4
    c164:	1a06d83a 	srl	r3,r3,r8
    c168:	21fff736 	bltu	r4,r7,c148 <__lshift+0xb4>
    c16c:	28c00015 	stw	r3,0(r5)
    c170:	18000126 	beq	r3,zero,c178 <__lshift+0xe4>
    c174:	8c400044 	addi	r17,r17,1
    c178:	88bfffc4 	addi	r2,r17,-1
    c17c:	98800415 	stw	r2,16(r19)
    c180:	a809883a 	mov	r4,r21
    c184:	900b883a 	mov	r5,r18
    c188:	000b7500 	call	b750 <_Bfree>
    c18c:	9805883a 	mov	r2,r19
    c190:	dfc00617 	ldw	ra,24(sp)
    c194:	dd400517 	ldw	r21,20(sp)
    c198:	dd000417 	ldw	r20,16(sp)
    c19c:	dcc00317 	ldw	r19,12(sp)
    c1a0:	dc800217 	ldw	r18,8(sp)
    c1a4:	dc400117 	ldw	r17,4(sp)
    c1a8:	dc000017 	ldw	r16,0(sp)
    c1ac:	dec00704 	addi	sp,sp,28
    c1b0:	f800283a 	ret
    c1b4:	20800017 	ldw	r2,0(r4)
    c1b8:	21000104 	addi	r4,r4,4
    c1bc:	28800015 	stw	r2,0(r5)
    c1c0:	29400104 	addi	r5,r5,4
    c1c4:	21ffec2e 	bgeu	r4,r7,c178 <__lshift+0xe4>
    c1c8:	20800017 	ldw	r2,0(r4)
    c1cc:	21000104 	addi	r4,r4,4
    c1d0:	28800015 	stw	r2,0(r5)
    c1d4:	29400104 	addi	r5,r5,4
    c1d8:	21fff636 	bltu	r4,r7,c1b4 <__lshift+0x120>
    c1dc:	003fe606 	br	c178 <__lshift+0xe4>

0000c1e0 <__multiply>:
    c1e0:	defff904 	addi	sp,sp,-28
    c1e4:	dcc00315 	stw	r19,12(sp)
    c1e8:	dc800215 	stw	r18,8(sp)
    c1ec:	2cc00417 	ldw	r19,16(r5)
    c1f0:	34800417 	ldw	r18,16(r6)
    c1f4:	dd000415 	stw	r20,16(sp)
    c1f8:	dc400115 	stw	r17,4(sp)
    c1fc:	dfc00615 	stw	ra,24(sp)
    c200:	dd400515 	stw	r21,20(sp)
    c204:	dc000015 	stw	r16,0(sp)
    c208:	2823883a 	mov	r17,r5
    c20c:	3029883a 	mov	r20,r6
    c210:	9c80040e 	bge	r19,r18,c224 <__multiply+0x44>
    c214:	9027883a 	mov	r19,r18
    c218:	2c800417 	ldw	r18,16(r5)
    c21c:	2829883a 	mov	r20,r5
    c220:	3023883a 	mov	r17,r6
    c224:	88800217 	ldw	r2,8(r17)
    c228:	9ca1883a 	add	r16,r19,r18
    c22c:	89400117 	ldw	r5,4(r17)
    c230:	1400010e 	bge	r2,r16,c238 <__multiply+0x58>
    c234:	29400044 	addi	r5,r5,1
    c238:	000bcd00 	call	bcd0 <_Balloc>
    c23c:	102b883a 	mov	r21,r2
    c240:	8405883a 	add	r2,r16,r16
    c244:	1085883a 	add	r2,r2,r2
    c248:	a9000504 	addi	r4,r21,20
    c24c:	209d883a 	add	r14,r4,r2
    c250:	2380042e 	bgeu	r4,r14,c264 <__multiply+0x84>
    c254:	2005883a 	mov	r2,r4
    c258:	10000015 	stw	zero,0(r2)
    c25c:	10800104 	addi	r2,r2,4
    c260:	13bffd36 	bltu	r2,r14,c258 <__multiply+0x78>
    c264:	9485883a 	add	r2,r18,r18
    c268:	9cc7883a 	add	r3,r19,r19
    c26c:	a1800504 	addi	r6,r20,20
    c270:	1085883a 	add	r2,r2,r2
    c274:	8b400504 	addi	r13,r17,20
    c278:	18c7883a 	add	r3,r3,r3
    c27c:	309f883a 	add	r15,r6,r2
    c280:	68d7883a 	add	r11,r13,r3
    c284:	33c03b2e 	bgeu	r6,r15,c374 <__multiply+0x194>
    c288:	2019883a 	mov	r12,r4
    c28c:	30800017 	ldw	r2,0(r6)
    c290:	127fffcc 	andi	r9,r2,65535
    c294:	48001826 	beq	r9,zero,c2f8 <__multiply+0x118>
    c298:	6811883a 	mov	r8,r13
    c29c:	600f883a 	mov	r7,r12
    c2a0:	0015883a 	mov	r10,zero
    c2a4:	40c00017 	ldw	r3,0(r8)
    c2a8:	39400017 	ldw	r5,0(r7)
    c2ac:	42000104 	addi	r8,r8,4
    c2b0:	193fffcc 	andi	r4,r3,65535
    c2b4:	4909383a 	mul	r4,r9,r4
    c2b8:	1806d43a 	srli	r3,r3,16
    c2bc:	28bfffcc 	andi	r2,r5,65535
    c2c0:	5085883a 	add	r2,r10,r2
    c2c4:	2089883a 	add	r4,r4,r2
    c2c8:	48c7383a 	mul	r3,r9,r3
    c2cc:	280ad43a 	srli	r5,r5,16
    c2d0:	2004d43a 	srli	r2,r4,16
    c2d4:	3900000d 	sth	r4,0(r7)
    c2d8:	1947883a 	add	r3,r3,r5
    c2dc:	10c5883a 	add	r2,r2,r3
    c2e0:	3880008d 	sth	r2,2(r7)
    c2e4:	1014d43a 	srli	r10,r2,16
    c2e8:	39c00104 	addi	r7,r7,4
    c2ec:	42ffed36 	bltu	r8,r11,c2a4 <__multiply+0xc4>
    c2f0:	3a800015 	stw	r10,0(r7)
    c2f4:	30800017 	ldw	r2,0(r6)
    c2f8:	1012d43a 	srli	r9,r2,16
    c2fc:	48001926 	beq	r9,zero,c364 <__multiply+0x184>
    c300:	60800017 	ldw	r2,0(r12)
    c304:	6811883a 	mov	r8,r13
    c308:	600f883a 	mov	r7,r12
    c30c:	0015883a 	mov	r10,zero
    c310:	100b883a 	mov	r5,r2
    c314:	41000017 	ldw	r4,0(r8)
    c318:	2806d43a 	srli	r3,r5,16
    c31c:	3880000d 	sth	r2,0(r7)
    c320:	20bfffcc 	andi	r2,r4,65535
    c324:	4885383a 	mul	r2,r9,r2
    c328:	50c7883a 	add	r3,r10,r3
    c32c:	2008d43a 	srli	r4,r4,16
    c330:	10c5883a 	add	r2,r2,r3
    c334:	3880008d 	sth	r2,2(r7)
    c338:	39c00104 	addi	r7,r7,4
    c33c:	39400017 	ldw	r5,0(r7)
    c340:	4909383a 	mul	r4,r9,r4
    c344:	1004d43a 	srli	r2,r2,16
    c348:	28ffffcc 	andi	r3,r5,65535
    c34c:	20c9883a 	add	r4,r4,r3
    c350:	1105883a 	add	r2,r2,r4
    c354:	42000104 	addi	r8,r8,4
    c358:	1014d43a 	srli	r10,r2,16
    c35c:	42ffed36 	bltu	r8,r11,c314 <__multiply+0x134>
    c360:	38800015 	stw	r2,0(r7)
    c364:	31800104 	addi	r6,r6,4
    c368:	33c0022e 	bgeu	r6,r15,c374 <__multiply+0x194>
    c36c:	63000104 	addi	r12,r12,4
    c370:	003fc606 	br	c28c <__multiply+0xac>
    c374:	0400090e 	bge	zero,r16,c39c <__multiply+0x1bc>
    c378:	70bfff17 	ldw	r2,-4(r14)
    c37c:	70ffff04 	addi	r3,r14,-4
    c380:	10000326 	beq	r2,zero,c390 <__multiply+0x1b0>
    c384:	00000506 	br	c39c <__multiply+0x1bc>
    c388:	18800017 	ldw	r2,0(r3)
    c38c:	1000031e 	bne	r2,zero,c39c <__multiply+0x1bc>
    c390:	843fffc4 	addi	r16,r16,-1
    c394:	18ffff04 	addi	r3,r3,-4
    c398:	803ffb1e 	bne	r16,zero,c388 <__multiply+0x1a8>
    c39c:	a805883a 	mov	r2,r21
    c3a0:	ac000415 	stw	r16,16(r21)
    c3a4:	dfc00617 	ldw	ra,24(sp)
    c3a8:	dd400517 	ldw	r21,20(sp)
    c3ac:	dd000417 	ldw	r20,16(sp)
    c3b0:	dcc00317 	ldw	r19,12(sp)
    c3b4:	dc800217 	ldw	r18,8(sp)
    c3b8:	dc400117 	ldw	r17,4(sp)
    c3bc:	dc000017 	ldw	r16,0(sp)
    c3c0:	dec00704 	addi	sp,sp,28
    c3c4:	f800283a 	ret

0000c3c8 <__i2b>:
    c3c8:	defffd04 	addi	sp,sp,-12
    c3cc:	dc000015 	stw	r16,0(sp)
    c3d0:	04000044 	movi	r16,1
    c3d4:	dc800115 	stw	r18,4(sp)
    c3d8:	2825883a 	mov	r18,r5
    c3dc:	800b883a 	mov	r5,r16
    c3e0:	dfc00215 	stw	ra,8(sp)
    c3e4:	000bcd00 	call	bcd0 <_Balloc>
    c3e8:	14000415 	stw	r16,16(r2)
    c3ec:	14800515 	stw	r18,20(r2)
    c3f0:	dfc00217 	ldw	ra,8(sp)
    c3f4:	dc800117 	ldw	r18,4(sp)
    c3f8:	dc000017 	ldw	r16,0(sp)
    c3fc:	dec00304 	addi	sp,sp,12
    c400:	f800283a 	ret

0000c404 <__multadd>:
    c404:	defffa04 	addi	sp,sp,-24
    c408:	dc800215 	stw	r18,8(sp)
    c40c:	2c800417 	ldw	r18,16(r5)
    c410:	dd000415 	stw	r20,16(sp)
    c414:	dcc00315 	stw	r19,12(sp)
    c418:	dc000015 	stw	r16,0(sp)
    c41c:	dfc00515 	stw	ra,20(sp)
    c420:	3821883a 	mov	r16,r7
    c424:	dc400115 	stw	r17,4(sp)
    c428:	2827883a 	mov	r19,r5
    c42c:	2029883a 	mov	r20,r4
    c430:	2a000504 	addi	r8,r5,20
    c434:	000f883a 	mov	r7,zero
    c438:	40800017 	ldw	r2,0(r8)
    c43c:	39c00044 	addi	r7,r7,1
    c440:	10ffffcc 	andi	r3,r2,65535
    c444:	1987383a 	mul	r3,r3,r6
    c448:	1004d43a 	srli	r2,r2,16
    c44c:	1c07883a 	add	r3,r3,r16
    c450:	180ad43a 	srli	r5,r3,16
    c454:	1185383a 	mul	r2,r2,r6
    c458:	18ffffcc 	andi	r3,r3,65535
    c45c:	1145883a 	add	r2,r2,r5
    c460:	1008943a 	slli	r4,r2,16
    c464:	1020d43a 	srli	r16,r2,16
    c468:	20c9883a 	add	r4,r4,r3
    c46c:	41000015 	stw	r4,0(r8)
    c470:	42000104 	addi	r8,r8,4
    c474:	3cbff016 	blt	r7,r18,c438 <__multadd+0x34>
    c478:	80000826 	beq	r16,zero,c49c <__multadd+0x98>
    c47c:	98800217 	ldw	r2,8(r19)
    c480:	90800f0e 	bge	r18,r2,c4c0 <__multadd+0xbc>
    c484:	9485883a 	add	r2,r18,r18
    c488:	1085883a 	add	r2,r2,r2
    c48c:	14c5883a 	add	r2,r2,r19
    c490:	90c00044 	addi	r3,r18,1
    c494:	14000515 	stw	r16,20(r2)
    c498:	98c00415 	stw	r3,16(r19)
    c49c:	9805883a 	mov	r2,r19
    c4a0:	dfc00517 	ldw	ra,20(sp)
    c4a4:	dd000417 	ldw	r20,16(sp)
    c4a8:	dcc00317 	ldw	r19,12(sp)
    c4ac:	dc800217 	ldw	r18,8(sp)
    c4b0:	dc400117 	ldw	r17,4(sp)
    c4b4:	dc000017 	ldw	r16,0(sp)
    c4b8:	dec00604 	addi	sp,sp,24
    c4bc:	f800283a 	ret
    c4c0:	99400117 	ldw	r5,4(r19)
    c4c4:	a009883a 	mov	r4,r20
    c4c8:	29400044 	addi	r5,r5,1
    c4cc:	000bcd00 	call	bcd0 <_Balloc>
    c4d0:	99800417 	ldw	r6,16(r19)
    c4d4:	99400304 	addi	r5,r19,12
    c4d8:	11000304 	addi	r4,r2,12
    c4dc:	318d883a 	add	r6,r6,r6
    c4e0:	318d883a 	add	r6,r6,r6
    c4e4:	31800204 	addi	r6,r6,8
    c4e8:	1023883a 	mov	r17,r2
    c4ec:	000125c0 	call	125c <memcpy>
    c4f0:	980b883a 	mov	r5,r19
    c4f4:	a009883a 	mov	r4,r20
    c4f8:	000b7500 	call	b750 <_Bfree>
    c4fc:	8827883a 	mov	r19,r17
    c500:	003fe006 	br	c484 <__multadd+0x80>

0000c504 <__pow5mult>:
    c504:	defffa04 	addi	sp,sp,-24
    c508:	308000cc 	andi	r2,r6,3
    c50c:	dd000415 	stw	r20,16(sp)
    c510:	dcc00315 	stw	r19,12(sp)
    c514:	dc000015 	stw	r16,0(sp)
    c518:	dfc00515 	stw	ra,20(sp)
    c51c:	dc800215 	stw	r18,8(sp)
    c520:	dc400115 	stw	r17,4(sp)
    c524:	3021883a 	mov	r16,r6
    c528:	2027883a 	mov	r19,r4
    c52c:	2829883a 	mov	r20,r5
    c530:	10002b1e 	bne	r2,zero,c5e0 <__pow5mult+0xdc>
    c534:	8025d0ba 	srai	r18,r16,2
    c538:	90001b26 	beq	r18,zero,c5a8 <__pow5mult+0xa4>
    c53c:	9c001217 	ldw	r16,72(r19)
    c540:	8000081e 	bne	r16,zero,c564 <__pow5mult+0x60>
    c544:	00003006 	br	c608 <__pow5mult+0x104>
    c548:	800b883a 	mov	r5,r16
    c54c:	800d883a 	mov	r6,r16
    c550:	9809883a 	mov	r4,r19
    c554:	90001426 	beq	r18,zero,c5a8 <__pow5mult+0xa4>
    c558:	80800017 	ldw	r2,0(r16)
    c55c:	10001b26 	beq	r2,zero,c5cc <__pow5mult+0xc8>
    c560:	1021883a 	mov	r16,r2
    c564:	9080004c 	andi	r2,r18,1
    c568:	1005003a 	cmpeq	r2,r2,zero
    c56c:	9025d07a 	srai	r18,r18,1
    c570:	800d883a 	mov	r6,r16
    c574:	9809883a 	mov	r4,r19
    c578:	a00b883a 	mov	r5,r20
    c57c:	103ff21e 	bne	r2,zero,c548 <__pow5mult+0x44>
    c580:	000c1e00 	call	c1e0 <__multiply>
    c584:	a00b883a 	mov	r5,r20
    c588:	9809883a 	mov	r4,r19
    c58c:	1023883a 	mov	r17,r2
    c590:	000b7500 	call	b750 <_Bfree>
    c594:	8829883a 	mov	r20,r17
    c598:	800b883a 	mov	r5,r16
    c59c:	800d883a 	mov	r6,r16
    c5a0:	9809883a 	mov	r4,r19
    c5a4:	903fec1e 	bne	r18,zero,c558 <__pow5mult+0x54>
    c5a8:	a005883a 	mov	r2,r20
    c5ac:	dfc00517 	ldw	ra,20(sp)
    c5b0:	dd000417 	ldw	r20,16(sp)
    c5b4:	dcc00317 	ldw	r19,12(sp)
    c5b8:	dc800217 	ldw	r18,8(sp)
    c5bc:	dc400117 	ldw	r17,4(sp)
    c5c0:	dc000017 	ldw	r16,0(sp)
    c5c4:	dec00604 	addi	sp,sp,24
    c5c8:	f800283a 	ret
    c5cc:	000c1e00 	call	c1e0 <__multiply>
    c5d0:	80800015 	stw	r2,0(r16)
    c5d4:	1021883a 	mov	r16,r2
    c5d8:	10000015 	stw	zero,0(r2)
    c5dc:	003fe106 	br	c564 <__pow5mult+0x60>
    c5e0:	1085883a 	add	r2,r2,r2
    c5e4:	00c00074 	movhi	r3,1
    c5e8:	18c88104 	addi	r3,r3,8708
    c5ec:	1085883a 	add	r2,r2,r2
    c5f0:	10c5883a 	add	r2,r2,r3
    c5f4:	11bfff17 	ldw	r6,-4(r2)
    c5f8:	000f883a 	mov	r7,zero
    c5fc:	000c4040 	call	c404 <__multadd>
    c600:	1029883a 	mov	r20,r2
    c604:	003fcb06 	br	c534 <__pow5mult+0x30>
    c608:	9809883a 	mov	r4,r19
    c60c:	01409c44 	movi	r5,625
    c610:	000c3c80 	call	c3c8 <__i2b>
    c614:	98801215 	stw	r2,72(r19)
    c618:	1021883a 	mov	r16,r2
    c61c:	10000015 	stw	zero,0(r2)
    c620:	003fd006 	br	c564 <__pow5mult+0x60>

0000c624 <__s2b>:
    c624:	defff904 	addi	sp,sp,-28
    c628:	dcc00315 	stw	r19,12(sp)
    c62c:	dc800215 	stw	r18,8(sp)
    c630:	2827883a 	mov	r19,r5
    c634:	2025883a 	mov	r18,r4
    c638:	01400244 	movi	r5,9
    c63c:	39000204 	addi	r4,r7,8
    c640:	dd000415 	stw	r20,16(sp)
    c644:	dc400115 	stw	r17,4(sp)
    c648:	dfc00615 	stw	ra,24(sp)
    c64c:	dd400515 	stw	r21,20(sp)
    c650:	dc000015 	stw	r16,0(sp)
    c654:	3829883a 	mov	r20,r7
    c658:	3023883a 	mov	r17,r6
    c65c:	000e90c0 	call	e90c <__divsi3>
    c660:	00c00044 	movi	r3,1
    c664:	1880350e 	bge	r3,r2,c73c <__s2b+0x118>
    c668:	000b883a 	mov	r5,zero
    c66c:	18c7883a 	add	r3,r3,r3
    c670:	29400044 	addi	r5,r5,1
    c674:	18bffd16 	blt	r3,r2,c66c <__s2b+0x48>
    c678:	9009883a 	mov	r4,r18
    c67c:	000bcd00 	call	bcd0 <_Balloc>
    c680:	1011883a 	mov	r8,r2
    c684:	d8800717 	ldw	r2,28(sp)
    c688:	00c00044 	movi	r3,1
    c68c:	01800244 	movi	r6,9
    c690:	40800515 	stw	r2,20(r8)
    c694:	40c00415 	stw	r3,16(r8)
    c698:	3440260e 	bge	r6,r17,c734 <__s2b+0x110>
    c69c:	3021883a 	mov	r16,r6
    c6a0:	99ab883a 	add	r21,r19,r6
    c6a4:	9c05883a 	add	r2,r19,r16
    c6a8:	11c00007 	ldb	r7,0(r2)
    c6ac:	400b883a 	mov	r5,r8
    c6b0:	9009883a 	mov	r4,r18
    c6b4:	39fff404 	addi	r7,r7,-48
    c6b8:	01800284 	movi	r6,10
    c6bc:	000c4040 	call	c404 <__multadd>
    c6c0:	84000044 	addi	r16,r16,1
    c6c4:	1011883a 	mov	r8,r2
    c6c8:	8c3ff61e 	bne	r17,r16,c6a4 <__s2b+0x80>
    c6cc:	ac45883a 	add	r2,r21,r17
    c6d0:	117ffe04 	addi	r5,r2,-8
    c6d4:	880d883a 	mov	r6,r17
    c6d8:	35000c0e 	bge	r6,r20,c70c <__s2b+0xe8>
    c6dc:	a185c83a 	sub	r2,r20,r6
    c6e0:	2821883a 	mov	r16,r5
    c6e4:	28a3883a 	add	r17,r5,r2
    c6e8:	81c00007 	ldb	r7,0(r16)
    c6ec:	400b883a 	mov	r5,r8
    c6f0:	9009883a 	mov	r4,r18
    c6f4:	39fff404 	addi	r7,r7,-48
    c6f8:	01800284 	movi	r6,10
    c6fc:	000c4040 	call	c404 <__multadd>
    c700:	84000044 	addi	r16,r16,1
    c704:	1011883a 	mov	r8,r2
    c708:	847ff71e 	bne	r16,r17,c6e8 <__s2b+0xc4>
    c70c:	4005883a 	mov	r2,r8
    c710:	dfc00617 	ldw	ra,24(sp)
    c714:	dd400517 	ldw	r21,20(sp)
    c718:	dd000417 	ldw	r20,16(sp)
    c71c:	dcc00317 	ldw	r19,12(sp)
    c720:	dc800217 	ldw	r18,8(sp)
    c724:	dc400117 	ldw	r17,4(sp)
    c728:	dc000017 	ldw	r16,0(sp)
    c72c:	dec00704 	addi	sp,sp,28
    c730:	f800283a 	ret
    c734:	99400284 	addi	r5,r19,10
    c738:	003fe706 	br	c6d8 <__s2b+0xb4>
    c73c:	000b883a 	mov	r5,zero
    c740:	003fcd06 	br	c678 <__s2b+0x54>

0000c744 <__isinfd>:
    c744:	200d883a 	mov	r6,r4
    c748:	0109c83a 	sub	r4,zero,r4
    c74c:	2188b03a 	or	r4,r4,r6
    c750:	2008d7fa 	srli	r4,r4,31
    c754:	00a00034 	movhi	r2,32768
    c758:	10bfffc4 	addi	r2,r2,-1
    c75c:	1144703a 	and	r2,r2,r5
    c760:	2088b03a 	or	r4,r4,r2
    c764:	009ffc34 	movhi	r2,32752
    c768:	1105c83a 	sub	r2,r2,r4
    c76c:	0087c83a 	sub	r3,zero,r2
    c770:	10c4b03a 	or	r2,r2,r3
    c774:	1004d7fa 	srli	r2,r2,31
    c778:	00c00044 	movi	r3,1
    c77c:	1885c83a 	sub	r2,r3,r2
    c780:	f800283a 	ret

0000c784 <_calloc_r>:
    c784:	298b383a 	mul	r5,r5,r6
    c788:	defffe04 	addi	sp,sp,-8
    c78c:	dc000015 	stw	r16,0(sp)
    c790:	dfc00115 	stw	ra,4(sp)
    c794:	0000a380 	call	a38 <_malloc_r>
    c798:	1021883a 	mov	r16,r2
    c79c:	01c00904 	movi	r7,36
    c7a0:	10000d26 	beq	r2,zero,c7d8 <_calloc_r+0x54>
    c7a4:	10ffff17 	ldw	r3,-4(r2)
    c7a8:	1009883a 	mov	r4,r2
    c7ac:	00bfff04 	movi	r2,-4
    c7b0:	1886703a 	and	r3,r3,r2
    c7b4:	1887883a 	add	r3,r3,r2
    c7b8:	180d883a 	mov	r6,r3
    c7bc:	000b883a 	mov	r5,zero
    c7c0:	38c01736 	bltu	r7,r3,c820 <_calloc_r+0x9c>
    c7c4:	008004c4 	movi	r2,19
    c7c8:	10c00836 	bltu	r2,r3,c7ec <_calloc_r+0x68>
    c7cc:	20000215 	stw	zero,8(r4)
    c7d0:	20000015 	stw	zero,0(r4)
    c7d4:	20000115 	stw	zero,4(r4)
    c7d8:	8005883a 	mov	r2,r16
    c7dc:	dfc00117 	ldw	ra,4(sp)
    c7e0:	dc000017 	ldw	r16,0(sp)
    c7e4:	dec00204 	addi	sp,sp,8
    c7e8:	f800283a 	ret
    c7ec:	008006c4 	movi	r2,27
    c7f0:	80000015 	stw	zero,0(r16)
    c7f4:	80000115 	stw	zero,4(r16)
    c7f8:	81000204 	addi	r4,r16,8
    c7fc:	10fff32e 	bgeu	r2,r3,c7cc <_calloc_r+0x48>
    c800:	80000215 	stw	zero,8(r16)
    c804:	80000315 	stw	zero,12(r16)
    c808:	81000404 	addi	r4,r16,16
    c80c:	19ffef1e 	bne	r3,r7,c7cc <_calloc_r+0x48>
    c810:	81000604 	addi	r4,r16,24
    c814:	80000415 	stw	zero,16(r16)
    c818:	80000515 	stw	zero,20(r16)
    c81c:	003feb06 	br	c7cc <_calloc_r+0x48>
    c820:	00012fc0 	call	12fc <memset>
    c824:	8005883a 	mov	r2,r16
    c828:	dfc00117 	ldw	ra,4(sp)
    c82c:	dc000017 	ldw	r16,0(sp)
    c830:	dec00204 	addi	sp,sp,8
    c834:	f800283a 	ret

0000c838 <__muldi3>:
    c838:	2011883a 	mov	r8,r4
    c83c:	427fffcc 	andi	r9,r8,65535
    c840:	4018d43a 	srli	r12,r8,16
    c844:	32bfffcc 	andi	r10,r6,65535
    c848:	3016d43a 	srli	r11,r6,16
    c84c:	4a85383a 	mul	r2,r9,r10
    c850:	6295383a 	mul	r10,r12,r10
    c854:	4ad3383a 	mul	r9,r9,r11
    c858:	113fffcc 	andi	r4,r2,65535
    c85c:	1004d43a 	srli	r2,r2,16
    c860:	4a93883a 	add	r9,r9,r10
    c864:	3807883a 	mov	r3,r7
    c868:	1245883a 	add	r2,r2,r9
    c86c:	280f883a 	mov	r7,r5
    c870:	180b883a 	mov	r5,r3
    c874:	1006943a 	slli	r3,r2,16
    c878:	defffd04 	addi	sp,sp,-12
    c87c:	dc800215 	stw	r18,8(sp)
    c880:	1907883a 	add	r3,r3,r4
    c884:	dc400115 	stw	r17,4(sp)
    c888:	dc000015 	stw	r16,0(sp)
    c88c:	4165383a 	mul	r18,r8,r5
    c890:	31e3383a 	mul	r17,r6,r7
    c894:	1012d43a 	srli	r9,r2,16
    c898:	62d9383a 	mul	r12,r12,r11
    c89c:	181f883a 	mov	r15,r3
    c8a0:	1280022e 	bgeu	r2,r10,c8ac <__muldi3+0x74>
    c8a4:	00800074 	movhi	r2,1
    c8a8:	6099883a 	add	r12,r12,r2
    c8ac:	624d883a 	add	r6,r12,r9
    c8b0:	9187883a 	add	r3,r18,r6
    c8b4:	88c7883a 	add	r3,r17,r3
    c8b8:	7805883a 	mov	r2,r15
    c8bc:	dc800217 	ldw	r18,8(sp)
    c8c0:	dc400117 	ldw	r17,4(sp)
    c8c4:	dc000017 	ldw	r16,0(sp)
    c8c8:	dec00304 	addi	sp,sp,12
    c8cc:	f800283a 	ret

0000c8d0 <__fixunsdfsi>:
    c8d0:	defffb04 	addi	sp,sp,-20
    c8d4:	dc400115 	stw	r17,4(sp)
    c8d8:	dc000015 	stw	r16,0(sp)
    c8dc:	04507834 	movhi	r17,16864
    c8e0:	0021883a 	mov	r16,zero
    c8e4:	800d883a 	mov	r6,r16
    c8e8:	880f883a 	mov	r7,r17
    c8ec:	dcc00315 	stw	r19,12(sp)
    c8f0:	dc800215 	stw	r18,8(sp)
    c8f4:	2827883a 	mov	r19,r5
    c8f8:	2025883a 	mov	r18,r4
    c8fc:	dfc00415 	stw	ra,16(sp)
    c900:	000e3200 	call	e320 <__gedf2>
    c904:	000d883a 	mov	r6,zero
    c908:	880f883a 	mov	r7,r17
    c90c:	980b883a 	mov	r5,r19
    c910:	9009883a 	mov	r4,r18
    c914:	10000d16 	blt	r2,zero,c94c <__fixunsdfsi+0x7c>
    c918:	000da780 	call	da78 <__subdf3>
    c91c:	180b883a 	mov	r5,r3
    c920:	1009883a 	mov	r4,r2
    c924:	000e5b00 	call	e5b0 <__fixdfsi>
    c928:	00e00034 	movhi	r3,32768
    c92c:	10c5883a 	add	r2,r2,r3
    c930:	dfc00417 	ldw	ra,16(sp)
    c934:	dcc00317 	ldw	r19,12(sp)
    c938:	dc800217 	ldw	r18,8(sp)
    c93c:	dc400117 	ldw	r17,4(sp)
    c940:	dc000017 	ldw	r16,0(sp)
    c944:	dec00504 	addi	sp,sp,20
    c948:	f800283a 	ret
    c94c:	980b883a 	mov	r5,r19
    c950:	9009883a 	mov	r4,r18
    c954:	000e5b00 	call	e5b0 <__fixdfsi>
    c958:	dfc00417 	ldw	ra,16(sp)
    c95c:	dcc00317 	ldw	r19,12(sp)
    c960:	dc800217 	ldw	r18,8(sp)
    c964:	dc400117 	ldw	r17,4(sp)
    c968:	dc000017 	ldw	r16,0(sp)
    c96c:	dec00504 	addi	sp,sp,20
    c970:	f800283a 	ret

0000c974 <__udivdi3>:
    c974:	defff004 	addi	sp,sp,-64
    c978:	2005883a 	mov	r2,r4
    c97c:	3011883a 	mov	r8,r6
    c980:	df000e15 	stw	fp,56(sp)
    c984:	dd000a15 	stw	r20,40(sp)
    c988:	dc000615 	stw	r16,24(sp)
    c98c:	dfc00f15 	stw	ra,60(sp)
    c990:	ddc00d15 	stw	r23,52(sp)
    c994:	dd800c15 	stw	r22,48(sp)
    c998:	dd400b15 	stw	r21,44(sp)
    c99c:	dcc00915 	stw	r19,36(sp)
    c9a0:	dc800815 	stw	r18,32(sp)
    c9a4:	dc400715 	stw	r17,28(sp)
    c9a8:	4021883a 	mov	r16,r8
    c9ac:	1039883a 	mov	fp,r2
    c9b0:	2829883a 	mov	r20,r5
    c9b4:	38003b1e 	bne	r7,zero,caa4 <__udivdi3+0x130>
    c9b8:	2a005c36 	bltu	r5,r8,cb2c <__udivdi3+0x1b8>
    c9bc:	4000a626 	beq	r8,zero,cc58 <__udivdi3+0x2e4>
    c9c0:	00bfffd4 	movui	r2,65535
    c9c4:	14009e36 	bltu	r2,r16,cc40 <__udivdi3+0x2cc>
    c9c8:	00803fc4 	movi	r2,255
    c9cc:	14013d36 	bltu	r2,r16,cec4 <__udivdi3+0x550>
    c9d0:	000b883a 	mov	r5,zero
    c9d4:	0005883a 	mov	r2,zero
    c9d8:	8084d83a 	srl	r2,r16,r2
    c9dc:	01000074 	movhi	r4,1
    c9e0:	21088904 	addi	r4,r4,8740
    c9e4:	01800804 	movi	r6,32
    c9e8:	1105883a 	add	r2,r2,r4
    c9ec:	10c00003 	ldbu	r3,0(r2)
    c9f0:	28c7883a 	add	r3,r5,r3
    c9f4:	30edc83a 	sub	r22,r6,r3
    c9f8:	b000ee1e 	bne	r22,zero,cdb4 <__udivdi3+0x440>
    c9fc:	802ad43a 	srli	r21,r16,16
    ca00:	00800044 	movi	r2,1
    ca04:	a423c83a 	sub	r17,r20,r16
    ca08:	85ffffcc 	andi	r23,r16,65535
    ca0c:	d8800315 	stw	r2,12(sp)
    ca10:	8809883a 	mov	r4,r17
    ca14:	a80b883a 	mov	r5,r21
    ca18:	000e9cc0 	call	e9cc <__udivsi3>
    ca1c:	8809883a 	mov	r4,r17
    ca20:	a80b883a 	mov	r5,r21
    ca24:	102d883a 	mov	r22,r2
    ca28:	000e9d40 	call	e9d4 <__umodsi3>
    ca2c:	1004943a 	slli	r2,r2,16
    ca30:	e006d43a 	srli	r3,fp,16
    ca34:	bda3383a 	mul	r17,r23,r22
    ca38:	10c4b03a 	or	r2,r2,r3
    ca3c:	1440042e 	bgeu	r2,r17,ca50 <__udivdi3+0xdc>
    ca40:	1405883a 	add	r2,r2,r16
    ca44:	b5bfffc4 	addi	r22,r22,-1
    ca48:	14000136 	bltu	r2,r16,ca50 <__udivdi3+0xdc>
    ca4c:	14413d36 	bltu	r2,r17,cf44 <__udivdi3+0x5d0>
    ca50:	1463c83a 	sub	r17,r2,r17
    ca54:	8809883a 	mov	r4,r17
    ca58:	a80b883a 	mov	r5,r21
    ca5c:	000e9cc0 	call	e9cc <__udivsi3>
    ca60:	8809883a 	mov	r4,r17
    ca64:	a80b883a 	mov	r5,r21
    ca68:	1029883a 	mov	r20,r2
    ca6c:	000e9d40 	call	e9d4 <__umodsi3>
    ca70:	1004943a 	slli	r2,r2,16
    ca74:	bd09383a 	mul	r4,r23,r20
    ca78:	e0ffffcc 	andi	r3,fp,65535
    ca7c:	10c4b03a 	or	r2,r2,r3
    ca80:	1100042e 	bgeu	r2,r4,ca94 <__udivdi3+0x120>
    ca84:	8085883a 	add	r2,r16,r2
    ca88:	a53fffc4 	addi	r20,r20,-1
    ca8c:	14000136 	bltu	r2,r16,ca94 <__udivdi3+0x120>
    ca90:	11012036 	bltu	r2,r4,cf14 <__udivdi3+0x5a0>
    ca94:	b004943a 	slli	r2,r22,16
    ca98:	d9000317 	ldw	r4,12(sp)
    ca9c:	a084b03a 	or	r2,r20,r2
    caa0:	00001506 	br	caf8 <__udivdi3+0x184>
    caa4:	380d883a 	mov	r6,r7
    caa8:	29c06236 	bltu	r5,r7,cc34 <__udivdi3+0x2c0>
    caac:	00bfffd4 	movui	r2,65535
    cab0:	11c05a36 	bltu	r2,r7,cc1c <__udivdi3+0x2a8>
    cab4:	00803fc4 	movi	r2,255
    cab8:	11c0fc36 	bltu	r2,r7,ceac <__udivdi3+0x538>
    cabc:	000b883a 	mov	r5,zero
    cac0:	0005883a 	mov	r2,zero
    cac4:	3084d83a 	srl	r2,r6,r2
    cac8:	01000074 	movhi	r4,1
    cacc:	21088904 	addi	r4,r4,8740
    cad0:	01c00804 	movi	r7,32
    cad4:	1105883a 	add	r2,r2,r4
    cad8:	10c00003 	ldbu	r3,0(r2)
    cadc:	28c7883a 	add	r3,r5,r3
    cae0:	38efc83a 	sub	r23,r7,r3
    cae4:	b800691e 	bne	r23,zero,cc8c <__udivdi3+0x318>
    cae8:	35000136 	bltu	r6,r20,caf0 <__udivdi3+0x17c>
    caec:	e4005136 	bltu	fp,r16,cc34 <__udivdi3+0x2c0>
    caf0:	00800044 	movi	r2,1
    caf4:	0009883a 	mov	r4,zero
    caf8:	2007883a 	mov	r3,r4
    cafc:	dfc00f17 	ldw	ra,60(sp)
    cb00:	df000e17 	ldw	fp,56(sp)
    cb04:	ddc00d17 	ldw	r23,52(sp)
    cb08:	dd800c17 	ldw	r22,48(sp)
    cb0c:	dd400b17 	ldw	r21,44(sp)
    cb10:	dd000a17 	ldw	r20,40(sp)
    cb14:	dcc00917 	ldw	r19,36(sp)
    cb18:	dc800817 	ldw	r18,32(sp)
    cb1c:	dc400717 	ldw	r17,28(sp)
    cb20:	dc000617 	ldw	r16,24(sp)
    cb24:	dec01004 	addi	sp,sp,64
    cb28:	f800283a 	ret
    cb2c:	00bfffd4 	movui	r2,65535
    cb30:	12005036 	bltu	r2,r8,cc74 <__udivdi3+0x300>
    cb34:	00803fc4 	movi	r2,255
    cb38:	1200e836 	bltu	r2,r8,cedc <__udivdi3+0x568>
    cb3c:	000b883a 	mov	r5,zero
    cb40:	0005883a 	mov	r2,zero
    cb44:	8084d83a 	srl	r2,r16,r2
    cb48:	01000074 	movhi	r4,1
    cb4c:	21088904 	addi	r4,r4,8740
    cb50:	01800804 	movi	r6,32
    cb54:	1105883a 	add	r2,r2,r4
    cb58:	10c00003 	ldbu	r3,0(r2)
    cb5c:	28c7883a 	add	r3,r5,r3
    cb60:	30cbc83a 	sub	r5,r6,r3
    cb64:	28000626 	beq	r5,zero,cb80 <__udivdi3+0x20c>
    cb68:	3145c83a 	sub	r2,r6,r5
    cb6c:	e084d83a 	srl	r2,fp,r2
    cb70:	a146983a 	sll	r3,r20,r5
    cb74:	e178983a 	sll	fp,fp,r5
    cb78:	8160983a 	sll	r16,r16,r5
    cb7c:	18a8b03a 	or	r20,r3,r2
    cb80:	802ad43a 	srli	r21,r16,16
    cb84:	a009883a 	mov	r4,r20
    cb88:	85ffffcc 	andi	r23,r16,65535
    cb8c:	a80b883a 	mov	r5,r21
    cb90:	000e9cc0 	call	e9cc <__udivsi3>
    cb94:	a009883a 	mov	r4,r20
    cb98:	a80b883a 	mov	r5,r21
    cb9c:	102d883a 	mov	r22,r2
    cba0:	000e9d40 	call	e9d4 <__umodsi3>
    cba4:	1004943a 	slli	r2,r2,16
    cba8:	e006d43a 	srli	r3,fp,16
    cbac:	bda3383a 	mul	r17,r23,r22
    cbb0:	10c4b03a 	or	r2,r2,r3
    cbb4:	1440042e 	bgeu	r2,r17,cbc8 <__udivdi3+0x254>
    cbb8:	1405883a 	add	r2,r2,r16
    cbbc:	b5bfffc4 	addi	r22,r22,-1
    cbc0:	14000136 	bltu	r2,r16,cbc8 <__udivdi3+0x254>
    cbc4:	1440d536 	bltu	r2,r17,cf1c <__udivdi3+0x5a8>
    cbc8:	1463c83a 	sub	r17,r2,r17
    cbcc:	8809883a 	mov	r4,r17
    cbd0:	a80b883a 	mov	r5,r21
    cbd4:	000e9cc0 	call	e9cc <__udivsi3>
    cbd8:	8809883a 	mov	r4,r17
    cbdc:	a80b883a 	mov	r5,r21
    cbe0:	1029883a 	mov	r20,r2
    cbe4:	000e9d40 	call	e9d4 <__umodsi3>
    cbe8:	1004943a 	slli	r2,r2,16
    cbec:	bd09383a 	mul	r4,r23,r20
    cbf0:	e0ffffcc 	andi	r3,fp,65535
    cbf4:	10c4b03a 	or	r2,r2,r3
    cbf8:	1100042e 	bgeu	r2,r4,cc0c <__udivdi3+0x298>
    cbfc:	8085883a 	add	r2,r16,r2
    cc00:	a53fffc4 	addi	r20,r20,-1
    cc04:	14000136 	bltu	r2,r16,cc0c <__udivdi3+0x298>
    cc08:	1100c736 	bltu	r2,r4,cf28 <__udivdi3+0x5b4>
    cc0c:	b004943a 	slli	r2,r22,16
    cc10:	0009883a 	mov	r4,zero
    cc14:	a084b03a 	or	r2,r20,r2
    cc18:	003fb706 	br	caf8 <__udivdi3+0x184>
    cc1c:	00804034 	movhi	r2,256
    cc20:	10bfffc4 	addi	r2,r2,-1
    cc24:	11c0a436 	bltu	r2,r7,ceb8 <__udivdi3+0x544>
    cc28:	01400404 	movi	r5,16
    cc2c:	2805883a 	mov	r2,r5
    cc30:	003fa406 	br	cac4 <__udivdi3+0x150>
    cc34:	0005883a 	mov	r2,zero
    cc38:	0009883a 	mov	r4,zero
    cc3c:	003fae06 	br	caf8 <__udivdi3+0x184>
    cc40:	00804034 	movhi	r2,256
    cc44:	10bfffc4 	addi	r2,r2,-1
    cc48:	1400a136 	bltu	r2,r16,ced0 <__udivdi3+0x55c>
    cc4c:	01400404 	movi	r5,16
    cc50:	2805883a 	mov	r2,r5
    cc54:	003f6006 	br	c9d8 <__udivdi3+0x64>
    cc58:	01000044 	movi	r4,1
    cc5c:	000b883a 	mov	r5,zero
    cc60:	000e9cc0 	call	e9cc <__udivsi3>
    cc64:	1021883a 	mov	r16,r2
    cc68:	00bfffd4 	movui	r2,65535
    cc6c:	143ff436 	bltu	r2,r16,cc40 <__udivdi3+0x2cc>
    cc70:	003f5506 	br	c9c8 <__udivdi3+0x54>
    cc74:	00804034 	movhi	r2,256
    cc78:	10bfffc4 	addi	r2,r2,-1
    cc7c:	12009a36 	bltu	r2,r8,cee8 <__udivdi3+0x574>
    cc80:	01400404 	movi	r5,16
    cc84:	2805883a 	mov	r2,r5
    cc88:	003fae06 	br	cb44 <__udivdi3+0x1d0>
    cc8c:	3dc5c83a 	sub	r2,r7,r23
    cc90:	35c8983a 	sll	r4,r6,r23
    cc94:	8086d83a 	srl	r3,r16,r2
    cc98:	a0a2d83a 	srl	r17,r20,r2
    cc9c:	e084d83a 	srl	r2,fp,r2
    cca0:	20eab03a 	or	r21,r4,r3
    cca4:	a82cd43a 	srli	r22,r21,16
    cca8:	a5c6983a 	sll	r3,r20,r23
    ccac:	8809883a 	mov	r4,r17
    ccb0:	b00b883a 	mov	r5,r22
    ccb4:	1886b03a 	or	r3,r3,r2
    ccb8:	d8c00215 	stw	r3,8(sp)
    ccbc:	000e9cc0 	call	e9cc <__udivsi3>
    ccc0:	8809883a 	mov	r4,r17
    ccc4:	b00b883a 	mov	r5,r22
    ccc8:	1029883a 	mov	r20,r2
    cccc:	000e9d40 	call	e9d4 <__umodsi3>
    ccd0:	a8ffffcc 	andi	r3,r21,65535
    ccd4:	d8c00515 	stw	r3,20(sp)
    ccd8:	d9000217 	ldw	r4,8(sp)
    ccdc:	d9400517 	ldw	r5,20(sp)
    cce0:	1004943a 	slli	r2,r2,16
    cce4:	2006d43a 	srli	r3,r4,16
    cce8:	85e0983a 	sll	r16,r16,r23
    ccec:	2d23383a 	mul	r17,r5,r20
    ccf0:	10c4b03a 	or	r2,r2,r3
    ccf4:	dc000015 	stw	r16,0(sp)
    ccf8:	1440032e 	bgeu	r2,r17,cd08 <__udivdi3+0x394>
    ccfc:	1545883a 	add	r2,r2,r21
    cd00:	a53fffc4 	addi	r20,r20,-1
    cd04:	15407f2e 	bgeu	r2,r21,cf04 <__udivdi3+0x590>
    cd08:	1463c83a 	sub	r17,r2,r17
    cd0c:	8809883a 	mov	r4,r17
    cd10:	b00b883a 	mov	r5,r22
    cd14:	000e9cc0 	call	e9cc <__udivsi3>
    cd18:	8809883a 	mov	r4,r17
    cd1c:	b00b883a 	mov	r5,r22
    cd20:	1021883a 	mov	r16,r2
    cd24:	000e9d40 	call	e9d4 <__umodsi3>
    cd28:	d8c00517 	ldw	r3,20(sp)
    cd2c:	d9000217 	ldw	r4,8(sp)
    cd30:	1004943a 	slli	r2,r2,16
    cd34:	1c0f383a 	mul	r7,r3,r16
    cd38:	20ffffcc 	andi	r3,r4,65535
    cd3c:	10e2b03a 	or	r17,r2,r3
    cd40:	89c0032e 	bgeu	r17,r7,cd50 <__udivdi3+0x3dc>
    cd44:	8d63883a 	add	r17,r17,r21
    cd48:	843fffc4 	addi	r16,r16,-1
    cd4c:	8d40692e 	bgeu	r17,r21,cef4 <__udivdi3+0x580>
    cd50:	a008943a 	slli	r4,r20,16
    cd54:	d9400017 	ldw	r5,0(sp)
    cd58:	89e3c83a 	sub	r17,r17,r7
    cd5c:	8110b03a 	or	r8,r16,r4
    cd60:	280cd43a 	srli	r6,r5,16
    cd64:	28ffffcc 	andi	r3,r5,65535
    cd68:	40bfffcc 	andi	r2,r8,65535
    cd6c:	400ad43a 	srli	r5,r8,16
    cd70:	10d3383a 	mul	r9,r2,r3
    cd74:	1185383a 	mul	r2,r2,r6
    cd78:	28c7383a 	mul	r3,r5,r3
    cd7c:	4808d43a 	srli	r4,r9,16
    cd80:	298b383a 	mul	r5,r5,r6
    cd84:	10c5883a 	add	r2,r2,r3
    cd88:	2089883a 	add	r4,r4,r2
    cd8c:	20c0022e 	bgeu	r4,r3,cd98 <__udivdi3+0x424>
    cd90:	00800074 	movhi	r2,1
    cd94:	288b883a 	add	r5,r5,r2
    cd98:	2004d43a 	srli	r2,r4,16
    cd9c:	288b883a 	add	r5,r5,r2
    cda0:	89403f36 	bltu	r17,r5,cea0 <__udivdi3+0x52c>
    cda4:	89403926 	beq	r17,r5,ce8c <__udivdi3+0x518>
    cda8:	4005883a 	mov	r2,r8
    cdac:	0009883a 	mov	r4,zero
    cdb0:	003f5106 	br	caf8 <__udivdi3+0x184>
    cdb4:	85a0983a 	sll	r16,r16,r22
    cdb8:	3585c83a 	sub	r2,r6,r22
    cdbc:	a0a2d83a 	srl	r17,r20,r2
    cdc0:	802ad43a 	srli	r21,r16,16
    cdc4:	e084d83a 	srl	r2,fp,r2
    cdc8:	a586983a 	sll	r3,r20,r22
    cdcc:	8809883a 	mov	r4,r17
    cdd0:	a80b883a 	mov	r5,r21
    cdd4:	1886b03a 	or	r3,r3,r2
    cdd8:	d8c00115 	stw	r3,4(sp)
    cddc:	000e9cc0 	call	e9cc <__udivsi3>
    cde0:	8809883a 	mov	r4,r17
    cde4:	a80b883a 	mov	r5,r21
    cde8:	d8800415 	stw	r2,16(sp)
    cdec:	000e9d40 	call	e9d4 <__umodsi3>
    cdf0:	d9000117 	ldw	r4,4(sp)
    cdf4:	d9400417 	ldw	r5,16(sp)
    cdf8:	1004943a 	slli	r2,r2,16
    cdfc:	85ffffcc 	andi	r23,r16,65535
    ce00:	2006d43a 	srli	r3,r4,16
    ce04:	b963383a 	mul	r17,r23,r5
    ce08:	10c4b03a 	or	r2,r2,r3
    ce0c:	1440042e 	bgeu	r2,r17,ce20 <__udivdi3+0x4ac>
    ce10:	297fffc4 	addi	r5,r5,-1
    ce14:	1405883a 	add	r2,r2,r16
    ce18:	d9400415 	stw	r5,16(sp)
    ce1c:	1400442e 	bgeu	r2,r16,cf30 <__udivdi3+0x5bc>
    ce20:	1463c83a 	sub	r17,r2,r17
    ce24:	8809883a 	mov	r4,r17
    ce28:	a80b883a 	mov	r5,r21
    ce2c:	000e9cc0 	call	e9cc <__udivsi3>
    ce30:	8809883a 	mov	r4,r17
    ce34:	a80b883a 	mov	r5,r21
    ce38:	1029883a 	mov	r20,r2
    ce3c:	000e9d40 	call	e9d4 <__umodsi3>
    ce40:	d9400117 	ldw	r5,4(sp)
    ce44:	1004943a 	slli	r2,r2,16
    ce48:	bd09383a 	mul	r4,r23,r20
    ce4c:	28ffffcc 	andi	r3,r5,65535
    ce50:	10c6b03a 	or	r3,r2,r3
    ce54:	1900062e 	bgeu	r3,r4,ce70 <__udivdi3+0x4fc>
    ce58:	1c07883a 	add	r3,r3,r16
    ce5c:	a53fffc4 	addi	r20,r20,-1
    ce60:	1c000336 	bltu	r3,r16,ce70 <__udivdi3+0x4fc>
    ce64:	1900022e 	bgeu	r3,r4,ce70 <__udivdi3+0x4fc>
    ce68:	a53fffc4 	addi	r20,r20,-1
    ce6c:	1c07883a 	add	r3,r3,r16
    ce70:	d9400417 	ldw	r5,16(sp)
    ce74:	e5b8983a 	sll	fp,fp,r22
    ce78:	1923c83a 	sub	r17,r3,r4
    ce7c:	2804943a 	slli	r2,r5,16
    ce80:	a0a8b03a 	or	r20,r20,r2
    ce84:	dd000315 	stw	r20,12(sp)
    ce88:	003ee106 	br	ca10 <__udivdi3+0x9c>
    ce8c:	2004943a 	slli	r2,r4,16
    ce90:	e5c8983a 	sll	r4,fp,r23
    ce94:	48ffffcc 	andi	r3,r9,65535
    ce98:	10c5883a 	add	r2,r2,r3
    ce9c:	20bfc22e 	bgeu	r4,r2,cda8 <__udivdi3+0x434>
    cea0:	40bfffc4 	addi	r2,r8,-1
    cea4:	0009883a 	mov	r4,zero
    cea8:	003f1306 	br	caf8 <__udivdi3+0x184>
    ceac:	01400204 	movi	r5,8
    ceb0:	2805883a 	mov	r2,r5
    ceb4:	003f0306 	br	cac4 <__udivdi3+0x150>
    ceb8:	01400604 	movi	r5,24
    cebc:	2805883a 	mov	r2,r5
    cec0:	003f0006 	br	cac4 <__udivdi3+0x150>
    cec4:	01400204 	movi	r5,8
    cec8:	2805883a 	mov	r2,r5
    cecc:	003ec206 	br	c9d8 <__udivdi3+0x64>
    ced0:	01400604 	movi	r5,24
    ced4:	2805883a 	mov	r2,r5
    ced8:	003ebf06 	br	c9d8 <__udivdi3+0x64>
    cedc:	01400204 	movi	r5,8
    cee0:	2805883a 	mov	r2,r5
    cee4:	003f1706 	br	cb44 <__udivdi3+0x1d0>
    cee8:	01400604 	movi	r5,24
    ceec:	2805883a 	mov	r2,r5
    cef0:	003f1406 	br	cb44 <__udivdi3+0x1d0>
    cef4:	89ff962e 	bgeu	r17,r7,cd50 <__udivdi3+0x3dc>
    cef8:	8d63883a 	add	r17,r17,r21
    cefc:	843fffc4 	addi	r16,r16,-1
    cf00:	003f9306 	br	cd50 <__udivdi3+0x3dc>
    cf04:	147f802e 	bgeu	r2,r17,cd08 <__udivdi3+0x394>
    cf08:	a53fffc4 	addi	r20,r20,-1
    cf0c:	1545883a 	add	r2,r2,r21
    cf10:	003f7d06 	br	cd08 <__udivdi3+0x394>
    cf14:	a53fffc4 	addi	r20,r20,-1
    cf18:	003ede06 	br	ca94 <__udivdi3+0x120>
    cf1c:	b5bfffc4 	addi	r22,r22,-1
    cf20:	1405883a 	add	r2,r2,r16
    cf24:	003f2806 	br	cbc8 <__udivdi3+0x254>
    cf28:	a53fffc4 	addi	r20,r20,-1
    cf2c:	003f3706 	br	cc0c <__udivdi3+0x298>
    cf30:	147fbb2e 	bgeu	r2,r17,ce20 <__udivdi3+0x4ac>
    cf34:	297fffc4 	addi	r5,r5,-1
    cf38:	1405883a 	add	r2,r2,r16
    cf3c:	d9400415 	stw	r5,16(sp)
    cf40:	003fb706 	br	ce20 <__udivdi3+0x4ac>
    cf44:	b5bfffc4 	addi	r22,r22,-1
    cf48:	1405883a 	add	r2,r2,r16
    cf4c:	003ec006 	br	ca50 <__udivdi3+0xdc>

0000cf50 <__umoddi3>:
    cf50:	defff104 	addi	sp,sp,-60
    cf54:	dd800b15 	stw	r22,44(sp)
    cf58:	dd000915 	stw	r20,36(sp)
    cf5c:	dc000515 	stw	r16,20(sp)
    cf60:	dfc00e15 	stw	ra,56(sp)
    cf64:	df000d15 	stw	fp,52(sp)
    cf68:	ddc00c15 	stw	r23,48(sp)
    cf6c:	dd400a15 	stw	r21,40(sp)
    cf70:	dcc00815 	stw	r19,32(sp)
    cf74:	dc800715 	stw	r18,28(sp)
    cf78:	dc400615 	stw	r17,24(sp)
    cf7c:	3021883a 	mov	r16,r6
    cf80:	202d883a 	mov	r22,r4
    cf84:	2829883a 	mov	r20,r5
    cf88:	38002b1e 	bne	r7,zero,d038 <__umoddi3+0xe8>
    cf8c:	29805036 	bltu	r5,r6,d0d0 <__umoddi3+0x180>
    cf90:	30008a26 	beq	r6,zero,d1bc <__umoddi3+0x26c>
    cf94:	00bfffd4 	movui	r2,65535
    cf98:	14008236 	bltu	r2,r16,d1a4 <__umoddi3+0x254>
    cf9c:	00803fc4 	movi	r2,255
    cfa0:	14013636 	bltu	r2,r16,d47c <__umoddi3+0x52c>
    cfa4:	000b883a 	mov	r5,zero
    cfa8:	0005883a 	mov	r2,zero
    cfac:	8084d83a 	srl	r2,r16,r2
    cfb0:	01000074 	movhi	r4,1
    cfb4:	21088904 	addi	r4,r4,8740
    cfb8:	01800804 	movi	r6,32
    cfbc:	1105883a 	add	r2,r2,r4
    cfc0:	10c00003 	ldbu	r3,0(r2)
    cfc4:	28c7883a 	add	r3,r5,r3
    cfc8:	30efc83a 	sub	r23,r6,r3
    cfcc:	b800941e 	bne	r23,zero,d220 <__umoddi3+0x2d0>
    cfd0:	802ad43a 	srli	r21,r16,16
    cfd4:	a423c83a 	sub	r17,r20,r16
    cfd8:	0039883a 	mov	fp,zero
    cfdc:	853fffcc 	andi	r20,r16,65535
    cfe0:	8809883a 	mov	r4,r17
    cfe4:	a80b883a 	mov	r5,r21
    cfe8:	000e9cc0 	call	e9cc <__udivsi3>
    cfec:	8809883a 	mov	r4,r17
    cff0:	a80b883a 	mov	r5,r21
    cff4:	a0a3383a 	mul	r17,r20,r2
    cff8:	000e9d40 	call	e9d4 <__umodsi3>
    cffc:	1004943a 	slli	r2,r2,16
    d000:	b006d43a 	srli	r3,r22,16
    d004:	10c4b03a 	or	r2,r2,r3
    d008:	1440032e 	bgeu	r2,r17,d018 <__umoddi3+0xc8>
    d00c:	1405883a 	add	r2,r2,r16
    d010:	14000136 	bltu	r2,r16,d018 <__umoddi3+0xc8>
    d014:	14413536 	bltu	r2,r17,d4ec <__umoddi3+0x59c>
    d018:	1463c83a 	sub	r17,r2,r17
    d01c:	8809883a 	mov	r4,r17
    d020:	a80b883a 	mov	r5,r21
    d024:	000e9cc0 	call	e9cc <__udivsi3>
    d028:	8809883a 	mov	r4,r17
    d02c:	a0a3383a 	mul	r17,r20,r2
    d030:	a80b883a 	mov	r5,r21
    d034:	00004d06 	br	d16c <__umoddi3+0x21c>
    d038:	380d883a 	mov	r6,r7
    d03c:	29c0102e 	bgeu	r5,r7,d080 <__umoddi3+0x130>
    d040:	2011883a 	mov	r8,r4
    d044:	2813883a 	mov	r9,r5
    d048:	4005883a 	mov	r2,r8
    d04c:	4807883a 	mov	r3,r9
    d050:	dfc00e17 	ldw	ra,56(sp)
    d054:	df000d17 	ldw	fp,52(sp)
    d058:	ddc00c17 	ldw	r23,48(sp)
    d05c:	dd800b17 	ldw	r22,44(sp)
    d060:	dd400a17 	ldw	r21,40(sp)
    d064:	dd000917 	ldw	r20,36(sp)
    d068:	dcc00817 	ldw	r19,32(sp)
    d06c:	dc800717 	ldw	r18,28(sp)
    d070:	dc400617 	ldw	r17,24(sp)
    d074:	dc000517 	ldw	r16,20(sp)
    d078:	dec00f04 	addi	sp,sp,60
    d07c:	f800283a 	ret
    d080:	00bfffd4 	movui	r2,65535
    d084:	11c05a36 	bltu	r2,r7,d1f0 <__umoddi3+0x2a0>
    d088:	00803fc4 	movi	r2,255
    d08c:	11c0fe36 	bltu	r2,r7,d488 <__umoddi3+0x538>
    d090:	000b883a 	mov	r5,zero
    d094:	0005883a 	mov	r2,zero
    d098:	3084d83a 	srl	r2,r6,r2
    d09c:	01000074 	movhi	r4,1
    d0a0:	21088904 	addi	r4,r4,8740
    d0a4:	01c00804 	movi	r7,32
    d0a8:	1105883a 	add	r2,r2,r4
    d0ac:	10c00003 	ldbu	r3,0(r2)
    d0b0:	28c7883a 	add	r3,r5,r3
    d0b4:	38ebc83a 	sub	r21,r7,r3
    d0b8:	a800851e 	bne	r21,zero,d2d0 <__umoddi3+0x380>
    d0bc:	35005236 	bltu	r6,r20,d208 <__umoddi3+0x2b8>
    d0c0:	b400512e 	bgeu	r22,r16,d208 <__umoddi3+0x2b8>
    d0c4:	b011883a 	mov	r8,r22
    d0c8:	a013883a 	mov	r9,r20
    d0cc:	003fde06 	br	d048 <__umoddi3+0xf8>
    d0d0:	00bfffd4 	movui	r2,65535
    d0d4:	11804036 	bltu	r2,r6,d1d8 <__umoddi3+0x288>
    d0d8:	00803fc4 	movi	r2,255
    d0dc:	1180ed36 	bltu	r2,r6,d494 <__umoddi3+0x544>
    d0e0:	000b883a 	mov	r5,zero
    d0e4:	0005883a 	mov	r2,zero
    d0e8:	8084d83a 	srl	r2,r16,r2
    d0ec:	01000074 	movhi	r4,1
    d0f0:	21088904 	addi	r4,r4,8740
    d0f4:	01800804 	movi	r6,32
    d0f8:	1105883a 	add	r2,r2,r4
    d0fc:	10c00003 	ldbu	r3,0(r2)
    d100:	28c7883a 	add	r3,r5,r3
    d104:	30c7c83a 	sub	r3,r6,r3
    d108:	1800bf1e 	bne	r3,zero,d408 <__umoddi3+0x4b8>
    d10c:	0039883a 	mov	fp,zero
    d110:	802ad43a 	srli	r21,r16,16
    d114:	a009883a 	mov	r4,r20
    d118:	85ffffcc 	andi	r23,r16,65535
    d11c:	a80b883a 	mov	r5,r21
    d120:	000e9cc0 	call	e9cc <__udivsi3>
    d124:	a009883a 	mov	r4,r20
    d128:	a80b883a 	mov	r5,r21
    d12c:	b8a3383a 	mul	r17,r23,r2
    d130:	000e9d40 	call	e9d4 <__umodsi3>
    d134:	1004943a 	slli	r2,r2,16
    d138:	b006d43a 	srli	r3,r22,16
    d13c:	10c4b03a 	or	r2,r2,r3
    d140:	1440032e 	bgeu	r2,r17,d150 <__umoddi3+0x200>
    d144:	1405883a 	add	r2,r2,r16
    d148:	14000136 	bltu	r2,r16,d150 <__umoddi3+0x200>
    d14c:	1440e536 	bltu	r2,r17,d4e4 <__umoddi3+0x594>
    d150:	1463c83a 	sub	r17,r2,r17
    d154:	8809883a 	mov	r4,r17
    d158:	a80b883a 	mov	r5,r21
    d15c:	000e9cc0 	call	e9cc <__udivsi3>
    d160:	8809883a 	mov	r4,r17
    d164:	b8a3383a 	mul	r17,r23,r2
    d168:	a80b883a 	mov	r5,r21
    d16c:	000e9d40 	call	e9d4 <__umodsi3>
    d170:	1004943a 	slli	r2,r2,16
    d174:	b0ffffcc 	andi	r3,r22,65535
    d178:	10c4b03a 	or	r2,r2,r3
    d17c:	1440042e 	bgeu	r2,r17,d190 <__umoddi3+0x240>
    d180:	1405883a 	add	r2,r2,r16
    d184:	14000236 	bltu	r2,r16,d190 <__umoddi3+0x240>
    d188:	1440012e 	bgeu	r2,r17,d190 <__umoddi3+0x240>
    d18c:	1405883a 	add	r2,r2,r16
    d190:	1445c83a 	sub	r2,r2,r17
    d194:	1724d83a 	srl	r18,r2,fp
    d198:	0013883a 	mov	r9,zero
    d19c:	9011883a 	mov	r8,r18
    d1a0:	003fa906 	br	d048 <__umoddi3+0xf8>
    d1a4:	00804034 	movhi	r2,256
    d1a8:	10bfffc4 	addi	r2,r2,-1
    d1ac:	1400b036 	bltu	r2,r16,d470 <__umoddi3+0x520>
    d1b0:	01400404 	movi	r5,16
    d1b4:	2805883a 	mov	r2,r5
    d1b8:	003f7c06 	br	cfac <__umoddi3+0x5c>
    d1bc:	01000044 	movi	r4,1
    d1c0:	000b883a 	mov	r5,zero
    d1c4:	000e9cc0 	call	e9cc <__udivsi3>
    d1c8:	1021883a 	mov	r16,r2
    d1cc:	00bfffd4 	movui	r2,65535
    d1d0:	143ff436 	bltu	r2,r16,d1a4 <__umoddi3+0x254>
    d1d4:	003f7106 	br	cf9c <__umoddi3+0x4c>
    d1d8:	00804034 	movhi	r2,256
    d1dc:	10bfffc4 	addi	r2,r2,-1
    d1e0:	1180af36 	bltu	r2,r6,d4a0 <__umoddi3+0x550>
    d1e4:	01400404 	movi	r5,16
    d1e8:	2805883a 	mov	r2,r5
    d1ec:	003fbe06 	br	d0e8 <__umoddi3+0x198>
    d1f0:	00804034 	movhi	r2,256
    d1f4:	10bfffc4 	addi	r2,r2,-1
    d1f8:	11c0ac36 	bltu	r2,r7,d4ac <__umoddi3+0x55c>
    d1fc:	01400404 	movi	r5,16
    d200:	2805883a 	mov	r2,r5
    d204:	003fa406 	br	d098 <__umoddi3+0x148>
    d208:	b409c83a 	sub	r4,r22,r16
    d20c:	b105803a 	cmpltu	r2,r22,r4
    d210:	a187c83a 	sub	r3,r20,r6
    d214:	18a9c83a 	sub	r20,r3,r2
    d218:	202d883a 	mov	r22,r4
    d21c:	003fa906 	br	d0c4 <__umoddi3+0x174>
    d220:	85e0983a 	sll	r16,r16,r23
    d224:	35c5c83a 	sub	r2,r6,r23
    d228:	a0a2d83a 	srl	r17,r20,r2
    d22c:	802ad43a 	srli	r21,r16,16
    d230:	b084d83a 	srl	r2,r22,r2
    d234:	a5c6983a 	sll	r3,r20,r23
    d238:	8809883a 	mov	r4,r17
    d23c:	a80b883a 	mov	r5,r21
    d240:	1886b03a 	or	r3,r3,r2
    d244:	d8c00115 	stw	r3,4(sp)
    d248:	853fffcc 	andi	r20,r16,65535
    d24c:	000e9cc0 	call	e9cc <__udivsi3>
    d250:	8809883a 	mov	r4,r17
    d254:	a80b883a 	mov	r5,r21
    d258:	a0a3383a 	mul	r17,r20,r2
    d25c:	000e9d40 	call	e9d4 <__umodsi3>
    d260:	d9000117 	ldw	r4,4(sp)
    d264:	1004943a 	slli	r2,r2,16
    d268:	b839883a 	mov	fp,r23
    d26c:	2006d43a 	srli	r3,r4,16
    d270:	10c4b03a 	or	r2,r2,r3
    d274:	1440022e 	bgeu	r2,r17,d280 <__umoddi3+0x330>
    d278:	1405883a 	add	r2,r2,r16
    d27c:	1400962e 	bgeu	r2,r16,d4d8 <__umoddi3+0x588>
    d280:	1463c83a 	sub	r17,r2,r17
    d284:	8809883a 	mov	r4,r17
    d288:	a80b883a 	mov	r5,r21
    d28c:	000e9cc0 	call	e9cc <__udivsi3>
    d290:	8809883a 	mov	r4,r17
    d294:	a80b883a 	mov	r5,r21
    d298:	a0a3383a 	mul	r17,r20,r2
    d29c:	000e9d40 	call	e9d4 <__umodsi3>
    d2a0:	d9400117 	ldw	r5,4(sp)
    d2a4:	1004943a 	slli	r2,r2,16
    d2a8:	28ffffcc 	andi	r3,r5,65535
    d2ac:	10c4b03a 	or	r2,r2,r3
    d2b0:	1440042e 	bgeu	r2,r17,d2c4 <__umoddi3+0x374>
    d2b4:	1405883a 	add	r2,r2,r16
    d2b8:	14000236 	bltu	r2,r16,d2c4 <__umoddi3+0x374>
    d2bc:	1440012e 	bgeu	r2,r17,d2c4 <__umoddi3+0x374>
    d2c0:	1405883a 	add	r2,r2,r16
    d2c4:	b5ec983a 	sll	r22,r22,r23
    d2c8:	1463c83a 	sub	r17,r2,r17
    d2cc:	003f4406 	br	cfe0 <__umoddi3+0x90>
    d2d0:	3d4fc83a 	sub	r7,r7,r21
    d2d4:	3546983a 	sll	r3,r6,r21
    d2d8:	81c4d83a 	srl	r2,r16,r7
    d2dc:	a1e2d83a 	srl	r17,r20,r7
    d2e0:	a54c983a 	sll	r6,r20,r21
    d2e4:	18aeb03a 	or	r23,r3,r2
    d2e8:	b828d43a 	srli	r20,r23,16
    d2ec:	b1c4d83a 	srl	r2,r22,r7
    d2f0:	8809883a 	mov	r4,r17
    d2f4:	a00b883a 	mov	r5,r20
    d2f8:	308cb03a 	or	r6,r6,r2
    d2fc:	d9c00315 	stw	r7,12(sp)
    d300:	d9800215 	stw	r6,8(sp)
    d304:	000e9cc0 	call	e9cc <__udivsi3>
    d308:	8809883a 	mov	r4,r17
    d30c:	a00b883a 	mov	r5,r20
    d310:	1039883a 	mov	fp,r2
    d314:	000e9d40 	call	e9d4 <__umodsi3>
    d318:	b8ffffcc 	andi	r3,r23,65535
    d31c:	d8c00415 	stw	r3,16(sp)
    d320:	d9000217 	ldw	r4,8(sp)
    d324:	d9400417 	ldw	r5,16(sp)
    d328:	1004943a 	slli	r2,r2,16
    d32c:	2006d43a 	srli	r3,r4,16
    d330:	8560983a 	sll	r16,r16,r21
    d334:	2f23383a 	mul	r17,r5,fp
    d338:	10c4b03a 	or	r2,r2,r3
    d33c:	dc000015 	stw	r16,0(sp)
    d340:	b56c983a 	sll	r22,r22,r21
    d344:	1440032e 	bgeu	r2,r17,d354 <__umoddi3+0x404>
    d348:	15c5883a 	add	r2,r2,r23
    d34c:	e73fffc4 	addi	fp,fp,-1
    d350:	15c05d2e 	bgeu	r2,r23,d4c8 <__umoddi3+0x578>
    d354:	1463c83a 	sub	r17,r2,r17
    d358:	8809883a 	mov	r4,r17
    d35c:	a00b883a 	mov	r5,r20
    d360:	000e9cc0 	call	e9cc <__udivsi3>
    d364:	8809883a 	mov	r4,r17
    d368:	a00b883a 	mov	r5,r20
    d36c:	1021883a 	mov	r16,r2
    d370:	000e9d40 	call	e9d4 <__umodsi3>
    d374:	d8c00417 	ldw	r3,16(sp)
    d378:	d9000217 	ldw	r4,8(sp)
    d37c:	1004943a 	slli	r2,r2,16
    d380:	1c23383a 	mul	r17,r3,r16
    d384:	20ffffcc 	andi	r3,r4,65535
    d388:	10ceb03a 	or	r7,r2,r3
    d38c:	3c40032e 	bgeu	r7,r17,d39c <__umoddi3+0x44c>
    d390:	3dcf883a 	add	r7,r7,r23
    d394:	843fffc4 	addi	r16,r16,-1
    d398:	3dc0472e 	bgeu	r7,r23,d4b8 <__umoddi3+0x568>
    d39c:	e004943a 	slli	r2,fp,16
    d3a0:	d9400017 	ldw	r5,0(sp)
    d3a4:	3c4fc83a 	sub	r7,r7,r17
    d3a8:	8084b03a 	or	r2,r16,r2
    d3ac:	28ffffcc 	andi	r3,r5,65535
    d3b0:	280cd43a 	srli	r6,r5,16
    d3b4:	100ad43a 	srli	r5,r2,16
    d3b8:	10bfffcc 	andi	r2,r2,65535
    d3bc:	10d1383a 	mul	r8,r2,r3
    d3c0:	28c7383a 	mul	r3,r5,r3
    d3c4:	1185383a 	mul	r2,r2,r6
    d3c8:	4008d43a 	srli	r4,r8,16
    d3cc:	298b383a 	mul	r5,r5,r6
    d3d0:	10c5883a 	add	r2,r2,r3
    d3d4:	2089883a 	add	r4,r4,r2
    d3d8:	20c0022e 	bgeu	r4,r3,d3e4 <__umoddi3+0x494>
    d3dc:	00800074 	movhi	r2,1
    d3e0:	288b883a 	add	r5,r5,r2
    d3e4:	2004d43a 	srli	r2,r4,16
    d3e8:	2008943a 	slli	r4,r4,16
    d3ec:	40ffffcc 	andi	r3,r8,65535
    d3f0:	288b883a 	add	r5,r5,r2
    d3f4:	20c9883a 	add	r4,r4,r3
    d3f8:	39400b36 	bltu	r7,r5,d428 <__umoddi3+0x4d8>
    d3fc:	39403d26 	beq	r7,r5,d4f4 <__umoddi3+0x5a4>
    d400:	394bc83a 	sub	r5,r7,r5
    d404:	00000f06 	br	d444 <__umoddi3+0x4f4>
    d408:	30c5c83a 	sub	r2,r6,r3
    d40c:	1839883a 	mov	fp,r3
    d410:	b084d83a 	srl	r2,r22,r2
    d414:	a0c6983a 	sll	r3,r20,r3
    d418:	8720983a 	sll	r16,r16,fp
    d41c:	b72c983a 	sll	r22,r22,fp
    d420:	18a8b03a 	or	r20,r3,r2
    d424:	003f3a06 	br	d110 <__umoddi3+0x1c0>
    d428:	d8c00017 	ldw	r3,0(sp)
    d42c:	20c5c83a 	sub	r2,r4,r3
    d430:	2089803a 	cmpltu	r4,r4,r2
    d434:	2dc7c83a 	sub	r3,r5,r23
    d438:	1907c83a 	sub	r3,r3,r4
    d43c:	38cbc83a 	sub	r5,r7,r3
    d440:	1009883a 	mov	r4,r2
    d444:	b105c83a 	sub	r2,r22,r4
    d448:	b087803a 	cmpltu	r3,r22,r2
    d44c:	28c7c83a 	sub	r3,r5,r3
    d450:	d9400317 	ldw	r5,12(sp)
    d454:	1544d83a 	srl	r2,r2,r21
    d458:	1948983a 	sll	r4,r3,r5
    d45c:	1d46d83a 	srl	r3,r3,r21
    d460:	20a4b03a 	or	r18,r4,r2
    d464:	9011883a 	mov	r8,r18
    d468:	1813883a 	mov	r9,r3
    d46c:	003ef606 	br	d048 <__umoddi3+0xf8>
    d470:	01400604 	movi	r5,24
    d474:	2805883a 	mov	r2,r5
    d478:	003ecc06 	br	cfac <__umoddi3+0x5c>
    d47c:	01400204 	movi	r5,8
    d480:	2805883a 	mov	r2,r5
    d484:	003ec906 	br	cfac <__umoddi3+0x5c>
    d488:	01400204 	movi	r5,8
    d48c:	2805883a 	mov	r2,r5
    d490:	003f0106 	br	d098 <__umoddi3+0x148>
    d494:	01400204 	movi	r5,8
    d498:	2805883a 	mov	r2,r5
    d49c:	003f1206 	br	d0e8 <__umoddi3+0x198>
    d4a0:	01400604 	movi	r5,24
    d4a4:	2805883a 	mov	r2,r5
    d4a8:	003f0f06 	br	d0e8 <__umoddi3+0x198>
    d4ac:	01400604 	movi	r5,24
    d4b0:	2805883a 	mov	r2,r5
    d4b4:	003ef806 	br	d098 <__umoddi3+0x148>
    d4b8:	3c7fb82e 	bgeu	r7,r17,d39c <__umoddi3+0x44c>
    d4bc:	843fffc4 	addi	r16,r16,-1
    d4c0:	3dcf883a 	add	r7,r7,r23
    d4c4:	003fb506 	br	d39c <__umoddi3+0x44c>
    d4c8:	147fa22e 	bgeu	r2,r17,d354 <__umoddi3+0x404>
    d4cc:	e73fffc4 	addi	fp,fp,-1
    d4d0:	15c5883a 	add	r2,r2,r23
    d4d4:	003f9f06 	br	d354 <__umoddi3+0x404>
    d4d8:	147f692e 	bgeu	r2,r17,d280 <__umoddi3+0x330>
    d4dc:	1405883a 	add	r2,r2,r16
    d4e0:	003f6706 	br	d280 <__umoddi3+0x330>
    d4e4:	1405883a 	add	r2,r2,r16
    d4e8:	003f1906 	br	d150 <__umoddi3+0x200>
    d4ec:	1405883a 	add	r2,r2,r16
    d4f0:	003ec906 	br	d018 <__umoddi3+0xc8>
    d4f4:	b13fcc36 	bltu	r22,r4,d428 <__umoddi3+0x4d8>
    d4f8:	000b883a 	mov	r5,zero
    d4fc:	003fd106 	br	d444 <__umoddi3+0x4f4>

0000d500 <__nesf2>:
    d500:	defff304 	addi	sp,sp,-52
    d504:	dc400b15 	stw	r17,44(sp)
    d508:	dc400204 	addi	r17,sp,8
    d50c:	dc000a15 	stw	r16,40(sp)
    d510:	d9000015 	stw	r4,0(sp)
    d514:	d9400115 	stw	r5,4(sp)
    d518:	d809883a 	mov	r4,sp
    d51c:	880b883a 	mov	r5,r17
    d520:	dc000604 	addi	r16,sp,24
    d524:	dfc00c15 	stw	ra,48(sp)
    d528:	000ea5c0 	call	ea5c <__unpack_f>
    d52c:	d9000104 	addi	r4,sp,4
    d530:	800b883a 	mov	r5,r16
    d534:	000ea5c0 	call	ea5c <__unpack_f>
    d538:	d8800217 	ldw	r2,8(sp)
    d53c:	00c00044 	movi	r3,1
    d540:	180d883a 	mov	r6,r3
    d544:	1880062e 	bgeu	r3,r2,d560 <__nesf2+0x60>
    d548:	d8800617 	ldw	r2,24(sp)
    d54c:	8809883a 	mov	r4,r17
    d550:	800b883a 	mov	r5,r16
    d554:	1880022e 	bgeu	r3,r2,d560 <__nesf2+0x60>
    d558:	000eb240 	call	eb24 <__fpcmp_parts_f>
    d55c:	100d883a 	mov	r6,r2
    d560:	3005883a 	mov	r2,r6
    d564:	dfc00c17 	ldw	ra,48(sp)
    d568:	dc400b17 	ldw	r17,44(sp)
    d56c:	dc000a17 	ldw	r16,40(sp)
    d570:	dec00d04 	addi	sp,sp,52
    d574:	f800283a 	ret

0000d578 <__gtsf2>:
    d578:	defff304 	addi	sp,sp,-52
    d57c:	dc400b15 	stw	r17,44(sp)
    d580:	dc400204 	addi	r17,sp,8
    d584:	dc000a15 	stw	r16,40(sp)
    d588:	d9000015 	stw	r4,0(sp)
    d58c:	d9400115 	stw	r5,4(sp)
    d590:	d809883a 	mov	r4,sp
    d594:	880b883a 	mov	r5,r17
    d598:	dc000604 	addi	r16,sp,24
    d59c:	dfc00c15 	stw	ra,48(sp)
    d5a0:	000ea5c0 	call	ea5c <__unpack_f>
    d5a4:	d9000104 	addi	r4,sp,4
    d5a8:	800b883a 	mov	r5,r16
    d5ac:	000ea5c0 	call	ea5c <__unpack_f>
    d5b0:	d8800217 	ldw	r2,8(sp)
    d5b4:	00c00044 	movi	r3,1
    d5b8:	01bfffc4 	movi	r6,-1
    d5bc:	1880062e 	bgeu	r3,r2,d5d8 <__gtsf2+0x60>
    d5c0:	d8800617 	ldw	r2,24(sp)
    d5c4:	8809883a 	mov	r4,r17
    d5c8:	800b883a 	mov	r5,r16
    d5cc:	1880022e 	bgeu	r3,r2,d5d8 <__gtsf2+0x60>
    d5d0:	000eb240 	call	eb24 <__fpcmp_parts_f>
    d5d4:	100d883a 	mov	r6,r2
    d5d8:	3005883a 	mov	r2,r6
    d5dc:	dfc00c17 	ldw	ra,48(sp)
    d5e0:	dc400b17 	ldw	r17,44(sp)
    d5e4:	dc000a17 	ldw	r16,40(sp)
    d5e8:	dec00d04 	addi	sp,sp,52
    d5ec:	f800283a 	ret

0000d5f0 <__ltsf2>:
    d5f0:	defff304 	addi	sp,sp,-52
    d5f4:	dc400b15 	stw	r17,44(sp)
    d5f8:	dc400204 	addi	r17,sp,8
    d5fc:	dc000a15 	stw	r16,40(sp)
    d600:	d9000015 	stw	r4,0(sp)
    d604:	d9400115 	stw	r5,4(sp)
    d608:	d809883a 	mov	r4,sp
    d60c:	880b883a 	mov	r5,r17
    d610:	dc000604 	addi	r16,sp,24
    d614:	dfc00c15 	stw	ra,48(sp)
    d618:	000ea5c0 	call	ea5c <__unpack_f>
    d61c:	d9000104 	addi	r4,sp,4
    d620:	800b883a 	mov	r5,r16
    d624:	000ea5c0 	call	ea5c <__unpack_f>
    d628:	d8800217 	ldw	r2,8(sp)
    d62c:	00c00044 	movi	r3,1
    d630:	180d883a 	mov	r6,r3
    d634:	1880062e 	bgeu	r3,r2,d650 <__ltsf2+0x60>
    d638:	d8800617 	ldw	r2,24(sp)
    d63c:	8809883a 	mov	r4,r17
    d640:	800b883a 	mov	r5,r16
    d644:	1880022e 	bgeu	r3,r2,d650 <__ltsf2+0x60>
    d648:	000eb240 	call	eb24 <__fpcmp_parts_f>
    d64c:	100d883a 	mov	r6,r2
    d650:	3005883a 	mov	r2,r6
    d654:	dfc00c17 	ldw	ra,48(sp)
    d658:	dc400b17 	ldw	r17,44(sp)
    d65c:	dc000a17 	ldw	r16,40(sp)
    d660:	dec00d04 	addi	sp,sp,52
    d664:	f800283a 	ret

0000d668 <_fpadd_parts>:
    d668:	defff804 	addi	sp,sp,-32
    d66c:	dcc00315 	stw	r19,12(sp)
    d670:	2027883a 	mov	r19,r4
    d674:	21000017 	ldw	r4,0(r4)
    d678:	00c00044 	movi	r3,1
    d67c:	dd400515 	stw	r21,20(sp)
    d680:	dd000415 	stw	r20,16(sp)
    d684:	ddc00715 	stw	r23,28(sp)
    d688:	dd800615 	stw	r22,24(sp)
    d68c:	dc800215 	stw	r18,8(sp)
    d690:	dc400115 	stw	r17,4(sp)
    d694:	dc000015 	stw	r16,0(sp)
    d698:	282b883a 	mov	r21,r5
    d69c:	3029883a 	mov	r20,r6
    d6a0:	1900632e 	bgeu	r3,r4,d830 <_fpadd_parts+0x1c8>
    d6a4:	28800017 	ldw	r2,0(r5)
    d6a8:	1880812e 	bgeu	r3,r2,d8b0 <_fpadd_parts+0x248>
    d6ac:	00c00104 	movi	r3,4
    d6b0:	20c0dc26 	beq	r4,r3,da24 <_fpadd_parts+0x3bc>
    d6b4:	10c07e26 	beq	r2,r3,d8b0 <_fpadd_parts+0x248>
    d6b8:	00c00084 	movi	r3,2
    d6bc:	10c06726 	beq	r2,r3,d85c <_fpadd_parts+0x1f4>
    d6c0:	20c07b26 	beq	r4,r3,d8b0 <_fpadd_parts+0x248>
    d6c4:	9dc00217 	ldw	r23,8(r19)
    d6c8:	28c00217 	ldw	r3,8(r5)
    d6cc:	9c400317 	ldw	r17,12(r19)
    d6d0:	2bc00317 	ldw	r15,12(r5)
    d6d4:	b8cdc83a 	sub	r6,r23,r3
    d6d8:	9c800417 	ldw	r18,16(r19)
    d6dc:	2c000417 	ldw	r16,16(r5)
    d6e0:	3009883a 	mov	r4,r6
    d6e4:	30009716 	blt	r6,zero,d944 <_fpadd_parts+0x2dc>
    d6e8:	00800fc4 	movi	r2,63
    d6ec:	11806b16 	blt	r2,r6,d89c <_fpadd_parts+0x234>
    d6f0:	0100a40e 	bge	zero,r4,d984 <_fpadd_parts+0x31c>
    d6f4:	35bff804 	addi	r22,r6,-32
    d6f8:	b000bc16 	blt	r22,zero,d9ec <_fpadd_parts+0x384>
    d6fc:	8596d83a 	srl	r11,r16,r22
    d700:	0019883a 	mov	r12,zero
    d704:	0013883a 	mov	r9,zero
    d708:	01000044 	movi	r4,1
    d70c:	0015883a 	mov	r10,zero
    d710:	b000be16 	blt	r22,zero,da0c <_fpadd_parts+0x3a4>
    d714:	2590983a 	sll	r8,r4,r22
    d718:	000f883a 	mov	r7,zero
    d71c:	00bfffc4 	movi	r2,-1
    d720:	3889883a 	add	r4,r7,r2
    d724:	408b883a 	add	r5,r8,r2
    d728:	21cd803a 	cmpltu	r6,r4,r7
    d72c:	314b883a 	add	r5,r6,r5
    d730:	7904703a 	and	r2,r15,r4
    d734:	8146703a 	and	r3,r16,r5
    d738:	10c4b03a 	or	r2,r2,r3
    d73c:	10000226 	beq	r2,zero,d748 <_fpadd_parts+0xe0>
    d740:	02400044 	movi	r9,1
    d744:	0015883a 	mov	r10,zero
    d748:	5a5eb03a 	or	r15,r11,r9
    d74c:	62a0b03a 	or	r16,r12,r10
    d750:	99400117 	ldw	r5,4(r19)
    d754:	a8800117 	ldw	r2,4(r21)
    d758:	28806e26 	beq	r5,r2,d914 <_fpadd_parts+0x2ac>
    d75c:	28006626 	beq	r5,zero,d8f8 <_fpadd_parts+0x290>
    d760:	7c45c83a 	sub	r2,r15,r17
    d764:	7889803a 	cmpltu	r4,r15,r2
    d768:	8487c83a 	sub	r3,r16,r18
    d76c:	1909c83a 	sub	r4,r3,r4
    d770:	100d883a 	mov	r6,r2
    d774:	200f883a 	mov	r7,r4
    d778:	38007716 	blt	r7,zero,d958 <_fpadd_parts+0x2f0>
    d77c:	a5c00215 	stw	r23,8(r20)
    d780:	a1c00415 	stw	r7,16(r20)
    d784:	a0000115 	stw	zero,4(r20)
    d788:	a1800315 	stw	r6,12(r20)
    d78c:	a2000317 	ldw	r8,12(r20)
    d790:	a2400417 	ldw	r9,16(r20)
    d794:	00bfffc4 	movi	r2,-1
    d798:	408b883a 	add	r5,r8,r2
    d79c:	2a09803a 	cmpltu	r4,r5,r8
    d7a0:	488d883a 	add	r6,r9,r2
    d7a4:	01c40034 	movhi	r7,4096
    d7a8:	39ffffc4 	addi	r7,r7,-1
    d7ac:	218d883a 	add	r6,r4,r6
    d7b0:	39801736 	bltu	r7,r6,d810 <_fpadd_parts+0x1a8>
    d7b4:	31c06526 	beq	r6,r7,d94c <_fpadd_parts+0x2e4>
    d7b8:	a3000217 	ldw	r12,8(r20)
    d7bc:	4209883a 	add	r4,r8,r8
    d7c0:	00bfffc4 	movi	r2,-1
    d7c4:	220f803a 	cmpltu	r7,r4,r8
    d7c8:	4a4b883a 	add	r5,r9,r9
    d7cc:	394f883a 	add	r7,r7,r5
    d7d0:	2095883a 	add	r10,r4,r2
    d7d4:	3897883a 	add	r11,r7,r2
    d7d8:	510d803a 	cmpltu	r6,r10,r4
    d7dc:	6099883a 	add	r12,r12,r2
    d7e0:	32d7883a 	add	r11,r6,r11
    d7e4:	00840034 	movhi	r2,4096
    d7e8:	10bfffc4 	addi	r2,r2,-1
    d7ec:	2011883a 	mov	r8,r4
    d7f0:	3813883a 	mov	r9,r7
    d7f4:	a1000315 	stw	r4,12(r20)
    d7f8:	a1c00415 	stw	r7,16(r20)
    d7fc:	a3000215 	stw	r12,8(r20)
    d800:	12c00336 	bltu	r2,r11,d810 <_fpadd_parts+0x1a8>
    d804:	58bfed1e 	bne	r11,r2,d7bc <_fpadd_parts+0x154>
    d808:	00bfff84 	movi	r2,-2
    d80c:	12bfeb2e 	bgeu	r2,r10,d7bc <_fpadd_parts+0x154>
    d810:	a2800417 	ldw	r10,16(r20)
    d814:	008000c4 	movi	r2,3
    d818:	00c80034 	movhi	r3,8192
    d81c:	18ffffc4 	addi	r3,r3,-1
    d820:	a2400317 	ldw	r9,12(r20)
    d824:	a0800015 	stw	r2,0(r20)
    d828:	1a802336 	bltu	r3,r10,d8b8 <_fpadd_parts+0x250>
    d82c:	a027883a 	mov	r19,r20
    d830:	9805883a 	mov	r2,r19
    d834:	ddc00717 	ldw	r23,28(sp)
    d838:	dd800617 	ldw	r22,24(sp)
    d83c:	dd400517 	ldw	r21,20(sp)
    d840:	dd000417 	ldw	r20,16(sp)
    d844:	dcc00317 	ldw	r19,12(sp)
    d848:	dc800217 	ldw	r18,8(sp)
    d84c:	dc400117 	ldw	r17,4(sp)
    d850:	dc000017 	ldw	r16,0(sp)
    d854:	dec00804 	addi	sp,sp,32
    d858:	f800283a 	ret
    d85c:	20fff41e 	bne	r4,r3,d830 <_fpadd_parts+0x1c8>
    d860:	31000015 	stw	r4,0(r6)
    d864:	98800117 	ldw	r2,4(r19)
    d868:	30800115 	stw	r2,4(r6)
    d86c:	98c00217 	ldw	r3,8(r19)
    d870:	30c00215 	stw	r3,8(r6)
    d874:	98800317 	ldw	r2,12(r19)
    d878:	30800315 	stw	r2,12(r6)
    d87c:	98c00417 	ldw	r3,16(r19)
    d880:	30c00415 	stw	r3,16(r6)
    d884:	98800117 	ldw	r2,4(r19)
    d888:	28c00117 	ldw	r3,4(r5)
    d88c:	3027883a 	mov	r19,r6
    d890:	10c4703a 	and	r2,r2,r3
    d894:	30800115 	stw	r2,4(r6)
    d898:	003fe506 	br	d830 <_fpadd_parts+0x1c8>
    d89c:	1dc02616 	blt	r3,r23,d938 <_fpadd_parts+0x2d0>
    d8a0:	0023883a 	mov	r17,zero
    d8a4:	182f883a 	mov	r23,r3
    d8a8:	0025883a 	mov	r18,zero
    d8ac:	003fa806 	br	d750 <_fpadd_parts+0xe8>
    d8b0:	a827883a 	mov	r19,r21
    d8b4:	003fde06 	br	d830 <_fpadd_parts+0x1c8>
    d8b8:	01800044 	movi	r6,1
    d8bc:	500497fa 	slli	r2,r10,31
    d8c0:	4808d07a 	srli	r4,r9,1
    d8c4:	518ad83a 	srl	r5,r10,r6
    d8c8:	a2000217 	ldw	r8,8(r20)
    d8cc:	1108b03a 	or	r4,r2,r4
    d8d0:	0007883a 	mov	r3,zero
    d8d4:	4984703a 	and	r2,r9,r6
    d8d8:	208cb03a 	or	r6,r4,r2
    d8dc:	28ceb03a 	or	r7,r5,r3
    d8e0:	42000044 	addi	r8,r8,1
    d8e4:	a027883a 	mov	r19,r20
    d8e8:	a1c00415 	stw	r7,16(r20)
    d8ec:	a2000215 	stw	r8,8(r20)
    d8f0:	a1800315 	stw	r6,12(r20)
    d8f4:	003fce06 	br	d830 <_fpadd_parts+0x1c8>
    d8f8:	8bc5c83a 	sub	r2,r17,r15
    d8fc:	8889803a 	cmpltu	r4,r17,r2
    d900:	9407c83a 	sub	r3,r18,r16
    d904:	1909c83a 	sub	r4,r3,r4
    d908:	100d883a 	mov	r6,r2
    d90c:	200f883a 	mov	r7,r4
    d910:	003f9906 	br	d778 <_fpadd_parts+0x110>
    d914:	7c45883a 	add	r2,r15,r17
    d918:	13c9803a 	cmpltu	r4,r2,r15
    d91c:	8487883a 	add	r3,r16,r18
    d920:	20c9883a 	add	r4,r4,r3
    d924:	a1400115 	stw	r5,4(r20)
    d928:	a5c00215 	stw	r23,8(r20)
    d92c:	a0800315 	stw	r2,12(r20)
    d930:	a1000415 	stw	r4,16(r20)
    d934:	003fb606 	br	d810 <_fpadd_parts+0x1a8>
    d938:	001f883a 	mov	r15,zero
    d93c:	0021883a 	mov	r16,zero
    d940:	003f8306 	br	d750 <_fpadd_parts+0xe8>
    d944:	018dc83a 	sub	r6,zero,r6
    d948:	003f6706 	br	d6e8 <_fpadd_parts+0x80>
    d94c:	00bfff84 	movi	r2,-2
    d950:	117faf36 	bltu	r2,r5,d810 <_fpadd_parts+0x1a8>
    d954:	003f9806 	br	d7b8 <_fpadd_parts+0x150>
    d958:	0005883a 	mov	r2,zero
    d95c:	1189c83a 	sub	r4,r2,r6
    d960:	1105803a 	cmpltu	r2,r2,r4
    d964:	01cbc83a 	sub	r5,zero,r7
    d968:	2885c83a 	sub	r2,r5,r2
    d96c:	01800044 	movi	r6,1
    d970:	a1800115 	stw	r6,4(r20)
    d974:	a5c00215 	stw	r23,8(r20)
    d978:	a1000315 	stw	r4,12(r20)
    d97c:	a0800415 	stw	r2,16(r20)
    d980:	003f8206 	br	d78c <_fpadd_parts+0x124>
    d984:	203f7226 	beq	r4,zero,d750 <_fpadd_parts+0xe8>
    d988:	35bff804 	addi	r22,r6,-32
    d98c:	b9af883a 	add	r23,r23,r6
    d990:	b0003116 	blt	r22,zero,da58 <_fpadd_parts+0x3f0>
    d994:	959ad83a 	srl	r13,r18,r22
    d998:	001d883a 	mov	r14,zero
    d99c:	000f883a 	mov	r7,zero
    d9a0:	01000044 	movi	r4,1
    d9a4:	0011883a 	mov	r8,zero
    d9a8:	b0002516 	blt	r22,zero,da40 <_fpadd_parts+0x3d8>
    d9ac:	2594983a 	sll	r10,r4,r22
    d9b0:	0013883a 	mov	r9,zero
    d9b4:	00bfffc4 	movi	r2,-1
    d9b8:	4889883a 	add	r4,r9,r2
    d9bc:	508b883a 	add	r5,r10,r2
    d9c0:	224d803a 	cmpltu	r6,r4,r9
    d9c4:	314b883a 	add	r5,r6,r5
    d9c8:	8904703a 	and	r2,r17,r4
    d9cc:	9146703a 	and	r3,r18,r5
    d9d0:	10c4b03a 	or	r2,r2,r3
    d9d4:	10000226 	beq	r2,zero,d9e0 <_fpadd_parts+0x378>
    d9d8:	01c00044 	movi	r7,1
    d9dc:	0011883a 	mov	r8,zero
    d9e0:	69e2b03a 	or	r17,r13,r7
    d9e4:	7224b03a 	or	r18,r14,r8
    d9e8:	003f5906 	br	d750 <_fpadd_parts+0xe8>
    d9ec:	8407883a 	add	r3,r16,r16
    d9f0:	008007c4 	movi	r2,31
    d9f4:	1185c83a 	sub	r2,r2,r6
    d9f8:	1886983a 	sll	r3,r3,r2
    d9fc:	7996d83a 	srl	r11,r15,r6
    da00:	8198d83a 	srl	r12,r16,r6
    da04:	1ad6b03a 	or	r11,r3,r11
    da08:	003f3e06 	br	d704 <_fpadd_parts+0x9c>
    da0c:	2006d07a 	srli	r3,r4,1
    da10:	008007c4 	movi	r2,31
    da14:	1185c83a 	sub	r2,r2,r6
    da18:	1890d83a 	srl	r8,r3,r2
    da1c:	218e983a 	sll	r7,r4,r6
    da20:	003f3e06 	br	d71c <_fpadd_parts+0xb4>
    da24:	113f821e 	bne	r2,r4,d830 <_fpadd_parts+0x1c8>
    da28:	28c00117 	ldw	r3,4(r5)
    da2c:	98800117 	ldw	r2,4(r19)
    da30:	10ff7f26 	beq	r2,r3,d830 <_fpadd_parts+0x1c8>
    da34:	04c00074 	movhi	r19,1
    da38:	9cc88404 	addi	r19,r19,8720
    da3c:	003f7c06 	br	d830 <_fpadd_parts+0x1c8>
    da40:	2006d07a 	srli	r3,r4,1
    da44:	008007c4 	movi	r2,31
    da48:	1185c83a 	sub	r2,r2,r6
    da4c:	1894d83a 	srl	r10,r3,r2
    da50:	2192983a 	sll	r9,r4,r6
    da54:	003fd706 	br	d9b4 <_fpadd_parts+0x34c>
    da58:	9487883a 	add	r3,r18,r18
    da5c:	008007c4 	movi	r2,31
    da60:	1185c83a 	sub	r2,r2,r6
    da64:	1886983a 	sll	r3,r3,r2
    da68:	899ad83a 	srl	r13,r17,r6
    da6c:	919cd83a 	srl	r14,r18,r6
    da70:	1b5ab03a 	or	r13,r3,r13
    da74:	003fc906 	br	d99c <_fpadd_parts+0x334>

0000da78 <__subdf3>:
    da78:	deffea04 	addi	sp,sp,-88
    da7c:	dcc01415 	stw	r19,80(sp)
    da80:	dcc00404 	addi	r19,sp,16
    da84:	2011883a 	mov	r8,r4
    da88:	2813883a 	mov	r9,r5
    da8c:	dc401315 	stw	r17,76(sp)
    da90:	d809883a 	mov	r4,sp
    da94:	980b883a 	mov	r5,r19
    da98:	dc400904 	addi	r17,sp,36
    da9c:	dfc01515 	stw	ra,84(sp)
    daa0:	da400115 	stw	r9,4(sp)
    daa4:	d9c00315 	stw	r7,12(sp)
    daa8:	da000015 	stw	r8,0(sp)
    daac:	d9800215 	stw	r6,8(sp)
    dab0:	000ef0c0 	call	ef0c <__unpack_d>
    dab4:	d9000204 	addi	r4,sp,8
    dab8:	880b883a 	mov	r5,r17
    dabc:	000ef0c0 	call	ef0c <__unpack_d>
    dac0:	d8800a17 	ldw	r2,40(sp)
    dac4:	880b883a 	mov	r5,r17
    dac8:	9809883a 	mov	r4,r19
    dacc:	d9800e04 	addi	r6,sp,56
    dad0:	1080005c 	xori	r2,r2,1
    dad4:	d8800a15 	stw	r2,40(sp)
    dad8:	000d6680 	call	d668 <_fpadd_parts>
    dadc:	1009883a 	mov	r4,r2
    dae0:	000ebf80 	call	ebf8 <__pack_d>
    dae4:	dfc01517 	ldw	ra,84(sp)
    dae8:	dcc01417 	ldw	r19,80(sp)
    daec:	dc401317 	ldw	r17,76(sp)
    daf0:	dec01604 	addi	sp,sp,88
    daf4:	f800283a 	ret

0000daf8 <__adddf3>:
    daf8:	deffea04 	addi	sp,sp,-88
    dafc:	dcc01415 	stw	r19,80(sp)
    db00:	dcc00404 	addi	r19,sp,16
    db04:	2011883a 	mov	r8,r4
    db08:	2813883a 	mov	r9,r5
    db0c:	dc401315 	stw	r17,76(sp)
    db10:	d809883a 	mov	r4,sp
    db14:	980b883a 	mov	r5,r19
    db18:	dc400904 	addi	r17,sp,36
    db1c:	dfc01515 	stw	ra,84(sp)
    db20:	da400115 	stw	r9,4(sp)
    db24:	d9c00315 	stw	r7,12(sp)
    db28:	da000015 	stw	r8,0(sp)
    db2c:	d9800215 	stw	r6,8(sp)
    db30:	000ef0c0 	call	ef0c <__unpack_d>
    db34:	d9000204 	addi	r4,sp,8
    db38:	880b883a 	mov	r5,r17
    db3c:	000ef0c0 	call	ef0c <__unpack_d>
    db40:	d9800e04 	addi	r6,sp,56
    db44:	9809883a 	mov	r4,r19
    db48:	880b883a 	mov	r5,r17
    db4c:	000d6680 	call	d668 <_fpadd_parts>
    db50:	1009883a 	mov	r4,r2
    db54:	000ebf80 	call	ebf8 <__pack_d>
    db58:	dfc01517 	ldw	ra,84(sp)
    db5c:	dcc01417 	ldw	r19,80(sp)
    db60:	dc401317 	ldw	r17,76(sp)
    db64:	dec01604 	addi	sp,sp,88
    db68:	f800283a 	ret

0000db6c <__muldf3>:
    db6c:	deffe004 	addi	sp,sp,-128
    db70:	dc401815 	stw	r17,96(sp)
    db74:	dc400404 	addi	r17,sp,16
    db78:	2011883a 	mov	r8,r4
    db7c:	2813883a 	mov	r9,r5
    db80:	dc001715 	stw	r16,92(sp)
    db84:	d809883a 	mov	r4,sp
    db88:	880b883a 	mov	r5,r17
    db8c:	dc000904 	addi	r16,sp,36
    db90:	dfc01f15 	stw	ra,124(sp)
    db94:	da400115 	stw	r9,4(sp)
    db98:	d9c00315 	stw	r7,12(sp)
    db9c:	da000015 	stw	r8,0(sp)
    dba0:	d9800215 	stw	r6,8(sp)
    dba4:	ddc01e15 	stw	r23,120(sp)
    dba8:	dd801d15 	stw	r22,116(sp)
    dbac:	dd401c15 	stw	r21,112(sp)
    dbb0:	dd001b15 	stw	r20,108(sp)
    dbb4:	dcc01a15 	stw	r19,104(sp)
    dbb8:	dc801915 	stw	r18,100(sp)
    dbbc:	000ef0c0 	call	ef0c <__unpack_d>
    dbc0:	d9000204 	addi	r4,sp,8
    dbc4:	800b883a 	mov	r5,r16
    dbc8:	000ef0c0 	call	ef0c <__unpack_d>
    dbcc:	d9000417 	ldw	r4,16(sp)
    dbd0:	00800044 	movi	r2,1
    dbd4:	1100102e 	bgeu	r2,r4,dc18 <__muldf3+0xac>
    dbd8:	d8c00917 	ldw	r3,36(sp)
    dbdc:	10c0062e 	bgeu	r2,r3,dbf8 <__muldf3+0x8c>
    dbe0:	00800104 	movi	r2,4
    dbe4:	20800a26 	beq	r4,r2,dc10 <__muldf3+0xa4>
    dbe8:	1880cc26 	beq	r3,r2,df1c <__muldf3+0x3b0>
    dbec:	00800084 	movi	r2,2
    dbf0:	20800926 	beq	r4,r2,dc18 <__muldf3+0xac>
    dbf4:	1880191e 	bne	r3,r2,dc5c <__muldf3+0xf0>
    dbf8:	d8c00a17 	ldw	r3,40(sp)
    dbfc:	d8800517 	ldw	r2,20(sp)
    dc00:	8009883a 	mov	r4,r16
    dc04:	10c4c03a 	cmpne	r2,r2,r3
    dc08:	d8800a15 	stw	r2,40(sp)
    dc0c:	00000706 	br	dc2c <__muldf3+0xc0>
    dc10:	00800084 	movi	r2,2
    dc14:	1880c326 	beq	r3,r2,df24 <__muldf3+0x3b8>
    dc18:	d8800517 	ldw	r2,20(sp)
    dc1c:	d8c00a17 	ldw	r3,40(sp)
    dc20:	8809883a 	mov	r4,r17
    dc24:	10c4c03a 	cmpne	r2,r2,r3
    dc28:	d8800515 	stw	r2,20(sp)
    dc2c:	000ebf80 	call	ebf8 <__pack_d>
    dc30:	dfc01f17 	ldw	ra,124(sp)
    dc34:	ddc01e17 	ldw	r23,120(sp)
    dc38:	dd801d17 	ldw	r22,116(sp)
    dc3c:	dd401c17 	ldw	r21,112(sp)
    dc40:	dd001b17 	ldw	r20,108(sp)
    dc44:	dcc01a17 	ldw	r19,104(sp)
    dc48:	dc801917 	ldw	r18,100(sp)
    dc4c:	dc401817 	ldw	r17,96(sp)
    dc50:	dc001717 	ldw	r16,92(sp)
    dc54:	dec02004 	addi	sp,sp,128
    dc58:	f800283a 	ret
    dc5c:	dd800717 	ldw	r22,28(sp)
    dc60:	dc800c17 	ldw	r18,48(sp)
    dc64:	002b883a 	mov	r21,zero
    dc68:	0023883a 	mov	r17,zero
    dc6c:	a80b883a 	mov	r5,r21
    dc70:	b00d883a 	mov	r6,r22
    dc74:	880f883a 	mov	r7,r17
    dc78:	ddc00817 	ldw	r23,32(sp)
    dc7c:	dcc00d17 	ldw	r19,52(sp)
    dc80:	9009883a 	mov	r4,r18
    dc84:	000c8380 	call	c838 <__muldi3>
    dc88:	001b883a 	mov	r13,zero
    dc8c:	680f883a 	mov	r7,r13
    dc90:	b009883a 	mov	r4,r22
    dc94:	000b883a 	mov	r5,zero
    dc98:	980d883a 	mov	r6,r19
    dc9c:	b82d883a 	mov	r22,r23
    dca0:	002f883a 	mov	r23,zero
    dca4:	db401615 	stw	r13,88(sp)
    dca8:	d8801315 	stw	r2,76(sp)
    dcac:	d8c01415 	stw	r3,80(sp)
    dcb0:	dcc01515 	stw	r19,84(sp)
    dcb4:	000c8380 	call	c838 <__muldi3>
    dcb8:	b00d883a 	mov	r6,r22
    dcbc:	000b883a 	mov	r5,zero
    dcc0:	9009883a 	mov	r4,r18
    dcc4:	b80f883a 	mov	r7,r23
    dcc8:	1021883a 	mov	r16,r2
    dccc:	1823883a 	mov	r17,r3
    dcd0:	000c8380 	call	c838 <__muldi3>
    dcd4:	8085883a 	add	r2,r16,r2
    dcd8:	140d803a 	cmpltu	r6,r2,r16
    dcdc:	88c7883a 	add	r3,r17,r3
    dce0:	30cd883a 	add	r6,r6,r3
    dce4:	1029883a 	mov	r20,r2
    dce8:	302b883a 	mov	r21,r6
    dcec:	da801317 	ldw	r10,76(sp)
    dcf0:	dac01417 	ldw	r11,80(sp)
    dcf4:	db001517 	ldw	r12,84(sp)
    dcf8:	db401617 	ldw	r13,88(sp)
    dcfc:	3440612e 	bgeu	r6,r17,de84 <__muldf3+0x318>
    dd00:	0009883a 	mov	r4,zero
    dd04:	5105883a 	add	r2,r10,r4
    dd08:	128d803a 	cmpltu	r6,r2,r10
    dd0c:	5d07883a 	add	r3,r11,r20
    dd10:	30cd883a 	add	r6,r6,r3
    dd14:	0021883a 	mov	r16,zero
    dd18:	04400044 	movi	r17,1
    dd1c:	1025883a 	mov	r18,r2
    dd20:	3027883a 	mov	r19,r6
    dd24:	32c06236 	bltu	r6,r11,deb0 <__muldf3+0x344>
    dd28:	59807a26 	beq	r11,r6,df14 <__muldf3+0x3a8>
    dd2c:	680b883a 	mov	r5,r13
    dd30:	b80f883a 	mov	r7,r23
    dd34:	6009883a 	mov	r4,r12
    dd38:	b00d883a 	mov	r6,r22
    dd3c:	000c8380 	call	c838 <__muldi3>
    dd40:	1009883a 	mov	r4,r2
    dd44:	000f883a 	mov	r7,zero
    dd48:	1545883a 	add	r2,r2,r21
    dd4c:	1111803a 	cmpltu	r8,r2,r4
    dd50:	19c7883a 	add	r3,r3,r7
    dd54:	40c7883a 	add	r3,r8,r3
    dd58:	88cb883a 	add	r5,r17,r3
    dd5c:	d8c00617 	ldw	r3,24(sp)
    dd60:	8089883a 	add	r4,r16,r2
    dd64:	d8800b17 	ldw	r2,44(sp)
    dd68:	18c00104 	addi	r3,r3,4
    dd6c:	240d803a 	cmpltu	r6,r4,r16
    dd70:	10c7883a 	add	r3,r2,r3
    dd74:	2013883a 	mov	r9,r4
    dd78:	d8800a17 	ldw	r2,40(sp)
    dd7c:	d9000517 	ldw	r4,20(sp)
    dd80:	314d883a 	add	r6,r6,r5
    dd84:	3015883a 	mov	r10,r6
    dd88:	2088c03a 	cmpne	r4,r4,r2
    dd8c:	00880034 	movhi	r2,8192
    dd90:	10bfffc4 	addi	r2,r2,-1
    dd94:	d9000f15 	stw	r4,60(sp)
    dd98:	d8c01015 	stw	r3,64(sp)
    dd9c:	1180162e 	bgeu	r2,r6,ddf8 <__muldf3+0x28c>
    dda0:	1811883a 	mov	r8,r3
    dda4:	101f883a 	mov	r15,r2
    dda8:	980497fa 	slli	r2,r19,31
    ddac:	9016d07a 	srli	r11,r18,1
    ddb0:	500697fa 	slli	r3,r10,31
    ddb4:	480cd07a 	srli	r6,r9,1
    ddb8:	500ed07a 	srli	r7,r10,1
    ddbc:	12d6b03a 	or	r11,r2,r11
    ddc0:	00800044 	movi	r2,1
    ddc4:	198cb03a 	or	r6,r3,r6
    ddc8:	4888703a 	and	r4,r9,r2
    ddcc:	9818d07a 	srli	r12,r19,1
    ddd0:	001b883a 	mov	r13,zero
    ddd4:	03a00034 	movhi	r14,32768
    ddd8:	3013883a 	mov	r9,r6
    dddc:	3815883a 	mov	r10,r7
    dde0:	4091883a 	add	r8,r8,r2
    dde4:	20000226 	beq	r4,zero,ddf0 <__muldf3+0x284>
    dde8:	5b64b03a 	or	r18,r11,r13
    ddec:	63a6b03a 	or	r19,r12,r14
    ddf0:	7abfed36 	bltu	r15,r10,dda8 <__muldf3+0x23c>
    ddf4:	da001015 	stw	r8,64(sp)
    ddf8:	00840034 	movhi	r2,4096
    ddfc:	10bfffc4 	addi	r2,r2,-1
    de00:	12801436 	bltu	r2,r10,de54 <__muldf3+0x2e8>
    de04:	da001017 	ldw	r8,64(sp)
    de08:	101f883a 	mov	r15,r2
    de0c:	4a45883a 	add	r2,r9,r9
    de10:	124d803a 	cmpltu	r6,r2,r9
    de14:	5287883a 	add	r3,r10,r10
    de18:	9497883a 	add	r11,r18,r18
    de1c:	5c8f803a 	cmpltu	r7,r11,r18
    de20:	9cd9883a 	add	r12,r19,r19
    de24:	01000044 	movi	r4,1
    de28:	30cd883a 	add	r6,r6,r3
    de2c:	3b0f883a 	add	r7,r7,r12
    de30:	423fffc4 	addi	r8,r8,-1
    de34:	1013883a 	mov	r9,r2
    de38:	3015883a 	mov	r10,r6
    de3c:	111ab03a 	or	r13,r2,r4
    de40:	98003016 	blt	r19,zero,df04 <__muldf3+0x398>
    de44:	5825883a 	mov	r18,r11
    de48:	3827883a 	mov	r19,r7
    de4c:	7abfef2e 	bgeu	r15,r10,de0c <__muldf3+0x2a0>
    de50:	da001015 	stw	r8,64(sp)
    de54:	00803fc4 	movi	r2,255
    de58:	488e703a 	and	r7,r9,r2
    de5c:	00802004 	movi	r2,128
    de60:	0007883a 	mov	r3,zero
    de64:	0011883a 	mov	r8,zero
    de68:	38801826 	beq	r7,r2,decc <__muldf3+0x360>
    de6c:	008000c4 	movi	r2,3
    de70:	d9000e04 	addi	r4,sp,56
    de74:	da801215 	stw	r10,72(sp)
    de78:	d8800e15 	stw	r2,56(sp)
    de7c:	da401115 	stw	r9,68(sp)
    de80:	003f6a06 	br	dc2c <__muldf3+0xc0>
    de84:	89802126 	beq	r17,r6,df0c <__muldf3+0x3a0>
    de88:	0009883a 	mov	r4,zero
    de8c:	5105883a 	add	r2,r10,r4
    de90:	128d803a 	cmpltu	r6,r2,r10
    de94:	5d07883a 	add	r3,r11,r20
    de98:	30cd883a 	add	r6,r6,r3
    de9c:	0021883a 	mov	r16,zero
    dea0:	0023883a 	mov	r17,zero
    dea4:	1025883a 	mov	r18,r2
    dea8:	3027883a 	mov	r19,r6
    deac:	32ff9e2e 	bgeu	r6,r11,dd28 <__muldf3+0x1bc>
    deb0:	00800044 	movi	r2,1
    deb4:	8089883a 	add	r4,r16,r2
    deb8:	240d803a 	cmpltu	r6,r4,r16
    debc:	344d883a 	add	r6,r6,r17
    dec0:	2021883a 	mov	r16,r4
    dec4:	3023883a 	mov	r17,r6
    dec8:	003f9806 	br	dd2c <__muldf3+0x1c0>
    decc:	403fe71e 	bne	r8,zero,de6c <__muldf3+0x300>
    ded0:	01004004 	movi	r4,256
    ded4:	4904703a 	and	r2,r9,r4
    ded8:	10c4b03a 	or	r2,r2,r3
    dedc:	103fe31e 	bne	r2,zero,de6c <__muldf3+0x300>
    dee0:	94c4b03a 	or	r2,r18,r19
    dee4:	103fe126 	beq	r2,zero,de6c <__muldf3+0x300>
    dee8:	49c5883a 	add	r2,r9,r7
    deec:	1251803a 	cmpltu	r8,r2,r9
    def0:	4291883a 	add	r8,r8,r10
    def4:	013fc004 	movi	r4,-256
    def8:	1112703a 	and	r9,r2,r4
    defc:	4015883a 	mov	r10,r8
    df00:	003fda06 	br	de6c <__muldf3+0x300>
    df04:	6813883a 	mov	r9,r13
    df08:	003fce06 	br	de44 <__muldf3+0x2d8>
    df0c:	143f7c36 	bltu	r2,r16,dd00 <__muldf3+0x194>
    df10:	003fdd06 	br	de88 <__muldf3+0x31c>
    df14:	12bf852e 	bgeu	r2,r10,dd2c <__muldf3+0x1c0>
    df18:	003fe506 	br	deb0 <__muldf3+0x344>
    df1c:	00800084 	movi	r2,2
    df20:	20bf351e 	bne	r4,r2,dbf8 <__muldf3+0x8c>
    df24:	01000074 	movhi	r4,1
    df28:	21088404 	addi	r4,r4,8720
    df2c:	003f3f06 	br	dc2c <__muldf3+0xc0>

0000df30 <__divdf3>:
    df30:	deffed04 	addi	sp,sp,-76
    df34:	dcc01115 	stw	r19,68(sp)
    df38:	dcc00404 	addi	r19,sp,16
    df3c:	2011883a 	mov	r8,r4
    df40:	2813883a 	mov	r9,r5
    df44:	dc000e15 	stw	r16,56(sp)
    df48:	d809883a 	mov	r4,sp
    df4c:	980b883a 	mov	r5,r19
    df50:	dc000904 	addi	r16,sp,36
    df54:	dfc01215 	stw	ra,72(sp)
    df58:	da400115 	stw	r9,4(sp)
    df5c:	d9c00315 	stw	r7,12(sp)
    df60:	da000015 	stw	r8,0(sp)
    df64:	d9800215 	stw	r6,8(sp)
    df68:	dc801015 	stw	r18,64(sp)
    df6c:	dc400f15 	stw	r17,60(sp)
    df70:	000ef0c0 	call	ef0c <__unpack_d>
    df74:	d9000204 	addi	r4,sp,8
    df78:	800b883a 	mov	r5,r16
    df7c:	000ef0c0 	call	ef0c <__unpack_d>
    df80:	d9000417 	ldw	r4,16(sp)
    df84:	00800044 	movi	r2,1
    df88:	11000b2e 	bgeu	r2,r4,dfb8 <__divdf3+0x88>
    df8c:	d9400917 	ldw	r5,36(sp)
    df90:	1140762e 	bgeu	r2,r5,e16c <__divdf3+0x23c>
    df94:	d8800517 	ldw	r2,20(sp)
    df98:	d8c00a17 	ldw	r3,40(sp)
    df9c:	01800104 	movi	r6,4
    dfa0:	10c4f03a 	xor	r2,r2,r3
    dfa4:	d8800515 	stw	r2,20(sp)
    dfa8:	21800226 	beq	r4,r6,dfb4 <__divdf3+0x84>
    dfac:	00800084 	movi	r2,2
    dfb0:	2080141e 	bne	r4,r2,e004 <__divdf3+0xd4>
    dfb4:	29000926 	beq	r5,r4,dfdc <__divdf3+0xac>
    dfb8:	9809883a 	mov	r4,r19
    dfbc:	000ebf80 	call	ebf8 <__pack_d>
    dfc0:	dfc01217 	ldw	ra,72(sp)
    dfc4:	dcc01117 	ldw	r19,68(sp)
    dfc8:	dc801017 	ldw	r18,64(sp)
    dfcc:	dc400f17 	ldw	r17,60(sp)
    dfd0:	dc000e17 	ldw	r16,56(sp)
    dfd4:	dec01304 	addi	sp,sp,76
    dfd8:	f800283a 	ret
    dfdc:	01000074 	movhi	r4,1
    dfe0:	21088404 	addi	r4,r4,8720
    dfe4:	000ebf80 	call	ebf8 <__pack_d>
    dfe8:	dfc01217 	ldw	ra,72(sp)
    dfec:	dcc01117 	ldw	r19,68(sp)
    dff0:	dc801017 	ldw	r18,64(sp)
    dff4:	dc400f17 	ldw	r17,60(sp)
    dff8:	dc000e17 	ldw	r16,56(sp)
    dffc:	dec01304 	addi	sp,sp,76
    e000:	f800283a 	ret
    e004:	29805b26 	beq	r5,r6,e174 <__divdf3+0x244>
    e008:	28802d26 	beq	r5,r2,e0c0 <__divdf3+0x190>
    e00c:	d8c00617 	ldw	r3,24(sp)
    e010:	d8800b17 	ldw	r2,44(sp)
    e014:	d9c00817 	ldw	r7,32(sp)
    e018:	dc400d17 	ldw	r17,52(sp)
    e01c:	188bc83a 	sub	r5,r3,r2
    e020:	d9800717 	ldw	r6,28(sp)
    e024:	dc000c17 	ldw	r16,48(sp)
    e028:	d9400615 	stw	r5,24(sp)
    e02c:	3c403836 	bltu	r7,r17,e110 <__divdf3+0x1e0>
    e030:	89c03626 	beq	r17,r7,e10c <__divdf3+0x1dc>
    e034:	0015883a 	mov	r10,zero
    e038:	001d883a 	mov	r14,zero
    e03c:	02c40034 	movhi	r11,4096
    e040:	001f883a 	mov	r15,zero
    e044:	003f883a 	mov	ra,zero
    e048:	04800f44 	movi	r18,61
    e04c:	00000f06 	br	e08c <__divdf3+0x15c>
    e050:	601d883a 	mov	r14,r12
    e054:	681f883a 	mov	r15,r13
    e058:	400d883a 	mov	r6,r8
    e05c:	100f883a 	mov	r7,r2
    e060:	3191883a 	add	r8,r6,r6
    e064:	5808d07a 	srli	r4,r11,1
    e068:	4185803a 	cmpltu	r2,r8,r6
    e06c:	39d3883a 	add	r9,r7,r7
    e070:	28c6b03a 	or	r3,r5,r3
    e074:	1245883a 	add	r2,r2,r9
    e078:	1815883a 	mov	r10,r3
    e07c:	2017883a 	mov	r11,r4
    e080:	400d883a 	mov	r6,r8
    e084:	100f883a 	mov	r7,r2
    e088:	fc801726 	beq	ra,r18,e0e8 <__divdf3+0x1b8>
    e08c:	580a97fa 	slli	r5,r11,31
    e090:	5006d07a 	srli	r3,r10,1
    e094:	ffc00044 	addi	ra,ra,1
    e098:	3c7ff136 	bltu	r7,r17,e060 <__divdf3+0x130>
    e09c:	3411c83a 	sub	r8,r6,r16
    e0a0:	3205803a 	cmpltu	r2,r6,r8
    e0a4:	3c53c83a 	sub	r9,r7,r17
    e0a8:	7298b03a 	or	r12,r14,r10
    e0ac:	7adab03a 	or	r13,r15,r11
    e0b0:	4885c83a 	sub	r2,r9,r2
    e0b4:	89ffe61e 	bne	r17,r7,e050 <__divdf3+0x120>
    e0b8:	343fe936 	bltu	r6,r16,e060 <__divdf3+0x130>
    e0bc:	003fe406 	br	e050 <__divdf3+0x120>
    e0c0:	9809883a 	mov	r4,r19
    e0c4:	d9800415 	stw	r6,16(sp)
    e0c8:	000ebf80 	call	ebf8 <__pack_d>
    e0cc:	dfc01217 	ldw	ra,72(sp)
    e0d0:	dcc01117 	ldw	r19,68(sp)
    e0d4:	dc801017 	ldw	r18,64(sp)
    e0d8:	dc400f17 	ldw	r17,60(sp)
    e0dc:	dc000e17 	ldw	r16,56(sp)
    e0e0:	dec01304 	addi	sp,sp,76
    e0e4:	f800283a 	ret
    e0e8:	00803fc4 	movi	r2,255
    e0ec:	7090703a 	and	r8,r14,r2
    e0f0:	00802004 	movi	r2,128
    e0f4:	0007883a 	mov	r3,zero
    e0f8:	0013883a 	mov	r9,zero
    e0fc:	40800d26 	beq	r8,r2,e134 <__divdf3+0x204>
    e100:	dbc00815 	stw	r15,32(sp)
    e104:	db800715 	stw	r14,28(sp)
    e108:	003fab06 	br	dfb8 <__divdf3+0x88>
    e10c:	343fc92e 	bgeu	r6,r16,e034 <__divdf3+0x104>
    e110:	3185883a 	add	r2,r6,r6
    e114:	1189803a 	cmpltu	r4,r2,r6
    e118:	39c7883a 	add	r3,r7,r7
    e11c:	20c9883a 	add	r4,r4,r3
    e120:	297fffc4 	addi	r5,r5,-1
    e124:	100d883a 	mov	r6,r2
    e128:	200f883a 	mov	r7,r4
    e12c:	d9400615 	stw	r5,24(sp)
    e130:	003fc006 	br	e034 <__divdf3+0x104>
    e134:	483ff21e 	bne	r9,zero,e100 <__divdf3+0x1d0>
    e138:	01004004 	movi	r4,256
    e13c:	7104703a 	and	r2,r14,r4
    e140:	10c4b03a 	or	r2,r2,r3
    e144:	103fee1e 	bne	r2,zero,e100 <__divdf3+0x1d0>
    e148:	31c4b03a 	or	r2,r6,r7
    e14c:	103fec26 	beq	r2,zero,e100 <__divdf3+0x1d0>
    e150:	7205883a 	add	r2,r14,r8
    e154:	1391803a 	cmpltu	r8,r2,r14
    e158:	43d1883a 	add	r8,r8,r15
    e15c:	013fc004 	movi	r4,-256
    e160:	111c703a 	and	r14,r2,r4
    e164:	401f883a 	mov	r15,r8
    e168:	003fe506 	br	e100 <__divdf3+0x1d0>
    e16c:	8009883a 	mov	r4,r16
    e170:	003f9206 	br	dfbc <__divdf3+0x8c>
    e174:	9809883a 	mov	r4,r19
    e178:	d8000715 	stw	zero,28(sp)
    e17c:	d8000815 	stw	zero,32(sp)
    e180:	d8000615 	stw	zero,24(sp)
    e184:	003f8d06 	br	dfbc <__divdf3+0x8c>

0000e188 <__eqdf2>:
    e188:	deffef04 	addi	sp,sp,-68
    e18c:	dc400f15 	stw	r17,60(sp)
    e190:	dc400404 	addi	r17,sp,16
    e194:	2005883a 	mov	r2,r4
    e198:	2807883a 	mov	r3,r5
    e19c:	dc000e15 	stw	r16,56(sp)
    e1a0:	d809883a 	mov	r4,sp
    e1a4:	880b883a 	mov	r5,r17
    e1a8:	dc000904 	addi	r16,sp,36
    e1ac:	d8c00115 	stw	r3,4(sp)
    e1b0:	d8800015 	stw	r2,0(sp)
    e1b4:	d9800215 	stw	r6,8(sp)
    e1b8:	dfc01015 	stw	ra,64(sp)
    e1bc:	d9c00315 	stw	r7,12(sp)
    e1c0:	000ef0c0 	call	ef0c <__unpack_d>
    e1c4:	d9000204 	addi	r4,sp,8
    e1c8:	800b883a 	mov	r5,r16
    e1cc:	000ef0c0 	call	ef0c <__unpack_d>
    e1d0:	d8800417 	ldw	r2,16(sp)
    e1d4:	00c00044 	movi	r3,1
    e1d8:	180d883a 	mov	r6,r3
    e1dc:	1880062e 	bgeu	r3,r2,e1f8 <__eqdf2+0x70>
    e1e0:	d8800917 	ldw	r2,36(sp)
    e1e4:	8809883a 	mov	r4,r17
    e1e8:	800b883a 	mov	r5,r16
    e1ec:	1880022e 	bgeu	r3,r2,e1f8 <__eqdf2+0x70>
    e1f0:	000f0440 	call	f044 <__fpcmp_parts_d>
    e1f4:	100d883a 	mov	r6,r2
    e1f8:	3005883a 	mov	r2,r6
    e1fc:	dfc01017 	ldw	ra,64(sp)
    e200:	dc400f17 	ldw	r17,60(sp)
    e204:	dc000e17 	ldw	r16,56(sp)
    e208:	dec01104 	addi	sp,sp,68
    e20c:	f800283a 	ret

0000e210 <__nedf2>:
    e210:	deffef04 	addi	sp,sp,-68
    e214:	dc400f15 	stw	r17,60(sp)
    e218:	dc400404 	addi	r17,sp,16
    e21c:	2005883a 	mov	r2,r4
    e220:	2807883a 	mov	r3,r5
    e224:	dc000e15 	stw	r16,56(sp)
    e228:	d809883a 	mov	r4,sp
    e22c:	880b883a 	mov	r5,r17
    e230:	dc000904 	addi	r16,sp,36
    e234:	d8c00115 	stw	r3,4(sp)
    e238:	d8800015 	stw	r2,0(sp)
    e23c:	d9800215 	stw	r6,8(sp)
    e240:	dfc01015 	stw	ra,64(sp)
    e244:	d9c00315 	stw	r7,12(sp)
    e248:	000ef0c0 	call	ef0c <__unpack_d>
    e24c:	d9000204 	addi	r4,sp,8
    e250:	800b883a 	mov	r5,r16
    e254:	000ef0c0 	call	ef0c <__unpack_d>
    e258:	d8800417 	ldw	r2,16(sp)
    e25c:	00c00044 	movi	r3,1
    e260:	180d883a 	mov	r6,r3
    e264:	1880062e 	bgeu	r3,r2,e280 <__nedf2+0x70>
    e268:	d8800917 	ldw	r2,36(sp)
    e26c:	8809883a 	mov	r4,r17
    e270:	800b883a 	mov	r5,r16
    e274:	1880022e 	bgeu	r3,r2,e280 <__nedf2+0x70>
    e278:	000f0440 	call	f044 <__fpcmp_parts_d>
    e27c:	100d883a 	mov	r6,r2
    e280:	3005883a 	mov	r2,r6
    e284:	dfc01017 	ldw	ra,64(sp)
    e288:	dc400f17 	ldw	r17,60(sp)
    e28c:	dc000e17 	ldw	r16,56(sp)
    e290:	dec01104 	addi	sp,sp,68
    e294:	f800283a 	ret

0000e298 <__gtdf2>:
    e298:	deffef04 	addi	sp,sp,-68
    e29c:	dc400f15 	stw	r17,60(sp)
    e2a0:	dc400404 	addi	r17,sp,16
    e2a4:	2005883a 	mov	r2,r4
    e2a8:	2807883a 	mov	r3,r5
    e2ac:	dc000e15 	stw	r16,56(sp)
    e2b0:	d809883a 	mov	r4,sp
    e2b4:	880b883a 	mov	r5,r17
    e2b8:	dc000904 	addi	r16,sp,36
    e2bc:	d8c00115 	stw	r3,4(sp)
    e2c0:	d8800015 	stw	r2,0(sp)
    e2c4:	d9800215 	stw	r6,8(sp)
    e2c8:	dfc01015 	stw	ra,64(sp)
    e2cc:	d9c00315 	stw	r7,12(sp)
    e2d0:	000ef0c0 	call	ef0c <__unpack_d>
    e2d4:	d9000204 	addi	r4,sp,8
    e2d8:	800b883a 	mov	r5,r16
    e2dc:	000ef0c0 	call	ef0c <__unpack_d>
    e2e0:	d8800417 	ldw	r2,16(sp)
    e2e4:	00c00044 	movi	r3,1
    e2e8:	01bfffc4 	movi	r6,-1
    e2ec:	1880062e 	bgeu	r3,r2,e308 <__gtdf2+0x70>
    e2f0:	d8800917 	ldw	r2,36(sp)
    e2f4:	8809883a 	mov	r4,r17
    e2f8:	800b883a 	mov	r5,r16
    e2fc:	1880022e 	bgeu	r3,r2,e308 <__gtdf2+0x70>
    e300:	000f0440 	call	f044 <__fpcmp_parts_d>
    e304:	100d883a 	mov	r6,r2
    e308:	3005883a 	mov	r2,r6
    e30c:	dfc01017 	ldw	ra,64(sp)
    e310:	dc400f17 	ldw	r17,60(sp)
    e314:	dc000e17 	ldw	r16,56(sp)
    e318:	dec01104 	addi	sp,sp,68
    e31c:	f800283a 	ret

0000e320 <__gedf2>:
    e320:	deffef04 	addi	sp,sp,-68
    e324:	dc400f15 	stw	r17,60(sp)
    e328:	dc400404 	addi	r17,sp,16
    e32c:	2005883a 	mov	r2,r4
    e330:	2807883a 	mov	r3,r5
    e334:	dc000e15 	stw	r16,56(sp)
    e338:	d809883a 	mov	r4,sp
    e33c:	880b883a 	mov	r5,r17
    e340:	dc000904 	addi	r16,sp,36
    e344:	d8c00115 	stw	r3,4(sp)
    e348:	d8800015 	stw	r2,0(sp)
    e34c:	d9800215 	stw	r6,8(sp)
    e350:	dfc01015 	stw	ra,64(sp)
    e354:	d9c00315 	stw	r7,12(sp)
    e358:	000ef0c0 	call	ef0c <__unpack_d>
    e35c:	d9000204 	addi	r4,sp,8
    e360:	800b883a 	mov	r5,r16
    e364:	000ef0c0 	call	ef0c <__unpack_d>
    e368:	d8800417 	ldw	r2,16(sp)
    e36c:	00c00044 	movi	r3,1
    e370:	01bfffc4 	movi	r6,-1
    e374:	1880062e 	bgeu	r3,r2,e390 <__gedf2+0x70>
    e378:	d8800917 	ldw	r2,36(sp)
    e37c:	8809883a 	mov	r4,r17
    e380:	800b883a 	mov	r5,r16
    e384:	1880022e 	bgeu	r3,r2,e390 <__gedf2+0x70>
    e388:	000f0440 	call	f044 <__fpcmp_parts_d>
    e38c:	100d883a 	mov	r6,r2
    e390:	3005883a 	mov	r2,r6
    e394:	dfc01017 	ldw	ra,64(sp)
    e398:	dc400f17 	ldw	r17,60(sp)
    e39c:	dc000e17 	ldw	r16,56(sp)
    e3a0:	dec01104 	addi	sp,sp,68
    e3a4:	f800283a 	ret

0000e3a8 <__ltdf2>:
    e3a8:	deffef04 	addi	sp,sp,-68
    e3ac:	dc400f15 	stw	r17,60(sp)
    e3b0:	dc400404 	addi	r17,sp,16
    e3b4:	2005883a 	mov	r2,r4
    e3b8:	2807883a 	mov	r3,r5
    e3bc:	dc000e15 	stw	r16,56(sp)
    e3c0:	d809883a 	mov	r4,sp
    e3c4:	880b883a 	mov	r5,r17
    e3c8:	dc000904 	addi	r16,sp,36
    e3cc:	d8c00115 	stw	r3,4(sp)
    e3d0:	d8800015 	stw	r2,0(sp)
    e3d4:	d9800215 	stw	r6,8(sp)
    e3d8:	dfc01015 	stw	ra,64(sp)
    e3dc:	d9c00315 	stw	r7,12(sp)
    e3e0:	000ef0c0 	call	ef0c <__unpack_d>
    e3e4:	d9000204 	addi	r4,sp,8
    e3e8:	800b883a 	mov	r5,r16
    e3ec:	000ef0c0 	call	ef0c <__unpack_d>
    e3f0:	d8800417 	ldw	r2,16(sp)
    e3f4:	00c00044 	movi	r3,1
    e3f8:	180d883a 	mov	r6,r3
    e3fc:	1880062e 	bgeu	r3,r2,e418 <__ltdf2+0x70>
    e400:	d8800917 	ldw	r2,36(sp)
    e404:	8809883a 	mov	r4,r17
    e408:	800b883a 	mov	r5,r16
    e40c:	1880022e 	bgeu	r3,r2,e418 <__ltdf2+0x70>
    e410:	000f0440 	call	f044 <__fpcmp_parts_d>
    e414:	100d883a 	mov	r6,r2
    e418:	3005883a 	mov	r2,r6
    e41c:	dfc01017 	ldw	ra,64(sp)
    e420:	dc400f17 	ldw	r17,60(sp)
    e424:	dc000e17 	ldw	r16,56(sp)
    e428:	dec01104 	addi	sp,sp,68
    e42c:	f800283a 	ret

0000e430 <__ledf2>:
    e430:	deffef04 	addi	sp,sp,-68
    e434:	dc400f15 	stw	r17,60(sp)
    e438:	dc400404 	addi	r17,sp,16
    e43c:	2005883a 	mov	r2,r4
    e440:	2807883a 	mov	r3,r5
    e444:	dc000e15 	stw	r16,56(sp)
    e448:	d809883a 	mov	r4,sp
    e44c:	880b883a 	mov	r5,r17
    e450:	dc000904 	addi	r16,sp,36
    e454:	d8c00115 	stw	r3,4(sp)
    e458:	d8800015 	stw	r2,0(sp)
    e45c:	d9800215 	stw	r6,8(sp)
    e460:	dfc01015 	stw	ra,64(sp)
    e464:	d9c00315 	stw	r7,12(sp)
    e468:	000ef0c0 	call	ef0c <__unpack_d>
    e46c:	d9000204 	addi	r4,sp,8
    e470:	800b883a 	mov	r5,r16
    e474:	000ef0c0 	call	ef0c <__unpack_d>
    e478:	d8800417 	ldw	r2,16(sp)
    e47c:	00c00044 	movi	r3,1
    e480:	180d883a 	mov	r6,r3
    e484:	1880062e 	bgeu	r3,r2,e4a0 <__ledf2+0x70>
    e488:	d8800917 	ldw	r2,36(sp)
    e48c:	8809883a 	mov	r4,r17
    e490:	800b883a 	mov	r5,r16
    e494:	1880022e 	bgeu	r3,r2,e4a0 <__ledf2+0x70>
    e498:	000f0440 	call	f044 <__fpcmp_parts_d>
    e49c:	100d883a 	mov	r6,r2
    e4a0:	3005883a 	mov	r2,r6
    e4a4:	dfc01017 	ldw	ra,64(sp)
    e4a8:	dc400f17 	ldw	r17,60(sp)
    e4ac:	dc000e17 	ldw	r16,56(sp)
    e4b0:	dec01104 	addi	sp,sp,68
    e4b4:	f800283a 	ret

0000e4b8 <__floatsidf>:
    e4b8:	2006d7fa 	srli	r3,r4,31
    e4bc:	defff604 	addi	sp,sp,-40
    e4c0:	008000c4 	movi	r2,3
    e4c4:	dfc00915 	stw	ra,36(sp)
    e4c8:	dcc00815 	stw	r19,32(sp)
    e4cc:	dc800715 	stw	r18,28(sp)
    e4d0:	dc400615 	stw	r17,24(sp)
    e4d4:	dc000515 	stw	r16,20(sp)
    e4d8:	d8800015 	stw	r2,0(sp)
    e4dc:	d8c00115 	stw	r3,4(sp)
    e4e0:	20000f1e 	bne	r4,zero,e520 <__floatsidf+0x68>
    e4e4:	00800084 	movi	r2,2
    e4e8:	d8800015 	stw	r2,0(sp)
    e4ec:	d809883a 	mov	r4,sp
    e4f0:	000ebf80 	call	ebf8 <__pack_d>
    e4f4:	1009883a 	mov	r4,r2
    e4f8:	180b883a 	mov	r5,r3
    e4fc:	2005883a 	mov	r2,r4
    e500:	2807883a 	mov	r3,r5
    e504:	dfc00917 	ldw	ra,36(sp)
    e508:	dcc00817 	ldw	r19,32(sp)
    e50c:	dc800717 	ldw	r18,28(sp)
    e510:	dc400617 	ldw	r17,24(sp)
    e514:	dc000517 	ldw	r16,20(sp)
    e518:	dec00a04 	addi	sp,sp,40
    e51c:	f800283a 	ret
    e520:	00800f04 	movi	r2,60
    e524:	1807003a 	cmpeq	r3,r3,zero
    e528:	d8800215 	stw	r2,8(sp)
    e52c:	18001126 	beq	r3,zero,e574 <__floatsidf+0xbc>
    e530:	0027883a 	mov	r19,zero
    e534:	2025883a 	mov	r18,r4
    e538:	d9000315 	stw	r4,12(sp)
    e53c:	dcc00415 	stw	r19,16(sp)
    e540:	000e9dc0 	call	e9dc <__clzsi2>
    e544:	11000744 	addi	r4,r2,29
    e548:	013fe80e 	bge	zero,r4,e4ec <__floatsidf+0x34>
    e54c:	10bfff44 	addi	r2,r2,-3
    e550:	10000c16 	blt	r2,zero,e584 <__floatsidf+0xcc>
    e554:	90a2983a 	sll	r17,r18,r2
    e558:	0021883a 	mov	r16,zero
    e55c:	d8800217 	ldw	r2,8(sp)
    e560:	dc400415 	stw	r17,16(sp)
    e564:	dc000315 	stw	r16,12(sp)
    e568:	1105c83a 	sub	r2,r2,r4
    e56c:	d8800215 	stw	r2,8(sp)
    e570:	003fde06 	br	e4ec <__floatsidf+0x34>
    e574:	00a00034 	movhi	r2,32768
    e578:	20800a26 	beq	r4,r2,e5a4 <__floatsidf+0xec>
    e57c:	0109c83a 	sub	r4,zero,r4
    e580:	003feb06 	br	e530 <__floatsidf+0x78>
    e584:	9006d07a 	srli	r3,r18,1
    e588:	008007c4 	movi	r2,31
    e58c:	1105c83a 	sub	r2,r2,r4
    e590:	1886d83a 	srl	r3,r3,r2
    e594:	9922983a 	sll	r17,r19,r4
    e598:	9120983a 	sll	r16,r18,r4
    e59c:	1c62b03a 	or	r17,r3,r17
    e5a0:	003fee06 	br	e55c <__floatsidf+0xa4>
    e5a4:	0009883a 	mov	r4,zero
    e5a8:	01707834 	movhi	r5,49632
    e5ac:	003fd306 	br	e4fc <__floatsidf+0x44>

0000e5b0 <__fixdfsi>:
    e5b0:	defff804 	addi	sp,sp,-32
    e5b4:	2005883a 	mov	r2,r4
    e5b8:	2807883a 	mov	r3,r5
    e5bc:	d809883a 	mov	r4,sp
    e5c0:	d9400204 	addi	r5,sp,8
    e5c4:	d8c00115 	stw	r3,4(sp)
    e5c8:	d8800015 	stw	r2,0(sp)
    e5cc:	dfc00715 	stw	ra,28(sp)
    e5d0:	000ef0c0 	call	ef0c <__unpack_d>
    e5d4:	d8c00217 	ldw	r3,8(sp)
    e5d8:	00800084 	movi	r2,2
    e5dc:	1880051e 	bne	r3,r2,e5f4 <__fixdfsi+0x44>
    e5e0:	0007883a 	mov	r3,zero
    e5e4:	1805883a 	mov	r2,r3
    e5e8:	dfc00717 	ldw	ra,28(sp)
    e5ec:	dec00804 	addi	sp,sp,32
    e5f0:	f800283a 	ret
    e5f4:	00800044 	movi	r2,1
    e5f8:	10fff92e 	bgeu	r2,r3,e5e0 <__fixdfsi+0x30>
    e5fc:	00800104 	movi	r2,4
    e600:	18800426 	beq	r3,r2,e614 <__fixdfsi+0x64>
    e604:	d8c00417 	ldw	r3,16(sp)
    e608:	183ff516 	blt	r3,zero,e5e0 <__fixdfsi+0x30>
    e60c:	00800784 	movi	r2,30
    e610:	10c0080e 	bge	r2,r3,e634 <__fixdfsi+0x84>
    e614:	d8800317 	ldw	r2,12(sp)
    e618:	1000121e 	bne	r2,zero,e664 <__fixdfsi+0xb4>
    e61c:	00e00034 	movhi	r3,32768
    e620:	18ffffc4 	addi	r3,r3,-1
    e624:	1805883a 	mov	r2,r3
    e628:	dfc00717 	ldw	ra,28(sp)
    e62c:	dec00804 	addi	sp,sp,32
    e630:	f800283a 	ret
    e634:	00800f04 	movi	r2,60
    e638:	10d1c83a 	sub	r8,r2,r3
    e63c:	40bff804 	addi	r2,r8,-32
    e640:	d9800517 	ldw	r6,20(sp)
    e644:	d9c00617 	ldw	r7,24(sp)
    e648:	10000816 	blt	r2,zero,e66c <__fixdfsi+0xbc>
    e64c:	3888d83a 	srl	r4,r7,r2
    e650:	d8800317 	ldw	r2,12(sp)
    e654:	2007883a 	mov	r3,r4
    e658:	103fe226 	beq	r2,zero,e5e4 <__fixdfsi+0x34>
    e65c:	0107c83a 	sub	r3,zero,r4
    e660:	003fe006 	br	e5e4 <__fixdfsi+0x34>
    e664:	00e00034 	movhi	r3,32768
    e668:	003fde06 	br	e5e4 <__fixdfsi+0x34>
    e66c:	39c7883a 	add	r3,r7,r7
    e670:	008007c4 	movi	r2,31
    e674:	1205c83a 	sub	r2,r2,r8
    e678:	1886983a 	sll	r3,r3,r2
    e67c:	3208d83a 	srl	r4,r6,r8
    e680:	1908b03a 	or	r4,r3,r4
    e684:	003ff206 	br	e650 <__fixdfsi+0xa0>

0000e688 <__truncdfsf2>:
    e688:	defff804 	addi	sp,sp,-32
    e68c:	2005883a 	mov	r2,r4
    e690:	2807883a 	mov	r3,r5
    e694:	d809883a 	mov	r4,sp
    e698:	d9400204 	addi	r5,sp,8
    e69c:	d8c00115 	stw	r3,4(sp)
    e6a0:	d8800015 	stw	r2,0(sp)
    e6a4:	dfc00715 	stw	ra,28(sp)
    e6a8:	000ef0c0 	call	ef0c <__unpack_d>
    e6ac:	d9c00517 	ldw	r7,20(sp)
    e6b0:	da000617 	ldw	r8,24(sp)
    e6b4:	02d00034 	movhi	r11,16384
    e6b8:	5affffc4 	addi	r11,r11,-1
    e6bc:	3812d7ba 	srli	r9,r7,30
    e6c0:	401a90ba 	slli	r13,r8,2
    e6c4:	3ac4703a 	and	r2,r7,r11
    e6c8:	0007883a 	mov	r3,zero
    e6cc:	6a52b03a 	or	r9,r13,r9
    e6d0:	10c4b03a 	or	r2,r2,r3
    e6d4:	d9000217 	ldw	r4,8(sp)
    e6d8:	d9400317 	ldw	r5,12(sp)
    e6dc:	d9800417 	ldw	r6,16(sp)
    e6e0:	480f883a 	mov	r7,r9
    e6e4:	10000126 	beq	r2,zero,e6ec <__truncdfsf2+0x64>
    e6e8:	49c00054 	ori	r7,r9,1
    e6ec:	000ebcc0 	call	ebcc <__make_fp>
    e6f0:	dfc00717 	ldw	ra,28(sp)
    e6f4:	dec00804 	addi	sp,sp,32
    e6f8:	f800283a 	ret

0000e6fc <__floatunsidf>:
    e6fc:	defff204 	addi	sp,sp,-56
    e700:	dfc00d15 	stw	ra,52(sp)
    e704:	ddc00c15 	stw	r23,48(sp)
    e708:	dd800b15 	stw	r22,44(sp)
    e70c:	dd400a15 	stw	r21,40(sp)
    e710:	dd000915 	stw	r20,36(sp)
    e714:	dcc00815 	stw	r19,32(sp)
    e718:	dc800715 	stw	r18,28(sp)
    e71c:	dc400615 	stw	r17,24(sp)
    e720:	dc000515 	stw	r16,20(sp)
    e724:	d8000115 	stw	zero,4(sp)
    e728:	20000f1e 	bne	r4,zero,e768 <__floatunsidf+0x6c>
    e72c:	00800084 	movi	r2,2
    e730:	d8800015 	stw	r2,0(sp)
    e734:	d809883a 	mov	r4,sp
    e738:	000ebf80 	call	ebf8 <__pack_d>
    e73c:	dfc00d17 	ldw	ra,52(sp)
    e740:	ddc00c17 	ldw	r23,48(sp)
    e744:	dd800b17 	ldw	r22,44(sp)
    e748:	dd400a17 	ldw	r21,40(sp)
    e74c:	dd000917 	ldw	r20,36(sp)
    e750:	dcc00817 	ldw	r19,32(sp)
    e754:	dc800717 	ldw	r18,28(sp)
    e758:	dc400617 	ldw	r17,24(sp)
    e75c:	dc000517 	ldw	r16,20(sp)
    e760:	dec00e04 	addi	sp,sp,56
    e764:	f800283a 	ret
    e768:	008000c4 	movi	r2,3
    e76c:	00c00f04 	movi	r3,60
    e770:	002f883a 	mov	r23,zero
    e774:	202d883a 	mov	r22,r4
    e778:	d8800015 	stw	r2,0(sp)
    e77c:	d8c00215 	stw	r3,8(sp)
    e780:	d9000315 	stw	r4,12(sp)
    e784:	ddc00415 	stw	r23,16(sp)
    e788:	000e9dc0 	call	e9dc <__clzsi2>
    e78c:	12400744 	addi	r9,r2,29
    e790:	48000b16 	blt	r9,zero,e7c0 <__floatunsidf+0xc4>
    e794:	483fe726 	beq	r9,zero,e734 <__floatunsidf+0x38>
    e798:	10bfff44 	addi	r2,r2,-3
    e79c:	10002e16 	blt	r2,zero,e858 <__floatunsidf+0x15c>
    e7a0:	b0a2983a 	sll	r17,r22,r2
    e7a4:	0021883a 	mov	r16,zero
    e7a8:	d8800217 	ldw	r2,8(sp)
    e7ac:	dc400415 	stw	r17,16(sp)
    e7b0:	dc000315 	stw	r16,12(sp)
    e7b4:	1245c83a 	sub	r2,r2,r9
    e7b8:	d8800215 	stw	r2,8(sp)
    e7bc:	003fdd06 	br	e734 <__floatunsidf+0x38>
    e7c0:	0255c83a 	sub	r10,zero,r9
    e7c4:	51bff804 	addi	r6,r10,-32
    e7c8:	30001b16 	blt	r6,zero,e838 <__floatunsidf+0x13c>
    e7cc:	b9a8d83a 	srl	r20,r23,r6
    e7d0:	002b883a 	mov	r21,zero
    e7d4:	000f883a 	mov	r7,zero
    e7d8:	01000044 	movi	r4,1
    e7dc:	0011883a 	mov	r8,zero
    e7e0:	30002516 	blt	r6,zero,e878 <__floatunsidf+0x17c>
    e7e4:	21a6983a 	sll	r19,r4,r6
    e7e8:	0025883a 	mov	r18,zero
    e7ec:	00bfffc4 	movi	r2,-1
    e7f0:	9089883a 	add	r4,r18,r2
    e7f4:	988b883a 	add	r5,r19,r2
    e7f8:	248d803a 	cmpltu	r6,r4,r18
    e7fc:	314b883a 	add	r5,r6,r5
    e800:	b104703a 	and	r2,r22,r4
    e804:	b946703a 	and	r3,r23,r5
    e808:	10c4b03a 	or	r2,r2,r3
    e80c:	10000226 	beq	r2,zero,e818 <__floatunsidf+0x11c>
    e810:	01c00044 	movi	r7,1
    e814:	0011883a 	mov	r8,zero
    e818:	d9000217 	ldw	r4,8(sp)
    e81c:	a1c4b03a 	or	r2,r20,r7
    e820:	aa06b03a 	or	r3,r21,r8
    e824:	2249c83a 	sub	r4,r4,r9
    e828:	d8c00415 	stw	r3,16(sp)
    e82c:	d9000215 	stw	r4,8(sp)
    e830:	d8800315 	stw	r2,12(sp)
    e834:	003fbf06 	br	e734 <__floatunsidf+0x38>
    e838:	bdc7883a 	add	r3,r23,r23
    e83c:	008007c4 	movi	r2,31
    e840:	1285c83a 	sub	r2,r2,r10
    e844:	1886983a 	sll	r3,r3,r2
    e848:	b2a8d83a 	srl	r20,r22,r10
    e84c:	baaad83a 	srl	r21,r23,r10
    e850:	1d28b03a 	or	r20,r3,r20
    e854:	003fdf06 	br	e7d4 <__floatunsidf+0xd8>
    e858:	b006d07a 	srli	r3,r22,1
    e85c:	008007c4 	movi	r2,31
    e860:	1245c83a 	sub	r2,r2,r9
    e864:	1886d83a 	srl	r3,r3,r2
    e868:	ba62983a 	sll	r17,r23,r9
    e86c:	b260983a 	sll	r16,r22,r9
    e870:	1c62b03a 	or	r17,r3,r17
    e874:	003fcc06 	br	e7a8 <__floatunsidf+0xac>
    e878:	2006d07a 	srli	r3,r4,1
    e87c:	008007c4 	movi	r2,31
    e880:	1285c83a 	sub	r2,r2,r10
    e884:	18a6d83a 	srl	r19,r3,r2
    e888:	22a4983a 	sll	r18,r4,r10
    e88c:	003fd706 	br	e7ec <__floatunsidf+0xf0>

0000e890 <udivmodsi4>:
    e890:	29001b2e 	bgeu	r5,r4,e900 <udivmodsi4+0x70>
    e894:	28001a16 	blt	r5,zero,e900 <udivmodsi4+0x70>
    e898:	00800044 	movi	r2,1
    e89c:	0007883a 	mov	r3,zero
    e8a0:	01c007c4 	movi	r7,31
    e8a4:	00000306 	br	e8b4 <udivmodsi4+0x24>
    e8a8:	19c01326 	beq	r3,r7,e8f8 <udivmodsi4+0x68>
    e8ac:	18c00044 	addi	r3,r3,1
    e8b0:	28000416 	blt	r5,zero,e8c4 <udivmodsi4+0x34>
    e8b4:	294b883a 	add	r5,r5,r5
    e8b8:	1085883a 	add	r2,r2,r2
    e8bc:	293ffa36 	bltu	r5,r4,e8a8 <udivmodsi4+0x18>
    e8c0:	10000d26 	beq	r2,zero,e8f8 <udivmodsi4+0x68>
    e8c4:	0007883a 	mov	r3,zero
    e8c8:	21400236 	bltu	r4,r5,e8d4 <udivmodsi4+0x44>
    e8cc:	2149c83a 	sub	r4,r4,r5
    e8d0:	1886b03a 	or	r3,r3,r2
    e8d4:	1004d07a 	srli	r2,r2,1
    e8d8:	280ad07a 	srli	r5,r5,1
    e8dc:	103ffa1e 	bne	r2,zero,e8c8 <udivmodsi4+0x38>
    e8e0:	30000226 	beq	r6,zero,e8ec <udivmodsi4+0x5c>
    e8e4:	2005883a 	mov	r2,r4
    e8e8:	f800283a 	ret
    e8ec:	1809883a 	mov	r4,r3
    e8f0:	2005883a 	mov	r2,r4
    e8f4:	f800283a 	ret
    e8f8:	0007883a 	mov	r3,zero
    e8fc:	003ff806 	br	e8e0 <udivmodsi4+0x50>
    e900:	00800044 	movi	r2,1
    e904:	0007883a 	mov	r3,zero
    e908:	003fef06 	br	e8c8 <udivmodsi4+0x38>

0000e90c <__divsi3>:
    e90c:	defffe04 	addi	sp,sp,-8
    e910:	dc000015 	stw	r16,0(sp)
    e914:	dfc00115 	stw	ra,4(sp)
    e918:	0021883a 	mov	r16,zero
    e91c:	20000c16 	blt	r4,zero,e950 <__divsi3+0x44>
    e920:	000d883a 	mov	r6,zero
    e924:	28000e16 	blt	r5,zero,e960 <__divsi3+0x54>
    e928:	000e8900 	call	e890 <udivmodsi4>
    e92c:	1007883a 	mov	r3,r2
    e930:	8005003a 	cmpeq	r2,r16,zero
    e934:	1000011e 	bne	r2,zero,e93c <__divsi3+0x30>
    e938:	00c7c83a 	sub	r3,zero,r3
    e93c:	1805883a 	mov	r2,r3
    e940:	dfc00117 	ldw	ra,4(sp)
    e944:	dc000017 	ldw	r16,0(sp)
    e948:	dec00204 	addi	sp,sp,8
    e94c:	f800283a 	ret
    e950:	0109c83a 	sub	r4,zero,r4
    e954:	04000044 	movi	r16,1
    e958:	000d883a 	mov	r6,zero
    e95c:	283ff20e 	bge	r5,zero,e928 <__divsi3+0x1c>
    e960:	014bc83a 	sub	r5,zero,r5
    e964:	8021003a 	cmpeq	r16,r16,zero
    e968:	003fef06 	br	e928 <__divsi3+0x1c>

0000e96c <__modsi3>:
    e96c:	deffff04 	addi	sp,sp,-4
    e970:	dfc00015 	stw	ra,0(sp)
    e974:	01800044 	movi	r6,1
    e978:	2807883a 	mov	r3,r5
    e97c:	20000416 	blt	r4,zero,e990 <__modsi3+0x24>
    e980:	28000c16 	blt	r5,zero,e9b4 <__modsi3+0x48>
    e984:	dfc00017 	ldw	ra,0(sp)
    e988:	dec00104 	addi	sp,sp,4
    e98c:	000e8901 	jmpi	e890 <udivmodsi4>
    e990:	0109c83a 	sub	r4,zero,r4
    e994:	28000b16 	blt	r5,zero,e9c4 <__modsi3+0x58>
    e998:	180b883a 	mov	r5,r3
    e99c:	01800044 	movi	r6,1
    e9a0:	000e8900 	call	e890 <udivmodsi4>
    e9a4:	0085c83a 	sub	r2,zero,r2
    e9a8:	dfc00017 	ldw	ra,0(sp)
    e9ac:	dec00104 	addi	sp,sp,4
    e9b0:	f800283a 	ret
    e9b4:	014bc83a 	sub	r5,zero,r5
    e9b8:	dfc00017 	ldw	ra,0(sp)
    e9bc:	dec00104 	addi	sp,sp,4
    e9c0:	000e8901 	jmpi	e890 <udivmodsi4>
    e9c4:	0147c83a 	sub	r3,zero,r5
    e9c8:	003ff306 	br	e998 <__modsi3+0x2c>

0000e9cc <__udivsi3>:
    e9cc:	000d883a 	mov	r6,zero
    e9d0:	000e8901 	jmpi	e890 <udivmodsi4>

0000e9d4 <__umodsi3>:
    e9d4:	01800044 	movi	r6,1
    e9d8:	000e8901 	jmpi	e890 <udivmodsi4>

0000e9dc <__clzsi2>:
    e9dc:	00bfffd4 	movui	r2,65535
    e9e0:	11000e36 	bltu	r2,r4,ea1c <__clzsi2+0x40>
    e9e4:	00803fc4 	movi	r2,255
    e9e8:	01400204 	movi	r5,8
    e9ec:	0007883a 	mov	r3,zero
    e9f0:	11001036 	bltu	r2,r4,ea34 <__clzsi2+0x58>
    e9f4:	000b883a 	mov	r5,zero
    e9f8:	20c6d83a 	srl	r3,r4,r3
    e9fc:	00800074 	movhi	r2,1
    ea00:	10888904 	addi	r2,r2,8740
    ea04:	1887883a 	add	r3,r3,r2
    ea08:	18800003 	ldbu	r2,0(r3)
    ea0c:	00c00804 	movi	r3,32
    ea10:	2885883a 	add	r2,r5,r2
    ea14:	1885c83a 	sub	r2,r3,r2
    ea18:	f800283a 	ret
    ea1c:	01400404 	movi	r5,16
    ea20:	00804034 	movhi	r2,256
    ea24:	10bfffc4 	addi	r2,r2,-1
    ea28:	2807883a 	mov	r3,r5
    ea2c:	113ff22e 	bgeu	r2,r4,e9f8 <__clzsi2+0x1c>
    ea30:	01400604 	movi	r5,24
    ea34:	2807883a 	mov	r3,r5
    ea38:	20c6d83a 	srl	r3,r4,r3
    ea3c:	00800074 	movhi	r2,1
    ea40:	10888904 	addi	r2,r2,8740
    ea44:	1887883a 	add	r3,r3,r2
    ea48:	18800003 	ldbu	r2,0(r3)
    ea4c:	00c00804 	movi	r3,32
    ea50:	2885883a 	add	r2,r5,r2
    ea54:	1885c83a 	sub	r2,r3,r2
    ea58:	f800283a 	ret

0000ea5c <__unpack_f>:
    ea5c:	21800017 	ldw	r6,0(r4)
    ea60:	00c02034 	movhi	r3,128
    ea64:	18ffffc4 	addi	r3,r3,-1
    ea68:	3004d5fa 	srli	r2,r6,23
    ea6c:	3008d7fa 	srli	r4,r6,31
    ea70:	30ce703a 	and	r7,r6,r3
    ea74:	10c03fcc 	andi	r3,r2,255
    ea78:	29000115 	stw	r4,4(r5)
    ea7c:	1800131e 	bne	r3,zero,eacc <__unpack_f+0x70>
    ea80:	38000f26 	beq	r7,zero,eac0 <__unpack_f+0x64>
    ea84:	380691fa 	slli	r3,r7,7
    ea88:	01bfe084 	movi	r6,-126
    ea8c:	008000c4 	movi	r2,3
    ea90:	01100034 	movhi	r4,16384
    ea94:	213fffc4 	addi	r4,r4,-1
    ea98:	28800015 	stw	r2,0(r5)
    ea9c:	29800215 	stw	r6,8(r5)
    eaa0:	20c00536 	bltu	r4,r3,eab8 <__unpack_f+0x5c>
    eaa4:	3005883a 	mov	r2,r6
    eaa8:	18c7883a 	add	r3,r3,r3
    eaac:	10bfffc4 	addi	r2,r2,-1
    eab0:	20fffd2e 	bgeu	r4,r3,eaa8 <__unpack_f+0x4c>
    eab4:	28800215 	stw	r2,8(r5)
    eab8:	28c00315 	stw	r3,12(r5)
    eabc:	f800283a 	ret
    eac0:	00800084 	movi	r2,2
    eac4:	28800015 	stw	r2,0(r5)
    eac8:	f800283a 	ret
    eacc:	00803fc4 	movi	r2,255
    ead0:	18800826 	beq	r3,r2,eaf4 <__unpack_f+0x98>
    ead4:	380491fa 	slli	r2,r7,7
    ead8:	18ffe044 	addi	r3,r3,-127
    eadc:	28c00215 	stw	r3,8(r5)
    eae0:	10900034 	orhi	r2,r2,16384
    eae4:	28800315 	stw	r2,12(r5)
    eae8:	008000c4 	movi	r2,3
    eaec:	28800015 	stw	r2,0(r5)
    eaf0:	f800283a 	ret
    eaf4:	3800031e 	bne	r7,zero,eb04 <__unpack_f+0xa8>
    eaf8:	00800104 	movi	r2,4
    eafc:	28800015 	stw	r2,0(r5)
    eb00:	f800283a 	ret
    eb04:	3080042c 	andhi	r2,r6,16
    eb08:	10000426 	beq	r2,zero,eb1c <__unpack_f+0xc0>
    eb0c:	00800044 	movi	r2,1
    eb10:	28800015 	stw	r2,0(r5)
    eb14:	29c00315 	stw	r7,12(r5)
    eb18:	f800283a 	ret
    eb1c:	28000015 	stw	zero,0(r5)
    eb20:	003ffc06 	br	eb14 <__unpack_f+0xb8>

0000eb24 <__fpcmp_parts_f>:
    eb24:	21800017 	ldw	r6,0(r4)
    eb28:	00c00044 	movi	r3,1
    eb2c:	19800a2e 	bgeu	r3,r6,eb58 <__fpcmp_parts_f+0x34>
    eb30:	28800017 	ldw	r2,0(r5)
    eb34:	1880082e 	bgeu	r3,r2,eb58 <__fpcmp_parts_f+0x34>
    eb38:	00c00104 	movi	r3,4
    eb3c:	30c01e26 	beq	r6,r3,ebb8 <__fpcmp_parts_f+0x94>
    eb40:	10c01a26 	beq	r2,r3,ebac <__fpcmp_parts_f+0x88>
    eb44:	00c00084 	movi	r3,2
    eb48:	30c00526 	beq	r6,r3,eb60 <__fpcmp_parts_f+0x3c>
    eb4c:	10c0071e 	bne	r2,r3,eb6c <__fpcmp_parts_f+0x48>
    eb50:	20800117 	ldw	r2,4(r4)
    eb54:	1000091e 	bne	r2,zero,eb7c <__fpcmp_parts_f+0x58>
    eb58:	00800044 	movi	r2,1
    eb5c:	f800283a 	ret
    eb60:	10c0121e 	bne	r2,r3,ebac <__fpcmp_parts_f+0x88>
    eb64:	0005883a 	mov	r2,zero
    eb68:	f800283a 	ret
    eb6c:	20c00117 	ldw	r3,4(r4)
    eb70:	28800117 	ldw	r2,4(r5)
    eb74:	18800326 	beq	r3,r2,eb84 <__fpcmp_parts_f+0x60>
    eb78:	183ff726 	beq	r3,zero,eb58 <__fpcmp_parts_f+0x34>
    eb7c:	00bfffc4 	movi	r2,-1
    eb80:	f800283a 	ret
    eb84:	21800217 	ldw	r6,8(r4)
    eb88:	28800217 	ldw	r2,8(r5)
    eb8c:	11bffa16 	blt	r2,r6,eb78 <__fpcmp_parts_f+0x54>
    eb90:	30800416 	blt	r6,r2,eba4 <__fpcmp_parts_f+0x80>
    eb94:	21000317 	ldw	r4,12(r4)
    eb98:	29400317 	ldw	r5,12(r5)
    eb9c:	293ff636 	bltu	r5,r4,eb78 <__fpcmp_parts_f+0x54>
    eba0:	217ff02e 	bgeu	r4,r5,eb64 <__fpcmp_parts_f+0x40>
    eba4:	183fec1e 	bne	r3,zero,eb58 <__fpcmp_parts_f+0x34>
    eba8:	003ff406 	br	eb7c <__fpcmp_parts_f+0x58>
    ebac:	28800117 	ldw	r2,4(r5)
    ebb0:	103fe91e 	bne	r2,zero,eb58 <__fpcmp_parts_f+0x34>
    ebb4:	003ff106 	br	eb7c <__fpcmp_parts_f+0x58>
    ebb8:	11bfe51e 	bne	r2,r6,eb50 <__fpcmp_parts_f+0x2c>
    ebbc:	28c00117 	ldw	r3,4(r5)
    ebc0:	20800117 	ldw	r2,4(r4)
    ebc4:	1885c83a 	sub	r2,r3,r2
    ebc8:	f800283a 	ret

0000ebcc <__make_fp>:
    ebcc:	defffb04 	addi	sp,sp,-20
    ebd0:	d9000015 	stw	r4,0(sp)
    ebd4:	d809883a 	mov	r4,sp
    ebd8:	dfc00415 	stw	ra,16(sp)
    ebdc:	d9400115 	stw	r5,4(sp)
    ebe0:	d9800215 	stw	r6,8(sp)
    ebe4:	d9c00315 	stw	r7,12(sp)
    ebe8:	000f10c0 	call	f10c <__pack_f>
    ebec:	dfc00417 	ldw	ra,16(sp)
    ebf0:	dec00504 	addi	sp,sp,20
    ebf4:	f800283a 	ret

0000ebf8 <__pack_d>:
    ebf8:	20c00017 	ldw	r3,0(r4)
    ebfc:	defffd04 	addi	sp,sp,-12
    ec00:	dc000015 	stw	r16,0(sp)
    ec04:	dc800215 	stw	r18,8(sp)
    ec08:	dc400115 	stw	r17,4(sp)
    ec0c:	00800044 	movi	r2,1
    ec10:	22000317 	ldw	r8,12(r4)
    ec14:	001f883a 	mov	r15,zero
    ec18:	22400417 	ldw	r9,16(r4)
    ec1c:	24000117 	ldw	r16,4(r4)
    ec20:	10c0552e 	bgeu	r2,r3,ed78 <__pack_d+0x180>
    ec24:	00800104 	movi	r2,4
    ec28:	18804f26 	beq	r3,r2,ed68 <__pack_d+0x170>
    ec2c:	00800084 	movi	r2,2
    ec30:	18800226 	beq	r3,r2,ec3c <__pack_d+0x44>
    ec34:	4244b03a 	or	r2,r8,r9
    ec38:	10001a1e 	bne	r2,zero,eca4 <__pack_d+0xac>
    ec3c:	000d883a 	mov	r6,zero
    ec40:	000f883a 	mov	r7,zero
    ec44:	0011883a 	mov	r8,zero
    ec48:	00800434 	movhi	r2,16
    ec4c:	10bfffc4 	addi	r2,r2,-1
    ec50:	301d883a 	mov	r14,r6
    ec54:	3884703a 	and	r2,r7,r2
    ec58:	400a953a 	slli	r5,r8,20
    ec5c:	79bffc2c 	andhi	r6,r15,65520
    ec60:	308cb03a 	or	r6,r6,r2
    ec64:	00e00434 	movhi	r3,32784
    ec68:	18ffffc4 	addi	r3,r3,-1
    ec6c:	800497fa 	slli	r2,r16,31
    ec70:	30c6703a 	and	r3,r6,r3
    ec74:	1946b03a 	or	r3,r3,r5
    ec78:	01600034 	movhi	r5,32768
    ec7c:	297fffc4 	addi	r5,r5,-1
    ec80:	194a703a 	and	r5,r3,r5
    ec84:	288ab03a 	or	r5,r5,r2
    ec88:	2807883a 	mov	r3,r5
    ec8c:	7005883a 	mov	r2,r14
    ec90:	dc800217 	ldw	r18,8(sp)
    ec94:	dc400117 	ldw	r17,4(sp)
    ec98:	dc000017 	ldw	r16,0(sp)
    ec9c:	dec00304 	addi	sp,sp,12
    eca0:	f800283a 	ret
    eca4:	21000217 	ldw	r4,8(r4)
    eca8:	00bf0084 	movi	r2,-1022
    ecac:	20803f16 	blt	r4,r2,edac <__pack_d+0x1b4>
    ecb0:	0080ffc4 	movi	r2,1023
    ecb4:	11002c16 	blt	r2,r4,ed68 <__pack_d+0x170>
    ecb8:	00803fc4 	movi	r2,255
    ecbc:	408c703a 	and	r6,r8,r2
    ecc0:	00802004 	movi	r2,128
    ecc4:	0007883a 	mov	r3,zero
    ecc8:	000f883a 	mov	r7,zero
    eccc:	2280ffc4 	addi	r10,r4,1023
    ecd0:	30801e26 	beq	r6,r2,ed4c <__pack_d+0x154>
    ecd4:	00801fc4 	movi	r2,127
    ecd8:	4089883a 	add	r4,r8,r2
    ecdc:	220d803a 	cmpltu	r6,r4,r8
    ece0:	324d883a 	add	r6,r6,r9
    ece4:	2011883a 	mov	r8,r4
    ece8:	3013883a 	mov	r9,r6
    ecec:	00880034 	movhi	r2,8192
    ecf0:	10bfffc4 	addi	r2,r2,-1
    ecf4:	12400d36 	bltu	r2,r9,ed2c <__pack_d+0x134>
    ecf8:	4804963a 	slli	r2,r9,24
    ecfc:	400cd23a 	srli	r6,r8,8
    ed00:	480ed23a 	srli	r7,r9,8
    ed04:	013fffc4 	movi	r4,-1
    ed08:	118cb03a 	or	r6,r2,r6
    ed0c:	01400434 	movhi	r5,16
    ed10:	297fffc4 	addi	r5,r5,-1
    ed14:	3104703a 	and	r2,r6,r4
    ed18:	3946703a 	and	r3,r7,r5
    ed1c:	5201ffcc 	andi	r8,r10,2047
    ed20:	100d883a 	mov	r6,r2
    ed24:	180f883a 	mov	r7,r3
    ed28:	003fc706 	br	ec48 <__pack_d+0x50>
    ed2c:	480897fa 	slli	r4,r9,31
    ed30:	4004d07a 	srli	r2,r8,1
    ed34:	4806d07a 	srli	r3,r9,1
    ed38:	52800044 	addi	r10,r10,1
    ed3c:	2084b03a 	or	r2,r4,r2
    ed40:	1011883a 	mov	r8,r2
    ed44:	1813883a 	mov	r9,r3
    ed48:	003feb06 	br	ecf8 <__pack_d+0x100>
    ed4c:	383fe11e 	bne	r7,zero,ecd4 <__pack_d+0xdc>
    ed50:	01004004 	movi	r4,256
    ed54:	4104703a 	and	r2,r8,r4
    ed58:	10c4b03a 	or	r2,r2,r3
    ed5c:	103fe326 	beq	r2,zero,ecec <__pack_d+0xf4>
    ed60:	3005883a 	mov	r2,r6
    ed64:	003fdc06 	br	ecd8 <__pack_d+0xe0>
    ed68:	000d883a 	mov	r6,zero
    ed6c:	000f883a 	mov	r7,zero
    ed70:	0201ffc4 	movi	r8,2047
    ed74:	003fb406 	br	ec48 <__pack_d+0x50>
    ed78:	0005883a 	mov	r2,zero
    ed7c:	00c00234 	movhi	r3,8
    ed80:	408cb03a 	or	r6,r8,r2
    ed84:	48ceb03a 	or	r7,r9,r3
    ed88:	013fffc4 	movi	r4,-1
    ed8c:	01400434 	movhi	r5,16
    ed90:	297fffc4 	addi	r5,r5,-1
    ed94:	3104703a 	and	r2,r6,r4
    ed98:	3946703a 	and	r3,r7,r5
    ed9c:	100d883a 	mov	r6,r2
    eda0:	180f883a 	mov	r7,r3
    eda4:	0201ffc4 	movi	r8,2047
    eda8:	003fa706 	br	ec48 <__pack_d+0x50>
    edac:	1109c83a 	sub	r4,r2,r4
    edb0:	00800e04 	movi	r2,56
    edb4:	11004316 	blt	r2,r4,eec4 <__pack_d+0x2cc>
    edb8:	21fff804 	addi	r7,r4,-32
    edbc:	38004516 	blt	r7,zero,eed4 <__pack_d+0x2dc>
    edc0:	49d8d83a 	srl	r12,r9,r7
    edc4:	001b883a 	mov	r13,zero
    edc8:	0023883a 	mov	r17,zero
    edcc:	01400044 	movi	r5,1
    edd0:	0025883a 	mov	r18,zero
    edd4:	38004716 	blt	r7,zero,eef4 <__pack_d+0x2fc>
    edd8:	29d6983a 	sll	r11,r5,r7
    eddc:	0015883a 	mov	r10,zero
    ede0:	00bfffc4 	movi	r2,-1
    ede4:	5089883a 	add	r4,r10,r2
    ede8:	588b883a 	add	r5,r11,r2
    edec:	228d803a 	cmpltu	r6,r4,r10
    edf0:	314b883a 	add	r5,r6,r5
    edf4:	4104703a 	and	r2,r8,r4
    edf8:	4946703a 	and	r3,r9,r5
    edfc:	10c4b03a 	or	r2,r2,r3
    ee00:	10000226 	beq	r2,zero,ee0c <__pack_d+0x214>
    ee04:	04400044 	movi	r17,1
    ee08:	0025883a 	mov	r18,zero
    ee0c:	00803fc4 	movi	r2,255
    ee10:	644eb03a 	or	r7,r12,r17
    ee14:	3892703a 	and	r9,r7,r2
    ee18:	00802004 	movi	r2,128
    ee1c:	6c90b03a 	or	r8,r13,r18
    ee20:	0015883a 	mov	r10,zero
    ee24:	48801626 	beq	r9,r2,ee80 <__pack_d+0x288>
    ee28:	01001fc4 	movi	r4,127
    ee2c:	3905883a 	add	r2,r7,r4
    ee30:	11cd803a 	cmpltu	r6,r2,r7
    ee34:	320d883a 	add	r6,r6,r8
    ee38:	100f883a 	mov	r7,r2
    ee3c:	00840034 	movhi	r2,4096
    ee40:	10bfffc4 	addi	r2,r2,-1
    ee44:	3011883a 	mov	r8,r6
    ee48:	0007883a 	mov	r3,zero
    ee4c:	11801b36 	bltu	r2,r6,eebc <__pack_d+0x2c4>
    ee50:	4004963a 	slli	r2,r8,24
    ee54:	3808d23a 	srli	r4,r7,8
    ee58:	400ad23a 	srli	r5,r8,8
    ee5c:	1813883a 	mov	r9,r3
    ee60:	1108b03a 	or	r4,r2,r4
    ee64:	00bfffc4 	movi	r2,-1
    ee68:	00c00434 	movhi	r3,16
    ee6c:	18ffffc4 	addi	r3,r3,-1
    ee70:	208c703a 	and	r6,r4,r2
    ee74:	28ce703a 	and	r7,r5,r3
    ee78:	4a01ffcc 	andi	r8,r9,2047
    ee7c:	003f7206 	br	ec48 <__pack_d+0x50>
    ee80:	503fe91e 	bne	r10,zero,ee28 <__pack_d+0x230>
    ee84:	01004004 	movi	r4,256
    ee88:	3904703a 	and	r2,r7,r4
    ee8c:	0007883a 	mov	r3,zero
    ee90:	10c4b03a 	or	r2,r2,r3
    ee94:	10000626 	beq	r2,zero,eeb0 <__pack_d+0x2b8>
    ee98:	3a45883a 	add	r2,r7,r9
    ee9c:	11cd803a 	cmpltu	r6,r2,r7
    eea0:	320d883a 	add	r6,r6,r8
    eea4:	100f883a 	mov	r7,r2
    eea8:	3011883a 	mov	r8,r6
    eeac:	0007883a 	mov	r3,zero
    eeb0:	00840034 	movhi	r2,4096
    eeb4:	10bfffc4 	addi	r2,r2,-1
    eeb8:	123fe52e 	bgeu	r2,r8,ee50 <__pack_d+0x258>
    eebc:	00c00044 	movi	r3,1
    eec0:	003fe306 	br	ee50 <__pack_d+0x258>
    eec4:	0009883a 	mov	r4,zero
    eec8:	0013883a 	mov	r9,zero
    eecc:	000b883a 	mov	r5,zero
    eed0:	003fe406 	br	ee64 <__pack_d+0x26c>
    eed4:	4a47883a 	add	r3,r9,r9
    eed8:	008007c4 	movi	r2,31
    eedc:	1105c83a 	sub	r2,r2,r4
    eee0:	1886983a 	sll	r3,r3,r2
    eee4:	4118d83a 	srl	r12,r8,r4
    eee8:	491ad83a 	srl	r13,r9,r4
    eeec:	1b18b03a 	or	r12,r3,r12
    eef0:	003fb506 	br	edc8 <__pack_d+0x1d0>
    eef4:	2806d07a 	srli	r3,r5,1
    eef8:	008007c4 	movi	r2,31
    eefc:	1105c83a 	sub	r2,r2,r4
    ef00:	1896d83a 	srl	r11,r3,r2
    ef04:	2914983a 	sll	r10,r5,r4
    ef08:	003fb506 	br	ede0 <__pack_d+0x1e8>

0000ef0c <__unpack_d>:
    ef0c:	20c00117 	ldw	r3,4(r4)
    ef10:	22400017 	ldw	r9,0(r4)
    ef14:	00800434 	movhi	r2,16
    ef18:	10bfffc4 	addi	r2,r2,-1
    ef1c:	1808d53a 	srli	r4,r3,20
    ef20:	180cd7fa 	srli	r6,r3,31
    ef24:	1894703a 	and	r10,r3,r2
    ef28:	2201ffcc 	andi	r8,r4,2047
    ef2c:	281b883a 	mov	r13,r5
    ef30:	4817883a 	mov	r11,r9
    ef34:	29800115 	stw	r6,4(r5)
    ef38:	5019883a 	mov	r12,r10
    ef3c:	40001e1e 	bne	r8,zero,efb8 <__unpack_d+0xac>
    ef40:	4a84b03a 	or	r2,r9,r10
    ef44:	10001926 	beq	r2,zero,efac <__unpack_d+0xa0>
    ef48:	4804d63a 	srli	r2,r9,24
    ef4c:	500c923a 	slli	r6,r10,8
    ef50:	013f0084 	movi	r4,-1022
    ef54:	00c40034 	movhi	r3,4096
    ef58:	18ffffc4 	addi	r3,r3,-1
    ef5c:	118cb03a 	or	r6,r2,r6
    ef60:	008000c4 	movi	r2,3
    ef64:	480a923a 	slli	r5,r9,8
    ef68:	68800015 	stw	r2,0(r13)
    ef6c:	69000215 	stw	r4,8(r13)
    ef70:	19800b36 	bltu	r3,r6,efa0 <__unpack_d+0x94>
    ef74:	200f883a 	mov	r7,r4
    ef78:	1811883a 	mov	r8,r3
    ef7c:	2945883a 	add	r2,r5,r5
    ef80:	1149803a 	cmpltu	r4,r2,r5
    ef84:	3187883a 	add	r3,r6,r6
    ef88:	20c9883a 	add	r4,r4,r3
    ef8c:	100b883a 	mov	r5,r2
    ef90:	200d883a 	mov	r6,r4
    ef94:	39ffffc4 	addi	r7,r7,-1
    ef98:	413ff82e 	bgeu	r8,r4,ef7c <__unpack_d+0x70>
    ef9c:	69c00215 	stw	r7,8(r13)
    efa0:	69800415 	stw	r6,16(r13)
    efa4:	69400315 	stw	r5,12(r13)
    efa8:	f800283a 	ret
    efac:	00800084 	movi	r2,2
    efb0:	28800015 	stw	r2,0(r5)
    efb4:	f800283a 	ret
    efb8:	0081ffc4 	movi	r2,2047
    efbc:	40800f26 	beq	r8,r2,effc <__unpack_d+0xf0>
    efc0:	480cd63a 	srli	r6,r9,24
    efc4:	5006923a 	slli	r3,r10,8
    efc8:	4804923a 	slli	r2,r9,8
    efcc:	0009883a 	mov	r4,zero
    efd0:	30c6b03a 	or	r3,r6,r3
    efd4:	01440034 	movhi	r5,4096
    efd8:	110cb03a 	or	r6,r2,r4
    efdc:	423f0044 	addi	r8,r8,-1023
    efe0:	194eb03a 	or	r7,r3,r5
    efe4:	008000c4 	movi	r2,3
    efe8:	69c00415 	stw	r7,16(r13)
    efec:	6a000215 	stw	r8,8(r13)
    eff0:	68800015 	stw	r2,0(r13)
    eff4:	69800315 	stw	r6,12(r13)
    eff8:	f800283a 	ret
    effc:	4a84b03a 	or	r2,r9,r10
    f000:	1000031e 	bne	r2,zero,f010 <__unpack_d+0x104>
    f004:	00800104 	movi	r2,4
    f008:	28800015 	stw	r2,0(r5)
    f00c:	f800283a 	ret
    f010:	0009883a 	mov	r4,zero
    f014:	01400234 	movhi	r5,8
    f018:	4904703a 	and	r2,r9,r4
    f01c:	5146703a 	and	r3,r10,r5
    f020:	10c4b03a 	or	r2,r2,r3
    f024:	10000526 	beq	r2,zero,f03c <__unpack_d+0x130>
    f028:	00800044 	movi	r2,1
    f02c:	68800015 	stw	r2,0(r13)
    f030:	6b000415 	stw	r12,16(r13)
    f034:	6ac00315 	stw	r11,12(r13)
    f038:	f800283a 	ret
    f03c:	68000015 	stw	zero,0(r13)
    f040:	003ffb06 	br	f030 <__unpack_d+0x124>

0000f044 <__fpcmp_parts_d>:
    f044:	21800017 	ldw	r6,0(r4)
    f048:	00c00044 	movi	r3,1
    f04c:	19800a2e 	bgeu	r3,r6,f078 <__fpcmp_parts_d+0x34>
    f050:	28800017 	ldw	r2,0(r5)
    f054:	1880082e 	bgeu	r3,r2,f078 <__fpcmp_parts_d+0x34>
    f058:	00c00104 	movi	r3,4
    f05c:	30c02626 	beq	r6,r3,f0f8 <__fpcmp_parts_d+0xb4>
    f060:	10c02226 	beq	r2,r3,f0ec <__fpcmp_parts_d+0xa8>
    f064:	00c00084 	movi	r3,2
    f068:	30c00526 	beq	r6,r3,f080 <__fpcmp_parts_d+0x3c>
    f06c:	10c0071e 	bne	r2,r3,f08c <__fpcmp_parts_d+0x48>
    f070:	20800117 	ldw	r2,4(r4)
    f074:	1000091e 	bne	r2,zero,f09c <__fpcmp_parts_d+0x58>
    f078:	00800044 	movi	r2,1
    f07c:	f800283a 	ret
    f080:	10c01a1e 	bne	r2,r3,f0ec <__fpcmp_parts_d+0xa8>
    f084:	0005883a 	mov	r2,zero
    f088:	f800283a 	ret
    f08c:	22000117 	ldw	r8,4(r4)
    f090:	28800117 	ldw	r2,4(r5)
    f094:	40800326 	beq	r8,r2,f0a4 <__fpcmp_parts_d+0x60>
    f098:	403ff726 	beq	r8,zero,f078 <__fpcmp_parts_d+0x34>
    f09c:	00bfffc4 	movi	r2,-1
    f0a0:	f800283a 	ret
    f0a4:	20c00217 	ldw	r3,8(r4)
    f0a8:	28800217 	ldw	r2,8(r5)
    f0ac:	10fffa16 	blt	r2,r3,f098 <__fpcmp_parts_d+0x54>
    f0b0:	18800916 	blt	r3,r2,f0d8 <__fpcmp_parts_d+0x94>
    f0b4:	21c00417 	ldw	r7,16(r4)
    f0b8:	28c00417 	ldw	r3,16(r5)
    f0bc:	21800317 	ldw	r6,12(r4)
    f0c0:	28800317 	ldw	r2,12(r5)
    f0c4:	19fff436 	bltu	r3,r7,f098 <__fpcmp_parts_d+0x54>
    f0c8:	38c00526 	beq	r7,r3,f0e0 <__fpcmp_parts_d+0x9c>
    f0cc:	38c00236 	bltu	r7,r3,f0d8 <__fpcmp_parts_d+0x94>
    f0d0:	19ffec1e 	bne	r3,r7,f084 <__fpcmp_parts_d+0x40>
    f0d4:	30bfeb2e 	bgeu	r6,r2,f084 <__fpcmp_parts_d+0x40>
    f0d8:	403fe71e 	bne	r8,zero,f078 <__fpcmp_parts_d+0x34>
    f0dc:	003fef06 	br	f09c <__fpcmp_parts_d+0x58>
    f0e0:	11bffa2e 	bgeu	r2,r6,f0cc <__fpcmp_parts_d+0x88>
    f0e4:	403fe426 	beq	r8,zero,f078 <__fpcmp_parts_d+0x34>
    f0e8:	003fec06 	br	f09c <__fpcmp_parts_d+0x58>
    f0ec:	28800117 	ldw	r2,4(r5)
    f0f0:	103fe11e 	bne	r2,zero,f078 <__fpcmp_parts_d+0x34>
    f0f4:	003fe906 	br	f09c <__fpcmp_parts_d+0x58>
    f0f8:	11bfdd1e 	bne	r2,r6,f070 <__fpcmp_parts_d+0x2c>
    f0fc:	28c00117 	ldw	r3,4(r5)
    f100:	20800117 	ldw	r2,4(r4)
    f104:	1885c83a 	sub	r2,r3,r2
    f108:	f800283a 	ret

0000f10c <__pack_f>:
    f10c:	20c00017 	ldw	r3,0(r4)
    f110:	01c00044 	movi	r7,1
    f114:	21800317 	ldw	r6,12(r4)
    f118:	21400117 	ldw	r5,4(r4)
    f11c:	38c02d2e 	bgeu	r7,r3,f1d4 <__pack_f+0xc8>
    f120:	00800104 	movi	r2,4
    f124:	18802826 	beq	r3,r2,f1c8 <__pack_f+0xbc>
    f128:	00800084 	movi	r2,2
    f12c:	18800126 	beq	r3,r2,f134 <__pack_f+0x28>
    f130:	3000101e 	bne	r6,zero,f174 <__pack_f+0x68>
    f134:	000d883a 	mov	r6,zero
    f138:	0007883a 	mov	r3,zero
    f13c:	19003fcc 	andi	r4,r3,255
    f140:	200895fa 	slli	r4,r4,23
    f144:	00c02034 	movhi	r3,128
    f148:	18ffffc4 	addi	r3,r3,-1
    f14c:	30c6703a 	and	r3,r6,r3
    f150:	10a0002c 	andhi	r2,r2,32768
    f154:	10c4b03a 	or	r2,r2,r3
    f158:	280a97fa 	slli	r5,r5,31
    f15c:	1104b03a 	or	r2,r2,r4
    f160:	00e00034 	movhi	r3,32768
    f164:	18ffffc4 	addi	r3,r3,-1
    f168:	10c4703a 	and	r2,r2,r3
    f16c:	1144b03a 	or	r2,r2,r5
    f170:	f800283a 	ret
    f174:	21000217 	ldw	r4,8(r4)
    f178:	00bfe084 	movi	r2,-126
    f17c:	20801b16 	blt	r4,r2,f1ec <__pack_f+0xe0>
    f180:	00801fc4 	movi	r2,127
    f184:	11001016 	blt	r2,r4,f1c8 <__pack_f+0xbc>
    f188:	308e703a 	and	r7,r6,r2
    f18c:	2087883a 	add	r3,r4,r2
    f190:	00801004 	movi	r2,64
    f194:	38800526 	beq	r7,r2,f1ac <__pack_f+0xa0>
    f198:	31800fc4 	addi	r6,r6,63
    f19c:	30000716 	blt	r6,zero,f1bc <__pack_f+0xb0>
    f1a0:	300490ba 	slli	r2,r6,2
    f1a4:	100cd27a 	srli	r6,r2,9
    f1a8:	003fe406 	br	f13c <__pack_f+0x30>
    f1ac:	3080200c 	andi	r2,r6,128
    f1b0:	103ffa26 	beq	r2,zero,f19c <__pack_f+0x90>
    f1b4:	31cd883a 	add	r6,r6,r7
    f1b8:	003ff806 	br	f19c <__pack_f+0x90>
    f1bc:	300cd07a 	srli	r6,r6,1
    f1c0:	18c00044 	addi	r3,r3,1
    f1c4:	003ff606 	br	f1a0 <__pack_f+0x94>
    f1c8:	000d883a 	mov	r6,zero
    f1cc:	00ffffc4 	movi	r3,-1
    f1d0:	003fda06 	br	f13c <__pack_f+0x30>
    f1d4:	31800434 	orhi	r6,r6,16
    f1d8:	00802034 	movhi	r2,128
    f1dc:	10bfffc4 	addi	r2,r2,-1
    f1e0:	308c703a 	and	r6,r6,r2
    f1e4:	00ffffc4 	movi	r3,-1
    f1e8:	003fd406 	br	f13c <__pack_f+0x30>
    f1ec:	1109c83a 	sub	r4,r2,r4
    f1f0:	00800644 	movi	r2,25
    f1f4:	11001216 	blt	r2,r4,f240 <__pack_f+0x134>
    f1f8:	3904983a 	sll	r2,r7,r4
    f1fc:	3106d83a 	srl	r3,r6,r4
    f200:	10bfffc4 	addi	r2,r2,-1
    f204:	3084703a 	and	r2,r6,r2
    f208:	1004c03a 	cmpne	r2,r2,zero
    f20c:	1886b03a 	or	r3,r3,r2
    f210:	19001fcc 	andi	r4,r3,127
    f214:	00801004 	movi	r2,64
    f218:	20800c26 	beq	r4,r2,f24c <__pack_f+0x140>
    f21c:	18c00fc4 	addi	r3,r3,63
    f220:	00900034 	movhi	r2,16384
    f224:	10bfffc4 	addi	r2,r2,-1
    f228:	180cd1fa 	srli	r6,r3,7
    f22c:	10c7803a 	cmpltu	r3,r2,r3
    f230:	00802034 	movhi	r2,128
    f234:	10bfffc4 	addi	r2,r2,-1
    f238:	308c703a 	and	r6,r6,r2
    f23c:	003fbf06 	br	f13c <__pack_f+0x30>
    f240:	0007883a 	mov	r3,zero
    f244:	000d883a 	mov	r6,zero
    f248:	003ff906 	br	f230 <__pack_f+0x124>
    f24c:	1880200c 	andi	r2,r3,128
    f250:	10000126 	beq	r2,zero,f258 <__pack_f+0x14c>
    f254:	1907883a 	add	r3,r3,r4
    f258:	180cd1fa 	srli	r6,r3,7
    f25c:	00900034 	movhi	r2,16384
    f260:	10bfffc4 	addi	r2,r2,-1
    f264:	10c7803a 	cmpltu	r3,r2,r3
    f268:	003ff106 	br	f230 <__pack_f+0x124>

0000f26c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    f26c:	defff804 	addi	sp,sp,-32
    f270:	dfc00715 	stw	ra,28(sp)
    f274:	df000615 	stw	fp,24(sp)
    f278:	df000604 	addi	fp,sp,24
    f27c:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    f280:	e0bffc17 	ldw	r2,-16(fp)
    f284:	1004803a 	cmplt	r2,r2,zero
    f288:	1000081e 	bne	r2,zero,f2ac <close+0x40>
    f28c:	e0bffc17 	ldw	r2,-16(fp)
    f290:	10800324 	muli	r2,r2,12
    f294:	1007883a 	mov	r3,r2
    f298:	00800074 	movhi	r2,1
    f29c:	108aef04 	addi	r2,r2,11196
    f2a0:	1887883a 	add	r3,r3,r2
    f2a4:	e0ffff15 	stw	r3,-4(fp)
    f2a8:	00000106 	br	f2b0 <close+0x44>
    f2ac:	e03fff15 	stw	zero,-4(fp)
    f2b0:	e0bfff17 	ldw	r2,-4(fp)
    f2b4:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
    f2b8:	e0bffb17 	ldw	r2,-20(fp)
    f2bc:	1005003a 	cmpeq	r2,r2,zero
    f2c0:	10001d1e 	bne	r2,zero,f338 <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    f2c4:	e0bffb17 	ldw	r2,-20(fp)
    f2c8:	10800017 	ldw	r2,0(r2)
    f2cc:	10800417 	ldw	r2,16(r2)
    f2d0:	1005003a 	cmpeq	r2,r2,zero
    f2d4:	1000071e 	bne	r2,zero,f2f4 <close+0x88>
    f2d8:	e0bffb17 	ldw	r2,-20(fp)
    f2dc:	10800017 	ldw	r2,0(r2)
    f2e0:	10800417 	ldw	r2,16(r2)
    f2e4:	e13ffb17 	ldw	r4,-20(fp)
    f2e8:	103ee83a 	callr	r2
    f2ec:	e0bffe15 	stw	r2,-8(fp)
    f2f0:	00000106 	br	f2f8 <close+0x8c>
    f2f4:	e03ffe15 	stw	zero,-8(fp)
    f2f8:	e0bffe17 	ldw	r2,-8(fp)
    f2fc:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    f300:	e13ffc17 	ldw	r4,-16(fp)
    f304:	000fab00 	call	fab0 <alt_release_fd>
    if (rval < 0)
    f308:	e0bffa17 	ldw	r2,-24(fp)
    f30c:	1004403a 	cmpge	r2,r2,zero
    f310:	1000071e 	bne	r2,zero,f330 <close+0xc4>
    {
      ALT_ERRNO = -rval;
    f314:	000f3680 	call	f368 <alt_get_errno>
    f318:	e0fffa17 	ldw	r3,-24(fp)
    f31c:	00c7c83a 	sub	r3,zero,r3
    f320:	10c00015 	stw	r3,0(r2)
      return -1;
    f324:	00bfffc4 	movi	r2,-1
    f328:	e0bffd15 	stw	r2,-12(fp)
    f32c:	00000806 	br	f350 <close+0xe4>
    }
    return 0;
    f330:	e03ffd15 	stw	zero,-12(fp)
    f334:	00000606 	br	f350 <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f338:	000f3680 	call	f368 <alt_get_errno>
    f33c:	1007883a 	mov	r3,r2
    f340:	00801444 	movi	r2,81
    f344:	18800015 	stw	r2,0(r3)
    return -1;
    f348:	00bfffc4 	movi	r2,-1
    f34c:	e0bffd15 	stw	r2,-12(fp)
    f350:	e0bffd17 	ldw	r2,-12(fp)
  }
}
    f354:	e037883a 	mov	sp,fp
    f358:	dfc00117 	ldw	ra,4(sp)
    f35c:	df000017 	ldw	fp,0(sp)
    f360:	dec00204 	addi	sp,sp,8
    f364:	f800283a 	ret

0000f368 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f368:	defffd04 	addi	sp,sp,-12
    f36c:	dfc00215 	stw	ra,8(sp)
    f370:	df000115 	stw	fp,4(sp)
    f374:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    f378:	00800074 	movhi	r2,1
    f37c:	108f7304 	addi	r2,r2,15820
    f380:	10800017 	ldw	r2,0(r2)
    f384:	1005003a 	cmpeq	r2,r2,zero
    f388:	1000061e 	bne	r2,zero,f3a4 <alt_get_errno+0x3c>
    f38c:	00800074 	movhi	r2,1
    f390:	108f7304 	addi	r2,r2,15820
    f394:	10800017 	ldw	r2,0(r2)
    f398:	103ee83a 	callr	r2
    f39c:	e0bfff15 	stw	r2,-4(fp)
    f3a0:	00000306 	br	f3b0 <alt_get_errno+0x48>
    f3a4:	00800074 	movhi	r2,1
    f3a8:	10961d04 	addi	r2,r2,22644
    f3ac:	e0bfff15 	stw	r2,-4(fp)
    f3b0:	e0bfff17 	ldw	r2,-4(fp)
}
    f3b4:	e037883a 	mov	sp,fp
    f3b8:	dfc00117 	ldw	ra,4(sp)
    f3bc:	df000017 	ldw	fp,0(sp)
    f3c0:	dec00204 	addi	sp,sp,8
    f3c4:	f800283a 	ret

0000f3c8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    f3c8:	defffc04 	addi	sp,sp,-16
    f3cc:	df000315 	stw	fp,12(sp)
    f3d0:	df000304 	addi	fp,sp,12
    f3d4:	e13ffd15 	stw	r4,-12(fp)
    f3d8:	e17ffe15 	stw	r5,-8(fp)
    f3dc:	e1bfff15 	stw	r6,-4(fp)
  return len;
    f3e0:	e0bfff17 	ldw	r2,-4(fp)
}
    f3e4:	e037883a 	mov	sp,fp
    f3e8:	df000017 	ldw	fp,0(sp)
    f3ec:	dec00104 	addi	sp,sp,4
    f3f0:	f800283a 	ret

0000f3f4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    f3f4:	defff904 	addi	sp,sp,-28
    f3f8:	dfc00615 	stw	ra,24(sp)
    f3fc:	df000515 	stw	fp,20(sp)
    f400:	df000504 	addi	fp,sp,20
    f404:	e13ffc15 	stw	r4,-16(fp)
    f408:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f40c:	e0bffc17 	ldw	r2,-16(fp)
    f410:	1004803a 	cmplt	r2,r2,zero
    f414:	1000081e 	bne	r2,zero,f438 <fstat+0x44>
    f418:	e0bffc17 	ldw	r2,-16(fp)
    f41c:	10800324 	muli	r2,r2,12
    f420:	1007883a 	mov	r3,r2
    f424:	00800074 	movhi	r2,1
    f428:	108aef04 	addi	r2,r2,11196
    f42c:	1887883a 	add	r3,r3,r2
    f430:	e0ffff15 	stw	r3,-4(fp)
    f434:	00000106 	br	f43c <fstat+0x48>
    f438:	e03fff15 	stw	zero,-4(fp)
    f43c:	e0bfff17 	ldw	r2,-4(fp)
    f440:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    f444:	e0bffb17 	ldw	r2,-20(fp)
    f448:	1005003a 	cmpeq	r2,r2,zero
    f44c:	1000121e 	bne	r2,zero,f498 <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    f450:	e0bffb17 	ldw	r2,-20(fp)
    f454:	10800017 	ldw	r2,0(r2)
    f458:	10800817 	ldw	r2,32(r2)
    f45c:	1005003a 	cmpeq	r2,r2,zero
    f460:	1000081e 	bne	r2,zero,f484 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
    f464:	e0bffb17 	ldw	r2,-20(fp)
    f468:	10800017 	ldw	r2,0(r2)
    f46c:	10800817 	ldw	r2,32(r2)
    f470:	e13ffb17 	ldw	r4,-20(fp)
    f474:	e17ffd17 	ldw	r5,-12(fp)
    f478:	103ee83a 	callr	r2
    f47c:	e0bffe15 	stw	r2,-8(fp)
    f480:	00000b06 	br	f4b0 <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    f484:	e0fffd17 	ldw	r3,-12(fp)
    f488:	00880004 	movi	r2,8192
    f48c:	18800115 	stw	r2,4(r3)
      return 0;
    f490:	e03ffe15 	stw	zero,-8(fp)
    f494:	00000606 	br	f4b0 <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f498:	000f4c80 	call	f4c8 <alt_get_errno>
    f49c:	1007883a 	mov	r3,r2
    f4a0:	00801444 	movi	r2,81
    f4a4:	18800015 	stw	r2,0(r3)
    return -1;
    f4a8:	00bfffc4 	movi	r2,-1
    f4ac:	e0bffe15 	stw	r2,-8(fp)
    f4b0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
    f4b4:	e037883a 	mov	sp,fp
    f4b8:	dfc00117 	ldw	ra,4(sp)
    f4bc:	df000017 	ldw	fp,0(sp)
    f4c0:	dec00204 	addi	sp,sp,8
    f4c4:	f800283a 	ret

0000f4c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f4c8:	defffd04 	addi	sp,sp,-12
    f4cc:	dfc00215 	stw	ra,8(sp)
    f4d0:	df000115 	stw	fp,4(sp)
    f4d4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    f4d8:	00800074 	movhi	r2,1
    f4dc:	108f7304 	addi	r2,r2,15820
    f4e0:	10800017 	ldw	r2,0(r2)
    f4e4:	1005003a 	cmpeq	r2,r2,zero
    f4e8:	1000061e 	bne	r2,zero,f504 <alt_get_errno+0x3c>
    f4ec:	00800074 	movhi	r2,1
    f4f0:	108f7304 	addi	r2,r2,15820
    f4f4:	10800017 	ldw	r2,0(r2)
    f4f8:	103ee83a 	callr	r2
    f4fc:	e0bfff15 	stw	r2,-4(fp)
    f500:	00000306 	br	f510 <alt_get_errno+0x48>
    f504:	00800074 	movhi	r2,1
    f508:	10961d04 	addi	r2,r2,22644
    f50c:	e0bfff15 	stw	r2,-4(fp)
    f510:	e0bfff17 	ldw	r2,-4(fp)
}
    f514:	e037883a 	mov	sp,fp
    f518:	dfc00117 	ldw	ra,4(sp)
    f51c:	df000017 	ldw	fp,0(sp)
    f520:	dec00204 	addi	sp,sp,8
    f524:	f800283a 	ret

0000f528 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    f528:	deffeb04 	addi	sp,sp,-84
    f52c:	dfc01415 	stw	ra,80(sp)
    f530:	df001315 	stw	fp,76(sp)
    f534:	df001304 	addi	fp,sp,76
    f538:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f53c:	e0bffd17 	ldw	r2,-12(fp)
    f540:	1004803a 	cmplt	r2,r2,zero
    f544:	1000081e 	bne	r2,zero,f568 <isatty+0x40>
    f548:	e0bffd17 	ldw	r2,-12(fp)
    f54c:	10800324 	muli	r2,r2,12
    f550:	1007883a 	mov	r3,r2
    f554:	00800074 	movhi	r2,1
    f558:	108aef04 	addi	r2,r2,11196
    f55c:	1887883a 	add	r3,r3,r2
    f560:	e0ffff15 	stw	r3,-4(fp)
    f564:	00000106 	br	f56c <isatty+0x44>
    f568:	e03fff15 	stw	zero,-4(fp)
    f56c:	e0bfff17 	ldw	r2,-4(fp)
    f570:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
    f574:	e0bfed17 	ldw	r2,-76(fp)
    f578:	1005003a 	cmpeq	r2,r2,zero
    f57c:	10000f1e 	bne	r2,zero,f5bc <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    f580:	e0bfed17 	ldw	r2,-76(fp)
    f584:	10800017 	ldw	r2,0(r2)
    f588:	10800817 	ldw	r2,32(r2)
    f58c:	1004c03a 	cmpne	r2,r2,zero
    f590:	1000031e 	bne	r2,zero,f5a0 <isatty+0x78>
    {
      return 1;
    f594:	00800044 	movi	r2,1
    f598:	e0bffe15 	stw	r2,-8(fp)
    f59c:	00000c06 	br	f5d0 <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    f5a0:	e17fee04 	addi	r5,fp,-72
    f5a4:	e13ffd17 	ldw	r4,-12(fp)
    f5a8:	000f3f40 	call	f3f4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    f5ac:	e0bfef17 	ldw	r2,-68(fp)
    f5b0:	10880020 	cmpeqi	r2,r2,8192
    f5b4:	e0bffe15 	stw	r2,-8(fp)
    f5b8:	00000506 	br	f5d0 <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f5bc:	000f5e80 	call	f5e8 <alt_get_errno>
    f5c0:	1007883a 	mov	r3,r2
    f5c4:	00801444 	movi	r2,81
    f5c8:	18800015 	stw	r2,0(r3)
    return 0;
    f5cc:	e03ffe15 	stw	zero,-8(fp)
    f5d0:	e0bffe17 	ldw	r2,-8(fp)
  }
}
    f5d4:	e037883a 	mov	sp,fp
    f5d8:	dfc00117 	ldw	ra,4(sp)
    f5dc:	df000017 	ldw	fp,0(sp)
    f5e0:	dec00204 	addi	sp,sp,8
    f5e4:	f800283a 	ret

0000f5e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f5e8:	defffd04 	addi	sp,sp,-12
    f5ec:	dfc00215 	stw	ra,8(sp)
    f5f0:	df000115 	stw	fp,4(sp)
    f5f4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    f5f8:	00800074 	movhi	r2,1
    f5fc:	108f7304 	addi	r2,r2,15820
    f600:	10800017 	ldw	r2,0(r2)
    f604:	1005003a 	cmpeq	r2,r2,zero
    f608:	1000061e 	bne	r2,zero,f624 <alt_get_errno+0x3c>
    f60c:	00800074 	movhi	r2,1
    f610:	108f7304 	addi	r2,r2,15820
    f614:	10800017 	ldw	r2,0(r2)
    f618:	103ee83a 	callr	r2
    f61c:	e0bfff15 	stw	r2,-4(fp)
    f620:	00000306 	br	f630 <alt_get_errno+0x48>
    f624:	00800074 	movhi	r2,1
    f628:	10961d04 	addi	r2,r2,22644
    f62c:	e0bfff15 	stw	r2,-4(fp)
    f630:	e0bfff17 	ldw	r2,-4(fp)
}
    f634:	e037883a 	mov	sp,fp
    f638:	dfc00117 	ldw	ra,4(sp)
    f63c:	df000017 	ldw	fp,0(sp)
    f640:	dec00204 	addi	sp,sp,8
    f644:	f800283a 	ret

0000f648 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    f648:	defffe04 	addi	sp,sp,-8
    f64c:	dfc00115 	stw	ra,4(sp)
    f650:	df000015 	stw	fp,0(sp)
    f654:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    f658:	01000074 	movhi	r4,1
    f65c:	210f7804 	addi	r4,r4,15840
    f660:	01400074 	movhi	r5,1
    f664:	2948d604 	addi	r5,r5,9048
    f668:	01800074 	movhi	r6,1
    f66c:	318f7804 	addi	r6,r6,15840
    f670:	000f6c80 	call	f6c8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    f674:	01000034 	movhi	r4,0
    f678:	21000804 	addi	r4,r4,32
    f67c:	01400034 	movhi	r5,0
    f680:	29400804 	addi	r5,r5,32
    f684:	01800034 	movhi	r6,0
    f688:	31806d04 	addi	r6,r6,436
    f68c:	000f6c80 	call	f6c8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    f690:	01000074 	movhi	r4,1
    f694:	21073f04 	addi	r4,r4,7420
    f698:	01400074 	movhi	r5,1
    f69c:	29473f04 	addi	r5,r5,7420
    f6a0:	01800074 	movhi	r6,1
    f6a4:	3188d604 	addi	r6,r6,9048
    f6a8:	000f6c80 	call	f6c8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    f6ac:	0010b140 	call	10b14 <alt_dcache_flush_all>
  alt_icache_flush_all();
    f6b0:	0010d340 	call	10d34 <alt_icache_flush_all>
}
    f6b4:	e037883a 	mov	sp,fp
    f6b8:	dfc00117 	ldw	ra,4(sp)
    f6bc:	df000017 	ldw	fp,0(sp)
    f6c0:	dec00204 	addi	sp,sp,8
    f6c4:	f800283a 	ret

0000f6c8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    f6c8:	defffc04 	addi	sp,sp,-16
    f6cc:	df000315 	stw	fp,12(sp)
    f6d0:	df000304 	addi	fp,sp,12
    f6d4:	e13ffd15 	stw	r4,-12(fp)
    f6d8:	e17ffe15 	stw	r5,-8(fp)
    f6dc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    f6e0:	e0fffe17 	ldw	r3,-8(fp)
    f6e4:	e0bffd17 	ldw	r2,-12(fp)
    f6e8:	18800e26 	beq	r3,r2,f724 <alt_load_section+0x5c>
  {
    while( to != end )
    f6ec:	00000a06 	br	f718 <alt_load_section+0x50>
    {
      *to++ = *from++;
    f6f0:	e0bffd17 	ldw	r2,-12(fp)
    f6f4:	10c00017 	ldw	r3,0(r2)
    f6f8:	e0bffe17 	ldw	r2,-8(fp)
    f6fc:	10c00015 	stw	r3,0(r2)
    f700:	e0bffe17 	ldw	r2,-8(fp)
    f704:	10800104 	addi	r2,r2,4
    f708:	e0bffe15 	stw	r2,-8(fp)
    f70c:	e0bffd17 	ldw	r2,-12(fp)
    f710:	10800104 	addi	r2,r2,4
    f714:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    f718:	e0fffe17 	ldw	r3,-8(fp)
    f71c:	e0bfff17 	ldw	r2,-4(fp)
    f720:	18bff31e 	bne	r3,r2,f6f0 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
    f724:	e037883a 	mov	sp,fp
    f728:	df000017 	ldw	fp,0(sp)
    f72c:	dec00104 	addi	sp,sp,4
    f730:	f800283a 	ret

0000f734 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    f734:	defff804 	addi	sp,sp,-32
    f738:	dfc00715 	stw	ra,28(sp)
    f73c:	df000615 	stw	fp,24(sp)
    f740:	df000604 	addi	fp,sp,24
    f744:	e13ffc15 	stw	r4,-16(fp)
    f748:	e17ffd15 	stw	r5,-12(fp)
    f74c:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    f750:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f754:	e0bffc17 	ldw	r2,-16(fp)
    f758:	1004803a 	cmplt	r2,r2,zero
    f75c:	1000081e 	bne	r2,zero,f780 <lseek+0x4c>
    f760:	e0bffc17 	ldw	r2,-16(fp)
    f764:	10800324 	muli	r2,r2,12
    f768:	1007883a 	mov	r3,r2
    f76c:	00800074 	movhi	r2,1
    f770:	108aef04 	addi	r2,r2,11196
    f774:	1887883a 	add	r3,r3,r2
    f778:	e0ffff15 	stw	r3,-4(fp)
    f77c:	00000106 	br	f784 <lseek+0x50>
    f780:	e03fff15 	stw	zero,-4(fp)
    f784:	e0bfff17 	ldw	r2,-4(fp)
    f788:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
    f78c:	e0bffb17 	ldw	r2,-20(fp)
    f790:	1005003a 	cmpeq	r2,r2,zero
    f794:	1000111e 	bne	r2,zero,f7dc <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    f798:	e0bffb17 	ldw	r2,-20(fp)
    f79c:	10800017 	ldw	r2,0(r2)
    f7a0:	10800717 	ldw	r2,28(r2)
    f7a4:	1005003a 	cmpeq	r2,r2,zero
    f7a8:	1000091e 	bne	r2,zero,f7d0 <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    f7ac:	e0bffb17 	ldw	r2,-20(fp)
    f7b0:	10800017 	ldw	r2,0(r2)
    f7b4:	10800717 	ldw	r2,28(r2)
    f7b8:	e13ffb17 	ldw	r4,-20(fp)
    f7bc:	e17ffd17 	ldw	r5,-12(fp)
    f7c0:	e1bffe17 	ldw	r6,-8(fp)
    f7c4:	103ee83a 	callr	r2
    f7c8:	e0bffa15 	stw	r2,-24(fp)
    f7cc:	00000506 	br	f7e4 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    f7d0:	00bfde84 	movi	r2,-134
    f7d4:	e0bffa15 	stw	r2,-24(fp)
    f7d8:	00000206 	br	f7e4 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
    f7dc:	00bfebc4 	movi	r2,-81
    f7e0:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
    f7e4:	e0bffa17 	ldw	r2,-24(fp)
    f7e8:	1004403a 	cmpge	r2,r2,zero
    f7ec:	1000071e 	bne	r2,zero,f80c <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
    f7f0:	000f8240 	call	f824 <alt_get_errno>
    f7f4:	1007883a 	mov	r3,r2
    f7f8:	e0bffa17 	ldw	r2,-24(fp)
    f7fc:	0085c83a 	sub	r2,zero,r2
    f800:	18800015 	stw	r2,0(r3)
    rc = -1;
    f804:	00bfffc4 	movi	r2,-1
    f808:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
    f80c:	e0bffa17 	ldw	r2,-24(fp)
}
    f810:	e037883a 	mov	sp,fp
    f814:	dfc00117 	ldw	ra,4(sp)
    f818:	df000017 	ldw	fp,0(sp)
    f81c:	dec00204 	addi	sp,sp,8
    f820:	f800283a 	ret

0000f824 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f824:	defffd04 	addi	sp,sp,-12
    f828:	dfc00215 	stw	ra,8(sp)
    f82c:	df000115 	stw	fp,4(sp)
    f830:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    f834:	00800074 	movhi	r2,1
    f838:	108f7304 	addi	r2,r2,15820
    f83c:	10800017 	ldw	r2,0(r2)
    f840:	1005003a 	cmpeq	r2,r2,zero
    f844:	1000061e 	bne	r2,zero,f860 <alt_get_errno+0x3c>
    f848:	00800074 	movhi	r2,1
    f84c:	108f7304 	addi	r2,r2,15820
    f850:	10800017 	ldw	r2,0(r2)
    f854:	103ee83a 	callr	r2
    f858:	e0bfff15 	stw	r2,-4(fp)
    f85c:	00000306 	br	f86c <alt_get_errno+0x48>
    f860:	00800074 	movhi	r2,1
    f864:	10961d04 	addi	r2,r2,22644
    f868:	e0bfff15 	stw	r2,-4(fp)
    f86c:	e0bfff17 	ldw	r2,-4(fp)
}
    f870:	e037883a 	mov	sp,fp
    f874:	dfc00117 	ldw	ra,4(sp)
    f878:	df000017 	ldw	fp,0(sp)
    f87c:	dec00204 	addi	sp,sp,8
    f880:	f800283a 	ret

0000f884 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    f884:	defffd04 	addi	sp,sp,-12
    f888:	dfc00215 	stw	ra,8(sp)
    f88c:	df000115 	stw	fp,4(sp)
    f890:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    f894:	0009883a 	mov	r4,zero
    f898:	000fd4c0 	call	fd4c <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    f89c:	000fd800 	call	fd80 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    f8a0:	01000074 	movhi	r4,1
    f8a4:	2108cc04 	addi	r4,r4,9008
    f8a8:	01400074 	movhi	r5,1
    f8ac:	2948cc04 	addi	r5,r5,9008
    f8b0:	01800074 	movhi	r6,1
    f8b4:	3188cc04 	addi	r6,r6,9008
    f8b8:	00110f40 	call	110f4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    f8bc:	0010c6c0 	call	10c6c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    f8c0:	01000074 	movhi	r4,1
    f8c4:	21033404 	addi	r4,r4,3280
    f8c8:	00118f00 	call	118f0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    f8cc:	d126ba17 	ldw	r4,-25880(gp)
    f8d0:	d166bb17 	ldw	r5,-25876(gp)
    f8d4:	d1a6bc17 	ldw	r6,-25872(gp)
    f8d8:	00003f80 	call	3f8 <main>
    f8dc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    f8e0:	01000044 	movi	r4,1
    f8e4:	000f26c0 	call	f26c <close>
  exit (result);
    f8e8:	e13fff17 	ldw	r4,-4(fp)
    f8ec:	00119040 	call	11904 <exit>

0000f8f0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    f8f0:	defffe04 	addi	sp,sp,-8
    f8f4:	df000115 	stw	fp,4(sp)
    f8f8:	df000104 	addi	fp,sp,4
    f8fc:	e13fff15 	stw	r4,-4(fp)
}
    f900:	e037883a 	mov	sp,fp
    f904:	df000017 	ldw	fp,0(sp)
    f908:	dec00104 	addi	sp,sp,4
    f90c:	f800283a 	ret

0000f910 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    f910:	defffe04 	addi	sp,sp,-8
    f914:	df000115 	stw	fp,4(sp)
    f918:	df000104 	addi	fp,sp,4
    f91c:	e13fff15 	stw	r4,-4(fp)
}
    f920:	e037883a 	mov	sp,fp
    f924:	df000017 	ldw	fp,0(sp)
    f928:	dec00104 	addi	sp,sp,4
    f92c:	f800283a 	ret

0000f930 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    f930:	defff704 	addi	sp,sp,-36
    f934:	dfc00815 	stw	ra,32(sp)
    f938:	df000715 	stw	fp,28(sp)
    f93c:	df000704 	addi	fp,sp,28
    f940:	e13ffb15 	stw	r4,-20(fp)
    f944:	e17ffc15 	stw	r5,-16(fp)
    f948:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f94c:	e0bffb17 	ldw	r2,-20(fp)
    f950:	1004803a 	cmplt	r2,r2,zero
    f954:	1000081e 	bne	r2,zero,f978 <read+0x48>
    f958:	e0bffb17 	ldw	r2,-20(fp)
    f95c:	10800324 	muli	r2,r2,12
    f960:	1007883a 	mov	r3,r2
    f964:	00800074 	movhi	r2,1
    f968:	108aef04 	addi	r2,r2,11196
    f96c:	1887883a 	add	r3,r3,r2
    f970:	e0ffff15 	stw	r3,-4(fp)
    f974:	00000106 	br	f97c <read+0x4c>
    f978:	e03fff15 	stw	zero,-4(fp)
    f97c:	e0bfff17 	ldw	r2,-4(fp)
    f980:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
    f984:	e0bffa17 	ldw	r2,-24(fp)
    f988:	1005003a 	cmpeq	r2,r2,zero
    f98c:	1000241e 	bne	r2,zero,fa20 <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    f990:	e0bffa17 	ldw	r2,-24(fp)
    f994:	10800217 	ldw	r2,8(r2)
    f998:	108000cc 	andi	r2,r2,3
    f99c:	10800060 	cmpeqi	r2,r2,1
    f9a0:	10001a1e 	bne	r2,zero,fa0c <read+0xdc>
    f9a4:	e0bffa17 	ldw	r2,-24(fp)
    f9a8:	10800017 	ldw	r2,0(r2)
    f9ac:	10800517 	ldw	r2,20(r2)
    f9b0:	1005003a 	cmpeq	r2,r2,zero
    f9b4:	1000151e 	bne	r2,zero,fa0c <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    f9b8:	e0bffa17 	ldw	r2,-24(fp)
    f9bc:	10800017 	ldw	r2,0(r2)
    f9c0:	10800517 	ldw	r2,20(r2)
    f9c4:	e17ffc17 	ldw	r5,-16(fp)
    f9c8:	e1bffd17 	ldw	r6,-12(fp)
    f9cc:	e13ffa17 	ldw	r4,-24(fp)
    f9d0:	103ee83a 	callr	r2
    f9d4:	e0bff915 	stw	r2,-28(fp)
    f9d8:	e0bff917 	ldw	r2,-28(fp)
    f9dc:	1004403a 	cmpge	r2,r2,zero
    f9e0:	1000071e 	bne	r2,zero,fa00 <read+0xd0>
        {
          ALT_ERRNO = -rval;
    f9e4:	000fa500 	call	fa50 <alt_get_errno>
    f9e8:	e0fff917 	ldw	r3,-28(fp)
    f9ec:	00c7c83a 	sub	r3,zero,r3
    f9f0:	10c00015 	stw	r3,0(r2)
          return -1;
    f9f4:	00bfffc4 	movi	r2,-1
    f9f8:	e0bffe15 	stw	r2,-8(fp)
    f9fc:	00000e06 	br	fa38 <read+0x108>
        }
        return rval;
    fa00:	e0bff917 	ldw	r2,-28(fp)
    fa04:	e0bffe15 	stw	r2,-8(fp)
    fa08:	00000b06 	br	fa38 <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
    fa0c:	000fa500 	call	fa50 <alt_get_errno>
    fa10:	1007883a 	mov	r3,r2
    fa14:	00800344 	movi	r2,13
    fa18:	18800015 	stw	r2,0(r3)
    fa1c:	00000406 	br	fa30 <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    fa20:	000fa500 	call	fa50 <alt_get_errno>
    fa24:	1007883a 	mov	r3,r2
    fa28:	00801444 	movi	r2,81
    fa2c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    fa30:	00bfffc4 	movi	r2,-1
    fa34:	e0bffe15 	stw	r2,-8(fp)
    fa38:	e0bffe17 	ldw	r2,-8(fp)
}
    fa3c:	e037883a 	mov	sp,fp
    fa40:	dfc00117 	ldw	ra,4(sp)
    fa44:	df000017 	ldw	fp,0(sp)
    fa48:	dec00204 	addi	sp,sp,8
    fa4c:	f800283a 	ret

0000fa50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fa50:	defffd04 	addi	sp,sp,-12
    fa54:	dfc00215 	stw	ra,8(sp)
    fa58:	df000115 	stw	fp,4(sp)
    fa5c:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    fa60:	00800074 	movhi	r2,1
    fa64:	108f7304 	addi	r2,r2,15820
    fa68:	10800017 	ldw	r2,0(r2)
    fa6c:	1005003a 	cmpeq	r2,r2,zero
    fa70:	1000061e 	bne	r2,zero,fa8c <alt_get_errno+0x3c>
    fa74:	00800074 	movhi	r2,1
    fa78:	108f7304 	addi	r2,r2,15820
    fa7c:	10800017 	ldw	r2,0(r2)
    fa80:	103ee83a 	callr	r2
    fa84:	e0bfff15 	stw	r2,-4(fp)
    fa88:	00000306 	br	fa98 <alt_get_errno+0x48>
    fa8c:	00800074 	movhi	r2,1
    fa90:	10961d04 	addi	r2,r2,22644
    fa94:	e0bfff15 	stw	r2,-4(fp)
    fa98:	e0bfff17 	ldw	r2,-4(fp)
}
    fa9c:	e037883a 	mov	sp,fp
    faa0:	dfc00117 	ldw	ra,4(sp)
    faa4:	df000017 	ldw	fp,0(sp)
    faa8:	dec00204 	addi	sp,sp,8
    faac:	f800283a 	ret

0000fab0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    fab0:	defffe04 	addi	sp,sp,-8
    fab4:	df000115 	stw	fp,4(sp)
    fab8:	df000104 	addi	fp,sp,4
    fabc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    fac0:	e0bfff17 	ldw	r2,-4(fp)
    fac4:	108000d0 	cmplti	r2,r2,3
    fac8:	10000d1e 	bne	r2,zero,fb00 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    facc:	e0bfff17 	ldw	r2,-4(fp)
    fad0:	00c00074 	movhi	r3,1
    fad4:	18caef04 	addi	r3,r3,11196
    fad8:	10800324 	muli	r2,r2,12
    fadc:	10c5883a 	add	r2,r2,r3
    fae0:	10800204 	addi	r2,r2,8
    fae4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    fae8:	e0bfff17 	ldw	r2,-4(fp)
    faec:	00c00074 	movhi	r3,1
    faf0:	18caef04 	addi	r3,r3,11196
    faf4:	10800324 	muli	r2,r2,12
    faf8:	10c5883a 	add	r2,r2,r3
    fafc:	10000015 	stw	zero,0(r2)
  }
}
    fb00:	e037883a 	mov	sp,fp
    fb04:	df000017 	ldw	fp,0(sp)
    fb08:	dec00104 	addi	sp,sp,4
    fb0c:	f800283a 	ret

0000fb10 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    fb10:	defff804 	addi	sp,sp,-32
    fb14:	df000715 	stw	fp,28(sp)
    fb18:	df000704 	addi	fp,sp,28
    fb1c:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fb20:	0005303a 	rdctl	r2,status
    fb24:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fb28:	e0fffb17 	ldw	r3,-20(fp)
    fb2c:	00bfff84 	movi	r2,-2
    fb30:	1884703a 	and	r2,r3,r2
    fb34:	1001703a 	wrctl	status,r2
  
  return context;
    fb38:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    fb3c:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    fb40:	d0a00d17 	ldw	r2,-32716(gp)
    fb44:	10c000c4 	addi	r3,r2,3
    fb48:	00bfff04 	movi	r2,-4
    fb4c:	1884703a 	and	r2,r3,r2
    fb50:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    fb54:	d0e00d17 	ldw	r3,-32716(gp)
    fb58:	e0bffe17 	ldw	r2,-8(fp)
    fb5c:	1887883a 	add	r3,r3,r2
    fb60:	00802034 	movhi	r2,128
    fb64:	10800004 	addi	r2,r2,0
    fb68:	10c0072e 	bgeu	r2,r3,fb88 <sbrk+0x78>
    fb6c:	e0bffd17 	ldw	r2,-12(fp)
    fb70:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    fb74:	e0bffa17 	ldw	r2,-24(fp)
    fb78:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    fb7c:	00bfffc4 	movi	r2,-1
    fb80:	e0bfff15 	stw	r2,-4(fp)
    fb84:	00000c06 	br	fbb8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
    fb88:	d0a00d17 	ldw	r2,-32716(gp)
    fb8c:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
    fb90:	d0e00d17 	ldw	r3,-32716(gp)
    fb94:	e0bffe17 	ldw	r2,-8(fp)
    fb98:	1885883a 	add	r2,r3,r2
    fb9c:	d0a00d15 	stw	r2,-32716(gp)
    fba0:	e0bffd17 	ldw	r2,-12(fp)
    fba4:	e0bff915 	stw	r2,-28(fp)
    fba8:	e0bff917 	ldw	r2,-28(fp)
    fbac:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    fbb0:	e0bffc17 	ldw	r2,-16(fp)
    fbb4:	e0bfff15 	stw	r2,-4(fp)
    fbb8:	e0bfff17 	ldw	r2,-4(fp)
} 
    fbbc:	e037883a 	mov	sp,fp
    fbc0:	df000017 	ldw	fp,0(sp)
    fbc4:	dec00104 	addi	sp,sp,4
    fbc8:	f800283a 	ret

0000fbcc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    fbcc:	defff704 	addi	sp,sp,-36
    fbd0:	dfc00815 	stw	ra,32(sp)
    fbd4:	df000715 	stw	fp,28(sp)
    fbd8:	df000704 	addi	fp,sp,28
    fbdc:	e13ffb15 	stw	r4,-20(fp)
    fbe0:	e17ffc15 	stw	r5,-16(fp)
    fbe4:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    fbe8:	e0bffb17 	ldw	r2,-20(fp)
    fbec:	1004803a 	cmplt	r2,r2,zero
    fbf0:	1000081e 	bne	r2,zero,fc14 <write+0x48>
    fbf4:	e0bffb17 	ldw	r2,-20(fp)
    fbf8:	10800324 	muli	r2,r2,12
    fbfc:	1007883a 	mov	r3,r2
    fc00:	00800074 	movhi	r2,1
    fc04:	108aef04 	addi	r2,r2,11196
    fc08:	1887883a 	add	r3,r3,r2
    fc0c:	e0ffff15 	stw	r3,-4(fp)
    fc10:	00000106 	br	fc18 <write+0x4c>
    fc14:	e03fff15 	stw	zero,-4(fp)
    fc18:	e0bfff17 	ldw	r2,-4(fp)
    fc1c:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
    fc20:	e0bffa17 	ldw	r2,-24(fp)
    fc24:	1005003a 	cmpeq	r2,r2,zero
    fc28:	1000241e 	bne	r2,zero,fcbc <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    fc2c:	e0bffa17 	ldw	r2,-24(fp)
    fc30:	10800217 	ldw	r2,8(r2)
    fc34:	108000cc 	andi	r2,r2,3
    fc38:	1005003a 	cmpeq	r2,r2,zero
    fc3c:	10001a1e 	bne	r2,zero,fca8 <write+0xdc>
    fc40:	e0bffa17 	ldw	r2,-24(fp)
    fc44:	10800017 	ldw	r2,0(r2)
    fc48:	10800617 	ldw	r2,24(r2)
    fc4c:	1005003a 	cmpeq	r2,r2,zero
    fc50:	1000151e 	bne	r2,zero,fca8 <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    fc54:	e0bffa17 	ldw	r2,-24(fp)
    fc58:	10800017 	ldw	r2,0(r2)
    fc5c:	10800617 	ldw	r2,24(r2)
    fc60:	e17ffc17 	ldw	r5,-16(fp)
    fc64:	e1bffd17 	ldw	r6,-12(fp)
    fc68:	e13ffa17 	ldw	r4,-24(fp)
    fc6c:	103ee83a 	callr	r2
    fc70:	e0bff915 	stw	r2,-28(fp)
    fc74:	e0bff917 	ldw	r2,-28(fp)
    fc78:	1004403a 	cmpge	r2,r2,zero
    fc7c:	1000071e 	bne	r2,zero,fc9c <write+0xd0>
      {
        ALT_ERRNO = -rval;
    fc80:	000fcec0 	call	fcec <alt_get_errno>
    fc84:	e0fff917 	ldw	r3,-28(fp)
    fc88:	00c7c83a 	sub	r3,zero,r3
    fc8c:	10c00015 	stw	r3,0(r2)
        return -1;
    fc90:	00bfffc4 	movi	r2,-1
    fc94:	e0bffe15 	stw	r2,-8(fp)
    fc98:	00000e06 	br	fcd4 <write+0x108>
      }
      return rval;
    fc9c:	e0bff917 	ldw	r2,-28(fp)
    fca0:	e0bffe15 	stw	r2,-8(fp)
    fca4:	00000b06 	br	fcd4 <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
    fca8:	000fcec0 	call	fcec <alt_get_errno>
    fcac:	1007883a 	mov	r3,r2
    fcb0:	00800344 	movi	r2,13
    fcb4:	18800015 	stw	r2,0(r3)
    fcb8:	00000406 	br	fccc <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    fcbc:	000fcec0 	call	fcec <alt_get_errno>
    fcc0:	1007883a 	mov	r3,r2
    fcc4:	00801444 	movi	r2,81
    fcc8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    fccc:	00bfffc4 	movi	r2,-1
    fcd0:	e0bffe15 	stw	r2,-8(fp)
    fcd4:	e0bffe17 	ldw	r2,-8(fp)
}
    fcd8:	e037883a 	mov	sp,fp
    fcdc:	dfc00117 	ldw	ra,4(sp)
    fce0:	df000017 	ldw	fp,0(sp)
    fce4:	dec00204 	addi	sp,sp,8
    fce8:	f800283a 	ret

0000fcec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fcec:	defffd04 	addi	sp,sp,-12
    fcf0:	dfc00215 	stw	ra,8(sp)
    fcf4:	df000115 	stw	fp,4(sp)
    fcf8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    fcfc:	00800074 	movhi	r2,1
    fd00:	108f7304 	addi	r2,r2,15820
    fd04:	10800017 	ldw	r2,0(r2)
    fd08:	1005003a 	cmpeq	r2,r2,zero
    fd0c:	1000061e 	bne	r2,zero,fd28 <alt_get_errno+0x3c>
    fd10:	00800074 	movhi	r2,1
    fd14:	108f7304 	addi	r2,r2,15820
    fd18:	10800017 	ldw	r2,0(r2)
    fd1c:	103ee83a 	callr	r2
    fd20:	e0bfff15 	stw	r2,-4(fp)
    fd24:	00000306 	br	fd34 <alt_get_errno+0x48>
    fd28:	00800074 	movhi	r2,1
    fd2c:	10961d04 	addi	r2,r2,22644
    fd30:	e0bfff15 	stw	r2,-4(fp)
    fd34:	e0bfff17 	ldw	r2,-4(fp)
}
    fd38:	e037883a 	mov	sp,fp
    fd3c:	dfc00117 	ldw	ra,4(sp)
    fd40:	df000017 	ldw	fp,0(sp)
    fd44:	dec00204 	addi	sp,sp,8
    fd48:	f800283a 	ret

0000fd4c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    fd4c:	defffd04 	addi	sp,sp,-12
    fd50:	dfc00215 	stw	ra,8(sp)
    fd54:	df000115 	stw	fp,4(sp)
    fd58:	df000104 	addi	fp,sp,4
    fd5c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
    fd60:	00115d40 	call	115d4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    fd64:	00800044 	movi	r2,1
    fd68:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    fd6c:	e037883a 	mov	sp,fp
    fd70:	dfc00117 	ldw	ra,4(sp)
    fd74:	df000017 	ldw	fp,0(sp)
    fd78:	dec00204 	addi	sp,sp,8
    fd7c:	f800283a 	ret

0000fd80 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    fd80:	defffe04 	addi	sp,sp,-8
    fd84:	dfc00115 	stw	ra,4(sp)
    fd88:	df000015 	stw	fp,0(sp)
    fd8c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    fd90:	01002034 	movhi	r4,128
    fd94:	21081004 	addi	r4,r4,8256
    fd98:	000b883a 	mov	r5,zero
    fd9c:	000d883a 	mov	r6,zero
    fda0:	01c0fa04 	movi	r7,1000
    fda4:	00109300 	call	10930 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    fda8:	01000074 	movhi	r4,1
    fdac:	210b5904 	addi	r4,r4,11620
    fdb0:	000b883a 	mov	r5,zero
    fdb4:	01800204 	movi	r6,8
    fdb8:	000ff5c0 	call	ff5c <altera_avalon_jtag_uart_init>
    fdbc:	01000074 	movhi	r4,1
    fdc0:	210b4f04 	addi	r4,r4,11580
    fdc4:	000fddc0 	call	fddc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
}
    fdc8:	e037883a 	mov	sp,fp
    fdcc:	dfc00117 	ldw	ra,4(sp)
    fdd0:	df000017 	ldw	fp,0(sp)
    fdd4:	dec00204 	addi	sp,sp,8
    fdd8:	f800283a 	ret

0000fddc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    fddc:	defffd04 	addi	sp,sp,-12
    fde0:	dfc00215 	stw	ra,8(sp)
    fde4:	df000115 	stw	fp,4(sp)
    fde8:	df000104 	addi	fp,sp,4
    fdec:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    fdf0:	e13fff17 	ldw	r4,-4(fp)
    fdf4:	01400074 	movhi	r5,1
    fdf8:	294f7004 	addi	r5,r5,15808
    fdfc:	0010b580 	call	10b58 <alt_dev_llist_insert>
}
    fe00:	e037883a 	mov	sp,fp
    fe04:	dfc00117 	ldw	ra,4(sp)
    fe08:	df000017 	ldw	fp,0(sp)
    fe0c:	dec00204 	addi	sp,sp,8
    fe10:	f800283a 	ret

0000fe14 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    fe14:	defffa04 	addi	sp,sp,-24
    fe18:	dfc00515 	stw	ra,20(sp)
    fe1c:	df000415 	stw	fp,16(sp)
    fe20:	df000404 	addi	fp,sp,16
    fe24:	e13ffd15 	stw	r4,-12(fp)
    fe28:	e17ffe15 	stw	r5,-8(fp)
    fe2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fe30:	e0bffd17 	ldw	r2,-12(fp)
    fe34:	10800017 	ldw	r2,0(r2)
    fe38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    fe3c:	e0bffc17 	ldw	r2,-16(fp)
    fe40:	11000a04 	addi	r4,r2,40
    fe44:	e0bffd17 	ldw	r2,-12(fp)
    fe48:	11c00217 	ldw	r7,8(r2)
    fe4c:	e17ffe17 	ldw	r5,-8(fp)
    fe50:	e1bfff17 	ldw	r6,-4(fp)
    fe54:	001045c0 	call	1045c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    fe58:	e037883a 	mov	sp,fp
    fe5c:	dfc00117 	ldw	ra,4(sp)
    fe60:	df000017 	ldw	fp,0(sp)
    fe64:	dec00204 	addi	sp,sp,8
    fe68:	f800283a 	ret

0000fe6c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    fe6c:	defffa04 	addi	sp,sp,-24
    fe70:	dfc00515 	stw	ra,20(sp)
    fe74:	df000415 	stw	fp,16(sp)
    fe78:	df000404 	addi	fp,sp,16
    fe7c:	e13ffd15 	stw	r4,-12(fp)
    fe80:	e17ffe15 	stw	r5,-8(fp)
    fe84:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fe88:	e0bffd17 	ldw	r2,-12(fp)
    fe8c:	10800017 	ldw	r2,0(r2)
    fe90:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    fe94:	e0bffc17 	ldw	r2,-16(fp)
    fe98:	11000a04 	addi	r4,r2,40
    fe9c:	e0bffd17 	ldw	r2,-12(fp)
    fea0:	11c00217 	ldw	r7,8(r2)
    fea4:	e17ffe17 	ldw	r5,-8(fp)
    fea8:	e1bfff17 	ldw	r6,-4(fp)
    feac:	00106800 	call	10680 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    feb0:	e037883a 	mov	sp,fp
    feb4:	dfc00117 	ldw	ra,4(sp)
    feb8:	df000017 	ldw	fp,0(sp)
    febc:	dec00204 	addi	sp,sp,8
    fec0:	f800283a 	ret

0000fec4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    fec4:	defffc04 	addi	sp,sp,-16
    fec8:	dfc00315 	stw	ra,12(sp)
    fecc:	df000215 	stw	fp,8(sp)
    fed0:	df000204 	addi	fp,sp,8
    fed4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fed8:	e0bfff17 	ldw	r2,-4(fp)
    fedc:	10800017 	ldw	r2,0(r2)
    fee0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    fee4:	e0bffe17 	ldw	r2,-8(fp)
    fee8:	11000a04 	addi	r4,r2,40
    feec:	e0bfff17 	ldw	r2,-4(fp)
    fef0:	11400217 	ldw	r5,8(r2)
    fef4:	00102f40 	call	102f4 <altera_avalon_jtag_uart_close>
}
    fef8:	e037883a 	mov	sp,fp
    fefc:	dfc00117 	ldw	ra,4(sp)
    ff00:	df000017 	ldw	fp,0(sp)
    ff04:	dec00204 	addi	sp,sp,8
    ff08:	f800283a 	ret

0000ff0c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    ff0c:	defffa04 	addi	sp,sp,-24
    ff10:	dfc00515 	stw	ra,20(sp)
    ff14:	df000415 	stw	fp,16(sp)
    ff18:	df000404 	addi	fp,sp,16
    ff1c:	e13ffd15 	stw	r4,-12(fp)
    ff20:	e17ffe15 	stw	r5,-8(fp)
    ff24:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    ff28:	e0bffd17 	ldw	r2,-12(fp)
    ff2c:	10800017 	ldw	r2,0(r2)
    ff30:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    ff34:	e0bffc17 	ldw	r2,-16(fp)
    ff38:	11000a04 	addi	r4,r2,40
    ff3c:	e17ffe17 	ldw	r5,-8(fp)
    ff40:	e1bfff17 	ldw	r6,-4(fp)
    ff44:	00103680 	call	10368 <altera_avalon_jtag_uart_ioctl>
}
    ff48:	e037883a 	mov	sp,fp
    ff4c:	dfc00117 	ldw	ra,4(sp)
    ff50:	df000017 	ldw	fp,0(sp)
    ff54:	dec00204 	addi	sp,sp,8
    ff58:	f800283a 	ret

0000ff5c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    ff5c:	defffa04 	addi	sp,sp,-24
    ff60:	dfc00515 	stw	ra,20(sp)
    ff64:	df000415 	stw	fp,16(sp)
    ff68:	df000404 	addi	fp,sp,16
    ff6c:	e13ffd15 	stw	r4,-12(fp)
    ff70:	e17ffe15 	stw	r5,-8(fp)
    ff74:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ff78:	e0fffd17 	ldw	r3,-12(fp)
    ff7c:	00800044 	movi	r2,1
    ff80:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    ff84:	e0bffd17 	ldw	r2,-12(fp)
    ff88:	10800017 	ldw	r2,0(r2)
    ff8c:	11000104 	addi	r4,r2,4
    ff90:	e0bffd17 	ldw	r2,-12(fp)
    ff94:	10800817 	ldw	r2,32(r2)
    ff98:	1007883a 	mov	r3,r2
    ff9c:	2005883a 	mov	r2,r4
    ffa0:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    ffa4:	e13ffe17 	ldw	r4,-8(fp)
    ffa8:	e17fff17 	ldw	r5,-4(fp)
    ffac:	d8000015 	stw	zero,0(sp)
    ffb0:	01800074 	movhi	r6,1
    ffb4:	31800704 	addi	r6,r6,28
    ffb8:	e1fffd17 	ldw	r7,-12(fp)
    ffbc:	0010d640 	call	10d64 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    ffc0:	e0bffd17 	ldw	r2,-12(fp)
    ffc4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    ffc8:	e0bffd17 	ldw	r2,-12(fp)
    ffcc:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    ffd0:	00800074 	movhi	r2,1
    ffd4:	10962504 	addi	r2,r2,22676
    ffd8:	10800017 	ldw	r2,0(r2)
    ffdc:	100b883a 	mov	r5,r2
    ffe0:	01800074 	movhi	r6,1
    ffe4:	31809104 	addi	r6,r6,580
    ffe8:	e1fffd17 	ldw	r7,-12(fp)
    ffec:	00109c00 	call	109c0 <alt_alarm_start>
    fff0:	1004403a 	cmpge	r2,r2,zero
    fff4:	1000041e 	bne	r2,zero,10008 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    fff8:	e0fffd17 	ldw	r3,-12(fp)
    fffc:	00a00034 	movhi	r2,32768
   10000:	10bfffc4 	addi	r2,r2,-1
   10004:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   10008:	e037883a 	mov	sp,fp
   1000c:	dfc00117 	ldw	ra,4(sp)
   10010:	df000017 	ldw	fp,0(sp)
   10014:	dec00204 	addi	sp,sp,8
   10018:	f800283a 	ret

0001001c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   1001c:	defff804 	addi	sp,sp,-32
   10020:	df000715 	stw	fp,28(sp)
   10024:	df000704 	addi	fp,sp,28
   10028:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   1002c:	e0bfff17 	ldw	r2,-4(fp)
   10030:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   10034:	e0bffe17 	ldw	r2,-8(fp)
   10038:	10800017 	ldw	r2,0(r2)
   1003c:	e0bffd15 	stw	r2,-12(fp)
   10040:	00000006 	br	10044 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   10044:	e0bffd17 	ldw	r2,-12(fp)
   10048:	10800104 	addi	r2,r2,4
   1004c:	10800037 	ldwio	r2,0(r2)
   10050:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   10054:	e0bffc17 	ldw	r2,-16(fp)
   10058:	1080c00c 	andi	r2,r2,768
   1005c:	1005003a 	cmpeq	r2,r2,zero
   10060:	1000741e 	bne	r2,zero,10234 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   10064:	e0bffc17 	ldw	r2,-16(fp)
   10068:	1080400c 	andi	r2,r2,256
   1006c:	1005003a 	cmpeq	r2,r2,zero
   10070:	1000351e 	bne	r2,zero,10148 <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   10074:	00800074 	movhi	r2,1
   10078:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1007c:	e0bffe17 	ldw	r2,-8(fp)
   10080:	10800a17 	ldw	r2,40(r2)
   10084:	10800044 	addi	r2,r2,1
   10088:	1081ffcc 	andi	r2,r2,2047
   1008c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   10090:	e0bffe17 	ldw	r2,-8(fp)
   10094:	10c00b17 	ldw	r3,44(r2)
   10098:	e0bffa17 	ldw	r2,-24(fp)
   1009c:	18801626 	beq	r3,r2,100f8 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   100a0:	e0bffd17 	ldw	r2,-12(fp)
   100a4:	10800037 	ldwio	r2,0(r2)
   100a8:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   100ac:	e0bffb17 	ldw	r2,-20(fp)
   100b0:	10a0000c 	andi	r2,r2,32768
   100b4:	1005003a 	cmpeq	r2,r2,zero
   100b8:	10000f1e 	bne	r2,zero,100f8 <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   100bc:	e0bffe17 	ldw	r2,-8(fp)
   100c0:	10c00a17 	ldw	r3,40(r2)
   100c4:	e0bffb17 	ldw	r2,-20(fp)
   100c8:	1009883a 	mov	r4,r2
   100cc:	e0bffe17 	ldw	r2,-8(fp)
   100d0:	1885883a 	add	r2,r3,r2
   100d4:	10800e04 	addi	r2,r2,56
   100d8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   100dc:	e0bffe17 	ldw	r2,-8(fp)
   100e0:	10800a17 	ldw	r2,40(r2)
   100e4:	10800044 	addi	r2,r2,1
   100e8:	10c1ffcc 	andi	r3,r2,2047
   100ec:	e0bffe17 	ldw	r2,-8(fp)
   100f0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   100f4:	003fe106 	br	1007c <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   100f8:	e0bffb17 	ldw	r2,-20(fp)
   100fc:	10bfffec 	andhi	r2,r2,65535
   10100:	1005003a 	cmpeq	r2,r2,zero
   10104:	1000101e 	bne	r2,zero,10148 <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   10108:	e0bffe17 	ldw	r2,-8(fp)
   1010c:	10c00817 	ldw	r3,32(r2)
   10110:	00bfff84 	movi	r2,-2
   10114:	1886703a 	and	r3,r3,r2
   10118:	e0bffe17 	ldw	r2,-8(fp)
   1011c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   10120:	e0bffd17 	ldw	r2,-12(fp)
   10124:	11000104 	addi	r4,r2,4
   10128:	e0bffe17 	ldw	r2,-8(fp)
   1012c:	10800817 	ldw	r2,32(r2)
   10130:	1007883a 	mov	r3,r2
   10134:	2005883a 	mov	r2,r4
   10138:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1013c:	e0bffd17 	ldw	r2,-12(fp)
   10140:	10800104 	addi	r2,r2,4
   10144:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   10148:	e0bffc17 	ldw	r2,-16(fp)
   1014c:	1080800c 	andi	r2,r2,512
   10150:	1005003a 	cmpeq	r2,r2,zero
   10154:	103fbb1e 	bne	r2,zero,10044 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   10158:	e0bffc17 	ldw	r2,-16(fp)
   1015c:	10bfffec 	andhi	r2,r2,65535
   10160:	1004d43a 	srli	r2,r2,16
   10164:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   10168:	00001506 	br	101c0 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   1016c:	e13ffd17 	ldw	r4,-12(fp)
   10170:	e0bffe17 	ldw	r2,-8(fp)
   10174:	10c00d17 	ldw	r3,52(r2)
   10178:	e0bffe17 	ldw	r2,-8(fp)
   1017c:	1885883a 	add	r2,r3,r2
   10180:	10820e04 	addi	r2,r2,2104
   10184:	10800003 	ldbu	r2,0(r2)
   10188:	10c03fcc 	andi	r3,r2,255
   1018c:	18c0201c 	xori	r3,r3,128
   10190:	18ffe004 	addi	r3,r3,-128
   10194:	2005883a 	mov	r2,r4
   10198:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1019c:	e0bffe17 	ldw	r2,-8(fp)
   101a0:	10800d17 	ldw	r2,52(r2)
   101a4:	10800044 	addi	r2,r2,1
   101a8:	10c1ffcc 	andi	r3,r2,2047
   101ac:	e0bffe17 	ldw	r2,-8(fp)
   101b0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   101b4:	e0bff917 	ldw	r2,-28(fp)
   101b8:	10bfffc4 	addi	r2,r2,-1
   101bc:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   101c0:	e0bff917 	ldw	r2,-28(fp)
   101c4:	1005003a 	cmpeq	r2,r2,zero
   101c8:	1000051e 	bne	r2,zero,101e0 <altera_avalon_jtag_uart_irq+0x1c4>
   101cc:	e0bffe17 	ldw	r2,-8(fp)
   101d0:	10c00d17 	ldw	r3,52(r2)
   101d4:	e0bffe17 	ldw	r2,-8(fp)
   101d8:	10800c17 	ldw	r2,48(r2)
   101dc:	18bfe31e 	bne	r3,r2,1016c <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   101e0:	e0bff917 	ldw	r2,-28(fp)
   101e4:	1005003a 	cmpeq	r2,r2,zero
   101e8:	103f961e 	bne	r2,zero,10044 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   101ec:	e0bffe17 	ldw	r2,-8(fp)
   101f0:	10c00817 	ldw	r3,32(r2)
   101f4:	00bfff44 	movi	r2,-3
   101f8:	1886703a 	and	r3,r3,r2
   101fc:	e0bffe17 	ldw	r2,-8(fp)
   10200:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   10204:	e0bffe17 	ldw	r2,-8(fp)
   10208:	10800017 	ldw	r2,0(r2)
   1020c:	11000104 	addi	r4,r2,4
   10210:	e0bffe17 	ldw	r2,-8(fp)
   10214:	10800817 	ldw	r2,32(r2)
   10218:	1007883a 	mov	r3,r2
   1021c:	2005883a 	mov	r2,r4
   10220:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   10224:	e0bffd17 	ldw	r2,-12(fp)
   10228:	10800104 	addi	r2,r2,4
   1022c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   10230:	003f8406 	br	10044 <altera_avalon_jtag_uart_irq+0x28>
}
   10234:	e037883a 	mov	sp,fp
   10238:	df000017 	ldw	fp,0(sp)
   1023c:	dec00104 	addi	sp,sp,4
   10240:	f800283a 	ret

00010244 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   10244:	defffc04 	addi	sp,sp,-16
   10248:	df000315 	stw	fp,12(sp)
   1024c:	df000304 	addi	fp,sp,12
   10250:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   10254:	e0bfff17 	ldw	r2,-4(fp)
   10258:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   1025c:	e0bffe17 	ldw	r2,-8(fp)
   10260:	10800017 	ldw	r2,0(r2)
   10264:	10800104 	addi	r2,r2,4
   10268:	10800037 	ldwio	r2,0(r2)
   1026c:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   10270:	e0bffd17 	ldw	r2,-12(fp)
   10274:	1081000c 	andi	r2,r2,1024
   10278:	1005003a 	cmpeq	r2,r2,zero
   1027c:	10000c1e 	bne	r2,zero,102b0 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   10280:	e0bffe17 	ldw	r2,-8(fp)
   10284:	10800017 	ldw	r2,0(r2)
   10288:	11000104 	addi	r4,r2,4
   1028c:	e0bffe17 	ldw	r2,-8(fp)
   10290:	10800817 	ldw	r2,32(r2)
   10294:	10810014 	ori	r2,r2,1024
   10298:	1007883a 	mov	r3,r2
   1029c:	2005883a 	mov	r2,r4
   102a0:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   102a4:	e0bffe17 	ldw	r2,-8(fp)
   102a8:	10000915 	stw	zero,36(r2)
   102ac:	00000a06 	br	102d8 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   102b0:	e0bffe17 	ldw	r2,-8(fp)
   102b4:	10c00917 	ldw	r3,36(r2)
   102b8:	00a00034 	movhi	r2,32768
   102bc:	10bfff04 	addi	r2,r2,-4
   102c0:	10c00536 	bltu	r2,r3,102d8 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   102c4:	e0bffe17 	ldw	r2,-8(fp)
   102c8:	10800917 	ldw	r2,36(r2)
   102cc:	10c00044 	addi	r3,r2,1
   102d0:	e0bffe17 	ldw	r2,-8(fp)
   102d4:	10c00915 	stw	r3,36(r2)
   102d8:	00800074 	movhi	r2,1
   102dc:	10962504 	addi	r2,r2,22676
   102e0:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   102e4:	e037883a 	mov	sp,fp
   102e8:	df000017 	ldw	fp,0(sp)
   102ec:	dec00104 	addi	sp,sp,4
   102f0:	f800283a 	ret

000102f4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   102f4:	defffc04 	addi	sp,sp,-16
   102f8:	df000315 	stw	fp,12(sp)
   102fc:	df000304 	addi	fp,sp,12
   10300:	e13ffd15 	stw	r4,-12(fp)
   10304:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   10308:	00000706 	br	10328 <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   1030c:	e0bffe17 	ldw	r2,-8(fp)
   10310:	1090000c 	andi	r2,r2,16384
   10314:	1005003a 	cmpeq	r2,r2,zero
   10318:	1000031e 	bne	r2,zero,10328 <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   1031c:	00bffd44 	movi	r2,-11
   10320:	e0bfff15 	stw	r2,-4(fp)
   10324:	00000b06 	br	10354 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   10328:	e0bffd17 	ldw	r2,-12(fp)
   1032c:	10c00d17 	ldw	r3,52(r2)
   10330:	e0bffd17 	ldw	r2,-12(fp)
   10334:	10800c17 	ldw	r2,48(r2)
   10338:	18800526 	beq	r3,r2,10350 <altera_avalon_jtag_uart_close+0x5c>
   1033c:	e0bffd17 	ldw	r2,-12(fp)
   10340:	10c00917 	ldw	r3,36(r2)
   10344:	e0bffd17 	ldw	r2,-12(fp)
   10348:	10800117 	ldw	r2,4(r2)
   1034c:	18bfef36 	bltu	r3,r2,1030c <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   10350:	e03fff15 	stw	zero,-4(fp)
   10354:	e0bfff17 	ldw	r2,-4(fp)
}
   10358:	e037883a 	mov	sp,fp
   1035c:	df000017 	ldw	fp,0(sp)
   10360:	dec00104 	addi	sp,sp,4
   10364:	f800283a 	ret

00010368 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   10368:	defff804 	addi	sp,sp,-32
   1036c:	df000715 	stw	fp,28(sp)
   10370:	df000704 	addi	fp,sp,28
   10374:	e13ffb15 	stw	r4,-20(fp)
   10378:	e17ffc15 	stw	r5,-16(fp)
   1037c:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   10380:	00bff9c4 	movi	r2,-25
   10384:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   10388:	e0bffc17 	ldw	r2,-16(fp)
   1038c:	e0bfff15 	stw	r2,-4(fp)
   10390:	e0ffff17 	ldw	r3,-4(fp)
   10394:	189a8060 	cmpeqi	r2,r3,27137
   10398:	1000041e 	bne	r2,zero,103ac <altera_avalon_jtag_uart_ioctl+0x44>
   1039c:	e0ffff17 	ldw	r3,-4(fp)
   103a0:	189a80a0 	cmpeqi	r2,r3,27138
   103a4:	10001b1e 	bne	r2,zero,10414 <altera_avalon_jtag_uart_ioctl+0xac>
   103a8:	00002706 	br	10448 <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   103ac:	e0bffb17 	ldw	r2,-20(fp)
   103b0:	10c00117 	ldw	r3,4(r2)
   103b4:	00a00034 	movhi	r2,32768
   103b8:	10bfffc4 	addi	r2,r2,-1
   103bc:	18802226 	beq	r3,r2,10448 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   103c0:	e0bffd17 	ldw	r2,-12(fp)
   103c4:	10800017 	ldw	r2,0(r2)
   103c8:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   103cc:	e0bff917 	ldw	r2,-28(fp)
   103d0:	10800090 	cmplti	r2,r2,2
   103d4:	1000071e 	bne	r2,zero,103f4 <altera_avalon_jtag_uart_ioctl+0x8c>
   103d8:	e0fff917 	ldw	r3,-28(fp)
   103dc:	00a00034 	movhi	r2,32768
   103e0:	10bfffc4 	addi	r2,r2,-1
   103e4:	18800326 	beq	r3,r2,103f4 <altera_avalon_jtag_uart_ioctl+0x8c>
   103e8:	e0bff917 	ldw	r2,-28(fp)
   103ec:	e0bffe15 	stw	r2,-8(fp)
   103f0:	00000306 	br	10400 <altera_avalon_jtag_uart_ioctl+0x98>
   103f4:	00e00034 	movhi	r3,32768
   103f8:	18ffff84 	addi	r3,r3,-2
   103fc:	e0fffe15 	stw	r3,-8(fp)
   10400:	e0bffb17 	ldw	r2,-20(fp)
   10404:	e0fffe17 	ldw	r3,-8(fp)
   10408:	10c00115 	stw	r3,4(r2)
      rc = 0;
   1040c:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   10410:	00000d06 	br	10448 <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   10414:	e0bffb17 	ldw	r2,-20(fp)
   10418:	10c00117 	ldw	r3,4(r2)
   1041c:	00a00034 	movhi	r2,32768
   10420:	10bfffc4 	addi	r2,r2,-1
   10424:	18800826 	beq	r3,r2,10448 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   10428:	e13ffd17 	ldw	r4,-12(fp)
   1042c:	e0bffb17 	ldw	r2,-20(fp)
   10430:	10c00917 	ldw	r3,36(r2)
   10434:	e0bffb17 	ldw	r2,-20(fp)
   10438:	10800117 	ldw	r2,4(r2)
   1043c:	1885803a 	cmpltu	r2,r3,r2
   10440:	20800015 	stw	r2,0(r4)
      rc = 0;
   10444:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   10448:	e0bffa17 	ldw	r2,-24(fp)
}
   1044c:	e037883a 	mov	sp,fp
   10450:	df000017 	ldw	fp,0(sp)
   10454:	dec00104 	addi	sp,sp,4
   10458:	f800283a 	ret

0001045c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   1045c:	defff204 	addi	sp,sp,-56
   10460:	dfc00d15 	stw	ra,52(sp)
   10464:	df000c15 	stw	fp,48(sp)
   10468:	df000c04 	addi	fp,sp,48
   1046c:	e13ffb15 	stw	r4,-20(fp)
   10470:	e17ffc15 	stw	r5,-16(fp)
   10474:	e1bffd15 	stw	r6,-12(fp)
   10478:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   1047c:	e0bffc17 	ldw	r2,-16(fp)
   10480:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   10484:	00004806 	br	105a8 <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   10488:	e0bffb17 	ldw	r2,-20(fp)
   1048c:	10800a17 	ldw	r2,40(r2)
   10490:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   10494:	e0bffb17 	ldw	r2,-20(fp)
   10498:	10800b17 	ldw	r2,44(r2)
   1049c:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   104a0:	e0fff717 	ldw	r3,-36(fp)
   104a4:	e0bff617 	ldw	r2,-40(fp)
   104a8:	18800536 	bltu	r3,r2,104c0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   104ac:	e0bff717 	ldw	r2,-36(fp)
   104b0:	e0fff617 	ldw	r3,-40(fp)
   104b4:	10c5c83a 	sub	r2,r2,r3
   104b8:	e0bff815 	stw	r2,-32(fp)
   104bc:	00000406 	br	104d0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   104c0:	00820004 	movi	r2,2048
   104c4:	e0fff617 	ldw	r3,-40(fp)
   104c8:	10c5c83a 	sub	r2,r2,r3
   104cc:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   104d0:	e0bff817 	ldw	r2,-32(fp)
   104d4:	1005003a 	cmpeq	r2,r2,zero
   104d8:	10001f1e 	bne	r2,zero,10558 <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   104dc:	e0fffd17 	ldw	r3,-12(fp)
   104e0:	e0bff817 	ldw	r2,-32(fp)
   104e4:	1880022e 	bgeu	r3,r2,104f0 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   104e8:	e0bffd17 	ldw	r2,-12(fp)
   104ec:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   104f0:	e0bffb17 	ldw	r2,-20(fp)
   104f4:	10c00e04 	addi	r3,r2,56
   104f8:	e0bff617 	ldw	r2,-40(fp)
   104fc:	1887883a 	add	r3,r3,r2
   10500:	e0bffa17 	ldw	r2,-24(fp)
   10504:	1009883a 	mov	r4,r2
   10508:	180b883a 	mov	r5,r3
   1050c:	e1bff817 	ldw	r6,-32(fp)
   10510:	000125c0 	call	125c <memcpy>
      ptr   += n;
   10514:	e0fff817 	ldw	r3,-32(fp)
   10518:	e0bffa17 	ldw	r2,-24(fp)
   1051c:	10c5883a 	add	r2,r2,r3
   10520:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   10524:	e0fffd17 	ldw	r3,-12(fp)
   10528:	e0bff817 	ldw	r2,-32(fp)
   1052c:	1885c83a 	sub	r2,r3,r2
   10530:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10534:	e0fff617 	ldw	r3,-40(fp)
   10538:	e0bff817 	ldw	r2,-32(fp)
   1053c:	1885883a 	add	r2,r3,r2
   10540:	10c1ffcc 	andi	r3,r2,2047
   10544:	e0bffb17 	ldw	r2,-20(fp)
   10548:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   1054c:	e0bffd17 	ldw	r2,-12(fp)
   10550:	10800048 	cmpgei	r2,r2,1
   10554:	103fcc1e 	bne	r2,zero,10488 <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   10558:	e0fffa17 	ldw	r3,-24(fp)
   1055c:	e0bffc17 	ldw	r2,-16(fp)
   10560:	1880141e 	bne	r3,r2,105b4 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   10564:	e0bffe17 	ldw	r2,-8(fp)
   10568:	1090000c 	andi	r2,r2,16384
   1056c:	1004c03a 	cmpne	r2,r2,zero
   10570:	1000101e 	bne	r2,zero,105b4 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   10574:	e0bffb17 	ldw	r2,-20(fp)
   10578:	10c00a17 	ldw	r3,40(r2)
   1057c:	e0bff717 	ldw	r2,-36(fp)
   10580:	1880051e 	bne	r3,r2,10598 <altera_avalon_jtag_uart_read+0x13c>
   10584:	e0bffb17 	ldw	r2,-20(fp)
   10588:	10c00917 	ldw	r3,36(r2)
   1058c:	e0bffb17 	ldw	r2,-20(fp)
   10590:	10800117 	ldw	r2,4(r2)
   10594:	18bff736 	bltu	r3,r2,10574 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   10598:	e0bffb17 	ldw	r2,-20(fp)
   1059c:	10c00a17 	ldw	r3,40(r2)
   105a0:	e0bff717 	ldw	r2,-36(fp)
   105a4:	18800326 	beq	r3,r2,105b4 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   105a8:	e0bffd17 	ldw	r2,-12(fp)
   105ac:	10800048 	cmpgei	r2,r2,1
   105b0:	103fb51e 	bne	r2,zero,10488 <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   105b4:	e0fffa17 	ldw	r3,-24(fp)
   105b8:	e0bffc17 	ldw	r2,-16(fp)
   105bc:	18801926 	beq	r3,r2,10624 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   105c0:	0005303a 	rdctl	r2,status
   105c4:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   105c8:	e0fff517 	ldw	r3,-44(fp)
   105cc:	00bfff84 	movi	r2,-2
   105d0:	1884703a 	and	r2,r3,r2
   105d4:	1001703a 	wrctl	status,r2
  
  return context;
   105d8:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   105dc:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   105e0:	e0bffb17 	ldw	r2,-20(fp)
   105e4:	10800817 	ldw	r2,32(r2)
   105e8:	10c00054 	ori	r3,r2,1
   105ec:	e0bffb17 	ldw	r2,-20(fp)
   105f0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   105f4:	e0bffb17 	ldw	r2,-20(fp)
   105f8:	10800017 	ldw	r2,0(r2)
   105fc:	11000104 	addi	r4,r2,4
   10600:	e0bffb17 	ldw	r2,-20(fp)
   10604:	10800817 	ldw	r2,32(r2)
   10608:	1007883a 	mov	r3,r2
   1060c:	2005883a 	mov	r2,r4
   10610:	10c00035 	stwio	r3,0(r2)
   10614:	e0bff917 	ldw	r2,-28(fp)
   10618:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1061c:	e0bff417 	ldw	r2,-48(fp)
   10620:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   10624:	e0fffa17 	ldw	r3,-24(fp)
   10628:	e0bffc17 	ldw	r2,-16(fp)
   1062c:	18800526 	beq	r3,r2,10644 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   10630:	e0fffa17 	ldw	r3,-24(fp)
   10634:	e0bffc17 	ldw	r2,-16(fp)
   10638:	1887c83a 	sub	r3,r3,r2
   1063c:	e0ffff15 	stw	r3,-4(fp)
   10640:	00000906 	br	10668 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   10644:	e0bffe17 	ldw	r2,-8(fp)
   10648:	1090000c 	andi	r2,r2,16384
   1064c:	1005003a 	cmpeq	r2,r2,zero
   10650:	1000031e 	bne	r2,zero,10660 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   10654:	00bffd44 	movi	r2,-11
   10658:	e0bfff15 	stw	r2,-4(fp)
   1065c:	00000206 	br	10668 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   10660:	00bffec4 	movi	r2,-5
   10664:	e0bfff15 	stw	r2,-4(fp)
   10668:	e0bfff17 	ldw	r2,-4(fp)
}
   1066c:	e037883a 	mov	sp,fp
   10670:	dfc00117 	ldw	ra,4(sp)
   10674:	df000017 	ldw	fp,0(sp)
   10678:	dec00204 	addi	sp,sp,8
   1067c:	f800283a 	ret

00010680 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   10680:	defff204 	addi	sp,sp,-56
   10684:	dfc00d15 	stw	ra,52(sp)
   10688:	df000c15 	stw	fp,48(sp)
   1068c:	df000c04 	addi	fp,sp,48
   10690:	e13ffb15 	stw	r4,-20(fp)
   10694:	e17ffc15 	stw	r5,-16(fp)
   10698:	e1bffd15 	stw	r6,-12(fp)
   1069c:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   106a0:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   106a4:	e0bffc17 	ldw	r2,-16(fp)
   106a8:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   106ac:	00003a06 	br	10798 <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   106b0:	e0bffb17 	ldw	r2,-20(fp)
   106b4:	10800c17 	ldw	r2,48(r2)
   106b8:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   106bc:	e0bffb17 	ldw	r2,-20(fp)
   106c0:	10800d17 	ldw	r2,52(r2)
   106c4:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   106c8:	e0fffa17 	ldw	r3,-24(fp)
   106cc:	e0bff917 	ldw	r2,-28(fp)
   106d0:	1880062e 	bgeu	r3,r2,106ec <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   106d4:	e0fff917 	ldw	r3,-28(fp)
   106d8:	e0bffa17 	ldw	r2,-24(fp)
   106dc:	1885c83a 	sub	r2,r3,r2
   106e0:	10bfffc4 	addi	r2,r2,-1
   106e4:	e0bff815 	stw	r2,-32(fp)
   106e8:	00000c06 	br	1071c <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   106ec:	e0bff917 	ldw	r2,-28(fp)
   106f0:	1005003a 	cmpeq	r2,r2,zero
   106f4:	1000051e 	bne	r2,zero,1070c <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   106f8:	00820004 	movi	r2,2048
   106fc:	e0fffa17 	ldw	r3,-24(fp)
   10700:	10c5c83a 	sub	r2,r2,r3
   10704:	e0bff815 	stw	r2,-32(fp)
   10708:	00000406 	br	1071c <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   1070c:	0081ffc4 	movi	r2,2047
   10710:	e0fffa17 	ldw	r3,-24(fp)
   10714:	10c5c83a 	sub	r2,r2,r3
   10718:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   1071c:	e0bff817 	ldw	r2,-32(fp)
   10720:	1005003a 	cmpeq	r2,r2,zero
   10724:	10001f1e 	bne	r2,zero,107a4 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   10728:	e0fffd17 	ldw	r3,-12(fp)
   1072c:	e0bff817 	ldw	r2,-32(fp)
   10730:	1880022e 	bgeu	r3,r2,1073c <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   10734:	e0bffd17 	ldw	r2,-12(fp)
   10738:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   1073c:	e0bffb17 	ldw	r2,-20(fp)
   10740:	10c20e04 	addi	r3,r2,2104
   10744:	e0bffa17 	ldw	r2,-24(fp)
   10748:	1885883a 	add	r2,r3,r2
   1074c:	e0fffc17 	ldw	r3,-16(fp)
   10750:	1009883a 	mov	r4,r2
   10754:	180b883a 	mov	r5,r3
   10758:	e1bff817 	ldw	r6,-32(fp)
   1075c:	000125c0 	call	125c <memcpy>
      ptr   += n;
   10760:	e0fff817 	ldw	r3,-32(fp)
   10764:	e0bffc17 	ldw	r2,-16(fp)
   10768:	10c5883a 	add	r2,r2,r3
   1076c:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   10770:	e0fffd17 	ldw	r3,-12(fp)
   10774:	e0bff817 	ldw	r2,-32(fp)
   10778:	1885c83a 	sub	r2,r3,r2
   1077c:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10780:	e0fffa17 	ldw	r3,-24(fp)
   10784:	e0bff817 	ldw	r2,-32(fp)
   10788:	1885883a 	add	r2,r3,r2
   1078c:	10c1ffcc 	andi	r3,r2,2047
   10790:	e0bffb17 	ldw	r2,-20(fp)
   10794:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   10798:	e0bffd17 	ldw	r2,-12(fp)
   1079c:	10800048 	cmpgei	r2,r2,1
   107a0:	103fc31e 	bne	r2,zero,106b0 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   107a4:	0005303a 	rdctl	r2,status
   107a8:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   107ac:	e0fff517 	ldw	r3,-44(fp)
   107b0:	00bfff84 	movi	r2,-2
   107b4:	1884703a 	and	r2,r3,r2
   107b8:	1001703a 	wrctl	status,r2
  
  return context;
   107bc:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   107c0:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   107c4:	e0bffb17 	ldw	r2,-20(fp)
   107c8:	10800817 	ldw	r2,32(r2)
   107cc:	10c00094 	ori	r3,r2,2
   107d0:	e0bffb17 	ldw	r2,-20(fp)
   107d4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   107d8:	e0bffb17 	ldw	r2,-20(fp)
   107dc:	10800017 	ldw	r2,0(r2)
   107e0:	11000104 	addi	r4,r2,4
   107e4:	e0bffb17 	ldw	r2,-20(fp)
   107e8:	10800817 	ldw	r2,32(r2)
   107ec:	1007883a 	mov	r3,r2
   107f0:	2005883a 	mov	r2,r4
   107f4:	10c00035 	stwio	r3,0(r2)
   107f8:	e0bff717 	ldw	r2,-36(fp)
   107fc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10800:	e0bff417 	ldw	r2,-48(fp)
   10804:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   10808:	e0bffd17 	ldw	r2,-12(fp)
   1080c:	10800050 	cmplti	r2,r2,1
   10810:	1000111e 	bne	r2,zero,10858 <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   10814:	e0bffe17 	ldw	r2,-8(fp)
   10818:	1090000c 	andi	r2,r2,16384
   1081c:	1004c03a 	cmpne	r2,r2,zero
   10820:	1000101e 	bne	r2,zero,10864 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   10824:	e0bffb17 	ldw	r2,-20(fp)
   10828:	10c00d17 	ldw	r3,52(r2)
   1082c:	e0bff917 	ldw	r2,-28(fp)
   10830:	1880051e 	bne	r3,r2,10848 <altera_avalon_jtag_uart_write+0x1c8>
   10834:	e0bffb17 	ldw	r2,-20(fp)
   10838:	10c00917 	ldw	r3,36(r2)
   1083c:	e0bffb17 	ldw	r2,-20(fp)
   10840:	10800117 	ldw	r2,4(r2)
   10844:	18bff736 	bltu	r3,r2,10824 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   10848:	e0bffb17 	ldw	r2,-20(fp)
   1084c:	10c00d17 	ldw	r3,52(r2)
   10850:	e0bff917 	ldw	r2,-28(fp)
   10854:	18800326 	beq	r3,r2,10864 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
   10858:	e0bffd17 	ldw	r2,-12(fp)
   1085c:	10800048 	cmpgei	r2,r2,1
   10860:	103fcd1e 	bne	r2,zero,10798 <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   10864:	e0fffc17 	ldw	r3,-16(fp)
   10868:	e0bff617 	ldw	r2,-40(fp)
   1086c:	18800526 	beq	r3,r2,10884 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   10870:	e0fffc17 	ldw	r3,-16(fp)
   10874:	e0bff617 	ldw	r2,-40(fp)
   10878:	1887c83a 	sub	r3,r3,r2
   1087c:	e0ffff15 	stw	r3,-4(fp)
   10880:	00000906 	br	108a8 <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   10884:	e0bffe17 	ldw	r2,-8(fp)
   10888:	1090000c 	andi	r2,r2,16384
   1088c:	1005003a 	cmpeq	r2,r2,zero
   10890:	1000031e 	bne	r2,zero,108a0 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   10894:	00bffd44 	movi	r2,-11
   10898:	e0bfff15 	stw	r2,-4(fp)
   1089c:	00000206 	br	108a8 <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   108a0:	00bffec4 	movi	r2,-5
   108a4:	e0bfff15 	stw	r2,-4(fp)
   108a8:	e0bfff17 	ldw	r2,-4(fp)
}
   108ac:	e037883a 	mov	sp,fp
   108b0:	dfc00117 	ldw	ra,4(sp)
   108b4:	df000017 	ldw	fp,0(sp)
   108b8:	dec00204 	addi	sp,sp,8
   108bc:	f800283a 	ret

000108c0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   108c0:	defffa04 	addi	sp,sp,-24
   108c4:	dfc00515 	stw	ra,20(sp)
   108c8:	df000415 	stw	fp,16(sp)
   108cc:	df000404 	addi	fp,sp,16
   108d0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   108d4:	e0bfff17 	ldw	r2,-4(fp)
   108d8:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   108dc:	e0bfff17 	ldw	r2,-4(fp)
   108e0:	10800104 	addi	r2,r2,4
   108e4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   108e8:	0005303a 	rdctl	r2,status
   108ec:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   108f0:	e0fffd17 	ldw	r3,-12(fp)
   108f4:	00bfff84 	movi	r2,-2
   108f8:	1884703a 	and	r2,r3,r2
   108fc:	1001703a 	wrctl	status,r2
  
  return context;
   10900:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   10904:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   10908:	00114c80 	call	114c8 <alt_tick>
   1090c:	e0bffe17 	ldw	r2,-8(fp)
   10910:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10914:	e0bffc17 	ldw	r2,-16(fp)
   10918:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   1091c:	e037883a 	mov	sp,fp
   10920:	dfc00117 	ldw	ra,4(sp)
   10924:	df000017 	ldw	fp,0(sp)
   10928:	dec00204 	addi	sp,sp,8
   1092c:	f800283a 	ret

00010930 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   10930:	defff804 	addi	sp,sp,-32
   10934:	dfc00715 	stw	ra,28(sp)
   10938:	df000615 	stw	fp,24(sp)
   1093c:	df000604 	addi	fp,sp,24
   10940:	e13ffc15 	stw	r4,-16(fp)
   10944:	e17ffd15 	stw	r5,-12(fp)
   10948:	e1bffe15 	stw	r6,-8(fp)
   1094c:	e1ffff15 	stw	r7,-4(fp)
   10950:	e0bfff17 	ldw	r2,-4(fp)
   10954:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   10958:	00800074 	movhi	r2,1
   1095c:	10962504 	addi	r2,r2,22676
   10960:	10800017 	ldw	r2,0(r2)
   10964:	1004c03a 	cmpne	r2,r2,zero
   10968:	1000041e 	bne	r2,zero,1097c <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   1096c:	00c00074 	movhi	r3,1
   10970:	18d62504 	addi	r3,r3,22676
   10974:	e0bffb17 	ldw	r2,-20(fp)
   10978:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   1097c:	e0bffc17 	ldw	r2,-16(fp)
   10980:	10800104 	addi	r2,r2,4
   10984:	1007883a 	mov	r3,r2
   10988:	008001c4 	movi	r2,7
   1098c:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   10990:	d8000015 	stw	zero,0(sp)
   10994:	e13ffd17 	ldw	r4,-12(fp)
   10998:	e17ffe17 	ldw	r5,-8(fp)
   1099c:	01800074 	movhi	r6,1
   109a0:	31823004 	addi	r6,r6,2240
   109a4:	e1fffc17 	ldw	r7,-16(fp)
   109a8:	0010d640 	call	10d64 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   109ac:	e037883a 	mov	sp,fp
   109b0:	dfc00117 	ldw	ra,4(sp)
   109b4:	df000017 	ldw	fp,0(sp)
   109b8:	dec00204 	addi	sp,sp,8
   109bc:	f800283a 	ret

000109c0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   109c0:	defff404 	addi	sp,sp,-48
   109c4:	df000b15 	stw	fp,44(sp)
   109c8:	df000b04 	addi	fp,sp,44
   109cc:	e13ffb15 	stw	r4,-20(fp)
   109d0:	e17ffc15 	stw	r5,-16(fp)
   109d4:	e1bffd15 	stw	r6,-12(fp)
   109d8:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   109dc:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   109e0:	00800074 	movhi	r2,1
   109e4:	10962504 	addi	r2,r2,22676
   109e8:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   109ec:	1005003a 	cmpeq	r2,r2,zero
   109f0:	1000411e 	bne	r2,zero,10af8 <alt_alarm_start+0x138>
  {
    if (alarm)
   109f4:	e0bffb17 	ldw	r2,-20(fp)
   109f8:	1005003a 	cmpeq	r2,r2,zero
   109fc:	10003b1e 	bne	r2,zero,10aec <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   10a00:	e0fffb17 	ldw	r3,-20(fp)
   10a04:	e0bffd17 	ldw	r2,-12(fp)
   10a08:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   10a0c:	e0fffb17 	ldw	r3,-20(fp)
   10a10:	e0bffe17 	ldw	r2,-8(fp)
   10a14:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10a18:	0005303a 	rdctl	r2,status
   10a1c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10a20:	e0fff817 	ldw	r3,-32(fp)
   10a24:	00bfff84 	movi	r2,-2
   10a28:	1884703a 	and	r2,r3,r2
   10a2c:	1001703a 	wrctl	status,r2
  
  return context;
   10a30:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   10a34:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   10a38:	00800074 	movhi	r2,1
   10a3c:	10962604 	addi	r2,r2,22680
   10a40:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   10a44:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   10a48:	e0fffc17 	ldw	r3,-16(fp)
   10a4c:	e0bff917 	ldw	r2,-28(fp)
   10a50:	1885883a 	add	r2,r3,r2
   10a54:	10c00044 	addi	r3,r2,1
   10a58:	e0bffb17 	ldw	r2,-20(fp)
   10a5c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   10a60:	e0bffb17 	ldw	r2,-20(fp)
   10a64:	10c00217 	ldw	r3,8(r2)
   10a68:	e0bff917 	ldw	r2,-28(fp)
   10a6c:	1880042e 	bgeu	r3,r2,10a80 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   10a70:	e0fffb17 	ldw	r3,-20(fp)
   10a74:	00800044 	movi	r2,1
   10a78:	18800405 	stb	r2,16(r3)
   10a7c:	00000206 	br	10a88 <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   10a80:	e0bffb17 	ldw	r2,-20(fp)
   10a84:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   10a88:	e0fffb17 	ldw	r3,-20(fp)
   10a8c:	00800074 	movhi	r2,1
   10a90:	108f7604 	addi	r2,r2,15832
   10a94:	e0bff615 	stw	r2,-40(fp)
   10a98:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10a9c:	e0fff717 	ldw	r3,-36(fp)
   10aa0:	e0bff617 	ldw	r2,-40(fp)
   10aa4:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   10aa8:	e0bff617 	ldw	r2,-40(fp)
   10aac:	10c00017 	ldw	r3,0(r2)
   10ab0:	e0bff717 	ldw	r2,-36(fp)
   10ab4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10ab8:	e0bff617 	ldw	r2,-40(fp)
   10abc:	10c00017 	ldw	r3,0(r2)
   10ac0:	e0bff717 	ldw	r2,-36(fp)
   10ac4:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   10ac8:	e0fff617 	ldw	r3,-40(fp)
   10acc:	e0bff717 	ldw	r2,-36(fp)
   10ad0:	18800015 	stw	r2,0(r3)
   10ad4:	e0bffa17 	ldw	r2,-24(fp)
   10ad8:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10adc:	e0bff517 	ldw	r2,-44(fp)
   10ae0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   10ae4:	e03fff15 	stw	zero,-4(fp)
   10ae8:	00000506 	br	10b00 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   10aec:	00bffa84 	movi	r2,-22
   10af0:	e0bfff15 	stw	r2,-4(fp)
   10af4:	00000206 	br	10b00 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   10af8:	00bfde84 	movi	r2,-134
   10afc:	e0bfff15 	stw	r2,-4(fp)
   10b00:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   10b04:	e037883a 	mov	sp,fp
   10b08:	df000017 	ldw	fp,0(sp)
   10b0c:	dec00104 	addi	sp,sp,4
   10b10:	f800283a 	ret

00010b14 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   10b14:	defffe04 	addi	sp,sp,-8
   10b18:	df000115 	stw	fp,4(sp)
   10b1c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   10b20:	e03fff15 	stw	zero,-4(fp)
   10b24:	00000506 	br	10b3c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   10b28:	e0bfff17 	ldw	r2,-4(fp)
   10b2c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   10b30:	e0bfff17 	ldw	r2,-4(fp)
   10b34:	10800804 	addi	r2,r2,32
   10b38:	e0bfff15 	stw	r2,-4(fp)
   10b3c:	e0bfff17 	ldw	r2,-4(fp)
   10b40:	10820030 	cmpltui	r2,r2,2048
   10b44:	103ff81e 	bne	r2,zero,10b28 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   10b48:	e037883a 	mov	sp,fp
   10b4c:	df000017 	ldw	fp,0(sp)
   10b50:	dec00104 	addi	sp,sp,4
   10b54:	f800283a 	ret

00010b58 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   10b58:	defff904 	addi	sp,sp,-28
   10b5c:	dfc00615 	stw	ra,24(sp)
   10b60:	df000515 	stw	fp,20(sp)
   10b64:	df000504 	addi	fp,sp,20
   10b68:	e13ffd15 	stw	r4,-12(fp)
   10b6c:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   10b70:	e0bffd17 	ldw	r2,-12(fp)
   10b74:	1005003a 	cmpeq	r2,r2,zero
   10b78:	1000041e 	bne	r2,zero,10b8c <alt_dev_llist_insert+0x34>
   10b7c:	e0bffd17 	ldw	r2,-12(fp)
   10b80:	10800217 	ldw	r2,8(r2)
   10b84:	1004c03a 	cmpne	r2,r2,zero
   10b88:	1000071e 	bne	r2,zero,10ba8 <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   10b8c:	0010c0c0 	call	10c0c <alt_get_errno>
   10b90:	1007883a 	mov	r3,r2
   10b94:	00800584 	movi	r2,22
   10b98:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   10b9c:	00bffa84 	movi	r2,-22
   10ba0:	e0bfff15 	stw	r2,-4(fp)
   10ba4:	00001306 	br	10bf4 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   10ba8:	e0fffd17 	ldw	r3,-12(fp)
   10bac:	e0bffe17 	ldw	r2,-8(fp)
   10bb0:	e0bffb15 	stw	r2,-20(fp)
   10bb4:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10bb8:	e0fffc17 	ldw	r3,-16(fp)
   10bbc:	e0bffb17 	ldw	r2,-20(fp)
   10bc0:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   10bc4:	e0bffb17 	ldw	r2,-20(fp)
   10bc8:	10c00017 	ldw	r3,0(r2)
   10bcc:	e0bffc17 	ldw	r2,-16(fp)
   10bd0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10bd4:	e0bffb17 	ldw	r2,-20(fp)
   10bd8:	10c00017 	ldw	r3,0(r2)
   10bdc:	e0bffc17 	ldw	r2,-16(fp)
   10be0:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   10be4:	e0fffb17 	ldw	r3,-20(fp)
   10be8:	e0bffc17 	ldw	r2,-16(fp)
   10bec:	18800015 	stw	r2,0(r3)

  return 0;  
   10bf0:	e03fff15 	stw	zero,-4(fp)
   10bf4:	e0bfff17 	ldw	r2,-4(fp)
}
   10bf8:	e037883a 	mov	sp,fp
   10bfc:	dfc00117 	ldw	ra,4(sp)
   10c00:	df000017 	ldw	fp,0(sp)
   10c04:	dec00204 	addi	sp,sp,8
   10c08:	f800283a 	ret

00010c0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10c0c:	defffd04 	addi	sp,sp,-12
   10c10:	dfc00215 	stw	ra,8(sp)
   10c14:	df000115 	stw	fp,4(sp)
   10c18:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   10c1c:	00800074 	movhi	r2,1
   10c20:	108f7304 	addi	r2,r2,15820
   10c24:	10800017 	ldw	r2,0(r2)
   10c28:	1005003a 	cmpeq	r2,r2,zero
   10c2c:	1000061e 	bne	r2,zero,10c48 <alt_get_errno+0x3c>
   10c30:	00800074 	movhi	r2,1
   10c34:	108f7304 	addi	r2,r2,15820
   10c38:	10800017 	ldw	r2,0(r2)
   10c3c:	103ee83a 	callr	r2
   10c40:	e0bfff15 	stw	r2,-4(fp)
   10c44:	00000306 	br	10c54 <alt_get_errno+0x48>
   10c48:	00800074 	movhi	r2,1
   10c4c:	10961d04 	addi	r2,r2,22644
   10c50:	e0bfff15 	stw	r2,-4(fp)
   10c54:	e0bfff17 	ldw	r2,-4(fp)
}
   10c58:	e037883a 	mov	sp,fp
   10c5c:	dfc00117 	ldw	ra,4(sp)
   10c60:	df000017 	ldw	fp,0(sp)
   10c64:	dec00204 	addi	sp,sp,8
   10c68:	f800283a 	ret

00010c6c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   10c6c:	defffd04 	addi	sp,sp,-12
   10c70:	dfc00215 	stw	ra,8(sp)
   10c74:	df000115 	stw	fp,4(sp)
   10c78:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   10c7c:	00bfff04 	movi	r2,-4
   10c80:	00c00074 	movhi	r3,1
   10c84:	18c73f04 	addi	r3,r3,7420
   10c88:	1885883a 	add	r2,r3,r2
   10c8c:	e0bfff15 	stw	r2,-4(fp)
   10c90:	00000606 	br	10cac <_do_ctors+0x40>
        (*ctor) (); 
   10c94:	e0bfff17 	ldw	r2,-4(fp)
   10c98:	10800017 	ldw	r2,0(r2)
   10c9c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   10ca0:	e0bfff17 	ldw	r2,-4(fp)
   10ca4:	10bfff04 	addi	r2,r2,-4
   10ca8:	e0bfff15 	stw	r2,-4(fp)
   10cac:	e0ffff17 	ldw	r3,-4(fp)
   10cb0:	00800074 	movhi	r2,1
   10cb4:	10873e04 	addi	r2,r2,7416
   10cb8:	18bff62e 	bgeu	r3,r2,10c94 <_do_ctors+0x28>
        (*ctor) (); 
}
   10cbc:	e037883a 	mov	sp,fp
   10cc0:	dfc00117 	ldw	ra,4(sp)
   10cc4:	df000017 	ldw	fp,0(sp)
   10cc8:	dec00204 	addi	sp,sp,8
   10ccc:	f800283a 	ret

00010cd0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   10cd0:	defffd04 	addi	sp,sp,-12
   10cd4:	dfc00215 	stw	ra,8(sp)
   10cd8:	df000115 	stw	fp,4(sp)
   10cdc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10ce0:	00bfff04 	movi	r2,-4
   10ce4:	00c00074 	movhi	r3,1
   10ce8:	18c73f04 	addi	r3,r3,7420
   10cec:	1885883a 	add	r2,r3,r2
   10cf0:	e0bfff15 	stw	r2,-4(fp)
   10cf4:	00000606 	br	10d10 <_do_dtors+0x40>
        (*dtor) (); 
   10cf8:	e0bfff17 	ldw	r2,-4(fp)
   10cfc:	10800017 	ldw	r2,0(r2)
   10d00:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10d04:	e0bfff17 	ldw	r2,-4(fp)
   10d08:	10bfff04 	addi	r2,r2,-4
   10d0c:	e0bfff15 	stw	r2,-4(fp)
   10d10:	e0ffff17 	ldw	r3,-4(fp)
   10d14:	00800074 	movhi	r2,1
   10d18:	10873f04 	addi	r2,r2,7420
   10d1c:	18bff62e 	bgeu	r3,r2,10cf8 <_do_dtors+0x28>
        (*dtor) (); 
}
   10d20:	e037883a 	mov	sp,fp
   10d24:	dfc00117 	ldw	ra,4(sp)
   10d28:	df000017 	ldw	fp,0(sp)
   10d2c:	dec00204 	addi	sp,sp,8
   10d30:	f800283a 	ret

00010d34 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   10d34:	defffe04 	addi	sp,sp,-8
   10d38:	dfc00115 	stw	ra,4(sp)
   10d3c:	df000015 	stw	fp,0(sp)
   10d40:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   10d44:	0009883a 	mov	r4,zero
   10d48:	01440004 	movi	r5,4096
   10d4c:	00118600 	call	11860 <alt_icache_flush>
#endif
}
   10d50:	e037883a 	mov	sp,fp
   10d54:	dfc00117 	ldw	ra,4(sp)
   10d58:	df000017 	ldw	fp,0(sp)
   10d5c:	dec00204 	addi	sp,sp,8
   10d60:	f800283a 	ret

00010d64 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   10d64:	defff904 	addi	sp,sp,-28
   10d68:	dfc00615 	stw	ra,24(sp)
   10d6c:	df000515 	stw	fp,20(sp)
   10d70:	df000504 	addi	fp,sp,20
   10d74:	e13ffc15 	stw	r4,-16(fp)
   10d78:	e17ffd15 	stw	r5,-12(fp)
   10d7c:	e1bffe15 	stw	r6,-8(fp)
   10d80:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   10d84:	e0800217 	ldw	r2,8(fp)
   10d88:	d8800015 	stw	r2,0(sp)
   10d8c:	e13ffc17 	ldw	r4,-16(fp)
   10d90:	e17ffd17 	ldw	r5,-12(fp)
   10d94:	e1bffe17 	ldw	r6,-8(fp)
   10d98:	e1ffff17 	ldw	r7,-4(fp)
   10d9c:	0010f380 	call	10f38 <alt_iic_isr_register>
}  
   10da0:	e037883a 	mov	sp,fp
   10da4:	dfc00117 	ldw	ra,4(sp)
   10da8:	df000017 	ldw	fp,0(sp)
   10dac:	dec00204 	addi	sp,sp,8
   10db0:	f800283a 	ret

00010db4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   10db4:	defff904 	addi	sp,sp,-28
   10db8:	df000615 	stw	fp,24(sp)
   10dbc:	df000604 	addi	fp,sp,24
   10dc0:	e13ffe15 	stw	r4,-8(fp)
   10dc4:	e17fff15 	stw	r5,-4(fp)
   10dc8:	e0bfff17 	ldw	r2,-4(fp)
   10dcc:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10dd0:	0005303a 	rdctl	r2,status
   10dd4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10dd8:	e0fffb17 	ldw	r3,-20(fp)
   10ddc:	00bfff84 	movi	r2,-2
   10de0:	1884703a 	and	r2,r3,r2
   10de4:	1001703a 	wrctl	status,r2
  
  return context;
   10de8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10dec:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   10df0:	e0fffc17 	ldw	r3,-16(fp)
   10df4:	00800044 	movi	r2,1
   10df8:	10c4983a 	sll	r2,r2,r3
   10dfc:	1007883a 	mov	r3,r2
   10e00:	00800074 	movhi	r2,1
   10e04:	10962404 	addi	r2,r2,22672
   10e08:	10800017 	ldw	r2,0(r2)
   10e0c:	1886b03a 	or	r3,r3,r2
   10e10:	00800074 	movhi	r2,1
   10e14:	10962404 	addi	r2,r2,22672
   10e18:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10e1c:	00800074 	movhi	r2,1
   10e20:	10962404 	addi	r2,r2,22672
   10e24:	10800017 	ldw	r2,0(r2)
   10e28:	100170fa 	wrctl	ienable,r2
   10e2c:	e0bffd17 	ldw	r2,-12(fp)
   10e30:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10e34:	e0bffa17 	ldw	r2,-24(fp)
   10e38:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10e3c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   10e40:	e037883a 	mov	sp,fp
   10e44:	df000017 	ldw	fp,0(sp)
   10e48:	dec00104 	addi	sp,sp,4
   10e4c:	f800283a 	ret

00010e50 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   10e50:	defff904 	addi	sp,sp,-28
   10e54:	df000615 	stw	fp,24(sp)
   10e58:	df000604 	addi	fp,sp,24
   10e5c:	e13ffe15 	stw	r4,-8(fp)
   10e60:	e17fff15 	stw	r5,-4(fp)
   10e64:	e0bfff17 	ldw	r2,-4(fp)
   10e68:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10e6c:	0005303a 	rdctl	r2,status
   10e70:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10e74:	e0fffb17 	ldw	r3,-20(fp)
   10e78:	00bfff84 	movi	r2,-2
   10e7c:	1884703a 	and	r2,r3,r2
   10e80:	1001703a 	wrctl	status,r2
  
  return context;
   10e84:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10e88:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   10e8c:	e0fffc17 	ldw	r3,-16(fp)
   10e90:	00800044 	movi	r2,1
   10e94:	10c4983a 	sll	r2,r2,r3
   10e98:	0084303a 	nor	r2,zero,r2
   10e9c:	1007883a 	mov	r3,r2
   10ea0:	00800074 	movhi	r2,1
   10ea4:	10962404 	addi	r2,r2,22672
   10ea8:	10800017 	ldw	r2,0(r2)
   10eac:	1886703a 	and	r3,r3,r2
   10eb0:	00800074 	movhi	r2,1
   10eb4:	10962404 	addi	r2,r2,22672
   10eb8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10ebc:	00800074 	movhi	r2,1
   10ec0:	10962404 	addi	r2,r2,22672
   10ec4:	10800017 	ldw	r2,0(r2)
   10ec8:	100170fa 	wrctl	ienable,r2
   10ecc:	e0bffd17 	ldw	r2,-12(fp)
   10ed0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10ed4:	e0bffa17 	ldw	r2,-24(fp)
   10ed8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10edc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   10ee0:	e037883a 	mov	sp,fp
   10ee4:	df000017 	ldw	fp,0(sp)
   10ee8:	dec00104 	addi	sp,sp,4
   10eec:	f800283a 	ret

00010ef0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   10ef0:	defffc04 	addi	sp,sp,-16
   10ef4:	df000315 	stw	fp,12(sp)
   10ef8:	df000304 	addi	fp,sp,12
   10efc:	e13ffe15 	stw	r4,-8(fp)
   10f00:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   10f04:	000530fa 	rdctl	r2,ienable
   10f08:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   10f0c:	e0ffff17 	ldw	r3,-4(fp)
   10f10:	00800044 	movi	r2,1
   10f14:	10c4983a 	sll	r2,r2,r3
   10f18:	1007883a 	mov	r3,r2
   10f1c:	e0bffd17 	ldw	r2,-12(fp)
   10f20:	1884703a 	and	r2,r3,r2
   10f24:	1004c03a 	cmpne	r2,r2,zero
}
   10f28:	e037883a 	mov	sp,fp
   10f2c:	df000017 	ldw	fp,0(sp)
   10f30:	dec00104 	addi	sp,sp,4
   10f34:	f800283a 	ret

00010f38 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   10f38:	defff404 	addi	sp,sp,-48
   10f3c:	dfc00b15 	stw	ra,44(sp)
   10f40:	df000a15 	stw	fp,40(sp)
   10f44:	df000a04 	addi	fp,sp,40
   10f48:	e13ffb15 	stw	r4,-20(fp)
   10f4c:	e17ffc15 	stw	r5,-16(fp)
   10f50:	e1bffd15 	stw	r6,-12(fp)
   10f54:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   10f58:	00bffa84 	movi	r2,-22
   10f5c:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   10f60:	e0bffc17 	ldw	r2,-16(fp)
   10f64:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   10f68:	e0bff917 	ldw	r2,-28(fp)
   10f6c:	10800808 	cmpgei	r2,r2,32
   10f70:	1000291e 	bne	r2,zero,11018 <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10f74:	0005303a 	rdctl	r2,status
   10f78:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10f7c:	e0fff717 	ldw	r3,-36(fp)
   10f80:	00bfff84 	movi	r2,-2
   10f84:	1884703a 	and	r2,r3,r2
   10f88:	1001703a 	wrctl	status,r2
  
  return context;
   10f8c:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   10f90:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   10f94:	e0bff917 	ldw	r2,-28(fp)
   10f98:	00c00074 	movhi	r3,1
   10f9c:	18d67104 	addi	r3,r3,22980
   10fa0:	100490fa 	slli	r2,r2,3
   10fa4:	10c7883a 	add	r3,r2,r3
   10fa8:	e0bffd17 	ldw	r2,-12(fp)
   10fac:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   10fb0:	e0bff917 	ldw	r2,-28(fp)
   10fb4:	00c00074 	movhi	r3,1
   10fb8:	18d67104 	addi	r3,r3,22980
   10fbc:	100490fa 	slli	r2,r2,3
   10fc0:	10c5883a 	add	r2,r2,r3
   10fc4:	10c00104 	addi	r3,r2,4
   10fc8:	e0bffe17 	ldw	r2,-8(fp)
   10fcc:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   10fd0:	e0bffd17 	ldw	r2,-12(fp)
   10fd4:	1005003a 	cmpeq	r2,r2,zero
   10fd8:	1000051e 	bne	r2,zero,10ff0 <alt_iic_isr_register+0xb8>
   10fdc:	e17ff917 	ldw	r5,-28(fp)
   10fe0:	e13ffb17 	ldw	r4,-20(fp)
   10fe4:	0010db40 	call	10db4 <alt_ic_irq_enable>
   10fe8:	e0bfff15 	stw	r2,-4(fp)
   10fec:	00000406 	br	11000 <alt_iic_isr_register+0xc8>
   10ff0:	e17ff917 	ldw	r5,-28(fp)
   10ff4:	e13ffb17 	ldw	r4,-20(fp)
   10ff8:	0010e500 	call	10e50 <alt_ic_irq_disable>
   10ffc:	e0bfff15 	stw	r2,-4(fp)
   11000:	e0bfff17 	ldw	r2,-4(fp)
   11004:	e0bffa15 	stw	r2,-24(fp)
   11008:	e0bff817 	ldw	r2,-32(fp)
   1100c:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   11010:	e0bff617 	ldw	r2,-40(fp)
   11014:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   11018:	e0bffa17 	ldw	r2,-24(fp)
}
   1101c:	e037883a 	mov	sp,fp
   11020:	dfc00117 	ldw	ra,4(sp)
   11024:	df000017 	ldw	fp,0(sp)
   11028:	dec00204 	addi	sp,sp,8
   1102c:	f800283a 	ret

00011030 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   11030:	defff904 	addi	sp,sp,-28
   11034:	dfc00615 	stw	ra,24(sp)
   11038:	df000515 	stw	fp,20(sp)
   1103c:	df000504 	addi	fp,sp,20
   11040:	e13ffc15 	stw	r4,-16(fp)
   11044:	e17ffd15 	stw	r5,-12(fp)
   11048:	e1bffe15 	stw	r6,-8(fp)
   1104c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   11050:	e13ffd17 	ldw	r4,-12(fp)
   11054:	e17ffe17 	ldw	r5,-8(fp)
   11058:	e1bfff17 	ldw	r6,-4(fp)
   1105c:	00112480 	call	11248 <open>
   11060:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   11064:	e0bffb17 	ldw	r2,-20(fp)
   11068:	1004803a 	cmplt	r2,r2,zero
   1106c:	10001c1e 	bne	r2,zero,110e0 <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
   11070:	e0bffb17 	ldw	r2,-20(fp)
   11074:	00c00074 	movhi	r3,1
   11078:	18caef04 	addi	r3,r3,11196
   1107c:	10800324 	muli	r2,r2,12
   11080:	10c5883a 	add	r2,r2,r3
   11084:	10c00017 	ldw	r3,0(r2)
   11088:	e0bffc17 	ldw	r2,-16(fp)
   1108c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   11090:	e0bffb17 	ldw	r2,-20(fp)
   11094:	00c00074 	movhi	r3,1
   11098:	18caef04 	addi	r3,r3,11196
   1109c:	10800324 	muli	r2,r2,12
   110a0:	10c5883a 	add	r2,r2,r3
   110a4:	10800104 	addi	r2,r2,4
   110a8:	10c00017 	ldw	r3,0(r2)
   110ac:	e0bffc17 	ldw	r2,-16(fp)
   110b0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   110b4:	e0bffb17 	ldw	r2,-20(fp)
   110b8:	00c00074 	movhi	r3,1
   110bc:	18caef04 	addi	r3,r3,11196
   110c0:	10800324 	muli	r2,r2,12
   110c4:	10c5883a 	add	r2,r2,r3
   110c8:	10800204 	addi	r2,r2,8
   110cc:	10c00017 	ldw	r3,0(r2)
   110d0:	e0bffc17 	ldw	r2,-16(fp)
   110d4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   110d8:	e13ffb17 	ldw	r4,-20(fp)
   110dc:	000fab00 	call	fab0 <alt_release_fd>
  }
} 
   110e0:	e037883a 	mov	sp,fp
   110e4:	dfc00117 	ldw	ra,4(sp)
   110e8:	df000017 	ldw	fp,0(sp)
   110ec:	dec00204 	addi	sp,sp,8
   110f0:	f800283a 	ret

000110f4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   110f4:	defffb04 	addi	sp,sp,-20
   110f8:	dfc00415 	stw	ra,16(sp)
   110fc:	df000315 	stw	fp,12(sp)
   11100:	df000304 	addi	fp,sp,12
   11104:	e13ffd15 	stw	r4,-12(fp)
   11108:	e17ffe15 	stw	r5,-8(fp)
   1110c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   11110:	01000074 	movhi	r4,1
   11114:	210af204 	addi	r4,r4,11208
   11118:	e17ffd17 	ldw	r5,-12(fp)
   1111c:	01800044 	movi	r6,1
   11120:	01c07fc4 	movi	r7,511
   11124:	00110300 	call	11030 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   11128:	01000074 	movhi	r4,1
   1112c:	210aef04 	addi	r4,r4,11196
   11130:	e17ffe17 	ldw	r5,-8(fp)
   11134:	000d883a 	mov	r6,zero
   11138:	01c07fc4 	movi	r7,511
   1113c:	00110300 	call	11030 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   11140:	01000074 	movhi	r4,1
   11144:	210af504 	addi	r4,r4,11220
   11148:	e17fff17 	ldw	r5,-4(fp)
   1114c:	01800044 	movi	r6,1
   11150:	01c07fc4 	movi	r7,511
   11154:	00110300 	call	11030 <alt_open_fd>
}  
   11158:	e037883a 	mov	sp,fp
   1115c:	dfc00117 	ldw	ra,4(sp)
   11160:	df000017 	ldw	fp,0(sp)
   11164:	dec00204 	addi	sp,sp,8
   11168:	f800283a 	ret

0001116c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   1116c:	defffc04 	addi	sp,sp,-16
   11170:	df000315 	stw	fp,12(sp)
   11174:	df000304 	addi	fp,sp,12
   11178:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   1117c:	e0bffe17 	ldw	r2,-8(fp)
   11180:	10800217 	ldw	r2,8(r2)
   11184:	10d00034 	orhi	r3,r2,16384
   11188:	e0bffe17 	ldw	r2,-8(fp)
   1118c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   11190:	e03ffd15 	stw	zero,-12(fp)
   11194:	00002006 	br	11218 <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   11198:	e0bffd17 	ldw	r2,-12(fp)
   1119c:	00c00074 	movhi	r3,1
   111a0:	18caef04 	addi	r3,r3,11196
   111a4:	10800324 	muli	r2,r2,12
   111a8:	10c5883a 	add	r2,r2,r3
   111ac:	10c00017 	ldw	r3,0(r2)
   111b0:	e0bffe17 	ldw	r2,-8(fp)
   111b4:	10800017 	ldw	r2,0(r2)
   111b8:	1880141e 	bne	r3,r2,1120c <alt_file_locked+0xa0>
   111bc:	e0bffd17 	ldw	r2,-12(fp)
   111c0:	00c00074 	movhi	r3,1
   111c4:	18caef04 	addi	r3,r3,11196
   111c8:	10800324 	muli	r2,r2,12
   111cc:	10c5883a 	add	r2,r2,r3
   111d0:	10800204 	addi	r2,r2,8
   111d4:	10800017 	ldw	r2,0(r2)
   111d8:	1004403a 	cmpge	r2,r2,zero
   111dc:	10000b1e 	bne	r2,zero,1120c <alt_file_locked+0xa0>
   111e0:	e0bffd17 	ldw	r2,-12(fp)
   111e4:	10800324 	muli	r2,r2,12
   111e8:	1007883a 	mov	r3,r2
   111ec:	00800074 	movhi	r2,1
   111f0:	108aef04 	addi	r2,r2,11196
   111f4:	1887883a 	add	r3,r3,r2
   111f8:	e0bffe17 	ldw	r2,-8(fp)
   111fc:	18800326 	beq	r3,r2,1120c <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   11200:	00bffcc4 	movi	r2,-13
   11204:	e0bfff15 	stw	r2,-4(fp)
   11208:	00000a06 	br	11234 <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   1120c:	e0bffd17 	ldw	r2,-12(fp)
   11210:	10800044 	addi	r2,r2,1
   11214:	e0bffd15 	stw	r2,-12(fp)
   11218:	00800074 	movhi	r2,1
   1121c:	108f7204 	addi	r2,r2,15816
   11220:	10800017 	ldw	r2,0(r2)
   11224:	1007883a 	mov	r3,r2
   11228:	e0bffd17 	ldw	r2,-12(fp)
   1122c:	18bfda2e 	bgeu	r3,r2,11198 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   11230:	e03fff15 	stw	zero,-4(fp)
   11234:	e0bfff17 	ldw	r2,-4(fp)
}
   11238:	e037883a 	mov	sp,fp
   1123c:	df000017 	ldw	fp,0(sp)
   11240:	dec00104 	addi	sp,sp,4
   11244:	f800283a 	ret

00011248 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   11248:	defff404 	addi	sp,sp,-48
   1124c:	dfc00b15 	stw	ra,44(sp)
   11250:	df000a15 	stw	fp,40(sp)
   11254:	df000a04 	addi	fp,sp,40
   11258:	e13ffb15 	stw	r4,-20(fp)
   1125c:	e17ffc15 	stw	r5,-16(fp)
   11260:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   11264:	00bfffc4 	movi	r2,-1
   11268:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   1126c:	00bffb44 	movi	r2,-19
   11270:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   11274:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   11278:	e13ffb17 	ldw	r4,-20(fp)
   1127c:	01400074 	movhi	r5,1
   11280:	294f7004 	addi	r5,r5,15808
   11284:	00115f40 	call	115f4 <alt_find_dev>
   11288:	e0bffa15 	stw	r2,-24(fp)
   1128c:	e0bffa17 	ldw	r2,-24(fp)
   11290:	1004c03a 	cmpne	r2,r2,zero
   11294:	1000051e 	bne	r2,zero,112ac <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   11298:	e13ffb17 	ldw	r4,-20(fp)
   1129c:	00116880 	call	11688 <alt_find_file>
   112a0:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   112a4:	00800044 	movi	r2,1
   112a8:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   112ac:	e0bffa17 	ldw	r2,-24(fp)
   112b0:	1005003a 	cmpeq	r2,r2,zero
   112b4:	1000301e 	bne	r2,zero,11378 <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
   112b8:	e13ffa17 	ldw	r4,-24(fp)
   112bc:	00117a80 	call	117a8 <alt_get_fd>
   112c0:	e0bff815 	stw	r2,-32(fp)
   112c4:	e0bff817 	ldw	r2,-32(fp)
   112c8:	1004403a 	cmpge	r2,r2,zero
   112cc:	1000031e 	bne	r2,zero,112dc <open+0x94>
    {
      status = index;
   112d0:	e0bff817 	ldw	r2,-32(fp)
   112d4:	e0bff715 	stw	r2,-36(fp)
   112d8:	00002906 	br	11380 <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
   112dc:	e0bff817 	ldw	r2,-32(fp)
   112e0:	10800324 	muli	r2,r2,12
   112e4:	1007883a 	mov	r3,r2
   112e8:	00800074 	movhi	r2,1
   112ec:	108aef04 	addi	r2,r2,11196
   112f0:	1885883a 	add	r2,r3,r2
   112f4:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   112f8:	e0fffc17 	ldw	r3,-16(fp)
   112fc:	00900034 	movhi	r2,16384
   11300:	10bfffc4 	addi	r2,r2,-1
   11304:	1886703a 	and	r3,r3,r2
   11308:	e0bff917 	ldw	r2,-28(fp)
   1130c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   11310:	e0bff617 	ldw	r2,-40(fp)
   11314:	1004c03a 	cmpne	r2,r2,zero
   11318:	1000061e 	bne	r2,zero,11334 <open+0xec>
   1131c:	e13ff917 	ldw	r4,-28(fp)
   11320:	001116c0 	call	1116c <alt_file_locked>
   11324:	e0bff715 	stw	r2,-36(fp)
   11328:	e0bff717 	ldw	r2,-36(fp)
   1132c:	1004803a 	cmplt	r2,r2,zero
   11330:	1000131e 	bne	r2,zero,11380 <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   11334:	e0bffa17 	ldw	r2,-24(fp)
   11338:	10800317 	ldw	r2,12(r2)
   1133c:	1005003a 	cmpeq	r2,r2,zero
   11340:	1000091e 	bne	r2,zero,11368 <open+0x120>
   11344:	e0bffa17 	ldw	r2,-24(fp)
   11348:	10800317 	ldw	r2,12(r2)
   1134c:	e13ff917 	ldw	r4,-28(fp)
   11350:	e17ffb17 	ldw	r5,-20(fp)
   11354:	e1bffc17 	ldw	r6,-16(fp)
   11358:	e1fffd17 	ldw	r7,-12(fp)
   1135c:	103ee83a 	callr	r2
   11360:	e0bfff15 	stw	r2,-4(fp)
   11364:	00000106 	br	1136c <open+0x124>
   11368:	e03fff15 	stw	zero,-4(fp)
   1136c:	e0bfff17 	ldw	r2,-4(fp)
   11370:	e0bff715 	stw	r2,-36(fp)
   11374:	00000206 	br	11380 <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
   11378:	00bffb44 	movi	r2,-19
   1137c:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   11380:	e0bff717 	ldw	r2,-36(fp)
   11384:	1004403a 	cmpge	r2,r2,zero
   11388:	1000091e 	bne	r2,zero,113b0 <open+0x168>
  {
    alt_release_fd (index);  
   1138c:	e13ff817 	ldw	r4,-32(fp)
   11390:	000fab00 	call	fab0 <alt_release_fd>
    ALT_ERRNO = -status;
   11394:	00113d00 	call	113d0 <alt_get_errno>
   11398:	e0fff717 	ldw	r3,-36(fp)
   1139c:	00c7c83a 	sub	r3,zero,r3
   113a0:	10c00015 	stw	r3,0(r2)
    return -1;
   113a4:	00bfffc4 	movi	r2,-1
   113a8:	e0bffe15 	stw	r2,-8(fp)
   113ac:	00000206 	br	113b8 <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
   113b0:	e0bff817 	ldw	r2,-32(fp)
   113b4:	e0bffe15 	stw	r2,-8(fp)
   113b8:	e0bffe17 	ldw	r2,-8(fp)
}
   113bc:	e037883a 	mov	sp,fp
   113c0:	dfc00117 	ldw	ra,4(sp)
   113c4:	df000017 	ldw	fp,0(sp)
   113c8:	dec00204 	addi	sp,sp,8
   113cc:	f800283a 	ret

000113d0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   113d0:	defffd04 	addi	sp,sp,-12
   113d4:	dfc00215 	stw	ra,8(sp)
   113d8:	df000115 	stw	fp,4(sp)
   113dc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   113e0:	00800074 	movhi	r2,1
   113e4:	108f7304 	addi	r2,r2,15820
   113e8:	10800017 	ldw	r2,0(r2)
   113ec:	1005003a 	cmpeq	r2,r2,zero
   113f0:	1000061e 	bne	r2,zero,1140c <alt_get_errno+0x3c>
   113f4:	00800074 	movhi	r2,1
   113f8:	108f7304 	addi	r2,r2,15820
   113fc:	10800017 	ldw	r2,0(r2)
   11400:	103ee83a 	callr	r2
   11404:	e0bfff15 	stw	r2,-4(fp)
   11408:	00000306 	br	11418 <alt_get_errno+0x48>
   1140c:	00800074 	movhi	r2,1
   11410:	10961d04 	addi	r2,r2,22644
   11414:	e0bfff15 	stw	r2,-4(fp)
   11418:	e0bfff17 	ldw	r2,-4(fp)
}
   1141c:	e037883a 	mov	sp,fp
   11420:	dfc00117 	ldw	ra,4(sp)
   11424:	df000017 	ldw	fp,0(sp)
   11428:	dec00204 	addi	sp,sp,8
   1142c:	f800283a 	ret

00011430 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   11430:	defffa04 	addi	sp,sp,-24
   11434:	df000515 	stw	fp,20(sp)
   11438:	df000504 	addi	fp,sp,20
   1143c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   11440:	0005303a 	rdctl	r2,status
   11444:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   11448:	e0fffd17 	ldw	r3,-12(fp)
   1144c:	00bfff84 	movi	r2,-2
   11450:	1884703a 	and	r2,r3,r2
   11454:	1001703a 	wrctl	status,r2
  
  return context;
   11458:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   1145c:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   11460:	e0bfff17 	ldw	r2,-4(fp)
   11464:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   11468:	e0bffc17 	ldw	r2,-16(fp)
   1146c:	10c00017 	ldw	r3,0(r2)
   11470:	e0bffc17 	ldw	r2,-16(fp)
   11474:	10800117 	ldw	r2,4(r2)
   11478:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   1147c:	e0bffc17 	ldw	r2,-16(fp)
   11480:	10c00117 	ldw	r3,4(r2)
   11484:	e0bffc17 	ldw	r2,-16(fp)
   11488:	10800017 	ldw	r2,0(r2)
   1148c:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   11490:	e0fffc17 	ldw	r3,-16(fp)
   11494:	e0bffc17 	ldw	r2,-16(fp)
   11498:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   1149c:	e0fffc17 	ldw	r3,-16(fp)
   114a0:	e0bffc17 	ldw	r2,-16(fp)
   114a4:	18800015 	stw	r2,0(r3)
   114a8:	e0bffe17 	ldw	r2,-8(fp)
   114ac:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   114b0:	e0bffb17 	ldw	r2,-20(fp)
   114b4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   114b8:	e037883a 	mov	sp,fp
   114bc:	df000017 	ldw	fp,0(sp)
   114c0:	dec00104 	addi	sp,sp,4
   114c4:	f800283a 	ret

000114c8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   114c8:	defffb04 	addi	sp,sp,-20
   114cc:	dfc00415 	stw	ra,16(sp)
   114d0:	df000315 	stw	fp,12(sp)
   114d4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   114d8:	d0a00f17 	ldw	r2,-32708(gp)
   114dc:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   114e0:	d0a6bf17 	ldw	r2,-25860(gp)
   114e4:	10800044 	addi	r2,r2,1
   114e8:	d0a6bf15 	stw	r2,-25860(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   114ec:	00003106 	br	115b4 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   114f0:	e0bffe17 	ldw	r2,-8(fp)
   114f4:	10800017 	ldw	r2,0(r2)
   114f8:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   114fc:	e0bffe17 	ldw	r2,-8(fp)
   11500:	10800403 	ldbu	r2,16(r2)
   11504:	10803fcc 	andi	r2,r2,255
   11508:	1005003a 	cmpeq	r2,r2,zero
   1150c:	1000051e 	bne	r2,zero,11524 <alt_tick+0x5c>
   11510:	d0a6bf17 	ldw	r2,-25860(gp)
   11514:	1004c03a 	cmpne	r2,r2,zero
   11518:	1000021e 	bne	r2,zero,11524 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   1151c:	e0bffe17 	ldw	r2,-8(fp)
   11520:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   11524:	e0bffe17 	ldw	r2,-8(fp)
   11528:	10c00217 	ldw	r3,8(r2)
   1152c:	d0a6bf17 	ldw	r2,-25860(gp)
   11530:	10c01e36 	bltu	r2,r3,115ac <alt_tick+0xe4>
   11534:	e0bffe17 	ldw	r2,-8(fp)
   11538:	10800403 	ldbu	r2,16(r2)
   1153c:	10803fcc 	andi	r2,r2,255
   11540:	1004c03a 	cmpne	r2,r2,zero
   11544:	1000191e 	bne	r2,zero,115ac <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   11548:	e0bffe17 	ldw	r2,-8(fp)
   1154c:	10c00317 	ldw	r3,12(r2)
   11550:	e0bffe17 	ldw	r2,-8(fp)
   11554:	11000517 	ldw	r4,20(r2)
   11558:	183ee83a 	callr	r3
   1155c:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   11560:	e0bffd17 	ldw	r2,-12(fp)
   11564:	1004c03a 	cmpne	r2,r2,zero
   11568:	1000031e 	bne	r2,zero,11578 <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   1156c:	e13ffe17 	ldw	r4,-8(fp)
   11570:	00114300 	call	11430 <alt_alarm_stop>
   11574:	00000d06 	br	115ac <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   11578:	e0bffe17 	ldw	r2,-8(fp)
   1157c:	10c00217 	ldw	r3,8(r2)
   11580:	e0bffd17 	ldw	r2,-12(fp)
   11584:	1887883a 	add	r3,r3,r2
   11588:	e0bffe17 	ldw	r2,-8(fp)
   1158c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   11590:	e0bffe17 	ldw	r2,-8(fp)
   11594:	10c00217 	ldw	r3,8(r2)
   11598:	d0a6bf17 	ldw	r2,-25860(gp)
   1159c:	1880032e 	bgeu	r3,r2,115ac <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   115a0:	e0fffe17 	ldw	r3,-8(fp)
   115a4:	00800044 	movi	r2,1
   115a8:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   115ac:	e0bfff17 	ldw	r2,-4(fp)
   115b0:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   115b4:	d0e00f04 	addi	r3,gp,-32708
   115b8:	e0bffe17 	ldw	r2,-8(fp)
   115bc:	10ffcc1e 	bne	r2,r3,114f0 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   115c0:	e037883a 	mov	sp,fp
   115c4:	dfc00117 	ldw	ra,4(sp)
   115c8:	df000017 	ldw	fp,0(sp)
   115cc:	dec00204 	addi	sp,sp,8
   115d0:	f800283a 	ret

000115d4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   115d4:	deffff04 	addi	sp,sp,-4
   115d8:	df000015 	stw	fp,0(sp)
   115dc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   115e0:	000170fa 	wrctl	ienable,zero
}
   115e4:	e037883a 	mov	sp,fp
   115e8:	df000017 	ldw	fp,0(sp)
   115ec:	dec00104 	addi	sp,sp,4
   115f0:	f800283a 	ret

000115f4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   115f4:	defff904 	addi	sp,sp,-28
   115f8:	dfc00615 	stw	ra,24(sp)
   115fc:	df000515 	stw	fp,20(sp)
   11600:	df000504 	addi	fp,sp,20
   11604:	e13ffd15 	stw	r4,-12(fp)
   11608:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   1160c:	e0bffe17 	ldw	r2,-8(fp)
   11610:	10800017 	ldw	r2,0(r2)
   11614:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   11618:	e13ffd17 	ldw	r4,-12(fp)
   1161c:	00019d80 	call	19d8 <strlen>
   11620:	10800044 	addi	r2,r2,1
   11624:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   11628:	00000d06 	br	11660 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1162c:	e0bffc17 	ldw	r2,-16(fp)
   11630:	11000217 	ldw	r4,8(r2)
   11634:	e1bffb17 	ldw	r6,-20(fp)
   11638:	e17ffd17 	ldw	r5,-12(fp)
   1163c:	001193c0 	call	1193c <memcmp>
   11640:	1004c03a 	cmpne	r2,r2,zero
   11644:	1000031e 	bne	r2,zero,11654 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   11648:	e0bffc17 	ldw	r2,-16(fp)
   1164c:	e0bfff15 	stw	r2,-4(fp)
   11650:	00000706 	br	11670 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   11654:	e0bffc17 	ldw	r2,-16(fp)
   11658:	10800017 	ldw	r2,0(r2)
   1165c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   11660:	e0fffe17 	ldw	r3,-8(fp)
   11664:	e0bffc17 	ldw	r2,-16(fp)
   11668:	10fff01e 	bne	r2,r3,1162c <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   1166c:	e03fff15 	stw	zero,-4(fp)
   11670:	e0bfff17 	ldw	r2,-4(fp)
}
   11674:	e037883a 	mov	sp,fp
   11678:	dfc00117 	ldw	ra,4(sp)
   1167c:	df000017 	ldw	fp,0(sp)
   11680:	dec00204 	addi	sp,sp,8
   11684:	f800283a 	ret

00011688 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   11688:	defffa04 	addi	sp,sp,-24
   1168c:	dfc00515 	stw	ra,20(sp)
   11690:	df000415 	stw	fp,16(sp)
   11694:	df000404 	addi	fp,sp,16
   11698:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   1169c:	00800074 	movhi	r2,1
   116a0:	108f6e04 	addi	r2,r2,15800
   116a4:	10800017 	ldw	r2,0(r2)
   116a8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   116ac:	00003306 	br	1177c <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   116b0:	e0bffd17 	ldw	r2,-12(fp)
   116b4:	11000217 	ldw	r4,8(r2)
   116b8:	00019d80 	call	19d8 <strlen>
   116bc:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   116c0:	e0bffd17 	ldw	r2,-12(fp)
   116c4:	10c00217 	ldw	r3,8(r2)
   116c8:	e0bffc17 	ldw	r2,-16(fp)
   116cc:	1885883a 	add	r2,r3,r2
   116d0:	10bfffc4 	addi	r2,r2,-1
   116d4:	10800003 	ldbu	r2,0(r2)
   116d8:	10803fcc 	andi	r2,r2,255
   116dc:	1080201c 	xori	r2,r2,128
   116e0:	10bfe004 	addi	r2,r2,-128
   116e4:	10800bd8 	cmpnei	r2,r2,47
   116e8:	1000031e 	bne	r2,zero,116f8 <alt_find_file+0x70>
    {
      len -= 1;
   116ec:	e0bffc17 	ldw	r2,-16(fp)
   116f0:	10bfffc4 	addi	r2,r2,-1
   116f4:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   116f8:	e0bffc17 	ldw	r2,-16(fp)
   116fc:	1007883a 	mov	r3,r2
   11700:	e0bffe17 	ldw	r2,-8(fp)
   11704:	1885883a 	add	r2,r3,r2
   11708:	10800003 	ldbu	r2,0(r2)
   1170c:	10803fcc 	andi	r2,r2,255
   11710:	1080201c 	xori	r2,r2,128
   11714:	10bfe004 	addi	r2,r2,-128
   11718:	10800be0 	cmpeqi	r2,r2,47
   1171c:	10000a1e 	bne	r2,zero,11748 <alt_find_file+0xc0>
   11720:	e0bffc17 	ldw	r2,-16(fp)
   11724:	1007883a 	mov	r3,r2
   11728:	e0bffe17 	ldw	r2,-8(fp)
   1172c:	1885883a 	add	r2,r3,r2
   11730:	10800003 	ldbu	r2,0(r2)
   11734:	10803fcc 	andi	r2,r2,255
   11738:	1080201c 	xori	r2,r2,128
   1173c:	10bfe004 	addi	r2,r2,-128
   11740:	1004c03a 	cmpne	r2,r2,zero
   11744:	10000a1e 	bne	r2,zero,11770 <alt_find_file+0xe8>
   11748:	e0bffd17 	ldw	r2,-12(fp)
   1174c:	11000217 	ldw	r4,8(r2)
   11750:	e1bffc17 	ldw	r6,-16(fp)
   11754:	e17ffe17 	ldw	r5,-8(fp)
   11758:	001193c0 	call	1193c <memcmp>
   1175c:	1004c03a 	cmpne	r2,r2,zero
   11760:	1000031e 	bne	r2,zero,11770 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   11764:	e0bffd17 	ldw	r2,-12(fp)
   11768:	e0bfff15 	stw	r2,-4(fp)
   1176c:	00000806 	br	11790 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   11770:	e0bffd17 	ldw	r2,-12(fp)
   11774:	10800017 	ldw	r2,0(r2)
   11778:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1177c:	00c00074 	movhi	r3,1
   11780:	18cf6e04 	addi	r3,r3,15800
   11784:	e0bffd17 	ldw	r2,-12(fp)
   11788:	10ffc91e 	bne	r2,r3,116b0 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   1178c:	e03fff15 	stw	zero,-4(fp)
   11790:	e0bfff17 	ldw	r2,-4(fp)
}
   11794:	e037883a 	mov	sp,fp
   11798:	dfc00117 	ldw	ra,4(sp)
   1179c:	df000017 	ldw	fp,0(sp)
   117a0:	dec00204 	addi	sp,sp,8
   117a4:	f800283a 	ret

000117a8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   117a8:	defffc04 	addi	sp,sp,-16
   117ac:	df000315 	stw	fp,12(sp)
   117b0:	df000304 	addi	fp,sp,12
   117b4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   117b8:	00bffa04 	movi	r2,-24
   117bc:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   117c0:	e03ffe15 	stw	zero,-8(fp)
   117c4:	00001e06 	br	11840 <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
   117c8:	e0bffe17 	ldw	r2,-8(fp)
   117cc:	00c00074 	movhi	r3,1
   117d0:	18caef04 	addi	r3,r3,11196
   117d4:	10800324 	muli	r2,r2,12
   117d8:	10c5883a 	add	r2,r2,r3
   117dc:	10800017 	ldw	r2,0(r2)
   117e0:	1004c03a 	cmpne	r2,r2,zero
   117e4:	1000131e 	bne	r2,zero,11834 <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
   117e8:	e0bffe17 	ldw	r2,-8(fp)
   117ec:	00c00074 	movhi	r3,1
   117f0:	18caef04 	addi	r3,r3,11196
   117f4:	10800324 	muli	r2,r2,12
   117f8:	10c7883a 	add	r3,r2,r3
   117fc:	e0bfff17 	ldw	r2,-4(fp)
   11800:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   11804:	00800074 	movhi	r2,1
   11808:	108f7204 	addi	r2,r2,15816
   1180c:	10c00017 	ldw	r3,0(r2)
   11810:	e0bffe17 	ldw	r2,-8(fp)
   11814:	1880040e 	bge	r3,r2,11828 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
   11818:	00c00074 	movhi	r3,1
   1181c:	18cf7204 	addi	r3,r3,15816
   11820:	e0bffe17 	ldw	r2,-8(fp)
   11824:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   11828:	e0bffe17 	ldw	r2,-8(fp)
   1182c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   11830:	00000606 	br	1184c <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   11834:	e0bffe17 	ldw	r2,-8(fp)
   11838:	10800044 	addi	r2,r2,1
   1183c:	e0bffe15 	stw	r2,-8(fp)
   11840:	e0bffe17 	ldw	r2,-8(fp)
   11844:	10800810 	cmplti	r2,r2,32
   11848:	103fdf1e 	bne	r2,zero,117c8 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   1184c:	e0bffd17 	ldw	r2,-12(fp)
}
   11850:	e037883a 	mov	sp,fp
   11854:	df000017 	ldw	fp,0(sp)
   11858:	dec00104 	addi	sp,sp,4
   1185c:	f800283a 	ret

00011860 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   11860:	defffb04 	addi	sp,sp,-20
   11864:	df000415 	stw	fp,16(sp)
   11868:	df000404 	addi	fp,sp,16
   1186c:	e13ffe15 	stw	r4,-8(fp)
   11870:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   11874:	e0bfff17 	ldw	r2,-4(fp)
   11878:	10840070 	cmpltui	r2,r2,4097
   1187c:	1000021e 	bne	r2,zero,11888 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   11880:	00840004 	movi	r2,4096
   11884:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   11888:	e0fffe17 	ldw	r3,-8(fp)
   1188c:	e0bfff17 	ldw	r2,-4(fp)
   11890:	1885883a 	add	r2,r3,r2
   11894:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   11898:	e0bffe17 	ldw	r2,-8(fp)
   1189c:	e0bffd15 	stw	r2,-12(fp)
   118a0:	00000506 	br	118b8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   118a4:	e0bffd17 	ldw	r2,-12(fp)
   118a8:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   118ac:	e0bffd17 	ldw	r2,-12(fp)
   118b0:	10800804 	addi	r2,r2,32
   118b4:	e0bffd15 	stw	r2,-12(fp)
   118b8:	e0fffd17 	ldw	r3,-12(fp)
   118bc:	e0bffc17 	ldw	r2,-16(fp)
   118c0:	18bff836 	bltu	r3,r2,118a4 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   118c4:	e0bffe17 	ldw	r2,-8(fp)
   118c8:	108007cc 	andi	r2,r2,31
   118cc:	1005003a 	cmpeq	r2,r2,zero
   118d0:	1000021e 	bne	r2,zero,118dc <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   118d4:	e0bffd17 	ldw	r2,-12(fp)
   118d8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   118dc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   118e0:	e037883a 	mov	sp,fp
   118e4:	df000017 	ldw	fp,0(sp)
   118e8:	dec00104 	addi	sp,sp,4
   118ec:	f800283a 	ret

000118f0 <atexit>:
   118f0:	200b883a 	mov	r5,r4
   118f4:	000d883a 	mov	r6,zero
   118f8:	0009883a 	mov	r4,zero
   118fc:	000f883a 	mov	r7,zero
   11900:	00119b01 	jmpi	119b0 <__register_exitproc>

00011904 <exit>:
   11904:	defffe04 	addi	sp,sp,-8
   11908:	000b883a 	mov	r5,zero
   1190c:	dc000015 	stw	r16,0(sp)
   11910:	dfc00115 	stw	ra,4(sp)
   11914:	2021883a 	mov	r16,r4
   11918:	0011ae80 	call	11ae8 <__call_exitprocs>
   1191c:	00800074 	movhi	r2,1
   11920:	108f6804 	addi	r2,r2,15776
   11924:	11000017 	ldw	r4,0(r2)
   11928:	20800f17 	ldw	r2,60(r4)
   1192c:	10000126 	beq	r2,zero,11934 <exit+0x30>
   11930:	103ee83a 	callr	r2
   11934:	8009883a 	mov	r4,r16
   11938:	0011cd80 	call	11cd8 <_exit>

0001193c <memcmp>:
   1193c:	00c000c4 	movi	r3,3
   11940:	1980032e 	bgeu	r3,r6,11950 <memcmp+0x14>
   11944:	2144b03a 	or	r2,r4,r5
   11948:	10c4703a 	and	r2,r2,r3
   1194c:	10000f26 	beq	r2,zero,1198c <memcmp+0x50>
   11950:	31ffffc4 	addi	r7,r6,-1
   11954:	3000061e 	bne	r6,zero,11970 <memcmp+0x34>
   11958:	00000a06 	br	11984 <memcmp+0x48>
   1195c:	39ffffc4 	addi	r7,r7,-1
   11960:	00bfffc4 	movi	r2,-1
   11964:	21000044 	addi	r4,r4,1
   11968:	29400044 	addi	r5,r5,1
   1196c:	38800526 	beq	r7,r2,11984 <memcmp+0x48>
   11970:	20c00003 	ldbu	r3,0(r4)
   11974:	28800003 	ldbu	r2,0(r5)
   11978:	18bff826 	beq	r3,r2,1195c <memcmp+0x20>
   1197c:	1885c83a 	sub	r2,r3,r2
   11980:	f800283a 	ret
   11984:	0005883a 	mov	r2,zero
   11988:	f800283a 	ret
   1198c:	180f883a 	mov	r7,r3
   11990:	20c00017 	ldw	r3,0(r4)
   11994:	28800017 	ldw	r2,0(r5)
   11998:	18bfed1e 	bne	r3,r2,11950 <memcmp+0x14>
   1199c:	31bfff04 	addi	r6,r6,-4
   119a0:	21000104 	addi	r4,r4,4
   119a4:	29400104 	addi	r5,r5,4
   119a8:	39bff936 	bltu	r7,r6,11990 <memcmp+0x54>
   119ac:	003fe806 	br	11950 <memcmp+0x14>

000119b0 <__register_exitproc>:
   119b0:	defffa04 	addi	sp,sp,-24
   119b4:	00800074 	movhi	r2,1
   119b8:	108f6804 	addi	r2,r2,15776
   119bc:	dc000015 	stw	r16,0(sp)
   119c0:	14000017 	ldw	r16,0(r2)
   119c4:	dd000415 	stw	r20,16(sp)
   119c8:	2829883a 	mov	r20,r5
   119cc:	81405217 	ldw	r5,328(r16)
   119d0:	dcc00315 	stw	r19,12(sp)
   119d4:	dc800215 	stw	r18,8(sp)
   119d8:	dc400115 	stw	r17,4(sp)
   119dc:	dfc00515 	stw	ra,20(sp)
   119e0:	2023883a 	mov	r17,r4
   119e4:	3027883a 	mov	r19,r6
   119e8:	3825883a 	mov	r18,r7
   119ec:	28002526 	beq	r5,zero,11a84 <__register_exitproc+0xd4>
   119f0:	29000117 	ldw	r4,4(r5)
   119f4:	008007c4 	movi	r2,31
   119f8:	11002716 	blt	r2,r4,11a98 <__register_exitproc+0xe8>
   119fc:	8800101e 	bne	r17,zero,11a40 <__register_exitproc+0x90>
   11a00:	2105883a 	add	r2,r4,r4
   11a04:	1085883a 	add	r2,r2,r2
   11a08:	20c00044 	addi	r3,r4,1
   11a0c:	1145883a 	add	r2,r2,r5
   11a10:	0009883a 	mov	r4,zero
   11a14:	15000215 	stw	r20,8(r2)
   11a18:	28c00115 	stw	r3,4(r5)
   11a1c:	2005883a 	mov	r2,r4
   11a20:	dfc00517 	ldw	ra,20(sp)
   11a24:	dd000417 	ldw	r20,16(sp)
   11a28:	dcc00317 	ldw	r19,12(sp)
   11a2c:	dc800217 	ldw	r18,8(sp)
   11a30:	dc400117 	ldw	r17,4(sp)
   11a34:	dc000017 	ldw	r16,0(sp)
   11a38:	dec00604 	addi	sp,sp,24
   11a3c:	f800283a 	ret
   11a40:	29802204 	addi	r6,r5,136
   11a44:	00800044 	movi	r2,1
   11a48:	110e983a 	sll	r7,r2,r4
   11a4c:	30c04017 	ldw	r3,256(r6)
   11a50:	2105883a 	add	r2,r4,r4
   11a54:	1085883a 	add	r2,r2,r2
   11a58:	1185883a 	add	r2,r2,r6
   11a5c:	19c6b03a 	or	r3,r3,r7
   11a60:	14802015 	stw	r18,128(r2)
   11a64:	14c00015 	stw	r19,0(r2)
   11a68:	00800084 	movi	r2,2
   11a6c:	30c04015 	stw	r3,256(r6)
   11a70:	88bfe31e 	bne	r17,r2,11a00 <__register_exitproc+0x50>
   11a74:	30804117 	ldw	r2,260(r6)
   11a78:	11c4b03a 	or	r2,r2,r7
   11a7c:	30804115 	stw	r2,260(r6)
   11a80:	003fdf06 	br	11a00 <__register_exitproc+0x50>
   11a84:	00800074 	movhi	r2,1
   11a88:	1096b104 	addi	r2,r2,23236
   11a8c:	100b883a 	mov	r5,r2
   11a90:	80805215 	stw	r2,328(r16)
   11a94:	003fd606 	br	119f0 <__register_exitproc+0x40>
   11a98:	00800034 	movhi	r2,0
   11a9c:	10800004 	addi	r2,r2,0
   11aa0:	1000021e 	bne	r2,zero,11aac <__register_exitproc+0xfc>
   11aa4:	013fffc4 	movi	r4,-1
   11aa8:	003fdc06 	br	11a1c <__register_exitproc+0x6c>
   11aac:	01006404 	movi	r4,400
   11ab0:	103ee83a 	callr	r2
   11ab4:	1007883a 	mov	r3,r2
   11ab8:	103ffa26 	beq	r2,zero,11aa4 <__register_exitproc+0xf4>
   11abc:	80805217 	ldw	r2,328(r16)
   11ac0:	180b883a 	mov	r5,r3
   11ac4:	18000115 	stw	zero,4(r3)
   11ac8:	18800015 	stw	r2,0(r3)
   11acc:	80c05215 	stw	r3,328(r16)
   11ad0:	18006215 	stw	zero,392(r3)
   11ad4:	18006315 	stw	zero,396(r3)
   11ad8:	0009883a 	mov	r4,zero
   11adc:	883fc826 	beq	r17,zero,11a00 <__register_exitproc+0x50>
   11ae0:	003fd706 	br	11a40 <__register_exitproc+0x90>

00011ae4 <register_fini>:
   11ae4:	f800283a 	ret

00011ae8 <__call_exitprocs>:
   11ae8:	00800074 	movhi	r2,1
   11aec:	108f6804 	addi	r2,r2,15776
   11af0:	10800017 	ldw	r2,0(r2)
   11af4:	defff304 	addi	sp,sp,-52
   11af8:	df000b15 	stw	fp,44(sp)
   11afc:	d8800115 	stw	r2,4(sp)
   11b00:	00800034 	movhi	r2,0
   11b04:	10800004 	addi	r2,r2,0
   11b08:	1005003a 	cmpeq	r2,r2,zero
   11b0c:	d8800215 	stw	r2,8(sp)
   11b10:	d8800117 	ldw	r2,4(sp)
   11b14:	dd400815 	stw	r21,32(sp)
   11b18:	dd000715 	stw	r20,28(sp)
   11b1c:	10805204 	addi	r2,r2,328
   11b20:	dfc00c15 	stw	ra,48(sp)
   11b24:	ddc00a15 	stw	r23,40(sp)
   11b28:	dd800915 	stw	r22,36(sp)
   11b2c:	dcc00615 	stw	r19,24(sp)
   11b30:	dc800515 	stw	r18,20(sp)
   11b34:	dc400415 	stw	r17,16(sp)
   11b38:	dc000315 	stw	r16,12(sp)
   11b3c:	282b883a 	mov	r21,r5
   11b40:	2039883a 	mov	fp,r4
   11b44:	d8800015 	stw	r2,0(sp)
   11b48:	2829003a 	cmpeq	r20,r5,zero
   11b4c:	d8800117 	ldw	r2,4(sp)
   11b50:	14405217 	ldw	r17,328(r2)
   11b54:	88001026 	beq	r17,zero,11b98 <__call_exitprocs+0xb0>
   11b58:	ddc00017 	ldw	r23,0(sp)
   11b5c:	88800117 	ldw	r2,4(r17)
   11b60:	8c802204 	addi	r18,r17,136
   11b64:	143fffc4 	addi	r16,r2,-1
   11b68:	80000916 	blt	r16,zero,11b90 <__call_exitprocs+0xa8>
   11b6c:	05bfffc4 	movi	r22,-1
   11b70:	a000151e 	bne	r20,zero,11bc8 <__call_exitprocs+0xe0>
   11b74:	8409883a 	add	r4,r16,r16
   11b78:	2105883a 	add	r2,r4,r4
   11b7c:	1485883a 	add	r2,r2,r18
   11b80:	10c02017 	ldw	r3,128(r2)
   11b84:	a8c01126 	beq	r21,r3,11bcc <__call_exitprocs+0xe4>
   11b88:	843fffc4 	addi	r16,r16,-1
   11b8c:	85bff81e 	bne	r16,r22,11b70 <__call_exitprocs+0x88>
   11b90:	d8800217 	ldw	r2,8(sp)
   11b94:	10003126 	beq	r2,zero,11c5c <__call_exitprocs+0x174>
   11b98:	dfc00c17 	ldw	ra,48(sp)
   11b9c:	df000b17 	ldw	fp,44(sp)
   11ba0:	ddc00a17 	ldw	r23,40(sp)
   11ba4:	dd800917 	ldw	r22,36(sp)
   11ba8:	dd400817 	ldw	r21,32(sp)
   11bac:	dd000717 	ldw	r20,28(sp)
   11bb0:	dcc00617 	ldw	r19,24(sp)
   11bb4:	dc800517 	ldw	r18,20(sp)
   11bb8:	dc400417 	ldw	r17,16(sp)
   11bbc:	dc000317 	ldw	r16,12(sp)
   11bc0:	dec00d04 	addi	sp,sp,52
   11bc4:	f800283a 	ret
   11bc8:	8409883a 	add	r4,r16,r16
   11bcc:	88c00117 	ldw	r3,4(r17)
   11bd0:	2105883a 	add	r2,r4,r4
   11bd4:	1445883a 	add	r2,r2,r17
   11bd8:	18ffffc4 	addi	r3,r3,-1
   11bdc:	11800217 	ldw	r6,8(r2)
   11be0:	1c001526 	beq	r3,r16,11c38 <__call_exitprocs+0x150>
   11be4:	10000215 	stw	zero,8(r2)
   11be8:	303fe726 	beq	r6,zero,11b88 <__call_exitprocs+0xa0>
   11bec:	00c00044 	movi	r3,1
   11bf0:	1c06983a 	sll	r3,r3,r16
   11bf4:	90804017 	ldw	r2,256(r18)
   11bf8:	8cc00117 	ldw	r19,4(r17)
   11bfc:	1884703a 	and	r2,r3,r2
   11c00:	10001426 	beq	r2,zero,11c54 <__call_exitprocs+0x16c>
   11c04:	90804117 	ldw	r2,260(r18)
   11c08:	1884703a 	and	r2,r3,r2
   11c0c:	10000c1e 	bne	r2,zero,11c40 <__call_exitprocs+0x158>
   11c10:	2105883a 	add	r2,r4,r4
   11c14:	1485883a 	add	r2,r2,r18
   11c18:	11400017 	ldw	r5,0(r2)
   11c1c:	e009883a 	mov	r4,fp
   11c20:	303ee83a 	callr	r6
   11c24:	88800117 	ldw	r2,4(r17)
   11c28:	98bfc81e 	bne	r19,r2,11b4c <__call_exitprocs+0x64>
   11c2c:	b8800017 	ldw	r2,0(r23)
   11c30:	147fd526 	beq	r2,r17,11b88 <__call_exitprocs+0xa0>
   11c34:	003fc506 	br	11b4c <__call_exitprocs+0x64>
   11c38:	8c000115 	stw	r16,4(r17)
   11c3c:	003fea06 	br	11be8 <__call_exitprocs+0x100>
   11c40:	2105883a 	add	r2,r4,r4
   11c44:	1485883a 	add	r2,r2,r18
   11c48:	11000017 	ldw	r4,0(r2)
   11c4c:	303ee83a 	callr	r6
   11c50:	003ff406 	br	11c24 <__call_exitprocs+0x13c>
   11c54:	303ee83a 	callr	r6
   11c58:	003ff206 	br	11c24 <__call_exitprocs+0x13c>
   11c5c:	88800117 	ldw	r2,4(r17)
   11c60:	1000081e 	bne	r2,zero,11c84 <__call_exitprocs+0x19c>
   11c64:	89000017 	ldw	r4,0(r17)
   11c68:	20000726 	beq	r4,zero,11c88 <__call_exitprocs+0x1a0>
   11c6c:	b9000015 	stw	r4,0(r23)
   11c70:	8809883a 	mov	r4,r17
   11c74:	00000000 	call	0 <__alt_mem_sdram>
   11c78:	bc400017 	ldw	r17,0(r23)
   11c7c:	883fb71e 	bne	r17,zero,11b5c <__call_exitprocs+0x74>
   11c80:	003fc506 	br	11b98 <__call_exitprocs+0xb0>
   11c84:	89000017 	ldw	r4,0(r17)
   11c88:	882f883a 	mov	r23,r17
   11c8c:	2023883a 	mov	r17,r4
   11c90:	883fb21e 	bne	r17,zero,11b5c <__call_exitprocs+0x74>
   11c94:	003fc006 	br	11b98 <__call_exitprocs+0xb0>

00011c98 <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   11c98:	defffd04 	addi	sp,sp,-12
   11c9c:	df000215 	stw	fp,8(sp)
   11ca0:	df000204 	addi	fp,sp,8
   11ca4:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   11ca8:	e0bfff17 	ldw	r2,-4(fp)
   11cac:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   11cb0:	e0bffe17 	ldw	r2,-8(fp)
   11cb4:	1005003a 	cmpeq	r2,r2,zero
   11cb8:	1000021e 	bne	r2,zero,11cc4 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   11cbc:	002af070 	cmpltui	zero,zero,43969
   11cc0:	00000106 	br	11cc8 <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   11cc4:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   11cc8:	e037883a 	mov	sp,fp
   11ccc:	df000017 	ldw	fp,0(sp)
   11cd0:	dec00104 	addi	sp,sp,4
   11cd4:	f800283a 	ret

00011cd8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   11cd8:	defffd04 	addi	sp,sp,-12
   11cdc:	dfc00215 	stw	ra,8(sp)
   11ce0:	df000115 	stw	fp,4(sp)
   11ce4:	df000104 	addi	fp,sp,4
   11ce8:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   11cec:	e13fff17 	ldw	r4,-4(fp)
   11cf0:	0011c980 	call	11c98 <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   11cf4:	003fff06 	br	11cf4 <_exit+0x1c>
   11cf8:	00011ae4 	muli	zero,zero,1131
