
Milestone_1.elf:     file format elf32-littlenios2
Milestone_1.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00012ae4 memsz 0x00012ae4 flags r-x
    LOAD off    0x00013b04 vaddr 0x00012b04 paddr 0x0001458c align 2**12
         filesz 0x00001a88 memsz 0x00001a88 flags rw-
    LOAD off    0x00016014 vaddr 0x00016014 paddr 0x00016014 align 2**12
         filesz 0x00000000 memsz 0x000003f8 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000120fc  000001b4  000001b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000854  000122b0  000122b0  000132b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001a88  00012b04  0001458c  00013b04  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003f8  00016014  00016014  00016014  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000026  00000000  00000000  0001558c  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001058  00000000  00000000  000155b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000187e  00000000  00000000  00016610  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002f520  00000000  00000000  00017e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a559  00000000  00000000  000473ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001a7f4  00000000  00000000  00051907  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002018  00000000  00000000  0006c0fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002b35  00000000  00000000  0006e114  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001218a  00000000  00000000  00070c49  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00082dd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000b30  00000000  00000000  00082e08  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000871e2  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000871e5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000871e8  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000871e9  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000871ea  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000871ee  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000871f2  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000871f6  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  00087201  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0008720c  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000011  00000000  00000000  00087217  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000040  00000000  00000000  00087228  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00093cf1  00000000  00000000  00087268  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001b4 l    d  .text	00000000 .text
000122b0 l    d  .rodata	00000000 .rodata
00012b04 l    d  .rwdata	00000000 .rwdata
00016014 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000001fc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00012300 l     O .rodata	0000000c RR
00012348 l     O .rodata	0000000c WR
000123ac l     O .rodata	0000000c HELP
00016048 l     O .bss	0000000c commandList
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
00000acc l     F .text	00000058 std
00000bd8 l     F .text	00000008 __fp_lock
00000be0 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00012b04 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 refill.c
00001aa4 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00001c04 l     F .text	00000008 eofread
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00002190 l     F .text	00000058 __sprint_r
00012536 l     O .rodata	00000010 blanks.3452
00012526 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 vfscanf.c
0001254e l     O .rodata	00000022 basefix.3357
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00012671 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
00005a5c l     F .text	00000218 quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
00014560 l     O .rwdata	00000004 charset
00012814 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0001295c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 strtod.c
00009d08 l     F .text	00000048 match
0001332c l     O .rwdata	00000014 fpi.1950
00012978 l     O .rodata	00000028 tinytens
00013318 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0000c1f4 l     F .text	00000024 htinit
0000c280 l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0000cae8 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0000dc1c l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000ee44 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
0000f91c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000f97c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000fa7c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000fb9c l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000fc7c l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000fdd8 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00010004 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001457c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
000102a0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000134e8 l     O .rwdata	00001060 jtag_uart_0
00010390 l     F .text	00000038 alt_dev_reg
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
000105d0 l     F .text	00000228 altera_avalon_jtag_uart_irq
000107f8 l     F .text	000000b0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00010e74 l     F .text	00000070 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
000111c0 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000115e4 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00011720 l     F .text	000000dc alt_file_locked
00011984 l     F .text	00000060 alt_get_errno
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00012098 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
0001224c l     F .text	00000040 alt_sim_halt
0000897c g     F .text	00000094 _mprec_log10
00008a68 g     F .text	00000088 __any_on
0000cd7c g     F .text	00000070 _isatty_r
00012934 g     O .rodata	00000028 __mprec_tinytens
0000fe38 g     F .text	0000006c alt_main
00002090 g     F .text	0000008c strcpy
0001617c g     O .bss	00000100 alt_irq
00008184 g     F .text	00000078 _lseek_r
0001458c g       *ABS*	00000000 __flash_rwdata_start
0000e73c g     F .text	00000088 __eqdf2
0001640c g       *ABS*	00000000 __alt_heap_start
00001868 g     F .text	00000044 printf
00001d20 g     F .text	00000068 __sseek
00000b34 g     F .text	000000a4 __sinit
000080e4 g     F .text	00000084 _setlocale_r
00000c34 g     F .text	00000068 __sfmoreglue
0000c0b0 g     F .text	0000001c ungetc
0000fec4 g     F .text	00000020 __malloc_unlock
00009d50 g     F .text	000014e4 _strtod_r
00008490 g     F .text	000000e0 memmove
00000c24 g     F .text	00000010 _cleanup
00008af0 g     F .text	000000bc _Balloc
0000e84c g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000c180 g     F .text	00000074 _fstat_r
00016020 g     O .bss	00000004 errno
00005738 g     F .text	00000024 __svfscanf
0000f180 g     F .text	0000002c __make_fp
00016034 g     O .bss	00000004 alt_argv
0001c548 g       *ABS*	00000000 _gp
00000aa8 g     F .text	00000024 fgets
00013368 g     O .rwdata	00000180 alt_fd_list
00011ba8 g     F .text	00000094 alt_find_dev
00001730 g     F .text	000000a0 memcpy
0000cb34 g     F .text	00000248 __hexnan
00000590 g     F .text	00000058 cmd_generateList
00000c18 g     F .text	0000000c _cleanup_r
0000ea6c g     F .text	000000f8 __floatsidf
000116a8 g     F .text	00000078 alt_io_redirect
0000e95c g     F .text	00000088 __ltdf2
000122b0 g       *ABS*	00000000 __DTOR_END__
00008410 g     F .text	00000040 mbrtowc
0000575c g     F .text	00000068 _vfscanf_r
000088cc g     F .text	000000b0 __ratio
00010a10 g     F .text	00000224 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
000018ac g     F .text	00000034 _printf_r
00800000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000ef80 g     F .text	00000008 __udivsi3
0000fadc g     F .text	000000c0 isatty
00008094 g     F .text	0000002c iswspace
00012844 g     O .rodata	000000c8 __mprec_tens
000080c0 g     F .text	00000008 __locale_charset
0000ce84 g     F .text	000000a4 __fixunsdfsi
00011e14 g     F .text	00000090 alt_icache_flush
00016014 g     O .bss	00000004 __malloc_top_pad
0000bb24 g     F .text	00000024 strtoul
0001455c g     O .rwdata	00000004 __mb_cur_max
000080c8 g     F .text	0000000c _localeconv_r
0000bb48 g     F .text	000002f0 _strtoull_r
000091e8 g     F .text	0000003c __i2b
00007bf8 g     F .text	0000049c __sfvwrite_r
00001ac0 g     F .text	00000070 _sbrk_r
00009564 g     F .text	00000078 _read_r
0001330c g     O .rwdata	0000000c __lc_ctype
00014574 g     O .rwdata	00000004 alt_max_fd
0000f4c0 g     F .text	00000138 __unpack_d
00007228 g     F .text	00000110 _fclose_r
00007548 g     F .text	00000034 fflush
000008ec g     F .text	00000074 serial_readStr
00016018 g     O .bss	00000004 __malloc_max_sbrked_mem
0000e0ac g     F .text	00000074 __adddf3
0000dab4 g     F .text	00000078 __nesf2
000087ac g     F .text	00000120 __b2d
0000d504 g     F .text	000005b0 __umoddi3
0000fce8 g     F .text	000000f0 lseek
0001454c g     O .rwdata	00000004 _global_impure_ptr
000095dc g     F .text	000005f4 _realloc_r
0001640c g       *ABS*	00000000 __bss_end
000114ec g     F .text	000000f8 alt_iic_isr_register
00011a7c g     F .text	0000010c alt_tick
0001607c g     O .bss	00000100 __hexdig
0000cf28 g     F .text	000005dc __udivdi3
0001290c g     O .rodata	00000028 __mprec_bigtens
00009444 g     F .text	00000120 __s2b
0000ecb0 g     F .text	00000194 __floatunsidf
000086cc g     F .text	00000060 __mcmp
00014558 g     O .rwdata	00000004 __ctype_ptr
00000c00 g     F .text	00000018 __fp_lock_all
000114a4 g     F .text	00000048 alt_ic_irq_enabled
000119e4 g     F .text	00000098 alt_alarm_stop
0000b5b8 g     F .text	00000024 strtol
0001603c g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	000000c8 alt_irq_handler
00013340 g     O .rwdata	00000028 alt_dev_null
0000f010 g     F .text	000000c8 __unpack_f
000110c8 g     F .text	00000044 alt_dcache_flush_all
00008598 g     F .text	00000070 __hi0bits
0000eb64 g     F .text	000000d8 __fixdfsi
0000b358 g     F .text	0000001c strtod
0001458c g       *ABS*	00000000 __ram_rwdata_end
0001456c g     O .rwdata	00000008 alt_dev_list
00010180 g     F .text	00000120 write
0000db2c g     F .text	00000078 __gtsf2
00012b04 g       *ABS*	00000000 __ram_rodata_end
0000f9a8 g     F .text	000000d4 fstat
0000e9e4 g     F .text	00000088 __ledf2
0000087c g     F .text	00000038 memmgr_writeByte
00001e64 g     F .text	00000090 strcat
00009324 g     F .text	00000120 __pow5mult
00016024 g     O .bss	00000004 __nlocale_changed
0000ef88 g     F .text	00000008 __umodsi3
0001640c g       *ABS*	00000000 end
0000f6c0 g     F .text	00000160 __pack_f
00010510 g     F .text	000000c0 altera_avalon_jtag_uart_init
000122ac g       *ABS*	00000000 __CTOR_LIST__
00800000 g       *ABS*	00000000 __alt_stack_pointer
00010ee4 g     F .text	00000090 alt_avalon_timer_sc_init
0000ef90 g     F .text	00000080 __clzsi2
00010c34 g     F .text	00000240 altera_avalon_jtag_uart_write
00000b24 g     F .text	00000004 __sfp_lock_acquire
0000164c g     F .text	000000e4 memchr
000021e8 g     F .text	00001eac ___vfprintf_internal_r
00001ba4 g     F .text	00000060 _sprintf_r
000078e4 g     F .text	00000314 _free_r
0001209c g     F .text	000001b0 __call_exitprocs
00016028 g     O .bss	00000004 __mlocale_changed
00014554 g     O .rwdata	00000004 __malloc_sbrk_base
000001b4 g     F .text	0000004c _start
00016040 g     O .bss	00000004 _alt_tick_rate
0000b5dc g     F .text	00000318 _strtoll_r
00008eb4 g     F .text	0000014c __lshift
00016044 g     O .bss	00000004 _alt_nticks
0000fee4 g     F .text	00000120 read
00010334 g     F .text	0000005c alt_sys_init
00011f64 g     F .text	00000134 __register_exitproc
000003fc g     F .text	00000194 cmd_help
00009000 g     F .text	000001e8 __multiply
000108a8 g     F .text	00000074 altera_avalon_jtag_uart_close
00012b04 g       *ABS*	00000000 __ram_rwdata_start
000122b0 g       *ABS*	00000000 __ram_rodata_start
00016054 g     O .bss	00000028 __malloc_current_mallinfo
00008bac g     F .text	0000017c __d2b
000103c8 g     F .text	00000058 altera_avalon_jtag_uart_read_fd
0000b8f4 g     F .text	00000230 _strtoul_r
00011d5c g     F .text	000000b8 alt_get_fd
000008b4 g     F .text	00000038 serial_printStr
0000f5f8 g     F .text	000000c8 __fpcmp_parts_d
000059ec g     F .text	00000070 _close_r
00011ef0 g     F .text	00000074 memcmp
00010478 g     F .text	00000048 altera_avalon_jtag_uart_close_fd
0001640c g       *ABS*	00000000 __alt_stack_base
000104c0 g     F .text	00000050 altera_avalon_jtag_uart_ioctl_fd
00001c94 g     F .text	00000084 sscanf
000058b0 g     F .text	0000013c __swsetup_r
0000e4e4 g     F .text	00000258 __divdf3
00000c9c g     F .text	000000f0 __sfp
00008a10 g     F .text	00000058 __copybits
00012f04 g     O .rwdata	00000408 __malloc_av_
00000b30 g     F .text	00000004 __sinit_lock_release
0000e120 g     F .text	000003c4 __muldf3
00001e04 g     F .text	00000060 __sread
00007778 g     F .text	00000040 fread
00011c3c g     F .text	00000120 alt_find_file
0001110c g     F .text	000000b4 alt_dev_llist_insert
0000fea4 g     F .text	00000020 __malloc_lock
000100c4 g     F .text	000000bc sbrk
0000734c g     F .text	000001fc _fflush_r
0000c0cc g     F .text	000000b4 _calloc_r
00016014 g       *ABS*	00000000 __bss_start
000017d0 g     F .text	00000098 memset
00000200 g     F .text	000000f4 main
00016038 g     O .bss	00000004 alt_envp
0001601c g     O .bss	00000004 __malloc_max_total_mem
00010420 g     F .text	00000058 altera_avalon_jtag_uart_write_fd
0000dba4 g     F .text	00000078 __ltsf2
0000757c g     F .text	000001fc _fread_r
00001d18 g     F .text	00000008 __sclose
00800000 g       *ABS*	00000000 __alt_heap_limit
00007338 g     F .text	00000014 fclose
0000b374 g     F .text	00000244 _strtol_r
0000ec3c g     F .text	00000074 __truncdfsf2
0001627c g     O .bss	00000190 _atexit0
00005c74 g     F .text	000015b4 _dtoa_r
00000f0c g     F .text	00000740 _malloc_r
00014578 g     O .rwdata	00000004 alt_errno
0000be38 g     F .text	000000dc __submore
00000e54 g     F .text	000000b8 _fwalk
00000960 g     F .text	00000148 _fgets_r
00008450 g     F .text	00000040 _mbtowc_r
0000eec0 g     F .text	00000060 __divsi3
000129bc g     O .rodata	00000014 __thenan_df
000077b8 g     F .text	0000012c _malloc_trim_r
000122b0 g       *ABS*	00000000 __CTOR_END__
00001fd4 g     F .text	000000bc strcmp
000122b0 g       *ABS*	00000000 __flash_rodata_start
000122b0 g       *ABS*	00000000 __DTOR_LIST__
0000e7c4 g     F .text	00000088 __nedf2
00010300 g     F .text	00000034 alt_irq_init
00010064 g     F .text	00000060 alt_release_fd
00001b30 g     F .text	00000074 sprintf
000129d0 g     O .rodata	00000100 __clz_tab
0001602c g     O .bss	00000004 _PathLocale
0000b234 g     F .text	00000124 strtof
00011ea4 g     F .text	00000014 atexit
00005838 g     F .text	00000078 _write_r
00008168 g     F .text	0000001c setlocale
00009d00 g     F .text	00000008 nanf
00014548 g     O .rwdata	00000004 _impure_ptr
00016030 g     O .bss	00000004 alt_argc
00008390 g     F .text	00000080 _mbrtowc_r
00011284 g     F .text	00000064 _do_dtors
000018e0 g     F .text	000001c4 __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
0000872c g     F .text	00000080 __ulp
00009bd0 g     F .text	00000040 __isinfd
00000be8 g     F .text	00000018 __fp_unlock_all
00014564 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000080d4 g     F .text	00000010 localeconv
00011318 g     F .text	00000050 alt_ic_isr_register
0000c218 g     F .text	00000068 __hexdig_init
00001c0c g     F .text	00000088 _sscanf_r
0001458c g       *ABS*	00000000 _edata
0001640c g       *ABS*	00000000 _end
000001b4 g       *ABS*	00000000 __ram_exceptions_end
000057c4 g     F .text	00000074 vfscanf
0001091c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00011404 g     F .text	000000a0 alt_ic_irq_disable
00001d88 g     F .text	0000007c __swrite
00014550 g     O .rwdata	00000004 __malloc_trim_threshold
00011b88 g     F .text	00000020 altera_nios2_qsys_irq_init
00011eb8 g     F .text	00000038 exit
00000d8c g     F .text	000000c8 _fwalk_reent
00008d28 g     F .text	0000018c __mdiff
0000ef20 g     F .text	00000060 __modsi3
00800000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000005e8 g     F .text	00000294 memmgr_printMem
00000b28 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
00009c40 g     F .text	000000c0 __sccl
00012570 g     O .rodata	00000101 _ctype_
00000384 g     F .text	00000078 cmd_write
0000f0d8 g     F .text	000000a8 __fpcmp_parts_f
000002f4 g     F .text	00000090 cmd_read
0001228c g     F .text	00000020 _exit
00009c10 g     F .text	00000030 __isnand
00010f74 g     F .text	00000154 alt_alarm_start
0000cdec g     F .text	00000098 __muldi3
000081fc g     F .text	00000194 __smakebuf_r
0000211c g     F .text	00000074 strlen
000117fc g     F .text	00000188 open
0000e8d4 g     F .text	00000088 __gedf2
0000c330 g     F .text	000007b8 __gethex
000112e8 g     F .text	00000030 alt_icache_flush_all
00001ef4 g     F .text	000000e0 strchr
00014580 g     O .rwdata	00000004 alt_priority_mask
00011368 g     F .text	0000009c alt_ic_irq_enable
00004094 g     F .text	00000024 __vfprintf_internal
0000e02c g     F .text	00000080 __subdf3
00008608 g     F .text	000000c4 __lo0bits
000040b8 g     F .text	00001680 __svfscanf_r
00014584 g     O .rwdata	00000008 alt_alarm_list
0000bf14 g     F .text	0000019c _ungetc_r
00011220 g     F .text	00000064 _do_ctors
0000f820 g     F .text	000000fc close
0000fbfc g     F .text	00000080 alt_load
0000f1ac g     F .text	00000314 __pack_d
00000000  w      *UND*	00000000 free
00000b2c g     F .text	00000004 __sinit_lock_acquire
00009224 g     F .text	00000100 __multadd
00008570 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08406d14 	ori	at,at,436
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  44:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  fc:	0005313a 	rdctl	r2,ipending
 100:	e0bffc15 	stw	r2,-16(fp)

  return active;
 104:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 108:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 10c:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 110:	00800044 	movi	r2,1
 114:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 118:	e0ffff17 	ldw	r3,-4(fp)
 11c:	e0bffe17 	ldw	r2,-8(fp)
 120:	1884703a 	and	r2,r3,r2
 124:	1005003a 	cmpeq	r2,r2,zero
 128:	1000161e 	bne	r2,zero,184 <alt_irq_handler+0x98>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	e0bffd17 	ldw	r2,-12(fp)
 130:	00c00074 	movhi	r3,1
 134:	18d85f04 	addi	r3,r3,24956
 138:	100490fa 	slli	r2,r2,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	11400017 	ldw	r5,0(r2)
 144:	e0bffd17 	ldw	r2,-12(fp)
 148:	00c00074 	movhi	r3,1
 14c:	18d85f04 	addi	r3,r3,24956
 150:	100490fa 	slli	r2,r2,3
 154:	10c5883a 	add	r2,r2,r3
 158:	10800104 	addi	r2,r2,4
 15c:	11000017 	ldw	r4,0(r2)
 160:	283ee83a 	callr	r5
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 164:	0005313a 	rdctl	r2,ipending
 168:	e0bffb15 	stw	r2,-20(fp)

  return active;
 16c:	e0bffb17 	ldw	r2,-20(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 170:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	1004c03a 	cmpne	r2,r2,zero
 17c:	103fe31e 	bne	r2,zero,10c <alt_irq_handler+0x20>
 180:	00000706 	br	1a0 <alt_irq_handler+0xb4>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 184:	e0bffe17 	ldw	r2,-8(fp)
 188:	1085883a 	add	r2,r2,r2
 18c:	e0bffe15 	stw	r2,-8(fp)
      i++;
 190:	e0bffd17 	ldw	r2,-12(fp)
 194:	10800044 	addi	r2,r2,1
 198:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 19c:	003fde06 	br	118 <alt_irq_handler+0x2c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 1a0:	e037883a 	mov	sp,fp
 1a4:	dfc00117 	ldw	ra,4(sp)
 1a8:	df000017 	ldw	fp,0(sp)
 1ac:	dec00204 	addi	sp,sp,8
 1b0:	f800283a 	ret

Disassembly of section .text:

000001b4 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     1b4:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
     1b8:	10000033 	initd	0(r2)
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     1bc:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
     1c0:	00bffd16 	blt	zero,r2,1b8 <_start+0x4>
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1c4:	06c02034 	movhi	sp,128
    ori sp, sp, %lo(__alt_stack_pointer)
     1c8:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
     1cc:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1d0:	d6b15214 	ori	gp,gp,50504
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1d4:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d8:	10980514 	ori	r2,r2,24596

    movhi r3, %hi(__bss_end)
     1dc:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1e0:	18d90314 	ori	r3,r3,25612

    beq r2, r3, 1f
     1e4:	10c00326 	beq	r2,r3,1f4 <_start+0x40>

0:
    stw zero, (r2)
     1e8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1ec:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1f0:	10fffd36 	bltu	r2,r3,1e8 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1f4:	000fbfc0 	call	fbfc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f8:	000fe380 	call	fe38 <alt_main>

000001fc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1fc:	003fff06 	br	1fc <alt_after_alt_main>

00000200 <main>:
/**
 * main will run the serial command line input to get information from user
 * and enact the commands.
 * @return does not actually return (infinite loop)
 */
int main(){
     200:	deffd304 	addi	sp,sp,-180
     204:	dfc02c15 	stw	ra,176(sp)
     208:	df002b15 	stw	fp,172(sp)
     20c:	df002b04 	addi	fp,sp,172
	//setup command list
	cmd_generateList();
     210:	00005900 	call	590 <cmd_generateList>
     214:	00000006 	br	218 <main+0x18>

	//run input loop from serial input to command the controller
	while(1){

		//print prompt to the user for next command
		serial_printStr("\nEnter Command:");
     218:	01000074 	movhi	r4,1
     21c:	2108ee04 	addi	r4,r4,9144
     220:	00008b40 	call	8b4 <serial_printStr>

		//block until string entered
		serial_readStr(inputStr, sizeof inputStr);
     224:	e13fd804 	addi	r4,fp,-160
     228:	01401404 	movi	r5,80
     22c:	00008ec0 	call	8ec <serial_readStr>

		//parse for command
		int matched = sscanf(inputStr,"%s",cmdStr);
     230:	e13fd804 	addi	r4,fp,-160
     234:	e1bfec04 	addi	r6,fp,-80
     238:	01400074 	movhi	r5,1
     23c:	2948f204 	addi	r5,r5,9160
     240:	0001c940 	call	1c94 <sscanf>
     244:	e0bfd715 	stw	r2,-164(fp)
		if(matched != EOF){
     248:	e0bfd717 	ldw	r2,-164(fp)
     24c:	10bfffe0 	cmpeqi	r2,r2,-1
     250:	103ff11e 	bne	r2,zero,218 <main+0x18>
			//search command list for match
			int commandFoundFlag = 0;
     254:	e03fd615 	stw	zero,-168(fp)
			int i; for(i = 0; i < NUMBER_OF_COMMANDS;++i){
     258:	e03fd515 	stw	zero,-172(fp)
     25c:	00001b06 	br	2cc <main+0xcc>
				if(strcmp(cmdStr,commandList[i]->name)==0){
     260:	e0bfd517 	ldw	r2,-172(fp)
     264:	00c00074 	movhi	r3,1
     268:	18d81204 	addi	r3,r3,24648
     26c:	1085883a 	add	r2,r2,r2
     270:	1085883a 	add	r2,r2,r2
     274:	10c5883a 	add	r2,r2,r3
     278:	10800017 	ldw	r2,0(r2)
     27c:	11400017 	ldw	r5,0(r2)
     280:	e13fec04 	addi	r4,fp,-80
     284:	0001fd40 	call	1fd4 <strcmp>
     288:	1004c03a 	cmpne	r2,r2,zero
     28c:	10000c1e 	bne	r2,zero,2c0 <main+0xc0>
					commandList[i]->cmdFnt(inputStr);
     290:	e0bfd517 	ldw	r2,-172(fp)
     294:	00c00074 	movhi	r3,1
     298:	18d81204 	addi	r3,r3,24648
     29c:	1085883a 	add	r2,r2,r2
     2a0:	1085883a 	add	r2,r2,r2
     2a4:	10c5883a 	add	r2,r2,r3
     2a8:	10800017 	ldw	r2,0(r2)
     2ac:	10800217 	ldw	r2,8(r2)
     2b0:	e13fd804 	addi	r4,fp,-160
     2b4:	103ee83a 	callr	r2
					commandFoundFlag = 1;
     2b8:	00800044 	movi	r2,1
     2bc:	e0bfd615 	stw	r2,-168(fp)
		//parse for command
		int matched = sscanf(inputStr,"%s",cmdStr);
		if(matched != EOF){
			//search command list for match
			int commandFoundFlag = 0;
			int i; for(i = 0; i < NUMBER_OF_COMMANDS;++i){
     2c0:	e0bfd517 	ldw	r2,-172(fp)
     2c4:	10800044 	addi	r2,r2,1
     2c8:	e0bfd515 	stw	r2,-172(fp)
     2cc:	e0bfd517 	ldw	r2,-172(fp)
     2d0:	108000d0 	cmplti	r2,r2,3
     2d4:	103fe21e 	bne	r2,zero,260 <main+0x60>
					commandFoundFlag = 1;
				}
			}

			//if command not found then print error message
			if(!commandFoundFlag){
     2d8:	e0bfd617 	ldw	r2,-168(fp)
     2dc:	1004c03a 	cmpne	r2,r2,zero
     2e0:	103fcd1e 	bne	r2,zero,218 <main+0x18>
				serial_printStr("Invalid Command.\n");
     2e4:	01000074 	movhi	r4,1
     2e8:	2108f304 	addi	r4,r4,9164
     2ec:	00008b40 	call	8b4 <serial_printStr>
			}
		}
	}
     2f0:	003fc906 	br	218 <main+0x18>

000002f4 <cmd_read>:

/**
 * Read Command Function
 * @param arg string to parse
 */
void cmd_read(char* arg){
     2f4:	defff804 	addi	sp,sp,-32
     2f8:	dfc00715 	stw	ra,28(sp)
     2fc:	df000615 	stw	fp,24(sp)
     300:	df000604 	addi	fp,sp,24
     304:	e13fff15 	stw	r4,-4(fp)
	char cmd[3];
	unsigned int address, count;
	int matched = sscanf(arg,"%s %x %x",cmd,&address,&count);
     308:	e1bffc04 	addi	r6,fp,-16
     30c:	e1fffd04 	addi	r7,fp,-12
     310:	e0bffe04 	addi	r2,fp,-8
     314:	d8800015 	stw	r2,0(sp)
     318:	e13fff17 	ldw	r4,-4(fp)
     31c:	01400074 	movhi	r5,1
     320:	2948f804 	addi	r5,r5,9184
     324:	0001c940 	call	1c94 <sscanf>
     328:	e0bffb15 	stw	r2,-20(fp)
	if(matched == 3){
     32c:	e0bffb17 	ldw	r2,-20(fp)
     330:	108000d8 	cmpnei	r2,r2,3
     334:	1000041e 	bne	r2,zero,348 <cmd_read+0x54>
		//Read multiple
		memmgr_printMem(address,count);
     338:	e13ffd17 	ldw	r4,-12(fp)
     33c:	e17ffe17 	ldw	r5,-8(fp)
     340:	00005e80 	call	5e8 <memmgr_printMem>
     344:	00000a06 	br	370 <cmd_read+0x7c>
	}else if(matched == 2){
     348:	e0bffb17 	ldw	r2,-20(fp)
     34c:	10800098 	cmpnei	r2,r2,2
     350:	1000041e 	bne	r2,zero,364 <cmd_read+0x70>
		//Read single
		memmgr_printMem(address,1);
     354:	e13ffd17 	ldw	r4,-12(fp)
     358:	01400044 	movi	r5,1
     35c:	00005e80 	call	5e8 <memmgr_printMem>
     360:	00000306 	br	370 <cmd_read+0x7c>
	}else{
		serial_printStr("Invalid RR Command Structure.\n");
     364:	01000074 	movhi	r4,1
     368:	2108fb04 	addi	r4,r4,9196
     36c:	00008b40 	call	8b4 <serial_printStr>
	}
}
     370:	e037883a 	mov	sp,fp
     374:	dfc00117 	ldw	ra,4(sp)
     378:	df000017 	ldw	fp,0(sp)
     37c:	dec00204 	addi	sp,sp,8
     380:	f800283a 	ret

00000384 <cmd_write>:

/**
 * Write Command Function
 * @param arg string to parse
 */
void cmd_write(char* arg){
     384:	defff804 	addi	sp,sp,-32
     388:	dfc00715 	stw	ra,28(sp)
     38c:	df000615 	stw	fp,24(sp)
     390:	df000604 	addi	fp,sp,24
     394:	e13fff15 	stw	r4,-4(fp)
	char cmd[3];
	unsigned int address, value;
	int matched = sscanf(arg,"%s %x %x",cmd,&address,&value);
     398:	e1bffc04 	addi	r6,fp,-16
     39c:	e1fffd04 	addi	r7,fp,-12
     3a0:	e0bffe04 	addi	r2,fp,-8
     3a4:	d8800015 	stw	r2,0(sp)
     3a8:	e13fff17 	ldw	r4,-4(fp)
     3ac:	01400074 	movhi	r5,1
     3b0:	2948f804 	addi	r5,r5,9184
     3b4:	0001c940 	call	1c94 <sscanf>
     3b8:	e0bffb15 	stw	r2,-20(fp)
	if(matched == 3){
     3bc:	e0bffb17 	ldw	r2,-20(fp)
     3c0:	108000d8 	cmpnei	r2,r2,3
     3c4:	1000051e 	bne	r2,zero,3dc <cmd_write+0x58>
		//Write Byte
		memmgr_writeByte(address,value);
     3c8:	e13ffd17 	ldw	r4,-12(fp)
     3cc:	e0bffe17 	ldw	r2,-8(fp)
     3d0:	11403fcc 	andi	r5,r2,255
     3d4:	000087c0 	call	87c <memmgr_writeByte>
     3d8:	00000306 	br	3e8 <cmd_write+0x64>
	}else{
		serial_printStr("Invalid WR Command Structure.\n");
     3dc:	01000074 	movhi	r4,1
     3e0:	21090304 	addi	r4,r4,9228
     3e4:	00008b40 	call	8b4 <serial_printStr>
	}
}
     3e8:	e037883a 	mov	sp,fp
     3ec:	dfc00117 	ldw	ra,4(sp)
     3f0:	df000017 	ldw	fp,0(sp)
     3f4:	dec00204 	addi	sp,sp,8
     3f8:	f800283a 	ret

000003fc <cmd_help>:

/**
 * Help Command Function
 * @param arg string to parse
 */
void cmd_help(char* arg){
     3fc:	deffe404 	addi	sp,sp,-112
     400:	dfc01b15 	stw	ra,108(sp)
     404:	df001a15 	stw	fp,104(sp)
     408:	df001a04 	addi	fp,sp,104
     40c:	e13fff15 	stw	r4,-4(fp)
	char cmd[5];
	char otherStr[80]; //large to prevent failure of size

	//parse string for HELP <command> or HELP
	int matched = sscanf(arg,"%s %s",cmd,otherStr);
     410:	e1bfe904 	addi	r6,fp,-92
     414:	e1ffea44 	addi	r7,fp,-87
     418:	e13fff17 	ldw	r4,-4(fp)
     41c:	01400074 	movhi	r5,1
     420:	29490b04 	addi	r5,r5,9260
     424:	0001c940 	call	1c94 <sscanf>
     428:	e0bfe815 	stw	r2,-96(fp)
	if(matched == 2){
     42c:	e0bfe817 	ldw	r2,-96(fp)
     430:	10800098 	cmpnei	r2,r2,2
     434:	10004d1e 	bne	r2,zero,56c <cmd_help+0x170>
		//check for all parameter
		if(strcmp(otherStr,"ALL") == 0){
     438:	e13fea44 	addi	r4,fp,-87
     43c:	01400074 	movhi	r5,1
     440:	29490d04 	addi	r5,r5,9268
     444:	0001fd40 	call	1fd4 <strcmp>
     448:	1004c03a 	cmpne	r2,r2,zero
     44c:	1000211e 	bne	r2,zero,4d4 <cmd_help+0xd8>
			int i; for(i = 0; i < NUMBER_OF_COMMANDS; ++i){
     450:	e03fe715 	stw	zero,-100(fp)
     454:	00001b06 	br	4c4 <cmd_help+0xc8>
				serial_printStr(commandList[i]->name);
     458:	e0bfe717 	ldw	r2,-100(fp)
     45c:	00c00074 	movhi	r3,1
     460:	18d81204 	addi	r3,r3,24648
     464:	1085883a 	add	r2,r2,r2
     468:	1085883a 	add	r2,r2,r2
     46c:	10c5883a 	add	r2,r2,r3
     470:	10800017 	ldw	r2,0(r2)
     474:	11000017 	ldw	r4,0(r2)
     478:	00008b40 	call	8b4 <serial_printStr>
				serial_printStr(":\n");
     47c:	01000074 	movhi	r4,1
     480:	21090e04 	addi	r4,r4,9272
     484:	00008b40 	call	8b4 <serial_printStr>
				serial_printStr(commandList[i]->helpInfo);
     488:	e0bfe717 	ldw	r2,-100(fp)
     48c:	00c00074 	movhi	r3,1
     490:	18d81204 	addi	r3,r3,24648
     494:	1085883a 	add	r2,r2,r2
     498:	1085883a 	add	r2,r2,r2
     49c:	10c5883a 	add	r2,r2,r3
     4a0:	10800017 	ldw	r2,0(r2)
     4a4:	11000117 	ldw	r4,4(r2)
     4a8:	00008b40 	call	8b4 <serial_printStr>
				serial_printStr("\n");
     4ac:	01000074 	movhi	r4,1
     4b0:	21090f04 	addi	r4,r4,9276
     4b4:	00008b40 	call	8b4 <serial_printStr>
	//parse string for HELP <command> or HELP
	int matched = sscanf(arg,"%s %s",cmd,otherStr);
	if(matched == 2){
		//check for all parameter
		if(strcmp(otherStr,"ALL") == 0){
			int i; for(i = 0; i < NUMBER_OF_COMMANDS; ++i){
     4b8:	e0bfe717 	ldw	r2,-100(fp)
     4bc:	10800044 	addi	r2,r2,1
     4c0:	e0bfe715 	stw	r2,-100(fp)
     4c4:	e0bfe717 	ldw	r2,-100(fp)
     4c8:	108000d0 	cmplti	r2,r2,3
     4cc:	103fe21e 	bne	r2,zero,458 <cmd_help+0x5c>
				serial_printStr(commandList[i]->name);
				serial_printStr(":\n");
				serial_printStr(commandList[i]->helpInfo);
				serial_printStr("\n");
			}
			return;
     4d0:	00002a06 	br	57c <cmd_help+0x180>
		}else{
			//search list of commands for helpInfo and print
			int i; for(i = 0; i < NUMBER_OF_COMMANDS; ++i){
     4d4:	e03fe615 	stw	zero,-104(fp)
     4d8:	00001906 	br	540 <cmd_help+0x144>
				if(strcmp(otherStr,commandList[i]->name)==0){
     4dc:	e0bfe617 	ldw	r2,-104(fp)
     4e0:	00c00074 	movhi	r3,1
     4e4:	18d81204 	addi	r3,r3,24648
     4e8:	1085883a 	add	r2,r2,r2
     4ec:	1085883a 	add	r2,r2,r2
     4f0:	10c5883a 	add	r2,r2,r3
     4f4:	10800017 	ldw	r2,0(r2)
     4f8:	11400017 	ldw	r5,0(r2)
     4fc:	e13fea44 	addi	r4,fp,-87
     500:	0001fd40 	call	1fd4 <strcmp>
     504:	1004c03a 	cmpne	r2,r2,zero
     508:	10000a1e 	bne	r2,zero,534 <cmd_help+0x138>
					serial_printStr(commandList[i]->helpInfo);
     50c:	e0bfe617 	ldw	r2,-104(fp)
     510:	00c00074 	movhi	r3,1
     514:	18d81204 	addi	r3,r3,24648
     518:	1085883a 	add	r2,r2,r2
     51c:	1085883a 	add	r2,r2,r2
     520:	10c5883a 	add	r2,r2,r3
     524:	10800017 	ldw	r2,0(r2)
     528:	11000117 	ldw	r4,4(r2)
     52c:	00008b40 	call	8b4 <serial_printStr>
					return; //ends early as the item was found
     530:	00001206 	br	57c <cmd_help+0x180>
				serial_printStr("\n");
			}
			return;
		}else{
			//search list of commands for helpInfo and print
			int i; for(i = 0; i < NUMBER_OF_COMMANDS; ++i){
     534:	e0bfe617 	ldw	r2,-104(fp)
     538:	10800044 	addi	r2,r2,1
     53c:	e0bfe615 	stw	r2,-104(fp)
     540:	e0bfe617 	ldw	r2,-104(fp)
     544:	108000d0 	cmplti	r2,r2,3
     548:	103fe41e 	bne	r2,zero,4dc <cmd_help+0xe0>
				}
			}
		}

		//did not find command.
		serial_printStr("Command ");
     54c:	01000074 	movhi	r4,1
     550:	21091004 	addi	r4,r4,9280
     554:	00008b40 	call	8b4 <serial_printStr>
		serial_printStr(otherStr);
     558:	e13fea44 	addi	r4,fp,-87
     55c:	00008b40 	call	8b4 <serial_printStr>
		serial_printStr(" is not valid.\n");
     560:	01000074 	movhi	r4,1
     564:	21091304 	addi	r4,r4,9292
     568:	00008b40 	call	8b4 <serial_printStr>
	}

	//print its own help info
	serial_printStr(HELP.helpInfo);
     56c:	00800074 	movhi	r2,1
     570:	1088eb04 	addi	r2,r2,9132
     574:	11000117 	ldw	r4,4(r2)
     578:	00008b40 	call	8b4 <serial_printStr>
}
     57c:	e037883a 	mov	sp,fp
     580:	dfc00117 	ldw	ra,4(sp)
     584:	df000017 	ldw	fp,0(sp)
     588:	dec00204 	addi	sp,sp,8
     58c:	f800283a 	ret

00000590 <cmd_generateList>:

/**
 * Generates the list of commands in an array of pointers so that commands
 * can be looked up based on their name when parsed.
 */
void cmd_generateList(){
     590:	deffff04 	addi	sp,sp,-4
     594:	df000015 	stw	fp,0(sp)
     598:	d839883a 	mov	fp,sp
	//setup command list
	commandList[0] = &RR;
     59c:	00c00074 	movhi	r3,1
     5a0:	18d81204 	addi	r3,r3,24648
     5a4:	00800074 	movhi	r2,1
     5a8:	1088c004 	addi	r2,r2,8960
     5ac:	18800015 	stw	r2,0(r3)
	commandList[1] = &WR;
     5b0:	00c00074 	movhi	r3,1
     5b4:	18d81204 	addi	r3,r3,24648
     5b8:	00800074 	movhi	r2,1
     5bc:	1088d204 	addi	r2,r2,9032
     5c0:	18800115 	stw	r2,4(r3)
	commandList[2] = &HELP;
     5c4:	00c00074 	movhi	r3,1
     5c8:	18d81204 	addi	r3,r3,24648
     5cc:	00800074 	movhi	r2,1
     5d0:	1088eb04 	addi	r2,r2,9132
     5d4:	18800215 	stw	r2,8(r3)
}
     5d8:	e037883a 	mov	sp,fp
     5dc:	df000017 	ldw	fp,0(sp)
     5e0:	dec00104 	addi	sp,sp,4
     5e4:	f800283a 	ret

000005e8 <memmgr_printMem>:
/**
 * Prints out memory starting at the address for the count amount of bytes
 * @param address the address of memory to start printing
 * @param count the number of bytes to read and print
 */
void memmgr_printMem(unsigned int address, unsigned int count){
     5e8:	deffdf04 	addi	sp,sp,-132
     5ec:	dfc02015 	stw	ra,128(sp)
     5f0:	df001f15 	stw	fp,124(sp)
     5f4:	dc001e15 	stw	r16,120(sp)
     5f8:	df001e04 	addi	fp,sp,120
     5fc:	e13ffe15 	stw	r4,-8(fp)
     600:	e17fff15 	stw	r5,-4(fp)

	//sanity check count for valid specification
	if(count < 1){
     604:	e0bfff17 	ldw	r2,-4(fp)
     608:	1004c03a 	cmpne	r2,r2,zero
     60c:	1000041e 	bne	r2,zero,620 <memmgr_printMem+0x38>
		serial_printStr("Error - Invalid Number of Addresses Specified.\n");
     610:	01000074 	movhi	r4,1
     614:	21091704 	addi	r4,r4,9308
     618:	00008b40 	call	8b4 <serial_printStr>
		return; //error case so leave early
     61c:	00009106 	br	864 <memmgr_printMem+0x27c>
	}else if(address + count < address){
     620:	e0fffe17 	ldw	r3,-8(fp)
     624:	e0bfff17 	ldw	r2,-4(fp)
     628:	1887883a 	add	r3,r3,r2
     62c:	e0bffe17 	ldw	r2,-8(fp)
     630:	1880032e 	bgeu	r3,r2,640 <memmgr_printMem+0x58>
		serial_printStr("Warning - Address Overflow.\n");
     634:	01000074 	movhi	r4,1
     638:	21092304 	addi	r4,r4,9356
     63c:	00008b40 	call	8b4 <serial_printStr>
	//buffer allocation
	char buffer[80];
	char temp[12];

	//print header
	memset(buffer,'\0',sizeof buffer);
     640:	e0bfe704 	addi	r2,fp,-100
     644:	1009883a 	mov	r4,r2
     648:	01801404 	movi	r6,80
     64c:	000b883a 	mov	r5,zero
     650:	00017d00 	call	17d0 <memset>
	strcat(buffer,"  Base   :");
     654:	e43fe704 	addi	r16,fp,-100
     658:	e13fe704 	addi	r4,fp,-100
     65c:	000211c0 	call	211c <strlen>
     660:	8085883a 	add	r2,r16,r2
     664:	1007883a 	mov	r3,r2
     668:	00800804 	movi	r2,32
     66c:	18800005 	stb	r2,0(r3)
     670:	00800804 	movi	r2,32
     674:	18800045 	stb	r2,1(r3)
     678:	00801084 	movi	r2,66
     67c:	18800085 	stb	r2,2(r3)
     680:	00801844 	movi	r2,97
     684:	188000c5 	stb	r2,3(r3)
     688:	00801cc4 	movi	r2,115
     68c:	18800105 	stb	r2,4(r3)
     690:	00801944 	movi	r2,101
     694:	18800145 	stb	r2,5(r3)
     698:	00800804 	movi	r2,32
     69c:	18800185 	stb	r2,6(r3)
     6a0:	00800804 	movi	r2,32
     6a4:	188001c5 	stb	r2,7(r3)
     6a8:	00800804 	movi	r2,32
     6ac:	18800205 	stb	r2,8(r3)
     6b0:	00800e84 	movi	r2,58
     6b4:	18800245 	stb	r2,9(r3)
     6b8:	18000285 	stb	zero,10(r3)
	int i; for(i = 0; i < count && i < 16; ++i){
     6bc:	e03fe615 	stw	zero,-104(fp)
     6c0:	00000e06 	br	6fc <memmgr_printMem+0x114>
		*(temp+3) = '\0';
     6c4:	e0bffb04 	addi	r2,fp,-20
     6c8:	108000c4 	addi	r2,r2,3
     6cc:	10000005 	stb	zero,0(r2)
		sprintf(temp," +%x",i);
     6d0:	e13ffb04 	addi	r4,fp,-20
     6d4:	01400074 	movhi	r5,1
     6d8:	29492b04 	addi	r5,r5,9388
     6dc:	e1bfe617 	ldw	r6,-104(fp)
     6e0:	0001b300 	call	1b30 <sprintf>
		strcat(buffer,temp);
     6e4:	e13fe704 	addi	r4,fp,-100
     6e8:	e17ffb04 	addi	r5,fp,-20
     6ec:	0001e640 	call	1e64 <strcat>
	char temp[12];

	//print header
	memset(buffer,'\0',sizeof buffer);
	strcat(buffer,"  Base   :");
	int i; for(i = 0; i < count && i < 16; ++i){
     6f0:	e0bfe617 	ldw	r2,-104(fp)
     6f4:	10800044 	addi	r2,r2,1
     6f8:	e0bfe615 	stw	r2,-104(fp)
     6fc:	e0ffe617 	ldw	r3,-104(fp)
     700:	e0bfff17 	ldw	r2,-4(fp)
     704:	1880032e 	bgeu	r3,r2,714 <memmgr_printMem+0x12c>
     708:	e0bfe617 	ldw	r2,-104(fp)
     70c:	10800410 	cmplti	r2,r2,16
     710:	103fec1e 	bne	r2,zero,6c4 <memmgr_printMem+0xdc>
		*(temp+3) = '\0';
		sprintf(temp," +%x",i);
		strcat(buffer,temp);
	}
	strcat(buffer,"\n");
     714:	e13fe704 	addi	r4,fp,-100
     718:	01400074 	movhi	r5,1
     71c:	29490f04 	addi	r5,r5,9276
     720:	0001e640 	call	1e64 <strcat>
	serial_printStr(buffer);
     724:	e13fe704 	addi	r4,fp,-100
     728:	00008b40 	call	8b4 <serial_printStr>

	//print bytes as chunks of buffer
	int j; for(j = 0; j < (count - 1) / 16 + 1; ++j){
     72c:	e03fe515 	stw	zero,-108(fp)
     730:	00004306 	br	840 <memmgr_printMem+0x258>
		memset(buffer,'\0',sizeof buffer);
     734:	e0bfe704 	addi	r2,fp,-100
     738:	1009883a 	mov	r4,r2
     73c:	01801404 	movi	r6,80
     740:	000b883a 	mov	r5,zero
     744:	00017d00 	call	17d0 <memset>

		//print address
		*(temp+10) = '\0';
     748:	e0bffb04 	addi	r2,fp,-20
     74c:	10800284 	addi	r2,r2,10
     750:	10000005 	stb	zero,0(r2)
		sprintf(temp,"%08x :",address + j*16);
     754:	e0bfe517 	ldw	r2,-108(fp)
     758:	1004913a 	slli	r2,r2,4
     75c:	1007883a 	mov	r3,r2
     760:	e0bffe17 	ldw	r2,-8(fp)
     764:	188d883a 	add	r6,r3,r2
     768:	e13ffb04 	addi	r4,fp,-20
     76c:	01400074 	movhi	r5,1
     770:	29492d04 	addi	r5,r5,9396
     774:	0001b300 	call	1b30 <sprintf>
		strcat(buffer,temp);
     778:	e13fe704 	addi	r4,fp,-100
     77c:	e17ffb04 	addi	r5,fp,-20
     780:	0001e640 	call	1e64 <strcat>

		//print row or less if count
		int a; for(a = 0; a < 16 && a < (count - j * 16); ++a){
     784:	e03fe415 	stw	zero,-112(fp)
     788:	00001a06 	br	7f4 <memmgr_printMem+0x20c>
			unsigned int addr = address + j*16+a;
     78c:	e0bfe517 	ldw	r2,-108(fp)
     790:	1004913a 	slli	r2,r2,4
     794:	1007883a 	mov	r3,r2
     798:	e0bffe17 	ldw	r2,-8(fp)
     79c:	1887883a 	add	r3,r3,r2
     7a0:	e0bfe417 	ldw	r2,-112(fp)
     7a4:	1885883a 	add	r2,r3,r2
     7a8:	e0bfe315 	stw	r2,-116(fp)
			unsigned char val = *((unsigned char*)(addr | BYPASS_CACHE_FLAG));
     7ac:	e0bfe317 	ldw	r2,-116(fp)
     7b0:	10a00034 	orhi	r2,r2,32768
     7b4:	10800003 	ldbu	r2,0(r2)
     7b8:	e0bfe205 	stb	r2,-120(fp)
			*(temp+3) = '\0';
     7bc:	e0bffb04 	addi	r2,fp,-20
     7c0:	108000c4 	addi	r2,r2,3
     7c4:	10000005 	stb	zero,0(r2)
			sprintf(temp," %02x",val);
     7c8:	e1bfe203 	ldbu	r6,-120(fp)
     7cc:	e13ffb04 	addi	r4,fp,-20
     7d0:	01400074 	movhi	r5,1
     7d4:	29492f04 	addi	r5,r5,9404
     7d8:	0001b300 	call	1b30 <sprintf>
			strcat(buffer,temp);
     7dc:	e13fe704 	addi	r4,fp,-100
     7e0:	e17ffb04 	addi	r5,fp,-20
     7e4:	0001e640 	call	1e64 <strcat>
		*(temp+10) = '\0';
		sprintf(temp,"%08x :",address + j*16);
		strcat(buffer,temp);

		//print row or less if count
		int a; for(a = 0; a < 16 && a < (count - j * 16); ++a){
     7e8:	e0bfe417 	ldw	r2,-112(fp)
     7ec:	10800044 	addi	r2,r2,1
     7f0:	e0bfe415 	stw	r2,-112(fp)
     7f4:	e0bfe417 	ldw	r2,-112(fp)
     7f8:	10800408 	cmpgei	r2,r2,16
     7fc:	1000071e 	bne	r2,zero,81c <memmgr_printMem+0x234>
     800:	e13fe417 	ldw	r4,-112(fp)
     804:	e0bfe517 	ldw	r2,-108(fp)
     808:	1004913a 	slli	r2,r2,4
     80c:	1007883a 	mov	r3,r2
     810:	e0bfff17 	ldw	r2,-4(fp)
     814:	10c5c83a 	sub	r2,r2,r3
     818:	20bfdc36 	bltu	r4,r2,78c <memmgr_printMem+0x1a4>
			sprintf(temp," %02x",val);
			strcat(buffer,temp);
		}

		//send to serial device
		strcat(buffer,"\n");
     81c:	e13fe704 	addi	r4,fp,-100
     820:	01400074 	movhi	r5,1
     824:	29490f04 	addi	r5,r5,9276
     828:	0001e640 	call	1e64 <strcat>
		serial_printStr(buffer);
     82c:	e13fe704 	addi	r4,fp,-100
     830:	00008b40 	call	8b4 <serial_printStr>
	}
	strcat(buffer,"\n");
	serial_printStr(buffer);

	//print bytes as chunks of buffer
	int j; for(j = 0; j < (count - 1) / 16 + 1; ++j){
     834:	e0bfe517 	ldw	r2,-108(fp)
     838:	10800044 	addi	r2,r2,1
     83c:	e0bfe515 	stw	r2,-108(fp)
     840:	e0ffe517 	ldw	r3,-108(fp)
     844:	e0bfff17 	ldw	r2,-4(fp)
     848:	10bfffc4 	addi	r2,r2,-1
     84c:	1004d13a 	srli	r2,r2,4
     850:	10800044 	addi	r2,r2,1
     854:	18bfb736 	bltu	r3,r2,734 <memmgr_printMem+0x14c>
		strcat(buffer,"\n");
		serial_printStr(buffer);
	}

	//send final character to clean up display
	serial_printStr("\n");
     858:	01000074 	movhi	r4,1
     85c:	21090f04 	addi	r4,r4,9276
     860:	00008b40 	call	8b4 <serial_printStr>
}
     864:	e037883a 	mov	sp,fp
     868:	dfc00217 	ldw	ra,8(sp)
     86c:	df000117 	ldw	fp,4(sp)
     870:	dc000017 	ldw	r16,0(sp)
     874:	dec00304 	addi	sp,sp,12
     878:	f800283a 	ret

0000087c <memmgr_writeByte>:
/**
 * Writes a byte of data to the address specified. Bypasses the cache.
 * @param address Address of memory to write to
 * @param value byte of information to store
 */
void memmgr_writeByte(unsigned int address, unsigned char value){
     87c:	defffd04 	addi	sp,sp,-12
     880:	df000215 	stw	fp,8(sp)
     884:	df000204 	addi	fp,sp,8
     888:	e13ffe15 	stw	r4,-8(fp)
     88c:	e17fff05 	stb	r5,-4(fp)
	//always apply the store IO version of the instruction for immediate change
	// and store in original for memory required versions
	*((volatile unsigned char*)(address | BYPASS_CACHE_FLAG)) = value;
     890:	e0bffe17 	ldw	r2,-8(fp)
     894:	10a00034 	orhi	r2,r2,32768
     898:	1007883a 	mov	r3,r2
     89c:	e0bfff03 	ldbu	r2,-4(fp)
     8a0:	18800005 	stb	r2,0(r3)
}
     8a4:	e037883a 	mov	sp,fp
     8a8:	df000017 	ldw	fp,0(sp)
     8ac:	dec00104 	addi	sp,sp,4
     8b0:	f800283a 	ret

000008b4 <serial_printStr>:
 * Temporary serial function using the jtag_uart for debugging.
 * This function signature will be migrated to the UART module
 * in a later milestone.
 * @param str passes a string through the UART
 */
void serial_printStr(char* str){
     8b4:	defffd04 	addi	sp,sp,-12
     8b8:	dfc00215 	stw	ra,8(sp)
     8bc:	df000115 	stw	fp,4(sp)
     8c0:	df000104 	addi	fp,sp,4
     8c4:	e13fff15 	stw	r4,-4(fp)
	//todo replace with UART in future lab
	printf("%s",str);
     8c8:	01000074 	movhi	r4,1
     8cc:	2108f204 	addi	r4,r4,9160
     8d0:	e17fff17 	ldw	r5,-4(fp)
     8d4:	00018680 	call	1868 <printf>
}
     8d8:	e037883a 	mov	sp,fp
     8dc:	dfc00117 	ldw	ra,4(sp)
     8e0:	df000017 	ldw	fp,0(sp)
     8e4:	dec00204 	addi	sp,sp,8
     8e8:	f800283a 	ret

000008ec <serial_readStr>:
 * @param inputStr String buffer that will be filled by the
 *        function until either a new line character is
 *        received or length is reached.
 * @param length size of the buffer.
 */
void serial_readStr(char* inputStr, unsigned int length){
     8ec:	defffb04 	addi	sp,sp,-20
     8f0:	dfc00415 	stw	ra,16(sp)
     8f4:	df000315 	stw	fp,12(sp)
     8f8:	df000304 	addi	fp,sp,12
     8fc:	e13ffe15 	stw	r4,-8(fp)
     900:	e17fff15 	stw	r5,-4(fp)
	//todo replace with UART in future lab
	if(fgets(inputStr,length, stdin) != NULL){
     904:	e17fff17 	ldw	r5,-4(fp)
     908:	00800074 	movhi	r2,1
     90c:	10915204 	addi	r2,r2,17736
     910:	10800017 	ldw	r2,0(r2)
     914:	11800117 	ldw	r6,4(r2)
     918:	e13ffe17 	ldw	r4,-8(fp)
     91c:	0000aa80 	call	aa8 <fgets>
     920:	1005003a 	cmpeq	r2,r2,zero
     924:	1000091e 	bne	r2,zero,94c <serial_readStr+0x60>
		char* newline = strchr(inputStr,'\n');
     928:	e13ffe17 	ldw	r4,-8(fp)
     92c:	01400284 	movi	r5,10
     930:	0001ef40 	call	1ef4 <strchr>
     934:	e0bffd15 	stw	r2,-12(fp)
		if(newline != NULL){
     938:	e0bffd17 	ldw	r2,-12(fp)
     93c:	1005003a 	cmpeq	r2,r2,zero
     940:	1000021e 	bne	r2,zero,94c <serial_readStr+0x60>
			*newline = '\0';
     944:	e0bffd17 	ldw	r2,-12(fp)
     948:	10000005 	stb	zero,0(r2)
		}
	}
}
     94c:	e037883a 	mov	sp,fp
     950:	dfc00117 	ldw	ra,4(sp)
     954:	df000017 	ldw	fp,0(sp)
     958:	dec00204 	addi	sp,sp,8
     95c:	f800283a 	ret

00000960 <_fgets_r>:
     960:	defff804 	addi	sp,sp,-32
     964:	00800044 	movi	r2,1
     968:	dd800615 	stw	r22,24(sp)
     96c:	dd400515 	stw	r21,20(sp)
     970:	dc400115 	stw	r17,4(sp)
     974:	dc000015 	stw	r16,0(sp)
     978:	dfc00715 	stw	ra,28(sp)
     97c:	dd000415 	stw	r20,16(sp)
     980:	dcc00315 	stw	r19,12(sp)
     984:	dc800215 	stw	r18,8(sp)
     988:	3021883a 	mov	r16,r6
     98c:	282d883a 	mov	r22,r5
     990:	3823883a 	mov	r17,r7
     994:	202b883a 	mov	r21,r4
     998:	1180410e 	bge	r2,r6,aa0 <_fgets_r+0x140>
     99c:	20000226 	beq	r4,zero,9a8 <_fgets_r+0x48>
     9a0:	20800e17 	ldw	r2,56(r4)
     9a4:	10002e26 	beq	r2,zero,a60 <_fgets_r+0x100>
     9a8:	853fffc4 	addi	r20,r16,-1
     9ac:	b027883a 	mov	r19,r22
     9b0:	88800117 	ldw	r2,4(r17)
     9b4:	a809883a 	mov	r4,r21
     9b8:	880b883a 	mov	r5,r17
     9bc:	100d883a 	mov	r6,r2
     9c0:	1000031e 	bne	r2,zero,9d0 <_fgets_r+0x70>
     9c4:	00018e00 	call	18e0 <__srefill_r>
     9c8:	1000341e 	bne	r2,zero,a9c <_fgets_r+0x13c>
     9cc:	89800117 	ldw	r6,4(r17)
     9d0:	01400284 	movi	r5,10
     9d4:	3021883a 	mov	r16,r6
     9d8:	8c800017 	ldw	r18,0(r17)
     9dc:	a180012e 	bgeu	r20,r6,9e4 <_fgets_r+0x84>
     9e0:	a021883a 	mov	r16,r20
     9e4:	9009883a 	mov	r4,r18
     9e8:	800d883a 	mov	r6,r16
     9ec:	000164c0 	call	164c <memchr>
     9f0:	1007883a 	mov	r3,r2
     9f4:	900b883a 	mov	r5,r18
     9f8:	9809883a 	mov	r4,r19
     9fc:	800d883a 	mov	r6,r16
     a00:	1000191e 	bne	r2,zero,a68 <_fgets_r+0x108>
     a04:	88800117 	ldw	r2,4(r17)
     a08:	88c00017 	ldw	r3,0(r17)
     a0c:	9c27883a 	add	r19,r19,r16
     a10:	1405c83a 	sub	r2,r2,r16
     a14:	1c07883a 	add	r3,r3,r16
     a18:	88c00015 	stw	r3,0(r17)
     a1c:	88800115 	stw	r2,4(r17)
     a20:	00017300 	call	1730 <memcpy>
     a24:	a407c83a 	sub	r3,r20,r16
     a28:	1829883a 	mov	r20,r3
     a2c:	183fe01e 	bne	r3,zero,9b0 <_fgets_r+0x50>
     a30:	98000005 	stb	zero,0(r19)
     a34:	b005883a 	mov	r2,r22
     a38:	dfc00717 	ldw	ra,28(sp)
     a3c:	dd800617 	ldw	r22,24(sp)
     a40:	dd400517 	ldw	r21,20(sp)
     a44:	dd000417 	ldw	r20,16(sp)
     a48:	dcc00317 	ldw	r19,12(sp)
     a4c:	dc800217 	ldw	r18,8(sp)
     a50:	dc400117 	ldw	r17,4(sp)
     a54:	dc000017 	ldw	r16,0(sp)
     a58:	dec00804 	addi	sp,sp,32
     a5c:	f800283a 	ret
     a60:	0000b340 	call	b34 <__sinit>
     a64:	003fd006 	br	9a8 <_fgets_r+0x48>
     a68:	88800117 	ldw	r2,4(r17)
     a6c:	18c00044 	addi	r3,r3,1
     a70:	1ca1c83a 	sub	r16,r3,r18
     a74:	1405c83a 	sub	r2,r2,r16
     a78:	800d883a 	mov	r6,r16
     a7c:	88c00015 	stw	r3,0(r17)
     a80:	88800115 	stw	r2,4(r17)
     a84:	900b883a 	mov	r5,r18
     a88:	9809883a 	mov	r4,r19
     a8c:	00017300 	call	1730 <memcpy>
     a90:	9c21883a 	add	r16,r19,r16
     a94:	80000005 	stb	zero,0(r16)
     a98:	003fe606 	br	a34 <_fgets_r+0xd4>
     a9c:	9dbfe41e 	bne	r19,r22,a30 <_fgets_r+0xd0>
     aa0:	002d883a 	mov	r22,zero
     aa4:	003fe306 	br	a34 <_fgets_r+0xd4>

00000aa8 <fgets>:
     aa8:	00800074 	movhi	r2,1
     aac:	10915204 	addi	r2,r2,17736
     ab0:	2013883a 	mov	r9,r4
     ab4:	11000017 	ldw	r4,0(r2)
     ab8:	2805883a 	mov	r2,r5
     abc:	300f883a 	mov	r7,r6
     ac0:	480b883a 	mov	r5,r9
     ac4:	100d883a 	mov	r6,r2
     ac8:	00009601 	jmpi	960 <_fgets_r>

00000acc <std>:
     acc:	00800034 	movhi	r2,0
     ad0:	10874604 	addi	r2,r2,7448
     ad4:	20800b15 	stw	r2,44(r4)
     ad8:	00800034 	movhi	r2,0
     adc:	10878104 	addi	r2,r2,7684
     ae0:	20800815 	stw	r2,32(r4)
     ae4:	00c00034 	movhi	r3,0
     ae8:	18c76204 	addi	r3,r3,7560
     aec:	00800034 	movhi	r2,0
     af0:	10874804 	addi	r2,r2,7456
     af4:	2140030d 	sth	r5,12(r4)
     af8:	2180038d 	sth	r6,14(r4)
     afc:	20c00915 	stw	r3,36(r4)
     b00:	20800a15 	stw	r2,40(r4)
     b04:	20000015 	stw	zero,0(r4)
     b08:	20000115 	stw	zero,4(r4)
     b0c:	20000215 	stw	zero,8(r4)
     b10:	20000415 	stw	zero,16(r4)
     b14:	20000515 	stw	zero,20(r4)
     b18:	20000615 	stw	zero,24(r4)
     b1c:	21000715 	stw	r4,28(r4)
     b20:	f800283a 	ret

00000b24 <__sfp_lock_acquire>:
     b24:	f800283a 	ret

00000b28 <__sfp_lock_release>:
     b28:	f800283a 	ret

00000b2c <__sinit_lock_acquire>:
     b2c:	f800283a 	ret

00000b30 <__sinit_lock_release>:
     b30:	f800283a 	ret

00000b34 <__sinit>:
     b34:	20800e17 	ldw	r2,56(r4)
     b38:	defffd04 	addi	sp,sp,-12
     b3c:	dc400115 	stw	r17,4(sp)
     b40:	dc000015 	stw	r16,0(sp)
     b44:	dfc00215 	stw	ra,8(sp)
     b48:	04400044 	movi	r17,1
     b4c:	01400104 	movi	r5,4
     b50:	000d883a 	mov	r6,zero
     b54:	2021883a 	mov	r16,r4
     b58:	2200bb04 	addi	r8,r4,748
     b5c:	200f883a 	mov	r7,r4
     b60:	10000526 	beq	r2,zero,b78 <__sinit+0x44>
     b64:	dfc00217 	ldw	ra,8(sp)
     b68:	dc400117 	ldw	r17,4(sp)
     b6c:	dc000017 	ldw	r16,0(sp)
     b70:	dec00304 	addi	sp,sp,12
     b74:	f800283a 	ret
     b78:	21000117 	ldw	r4,4(r4)
     b7c:	00800034 	movhi	r2,0
     b80:	10830604 	addi	r2,r2,3096
     b84:	00c000c4 	movi	r3,3
     b88:	80800f15 	stw	r2,60(r16)
     b8c:	80c0b915 	stw	r3,740(r16)
     b90:	8200ba15 	stw	r8,744(r16)
     b94:	84400e15 	stw	r17,56(r16)
     b98:	8000b815 	stw	zero,736(r16)
     b9c:	0000acc0 	call	acc <std>
     ba0:	81000217 	ldw	r4,8(r16)
     ba4:	880d883a 	mov	r6,r17
     ba8:	800f883a 	mov	r7,r16
     bac:	01400284 	movi	r5,10
     bb0:	0000acc0 	call	acc <std>
     bb4:	81000317 	ldw	r4,12(r16)
     bb8:	800f883a 	mov	r7,r16
     bbc:	01400484 	movi	r5,18
     bc0:	01800084 	movi	r6,2
     bc4:	dfc00217 	ldw	ra,8(sp)
     bc8:	dc400117 	ldw	r17,4(sp)
     bcc:	dc000017 	ldw	r16,0(sp)
     bd0:	dec00304 	addi	sp,sp,12
     bd4:	0000acc1 	jmpi	acc <std>

00000bd8 <__fp_lock>:
     bd8:	0005883a 	mov	r2,zero
     bdc:	f800283a 	ret

00000be0 <__fp_unlock>:
     be0:	0005883a 	mov	r2,zero
     be4:	f800283a 	ret

00000be8 <__fp_unlock_all>:
     be8:	00800074 	movhi	r2,1
     bec:	10915204 	addi	r2,r2,17736
     bf0:	11000017 	ldw	r4,0(r2)
     bf4:	01400034 	movhi	r5,0
     bf8:	2942f804 	addi	r5,r5,3040
     bfc:	0000e541 	jmpi	e54 <_fwalk>

00000c00 <__fp_lock_all>:
     c00:	00800074 	movhi	r2,1
     c04:	10915204 	addi	r2,r2,17736
     c08:	11000017 	ldw	r4,0(r2)
     c0c:	01400034 	movhi	r5,0
     c10:	2942f604 	addi	r5,r5,3032
     c14:	0000e541 	jmpi	e54 <_fwalk>

00000c18 <_cleanup_r>:
     c18:	01400034 	movhi	r5,0
     c1c:	295cce04 	addi	r5,r5,29496
     c20:	0000e541 	jmpi	e54 <_fwalk>

00000c24 <_cleanup>:
     c24:	00800074 	movhi	r2,1
     c28:	10915304 	addi	r2,r2,17740
     c2c:	11000017 	ldw	r4,0(r2)
     c30:	0000c181 	jmpi	c18 <_cleanup_r>

00000c34 <__sfmoreglue>:
     c34:	defffc04 	addi	sp,sp,-16
     c38:	dc400115 	stw	r17,4(sp)
     c3c:	2c401724 	muli	r17,r5,92
     c40:	dc800215 	stw	r18,8(sp)
     c44:	2825883a 	mov	r18,r5
     c48:	89400304 	addi	r5,r17,12
     c4c:	dc000015 	stw	r16,0(sp)
     c50:	dfc00315 	stw	ra,12(sp)
     c54:	0000f0c0 	call	f0c <_malloc_r>
     c58:	0021883a 	mov	r16,zero
     c5c:	880d883a 	mov	r6,r17
     c60:	000b883a 	mov	r5,zero
     c64:	10000626 	beq	r2,zero,c80 <__sfmoreglue+0x4c>
     c68:	11000304 	addi	r4,r2,12
     c6c:	14800115 	stw	r18,4(r2)
     c70:	10000015 	stw	zero,0(r2)
     c74:	11000215 	stw	r4,8(r2)
     c78:	1021883a 	mov	r16,r2
     c7c:	00017d00 	call	17d0 <memset>
     c80:	8005883a 	mov	r2,r16
     c84:	dfc00317 	ldw	ra,12(sp)
     c88:	dc800217 	ldw	r18,8(sp)
     c8c:	dc400117 	ldw	r17,4(sp)
     c90:	dc000017 	ldw	r16,0(sp)
     c94:	dec00404 	addi	sp,sp,16
     c98:	f800283a 	ret

00000c9c <__sfp>:
     c9c:	defffd04 	addi	sp,sp,-12
     ca0:	00800074 	movhi	r2,1
     ca4:	10915304 	addi	r2,r2,17740
     ca8:	dc000015 	stw	r16,0(sp)
     cac:	14000017 	ldw	r16,0(r2)
     cb0:	dc400115 	stw	r17,4(sp)
     cb4:	dfc00215 	stw	ra,8(sp)
     cb8:	80800e17 	ldw	r2,56(r16)
     cbc:	2023883a 	mov	r17,r4
     cc0:	10002626 	beq	r2,zero,d5c <__sfp+0xc0>
     cc4:	8400b804 	addi	r16,r16,736
     cc8:	80800117 	ldw	r2,4(r16)
     ccc:	81000217 	ldw	r4,8(r16)
     cd0:	10ffffc4 	addi	r3,r2,-1
     cd4:	18000916 	blt	r3,zero,cfc <__sfp+0x60>
     cd8:	2080030f 	ldh	r2,12(r4)
     cdc:	10000b26 	beq	r2,zero,d0c <__sfp+0x70>
     ce0:	017fffc4 	movi	r5,-1
     ce4:	00000206 	br	cf0 <__sfp+0x54>
     ce8:	2080030f 	ldh	r2,12(r4)
     cec:	10000726 	beq	r2,zero,d0c <__sfp+0x70>
     cf0:	18ffffc4 	addi	r3,r3,-1
     cf4:	21001704 	addi	r4,r4,92
     cf8:	197ffb1e 	bne	r3,r5,ce8 <__sfp+0x4c>
     cfc:	80800017 	ldw	r2,0(r16)
     d00:	10001926 	beq	r2,zero,d68 <__sfp+0xcc>
     d04:	1021883a 	mov	r16,r2
     d08:	003fef06 	br	cc8 <__sfp+0x2c>
     d0c:	00bfffc4 	movi	r2,-1
     d10:	00c00044 	movi	r3,1
     d14:	2080038d 	sth	r2,14(r4)
     d18:	20c0030d 	sth	r3,12(r4)
     d1c:	20000015 	stw	zero,0(r4)
     d20:	20000215 	stw	zero,8(r4)
     d24:	20000115 	stw	zero,4(r4)
     d28:	20000415 	stw	zero,16(r4)
     d2c:	20000515 	stw	zero,20(r4)
     d30:	20000615 	stw	zero,24(r4)
     d34:	20000c15 	stw	zero,48(r4)
     d38:	20000d15 	stw	zero,52(r4)
     d3c:	20001115 	stw	zero,68(r4)
     d40:	20001215 	stw	zero,72(r4)
     d44:	2005883a 	mov	r2,r4
     d48:	dfc00217 	ldw	ra,8(sp)
     d4c:	dc400117 	ldw	r17,4(sp)
     d50:	dc000017 	ldw	r16,0(sp)
     d54:	dec00304 	addi	sp,sp,12
     d58:	f800283a 	ret
     d5c:	8009883a 	mov	r4,r16
     d60:	0000b340 	call	b34 <__sinit>
     d64:	003fd706 	br	cc4 <__sfp+0x28>
     d68:	8809883a 	mov	r4,r17
     d6c:	01400104 	movi	r5,4
     d70:	0000c340 	call	c34 <__sfmoreglue>
     d74:	80800015 	stw	r2,0(r16)
     d78:	103fe21e 	bne	r2,zero,d04 <__sfp+0x68>
     d7c:	00800304 	movi	r2,12
     d80:	0009883a 	mov	r4,zero
     d84:	88800015 	stw	r2,0(r17)
     d88:	003fee06 	br	d44 <__sfp+0xa8>

00000d8c <_fwalk_reent>:
     d8c:	defff704 	addi	sp,sp,-36
     d90:	dcc00315 	stw	r19,12(sp)
     d94:	24c0b804 	addi	r19,r4,736
     d98:	dd800615 	stw	r22,24(sp)
     d9c:	dd400515 	stw	r21,20(sp)
     da0:	dfc00815 	stw	ra,32(sp)
     da4:	ddc00715 	stw	r23,28(sp)
     da8:	dd000415 	stw	r20,16(sp)
     dac:	dc800215 	stw	r18,8(sp)
     db0:	dc400115 	stw	r17,4(sp)
     db4:	dc000015 	stw	r16,0(sp)
     db8:	202b883a 	mov	r21,r4
     dbc:	282d883a 	mov	r22,r5
     dc0:	0000b240 	call	b24 <__sfp_lock_acquire>
     dc4:	98002126 	beq	r19,zero,e4c <_fwalk_reent+0xc0>
     dc8:	002f883a 	mov	r23,zero
     dcc:	9c800117 	ldw	r18,4(r19)
     dd0:	9c000217 	ldw	r16,8(r19)
     dd4:	90bfffc4 	addi	r2,r18,-1
     dd8:	10000d16 	blt	r2,zero,e10 <_fwalk_reent+0x84>
     ddc:	0023883a 	mov	r17,zero
     de0:	053fffc4 	movi	r20,-1
     de4:	8080030f 	ldh	r2,12(r16)
     de8:	8c400044 	addi	r17,r17,1
     dec:	10000626 	beq	r2,zero,e08 <_fwalk_reent+0x7c>
     df0:	8080038f 	ldh	r2,14(r16)
     df4:	800b883a 	mov	r5,r16
     df8:	a809883a 	mov	r4,r21
     dfc:	15000226 	beq	r2,r20,e08 <_fwalk_reent+0x7c>
     e00:	b03ee83a 	callr	r22
     e04:	b8aeb03a 	or	r23,r23,r2
     e08:	84001704 	addi	r16,r16,92
     e0c:	947ff51e 	bne	r18,r17,de4 <_fwalk_reent+0x58>
     e10:	9cc00017 	ldw	r19,0(r19)
     e14:	983fed1e 	bne	r19,zero,dcc <_fwalk_reent+0x40>
     e18:	0000b280 	call	b28 <__sfp_lock_release>
     e1c:	b805883a 	mov	r2,r23
     e20:	dfc00817 	ldw	ra,32(sp)
     e24:	ddc00717 	ldw	r23,28(sp)
     e28:	dd800617 	ldw	r22,24(sp)
     e2c:	dd400517 	ldw	r21,20(sp)
     e30:	dd000417 	ldw	r20,16(sp)
     e34:	dcc00317 	ldw	r19,12(sp)
     e38:	dc800217 	ldw	r18,8(sp)
     e3c:	dc400117 	ldw	r17,4(sp)
     e40:	dc000017 	ldw	r16,0(sp)
     e44:	dec00904 	addi	sp,sp,36
     e48:	f800283a 	ret
     e4c:	002f883a 	mov	r23,zero
     e50:	003ff106 	br	e18 <_fwalk_reent+0x8c>

00000e54 <_fwalk>:
     e54:	defff804 	addi	sp,sp,-32
     e58:	dcc00315 	stw	r19,12(sp)
     e5c:	24c0b804 	addi	r19,r4,736
     e60:	dd400515 	stw	r21,20(sp)
     e64:	dfc00715 	stw	ra,28(sp)
     e68:	dd800615 	stw	r22,24(sp)
     e6c:	dd000415 	stw	r20,16(sp)
     e70:	dc800215 	stw	r18,8(sp)
     e74:	dc400115 	stw	r17,4(sp)
     e78:	dc000015 	stw	r16,0(sp)
     e7c:	282b883a 	mov	r21,r5
     e80:	0000b240 	call	b24 <__sfp_lock_acquire>
     e84:	98001f26 	beq	r19,zero,f04 <_fwalk+0xb0>
     e88:	002d883a 	mov	r22,zero
     e8c:	9c800117 	ldw	r18,4(r19)
     e90:	9c000217 	ldw	r16,8(r19)
     e94:	90bfffc4 	addi	r2,r18,-1
     e98:	10000c16 	blt	r2,zero,ecc <_fwalk+0x78>
     e9c:	0023883a 	mov	r17,zero
     ea0:	053fffc4 	movi	r20,-1
     ea4:	8080030f 	ldh	r2,12(r16)
     ea8:	8c400044 	addi	r17,r17,1
     eac:	10000526 	beq	r2,zero,ec4 <_fwalk+0x70>
     eb0:	8080038f 	ldh	r2,14(r16)
     eb4:	8009883a 	mov	r4,r16
     eb8:	15000226 	beq	r2,r20,ec4 <_fwalk+0x70>
     ebc:	a83ee83a 	callr	r21
     ec0:	b0acb03a 	or	r22,r22,r2
     ec4:	84001704 	addi	r16,r16,92
     ec8:	947ff61e 	bne	r18,r17,ea4 <_fwalk+0x50>
     ecc:	9cc00017 	ldw	r19,0(r19)
     ed0:	983fee1e 	bne	r19,zero,e8c <_fwalk+0x38>
     ed4:	0000b280 	call	b28 <__sfp_lock_release>
     ed8:	b005883a 	mov	r2,r22
     edc:	dfc00717 	ldw	ra,28(sp)
     ee0:	dd800617 	ldw	r22,24(sp)
     ee4:	dd400517 	ldw	r21,20(sp)
     ee8:	dd000417 	ldw	r20,16(sp)
     eec:	dcc00317 	ldw	r19,12(sp)
     ef0:	dc800217 	ldw	r18,8(sp)
     ef4:	dc400117 	ldw	r17,4(sp)
     ef8:	dc000017 	ldw	r16,0(sp)
     efc:	dec00804 	addi	sp,sp,32
     f00:	f800283a 	ret
     f04:	002d883a 	mov	r22,zero
     f08:	003ff206 	br	ed4 <_fwalk+0x80>

00000f0c <_malloc_r>:
     f0c:	defff604 	addi	sp,sp,-40
     f10:	28c002c4 	addi	r3,r5,11
     f14:	00800584 	movi	r2,22
     f18:	dc800215 	stw	r18,8(sp)
     f1c:	dfc00915 	stw	ra,36(sp)
     f20:	df000815 	stw	fp,32(sp)
     f24:	ddc00715 	stw	r23,28(sp)
     f28:	dd800615 	stw	r22,24(sp)
     f2c:	dd400515 	stw	r21,20(sp)
     f30:	dd000415 	stw	r20,16(sp)
     f34:	dcc00315 	stw	r19,12(sp)
     f38:	dc400115 	stw	r17,4(sp)
     f3c:	dc000015 	stw	r16,0(sp)
     f40:	2025883a 	mov	r18,r4
     f44:	10c01236 	bltu	r2,r3,f90 <_malloc_r+0x84>
     f48:	04400404 	movi	r17,16
     f4c:	8940142e 	bgeu	r17,r5,fa0 <_malloc_r+0x94>
     f50:	00800304 	movi	r2,12
     f54:	0007883a 	mov	r3,zero
     f58:	90800015 	stw	r2,0(r18)
     f5c:	1805883a 	mov	r2,r3
     f60:	dfc00917 	ldw	ra,36(sp)
     f64:	df000817 	ldw	fp,32(sp)
     f68:	ddc00717 	ldw	r23,28(sp)
     f6c:	dd800617 	ldw	r22,24(sp)
     f70:	dd400517 	ldw	r21,20(sp)
     f74:	dd000417 	ldw	r20,16(sp)
     f78:	dcc00317 	ldw	r19,12(sp)
     f7c:	dc800217 	ldw	r18,8(sp)
     f80:	dc400117 	ldw	r17,4(sp)
     f84:	dc000017 	ldw	r16,0(sp)
     f88:	dec00a04 	addi	sp,sp,40
     f8c:	f800283a 	ret
     f90:	00bffe04 	movi	r2,-8
     f94:	18a2703a 	and	r17,r3,r2
     f98:	883fed16 	blt	r17,zero,f50 <_malloc_r+0x44>
     f9c:	897fec36 	bltu	r17,r5,f50 <_malloc_r+0x44>
     fa0:	9009883a 	mov	r4,r18
     fa4:	000fea40 	call	fea4 <__malloc_lock>
     fa8:	00807dc4 	movi	r2,503
     fac:	14402b2e 	bgeu	r2,r17,105c <_malloc_r+0x150>
     fb0:	8806d27a 	srli	r3,r17,9
     fb4:	18003f1e 	bne	r3,zero,10b4 <_malloc_r+0x1a8>
     fb8:	880cd0fa 	srli	r6,r17,3
     fbc:	300490fa 	slli	r2,r6,3
     fc0:	02c00074 	movhi	r11,1
     fc4:	5acbc104 	addi	r11,r11,12036
     fc8:	12cb883a 	add	r5,r2,r11
     fcc:	2c000317 	ldw	r16,12(r5)
     fd0:	580f883a 	mov	r7,r11
     fd4:	2c00041e 	bne	r5,r16,fe8 <_malloc_r+0xdc>
     fd8:	00000a06 	br	1004 <_malloc_r+0xf8>
     fdc:	1800860e 	bge	r3,zero,11f8 <_malloc_r+0x2ec>
     fe0:	84000317 	ldw	r16,12(r16)
     fe4:	2c000726 	beq	r5,r16,1004 <_malloc_r+0xf8>
     fe8:	80800117 	ldw	r2,4(r16)
     fec:	00ffff04 	movi	r3,-4
     ff0:	10c8703a 	and	r4,r2,r3
     ff4:	2447c83a 	sub	r3,r4,r17
     ff8:	008003c4 	movi	r2,15
     ffc:	10fff70e 	bge	r2,r3,fdc <_malloc_r+0xd0>
    1000:	31bfffc4 	addi	r6,r6,-1
    1004:	32400044 	addi	r9,r6,1
    1008:	02800074 	movhi	r10,1
    100c:	528bc304 	addi	r10,r10,12044
    1010:	54000217 	ldw	r16,8(r10)
    1014:	8280a026 	beq	r16,r10,1298 <_malloc_r+0x38c>
    1018:	80800117 	ldw	r2,4(r16)
    101c:	00ffff04 	movi	r3,-4
    1020:	10ca703a 	and	r5,r2,r3
    1024:	2c4dc83a 	sub	r6,r5,r17
    1028:	008003c4 	movi	r2,15
    102c:	11808316 	blt	r2,r6,123c <_malloc_r+0x330>
    1030:	52800315 	stw	r10,12(r10)
    1034:	52800215 	stw	r10,8(r10)
    1038:	30002916 	blt	r6,zero,10e0 <_malloc_r+0x1d4>
    103c:	8147883a 	add	r3,r16,r5
    1040:	18800117 	ldw	r2,4(r3)
    1044:	9009883a 	mov	r4,r18
    1048:	10800054 	ori	r2,r2,1
    104c:	18800115 	stw	r2,4(r3)
    1050:	000fec40 	call	fec4 <__malloc_unlock>
    1054:	80c00204 	addi	r3,r16,8
    1058:	003fc006 	br	f5c <_malloc_r+0x50>
    105c:	02c00074 	movhi	r11,1
    1060:	5acbc104 	addi	r11,r11,12036
    1064:	8ac5883a 	add	r2,r17,r11
    1068:	14000317 	ldw	r16,12(r2)
    106c:	580f883a 	mov	r7,r11
    1070:	8806d0fa 	srli	r3,r17,3
    1074:	14006c26 	beq	r2,r16,1228 <_malloc_r+0x31c>
    1078:	80c00117 	ldw	r3,4(r16)
    107c:	00bfff04 	movi	r2,-4
    1080:	81800317 	ldw	r6,12(r16)
    1084:	1886703a 	and	r3,r3,r2
    1088:	80c7883a 	add	r3,r16,r3
    108c:	18800117 	ldw	r2,4(r3)
    1090:	81400217 	ldw	r5,8(r16)
    1094:	9009883a 	mov	r4,r18
    1098:	10800054 	ori	r2,r2,1
    109c:	18800115 	stw	r2,4(r3)
    10a0:	31400215 	stw	r5,8(r6)
    10a4:	29800315 	stw	r6,12(r5)
    10a8:	000fec40 	call	fec4 <__malloc_unlock>
    10ac:	80c00204 	addi	r3,r16,8
    10b0:	003faa06 	br	f5c <_malloc_r+0x50>
    10b4:	00800104 	movi	r2,4
    10b8:	10c0052e 	bgeu	r2,r3,10d0 <_malloc_r+0x1c4>
    10bc:	00800504 	movi	r2,20
    10c0:	10c07836 	bltu	r2,r3,12a4 <_malloc_r+0x398>
    10c4:	198016c4 	addi	r6,r3,91
    10c8:	300490fa 	slli	r2,r6,3
    10cc:	003fbc06 	br	fc0 <_malloc_r+0xb4>
    10d0:	8804d1ba 	srli	r2,r17,6
    10d4:	11800e04 	addi	r6,r2,56
    10d8:	300490fa 	slli	r2,r6,3
    10dc:	003fb806 	br	fc0 <_malloc_r+0xb4>
    10e0:	00807fc4 	movi	r2,511
    10e4:	1140bb36 	bltu	r2,r5,13d4 <_malloc_r+0x4c8>
    10e8:	2806d0fa 	srli	r3,r5,3
    10ec:	573ffe04 	addi	fp,r10,-8
    10f0:	00800044 	movi	r2,1
    10f4:	180890fa 	slli	r4,r3,3
    10f8:	1807d0ba 	srai	r3,r3,2
    10fc:	e1c00117 	ldw	r7,4(fp)
    1100:	5909883a 	add	r4,r11,r4
    1104:	21400217 	ldw	r5,8(r4)
    1108:	10c4983a 	sll	r2,r2,r3
    110c:	81000315 	stw	r4,12(r16)
    1110:	81400215 	stw	r5,8(r16)
    1114:	388eb03a 	or	r7,r7,r2
    1118:	2c000315 	stw	r16,12(r5)
    111c:	24000215 	stw	r16,8(r4)
    1120:	e1c00115 	stw	r7,4(fp)
    1124:	4807883a 	mov	r3,r9
    1128:	4800cd16 	blt	r9,zero,1460 <_malloc_r+0x554>
    112c:	1807d0ba 	srai	r3,r3,2
    1130:	00800044 	movi	r2,1
    1134:	10c8983a 	sll	r4,r2,r3
    1138:	39004436 	bltu	r7,r4,124c <_malloc_r+0x340>
    113c:	21c4703a 	and	r2,r4,r7
    1140:	10000a1e 	bne	r2,zero,116c <_malloc_r+0x260>
    1144:	2109883a 	add	r4,r4,r4
    1148:	00bfff04 	movi	r2,-4
    114c:	4884703a 	and	r2,r9,r2
    1150:	3906703a 	and	r3,r7,r4
    1154:	12400104 	addi	r9,r2,4
    1158:	1800041e 	bne	r3,zero,116c <_malloc_r+0x260>
    115c:	2109883a 	add	r4,r4,r4
    1160:	3904703a 	and	r2,r7,r4
    1164:	4a400104 	addi	r9,r9,4
    1168:	103ffc26 	beq	r2,zero,115c <_malloc_r+0x250>
    116c:	480490fa 	slli	r2,r9,3
    1170:	4819883a 	mov	r12,r9
    1174:	023fff04 	movi	r8,-4
    1178:	589b883a 	add	r13,r11,r2
    117c:	6807883a 	mov	r3,r13
    1180:	014003c4 	movi	r5,15
    1184:	1c000317 	ldw	r16,12(r3)
    1188:	1c00041e 	bne	r3,r16,119c <_malloc_r+0x290>
    118c:	0000a706 	br	142c <_malloc_r+0x520>
    1190:	3000ab0e 	bge	r6,zero,1440 <_malloc_r+0x534>
    1194:	84000317 	ldw	r16,12(r16)
    1198:	1c00a426 	beq	r3,r16,142c <_malloc_r+0x520>
    119c:	80800117 	ldw	r2,4(r16)
    11a0:	1204703a 	and	r2,r2,r8
    11a4:	144dc83a 	sub	r6,r2,r17
    11a8:	29bff90e 	bge	r5,r6,1190 <_malloc_r+0x284>
    11ac:	81000317 	ldw	r4,12(r16)
    11b0:	80c00217 	ldw	r3,8(r16)
    11b4:	89400054 	ori	r5,r17,1
    11b8:	8445883a 	add	r2,r16,r17
    11bc:	20c00215 	stw	r3,8(r4)
    11c0:	19000315 	stw	r4,12(r3)
    11c4:	81400115 	stw	r5,4(r16)
    11c8:	1187883a 	add	r3,r2,r6
    11cc:	31000054 	ori	r4,r6,1
    11d0:	50800315 	stw	r2,12(r10)
    11d4:	50800215 	stw	r2,8(r10)
    11d8:	19800015 	stw	r6,0(r3)
    11dc:	11000115 	stw	r4,4(r2)
    11e0:	12800215 	stw	r10,8(r2)
    11e4:	12800315 	stw	r10,12(r2)
    11e8:	9009883a 	mov	r4,r18
    11ec:	000fec40 	call	fec4 <__malloc_unlock>
    11f0:	80c00204 	addi	r3,r16,8
    11f4:	003f5906 	br	f5c <_malloc_r+0x50>
    11f8:	8109883a 	add	r4,r16,r4
    11fc:	20800117 	ldw	r2,4(r4)
    1200:	80c00217 	ldw	r3,8(r16)
    1204:	81400317 	ldw	r5,12(r16)
    1208:	10800054 	ori	r2,r2,1
    120c:	20800115 	stw	r2,4(r4)
    1210:	28c00215 	stw	r3,8(r5)
    1214:	19400315 	stw	r5,12(r3)
    1218:	9009883a 	mov	r4,r18
    121c:	000fec40 	call	fec4 <__malloc_unlock>
    1220:	80c00204 	addi	r3,r16,8
    1224:	003f4d06 	br	f5c <_malloc_r+0x50>
    1228:	80800204 	addi	r2,r16,8
    122c:	14000317 	ldw	r16,12(r2)
    1230:	143f911e 	bne	r2,r16,1078 <_malloc_r+0x16c>
    1234:	1a400084 	addi	r9,r3,2
    1238:	003f7306 	br	1008 <_malloc_r+0xfc>
    123c:	88c00054 	ori	r3,r17,1
    1240:	8445883a 	add	r2,r16,r17
    1244:	80c00115 	stw	r3,4(r16)
    1248:	003fdf06 	br	11c8 <_malloc_r+0x2bc>
    124c:	e4000217 	ldw	r16,8(fp)
    1250:	00bfff04 	movi	r2,-4
    1254:	80c00117 	ldw	r3,4(r16)
    1258:	802d883a 	mov	r22,r16
    125c:	18aa703a 	and	r21,r3,r2
    1260:	ac401636 	bltu	r21,r17,12bc <_malloc_r+0x3b0>
    1264:	ac49c83a 	sub	r4,r21,r17
    1268:	008003c4 	movi	r2,15
    126c:	1100130e 	bge	r2,r4,12bc <_malloc_r+0x3b0>
    1270:	88800054 	ori	r2,r17,1
    1274:	8447883a 	add	r3,r16,r17
    1278:	80800115 	stw	r2,4(r16)
    127c:	20800054 	ori	r2,r4,1
    1280:	18800115 	stw	r2,4(r3)
    1284:	e0c00215 	stw	r3,8(fp)
    1288:	9009883a 	mov	r4,r18
    128c:	000fec40 	call	fec4 <__malloc_unlock>
    1290:	80c00204 	addi	r3,r16,8
    1294:	003f3106 	br	f5c <_malloc_r+0x50>
    1298:	39c00117 	ldw	r7,4(r7)
    129c:	573ffe04 	addi	fp,r10,-8
    12a0:	003fa006 	br	1124 <_malloc_r+0x218>
    12a4:	00801504 	movi	r2,84
    12a8:	10c06736 	bltu	r2,r3,1448 <_malloc_r+0x53c>
    12ac:	8804d33a 	srli	r2,r17,12
    12b0:	11801b84 	addi	r6,r2,110
    12b4:	300490fa 	slli	r2,r6,3
    12b8:	003f4106 	br	fc0 <_malloc_r+0xb4>
    12bc:	d0a6b317 	ldw	r2,-25908(gp)
    12c0:	d0e00317 	ldw	r3,-32756(gp)
    12c4:	053fffc4 	movi	r20,-1
    12c8:	10800404 	addi	r2,r2,16
    12cc:	88a7883a 	add	r19,r17,r2
    12d0:	1d000326 	beq	r3,r20,12e0 <_malloc_r+0x3d4>
    12d4:	98c3ffc4 	addi	r3,r19,4095
    12d8:	00bc0004 	movi	r2,-4096
    12dc:	18a6703a 	and	r19,r3,r2
    12e0:	9009883a 	mov	r4,r18
    12e4:	980b883a 	mov	r5,r19
    12e8:	0001ac00 	call	1ac0 <_sbrk_r>
    12ec:	1009883a 	mov	r4,r2
    12f0:	15000426 	beq	r2,r20,1304 <_malloc_r+0x3f8>
    12f4:	854b883a 	add	r5,r16,r21
    12f8:	1029883a 	mov	r20,r2
    12fc:	11405a2e 	bgeu	r2,r5,1468 <_malloc_r+0x55c>
    1300:	87000c26 	beq	r16,fp,1334 <_malloc_r+0x428>
    1304:	e4000217 	ldw	r16,8(fp)
    1308:	80c00117 	ldw	r3,4(r16)
    130c:	00bfff04 	movi	r2,-4
    1310:	1884703a 	and	r2,r3,r2
    1314:	14400336 	bltu	r2,r17,1324 <_malloc_r+0x418>
    1318:	1449c83a 	sub	r4,r2,r17
    131c:	008003c4 	movi	r2,15
    1320:	113fd316 	blt	r2,r4,1270 <_malloc_r+0x364>
    1324:	9009883a 	mov	r4,r18
    1328:	000fec40 	call	fec4 <__malloc_unlock>
    132c:	0007883a 	mov	r3,zero
    1330:	003f0a06 	br	f5c <_malloc_r+0x50>
    1334:	05c00074 	movhi	r23,1
    1338:	bdd81504 	addi	r23,r23,24660
    133c:	b8800017 	ldw	r2,0(r23)
    1340:	988d883a 	add	r6,r19,r2
    1344:	b9800015 	stw	r6,0(r23)
    1348:	d0e00317 	ldw	r3,-32756(gp)
    134c:	00bfffc4 	movi	r2,-1
    1350:	18808e26 	beq	r3,r2,158c <_malloc_r+0x680>
    1354:	2145c83a 	sub	r2,r4,r5
    1358:	3085883a 	add	r2,r6,r2
    135c:	b8800015 	stw	r2,0(r23)
    1360:	20c001cc 	andi	r3,r4,7
    1364:	18005f1e 	bne	r3,zero,14e4 <_malloc_r+0x5d8>
    1368:	000b883a 	mov	r5,zero
    136c:	a4c5883a 	add	r2,r20,r19
    1370:	1083ffcc 	andi	r2,r2,4095
    1374:	00c40004 	movi	r3,4096
    1378:	1887c83a 	sub	r3,r3,r2
    137c:	28e7883a 	add	r19,r5,r3
    1380:	9009883a 	mov	r4,r18
    1384:	980b883a 	mov	r5,r19
    1388:	0001ac00 	call	1ac0 <_sbrk_r>
    138c:	1007883a 	mov	r3,r2
    1390:	00bfffc4 	movi	r2,-1
    1394:	18807a26 	beq	r3,r2,1580 <_malloc_r+0x674>
    1398:	1d05c83a 	sub	r2,r3,r20
    139c:	9885883a 	add	r2,r19,r2
    13a0:	10c00054 	ori	r3,r2,1
    13a4:	b8800017 	ldw	r2,0(r23)
    13a8:	a021883a 	mov	r16,r20
    13ac:	a0c00115 	stw	r3,4(r20)
    13b0:	9885883a 	add	r2,r19,r2
    13b4:	b8800015 	stw	r2,0(r23)
    13b8:	e5000215 	stw	r20,8(fp)
    13bc:	b7003626 	beq	r22,fp,1498 <_malloc_r+0x58c>
    13c0:	018003c4 	movi	r6,15
    13c4:	35404b36 	bltu	r6,r21,14f4 <_malloc_r+0x5e8>
    13c8:	00800044 	movi	r2,1
    13cc:	a0800115 	stw	r2,4(r20)
    13d0:	003fcd06 	br	1308 <_malloc_r+0x3fc>
    13d4:	2808d27a 	srli	r4,r5,9
    13d8:	2000371e 	bne	r4,zero,14b8 <_malloc_r+0x5ac>
    13dc:	2808d0fa 	srli	r4,r5,3
    13e0:	200690fa 	slli	r3,r4,3
    13e4:	1ad1883a 	add	r8,r3,r11
    13e8:	41800217 	ldw	r6,8(r8)
    13ec:	41805b26 	beq	r8,r6,155c <_malloc_r+0x650>
    13f0:	30800117 	ldw	r2,4(r6)
    13f4:	00ffff04 	movi	r3,-4
    13f8:	10c4703a 	and	r2,r2,r3
    13fc:	2880022e 	bgeu	r5,r2,1408 <_malloc_r+0x4fc>
    1400:	31800217 	ldw	r6,8(r6)
    1404:	41bffa1e 	bne	r8,r6,13f0 <_malloc_r+0x4e4>
    1408:	32000317 	ldw	r8,12(r6)
    140c:	39c00117 	ldw	r7,4(r7)
    1410:	82000315 	stw	r8,12(r16)
    1414:	81800215 	stw	r6,8(r16)
    1418:	07000074 	movhi	fp,1
    141c:	e70bc104 	addi	fp,fp,12036
    1420:	34000315 	stw	r16,12(r6)
    1424:	44000215 	stw	r16,8(r8)
    1428:	003f3e06 	br	1124 <_malloc_r+0x218>
    142c:	63000044 	addi	r12,r12,1
    1430:	608000cc 	andi	r2,r12,3
    1434:	10005d26 	beq	r2,zero,15ac <_malloc_r+0x6a0>
    1438:	18c00204 	addi	r3,r3,8
    143c:	003f5106 	br	1184 <_malloc_r+0x278>
    1440:	8089883a 	add	r4,r16,r2
    1444:	003f6d06 	br	11fc <_malloc_r+0x2f0>
    1448:	00805504 	movi	r2,340
    144c:	10c02036 	bltu	r2,r3,14d0 <_malloc_r+0x5c4>
    1450:	8804d3fa 	srli	r2,r17,15
    1454:	11801dc4 	addi	r6,r2,119
    1458:	300490fa 	slli	r2,r6,3
    145c:	003ed806 	br	fc0 <_malloc_r+0xb4>
    1460:	48c000c4 	addi	r3,r9,3
    1464:	003f3106 	br	112c <_malloc_r+0x220>
    1468:	05c00074 	movhi	r23,1
    146c:	bdd81504 	addi	r23,r23,24660
    1470:	b8800017 	ldw	r2,0(r23)
    1474:	988d883a 	add	r6,r19,r2
    1478:	b9800015 	stw	r6,0(r23)
    147c:	293fb21e 	bne	r5,r4,1348 <_malloc_r+0x43c>
    1480:	2083ffcc 	andi	r2,r4,4095
    1484:	103fb01e 	bne	r2,zero,1348 <_malloc_r+0x43c>
    1488:	e4000217 	ldw	r16,8(fp)
    148c:	9d45883a 	add	r2,r19,r21
    1490:	10800054 	ori	r2,r2,1
    1494:	80800115 	stw	r2,4(r16)
    1498:	b8c00017 	ldw	r3,0(r23)
    149c:	d0a6b417 	ldw	r2,-25904(gp)
    14a0:	10c0012e 	bgeu	r2,r3,14a8 <_malloc_r+0x59c>
    14a4:	d0e6b415 	stw	r3,-25904(gp)
    14a8:	d0a6b517 	ldw	r2,-25900(gp)
    14ac:	10ff962e 	bgeu	r2,r3,1308 <_malloc_r+0x3fc>
    14b0:	d0e6b515 	stw	r3,-25900(gp)
    14b4:	003f9406 	br	1308 <_malloc_r+0x3fc>
    14b8:	00800104 	movi	r2,4
    14bc:	11001e36 	bltu	r2,r4,1538 <_malloc_r+0x62c>
    14c0:	2804d1ba 	srli	r2,r5,6
    14c4:	11000e04 	addi	r4,r2,56
    14c8:	200690fa 	slli	r3,r4,3
    14cc:	003fc506 	br	13e4 <_malloc_r+0x4d8>
    14d0:	00815504 	movi	r2,1364
    14d4:	10c01d2e 	bgeu	r2,r3,154c <_malloc_r+0x640>
    14d8:	01801f84 	movi	r6,126
    14dc:	0080fc04 	movi	r2,1008
    14e0:	003eb706 	br	fc0 <_malloc_r+0xb4>
    14e4:	00800204 	movi	r2,8
    14e8:	10cbc83a 	sub	r5,r2,r3
    14ec:	2169883a 	add	r20,r4,r5
    14f0:	003f9e06 	br	136c <_malloc_r+0x460>
    14f4:	00bffe04 	movi	r2,-8
    14f8:	a93ffd04 	addi	r4,r21,-12
    14fc:	2088703a 	and	r4,r4,r2
    1500:	b10b883a 	add	r5,r22,r4
    1504:	00c00144 	movi	r3,5
    1508:	28c00215 	stw	r3,8(r5)
    150c:	28c00115 	stw	r3,4(r5)
    1510:	b0800117 	ldw	r2,4(r22)
    1514:	1080004c 	andi	r2,r2,1
    1518:	2084b03a 	or	r2,r4,r2
    151c:	b0800115 	stw	r2,4(r22)
    1520:	313fdd2e 	bgeu	r6,r4,1498 <_malloc_r+0x58c>
    1524:	b1400204 	addi	r5,r22,8
    1528:	9009883a 	mov	r4,r18
    152c:	00078e40 	call	78e4 <_free_r>
    1530:	e4000217 	ldw	r16,8(fp)
    1534:	003fd806 	br	1498 <_malloc_r+0x58c>
    1538:	00800504 	movi	r2,20
    153c:	11001536 	bltu	r2,r4,1594 <_malloc_r+0x688>
    1540:	210016c4 	addi	r4,r4,91
    1544:	200690fa 	slli	r3,r4,3
    1548:	003fa606 	br	13e4 <_malloc_r+0x4d8>
    154c:	8804d4ba 	srli	r2,r17,18
    1550:	11801f04 	addi	r6,r2,124
    1554:	300490fa 	slli	r2,r6,3
    1558:	003e9906 	br	fc0 <_malloc_r+0xb4>
    155c:	2009d0ba 	srai	r4,r4,2
    1560:	01400074 	movhi	r5,1
    1564:	294bc104 	addi	r5,r5,12036
    1568:	00c00044 	movi	r3,1
    156c:	28800117 	ldw	r2,4(r5)
    1570:	1906983a 	sll	r3,r3,r4
    1574:	10c4b03a 	or	r2,r2,r3
    1578:	28800115 	stw	r2,4(r5)
    157c:	003fa306 	br	140c <_malloc_r+0x500>
    1580:	0027883a 	mov	r19,zero
    1584:	00c00044 	movi	r3,1
    1588:	003f8606 	br	13a4 <_malloc_r+0x498>
    158c:	d1200315 	stw	r4,-32756(gp)
    1590:	003f7306 	br	1360 <_malloc_r+0x454>
    1594:	00801504 	movi	r2,84
    1598:	11001936 	bltu	r2,r4,1600 <_malloc_r+0x6f4>
    159c:	2804d33a 	srli	r2,r5,12
    15a0:	11001b84 	addi	r4,r2,110
    15a4:	200690fa 	slli	r3,r4,3
    15a8:	003f8e06 	br	13e4 <_malloc_r+0x4d8>
    15ac:	480b883a 	mov	r5,r9
    15b0:	6807883a 	mov	r3,r13
    15b4:	288000cc 	andi	r2,r5,3
    15b8:	18fffe04 	addi	r3,r3,-8
    15bc:	297fffc4 	addi	r5,r5,-1
    15c0:	10001526 	beq	r2,zero,1618 <_malloc_r+0x70c>
    15c4:	18800217 	ldw	r2,8(r3)
    15c8:	10fffa26 	beq	r2,r3,15b4 <_malloc_r+0x6a8>
    15cc:	2109883a 	add	r4,r4,r4
    15d0:	393f1e36 	bltu	r7,r4,124c <_malloc_r+0x340>
    15d4:	203f1d26 	beq	r4,zero,124c <_malloc_r+0x340>
    15d8:	21c4703a 	and	r2,r4,r7
    15dc:	10000226 	beq	r2,zero,15e8 <_malloc_r+0x6dc>
    15e0:	6013883a 	mov	r9,r12
    15e4:	003ee106 	br	116c <_malloc_r+0x260>
    15e8:	2109883a 	add	r4,r4,r4
    15ec:	3904703a 	and	r2,r7,r4
    15f0:	63000104 	addi	r12,r12,4
    15f4:	103ffc26 	beq	r2,zero,15e8 <_malloc_r+0x6dc>
    15f8:	6013883a 	mov	r9,r12
    15fc:	003edb06 	br	116c <_malloc_r+0x260>
    1600:	00805504 	movi	r2,340
    1604:	11000836 	bltu	r2,r4,1628 <_malloc_r+0x71c>
    1608:	2804d3fa 	srli	r2,r5,15
    160c:	11001dc4 	addi	r4,r2,119
    1610:	200690fa 	slli	r3,r4,3
    1614:	003f7306 	br	13e4 <_malloc_r+0x4d8>
    1618:	0104303a 	nor	r2,zero,r4
    161c:	388e703a 	and	r7,r7,r2
    1620:	e1c00115 	stw	r7,4(fp)
    1624:	003fe906 	br	15cc <_malloc_r+0x6c0>
    1628:	00815504 	movi	r2,1364
    162c:	1100032e 	bgeu	r2,r4,163c <_malloc_r+0x730>
    1630:	01001f84 	movi	r4,126
    1634:	00c0fc04 	movi	r3,1008
    1638:	003f6a06 	br	13e4 <_malloc_r+0x4d8>
    163c:	2804d4ba 	srli	r2,r5,18
    1640:	11001f04 	addi	r4,r2,124
    1644:	200690fa 	slli	r3,r4,3
    1648:	003f6606 	br	13e4 <_malloc_r+0x4d8>

0000164c <memchr>:
    164c:	008000c4 	movi	r2,3
    1650:	29403fcc 	andi	r5,r5,255
    1654:	2007883a 	mov	r3,r4
    1658:	1180022e 	bgeu	r2,r6,1664 <memchr+0x18>
    165c:	2084703a 	and	r2,r4,r2
    1660:	10000b26 	beq	r2,zero,1690 <memchr+0x44>
    1664:	313fffc4 	addi	r4,r6,-1
    1668:	3000051e 	bne	r6,zero,1680 <memchr+0x34>
    166c:	00002c06 	br	1720 <memchr+0xd4>
    1670:	213fffc4 	addi	r4,r4,-1
    1674:	00bfffc4 	movi	r2,-1
    1678:	18c00044 	addi	r3,r3,1
    167c:	20802826 	beq	r4,r2,1720 <memchr+0xd4>
    1680:	18800003 	ldbu	r2,0(r3)
    1684:	28bffa1e 	bne	r5,r2,1670 <memchr+0x24>
    1688:	1805883a 	mov	r2,r3
    168c:	f800283a 	ret
    1690:	0011883a 	mov	r8,zero
    1694:	0007883a 	mov	r3,zero
    1698:	01c00104 	movi	r7,4
    169c:	4004923a 	slli	r2,r8,8
    16a0:	18c00044 	addi	r3,r3,1
    16a4:	1151883a 	add	r8,r2,r5
    16a8:	19fffc1e 	bne	r3,r7,169c <memchr+0x50>
    16ac:	02bfbff4 	movhi	r10,65279
    16b0:	52bfbfc4 	addi	r10,r10,-257
    16b4:	02602074 	movhi	r9,32897
    16b8:	4a602004 	addi	r9,r9,-32640
    16bc:	02c000c4 	movi	r11,3
    16c0:	20800017 	ldw	r2,0(r4)
    16c4:	31bfff04 	addi	r6,r6,-4
    16c8:	200f883a 	mov	r7,r4
    16cc:	1204f03a 	xor	r2,r2,r8
    16d0:	1287883a 	add	r3,r2,r10
    16d4:	1a46703a 	and	r3,r3,r9
    16d8:	0084303a 	nor	r2,zero,r2
    16dc:	10c4703a 	and	r2,r2,r3
    16e0:	10000b26 	beq	r2,zero,1710 <memchr+0xc4>
    16e4:	20800003 	ldbu	r2,0(r4)
    16e8:	28800f26 	beq	r5,r2,1728 <memchr+0xdc>
    16ec:	20800043 	ldbu	r2,1(r4)
    16f0:	21c00044 	addi	r7,r4,1
    16f4:	28800c26 	beq	r5,r2,1728 <memchr+0xdc>
    16f8:	20800083 	ldbu	r2,2(r4)
    16fc:	21c00084 	addi	r7,r4,2
    1700:	28800926 	beq	r5,r2,1728 <memchr+0xdc>
    1704:	208000c3 	ldbu	r2,3(r4)
    1708:	21c000c4 	addi	r7,r4,3
    170c:	28800626 	beq	r5,r2,1728 <memchr+0xdc>
    1710:	21000104 	addi	r4,r4,4
    1714:	59bfea36 	bltu	r11,r6,16c0 <memchr+0x74>
    1718:	2007883a 	mov	r3,r4
    171c:	003fd106 	br	1664 <memchr+0x18>
    1720:	0005883a 	mov	r2,zero
    1724:	f800283a 	ret
    1728:	3805883a 	mov	r2,r7
    172c:	f800283a 	ret

00001730 <memcpy>:
    1730:	01c003c4 	movi	r7,15
    1734:	2007883a 	mov	r3,r4
    1738:	3980032e 	bgeu	r7,r6,1748 <memcpy+0x18>
    173c:	2904b03a 	or	r2,r5,r4
    1740:	108000cc 	andi	r2,r2,3
    1744:	10000926 	beq	r2,zero,176c <memcpy+0x3c>
    1748:	30000626 	beq	r6,zero,1764 <memcpy+0x34>
    174c:	30cd883a 	add	r6,r6,r3
    1750:	28800003 	ldbu	r2,0(r5)
    1754:	29400044 	addi	r5,r5,1
    1758:	18800005 	stb	r2,0(r3)
    175c:	18c00044 	addi	r3,r3,1
    1760:	30fffb1e 	bne	r6,r3,1750 <memcpy+0x20>
    1764:	2005883a 	mov	r2,r4
    1768:	f800283a 	ret
    176c:	3811883a 	mov	r8,r7
    1770:	200f883a 	mov	r7,r4
    1774:	28c00017 	ldw	r3,0(r5)
    1778:	31bffc04 	addi	r6,r6,-16
    177c:	38c00015 	stw	r3,0(r7)
    1780:	28800117 	ldw	r2,4(r5)
    1784:	38800115 	stw	r2,4(r7)
    1788:	28c00217 	ldw	r3,8(r5)
    178c:	38c00215 	stw	r3,8(r7)
    1790:	28800317 	ldw	r2,12(r5)
    1794:	29400404 	addi	r5,r5,16
    1798:	38800315 	stw	r2,12(r7)
    179c:	39c00404 	addi	r7,r7,16
    17a0:	41bff436 	bltu	r8,r6,1774 <memcpy+0x44>
    17a4:	008000c4 	movi	r2,3
    17a8:	1180072e 	bgeu	r2,r6,17c8 <memcpy+0x98>
    17ac:	1007883a 	mov	r3,r2
    17b0:	28800017 	ldw	r2,0(r5)
    17b4:	31bfff04 	addi	r6,r6,-4
    17b8:	29400104 	addi	r5,r5,4
    17bc:	38800015 	stw	r2,0(r7)
    17c0:	39c00104 	addi	r7,r7,4
    17c4:	19bffa36 	bltu	r3,r6,17b0 <memcpy+0x80>
    17c8:	3807883a 	mov	r3,r7
    17cc:	003fde06 	br	1748 <memcpy+0x18>

000017d0 <memset>:
    17d0:	008000c4 	movi	r2,3
    17d4:	29403fcc 	andi	r5,r5,255
    17d8:	2007883a 	mov	r3,r4
    17dc:	1180022e 	bgeu	r2,r6,17e8 <memset+0x18>
    17e0:	2084703a 	and	r2,r4,r2
    17e4:	10000826 	beq	r2,zero,1808 <memset+0x38>
    17e8:	30000526 	beq	r6,zero,1800 <memset+0x30>
    17ec:	2805883a 	mov	r2,r5
    17f0:	30cd883a 	add	r6,r6,r3
    17f4:	18800005 	stb	r2,0(r3)
    17f8:	18c00044 	addi	r3,r3,1
    17fc:	19bffd1e 	bne	r3,r6,17f4 <memset+0x24>
    1800:	2005883a 	mov	r2,r4
    1804:	f800283a 	ret
    1808:	2804923a 	slli	r2,r5,8
    180c:	020003c4 	movi	r8,15
    1810:	200f883a 	mov	r7,r4
    1814:	2884b03a 	or	r2,r5,r2
    1818:	1006943a 	slli	r3,r2,16
    181c:	10c6b03a 	or	r3,r2,r3
    1820:	41800a2e 	bgeu	r8,r6,184c <memset+0x7c>
    1824:	4005883a 	mov	r2,r8
    1828:	31bffc04 	addi	r6,r6,-16
    182c:	38c00015 	stw	r3,0(r7)
    1830:	38c00115 	stw	r3,4(r7)
    1834:	38c00215 	stw	r3,8(r7)
    1838:	38c00315 	stw	r3,12(r7)
    183c:	39c00404 	addi	r7,r7,16
    1840:	11bff936 	bltu	r2,r6,1828 <memset+0x58>
    1844:	008000c4 	movi	r2,3
    1848:	1180052e 	bgeu	r2,r6,1860 <memset+0x90>
    184c:	31bfff04 	addi	r6,r6,-4
    1850:	008000c4 	movi	r2,3
    1854:	38c00015 	stw	r3,0(r7)
    1858:	39c00104 	addi	r7,r7,4
    185c:	11bffb36 	bltu	r2,r6,184c <memset+0x7c>
    1860:	3807883a 	mov	r3,r7
    1864:	003fe006 	br	17e8 <memset+0x18>

00001868 <printf>:
    1868:	defffb04 	addi	sp,sp,-20
    186c:	dfc00115 	stw	ra,4(sp)
    1870:	d9400215 	stw	r5,8(sp)
    1874:	d9800315 	stw	r6,12(sp)
    1878:	d9c00415 	stw	r7,16(sp)
    187c:	00800074 	movhi	r2,1
    1880:	10915204 	addi	r2,r2,17736
    1884:	10c00017 	ldw	r3,0(r2)
    1888:	200b883a 	mov	r5,r4
    188c:	d8800204 	addi	r2,sp,8
    1890:	19000217 	ldw	r4,8(r3)
    1894:	100d883a 	mov	r6,r2
    1898:	d8800015 	stw	r2,0(sp)
    189c:	00040940 	call	4094 <__vfprintf_internal>
    18a0:	dfc00117 	ldw	ra,4(sp)
    18a4:	dec00504 	addi	sp,sp,20
    18a8:	f800283a 	ret

000018ac <_printf_r>:
    18ac:	defffc04 	addi	sp,sp,-16
    18b0:	dfc00115 	stw	ra,4(sp)
    18b4:	d9800215 	stw	r6,8(sp)
    18b8:	d9c00315 	stw	r7,12(sp)
    18bc:	280d883a 	mov	r6,r5
    18c0:	21400217 	ldw	r5,8(r4)
    18c4:	d8c00204 	addi	r3,sp,8
    18c8:	180f883a 	mov	r7,r3
    18cc:	d8c00015 	stw	r3,0(sp)
    18d0:	00021e80 	call	21e8 <___vfprintf_internal_r>
    18d4:	dfc00117 	ldw	ra,4(sp)
    18d8:	dec00404 	addi	sp,sp,16
    18dc:	f800283a 	ret

000018e0 <__srefill_r>:
    18e0:	defffd04 	addi	sp,sp,-12
    18e4:	dc400115 	stw	r17,4(sp)
    18e8:	dc000015 	stw	r16,0(sp)
    18ec:	dfc00215 	stw	ra,8(sp)
    18f0:	2023883a 	mov	r17,r4
    18f4:	2821883a 	mov	r16,r5
    18f8:	20000226 	beq	r4,zero,1904 <__srefill_r+0x24>
    18fc:	20800e17 	ldw	r2,56(r4)
    1900:	10004126 	beq	r2,zero,1a08 <__srefill_r+0x128>
    1904:	80c0030b 	ldhu	r3,12(r16)
    1908:	80000115 	stw	zero,4(r16)
    190c:	1880080c 	andi	r2,r3,32
    1910:	1000361e 	bne	r2,zero,19ec <__srefill_r+0x10c>
    1914:	1880010c 	andi	r2,r3,4
    1918:	1000211e 	bne	r2,zero,19a0 <__srefill_r+0xc0>
    191c:	1880040c 	andi	r2,r3,16
    1920:	10005026 	beq	r2,zero,1a64 <__srefill_r+0x184>
    1924:	1880020c 	andi	r2,r3,8
    1928:	1000541e 	bne	r2,zero,1a7c <__srefill_r+0x19c>
    192c:	8080030b 	ldhu	r2,12(r16)
    1930:	10800114 	ori	r2,r2,4
    1934:	8080030d 	sth	r2,12(r16)
    1938:	80800417 	ldw	r2,16(r16)
    193c:	10004526 	beq	r2,zero,1a54 <__srefill_r+0x174>
    1940:	8080030b 	ldhu	r2,12(r16)
    1944:	108000cc 	andi	r2,r2,3
    1948:	1000361e 	bne	r2,zero,1a24 <__srefill_r+0x144>
    194c:	81800417 	ldw	r6,16(r16)
    1950:	80c00817 	ldw	r3,32(r16)
    1954:	81400717 	ldw	r5,28(r16)
    1958:	81c00517 	ldw	r7,20(r16)
    195c:	8809883a 	mov	r4,r17
    1960:	81800015 	stw	r6,0(r16)
    1964:	183ee83a 	callr	r3
    1968:	80c0030b 	ldhu	r3,12(r16)
    196c:	1009883a 	mov	r4,r2
    1970:	80800115 	stw	r2,4(r16)
    1974:	00b7ffc4 	movi	r2,-8193
    1978:	1884703a 	and	r2,r3,r2
    197c:	8080030d 	sth	r2,12(r16)
    1980:	0100230e 	bge	zero,r4,1a10 <__srefill_r+0x130>
    1984:	0009883a 	mov	r4,zero
    1988:	2005883a 	mov	r2,r4
    198c:	dfc00217 	ldw	ra,8(sp)
    1990:	dc400117 	ldw	r17,4(sp)
    1994:	dc000017 	ldw	r16,0(sp)
    1998:	dec00304 	addi	sp,sp,12
    199c:	f800283a 	ret
    19a0:	81400c17 	ldw	r5,48(r16)
    19a4:	283fe426 	beq	r5,zero,1938 <__srefill_r+0x58>
    19a8:	80801004 	addi	r2,r16,64
    19ac:	28800226 	beq	r5,r2,19b8 <__srefill_r+0xd8>
    19b0:	8809883a 	mov	r4,r17
    19b4:	00078e40 	call	78e4 <_free_r>
    19b8:	80800f17 	ldw	r2,60(r16)
    19bc:	80000c15 	stw	zero,48(r16)
    19c0:	80800115 	stw	r2,4(r16)
    19c4:	103fdc26 	beq	r2,zero,1938 <__srefill_r+0x58>
    19c8:	80800e17 	ldw	r2,56(r16)
    19cc:	0009883a 	mov	r4,zero
    19d0:	80800015 	stw	r2,0(r16)
    19d4:	2005883a 	mov	r2,r4
    19d8:	dfc00217 	ldw	ra,8(sp)
    19dc:	dc400117 	ldw	r17,4(sp)
    19e0:	dc000017 	ldw	r16,0(sp)
    19e4:	dec00304 	addi	sp,sp,12
    19e8:	f800283a 	ret
    19ec:	013fffc4 	movi	r4,-1
    19f0:	2005883a 	mov	r2,r4
    19f4:	dfc00217 	ldw	ra,8(sp)
    19f8:	dc400117 	ldw	r17,4(sp)
    19fc:	dc000017 	ldw	r16,0(sp)
    1a00:	dec00304 	addi	sp,sp,12
    1a04:	f800283a 	ret
    1a08:	0000b340 	call	b34 <__sinit>
    1a0c:	003fbd06 	br	1904 <__srefill_r+0x24>
    1a10:	20000b1e 	bne	r4,zero,1a40 <__srefill_r+0x160>
    1a14:	10800814 	ori	r2,r2,32
    1a18:	013fffc4 	movi	r4,-1
    1a1c:	8080030d 	sth	r2,12(r16)
    1a20:	003fd906 	br	1988 <__srefill_r+0xa8>
    1a24:	00800074 	movhi	r2,1
    1a28:	10915304 	addi	r2,r2,17740
    1a2c:	11000017 	ldw	r4,0(r2)
    1a30:	01400034 	movhi	r5,0
    1a34:	2946a904 	addi	r5,r5,6820
    1a38:	0000e540 	call	e54 <_fwalk>
    1a3c:	003fc306 	br	194c <__srefill_r+0x6c>
    1a40:	10801014 	ori	r2,r2,64
    1a44:	013fffc4 	movi	r4,-1
    1a48:	8080030d 	sth	r2,12(r16)
    1a4c:	80000115 	stw	zero,4(r16)
    1a50:	003fcd06 	br	1988 <__srefill_r+0xa8>
    1a54:	8809883a 	mov	r4,r17
    1a58:	800b883a 	mov	r5,r16
    1a5c:	00081fc0 	call	81fc <__smakebuf_r>
    1a60:	003fb706 	br	1940 <__srefill_r+0x60>
    1a64:	18c01014 	ori	r3,r3,64
    1a68:	00800244 	movi	r2,9
    1a6c:	013fffc4 	movi	r4,-1
    1a70:	88800015 	stw	r2,0(r17)
    1a74:	80c0030d 	sth	r3,12(r16)
    1a78:	003fc306 	br	1988 <__srefill_r+0xa8>
    1a7c:	8809883a 	mov	r4,r17
    1a80:	800b883a 	mov	r5,r16
    1a84:	000734c0 	call	734c <_fflush_r>
    1a88:	103fd81e 	bne	r2,zero,19ec <__srefill_r+0x10c>
    1a8c:	8080030b 	ldhu	r2,12(r16)
    1a90:	80000215 	stw	zero,8(r16)
    1a94:	80000615 	stw	zero,24(r16)
    1a98:	10bffdcc 	andi	r2,r2,65527
    1a9c:	8080030d 	sth	r2,12(r16)
    1aa0:	003fa206 	br	192c <__srefill_r+0x4c>

00001aa4 <lflush>:
    1aa4:	20c0030b 	ldhu	r3,12(r4)
    1aa8:	01400244 	movi	r5,9
    1aac:	0005883a 	mov	r2,zero
    1ab0:	18c0024c 	andi	r3,r3,9
    1ab4:	19400126 	beq	r3,r5,1abc <lflush+0x18>
    1ab8:	f800283a 	ret
    1abc:	00075481 	jmpi	7548 <fflush>

00001ac0 <_sbrk_r>:
    1ac0:	defffd04 	addi	sp,sp,-12
    1ac4:	dc000015 	stw	r16,0(sp)
    1ac8:	04000074 	movhi	r16,1
    1acc:	84180804 	addi	r16,r16,24608
    1ad0:	dc400115 	stw	r17,4(sp)
    1ad4:	80000015 	stw	zero,0(r16)
    1ad8:	2023883a 	mov	r17,r4
    1adc:	2809883a 	mov	r4,r5
    1ae0:	dfc00215 	stw	ra,8(sp)
    1ae4:	00100c40 	call	100c4 <sbrk>
    1ae8:	1007883a 	mov	r3,r2
    1aec:	00bfffc4 	movi	r2,-1
    1af0:	18800626 	beq	r3,r2,1b0c <_sbrk_r+0x4c>
    1af4:	1805883a 	mov	r2,r3
    1af8:	dfc00217 	ldw	ra,8(sp)
    1afc:	dc400117 	ldw	r17,4(sp)
    1b00:	dc000017 	ldw	r16,0(sp)
    1b04:	dec00304 	addi	sp,sp,12
    1b08:	f800283a 	ret
    1b0c:	80800017 	ldw	r2,0(r16)
    1b10:	103ff826 	beq	r2,zero,1af4 <_sbrk_r+0x34>
    1b14:	88800015 	stw	r2,0(r17)
    1b18:	1805883a 	mov	r2,r3
    1b1c:	dfc00217 	ldw	ra,8(sp)
    1b20:	dc400117 	ldw	r17,4(sp)
    1b24:	dc000017 	ldw	r16,0(sp)
    1b28:	dec00304 	addi	sp,sp,12
    1b2c:	f800283a 	ret

00001b30 <sprintf>:
    1b30:	deffe504 	addi	sp,sp,-108
    1b34:	2013883a 	mov	r9,r4
    1b38:	dfc01815 	stw	ra,96(sp)
    1b3c:	d9801915 	stw	r6,100(sp)
    1b40:	d9c01a15 	stw	r7,104(sp)
    1b44:	d8801904 	addi	r2,sp,100
    1b48:	d8800015 	stw	r2,0(sp)
    1b4c:	00800074 	movhi	r2,1
    1b50:	10915204 	addi	r2,r2,17736
    1b54:	11000017 	ldw	r4,0(r2)
    1b58:	d9c00017 	ldw	r7,0(sp)
    1b5c:	00808204 	movi	r2,520
    1b60:	00e00034 	movhi	r3,32768
    1b64:	18ffffc4 	addi	r3,r3,-1
    1b68:	280d883a 	mov	r6,r5
    1b6c:	d880040d 	sth	r2,16(sp)
    1b70:	d9400104 	addi	r5,sp,4
    1b74:	00bfffc4 	movi	r2,-1
    1b78:	d8c00615 	stw	r3,24(sp)
    1b7c:	d8c00315 	stw	r3,12(sp)
    1b80:	da400515 	stw	r9,20(sp)
    1b84:	d880048d 	sth	r2,18(sp)
    1b88:	da400115 	stw	r9,4(sp)
    1b8c:	00021e80 	call	21e8 <___vfprintf_internal_r>
    1b90:	d8c00117 	ldw	r3,4(sp)
    1b94:	18000005 	stb	zero,0(r3)
    1b98:	dfc01817 	ldw	ra,96(sp)
    1b9c:	dec01b04 	addi	sp,sp,108
    1ba0:	f800283a 	ret

00001ba4 <_sprintf_r>:
    1ba4:	deffe604 	addi	sp,sp,-104
    1ba8:	2813883a 	mov	r9,r5
    1bac:	dfc01815 	stw	ra,96(sp)
    1bb0:	d9c01915 	stw	r7,100(sp)
    1bb4:	d8801904 	addi	r2,sp,100
    1bb8:	d8800015 	stw	r2,0(sp)
    1bbc:	100f883a 	mov	r7,r2
    1bc0:	00808204 	movi	r2,520
    1bc4:	00e00034 	movhi	r3,32768
    1bc8:	18ffffc4 	addi	r3,r3,-1
    1bcc:	d880040d 	sth	r2,16(sp)
    1bd0:	d9400104 	addi	r5,sp,4
    1bd4:	00bfffc4 	movi	r2,-1
    1bd8:	d8c00615 	stw	r3,24(sp)
    1bdc:	d8c00315 	stw	r3,12(sp)
    1be0:	da400515 	stw	r9,20(sp)
    1be4:	d880048d 	sth	r2,18(sp)
    1be8:	da400115 	stw	r9,4(sp)
    1bec:	00021e80 	call	21e8 <___vfprintf_internal_r>
    1bf0:	d8c00117 	ldw	r3,4(sp)
    1bf4:	18000005 	stb	zero,0(r3)
    1bf8:	dfc01817 	ldw	ra,96(sp)
    1bfc:	dec01a04 	addi	sp,sp,104
    1c00:	f800283a 	ret

00001c04 <eofread>:
    1c04:	0005883a 	mov	r2,zero
    1c08:	f800283a 	ret

00001c0c <_sscanf_r>:
    1c0c:	deffe404 	addi	sp,sp,-112
    1c10:	dcc01915 	stw	r19,100(sp)
    1c14:	2027883a 	mov	r19,r4
    1c18:	dfc01a15 	stw	ra,104(sp)
    1c1c:	dc401815 	stw	r17,96(sp)
    1c20:	d9c01b15 	stw	r7,108(sp)
    1c24:	00808104 	movi	r2,516
    1c28:	2809883a 	mov	r4,r5
    1c2c:	3023883a 	mov	r17,r6
    1c30:	d9400115 	stw	r5,4(sp)
    1c34:	d9400515 	stw	r5,20(sp)
    1c38:	d880040d 	sth	r2,16(sp)
    1c3c:	000211c0 	call	211c <strlen>
    1c40:	d8c01b04 	addi	r3,sp,108
    1c44:	d8c00015 	stw	r3,0(sp)
    1c48:	180f883a 	mov	r7,r3
    1c4c:	023fffc4 	movi	r8,-1
    1c50:	00c00034 	movhi	r3,0
    1c54:	18c70104 	addi	r3,r3,7172
    1c58:	9809883a 	mov	r4,r19
    1c5c:	880d883a 	mov	r6,r17
    1c60:	d9400104 	addi	r5,sp,4
    1c64:	d8800615 	stw	r2,24(sp)
    1c68:	d8c00915 	stw	r3,36(sp)
    1c6c:	da00048d 	sth	r8,18(sp)
    1c70:	d8800215 	stw	r2,8(sp)
    1c74:	d8000d15 	stw	zero,52(sp)
    1c78:	d8001215 	stw	zero,72(sp)
    1c7c:	00040b80 	call	40b8 <__svfscanf_r>
    1c80:	dfc01a17 	ldw	ra,104(sp)
    1c84:	dcc01917 	ldw	r19,100(sp)
    1c88:	dc401817 	ldw	r17,96(sp)
    1c8c:	dec01c04 	addi	sp,sp,112
    1c90:	f800283a 	ret

00001c94 <sscanf>:
    1c94:	deffe404 	addi	sp,sp,-112
    1c98:	dfc01915 	stw	ra,100(sp)
    1c9c:	dc401815 	stw	r17,96(sp)
    1ca0:	d9801a15 	stw	r6,104(sp)
    1ca4:	d9c01b15 	stw	r7,108(sp)
    1ca8:	00808104 	movi	r2,516
    1cac:	2823883a 	mov	r17,r5
    1cb0:	d9000515 	stw	r4,20(sp)
    1cb4:	d9000115 	stw	r4,4(sp)
    1cb8:	d880040d 	sth	r2,16(sp)
    1cbc:	000211c0 	call	211c <strlen>
    1cc0:	d8c01a04 	addi	r3,sp,104
    1cc4:	d8c00015 	stw	r3,0(sp)
    1cc8:	00c00074 	movhi	r3,1
    1ccc:	18d15204 	addi	r3,r3,17736
    1cd0:	19000017 	ldw	r4,0(r3)
    1cd4:	d9c00017 	ldw	r7,0(sp)
    1cd8:	00c00034 	movhi	r3,0
    1cdc:	18c70104 	addi	r3,r3,7172
    1ce0:	023fffc4 	movi	r8,-1
    1ce4:	880d883a 	mov	r6,r17
    1ce8:	d9400104 	addi	r5,sp,4
    1cec:	d8800615 	stw	r2,24(sp)
    1cf0:	d8c00915 	stw	r3,36(sp)
    1cf4:	da00048d 	sth	r8,18(sp)
    1cf8:	d8800215 	stw	r2,8(sp)
    1cfc:	d8000d15 	stw	zero,52(sp)
    1d00:	d8001215 	stw	zero,72(sp)
    1d04:	00040b80 	call	40b8 <__svfscanf_r>
    1d08:	dfc01917 	ldw	ra,100(sp)
    1d0c:	dc401817 	ldw	r17,96(sp)
    1d10:	dec01c04 	addi	sp,sp,112
    1d14:	f800283a 	ret

00001d18 <__sclose>:
    1d18:	2940038f 	ldh	r5,14(r5)
    1d1c:	00059ec1 	jmpi	59ec <_close_r>

00001d20 <__sseek>:
    1d20:	defffe04 	addi	sp,sp,-8
    1d24:	dc000015 	stw	r16,0(sp)
    1d28:	2821883a 	mov	r16,r5
    1d2c:	2940038f 	ldh	r5,14(r5)
    1d30:	dfc00115 	stw	ra,4(sp)
    1d34:	00081840 	call	8184 <_lseek_r>
    1d38:	1007883a 	mov	r3,r2
    1d3c:	00bfffc4 	movi	r2,-1
    1d40:	18800926 	beq	r3,r2,1d68 <__sseek+0x48>
    1d44:	8080030b 	ldhu	r2,12(r16)
    1d48:	80c01415 	stw	r3,80(r16)
    1d4c:	10840014 	ori	r2,r2,4096
    1d50:	8080030d 	sth	r2,12(r16)
    1d54:	1805883a 	mov	r2,r3
    1d58:	dfc00117 	ldw	ra,4(sp)
    1d5c:	dc000017 	ldw	r16,0(sp)
    1d60:	dec00204 	addi	sp,sp,8
    1d64:	f800283a 	ret
    1d68:	8080030b 	ldhu	r2,12(r16)
    1d6c:	10bbffcc 	andi	r2,r2,61439
    1d70:	8080030d 	sth	r2,12(r16)
    1d74:	1805883a 	mov	r2,r3
    1d78:	dfc00117 	ldw	ra,4(sp)
    1d7c:	dc000017 	ldw	r16,0(sp)
    1d80:	dec00204 	addi	sp,sp,8
    1d84:	f800283a 	ret

00001d88 <__swrite>:
    1d88:	2880030b 	ldhu	r2,12(r5)
    1d8c:	defffb04 	addi	sp,sp,-20
    1d90:	dcc00315 	stw	r19,12(sp)
    1d94:	1080400c 	andi	r2,r2,256
    1d98:	dc800215 	stw	r18,8(sp)
    1d9c:	dc400115 	stw	r17,4(sp)
    1da0:	dc000015 	stw	r16,0(sp)
    1da4:	3027883a 	mov	r19,r6
    1da8:	3825883a 	mov	r18,r7
    1dac:	dfc00415 	stw	ra,16(sp)
    1db0:	2821883a 	mov	r16,r5
    1db4:	000d883a 	mov	r6,zero
    1db8:	01c00084 	movi	r7,2
    1dbc:	2023883a 	mov	r17,r4
    1dc0:	10000226 	beq	r2,zero,1dcc <__swrite+0x44>
    1dc4:	2940038f 	ldh	r5,14(r5)
    1dc8:	00081840 	call	8184 <_lseek_r>
    1dcc:	8080030b 	ldhu	r2,12(r16)
    1dd0:	8140038f 	ldh	r5,14(r16)
    1dd4:	8809883a 	mov	r4,r17
    1dd8:	10bbffcc 	andi	r2,r2,61439
    1ddc:	980d883a 	mov	r6,r19
    1de0:	900f883a 	mov	r7,r18
    1de4:	8080030d 	sth	r2,12(r16)
    1de8:	dfc00417 	ldw	ra,16(sp)
    1dec:	dcc00317 	ldw	r19,12(sp)
    1df0:	dc800217 	ldw	r18,8(sp)
    1df4:	dc400117 	ldw	r17,4(sp)
    1df8:	dc000017 	ldw	r16,0(sp)
    1dfc:	dec00504 	addi	sp,sp,20
    1e00:	00058381 	jmpi	5838 <_write_r>

00001e04 <__sread>:
    1e04:	defffe04 	addi	sp,sp,-8
    1e08:	dc000015 	stw	r16,0(sp)
    1e0c:	2821883a 	mov	r16,r5
    1e10:	2940038f 	ldh	r5,14(r5)
    1e14:	dfc00115 	stw	ra,4(sp)
    1e18:	00095640 	call	9564 <_read_r>
    1e1c:	1007883a 	mov	r3,r2
    1e20:	10000816 	blt	r2,zero,1e44 <__sread+0x40>
    1e24:	80801417 	ldw	r2,80(r16)
    1e28:	10c5883a 	add	r2,r2,r3
    1e2c:	80801415 	stw	r2,80(r16)
    1e30:	1805883a 	mov	r2,r3
    1e34:	dfc00117 	ldw	ra,4(sp)
    1e38:	dc000017 	ldw	r16,0(sp)
    1e3c:	dec00204 	addi	sp,sp,8
    1e40:	f800283a 	ret
    1e44:	8080030b 	ldhu	r2,12(r16)
    1e48:	10bbffcc 	andi	r2,r2,61439
    1e4c:	8080030d 	sth	r2,12(r16)
    1e50:	1805883a 	mov	r2,r3
    1e54:	dfc00117 	ldw	ra,4(sp)
    1e58:	dc000017 	ldw	r16,0(sp)
    1e5c:	dec00204 	addi	sp,sp,8
    1e60:	f800283a 	ret

00001e64 <strcat>:
    1e64:	defffe04 	addi	sp,sp,-8
    1e68:	208000cc 	andi	r2,r4,3
    1e6c:	dc000015 	stw	r16,0(sp)
    1e70:	dfc00115 	stw	ra,4(sp)
    1e74:	2021883a 	mov	r16,r4
    1e78:	1000161e 	bne	r2,zero,1ed4 <strcat+0x70>
    1e7c:	20c00017 	ldw	r3,0(r4)
    1e80:	01bfbff4 	movhi	r6,65279
    1e84:	31bfbfc4 	addi	r6,r6,-257
    1e88:	02202074 	movhi	r8,32897
    1e8c:	42202004 	addi	r8,r8,-32640
    1e90:	1985883a 	add	r2,r3,r6
    1e94:	1204703a 	and	r2,r2,r8
    1e98:	00c6303a 	nor	r3,zero,r3
    1e9c:	1886703a 	and	r3,r3,r2
    1ea0:	18000c1e 	bne	r3,zero,1ed4 <strcat+0x70>
    1ea4:	300f883a 	mov	r7,r6
    1ea8:	400d883a 	mov	r6,r8
    1eac:	21000104 	addi	r4,r4,4
    1eb0:	20800017 	ldw	r2,0(r4)
    1eb4:	11c7883a 	add	r3,r2,r7
    1eb8:	1986703a 	and	r3,r3,r6
    1ebc:	0084303a 	nor	r2,zero,r2
    1ec0:	10c4703a 	and	r2,r2,r3
    1ec4:	103ff926 	beq	r2,zero,1eac <strcat+0x48>
    1ec8:	20800007 	ldb	r2,0(r4)
    1ecc:	10000326 	beq	r2,zero,1edc <strcat+0x78>
    1ed0:	21000044 	addi	r4,r4,1
    1ed4:	20800007 	ldb	r2,0(r4)
    1ed8:	103ffd1e 	bne	r2,zero,1ed0 <strcat+0x6c>
    1edc:	00020900 	call	2090 <strcpy>
    1ee0:	8005883a 	mov	r2,r16
    1ee4:	dfc00117 	ldw	ra,4(sp)
    1ee8:	dc000017 	ldw	r16,0(sp)
    1eec:	dec00204 	addi	sp,sp,8
    1ef0:	f800283a 	ret

00001ef4 <strchr>:
    1ef4:	208000cc 	andi	r2,r4,3
    1ef8:	2007883a 	mov	r3,r4
    1efc:	1000311e 	bne	r2,zero,1fc4 <strchr+0xd0>
    1f00:	29c03fcc 	andi	r7,r5,255
    1f04:	0015883a 	mov	r10,zero
    1f08:	0007883a 	mov	r3,zero
    1f0c:	01400104 	movi	r5,4
    1f10:	5004923a 	slli	r2,r10,8
    1f14:	18c00044 	addi	r3,r3,1
    1f18:	3894b03a 	or	r10,r7,r2
    1f1c:	197ffc1e 	bne	r3,r5,1f10 <strchr+0x1c>
    1f20:	200d883a 	mov	r6,r4
    1f24:	21000017 	ldw	r4,0(r4)
    1f28:	017fbff4 	movhi	r5,65279
    1f2c:	297fbfc4 	addi	r5,r5,-257
    1f30:	02202074 	movhi	r8,32897
    1f34:	42202004 	addi	r8,r8,-32640
    1f38:	2145883a 	add	r2,r4,r5
    1f3c:	1204703a 	and	r2,r2,r8
    1f40:	0106303a 	nor	r3,zero,r4
    1f44:	10c4703a 	and	r2,r2,r3
    1f48:	1000151e 	bne	r2,zero,1fa0 <strchr+0xac>
    1f4c:	2284f03a 	xor	r2,r4,r10
    1f50:	1147883a 	add	r3,r2,r5
    1f54:	1a06703a 	and	r3,r3,r8
    1f58:	0084303a 	nor	r2,zero,r2
    1f5c:	10c4703a 	and	r2,r2,r3
    1f60:	10000f1e 	bne	r2,zero,1fa0 <strchr+0xac>
    1f64:	2813883a 	mov	r9,r5
    1f68:	00000106 	br	1f70 <strchr+0x7c>
    1f6c:	18000c1e 	bne	r3,zero,1fa0 <strchr+0xac>
    1f70:	31800104 	addi	r6,r6,4
    1f74:	30800017 	ldw	r2,0(r6)
    1f78:	1286f03a 	xor	r3,r2,r10
    1f7c:	124b883a 	add	r5,r2,r9
    1f80:	1a49883a 	add	r4,r3,r9
    1f84:	2a0a703a 	and	r5,r5,r8
    1f88:	0084303a 	nor	r2,zero,r2
    1f8c:	2208703a 	and	r4,r4,r8
    1f90:	00c6303a 	nor	r3,zero,r3
    1f94:	1144703a 	and	r2,r2,r5
    1f98:	1906703a 	and	r3,r3,r4
    1f9c:	103ff326 	beq	r2,zero,1f6c <strchr+0x78>
    1fa0:	3007883a 	mov	r3,r6
    1fa4:	00000206 	br	1fb0 <strchr+0xbc>
    1fa8:	38800426 	beq	r7,r2,1fbc <strchr+0xc8>
    1fac:	18c00044 	addi	r3,r3,1
    1fb0:	18800003 	ldbu	r2,0(r3)
    1fb4:	103ffc1e 	bne	r2,zero,1fa8 <strchr+0xb4>
    1fb8:	3800041e 	bne	r7,zero,1fcc <strchr+0xd8>
    1fbc:	1805883a 	mov	r2,r3
    1fc0:	f800283a 	ret
    1fc4:	29c03fcc 	andi	r7,r5,255
    1fc8:	003ff906 	br	1fb0 <strchr+0xbc>
    1fcc:	0005883a 	mov	r2,zero
    1fd0:	f800283a 	ret

00001fd4 <strcmp>:
    1fd4:	2144b03a 	or	r2,r4,r5
    1fd8:	108000cc 	andi	r2,r2,3
    1fdc:	10001d1e 	bne	r2,zero,2054 <strcmp+0x80>
    1fe0:	200f883a 	mov	r7,r4
    1fe4:	28800017 	ldw	r2,0(r5)
    1fe8:	21000017 	ldw	r4,0(r4)
    1fec:	280d883a 	mov	r6,r5
    1ff0:	2080161e 	bne	r4,r2,204c <strcmp+0x78>
    1ff4:	023fbff4 	movhi	r8,65279
    1ff8:	423fbfc4 	addi	r8,r8,-257
    1ffc:	2207883a 	add	r3,r4,r8
    2000:	01602074 	movhi	r5,32897
    2004:	29602004 	addi	r5,r5,-32640
    2008:	1946703a 	and	r3,r3,r5
    200c:	0104303a 	nor	r2,zero,r4
    2010:	10c4703a 	and	r2,r2,r3
    2014:	10001c1e 	bne	r2,zero,2088 <strcmp+0xb4>
    2018:	4013883a 	mov	r9,r8
    201c:	2811883a 	mov	r8,r5
    2020:	00000106 	br	2028 <strcmp+0x54>
    2024:	1800181e 	bne	r3,zero,2088 <strcmp+0xb4>
    2028:	39c00104 	addi	r7,r7,4
    202c:	39000017 	ldw	r4,0(r7)
    2030:	31800104 	addi	r6,r6,4
    2034:	31400017 	ldw	r5,0(r6)
    2038:	2245883a 	add	r2,r4,r9
    203c:	1204703a 	and	r2,r2,r8
    2040:	0106303a 	nor	r3,zero,r4
    2044:	1886703a 	and	r3,r3,r2
    2048:	217ff626 	beq	r4,r5,2024 <strcmp+0x50>
    204c:	3809883a 	mov	r4,r7
    2050:	300b883a 	mov	r5,r6
    2054:	20c00007 	ldb	r3,0(r4)
    2058:	1800051e 	bne	r3,zero,2070 <strcmp+0x9c>
    205c:	00000606 	br	2078 <strcmp+0xa4>
    2060:	21000044 	addi	r4,r4,1
    2064:	20c00007 	ldb	r3,0(r4)
    2068:	29400044 	addi	r5,r5,1
    206c:	18000226 	beq	r3,zero,2078 <strcmp+0xa4>
    2070:	28800007 	ldb	r2,0(r5)
    2074:	18bffa26 	beq	r3,r2,2060 <strcmp+0x8c>
    2078:	20c00003 	ldbu	r3,0(r4)
    207c:	28800003 	ldbu	r2,0(r5)
    2080:	1885c83a 	sub	r2,r3,r2
    2084:	f800283a 	ret
    2088:	0005883a 	mov	r2,zero
    208c:	f800283a 	ret

00002090 <strcpy>:
    2090:	2904b03a 	or	r2,r5,r4
    2094:	108000cc 	andi	r2,r2,3
    2098:	10000826 	beq	r2,zero,20bc <strcpy+0x2c>
    209c:	2007883a 	mov	r3,r4
    20a0:	28800003 	ldbu	r2,0(r5)
    20a4:	29400044 	addi	r5,r5,1
    20a8:	18800005 	stb	r2,0(r3)
    20ac:	18c00044 	addi	r3,r3,1
    20b0:	103ffb1e 	bne	r2,zero,20a0 <strcpy+0x10>
    20b4:	2005883a 	mov	r2,r4
    20b8:	f800283a 	ret
    20bc:	29800017 	ldw	r6,0(r5)
    20c0:	023fbff4 	movhi	r8,65279
    20c4:	423fbfc4 	addi	r8,r8,-257
    20c8:	02a02074 	movhi	r10,32897
    20cc:	52a02004 	addi	r10,r10,-32640
    20d0:	3205883a 	add	r2,r6,r8
    20d4:	0186303a 	nor	r3,zero,r6
    20d8:	10c4703a 	and	r2,r2,r3
    20dc:	1284703a 	and	r2,r2,r10
    20e0:	200f883a 	mov	r7,r4
    20e4:	10000b1e 	bne	r2,zero,2114 <strcpy+0x84>
    20e8:	4013883a 	mov	r9,r8
    20ec:	5011883a 	mov	r8,r10
    20f0:	39800015 	stw	r6,0(r7)
    20f4:	29400104 	addi	r5,r5,4
    20f8:	29800017 	ldw	r6,0(r5)
    20fc:	39c00104 	addi	r7,r7,4
    2100:	3245883a 	add	r2,r6,r9
    2104:	0186303a 	nor	r3,zero,r6
    2108:	10c4703a 	and	r2,r2,r3
    210c:	1204703a 	and	r2,r2,r8
    2110:	103ff726 	beq	r2,zero,20f0 <strcpy+0x60>
    2114:	3807883a 	mov	r3,r7
    2118:	003fe106 	br	20a0 <strcpy+0x10>

0000211c <strlen>:
    211c:	208000cc 	andi	r2,r4,3
    2120:	2011883a 	mov	r8,r4
    2124:	1000161e 	bne	r2,zero,2180 <strlen+0x64>
    2128:	20c00017 	ldw	r3,0(r4)
    212c:	017fbff4 	movhi	r5,65279
    2130:	297fbfc4 	addi	r5,r5,-257
    2134:	01e02074 	movhi	r7,32897
    2138:	39e02004 	addi	r7,r7,-32640
    213c:	1945883a 	add	r2,r3,r5
    2140:	11c4703a 	and	r2,r2,r7
    2144:	00c6303a 	nor	r3,zero,r3
    2148:	1886703a 	and	r3,r3,r2
    214c:	18000c1e 	bne	r3,zero,2180 <strlen+0x64>
    2150:	280d883a 	mov	r6,r5
    2154:	380b883a 	mov	r5,r7
    2158:	21000104 	addi	r4,r4,4
    215c:	20800017 	ldw	r2,0(r4)
    2160:	1187883a 	add	r3,r2,r6
    2164:	1946703a 	and	r3,r3,r5
    2168:	0084303a 	nor	r2,zero,r2
    216c:	10c4703a 	and	r2,r2,r3
    2170:	103ff926 	beq	r2,zero,2158 <strlen+0x3c>
    2174:	20800007 	ldb	r2,0(r4)
    2178:	10000326 	beq	r2,zero,2188 <strlen+0x6c>
    217c:	21000044 	addi	r4,r4,1
    2180:	20800007 	ldb	r2,0(r4)
    2184:	103ffd1e 	bne	r2,zero,217c <strlen+0x60>
    2188:	2205c83a 	sub	r2,r4,r8
    218c:	f800283a 	ret

00002190 <__sprint_r>:
    2190:	30800217 	ldw	r2,8(r6)
    2194:	defffe04 	addi	sp,sp,-8
    2198:	dc000015 	stw	r16,0(sp)
    219c:	dfc00115 	stw	ra,4(sp)
    21a0:	3021883a 	mov	r16,r6
    21a4:	0007883a 	mov	r3,zero
    21a8:	1000061e 	bne	r2,zero,21c4 <__sprint_r+0x34>
    21ac:	1805883a 	mov	r2,r3
    21b0:	30000115 	stw	zero,4(r6)
    21b4:	dfc00117 	ldw	ra,4(sp)
    21b8:	dc000017 	ldw	r16,0(sp)
    21bc:	dec00204 	addi	sp,sp,8
    21c0:	f800283a 	ret
    21c4:	0007bf80 	call	7bf8 <__sfvwrite_r>
    21c8:	1007883a 	mov	r3,r2
    21cc:	1805883a 	mov	r2,r3
    21d0:	80000115 	stw	zero,4(r16)
    21d4:	80000215 	stw	zero,8(r16)
    21d8:	dfc00117 	ldw	ra,4(sp)
    21dc:	dc000017 	ldw	r16,0(sp)
    21e0:	dec00204 	addi	sp,sp,8
    21e4:	f800283a 	ret

000021e8 <___vfprintf_internal_r>:
    21e8:	defea404 	addi	sp,sp,-1392
    21ec:	dd815815 	stw	r22,1376(sp)
    21f0:	dc015215 	stw	r16,1352(sp)
    21f4:	d9c15115 	stw	r7,1348(sp)
    21f8:	dfc15b15 	stw	ra,1388(sp)
    21fc:	df015a15 	stw	fp,1384(sp)
    2200:	ddc15915 	stw	r23,1380(sp)
    2204:	dd415715 	stw	r21,1372(sp)
    2208:	dd015615 	stw	r20,1368(sp)
    220c:	dcc15515 	stw	r19,1364(sp)
    2210:	dc815415 	stw	r18,1360(sp)
    2214:	dc415315 	stw	r17,1356(sp)
    2218:	282d883a 	mov	r22,r5
    221c:	3021883a 	mov	r16,r6
    2220:	d9014f15 	stw	r4,1340(sp)
    2224:	00080c80 	call	80c8 <_localeconv_r>
    2228:	10800017 	ldw	r2,0(r2)
    222c:	d9c15117 	ldw	r7,1348(sp)
    2230:	d8814915 	stw	r2,1316(sp)
    2234:	d8814f17 	ldw	r2,1340(sp)
    2238:	10000226 	beq	r2,zero,2244 <___vfprintf_internal_r+0x5c>
    223c:	10800e17 	ldw	r2,56(r2)
    2240:	10020d26 	beq	r2,zero,2a78 <___vfprintf_internal_r+0x890>
    2244:	b080030b 	ldhu	r2,12(r22)
    2248:	1080020c 	andi	r2,r2,8
    224c:	10020e26 	beq	r2,zero,2a88 <___vfprintf_internal_r+0x8a0>
    2250:	b0800417 	ldw	r2,16(r22)
    2254:	10020c26 	beq	r2,zero,2a88 <___vfprintf_internal_r+0x8a0>
    2258:	b200030b 	ldhu	r8,12(r22)
    225c:	00800284 	movi	r2,10
    2260:	40c0068c 	andi	r3,r8,26
    2264:	18802f1e 	bne	r3,r2,2324 <___vfprintf_internal_r+0x13c>
    2268:	b080038f 	ldh	r2,14(r22)
    226c:	10002d16 	blt	r2,zero,2324 <___vfprintf_internal_r+0x13c>
    2270:	b240038b 	ldhu	r9,14(r22)
    2274:	b2800717 	ldw	r10,28(r22)
    2278:	b2c00917 	ldw	r11,36(r22)
    227c:	d9014f17 	ldw	r4,1340(sp)
    2280:	dc402904 	addi	r17,sp,164
    2284:	d8804004 	addi	r2,sp,256
    2288:	00c10004 	movi	r3,1024
    228c:	423fff4c 	andi	r8,r8,65533
    2290:	800d883a 	mov	r6,r16
    2294:	880b883a 	mov	r5,r17
    2298:	da002c0d 	sth	r8,176(sp)
    229c:	da402c8d 	sth	r9,178(sp)
    22a0:	da803015 	stw	r10,192(sp)
    22a4:	dac03215 	stw	r11,200(sp)
    22a8:	d8802d15 	stw	r2,180(sp)
    22ac:	d8c02e15 	stw	r3,184(sp)
    22b0:	d8802915 	stw	r2,164(sp)
    22b4:	d8c02b15 	stw	r3,172(sp)
    22b8:	d8002f15 	stw	zero,188(sp)
    22bc:	00021e80 	call	21e8 <___vfprintf_internal_r>
    22c0:	d8814b15 	stw	r2,1324(sp)
    22c4:	10000416 	blt	r2,zero,22d8 <___vfprintf_internal_r+0xf0>
    22c8:	d9014f17 	ldw	r4,1340(sp)
    22cc:	880b883a 	mov	r5,r17
    22d0:	000734c0 	call	734c <_fflush_r>
    22d4:	1002321e 	bne	r2,zero,2ba0 <___vfprintf_internal_r+0x9b8>
    22d8:	d8802c0b 	ldhu	r2,176(sp)
    22dc:	1080100c 	andi	r2,r2,64
    22e0:	10000326 	beq	r2,zero,22f0 <___vfprintf_internal_r+0x108>
    22e4:	b080030b 	ldhu	r2,12(r22)
    22e8:	10801014 	ori	r2,r2,64
    22ec:	b080030d 	sth	r2,12(r22)
    22f0:	d8814b17 	ldw	r2,1324(sp)
    22f4:	dfc15b17 	ldw	ra,1388(sp)
    22f8:	df015a17 	ldw	fp,1384(sp)
    22fc:	ddc15917 	ldw	r23,1380(sp)
    2300:	dd815817 	ldw	r22,1376(sp)
    2304:	dd415717 	ldw	r21,1372(sp)
    2308:	dd015617 	ldw	r20,1368(sp)
    230c:	dcc15517 	ldw	r19,1364(sp)
    2310:	dc815417 	ldw	r18,1360(sp)
    2314:	dc415317 	ldw	r17,1356(sp)
    2318:	dc015217 	ldw	r16,1352(sp)
    231c:	dec15c04 	addi	sp,sp,1392
    2320:	f800283a 	ret
    2324:	0005883a 	mov	r2,zero
    2328:	0007883a 	mov	r3,zero
    232c:	dd401904 	addi	r21,sp,100
    2330:	d8814215 	stw	r2,1288(sp)
    2334:	802f883a 	mov	r23,r16
    2338:	d8c14315 	stw	r3,1292(sp)
    233c:	d8014b15 	stw	zero,1324(sp)
    2340:	d8014815 	stw	zero,1312(sp)
    2344:	d8014415 	stw	zero,1296(sp)
    2348:	d8014715 	stw	zero,1308(sp)
    234c:	dd400c15 	stw	r21,48(sp)
    2350:	d8000e15 	stw	zero,56(sp)
    2354:	d8000d15 	stw	zero,52(sp)
    2358:	b8800007 	ldb	r2,0(r23)
    235c:	10001926 	beq	r2,zero,23c4 <___vfprintf_internal_r+0x1dc>
    2360:	00c00944 	movi	r3,37
    2364:	10c01726 	beq	r2,r3,23c4 <___vfprintf_internal_r+0x1dc>
    2368:	b821883a 	mov	r16,r23
    236c:	00000106 	br	2374 <___vfprintf_internal_r+0x18c>
    2370:	10c00326 	beq	r2,r3,2380 <___vfprintf_internal_r+0x198>
    2374:	84000044 	addi	r16,r16,1
    2378:	80800007 	ldb	r2,0(r16)
    237c:	103ffc1e 	bne	r2,zero,2370 <___vfprintf_internal_r+0x188>
    2380:	85e7c83a 	sub	r19,r16,r23
    2384:	98000e26 	beq	r19,zero,23c0 <___vfprintf_internal_r+0x1d8>
    2388:	dc800e17 	ldw	r18,56(sp)
    238c:	dc400d17 	ldw	r17,52(sp)
    2390:	008001c4 	movi	r2,7
    2394:	94e5883a 	add	r18,r18,r19
    2398:	8c400044 	addi	r17,r17,1
    239c:	adc00015 	stw	r23,0(r21)
    23a0:	dc800e15 	stw	r18,56(sp)
    23a4:	acc00115 	stw	r19,4(r21)
    23a8:	dc400d15 	stw	r17,52(sp)
    23ac:	14428b16 	blt	r2,r17,2ddc <___vfprintf_internal_r+0xbf4>
    23b0:	ad400204 	addi	r21,r21,8
    23b4:	d9014b17 	ldw	r4,1324(sp)
    23b8:	24c9883a 	add	r4,r4,r19
    23bc:	d9014b15 	stw	r4,1324(sp)
    23c0:	802f883a 	mov	r23,r16
    23c4:	b8800007 	ldb	r2,0(r23)
    23c8:	10013c26 	beq	r2,zero,28bc <___vfprintf_internal_r+0x6d4>
    23cc:	bdc00044 	addi	r23,r23,1
    23d0:	d8000405 	stb	zero,16(sp)
    23d4:	b8c00007 	ldb	r3,0(r23)
    23d8:	04ffffc4 	movi	r19,-1
    23dc:	d8014c15 	stw	zero,1328(sp)
    23e0:	d8014a15 	stw	zero,1320(sp)
    23e4:	d8c14d15 	stw	r3,1332(sp)
    23e8:	bdc00044 	addi	r23,r23,1
    23ec:	d9414d17 	ldw	r5,1332(sp)
    23f0:	00801604 	movi	r2,88
    23f4:	28fff804 	addi	r3,r5,-32
    23f8:	10c06036 	bltu	r2,r3,257c <___vfprintf_internal_r+0x394>
    23fc:	18c5883a 	add	r2,r3,r3
    2400:	1085883a 	add	r2,r2,r2
    2404:	00c00034 	movhi	r3,0
    2408:	18c90604 	addi	r3,r3,9240
    240c:	10c5883a 	add	r2,r2,r3
    2410:	11000017 	ldw	r4,0(r2)
    2414:	2000683a 	jmp	r4
    2418:	0000338c 	andi	zero,zero,206
    241c:	0000257c 	xorhi	zero,zero,149
    2420:	0000257c 	xorhi	zero,zero,149
    2424:	00003378 	rdprs	zero,zero,205
    2428:	0000257c 	xorhi	zero,zero,149
    242c:	0000257c 	xorhi	zero,zero,149
    2430:	0000257c 	xorhi	zero,zero,149
    2434:	0000257c 	xorhi	zero,zero,149
    2438:	0000257c 	xorhi	zero,zero,149
    243c:	0000257c 	xorhi	zero,zero,149
    2440:	00003158 	cmpnei	zero,zero,197
    2444:	00003368 	cmpgeui	zero,zero,205
    2448:	0000257c 	xorhi	zero,zero,149
    244c:	00003170 	cmpltui	zero,zero,197
    2450:	00003404 	movi	zero,208
    2454:	0000257c 	xorhi	zero,zero,149
    2458:	000033f0 	cmpltui	zero,zero,207
    245c:	000033b8 	rdprs	zero,zero,206
    2460:	000033b8 	rdprs	zero,zero,206
    2464:	000033b8 	rdprs	zero,zero,206
    2468:	000033b8 	rdprs	zero,zero,206
    246c:	000033b8 	rdprs	zero,zero,206
    2470:	000033b8 	rdprs	zero,zero,206
    2474:	000033b8 	rdprs	zero,zero,206
    2478:	000033b8 	rdprs	zero,zero,206
    247c:	000033b8 	rdprs	zero,zero,206
    2480:	0000257c 	xorhi	zero,zero,149
    2484:	0000257c 	xorhi	zero,zero,149
    2488:	0000257c 	xorhi	zero,zero,149
    248c:	0000257c 	xorhi	zero,zero,149
    2490:	0000257c 	xorhi	zero,zero,149
    2494:	0000257c 	xorhi	zero,zero,149
    2498:	0000257c 	xorhi	zero,zero,149
    249c:	0000257c 	xorhi	zero,zero,149
    24a0:	0000257c 	xorhi	zero,zero,149
    24a4:	0000257c 	xorhi	zero,zero,149
    24a8:	00002bd4 	movui	zero,175
    24ac:	00003240 	call	324 <cmd_read+0x30>
    24b0:	0000257c 	xorhi	zero,zero,149
    24b4:	00003240 	call	324 <cmd_read+0x30>
    24b8:	0000257c 	xorhi	zero,zero,149
    24bc:	0000257c 	xorhi	zero,zero,149
    24c0:	0000257c 	xorhi	zero,zero,149
    24c4:	0000257c 	xorhi	zero,zero,149
    24c8:	000033a4 	muli	zero,zero,206
    24cc:	0000257c 	xorhi	zero,zero,149
    24d0:	0000257c 	xorhi	zero,zero,149
    24d4:	00002c88 	cmpgei	zero,zero,178
    24d8:	0000257c 	xorhi	zero,zero,149
    24dc:	0000257c 	xorhi	zero,zero,149
    24e0:	0000257c 	xorhi	zero,zero,149
    24e4:	0000257c 	xorhi	zero,zero,149
    24e8:	0000257c 	xorhi	zero,zero,149
    24ec:	00002cd4 	movui	zero,179
    24f0:	0000257c 	xorhi	zero,zero,149
    24f4:	0000257c 	xorhi	zero,zero,149
    24f8:	000032f4 	movhi	zero,203
    24fc:	0000257c 	xorhi	zero,zero,149
    2500:	0000257c 	xorhi	zero,zero,149
    2504:	0000257c 	xorhi	zero,zero,149
    2508:	0000257c 	xorhi	zero,zero,149
    250c:	0000257c 	xorhi	zero,zero,149
    2510:	0000257c 	xorhi	zero,zero,149
    2514:	0000257c 	xorhi	zero,zero,149
    2518:	0000257c 	xorhi	zero,zero,149
    251c:	0000257c 	xorhi	zero,zero,149
    2520:	0000257c 	xorhi	zero,zero,149
    2524:	000032c8 	cmpgei	zero,zero,203
    2528:	00002be0 	cmpeqi	zero,zero,175
    252c:	00003240 	call	324 <cmd_read+0x30>
    2530:	00003240 	call	324 <cmd_read+0x30>
    2534:	00003240 	call	324 <cmd_read+0x30>
    2538:	0000322c 	andhi	zero,zero,200
    253c:	00002be0 	cmpeqi	zero,zero,175
    2540:	0000257c 	xorhi	zero,zero,149
    2544:	0000257c 	xorhi	zero,zero,149
    2548:	000031b4 	movhi	zero,198
    254c:	0000257c 	xorhi	zero,zero,149
    2550:	00003184 	movi	zero,198
    2554:	00002c94 	movui	zero,178
    2558:	000031e4 	muli	zero,zero,199
    255c:	000031d0 	cmplti	zero,zero,199
    2560:	0000257c 	xorhi	zero,zero,149
    2564:	00003460 	cmpeqi	zero,zero,209
    2568:	0000257c 	xorhi	zero,zero,149
    256c:	00002ce0 	cmpeqi	zero,zero,179
    2570:	0000257c 	xorhi	zero,zero,149
    2574:	0000257c 	xorhi	zero,zero,149
    2578:	00003358 	cmpnei	zero,zero,205
    257c:	d9014d17 	ldw	r4,1332(sp)
    2580:	2000ce26 	beq	r4,zero,28bc <___vfprintf_internal_r+0x6d4>
    2584:	01400044 	movi	r5,1
    2588:	d9800f04 	addi	r6,sp,60
    258c:	d9c14015 	stw	r7,1280(sp)
    2590:	d9414515 	stw	r5,1300(sp)
    2594:	d9814115 	stw	r6,1284(sp)
    2598:	280f883a 	mov	r7,r5
    259c:	d9000f05 	stb	r4,60(sp)
    25a0:	d8000405 	stb	zero,16(sp)
    25a4:	d8014615 	stw	zero,1304(sp)
    25a8:	d8c14c17 	ldw	r3,1328(sp)
    25ac:	1880008c 	andi	r2,r3,2
    25b0:	1005003a 	cmpeq	r2,r2,zero
    25b4:	d8815015 	stw	r2,1344(sp)
    25b8:	1000031e 	bne	r2,zero,25c8 <___vfprintf_internal_r+0x3e0>
    25bc:	d9014517 	ldw	r4,1300(sp)
    25c0:	21000084 	addi	r4,r4,2
    25c4:	d9014515 	stw	r4,1300(sp)
    25c8:	d9414c17 	ldw	r5,1328(sp)
    25cc:	2940210c 	andi	r5,r5,132
    25d0:	d9414e15 	stw	r5,1336(sp)
    25d4:	28002d1e 	bne	r5,zero,268c <___vfprintf_internal_r+0x4a4>
    25d8:	d9814a17 	ldw	r6,1320(sp)
    25dc:	d8814517 	ldw	r2,1300(sp)
    25e0:	30a1c83a 	sub	r16,r6,r2
    25e4:	0400290e 	bge	zero,r16,268c <___vfprintf_internal_r+0x4a4>
    25e8:	00800404 	movi	r2,16
    25ec:	1404580e 	bge	r2,r16,3750 <___vfprintf_internal_r+0x1568>
    25f0:	dc800e17 	ldw	r18,56(sp)
    25f4:	dc400d17 	ldw	r17,52(sp)
    25f8:	1027883a 	mov	r19,r2
    25fc:	07000074 	movhi	fp,1
    2600:	e7094d84 	addi	fp,fp,9526
    2604:	050001c4 	movi	r20,7
    2608:	00000306 	br	2618 <___vfprintf_internal_r+0x430>
    260c:	843ffc04 	addi	r16,r16,-16
    2610:	ad400204 	addi	r21,r21,8
    2614:	9c00130e 	bge	r19,r16,2664 <___vfprintf_internal_r+0x47c>
    2618:	94800404 	addi	r18,r18,16
    261c:	8c400044 	addi	r17,r17,1
    2620:	af000015 	stw	fp,0(r21)
    2624:	acc00115 	stw	r19,4(r21)
    2628:	dc800e15 	stw	r18,56(sp)
    262c:	dc400d15 	stw	r17,52(sp)
    2630:	a47ff60e 	bge	r20,r17,260c <___vfprintf_internal_r+0x424>
    2634:	d9014f17 	ldw	r4,1340(sp)
    2638:	b00b883a 	mov	r5,r22
    263c:	d9800c04 	addi	r6,sp,48
    2640:	d9c15115 	stw	r7,1348(sp)
    2644:	00021900 	call	2190 <__sprint_r>
    2648:	d9c15117 	ldw	r7,1348(sp)
    264c:	10009e1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2650:	843ffc04 	addi	r16,r16,-16
    2654:	dc800e17 	ldw	r18,56(sp)
    2658:	dc400d17 	ldw	r17,52(sp)
    265c:	dd401904 	addi	r21,sp,100
    2660:	9c3fed16 	blt	r19,r16,2618 <___vfprintf_internal_r+0x430>
    2664:	9425883a 	add	r18,r18,r16
    2668:	8c400044 	addi	r17,r17,1
    266c:	008001c4 	movi	r2,7
    2670:	af000015 	stw	fp,0(r21)
    2674:	ac000115 	stw	r16,4(r21)
    2678:	dc800e15 	stw	r18,56(sp)
    267c:	dc400d15 	stw	r17,52(sp)
    2680:	1441f516 	blt	r2,r17,2e58 <___vfprintf_internal_r+0xc70>
    2684:	ad400204 	addi	r21,r21,8
    2688:	00000206 	br	2694 <___vfprintf_internal_r+0x4ac>
    268c:	dc800e17 	ldw	r18,56(sp)
    2690:	dc400d17 	ldw	r17,52(sp)
    2694:	d8800407 	ldb	r2,16(sp)
    2698:	10000b26 	beq	r2,zero,26c8 <___vfprintf_internal_r+0x4e0>
    269c:	00800044 	movi	r2,1
    26a0:	94800044 	addi	r18,r18,1
    26a4:	8c400044 	addi	r17,r17,1
    26a8:	a8800115 	stw	r2,4(r21)
    26ac:	d8c00404 	addi	r3,sp,16
    26b0:	008001c4 	movi	r2,7
    26b4:	a8c00015 	stw	r3,0(r21)
    26b8:	dc800e15 	stw	r18,56(sp)
    26bc:	dc400d15 	stw	r17,52(sp)
    26c0:	1441da16 	blt	r2,r17,2e2c <___vfprintf_internal_r+0xc44>
    26c4:	ad400204 	addi	r21,r21,8
    26c8:	d9015017 	ldw	r4,1344(sp)
    26cc:	20000b1e 	bne	r4,zero,26fc <___vfprintf_internal_r+0x514>
    26d0:	d8800444 	addi	r2,sp,17
    26d4:	94800084 	addi	r18,r18,2
    26d8:	8c400044 	addi	r17,r17,1
    26dc:	a8800015 	stw	r2,0(r21)
    26e0:	00c00084 	movi	r3,2
    26e4:	008001c4 	movi	r2,7
    26e8:	a8c00115 	stw	r3,4(r21)
    26ec:	dc800e15 	stw	r18,56(sp)
    26f0:	dc400d15 	stw	r17,52(sp)
    26f4:	1441c216 	blt	r2,r17,2e00 <___vfprintf_internal_r+0xc18>
    26f8:	ad400204 	addi	r21,r21,8
    26fc:	d9414e17 	ldw	r5,1336(sp)
    2700:	00802004 	movi	r2,128
    2704:	2880b126 	beq	r5,r2,29cc <___vfprintf_internal_r+0x7e4>
    2708:	d8c14617 	ldw	r3,1304(sp)
    270c:	19e1c83a 	sub	r16,r3,r7
    2710:	0400260e 	bge	zero,r16,27ac <___vfprintf_internal_r+0x5c4>
    2714:	00800404 	movi	r2,16
    2718:	1403c90e 	bge	r2,r16,3640 <___vfprintf_internal_r+0x1458>
    271c:	1027883a 	mov	r19,r2
    2720:	07000074 	movhi	fp,1
    2724:	e7094984 	addi	fp,fp,9510
    2728:	050001c4 	movi	r20,7
    272c:	00000306 	br	273c <___vfprintf_internal_r+0x554>
    2730:	843ffc04 	addi	r16,r16,-16
    2734:	ad400204 	addi	r21,r21,8
    2738:	9c00130e 	bge	r19,r16,2788 <___vfprintf_internal_r+0x5a0>
    273c:	94800404 	addi	r18,r18,16
    2740:	8c400044 	addi	r17,r17,1
    2744:	af000015 	stw	fp,0(r21)
    2748:	acc00115 	stw	r19,4(r21)
    274c:	dc800e15 	stw	r18,56(sp)
    2750:	dc400d15 	stw	r17,52(sp)
    2754:	a47ff60e 	bge	r20,r17,2730 <___vfprintf_internal_r+0x548>
    2758:	d9014f17 	ldw	r4,1340(sp)
    275c:	b00b883a 	mov	r5,r22
    2760:	d9800c04 	addi	r6,sp,48
    2764:	d9c15115 	stw	r7,1348(sp)
    2768:	00021900 	call	2190 <__sprint_r>
    276c:	d9c15117 	ldw	r7,1348(sp)
    2770:	1000551e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2774:	843ffc04 	addi	r16,r16,-16
    2778:	dc800e17 	ldw	r18,56(sp)
    277c:	dc400d17 	ldw	r17,52(sp)
    2780:	dd401904 	addi	r21,sp,100
    2784:	9c3fed16 	blt	r19,r16,273c <___vfprintf_internal_r+0x554>
    2788:	9425883a 	add	r18,r18,r16
    278c:	8c400044 	addi	r17,r17,1
    2790:	008001c4 	movi	r2,7
    2794:	af000015 	stw	fp,0(r21)
    2798:	ac000115 	stw	r16,4(r21)
    279c:	dc800e15 	stw	r18,56(sp)
    27a0:	dc400d15 	stw	r17,52(sp)
    27a4:	14418216 	blt	r2,r17,2db0 <___vfprintf_internal_r+0xbc8>
    27a8:	ad400204 	addi	r21,r21,8
    27ac:	d9014c17 	ldw	r4,1328(sp)
    27b0:	2080400c 	andi	r2,r4,256
    27b4:	10004a1e 	bne	r2,zero,28e0 <___vfprintf_internal_r+0x6f8>
    27b8:	d9414117 	ldw	r5,1284(sp)
    27bc:	91e5883a 	add	r18,r18,r7
    27c0:	8c400044 	addi	r17,r17,1
    27c4:	008001c4 	movi	r2,7
    27c8:	a9400015 	stw	r5,0(r21)
    27cc:	a9c00115 	stw	r7,4(r21)
    27d0:	dc800e15 	stw	r18,56(sp)
    27d4:	dc400d15 	stw	r17,52(sp)
    27d8:	14416716 	blt	r2,r17,2d78 <___vfprintf_internal_r+0xb90>
    27dc:	a8c00204 	addi	r3,r21,8
    27e0:	d9814c17 	ldw	r6,1328(sp)
    27e4:	3080010c 	andi	r2,r6,4
    27e8:	10002826 	beq	r2,zero,288c <___vfprintf_internal_r+0x6a4>
    27ec:	d8814a17 	ldw	r2,1320(sp)
    27f0:	d9014517 	ldw	r4,1300(sp)
    27f4:	1121c83a 	sub	r16,r2,r4
    27f8:	0400240e 	bge	zero,r16,288c <___vfprintf_internal_r+0x6a4>
    27fc:	00800404 	movi	r2,16
    2800:	14044f0e 	bge	r2,r16,3940 <___vfprintf_internal_r+0x1758>
    2804:	dc400d17 	ldw	r17,52(sp)
    2808:	1027883a 	mov	r19,r2
    280c:	07000074 	movhi	fp,1
    2810:	e7094d84 	addi	fp,fp,9526
    2814:	050001c4 	movi	r20,7
    2818:	00000306 	br	2828 <___vfprintf_internal_r+0x640>
    281c:	843ffc04 	addi	r16,r16,-16
    2820:	18c00204 	addi	r3,r3,8
    2824:	9c00110e 	bge	r19,r16,286c <___vfprintf_internal_r+0x684>
    2828:	94800404 	addi	r18,r18,16
    282c:	8c400044 	addi	r17,r17,1
    2830:	1f000015 	stw	fp,0(r3)
    2834:	1cc00115 	stw	r19,4(r3)
    2838:	dc800e15 	stw	r18,56(sp)
    283c:	dc400d15 	stw	r17,52(sp)
    2840:	a47ff60e 	bge	r20,r17,281c <___vfprintf_internal_r+0x634>
    2844:	d9014f17 	ldw	r4,1340(sp)
    2848:	b00b883a 	mov	r5,r22
    284c:	d9800c04 	addi	r6,sp,48
    2850:	00021900 	call	2190 <__sprint_r>
    2854:	10001c1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2858:	843ffc04 	addi	r16,r16,-16
    285c:	dc800e17 	ldw	r18,56(sp)
    2860:	dc400d17 	ldw	r17,52(sp)
    2864:	d8c01904 	addi	r3,sp,100
    2868:	9c3fef16 	blt	r19,r16,2828 <___vfprintf_internal_r+0x640>
    286c:	9425883a 	add	r18,r18,r16
    2870:	8c400044 	addi	r17,r17,1
    2874:	008001c4 	movi	r2,7
    2878:	1f000015 	stw	fp,0(r3)
    287c:	1c000115 	stw	r16,4(r3)
    2880:	dc800e15 	stw	r18,56(sp)
    2884:	dc400d15 	stw	r17,52(sp)
    2888:	1440cb16 	blt	r2,r17,2bb8 <___vfprintf_internal_r+0x9d0>
    288c:	d8814a17 	ldw	r2,1320(sp)
    2890:	d9414517 	ldw	r5,1300(sp)
    2894:	1140010e 	bge	r2,r5,289c <___vfprintf_internal_r+0x6b4>
    2898:	2805883a 	mov	r2,r5
    289c:	d9814b17 	ldw	r6,1324(sp)
    28a0:	308d883a 	add	r6,r6,r2
    28a4:	d9814b15 	stw	r6,1324(sp)
    28a8:	90013b1e 	bne	r18,zero,2d98 <___vfprintf_internal_r+0xbb0>
    28ac:	d9c14017 	ldw	r7,1280(sp)
    28b0:	dd401904 	addi	r21,sp,100
    28b4:	d8000d15 	stw	zero,52(sp)
    28b8:	003ea706 	br	2358 <___vfprintf_internal_r+0x170>
    28bc:	d8800e17 	ldw	r2,56(sp)
    28c0:	10053f1e 	bne	r2,zero,3dc0 <___vfprintf_internal_r+0x1bd8>
    28c4:	d8000d15 	stw	zero,52(sp)
    28c8:	b080030b 	ldhu	r2,12(r22)
    28cc:	1080100c 	andi	r2,r2,64
    28d0:	103e8726 	beq	r2,zero,22f0 <___vfprintf_internal_r+0x108>
    28d4:	00bfffc4 	movi	r2,-1
    28d8:	d8814b15 	stw	r2,1324(sp)
    28dc:	003e8406 	br	22f0 <___vfprintf_internal_r+0x108>
    28e0:	d9814d17 	ldw	r6,1332(sp)
    28e4:	00801944 	movi	r2,101
    28e8:	11806e16 	blt	r2,r6,2aa4 <___vfprintf_internal_r+0x8bc>
    28ec:	d9414717 	ldw	r5,1308(sp)
    28f0:	00c00044 	movi	r3,1
    28f4:	1943430e 	bge	r3,r5,3604 <___vfprintf_internal_r+0x141c>
    28f8:	d8814117 	ldw	r2,1284(sp)
    28fc:	94800044 	addi	r18,r18,1
    2900:	8c400044 	addi	r17,r17,1
    2904:	a8800015 	stw	r2,0(r21)
    2908:	008001c4 	movi	r2,7
    290c:	a8c00115 	stw	r3,4(r21)
    2910:	dc800e15 	stw	r18,56(sp)
    2914:	dc400d15 	stw	r17,52(sp)
    2918:	1441ca16 	blt	r2,r17,3044 <___vfprintf_internal_r+0xe5c>
    291c:	a8c00204 	addi	r3,r21,8
    2920:	d9014917 	ldw	r4,1316(sp)
    2924:	00800044 	movi	r2,1
    2928:	94800044 	addi	r18,r18,1
    292c:	8c400044 	addi	r17,r17,1
    2930:	18800115 	stw	r2,4(r3)
    2934:	008001c4 	movi	r2,7
    2938:	19000015 	stw	r4,0(r3)
    293c:	dc800e15 	stw	r18,56(sp)
    2940:	dc400d15 	stw	r17,52(sp)
    2944:	1441b616 	blt	r2,r17,3020 <___vfprintf_internal_r+0xe38>
    2948:	1cc00204 	addi	r19,r3,8
    294c:	d9014217 	ldw	r4,1288(sp)
    2950:	d9414317 	ldw	r5,1292(sp)
    2954:	000d883a 	mov	r6,zero
    2958:	000f883a 	mov	r7,zero
    295c:	000e7c40 	call	e7c4 <__nedf2>
    2960:	10017426 	beq	r2,zero,2f34 <___vfprintf_internal_r+0xd4c>
    2964:	d9414717 	ldw	r5,1308(sp)
    2968:	d9814117 	ldw	r6,1284(sp)
    296c:	8c400044 	addi	r17,r17,1
    2970:	2c85883a 	add	r2,r5,r18
    2974:	14bfffc4 	addi	r18,r2,-1
    2978:	28bfffc4 	addi	r2,r5,-1
    297c:	30c00044 	addi	r3,r6,1
    2980:	98800115 	stw	r2,4(r19)
    2984:	008001c4 	movi	r2,7
    2988:	98c00015 	stw	r3,0(r19)
    298c:	dc800e15 	stw	r18,56(sp)
    2990:	dc400d15 	stw	r17,52(sp)
    2994:	14418e16 	blt	r2,r17,2fd0 <___vfprintf_internal_r+0xde8>
    2998:	9cc00204 	addi	r19,r19,8
    299c:	d9414817 	ldw	r5,1312(sp)
    29a0:	d8800804 	addi	r2,sp,32
    29a4:	8c400044 	addi	r17,r17,1
    29a8:	9165883a 	add	r18,r18,r5
    29ac:	98800015 	stw	r2,0(r19)
    29b0:	008001c4 	movi	r2,7
    29b4:	99400115 	stw	r5,4(r19)
    29b8:	dc800e15 	stw	r18,56(sp)
    29bc:	dc400d15 	stw	r17,52(sp)
    29c0:	1440ed16 	blt	r2,r17,2d78 <___vfprintf_internal_r+0xb90>
    29c4:	98c00204 	addi	r3,r19,8
    29c8:	003f8506 	br	27e0 <___vfprintf_internal_r+0x5f8>
    29cc:	d9814a17 	ldw	r6,1320(sp)
    29d0:	d8814517 	ldw	r2,1300(sp)
    29d4:	30a1c83a 	sub	r16,r6,r2
    29d8:	043f4b0e 	bge	zero,r16,2708 <___vfprintf_internal_r+0x520>
    29dc:	00800404 	movi	r2,16
    29e0:	1404340e 	bge	r2,r16,3ab4 <___vfprintf_internal_r+0x18cc>
    29e4:	1027883a 	mov	r19,r2
    29e8:	07000074 	movhi	fp,1
    29ec:	e7094984 	addi	fp,fp,9510
    29f0:	050001c4 	movi	r20,7
    29f4:	00000306 	br	2a04 <___vfprintf_internal_r+0x81c>
    29f8:	843ffc04 	addi	r16,r16,-16
    29fc:	ad400204 	addi	r21,r21,8
    2a00:	9c00130e 	bge	r19,r16,2a50 <___vfprintf_internal_r+0x868>
    2a04:	94800404 	addi	r18,r18,16
    2a08:	8c400044 	addi	r17,r17,1
    2a0c:	af000015 	stw	fp,0(r21)
    2a10:	acc00115 	stw	r19,4(r21)
    2a14:	dc800e15 	stw	r18,56(sp)
    2a18:	dc400d15 	stw	r17,52(sp)
    2a1c:	a47ff60e 	bge	r20,r17,29f8 <___vfprintf_internal_r+0x810>
    2a20:	d9014f17 	ldw	r4,1340(sp)
    2a24:	b00b883a 	mov	r5,r22
    2a28:	d9800c04 	addi	r6,sp,48
    2a2c:	d9c15115 	stw	r7,1348(sp)
    2a30:	00021900 	call	2190 <__sprint_r>
    2a34:	d9c15117 	ldw	r7,1348(sp)
    2a38:	103fa31e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2a3c:	843ffc04 	addi	r16,r16,-16
    2a40:	dc800e17 	ldw	r18,56(sp)
    2a44:	dc400d17 	ldw	r17,52(sp)
    2a48:	dd401904 	addi	r21,sp,100
    2a4c:	9c3fed16 	blt	r19,r16,2a04 <___vfprintf_internal_r+0x81c>
    2a50:	9425883a 	add	r18,r18,r16
    2a54:	8c400044 	addi	r17,r17,1
    2a58:	008001c4 	movi	r2,7
    2a5c:	af000015 	stw	fp,0(r21)
    2a60:	ac000115 	stw	r16,4(r21)
    2a64:	dc800e15 	stw	r18,56(sp)
    2a68:	dc400d15 	stw	r17,52(sp)
    2a6c:	14416116 	blt	r2,r17,2ff4 <___vfprintf_internal_r+0xe0c>
    2a70:	ad400204 	addi	r21,r21,8
    2a74:	003f2406 	br	2708 <___vfprintf_internal_r+0x520>
    2a78:	d9014f17 	ldw	r4,1340(sp)
    2a7c:	0000b340 	call	b34 <__sinit>
    2a80:	d9c15117 	ldw	r7,1348(sp)
    2a84:	003def06 	br	2244 <___vfprintf_internal_r+0x5c>
    2a88:	d9014f17 	ldw	r4,1340(sp)
    2a8c:	b00b883a 	mov	r5,r22
    2a90:	d9c15115 	stw	r7,1348(sp)
    2a94:	00058b00 	call	58b0 <__swsetup_r>
    2a98:	d9c15117 	ldw	r7,1348(sp)
    2a9c:	103dee26 	beq	r2,zero,2258 <___vfprintf_internal_r+0x70>
    2aa0:	003f8c06 	br	28d4 <___vfprintf_internal_r+0x6ec>
    2aa4:	d9014217 	ldw	r4,1288(sp)
    2aa8:	d9414317 	ldw	r5,1292(sp)
    2aac:	000d883a 	mov	r6,zero
    2ab0:	000f883a 	mov	r7,zero
    2ab4:	000e73c0 	call	e73c <__eqdf2>
    2ab8:	1000f21e 	bne	r2,zero,2e84 <___vfprintf_internal_r+0xc9c>
    2abc:	00800074 	movhi	r2,1
    2ac0:	10894904 	addi	r2,r2,9508
    2ac4:	94800044 	addi	r18,r18,1
    2ac8:	8c400044 	addi	r17,r17,1
    2acc:	a8800015 	stw	r2,0(r21)
    2ad0:	00c00044 	movi	r3,1
    2ad4:	008001c4 	movi	r2,7
    2ad8:	a8c00115 	stw	r3,4(r21)
    2adc:	dc800e15 	stw	r18,56(sp)
    2ae0:	dc400d15 	stw	r17,52(sp)
    2ae4:	1442fa16 	blt	r2,r17,36d0 <___vfprintf_internal_r+0x14e8>
    2ae8:	a8c00204 	addi	r3,r21,8
    2aec:	d8800517 	ldw	r2,20(sp)
    2af0:	d9014717 	ldw	r4,1308(sp)
    2af4:	11015c0e 	bge	r2,r4,3068 <___vfprintf_internal_r+0xe80>
    2af8:	dc400d17 	ldw	r17,52(sp)
    2afc:	d9814917 	ldw	r6,1316(sp)
    2b00:	00800044 	movi	r2,1
    2b04:	94800044 	addi	r18,r18,1
    2b08:	8c400044 	addi	r17,r17,1
    2b0c:	18800115 	stw	r2,4(r3)
    2b10:	008001c4 	movi	r2,7
    2b14:	19800015 	stw	r6,0(r3)
    2b18:	dc800e15 	stw	r18,56(sp)
    2b1c:	dc400d15 	stw	r17,52(sp)
    2b20:	14431016 	blt	r2,r17,3764 <___vfprintf_internal_r+0x157c>
    2b24:	18c00204 	addi	r3,r3,8
    2b28:	d8814717 	ldw	r2,1308(sp)
    2b2c:	143fffc4 	addi	r16,r2,-1
    2b30:	043f2b0e 	bge	zero,r16,27e0 <___vfprintf_internal_r+0x5f8>
    2b34:	00800404 	movi	r2,16
    2b38:	1402a20e 	bge	r2,r16,35c4 <___vfprintf_internal_r+0x13dc>
    2b3c:	dc400d17 	ldw	r17,52(sp)
    2b40:	1027883a 	mov	r19,r2
    2b44:	07000074 	movhi	fp,1
    2b48:	e7094984 	addi	fp,fp,9510
    2b4c:	050001c4 	movi	r20,7
    2b50:	00000306 	br	2b60 <___vfprintf_internal_r+0x978>
    2b54:	18c00204 	addi	r3,r3,8
    2b58:	843ffc04 	addi	r16,r16,-16
    2b5c:	9c029c0e 	bge	r19,r16,35d0 <___vfprintf_internal_r+0x13e8>
    2b60:	94800404 	addi	r18,r18,16
    2b64:	8c400044 	addi	r17,r17,1
    2b68:	1f000015 	stw	fp,0(r3)
    2b6c:	1cc00115 	stw	r19,4(r3)
    2b70:	dc800e15 	stw	r18,56(sp)
    2b74:	dc400d15 	stw	r17,52(sp)
    2b78:	a47ff60e 	bge	r20,r17,2b54 <___vfprintf_internal_r+0x96c>
    2b7c:	d9014f17 	ldw	r4,1340(sp)
    2b80:	b00b883a 	mov	r5,r22
    2b84:	d9800c04 	addi	r6,sp,48
    2b88:	00021900 	call	2190 <__sprint_r>
    2b8c:	103f4e1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2b90:	dc800e17 	ldw	r18,56(sp)
    2b94:	dc400d17 	ldw	r17,52(sp)
    2b98:	d8c01904 	addi	r3,sp,100
    2b9c:	003fee06 	br	2b58 <___vfprintf_internal_r+0x970>
    2ba0:	d8802c0b 	ldhu	r2,176(sp)
    2ba4:	00ffffc4 	movi	r3,-1
    2ba8:	d8c14b15 	stw	r3,1324(sp)
    2bac:	1080100c 	andi	r2,r2,64
    2bb0:	103dcc1e 	bne	r2,zero,22e4 <___vfprintf_internal_r+0xfc>
    2bb4:	003dce06 	br	22f0 <___vfprintf_internal_r+0x108>
    2bb8:	d9014f17 	ldw	r4,1340(sp)
    2bbc:	b00b883a 	mov	r5,r22
    2bc0:	d9800c04 	addi	r6,sp,48
    2bc4:	00021900 	call	2190 <__sprint_r>
    2bc8:	103f3f1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2bcc:	dc800e17 	ldw	r18,56(sp)
    2bd0:	003f2e06 	br	288c <___vfprintf_internal_r+0x6a4>
    2bd4:	d9414c17 	ldw	r5,1328(sp)
    2bd8:	29400414 	ori	r5,r5,16
    2bdc:	d9414c15 	stw	r5,1328(sp)
    2be0:	d9814c17 	ldw	r6,1328(sp)
    2be4:	3080080c 	andi	r2,r6,32
    2be8:	10014f1e 	bne	r2,zero,3128 <___vfprintf_internal_r+0xf40>
    2bec:	d8c14c17 	ldw	r3,1328(sp)
    2bf0:	1880040c 	andi	r2,r3,16
    2bf4:	1002ea1e 	bne	r2,zero,37a0 <___vfprintf_internal_r+0x15b8>
    2bf8:	d9014c17 	ldw	r4,1328(sp)
    2bfc:	2080100c 	andi	r2,r4,64
    2c00:	1002e726 	beq	r2,zero,37a0 <___vfprintf_internal_r+0x15b8>
    2c04:	3880000f 	ldh	r2,0(r7)
    2c08:	39c00104 	addi	r7,r7,4
    2c0c:	d9c14015 	stw	r7,1280(sp)
    2c10:	1023d7fa 	srai	r17,r2,31
    2c14:	1021883a 	mov	r16,r2
    2c18:	88037216 	blt	r17,zero,39e4 <___vfprintf_internal_r+0x17fc>
    2c1c:	01000044 	movi	r4,1
    2c20:	98000416 	blt	r19,zero,2c34 <___vfprintf_internal_r+0xa4c>
    2c24:	d8c14c17 	ldw	r3,1328(sp)
    2c28:	00bfdfc4 	movi	r2,-129
    2c2c:	1886703a 	and	r3,r3,r2
    2c30:	d8c14c15 	stw	r3,1328(sp)
    2c34:	8444b03a 	or	r2,r16,r17
    2c38:	1002261e 	bne	r2,zero,34d4 <___vfprintf_internal_r+0x12ec>
    2c3c:	9802251e 	bne	r19,zero,34d4 <___vfprintf_internal_r+0x12ec>
    2c40:	20803fcc 	andi	r2,r4,255
    2c44:	10029b26 	beq	r2,zero,36b4 <___vfprintf_internal_r+0x14cc>
    2c48:	d8c01904 	addi	r3,sp,100
    2c4c:	dd000f04 	addi	r20,sp,60
    2c50:	d8c14115 	stw	r3,1284(sp)
    2c54:	d8c14117 	ldw	r3,1284(sp)
    2c58:	dcc14515 	stw	r19,1300(sp)
    2c5c:	a0c5c83a 	sub	r2,r20,r3
    2c60:	11c00a04 	addi	r7,r2,40
    2c64:	99c0010e 	bge	r19,r7,2c6c <___vfprintf_internal_r+0xa84>
    2c68:	d9c14515 	stw	r7,1300(sp)
    2c6c:	dcc14615 	stw	r19,1304(sp)
    2c70:	d8800407 	ldb	r2,16(sp)
    2c74:	103e4c26 	beq	r2,zero,25a8 <___vfprintf_internal_r+0x3c0>
    2c78:	d8814517 	ldw	r2,1300(sp)
    2c7c:	10800044 	addi	r2,r2,1
    2c80:	d8814515 	stw	r2,1300(sp)
    2c84:	003e4806 	br	25a8 <___vfprintf_internal_r+0x3c0>
    2c88:	d9814c17 	ldw	r6,1328(sp)
    2c8c:	31800414 	ori	r6,r6,16
    2c90:	d9814c15 	stw	r6,1328(sp)
    2c94:	d8c14c17 	ldw	r3,1328(sp)
    2c98:	1880080c 	andi	r2,r3,32
    2c9c:	1001271e 	bne	r2,zero,313c <___vfprintf_internal_r+0xf54>
    2ca0:	d9414c17 	ldw	r5,1328(sp)
    2ca4:	2880040c 	andi	r2,r5,16
    2ca8:	1002b61e 	bne	r2,zero,3784 <___vfprintf_internal_r+0x159c>
    2cac:	d9814c17 	ldw	r6,1328(sp)
    2cb0:	3080100c 	andi	r2,r6,64
    2cb4:	1002b326 	beq	r2,zero,3784 <___vfprintf_internal_r+0x159c>
    2cb8:	3c00000b 	ldhu	r16,0(r7)
    2cbc:	0009883a 	mov	r4,zero
    2cc0:	39c00104 	addi	r7,r7,4
    2cc4:	0023883a 	mov	r17,zero
    2cc8:	d9c14015 	stw	r7,1280(sp)
    2ccc:	d8000405 	stb	zero,16(sp)
    2cd0:	003fd306 	br	2c20 <___vfprintf_internal_r+0xa38>
    2cd4:	d9014c17 	ldw	r4,1328(sp)
    2cd8:	21000414 	ori	r4,r4,16
    2cdc:	d9014c15 	stw	r4,1328(sp)
    2ce0:	d9414c17 	ldw	r5,1328(sp)
    2ce4:	2880080c 	andi	r2,r5,32
    2ce8:	1001081e 	bne	r2,zero,310c <___vfprintf_internal_r+0xf24>
    2cec:	d8c14c17 	ldw	r3,1328(sp)
    2cf0:	1880040c 	andi	r2,r3,16
    2cf4:	1002b01e 	bne	r2,zero,37b8 <___vfprintf_internal_r+0x15d0>
    2cf8:	d9014c17 	ldw	r4,1328(sp)
    2cfc:	2080100c 	andi	r2,r4,64
    2d00:	1002ad26 	beq	r2,zero,37b8 <___vfprintf_internal_r+0x15d0>
    2d04:	3c00000b 	ldhu	r16,0(r7)
    2d08:	01000044 	movi	r4,1
    2d0c:	39c00104 	addi	r7,r7,4
    2d10:	0023883a 	mov	r17,zero
    2d14:	d9c14015 	stw	r7,1280(sp)
    2d18:	d8000405 	stb	zero,16(sp)
    2d1c:	003fc006 	br	2c20 <___vfprintf_internal_r+0xa38>
    2d20:	d9014f17 	ldw	r4,1340(sp)
    2d24:	b00b883a 	mov	r5,r22
    2d28:	d9800c04 	addi	r6,sp,48
    2d2c:	00021900 	call	2190 <__sprint_r>
    2d30:	103ee51e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2d34:	dc800e17 	ldw	r18,56(sp)
    2d38:	d8c01904 	addi	r3,sp,100
    2d3c:	d9814c17 	ldw	r6,1328(sp)
    2d40:	3080004c 	andi	r2,r6,1
    2d44:	1005003a 	cmpeq	r2,r2,zero
    2d48:	103ea51e 	bne	r2,zero,27e0 <___vfprintf_internal_r+0x5f8>
    2d4c:	00800044 	movi	r2,1
    2d50:	dc400d17 	ldw	r17,52(sp)
    2d54:	18800115 	stw	r2,4(r3)
    2d58:	d8814917 	ldw	r2,1316(sp)
    2d5c:	94800044 	addi	r18,r18,1
    2d60:	8c400044 	addi	r17,r17,1
    2d64:	18800015 	stw	r2,0(r3)
    2d68:	008001c4 	movi	r2,7
    2d6c:	dc800e15 	stw	r18,56(sp)
    2d70:	dc400d15 	stw	r17,52(sp)
    2d74:	14421e0e 	bge	r2,r17,35f0 <___vfprintf_internal_r+0x1408>
    2d78:	d9014f17 	ldw	r4,1340(sp)
    2d7c:	b00b883a 	mov	r5,r22
    2d80:	d9800c04 	addi	r6,sp,48
    2d84:	00021900 	call	2190 <__sprint_r>
    2d88:	103ecf1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2d8c:	dc800e17 	ldw	r18,56(sp)
    2d90:	d8c01904 	addi	r3,sp,100
    2d94:	003e9206 	br	27e0 <___vfprintf_internal_r+0x5f8>
    2d98:	d9014f17 	ldw	r4,1340(sp)
    2d9c:	b00b883a 	mov	r5,r22
    2da0:	d9800c04 	addi	r6,sp,48
    2da4:	00021900 	call	2190 <__sprint_r>
    2da8:	103ec026 	beq	r2,zero,28ac <___vfprintf_internal_r+0x6c4>
    2dac:	003ec606 	br	28c8 <___vfprintf_internal_r+0x6e0>
    2db0:	d9014f17 	ldw	r4,1340(sp)
    2db4:	b00b883a 	mov	r5,r22
    2db8:	d9800c04 	addi	r6,sp,48
    2dbc:	d9c15115 	stw	r7,1348(sp)
    2dc0:	00021900 	call	2190 <__sprint_r>
    2dc4:	d9c15117 	ldw	r7,1348(sp)
    2dc8:	103ebf1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2dcc:	dc800e17 	ldw	r18,56(sp)
    2dd0:	dc400d17 	ldw	r17,52(sp)
    2dd4:	dd401904 	addi	r21,sp,100
    2dd8:	003e7406 	br	27ac <___vfprintf_internal_r+0x5c4>
    2ddc:	d9014f17 	ldw	r4,1340(sp)
    2de0:	b00b883a 	mov	r5,r22
    2de4:	d9800c04 	addi	r6,sp,48
    2de8:	d9c15115 	stw	r7,1348(sp)
    2dec:	00021900 	call	2190 <__sprint_r>
    2df0:	d9c15117 	ldw	r7,1348(sp)
    2df4:	103eb41e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2df8:	dd401904 	addi	r21,sp,100
    2dfc:	003d6d06 	br	23b4 <___vfprintf_internal_r+0x1cc>
    2e00:	d9014f17 	ldw	r4,1340(sp)
    2e04:	b00b883a 	mov	r5,r22
    2e08:	d9800c04 	addi	r6,sp,48
    2e0c:	d9c15115 	stw	r7,1348(sp)
    2e10:	00021900 	call	2190 <__sprint_r>
    2e14:	d9c15117 	ldw	r7,1348(sp)
    2e18:	103eab1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2e1c:	dc800e17 	ldw	r18,56(sp)
    2e20:	dc400d17 	ldw	r17,52(sp)
    2e24:	dd401904 	addi	r21,sp,100
    2e28:	003e3406 	br	26fc <___vfprintf_internal_r+0x514>
    2e2c:	d9014f17 	ldw	r4,1340(sp)
    2e30:	b00b883a 	mov	r5,r22
    2e34:	d9800c04 	addi	r6,sp,48
    2e38:	d9c15115 	stw	r7,1348(sp)
    2e3c:	00021900 	call	2190 <__sprint_r>
    2e40:	d9c15117 	ldw	r7,1348(sp)
    2e44:	103ea01e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2e48:	dc800e17 	ldw	r18,56(sp)
    2e4c:	dc400d17 	ldw	r17,52(sp)
    2e50:	dd401904 	addi	r21,sp,100
    2e54:	003e1c06 	br	26c8 <___vfprintf_internal_r+0x4e0>
    2e58:	d9014f17 	ldw	r4,1340(sp)
    2e5c:	b00b883a 	mov	r5,r22
    2e60:	d9800c04 	addi	r6,sp,48
    2e64:	d9c15115 	stw	r7,1348(sp)
    2e68:	00021900 	call	2190 <__sprint_r>
    2e6c:	d9c15117 	ldw	r7,1348(sp)
    2e70:	103e951e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2e74:	dc800e17 	ldw	r18,56(sp)
    2e78:	dc400d17 	ldw	r17,52(sp)
    2e7c:	dd401904 	addi	r21,sp,100
    2e80:	003e0406 	br	2694 <___vfprintf_internal_r+0x4ac>
    2e84:	d9000517 	ldw	r4,20(sp)
    2e88:	0102520e 	bge	zero,r4,37d4 <___vfprintf_internal_r+0x15ec>
    2e8c:	d9814717 	ldw	r6,1308(sp)
    2e90:	21807a16 	blt	r4,r6,307c <___vfprintf_internal_r+0xe94>
    2e94:	d8814117 	ldw	r2,1284(sp)
    2e98:	91a5883a 	add	r18,r18,r6
    2e9c:	8c400044 	addi	r17,r17,1
    2ea0:	a8800015 	stw	r2,0(r21)
    2ea4:	008001c4 	movi	r2,7
    2ea8:	a9800115 	stw	r6,4(r21)
    2eac:	dc800e15 	stw	r18,56(sp)
    2eb0:	dc400d15 	stw	r17,52(sp)
    2eb4:	1442f616 	blt	r2,r17,3a90 <___vfprintf_internal_r+0x18a8>
    2eb8:	a8c00204 	addi	r3,r21,8
    2ebc:	d9414717 	ldw	r5,1308(sp)
    2ec0:	2161c83a 	sub	r16,r4,r5
    2ec4:	043f9d0e 	bge	zero,r16,2d3c <___vfprintf_internal_r+0xb54>
    2ec8:	00800404 	movi	r2,16
    2ecc:	1402130e 	bge	r2,r16,371c <___vfprintf_internal_r+0x1534>
    2ed0:	dc400d17 	ldw	r17,52(sp)
    2ed4:	1027883a 	mov	r19,r2
    2ed8:	07000074 	movhi	fp,1
    2edc:	e7094984 	addi	fp,fp,9510
    2ee0:	050001c4 	movi	r20,7
    2ee4:	00000306 	br	2ef4 <___vfprintf_internal_r+0xd0c>
    2ee8:	18c00204 	addi	r3,r3,8
    2eec:	843ffc04 	addi	r16,r16,-16
    2ef0:	9c020d0e 	bge	r19,r16,3728 <___vfprintf_internal_r+0x1540>
    2ef4:	94800404 	addi	r18,r18,16
    2ef8:	8c400044 	addi	r17,r17,1
    2efc:	1f000015 	stw	fp,0(r3)
    2f00:	1cc00115 	stw	r19,4(r3)
    2f04:	dc800e15 	stw	r18,56(sp)
    2f08:	dc400d15 	stw	r17,52(sp)
    2f0c:	a47ff60e 	bge	r20,r17,2ee8 <___vfprintf_internal_r+0xd00>
    2f10:	d9014f17 	ldw	r4,1340(sp)
    2f14:	b00b883a 	mov	r5,r22
    2f18:	d9800c04 	addi	r6,sp,48
    2f1c:	00021900 	call	2190 <__sprint_r>
    2f20:	103e691e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2f24:	dc800e17 	ldw	r18,56(sp)
    2f28:	dc400d17 	ldw	r17,52(sp)
    2f2c:	d8c01904 	addi	r3,sp,100
    2f30:	003fee06 	br	2eec <___vfprintf_internal_r+0xd04>
    2f34:	d8814717 	ldw	r2,1308(sp)
    2f38:	143fffc4 	addi	r16,r2,-1
    2f3c:	043e970e 	bge	zero,r16,299c <___vfprintf_internal_r+0x7b4>
    2f40:	00800404 	movi	r2,16
    2f44:	1400180e 	bge	r2,r16,2fa8 <___vfprintf_internal_r+0xdc0>
    2f48:	1029883a 	mov	r20,r2
    2f4c:	07000074 	movhi	fp,1
    2f50:	e7094984 	addi	fp,fp,9510
    2f54:	054001c4 	movi	r21,7
    2f58:	00000306 	br	2f68 <___vfprintf_internal_r+0xd80>
    2f5c:	9cc00204 	addi	r19,r19,8
    2f60:	843ffc04 	addi	r16,r16,-16
    2f64:	a400120e 	bge	r20,r16,2fb0 <___vfprintf_internal_r+0xdc8>
    2f68:	94800404 	addi	r18,r18,16
    2f6c:	8c400044 	addi	r17,r17,1
    2f70:	9f000015 	stw	fp,0(r19)
    2f74:	9d000115 	stw	r20,4(r19)
    2f78:	dc800e15 	stw	r18,56(sp)
    2f7c:	dc400d15 	stw	r17,52(sp)
    2f80:	ac7ff60e 	bge	r21,r17,2f5c <___vfprintf_internal_r+0xd74>
    2f84:	d9014f17 	ldw	r4,1340(sp)
    2f88:	b00b883a 	mov	r5,r22
    2f8c:	d9800c04 	addi	r6,sp,48
    2f90:	00021900 	call	2190 <__sprint_r>
    2f94:	103e4c1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2f98:	dc800e17 	ldw	r18,56(sp)
    2f9c:	dc400d17 	ldw	r17,52(sp)
    2fa0:	dcc01904 	addi	r19,sp,100
    2fa4:	003fee06 	br	2f60 <___vfprintf_internal_r+0xd78>
    2fa8:	07000074 	movhi	fp,1
    2fac:	e7094984 	addi	fp,fp,9510
    2fb0:	9425883a 	add	r18,r18,r16
    2fb4:	8c400044 	addi	r17,r17,1
    2fb8:	008001c4 	movi	r2,7
    2fbc:	9f000015 	stw	fp,0(r19)
    2fc0:	9c000115 	stw	r16,4(r19)
    2fc4:	dc800e15 	stw	r18,56(sp)
    2fc8:	dc400d15 	stw	r17,52(sp)
    2fcc:	147e720e 	bge	r2,r17,2998 <___vfprintf_internal_r+0x7b0>
    2fd0:	d9014f17 	ldw	r4,1340(sp)
    2fd4:	b00b883a 	mov	r5,r22
    2fd8:	d9800c04 	addi	r6,sp,48
    2fdc:	00021900 	call	2190 <__sprint_r>
    2fe0:	103e391e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    2fe4:	dc800e17 	ldw	r18,56(sp)
    2fe8:	dc400d17 	ldw	r17,52(sp)
    2fec:	dcc01904 	addi	r19,sp,100
    2ff0:	003e6a06 	br	299c <___vfprintf_internal_r+0x7b4>
    2ff4:	d9014f17 	ldw	r4,1340(sp)
    2ff8:	b00b883a 	mov	r5,r22
    2ffc:	d9800c04 	addi	r6,sp,48
    3000:	d9c15115 	stw	r7,1348(sp)
    3004:	00021900 	call	2190 <__sprint_r>
    3008:	d9c15117 	ldw	r7,1348(sp)
    300c:	103e2e1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3010:	dc800e17 	ldw	r18,56(sp)
    3014:	dc400d17 	ldw	r17,52(sp)
    3018:	dd401904 	addi	r21,sp,100
    301c:	003dba06 	br	2708 <___vfprintf_internal_r+0x520>
    3020:	d9014f17 	ldw	r4,1340(sp)
    3024:	b00b883a 	mov	r5,r22
    3028:	d9800c04 	addi	r6,sp,48
    302c:	00021900 	call	2190 <__sprint_r>
    3030:	103e251e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3034:	dc800e17 	ldw	r18,56(sp)
    3038:	dc400d17 	ldw	r17,52(sp)
    303c:	dcc01904 	addi	r19,sp,100
    3040:	003e4206 	br	294c <___vfprintf_internal_r+0x764>
    3044:	d9014f17 	ldw	r4,1340(sp)
    3048:	b00b883a 	mov	r5,r22
    304c:	d9800c04 	addi	r6,sp,48
    3050:	00021900 	call	2190 <__sprint_r>
    3054:	103e1c1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3058:	dc800e17 	ldw	r18,56(sp)
    305c:	dc400d17 	ldw	r17,52(sp)
    3060:	d8c01904 	addi	r3,sp,100
    3064:	003e2e06 	br	2920 <___vfprintf_internal_r+0x738>
    3068:	d9414c17 	ldw	r5,1328(sp)
    306c:	2880004c 	andi	r2,r5,1
    3070:	1005003a 	cmpeq	r2,r2,zero
    3074:	103dda1e 	bne	r2,zero,27e0 <___vfprintf_internal_r+0x5f8>
    3078:	003e9f06 	br	2af8 <___vfprintf_internal_r+0x910>
    307c:	d8c14117 	ldw	r3,1284(sp)
    3080:	9125883a 	add	r18,r18,r4
    3084:	8c400044 	addi	r17,r17,1
    3088:	008001c4 	movi	r2,7
    308c:	a8c00015 	stw	r3,0(r21)
    3090:	a9000115 	stw	r4,4(r21)
    3094:	dc800e15 	stw	r18,56(sp)
    3098:	dc400d15 	stw	r17,52(sp)
    309c:	14426616 	blt	r2,r17,3a38 <___vfprintf_internal_r+0x1850>
    30a0:	a8c00204 	addi	r3,r21,8
    30a4:	d9414917 	ldw	r5,1316(sp)
    30a8:	00800044 	movi	r2,1
    30ac:	94800044 	addi	r18,r18,1
    30b0:	8c400044 	addi	r17,r17,1
    30b4:	18800115 	stw	r2,4(r3)
    30b8:	008001c4 	movi	r2,7
    30bc:	19400015 	stw	r5,0(r3)
    30c0:	dc800e15 	stw	r18,56(sp)
    30c4:	dc400d15 	stw	r17,52(sp)
    30c8:	2021883a 	mov	r16,r4
    30cc:	14425016 	blt	r2,r17,3a10 <___vfprintf_internal_r+0x1828>
    30d0:	19400204 	addi	r5,r3,8
    30d4:	d9814717 	ldw	r6,1308(sp)
    30d8:	8c400044 	addi	r17,r17,1
    30dc:	dc400d15 	stw	r17,52(sp)
    30e0:	3107c83a 	sub	r3,r6,r4
    30e4:	d9014117 	ldw	r4,1284(sp)
    30e8:	90e5883a 	add	r18,r18,r3
    30ec:	28c00115 	stw	r3,4(r5)
    30f0:	8105883a 	add	r2,r16,r4
    30f4:	28800015 	stw	r2,0(r5)
    30f8:	008001c4 	movi	r2,7
    30fc:	dc800e15 	stw	r18,56(sp)
    3100:	147f1d16 	blt	r2,r17,2d78 <___vfprintf_internal_r+0xb90>
    3104:	28c00204 	addi	r3,r5,8
    3108:	003db506 	br	27e0 <___vfprintf_internal_r+0x5f8>
    310c:	3c000017 	ldw	r16,0(r7)
    3110:	3c400117 	ldw	r17,4(r7)
    3114:	39800204 	addi	r6,r7,8
    3118:	01000044 	movi	r4,1
    311c:	d9814015 	stw	r6,1280(sp)
    3120:	d8000405 	stb	zero,16(sp)
    3124:	003ebe06 	br	2c20 <___vfprintf_internal_r+0xa38>
    3128:	3c000017 	ldw	r16,0(r7)
    312c:	3c400117 	ldw	r17,4(r7)
    3130:	38800204 	addi	r2,r7,8
    3134:	d8814015 	stw	r2,1280(sp)
    3138:	003eb706 	br	2c18 <___vfprintf_internal_r+0xa30>
    313c:	3c000017 	ldw	r16,0(r7)
    3140:	3c400117 	ldw	r17,4(r7)
    3144:	39000204 	addi	r4,r7,8
    3148:	d9014015 	stw	r4,1280(sp)
    314c:	0009883a 	mov	r4,zero
    3150:	d8000405 	stb	zero,16(sp)
    3154:	003eb206 	br	2c20 <___vfprintf_internal_r+0xa38>
    3158:	38c00017 	ldw	r3,0(r7)
    315c:	39c00104 	addi	r7,r7,4
    3160:	d8c14a15 	stw	r3,1320(sp)
    3164:	1800d10e 	bge	r3,zero,34ac <___vfprintf_internal_r+0x12c4>
    3168:	00c7c83a 	sub	r3,zero,r3
    316c:	d8c14a15 	stw	r3,1320(sp)
    3170:	d9014c17 	ldw	r4,1328(sp)
    3174:	b8c00007 	ldb	r3,0(r23)
    3178:	21000114 	ori	r4,r4,4
    317c:	d9014c15 	stw	r4,1328(sp)
    3180:	003c9806 	br	23e4 <___vfprintf_internal_r+0x1fc>
    3184:	d9814c17 	ldw	r6,1328(sp)
    3188:	3080080c 	andi	r2,r6,32
    318c:	1001f026 	beq	r2,zero,3950 <___vfprintf_internal_r+0x1768>
    3190:	d9014b17 	ldw	r4,1324(sp)
    3194:	38800017 	ldw	r2,0(r7)
    3198:	39c00104 	addi	r7,r7,4
    319c:	d9c14015 	stw	r7,1280(sp)
    31a0:	2007d7fa 	srai	r3,r4,31
    31a4:	d9c14017 	ldw	r7,1280(sp)
    31a8:	11000015 	stw	r4,0(r2)
    31ac:	10c00115 	stw	r3,4(r2)
    31b0:	003c6906 	br	2358 <___vfprintf_internal_r+0x170>
    31b4:	b8c00007 	ldb	r3,0(r23)
    31b8:	00801b04 	movi	r2,108
    31bc:	18824f26 	beq	r3,r2,3afc <___vfprintf_internal_r+0x1914>
    31c0:	d9414c17 	ldw	r5,1328(sp)
    31c4:	29400414 	ori	r5,r5,16
    31c8:	d9414c15 	stw	r5,1328(sp)
    31cc:	003c8506 	br	23e4 <___vfprintf_internal_r+0x1fc>
    31d0:	d9814c17 	ldw	r6,1328(sp)
    31d4:	b8c00007 	ldb	r3,0(r23)
    31d8:	31800814 	ori	r6,r6,32
    31dc:	d9814c15 	stw	r6,1328(sp)
    31e0:	003c8006 	br	23e4 <___vfprintf_internal_r+0x1fc>
    31e4:	d8814c17 	ldw	r2,1328(sp)
    31e8:	3c000017 	ldw	r16,0(r7)
    31ec:	00c01e04 	movi	r3,120
    31f0:	10800094 	ori	r2,r2,2
    31f4:	d8814c15 	stw	r2,1328(sp)
    31f8:	39c00104 	addi	r7,r7,4
    31fc:	01400074 	movhi	r5,1
    3200:	29493204 	addi	r5,r5,9416
    3204:	00800c04 	movi	r2,48
    3208:	0023883a 	mov	r17,zero
    320c:	01000084 	movi	r4,2
    3210:	d9c14015 	stw	r7,1280(sp)
    3214:	d8c14d15 	stw	r3,1332(sp)
    3218:	d9414415 	stw	r5,1296(sp)
    321c:	d8800445 	stb	r2,17(sp)
    3220:	d8c00485 	stb	r3,18(sp)
    3224:	d8000405 	stb	zero,16(sp)
    3228:	003e7d06 	br	2c20 <___vfprintf_internal_r+0xa38>
    322c:	d8814c17 	ldw	r2,1328(sp)
    3230:	b8c00007 	ldb	r3,0(r23)
    3234:	10801014 	ori	r2,r2,64
    3238:	d8814c15 	stw	r2,1328(sp)
    323c:	003c6906 	br	23e4 <___vfprintf_internal_r+0x1fc>
    3240:	d9414c17 	ldw	r5,1328(sp)
    3244:	2880020c 	andi	r2,r5,8
    3248:	1001df26 	beq	r2,zero,39c8 <___vfprintf_internal_r+0x17e0>
    324c:	39800017 	ldw	r6,0(r7)
    3250:	38800204 	addi	r2,r7,8
    3254:	d8814015 	stw	r2,1280(sp)
    3258:	d9814215 	stw	r6,1288(sp)
    325c:	39c00117 	ldw	r7,4(r7)
    3260:	d9c14315 	stw	r7,1292(sp)
    3264:	d9014217 	ldw	r4,1288(sp)
    3268:	d9414317 	ldw	r5,1292(sp)
    326c:	0009bd00 	call	9bd0 <__isinfd>
    3270:	10021726 	beq	r2,zero,3ad0 <___vfprintf_internal_r+0x18e8>
    3274:	d9014217 	ldw	r4,1288(sp)
    3278:	d9414317 	ldw	r5,1292(sp)
    327c:	000d883a 	mov	r6,zero
    3280:	000f883a 	mov	r7,zero
    3284:	000e95c0 	call	e95c <__ltdf2>
    3288:	1002ca16 	blt	r2,zero,3db4 <___vfprintf_internal_r+0x1bcc>
    328c:	d9414d17 	ldw	r5,1332(sp)
    3290:	008011c4 	movi	r2,71
    3294:	11420a16 	blt	r2,r5,3ac0 <___vfprintf_internal_r+0x18d8>
    3298:	01800074 	movhi	r6,1
    329c:	31893704 	addi	r6,r6,9436
    32a0:	d9814115 	stw	r6,1284(sp)
    32a4:	d9014c17 	ldw	r4,1328(sp)
    32a8:	00c000c4 	movi	r3,3
    32ac:	00bfdfc4 	movi	r2,-129
    32b0:	2088703a 	and	r4,r4,r2
    32b4:	180f883a 	mov	r7,r3
    32b8:	d8c14515 	stw	r3,1300(sp)
    32bc:	d9014c15 	stw	r4,1328(sp)
    32c0:	d8014615 	stw	zero,1304(sp)
    32c4:	003e6a06 	br	2c70 <___vfprintf_internal_r+0xa88>
    32c8:	38800017 	ldw	r2,0(r7)
    32cc:	00c00044 	movi	r3,1
    32d0:	39c00104 	addi	r7,r7,4
    32d4:	d9c14015 	stw	r7,1280(sp)
    32d8:	d9000f04 	addi	r4,sp,60
    32dc:	180f883a 	mov	r7,r3
    32e0:	d8c14515 	stw	r3,1300(sp)
    32e4:	d9014115 	stw	r4,1284(sp)
    32e8:	d8800f05 	stb	r2,60(sp)
    32ec:	d8000405 	stb	zero,16(sp)
    32f0:	003cac06 	br	25a4 <___vfprintf_internal_r+0x3bc>
    32f4:	01400074 	movhi	r5,1
    32f8:	29493d04 	addi	r5,r5,9460
    32fc:	d9414415 	stw	r5,1296(sp)
    3300:	d9814c17 	ldw	r6,1328(sp)
    3304:	3080080c 	andi	r2,r6,32
    3308:	1000f926 	beq	r2,zero,36f0 <___vfprintf_internal_r+0x1508>
    330c:	3c000017 	ldw	r16,0(r7)
    3310:	3c400117 	ldw	r17,4(r7)
    3314:	38800204 	addi	r2,r7,8
    3318:	d8814015 	stw	r2,1280(sp)
    331c:	d9414c17 	ldw	r5,1328(sp)
    3320:	2880004c 	andi	r2,r5,1
    3324:	1005003a 	cmpeq	r2,r2,zero
    3328:	1000b31e 	bne	r2,zero,35f8 <___vfprintf_internal_r+0x1410>
    332c:	8444b03a 	or	r2,r16,r17
    3330:	1000b126 	beq	r2,zero,35f8 <___vfprintf_internal_r+0x1410>
    3334:	d9814d17 	ldw	r6,1332(sp)
    3338:	29400094 	ori	r5,r5,2
    333c:	00800c04 	movi	r2,48
    3340:	01000084 	movi	r4,2
    3344:	d9414c15 	stw	r5,1328(sp)
    3348:	d8800445 	stb	r2,17(sp)
    334c:	d9800485 	stb	r6,18(sp)
    3350:	d8000405 	stb	zero,16(sp)
    3354:	003e3206 	br	2c20 <___vfprintf_internal_r+0xa38>
    3358:	01800074 	movhi	r6,1
    335c:	31893204 	addi	r6,r6,9416
    3360:	d9814415 	stw	r6,1296(sp)
    3364:	003fe606 	br	3300 <___vfprintf_internal_r+0x1118>
    3368:	00800ac4 	movi	r2,43
    336c:	d8800405 	stb	r2,16(sp)
    3370:	b8c00007 	ldb	r3,0(r23)
    3374:	003c1b06 	br	23e4 <___vfprintf_internal_r+0x1fc>
    3378:	d8814c17 	ldw	r2,1328(sp)
    337c:	b8c00007 	ldb	r3,0(r23)
    3380:	10800054 	ori	r2,r2,1
    3384:	d8814c15 	stw	r2,1328(sp)
    3388:	003c1606 	br	23e4 <___vfprintf_internal_r+0x1fc>
    338c:	d8800407 	ldb	r2,16(sp)
    3390:	1000461e 	bne	r2,zero,34ac <___vfprintf_internal_r+0x12c4>
    3394:	00800804 	movi	r2,32
    3398:	d8800405 	stb	r2,16(sp)
    339c:	b8c00007 	ldb	r3,0(r23)
    33a0:	003c1006 	br	23e4 <___vfprintf_internal_r+0x1fc>
    33a4:	d9814c17 	ldw	r6,1328(sp)
    33a8:	b8c00007 	ldb	r3,0(r23)
    33ac:	31800214 	ori	r6,r6,8
    33b0:	d9814c15 	stw	r6,1328(sp)
    33b4:	003c0b06 	br	23e4 <___vfprintf_internal_r+0x1fc>
    33b8:	0007883a 	mov	r3,zero
    33bc:	01000244 	movi	r4,9
    33c0:	188002a4 	muli	r2,r3,10
    33c4:	b8c00007 	ldb	r3,0(r23)
    33c8:	d9814d17 	ldw	r6,1332(sp)
    33cc:	bdc00044 	addi	r23,r23,1
    33d0:	d8c14d15 	stw	r3,1332(sp)
    33d4:	d9414d17 	ldw	r5,1332(sp)
    33d8:	3085883a 	add	r2,r6,r2
    33dc:	10fff404 	addi	r3,r2,-48
    33e0:	28bff404 	addi	r2,r5,-48
    33e4:	20bff62e 	bgeu	r4,r2,33c0 <___vfprintf_internal_r+0x11d8>
    33e8:	d8c14a15 	stw	r3,1320(sp)
    33ec:	003bff06 	br	23ec <___vfprintf_internal_r+0x204>
    33f0:	d9414c17 	ldw	r5,1328(sp)
    33f4:	b8c00007 	ldb	r3,0(r23)
    33f8:	29402014 	ori	r5,r5,128
    33fc:	d9414c15 	stw	r5,1328(sp)
    3400:	003bf806 	br	23e4 <___vfprintf_internal_r+0x1fc>
    3404:	b8c00007 	ldb	r3,0(r23)
    3408:	00800a84 	movi	r2,42
    340c:	bdc00044 	addi	r23,r23,1
    3410:	18831526 	beq	r3,r2,4068 <___vfprintf_internal_r+0x1e80>
    3414:	d8c14d15 	stw	r3,1332(sp)
    3418:	18bff404 	addi	r2,r3,-48
    341c:	00c00244 	movi	r3,9
    3420:	18827836 	bltu	r3,r2,3e04 <___vfprintf_internal_r+0x1c1c>
    3424:	000d883a 	mov	r6,zero
    3428:	308002a4 	muli	r2,r6,10
    342c:	b9800007 	ldb	r6,0(r23)
    3430:	d9414d17 	ldw	r5,1332(sp)
    3434:	bdc00044 	addi	r23,r23,1
    3438:	d9814d15 	stw	r6,1332(sp)
    343c:	d9014d17 	ldw	r4,1332(sp)
    3440:	1145883a 	add	r2,r2,r5
    3444:	11bff404 	addi	r6,r2,-48
    3448:	20bff404 	addi	r2,r4,-48
    344c:	18bff62e 	bgeu	r3,r2,3428 <___vfprintf_internal_r+0x1240>
    3450:	3027883a 	mov	r19,r6
    3454:	303be50e 	bge	r6,zero,23ec <___vfprintf_internal_r+0x204>
    3458:	04ffffc4 	movi	r19,-1
    345c:	003be306 	br	23ec <___vfprintf_internal_r+0x204>
    3460:	d8000405 	stb	zero,16(sp)
    3464:	39800017 	ldw	r6,0(r7)
    3468:	39c00104 	addi	r7,r7,4
    346c:	d9c14015 	stw	r7,1280(sp)
    3470:	d9814115 	stw	r6,1284(sp)
    3474:	3001c926 	beq	r6,zero,3b9c <___vfprintf_internal_r+0x19b4>
    3478:	98000e16 	blt	r19,zero,34b4 <___vfprintf_internal_r+0x12cc>
    347c:	d9014117 	ldw	r4,1284(sp)
    3480:	000b883a 	mov	r5,zero
    3484:	980d883a 	mov	r6,r19
    3488:	000164c0 	call	164c <memchr>
    348c:	10025926 	beq	r2,zero,3df4 <___vfprintf_internal_r+0x1c0c>
    3490:	d8c14117 	ldw	r3,1284(sp)
    3494:	10cfc83a 	sub	r7,r2,r3
    3498:	99c19e16 	blt	r19,r7,3b14 <___vfprintf_internal_r+0x192c>
    349c:	d9c14515 	stw	r7,1300(sp)
    34a0:	38000916 	blt	r7,zero,34c8 <___vfprintf_internal_r+0x12e0>
    34a4:	d8014615 	stw	zero,1304(sp)
    34a8:	003df106 	br	2c70 <___vfprintf_internal_r+0xa88>
    34ac:	b8c00007 	ldb	r3,0(r23)
    34b0:	003bcc06 	br	23e4 <___vfprintf_internal_r+0x1fc>
    34b4:	d9014117 	ldw	r4,1284(sp)
    34b8:	000211c0 	call	211c <strlen>
    34bc:	d8814515 	stw	r2,1300(sp)
    34c0:	100f883a 	mov	r7,r2
    34c4:	103ff70e 	bge	r2,zero,34a4 <___vfprintf_internal_r+0x12bc>
    34c8:	d8014515 	stw	zero,1300(sp)
    34cc:	d8014615 	stw	zero,1304(sp)
    34d0:	003de706 	br	2c70 <___vfprintf_internal_r+0xa88>
    34d4:	20c03fcc 	andi	r3,r4,255
    34d8:	00800044 	movi	r2,1
    34dc:	18802d26 	beq	r3,r2,3594 <___vfprintf_internal_r+0x13ac>
    34e0:	18800e36 	bltu	r3,r2,351c <___vfprintf_internal_r+0x1334>
    34e4:	00800084 	movi	r2,2
    34e8:	1880fa26 	beq	r3,r2,38d4 <___vfprintf_internal_r+0x16ec>
    34ec:	01000074 	movhi	r4,1
    34f0:	21094204 	addi	r4,r4,9480
    34f4:	000211c0 	call	211c <strlen>
    34f8:	100f883a 	mov	r7,r2
    34fc:	dcc14515 	stw	r19,1300(sp)
    3500:	9880010e 	bge	r19,r2,3508 <___vfprintf_internal_r+0x1320>
    3504:	d8814515 	stw	r2,1300(sp)
    3508:	00800074 	movhi	r2,1
    350c:	10894204 	addi	r2,r2,9480
    3510:	dcc14615 	stw	r19,1304(sp)
    3514:	d8814115 	stw	r2,1284(sp)
    3518:	003dd506 	br	2c70 <___vfprintf_internal_r+0xa88>
    351c:	d9401904 	addi	r5,sp,100
    3520:	dd000f04 	addi	r20,sp,60
    3524:	d9414115 	stw	r5,1284(sp)
    3528:	880a977a 	slli	r5,r17,29
    352c:	d9814117 	ldw	r6,1284(sp)
    3530:	8004d0fa 	srli	r2,r16,3
    3534:	8806d0fa 	srli	r3,r17,3
    3538:	810001cc 	andi	r4,r16,7
    353c:	2884b03a 	or	r2,r5,r2
    3540:	31bfffc4 	addi	r6,r6,-1
    3544:	21000c04 	addi	r4,r4,48
    3548:	d9814115 	stw	r6,1284(sp)
    354c:	10cab03a 	or	r5,r2,r3
    3550:	31000005 	stb	r4,0(r6)
    3554:	1021883a 	mov	r16,r2
    3558:	1823883a 	mov	r17,r3
    355c:	283ff21e 	bne	r5,zero,3528 <___vfprintf_internal_r+0x1340>
    3560:	d8c14c17 	ldw	r3,1328(sp)
    3564:	1880004c 	andi	r2,r3,1
    3568:	1005003a 	cmpeq	r2,r2,zero
    356c:	103db91e 	bne	r2,zero,2c54 <___vfprintf_internal_r+0xa6c>
    3570:	20803fcc 	andi	r2,r4,255
    3574:	1080201c 	xori	r2,r2,128
    3578:	10bfe004 	addi	r2,r2,-128
    357c:	00c00c04 	movi	r3,48
    3580:	10fdb426 	beq	r2,r3,2c54 <___vfprintf_internal_r+0xa6c>
    3584:	31bfffc4 	addi	r6,r6,-1
    3588:	d9814115 	stw	r6,1284(sp)
    358c:	30c00005 	stb	r3,0(r6)
    3590:	003db006 	br	2c54 <___vfprintf_internal_r+0xa6c>
    3594:	88800068 	cmpgeui	r2,r17,1
    3598:	10002c1e 	bne	r2,zero,364c <___vfprintf_internal_r+0x1464>
    359c:	8800021e 	bne	r17,zero,35a8 <___vfprintf_internal_r+0x13c0>
    35a0:	00800244 	movi	r2,9
    35a4:	14002936 	bltu	r2,r16,364c <___vfprintf_internal_r+0x1464>
    35a8:	d90018c4 	addi	r4,sp,99
    35ac:	dd000f04 	addi	r20,sp,60
    35b0:	d9014115 	stw	r4,1284(sp)
    35b4:	d9014117 	ldw	r4,1284(sp)
    35b8:	80800c04 	addi	r2,r16,48
    35bc:	20800005 	stb	r2,0(r4)
    35c0:	003da406 	br	2c54 <___vfprintf_internal_r+0xa6c>
    35c4:	dc400d17 	ldw	r17,52(sp)
    35c8:	07000074 	movhi	fp,1
    35cc:	e7094984 	addi	fp,fp,9510
    35d0:	9425883a 	add	r18,r18,r16
    35d4:	8c400044 	addi	r17,r17,1
    35d8:	008001c4 	movi	r2,7
    35dc:	1f000015 	stw	fp,0(r3)
    35e0:	1c000115 	stw	r16,4(r3)
    35e4:	dc800e15 	stw	r18,56(sp)
    35e8:	dc400d15 	stw	r17,52(sp)
    35ec:	147de216 	blt	r2,r17,2d78 <___vfprintf_internal_r+0xb90>
    35f0:	18c00204 	addi	r3,r3,8
    35f4:	003c7a06 	br	27e0 <___vfprintf_internal_r+0x5f8>
    35f8:	01000084 	movi	r4,2
    35fc:	d8000405 	stb	zero,16(sp)
    3600:	003d8706 	br	2c20 <___vfprintf_internal_r+0xa38>
    3604:	d9814c17 	ldw	r6,1328(sp)
    3608:	30c4703a 	and	r2,r6,r3
    360c:	1005003a 	cmpeq	r2,r2,zero
    3610:	103cb926 	beq	r2,zero,28f8 <___vfprintf_internal_r+0x710>
    3614:	d9014117 	ldw	r4,1284(sp)
    3618:	94800044 	addi	r18,r18,1
    361c:	8c400044 	addi	r17,r17,1
    3620:	008001c4 	movi	r2,7
    3624:	a9000015 	stw	r4,0(r21)
    3628:	a8c00115 	stw	r3,4(r21)
    362c:	dc800e15 	stw	r18,56(sp)
    3630:	dc400d15 	stw	r17,52(sp)
    3634:	147e6616 	blt	r2,r17,2fd0 <___vfprintf_internal_r+0xde8>
    3638:	acc00204 	addi	r19,r21,8
    363c:	003cd706 	br	299c <___vfprintf_internal_r+0x7b4>
    3640:	07000074 	movhi	fp,1
    3644:	e7094984 	addi	fp,fp,9510
    3648:	003c4f06 	br	2788 <___vfprintf_internal_r+0x5a0>
    364c:	dd000f04 	addi	r20,sp,60
    3650:	dc801904 	addi	r18,sp,100
    3654:	8009883a 	mov	r4,r16
    3658:	880b883a 	mov	r5,r17
    365c:	01800284 	movi	r6,10
    3660:	000f883a 	mov	r7,zero
    3664:	000d5040 	call	d504 <__umoddi3>
    3668:	12000c04 	addi	r8,r2,48
    366c:	94bfffc4 	addi	r18,r18,-1
    3670:	8009883a 	mov	r4,r16
    3674:	880b883a 	mov	r5,r17
    3678:	01800284 	movi	r6,10
    367c:	000f883a 	mov	r7,zero
    3680:	92000005 	stb	r8,0(r18)
    3684:	000cf280 	call	cf28 <__udivdi3>
    3688:	1009883a 	mov	r4,r2
    368c:	1021883a 	mov	r16,r2
    3690:	18800068 	cmpgeui	r2,r3,1
    3694:	1823883a 	mov	r17,r3
    3698:	103fee1e 	bne	r2,zero,3654 <___vfprintf_internal_r+0x146c>
    369c:	1800021e 	bne	r3,zero,36a8 <___vfprintf_internal_r+0x14c0>
    36a0:	00800244 	movi	r2,9
    36a4:	113feb36 	bltu	r2,r4,3654 <___vfprintf_internal_r+0x146c>
    36a8:	94bfffc4 	addi	r18,r18,-1
    36ac:	dc814115 	stw	r18,1284(sp)
    36b0:	003fc006 	br	35b4 <___vfprintf_internal_r+0x13cc>
    36b4:	d9014c17 	ldw	r4,1328(sp)
    36b8:	2080004c 	andi	r2,r4,1
    36bc:	10009a1e 	bne	r2,zero,3928 <___vfprintf_internal_r+0x1740>
    36c0:	d9401904 	addi	r5,sp,100
    36c4:	dd000f04 	addi	r20,sp,60
    36c8:	d9414115 	stw	r5,1284(sp)
    36cc:	003d6106 	br	2c54 <___vfprintf_internal_r+0xa6c>
    36d0:	d9014f17 	ldw	r4,1340(sp)
    36d4:	b00b883a 	mov	r5,r22
    36d8:	d9800c04 	addi	r6,sp,48
    36dc:	00021900 	call	2190 <__sprint_r>
    36e0:	103c791e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    36e4:	dc800e17 	ldw	r18,56(sp)
    36e8:	d8c01904 	addi	r3,sp,100
    36ec:	003cff06 	br	2aec <___vfprintf_internal_r+0x904>
    36f0:	d8c14c17 	ldw	r3,1328(sp)
    36f4:	1880040c 	andi	r2,r3,16
    36f8:	1000711e 	bne	r2,zero,38c0 <___vfprintf_internal_r+0x16d8>
    36fc:	d9014c17 	ldw	r4,1328(sp)
    3700:	2080100c 	andi	r2,r4,64
    3704:	10006e26 	beq	r2,zero,38c0 <___vfprintf_internal_r+0x16d8>
    3708:	3c00000b 	ldhu	r16,0(r7)
    370c:	0023883a 	mov	r17,zero
    3710:	39c00104 	addi	r7,r7,4
    3714:	d9c14015 	stw	r7,1280(sp)
    3718:	003f0006 	br	331c <___vfprintf_internal_r+0x1134>
    371c:	dc400d17 	ldw	r17,52(sp)
    3720:	07000074 	movhi	fp,1
    3724:	e7094984 	addi	fp,fp,9510
    3728:	9425883a 	add	r18,r18,r16
    372c:	8c400044 	addi	r17,r17,1
    3730:	008001c4 	movi	r2,7
    3734:	1f000015 	stw	fp,0(r3)
    3738:	1c000115 	stw	r16,4(r3)
    373c:	dc800e15 	stw	r18,56(sp)
    3740:	dc400d15 	stw	r17,52(sp)
    3744:	147d7616 	blt	r2,r17,2d20 <___vfprintf_internal_r+0xb38>
    3748:	18c00204 	addi	r3,r3,8
    374c:	003d7b06 	br	2d3c <___vfprintf_internal_r+0xb54>
    3750:	dc800e17 	ldw	r18,56(sp)
    3754:	dc400d17 	ldw	r17,52(sp)
    3758:	07000074 	movhi	fp,1
    375c:	e7094d84 	addi	fp,fp,9526
    3760:	003bc006 	br	2664 <___vfprintf_internal_r+0x47c>
    3764:	d9014f17 	ldw	r4,1340(sp)
    3768:	b00b883a 	mov	r5,r22
    376c:	d9800c04 	addi	r6,sp,48
    3770:	00021900 	call	2190 <__sprint_r>
    3774:	103c541e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3778:	dc800e17 	ldw	r18,56(sp)
    377c:	d8c01904 	addi	r3,sp,100
    3780:	003ce906 	br	2b28 <___vfprintf_internal_r+0x940>
    3784:	3c000017 	ldw	r16,0(r7)
    3788:	0009883a 	mov	r4,zero
    378c:	39c00104 	addi	r7,r7,4
    3790:	0023883a 	mov	r17,zero
    3794:	d9c14015 	stw	r7,1280(sp)
    3798:	d8000405 	stb	zero,16(sp)
    379c:	003d2006 	br	2c20 <___vfprintf_internal_r+0xa38>
    37a0:	38800017 	ldw	r2,0(r7)
    37a4:	39c00104 	addi	r7,r7,4
    37a8:	d9c14015 	stw	r7,1280(sp)
    37ac:	1023d7fa 	srai	r17,r2,31
    37b0:	1021883a 	mov	r16,r2
    37b4:	003d1806 	br	2c18 <___vfprintf_internal_r+0xa30>
    37b8:	3c000017 	ldw	r16,0(r7)
    37bc:	01000044 	movi	r4,1
    37c0:	39c00104 	addi	r7,r7,4
    37c4:	0023883a 	mov	r17,zero
    37c8:	d9c14015 	stw	r7,1280(sp)
    37cc:	d8000405 	stb	zero,16(sp)
    37d0:	003d1306 	br	2c20 <___vfprintf_internal_r+0xa38>
    37d4:	00800074 	movhi	r2,1
    37d8:	10894904 	addi	r2,r2,9508
    37dc:	94800044 	addi	r18,r18,1
    37e0:	8c400044 	addi	r17,r17,1
    37e4:	a8800015 	stw	r2,0(r21)
    37e8:	00c00044 	movi	r3,1
    37ec:	008001c4 	movi	r2,7
    37f0:	a8c00115 	stw	r3,4(r21)
    37f4:	dc800e15 	stw	r18,56(sp)
    37f8:	dc400d15 	stw	r17,52(sp)
    37fc:	1440ca16 	blt	r2,r17,3b28 <___vfprintf_internal_r+0x1940>
    3800:	a8c00204 	addi	r3,r21,8
    3804:	2000061e 	bne	r4,zero,3820 <___vfprintf_internal_r+0x1638>
    3808:	d9414717 	ldw	r5,1308(sp)
    380c:	2800041e 	bne	r5,zero,3820 <___vfprintf_internal_r+0x1638>
    3810:	d9814c17 	ldw	r6,1328(sp)
    3814:	3080004c 	andi	r2,r6,1
    3818:	1005003a 	cmpeq	r2,r2,zero
    381c:	103bf01e 	bne	r2,zero,27e0 <___vfprintf_internal_r+0x5f8>
    3820:	00800044 	movi	r2,1
    3824:	dc400d17 	ldw	r17,52(sp)
    3828:	18800115 	stw	r2,4(r3)
    382c:	d8814917 	ldw	r2,1316(sp)
    3830:	94800044 	addi	r18,r18,1
    3834:	8c400044 	addi	r17,r17,1
    3838:	18800015 	stw	r2,0(r3)
    383c:	008001c4 	movi	r2,7
    3840:	dc800e15 	stw	r18,56(sp)
    3844:	dc400d15 	stw	r17,52(sp)
    3848:	1440ca16 	blt	r2,r17,3b74 <___vfprintf_internal_r+0x198c>
    384c:	18c00204 	addi	r3,r3,8
    3850:	0121c83a 	sub	r16,zero,r4
    3854:	0400500e 	bge	zero,r16,3998 <___vfprintf_internal_r+0x17b0>
    3858:	00800404 	movi	r2,16
    385c:	1400800e 	bge	r2,r16,3a60 <___vfprintf_internal_r+0x1878>
    3860:	1027883a 	mov	r19,r2
    3864:	07000074 	movhi	fp,1
    3868:	e7094984 	addi	fp,fp,9510
    386c:	050001c4 	movi	r20,7
    3870:	00000306 	br	3880 <___vfprintf_internal_r+0x1698>
    3874:	18c00204 	addi	r3,r3,8
    3878:	843ffc04 	addi	r16,r16,-16
    387c:	9c007a0e 	bge	r19,r16,3a68 <___vfprintf_internal_r+0x1880>
    3880:	94800404 	addi	r18,r18,16
    3884:	8c400044 	addi	r17,r17,1
    3888:	1f000015 	stw	fp,0(r3)
    388c:	1cc00115 	stw	r19,4(r3)
    3890:	dc800e15 	stw	r18,56(sp)
    3894:	dc400d15 	stw	r17,52(sp)
    3898:	a47ff60e 	bge	r20,r17,3874 <___vfprintf_internal_r+0x168c>
    389c:	d9014f17 	ldw	r4,1340(sp)
    38a0:	b00b883a 	mov	r5,r22
    38a4:	d9800c04 	addi	r6,sp,48
    38a8:	00021900 	call	2190 <__sprint_r>
    38ac:	103c061e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    38b0:	dc800e17 	ldw	r18,56(sp)
    38b4:	dc400d17 	ldw	r17,52(sp)
    38b8:	d8c01904 	addi	r3,sp,100
    38bc:	003fee06 	br	3878 <___vfprintf_internal_r+0x1690>
    38c0:	3c000017 	ldw	r16,0(r7)
    38c4:	0023883a 	mov	r17,zero
    38c8:	39c00104 	addi	r7,r7,4
    38cc:	d9c14015 	stw	r7,1280(sp)
    38d0:	003e9206 	br	331c <___vfprintf_internal_r+0x1134>
    38d4:	d9401904 	addi	r5,sp,100
    38d8:	dd000f04 	addi	r20,sp,60
    38dc:	d9414115 	stw	r5,1284(sp)
    38e0:	d9814417 	ldw	r6,1296(sp)
    38e4:	880a973a 	slli	r5,r17,28
    38e8:	8004d13a 	srli	r2,r16,4
    38ec:	810003cc 	andi	r4,r16,15
    38f0:	3109883a 	add	r4,r6,r4
    38f4:	2884b03a 	or	r2,r5,r2
    38f8:	21400003 	ldbu	r5,0(r4)
    38fc:	d9014117 	ldw	r4,1284(sp)
    3900:	8806d13a 	srli	r3,r17,4
    3904:	1021883a 	mov	r16,r2
    3908:	213fffc4 	addi	r4,r4,-1
    390c:	d9014115 	stw	r4,1284(sp)
    3910:	d9814117 	ldw	r6,1284(sp)
    3914:	10c8b03a 	or	r4,r2,r3
    3918:	1823883a 	mov	r17,r3
    391c:	31400005 	stb	r5,0(r6)
    3920:	203fef1e 	bne	r4,zero,38e0 <___vfprintf_internal_r+0x16f8>
    3924:	003ccb06 	br	2c54 <___vfprintf_internal_r+0xa6c>
    3928:	00800c04 	movi	r2,48
    392c:	d98018c4 	addi	r6,sp,99
    3930:	dd000f04 	addi	r20,sp,60
    3934:	d88018c5 	stb	r2,99(sp)
    3938:	d9814115 	stw	r6,1284(sp)
    393c:	003cc506 	br	2c54 <___vfprintf_internal_r+0xa6c>
    3940:	dc400d17 	ldw	r17,52(sp)
    3944:	07000074 	movhi	fp,1
    3948:	e7094d84 	addi	fp,fp,9526
    394c:	003bc706 	br	286c <___vfprintf_internal_r+0x684>
    3950:	d9414c17 	ldw	r5,1328(sp)
    3954:	2880040c 	andi	r2,r5,16
    3958:	10007c26 	beq	r2,zero,3b4c <___vfprintf_internal_r+0x1964>
    395c:	38800017 	ldw	r2,0(r7)
    3960:	39c00104 	addi	r7,r7,4
    3964:	d9c14015 	stw	r7,1280(sp)
    3968:	d9814b17 	ldw	r6,1324(sp)
    396c:	d9c14017 	ldw	r7,1280(sp)
    3970:	11800015 	stw	r6,0(r2)
    3974:	003a7806 	br	2358 <___vfprintf_internal_r+0x170>
    3978:	d9014f17 	ldw	r4,1340(sp)
    397c:	b00b883a 	mov	r5,r22
    3980:	d9800c04 	addi	r6,sp,48
    3984:	00021900 	call	2190 <__sprint_r>
    3988:	103bcf1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    398c:	dc800e17 	ldw	r18,56(sp)
    3990:	dc400d17 	ldw	r17,52(sp)
    3994:	d8c01904 	addi	r3,sp,100
    3998:	d9014717 	ldw	r4,1308(sp)
    399c:	d9414117 	ldw	r5,1284(sp)
    39a0:	8c400044 	addi	r17,r17,1
    39a4:	9125883a 	add	r18,r18,r4
    39a8:	008001c4 	movi	r2,7
    39ac:	19400015 	stw	r5,0(r3)
    39b0:	19000115 	stw	r4,4(r3)
    39b4:	dc800e15 	stw	r18,56(sp)
    39b8:	dc400d15 	stw	r17,52(sp)
    39bc:	147cee16 	blt	r2,r17,2d78 <___vfprintf_internal_r+0xb90>
    39c0:	18c00204 	addi	r3,r3,8
    39c4:	003b8606 	br	27e0 <___vfprintf_internal_r+0x5f8>
    39c8:	38c00017 	ldw	r3,0(r7)
    39cc:	39000204 	addi	r4,r7,8
    39d0:	d9014015 	stw	r4,1280(sp)
    39d4:	d8c14215 	stw	r3,1288(sp)
    39d8:	39c00117 	ldw	r7,4(r7)
    39dc:	d9c14315 	stw	r7,1292(sp)
    39e0:	003e2006 	br	3264 <___vfprintf_internal_r+0x107c>
    39e4:	0005883a 	mov	r2,zero
    39e8:	1409c83a 	sub	r4,r2,r16
    39ec:	1105803a 	cmpltu	r2,r2,r4
    39f0:	044bc83a 	sub	r5,zero,r17
    39f4:	2885c83a 	sub	r2,r5,r2
    39f8:	2021883a 	mov	r16,r4
    39fc:	1023883a 	mov	r17,r2
    3a00:	01000044 	movi	r4,1
    3a04:	00800b44 	movi	r2,45
    3a08:	d8800405 	stb	r2,16(sp)
    3a0c:	003c8406 	br	2c20 <___vfprintf_internal_r+0xa38>
    3a10:	d9014f17 	ldw	r4,1340(sp)
    3a14:	b00b883a 	mov	r5,r22
    3a18:	d9800c04 	addi	r6,sp,48
    3a1c:	00021900 	call	2190 <__sprint_r>
    3a20:	103ba91e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3a24:	dc800e17 	ldw	r18,56(sp)
    3a28:	dc400d17 	ldw	r17,52(sp)
    3a2c:	d9000517 	ldw	r4,20(sp)
    3a30:	d9401904 	addi	r5,sp,100
    3a34:	003da706 	br	30d4 <___vfprintf_internal_r+0xeec>
    3a38:	d9014f17 	ldw	r4,1340(sp)
    3a3c:	b00b883a 	mov	r5,r22
    3a40:	d9800c04 	addi	r6,sp,48
    3a44:	00021900 	call	2190 <__sprint_r>
    3a48:	103b9f1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3a4c:	dc800e17 	ldw	r18,56(sp)
    3a50:	dc400d17 	ldw	r17,52(sp)
    3a54:	d9000517 	ldw	r4,20(sp)
    3a58:	d8c01904 	addi	r3,sp,100
    3a5c:	003d9106 	br	30a4 <___vfprintf_internal_r+0xebc>
    3a60:	07000074 	movhi	fp,1
    3a64:	e7094984 	addi	fp,fp,9510
    3a68:	9425883a 	add	r18,r18,r16
    3a6c:	8c400044 	addi	r17,r17,1
    3a70:	008001c4 	movi	r2,7
    3a74:	1f000015 	stw	fp,0(r3)
    3a78:	1c000115 	stw	r16,4(r3)
    3a7c:	dc800e15 	stw	r18,56(sp)
    3a80:	dc400d15 	stw	r17,52(sp)
    3a84:	147fbc16 	blt	r2,r17,3978 <___vfprintf_internal_r+0x1790>
    3a88:	18c00204 	addi	r3,r3,8
    3a8c:	003fc206 	br	3998 <___vfprintf_internal_r+0x17b0>
    3a90:	d9014f17 	ldw	r4,1340(sp)
    3a94:	b00b883a 	mov	r5,r22
    3a98:	d9800c04 	addi	r6,sp,48
    3a9c:	00021900 	call	2190 <__sprint_r>
    3aa0:	103b891e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3aa4:	dc800e17 	ldw	r18,56(sp)
    3aa8:	d9000517 	ldw	r4,20(sp)
    3aac:	d8c01904 	addi	r3,sp,100
    3ab0:	003d0206 	br	2ebc <___vfprintf_internal_r+0xcd4>
    3ab4:	07000074 	movhi	fp,1
    3ab8:	e7094984 	addi	fp,fp,9510
    3abc:	003be406 	br	2a50 <___vfprintf_internal_r+0x868>
    3ac0:	00800074 	movhi	r2,1
    3ac4:	10893804 	addi	r2,r2,9440
    3ac8:	d8814115 	stw	r2,1284(sp)
    3acc:	003df506 	br	32a4 <___vfprintf_internal_r+0x10bc>
    3ad0:	d9014217 	ldw	r4,1288(sp)
    3ad4:	d9414317 	ldw	r5,1292(sp)
    3ad8:	0009c100 	call	9c10 <__isnand>
    3adc:	10003926 	beq	r2,zero,3bc4 <___vfprintf_internal_r+0x19dc>
    3ae0:	d9414d17 	ldw	r5,1332(sp)
    3ae4:	008011c4 	movi	r2,71
    3ae8:	1140ce16 	blt	r2,r5,3e24 <___vfprintf_internal_r+0x1c3c>
    3aec:	01800074 	movhi	r6,1
    3af0:	31893904 	addi	r6,r6,9444
    3af4:	d9814115 	stw	r6,1284(sp)
    3af8:	003dea06 	br	32a4 <___vfprintf_internal_r+0x10bc>
    3afc:	d9014c17 	ldw	r4,1328(sp)
    3b00:	bdc00044 	addi	r23,r23,1
    3b04:	b8c00007 	ldb	r3,0(r23)
    3b08:	21000814 	ori	r4,r4,32
    3b0c:	d9014c15 	stw	r4,1328(sp)
    3b10:	003a3406 	br	23e4 <___vfprintf_internal_r+0x1fc>
    3b14:	dcc14515 	stw	r19,1300(sp)
    3b18:	98011016 	blt	r19,zero,3f5c <___vfprintf_internal_r+0x1d74>
    3b1c:	980f883a 	mov	r7,r19
    3b20:	d8014615 	stw	zero,1304(sp)
    3b24:	003c5206 	br	2c70 <___vfprintf_internal_r+0xa88>
    3b28:	d9014f17 	ldw	r4,1340(sp)
    3b2c:	b00b883a 	mov	r5,r22
    3b30:	d9800c04 	addi	r6,sp,48
    3b34:	00021900 	call	2190 <__sprint_r>
    3b38:	103b631e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3b3c:	dc800e17 	ldw	r18,56(sp)
    3b40:	d9000517 	ldw	r4,20(sp)
    3b44:	d8c01904 	addi	r3,sp,100
    3b48:	003f2e06 	br	3804 <___vfprintf_internal_r+0x161c>
    3b4c:	d8c14c17 	ldw	r3,1328(sp)
    3b50:	1880100c 	andi	r2,r3,64
    3b54:	1000a026 	beq	r2,zero,3dd8 <___vfprintf_internal_r+0x1bf0>
    3b58:	38800017 	ldw	r2,0(r7)
    3b5c:	39c00104 	addi	r7,r7,4
    3b60:	d9c14015 	stw	r7,1280(sp)
    3b64:	d9014b17 	ldw	r4,1324(sp)
    3b68:	d9c14017 	ldw	r7,1280(sp)
    3b6c:	1100000d 	sth	r4,0(r2)
    3b70:	0039f906 	br	2358 <___vfprintf_internal_r+0x170>
    3b74:	d9014f17 	ldw	r4,1340(sp)
    3b78:	b00b883a 	mov	r5,r22
    3b7c:	d9800c04 	addi	r6,sp,48
    3b80:	00021900 	call	2190 <__sprint_r>
    3b84:	103b501e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3b88:	dc800e17 	ldw	r18,56(sp)
    3b8c:	dc400d17 	ldw	r17,52(sp)
    3b90:	d9000517 	ldw	r4,20(sp)
    3b94:	d8c01904 	addi	r3,sp,100
    3b98:	003f2d06 	br	3850 <___vfprintf_internal_r+0x1668>
    3b9c:	00800184 	movi	r2,6
    3ba0:	14c09a36 	bltu	r2,r19,3e0c <___vfprintf_internal_r+0x1c24>
    3ba4:	dcc14515 	stw	r19,1300(sp)
    3ba8:	9800010e 	bge	r19,zero,3bb0 <___vfprintf_internal_r+0x19c8>
    3bac:	d8014515 	stw	zero,1300(sp)
    3bb0:	00800074 	movhi	r2,1
    3bb4:	10893b04 	addi	r2,r2,9452
    3bb8:	980f883a 	mov	r7,r19
    3bbc:	d8814115 	stw	r2,1284(sp)
    3bc0:	003a7806 	br	25a4 <___vfprintf_internal_r+0x3bc>
    3bc4:	00bfffc4 	movi	r2,-1
    3bc8:	9880e226 	beq	r19,r2,3f54 <___vfprintf_internal_r+0x1d6c>
    3bcc:	d9414d17 	ldw	r5,1332(sp)
    3bd0:	008019c4 	movi	r2,103
    3bd4:	2880dc26 	beq	r5,r2,3f48 <___vfprintf_internal_r+0x1d60>
    3bd8:	008011c4 	movi	r2,71
    3bdc:	2880da26 	beq	r5,r2,3f48 <___vfprintf_internal_r+0x1d60>
    3be0:	d9414c17 	ldw	r5,1328(sp)
    3be4:	d9014317 	ldw	r4,1292(sp)
    3be8:	d9814217 	ldw	r6,1288(sp)
    3bec:	29404014 	ori	r5,r5,256
    3bf0:	d9414c15 	stw	r5,1328(sp)
    3bf4:	2000cc16 	blt	r4,zero,3f28 <___vfprintf_internal_r+0x1d40>
    3bf8:	3021883a 	mov	r16,r6
    3bfc:	2023883a 	mov	r17,r4
    3c00:	0039883a 	mov	fp,zero
    3c04:	d9414d17 	ldw	r5,1332(sp)
    3c08:	00801984 	movi	r2,102
    3c0c:	2880b726 	beq	r5,r2,3eec <___vfprintf_internal_r+0x1d04>
    3c10:	00801184 	movi	r2,70
    3c14:	2880b526 	beq	r5,r2,3eec <___vfprintf_internal_r+0x1d04>
    3c18:	00801944 	movi	r2,101
    3c1c:	2880c826 	beq	r5,r2,3f40 <___vfprintf_internal_r+0x1d58>
    3c20:	00801144 	movi	r2,69
    3c24:	2880c626 	beq	r5,r2,3f40 <___vfprintf_internal_r+0x1d58>
    3c28:	9829883a 	mov	r20,r19
    3c2c:	d9014f17 	ldw	r4,1340(sp)
    3c30:	d8800504 	addi	r2,sp,20
    3c34:	880d883a 	mov	r6,r17
    3c38:	d8800115 	stw	r2,4(sp)
    3c3c:	d8c00604 	addi	r3,sp,24
    3c40:	d8800704 	addi	r2,sp,28
    3c44:	800b883a 	mov	r5,r16
    3c48:	01c00084 	movi	r7,2
    3c4c:	d8c00215 	stw	r3,8(sp)
    3c50:	d8800315 	stw	r2,12(sp)
    3c54:	dd000015 	stw	r20,0(sp)
    3c58:	0005c740 	call	5c74 <_dtoa_r>
    3c5c:	d9814d17 	ldw	r6,1332(sp)
    3c60:	d8814115 	stw	r2,1284(sp)
    3c64:	008019c4 	movi	r2,103
    3c68:	30809526 	beq	r6,r2,3ec0 <___vfprintf_internal_r+0x1cd8>
    3c6c:	d8c14d17 	ldw	r3,1332(sp)
    3c70:	008011c4 	movi	r2,71
    3c74:	18809226 	beq	r3,r2,3ec0 <___vfprintf_internal_r+0x1cd8>
    3c78:	d9414117 	ldw	r5,1284(sp)
    3c7c:	d9814d17 	ldw	r6,1332(sp)
    3c80:	00801984 	movi	r2,102
    3c84:	2d25883a 	add	r18,r5,r20
    3c88:	30808626 	beq	r6,r2,3ea4 <___vfprintf_internal_r+0x1cbc>
    3c8c:	00801184 	movi	r2,70
    3c90:	30808426 	beq	r6,r2,3ea4 <___vfprintf_internal_r+0x1cbc>
    3c94:	000d883a 	mov	r6,zero
    3c98:	000f883a 	mov	r7,zero
    3c9c:	880b883a 	mov	r5,r17
    3ca0:	8009883a 	mov	r4,r16
    3ca4:	000e73c0 	call	e73c <__eqdf2>
    3ca8:	1000751e 	bne	r2,zero,3e80 <___vfprintf_internal_r+0x1c98>
    3cac:	9005883a 	mov	r2,r18
    3cb0:	dc800715 	stw	r18,28(sp)
    3cb4:	d9014117 	ldw	r4,1284(sp)
    3cb8:	d9414d17 	ldw	r5,1332(sp)
    3cbc:	00c019c4 	movi	r3,103
    3cc0:	1125c83a 	sub	r18,r2,r4
    3cc4:	28c06826 	beq	r5,r3,3e68 <___vfprintf_internal_r+0x1c80>
    3cc8:	008011c4 	movi	r2,71
    3ccc:	28806626 	beq	r5,r2,3e68 <___vfprintf_internal_r+0x1c80>
    3cd0:	d9000517 	ldw	r4,20(sp)
    3cd4:	d8c14d17 	ldw	r3,1332(sp)
    3cd8:	00801944 	movi	r2,101
    3cdc:	10c05516 	blt	r2,r3,3e34 <___vfprintf_internal_r+0x1c4c>
    3ce0:	213fffc4 	addi	r4,r4,-1
    3ce4:	d9000515 	stw	r4,20(sp)
    3ce8:	d8c00805 	stb	r3,32(sp)
    3cec:	2021883a 	mov	r16,r4
    3cf0:	2000c116 	blt	r4,zero,3ff8 <___vfprintf_internal_r+0x1e10>
    3cf4:	00800ac4 	movi	r2,43
    3cf8:	d8800845 	stb	r2,33(sp)
    3cfc:	00800244 	movi	r2,9
    3d00:	1400af0e 	bge	r2,r16,3fc0 <___vfprintf_internal_r+0x1dd8>
    3d04:	1027883a 	mov	r19,r2
    3d08:	dc400b84 	addi	r17,sp,46
    3d0c:	8009883a 	mov	r4,r16
    3d10:	01400284 	movi	r5,10
    3d14:	000ef200 	call	ef20 <__modsi3>
    3d18:	10800c04 	addi	r2,r2,48
    3d1c:	8c7fffc4 	addi	r17,r17,-1
    3d20:	8009883a 	mov	r4,r16
    3d24:	01400284 	movi	r5,10
    3d28:	88800005 	stb	r2,0(r17)
    3d2c:	000eec00 	call	eec0 <__divsi3>
    3d30:	1021883a 	mov	r16,r2
    3d34:	98bff516 	blt	r19,r2,3d0c <___vfprintf_internal_r+0x1b24>
    3d38:	10c00c04 	addi	r3,r2,48
    3d3c:	d88009c4 	addi	r2,sp,39
    3d40:	108001c4 	addi	r2,r2,7
    3d44:	897fffc4 	addi	r5,r17,-1
    3d48:	88ffffc5 	stb	r3,-1(r17)
    3d4c:	2880a72e 	bgeu	r5,r2,3fec <___vfprintf_internal_r+0x1e04>
    3d50:	1009883a 	mov	r4,r2
    3d54:	d9800804 	addi	r6,sp,32
    3d58:	d8c00884 	addi	r3,sp,34
    3d5c:	28800003 	ldbu	r2,0(r5)
    3d60:	29400044 	addi	r5,r5,1
    3d64:	18800005 	stb	r2,0(r3)
    3d68:	18c00044 	addi	r3,r3,1
    3d6c:	293ffb36 	bltu	r5,r4,3d5c <___vfprintf_internal_r+0x1b74>
    3d70:	1987c83a 	sub	r3,r3,r6
    3d74:	00800044 	movi	r2,1
    3d78:	d8c14815 	stw	r3,1312(sp)
    3d7c:	90cf883a 	add	r7,r18,r3
    3d80:	1480960e 	bge	r2,r18,3fdc <___vfprintf_internal_r+0x1df4>
    3d84:	39c00044 	addi	r7,r7,1
    3d88:	d9c14515 	stw	r7,1300(sp)
    3d8c:	38003416 	blt	r7,zero,3e60 <___vfprintf_internal_r+0x1c78>
    3d90:	e0803fcc 	andi	r2,fp,255
    3d94:	1080201c 	xori	r2,r2,128
    3d98:	10bfe004 	addi	r2,r2,-128
    3d9c:	10004e26 	beq	r2,zero,3ed8 <___vfprintf_internal_r+0x1cf0>
    3da0:	00800b44 	movi	r2,45
    3da4:	dc814715 	stw	r18,1308(sp)
    3da8:	d8014615 	stw	zero,1304(sp)
    3dac:	d8800405 	stb	r2,16(sp)
    3db0:	003bb106 	br	2c78 <___vfprintf_internal_r+0xa90>
    3db4:	00800b44 	movi	r2,45
    3db8:	d8800405 	stb	r2,16(sp)
    3dbc:	003d3306 	br	328c <___vfprintf_internal_r+0x10a4>
    3dc0:	d9014f17 	ldw	r4,1340(sp)
    3dc4:	b00b883a 	mov	r5,r22
    3dc8:	d9800c04 	addi	r6,sp,48
    3dcc:	00021900 	call	2190 <__sprint_r>
    3dd0:	103abd1e 	bne	r2,zero,28c8 <___vfprintf_internal_r+0x6e0>
    3dd4:	003abb06 	br	28c4 <___vfprintf_internal_r+0x6dc>
    3dd8:	38800017 	ldw	r2,0(r7)
    3ddc:	39c00104 	addi	r7,r7,4
    3de0:	d9c14015 	stw	r7,1280(sp)
    3de4:	d9414b17 	ldw	r5,1324(sp)
    3de8:	d9c14017 	ldw	r7,1280(sp)
    3dec:	11400015 	stw	r5,0(r2)
    3df0:	00395906 	br	2358 <___vfprintf_internal_r+0x170>
    3df4:	980f883a 	mov	r7,r19
    3df8:	dcc14515 	stw	r19,1300(sp)
    3dfc:	d8014615 	stw	zero,1304(sp)
    3e00:	003b9b06 	br	2c70 <___vfprintf_internal_r+0xa88>
    3e04:	0027883a 	mov	r19,zero
    3e08:	00397806 	br	23ec <___vfprintf_internal_r+0x204>
    3e0c:	00c00074 	movhi	r3,1
    3e10:	18c93b04 	addi	r3,r3,9452
    3e14:	100f883a 	mov	r7,r2
    3e18:	d8814515 	stw	r2,1300(sp)
    3e1c:	d8c14115 	stw	r3,1284(sp)
    3e20:	0039e006 	br	25a4 <___vfprintf_internal_r+0x3bc>
    3e24:	00800074 	movhi	r2,1
    3e28:	10893a04 	addi	r2,r2,9448
    3e2c:	d8814115 	stw	r2,1284(sp)
    3e30:	003d1c06 	br	32a4 <___vfprintf_internal_r+0x10bc>
    3e34:	d9414d17 	ldw	r5,1332(sp)
    3e38:	00801984 	movi	r2,102
    3e3c:	28804926 	beq	r5,r2,3f64 <___vfprintf_internal_r+0x1d7c>
    3e40:	200f883a 	mov	r7,r4
    3e44:	24805716 	blt	r4,r18,3fa4 <___vfprintf_internal_r+0x1dbc>
    3e48:	d9414c17 	ldw	r5,1328(sp)
    3e4c:	2880004c 	andi	r2,r5,1
    3e50:	10000126 	beq	r2,zero,3e58 <___vfprintf_internal_r+0x1c70>
    3e54:	21c00044 	addi	r7,r4,1
    3e58:	d9c14515 	stw	r7,1300(sp)
    3e5c:	383fcc0e 	bge	r7,zero,3d90 <___vfprintf_internal_r+0x1ba8>
    3e60:	d8014515 	stw	zero,1300(sp)
    3e64:	003fca06 	br	3d90 <___vfprintf_internal_r+0x1ba8>
    3e68:	d9000517 	ldw	r4,20(sp)
    3e6c:	00bfff04 	movi	r2,-4
    3e70:	1100480e 	bge	r2,r4,3f94 <___vfprintf_internal_r+0x1dac>
    3e74:	99004716 	blt	r19,r4,3f94 <___vfprintf_internal_r+0x1dac>
    3e78:	d8c14d15 	stw	r3,1332(sp)
    3e7c:	003ff006 	br	3e40 <___vfprintf_internal_r+0x1c58>
    3e80:	d8800717 	ldw	r2,28(sp)
    3e84:	14bf8b2e 	bgeu	r2,r18,3cb4 <___vfprintf_internal_r+0x1acc>
    3e88:	9007883a 	mov	r3,r18
    3e8c:	01000c04 	movi	r4,48
    3e90:	11000005 	stb	r4,0(r2)
    3e94:	10800044 	addi	r2,r2,1
    3e98:	d8800715 	stw	r2,28(sp)
    3e9c:	18bffc1e 	bne	r3,r2,3e90 <___vfprintf_internal_r+0x1ca8>
    3ea0:	003f8406 	br	3cb4 <___vfprintf_internal_r+0x1acc>
    3ea4:	d8814117 	ldw	r2,1284(sp)
    3ea8:	10c00007 	ldb	r3,0(r2)
    3eac:	00800c04 	movi	r2,48
    3eb0:	18805b26 	beq	r3,r2,4020 <___vfprintf_internal_r+0x1e38>
    3eb4:	d9000517 	ldw	r4,20(sp)
    3eb8:	9125883a 	add	r18,r18,r4
    3ebc:	003f7506 	br	3c94 <___vfprintf_internal_r+0x1aac>
    3ec0:	d9014c17 	ldw	r4,1328(sp)
    3ec4:	2080004c 	andi	r2,r4,1
    3ec8:	1005003a 	cmpeq	r2,r2,zero
    3ecc:	103f6a26 	beq	r2,zero,3c78 <___vfprintf_internal_r+0x1a90>
    3ed0:	d8800717 	ldw	r2,28(sp)
    3ed4:	003f7706 	br	3cb4 <___vfprintf_internal_r+0x1acc>
    3ed8:	d9c14515 	stw	r7,1300(sp)
    3edc:	38004d16 	blt	r7,zero,4014 <___vfprintf_internal_r+0x1e2c>
    3ee0:	dc814715 	stw	r18,1308(sp)
    3ee4:	d8014615 	stw	zero,1304(sp)
    3ee8:	003b6106 	br	2c70 <___vfprintf_internal_r+0xa88>
    3eec:	d9014f17 	ldw	r4,1340(sp)
    3ef0:	d8800504 	addi	r2,sp,20
    3ef4:	d8800115 	stw	r2,4(sp)
    3ef8:	d8c00604 	addi	r3,sp,24
    3efc:	d8800704 	addi	r2,sp,28
    3f00:	800b883a 	mov	r5,r16
    3f04:	880d883a 	mov	r6,r17
    3f08:	01c000c4 	movi	r7,3
    3f0c:	d8c00215 	stw	r3,8(sp)
    3f10:	d8800315 	stw	r2,12(sp)
    3f14:	dcc00015 	stw	r19,0(sp)
    3f18:	9829883a 	mov	r20,r19
    3f1c:	0005c740 	call	5c74 <_dtoa_r>
    3f20:	d8814115 	stw	r2,1284(sp)
    3f24:	003f5106 	br	3c6c <___vfprintf_internal_r+0x1a84>
    3f28:	d8c14217 	ldw	r3,1288(sp)
    3f2c:	d9014317 	ldw	r4,1292(sp)
    3f30:	07000b44 	movi	fp,45
    3f34:	1821883a 	mov	r16,r3
    3f38:	2460003c 	xorhi	r17,r4,32768
    3f3c:	003f3106 	br	3c04 <___vfprintf_internal_r+0x1a1c>
    3f40:	9d000044 	addi	r20,r19,1
    3f44:	003f3906 	br	3c2c <___vfprintf_internal_r+0x1a44>
    3f48:	983f251e 	bne	r19,zero,3be0 <___vfprintf_internal_r+0x19f8>
    3f4c:	04c00044 	movi	r19,1
    3f50:	003f2306 	br	3be0 <___vfprintf_internal_r+0x19f8>
    3f54:	04c00184 	movi	r19,6
    3f58:	003f2106 	br	3be0 <___vfprintf_internal_r+0x19f8>
    3f5c:	d8014515 	stw	zero,1300(sp)
    3f60:	003eee06 	br	3b1c <___vfprintf_internal_r+0x1934>
    3f64:	200f883a 	mov	r7,r4
    3f68:	0100370e 	bge	zero,r4,4048 <___vfprintf_internal_r+0x1e60>
    3f6c:	9800031e 	bne	r19,zero,3f7c <___vfprintf_internal_r+0x1d94>
    3f70:	d9814c17 	ldw	r6,1328(sp)
    3f74:	3080004c 	andi	r2,r6,1
    3f78:	103fb726 	beq	r2,zero,3e58 <___vfprintf_internal_r+0x1c70>
    3f7c:	20800044 	addi	r2,r4,1
    3f80:	98a7883a 	add	r19,r19,r2
    3f84:	dcc14515 	stw	r19,1300(sp)
    3f88:	980f883a 	mov	r7,r19
    3f8c:	983f800e 	bge	r19,zero,3d90 <___vfprintf_internal_r+0x1ba8>
    3f90:	003fb306 	br	3e60 <___vfprintf_internal_r+0x1c78>
    3f94:	d9814d17 	ldw	r6,1332(sp)
    3f98:	31bfff84 	addi	r6,r6,-2
    3f9c:	d9814d15 	stw	r6,1332(sp)
    3fa0:	003f4c06 	br	3cd4 <___vfprintf_internal_r+0x1aec>
    3fa4:	0100180e 	bge	zero,r4,4008 <___vfprintf_internal_r+0x1e20>
    3fa8:	00800044 	movi	r2,1
    3fac:	1485883a 	add	r2,r2,r18
    3fb0:	d8814515 	stw	r2,1300(sp)
    3fb4:	100f883a 	mov	r7,r2
    3fb8:	103f750e 	bge	r2,zero,3d90 <___vfprintf_internal_r+0x1ba8>
    3fbc:	003fa806 	br	3e60 <___vfprintf_internal_r+0x1c78>
    3fc0:	80c00c04 	addi	r3,r16,48
    3fc4:	00800c04 	movi	r2,48
    3fc8:	d8c008c5 	stb	r3,35(sp)
    3fcc:	d9800804 	addi	r6,sp,32
    3fd0:	d8c00904 	addi	r3,sp,36
    3fd4:	d8800885 	stb	r2,34(sp)
    3fd8:	003f6506 	br	3d70 <___vfprintf_internal_r+0x1b88>
    3fdc:	d9014c17 	ldw	r4,1328(sp)
    3fe0:	2084703a 	and	r2,r4,r2
    3fe4:	103f9c26 	beq	r2,zero,3e58 <___vfprintf_internal_r+0x1c70>
    3fe8:	003f6606 	br	3d84 <___vfprintf_internal_r+0x1b9c>
    3fec:	d9800804 	addi	r6,sp,32
    3ff0:	d8c00884 	addi	r3,sp,34
    3ff4:	003f5e06 	br	3d70 <___vfprintf_internal_r+0x1b88>
    3ff8:	00800b44 	movi	r2,45
    3ffc:	0121c83a 	sub	r16,zero,r4
    4000:	d8800845 	stb	r2,33(sp)
    4004:	003f3d06 	br	3cfc <___vfprintf_internal_r+0x1b14>
    4008:	00800084 	movi	r2,2
    400c:	1105c83a 	sub	r2,r2,r4
    4010:	003fe606 	br	3fac <___vfprintf_internal_r+0x1dc4>
    4014:	d8014515 	stw	zero,1300(sp)
    4018:	dc814715 	stw	r18,1308(sp)
    401c:	003fb106 	br	3ee4 <___vfprintf_internal_r+0x1cfc>
    4020:	000d883a 	mov	r6,zero
    4024:	000f883a 	mov	r7,zero
    4028:	8009883a 	mov	r4,r16
    402c:	880b883a 	mov	r5,r17
    4030:	000e7c40 	call	e7c4 <__nedf2>
    4034:	103f9f26 	beq	r2,zero,3eb4 <___vfprintf_internal_r+0x1ccc>
    4038:	00800044 	movi	r2,1
    403c:	1509c83a 	sub	r4,r2,r20
    4040:	d9000515 	stw	r4,20(sp)
    4044:	003f9b06 	br	3eb4 <___vfprintf_internal_r+0x1ccc>
    4048:	98000d1e 	bne	r19,zero,4080 <___vfprintf_internal_r+0x1e98>
    404c:	d8c14c17 	ldw	r3,1328(sp)
    4050:	1880004c 	andi	r2,r3,1
    4054:	10000a1e 	bne	r2,zero,4080 <___vfprintf_internal_r+0x1e98>
    4058:	01000044 	movi	r4,1
    405c:	200f883a 	mov	r7,r4
    4060:	d9014515 	stw	r4,1300(sp)
    4064:	003f4a06 	br	3d90 <___vfprintf_internal_r+0x1ba8>
    4068:	3cc00017 	ldw	r19,0(r7)
    406c:	39c00104 	addi	r7,r7,4
    4070:	983d0e0e 	bge	r19,zero,34ac <___vfprintf_internal_r+0x12c4>
    4074:	b8c00007 	ldb	r3,0(r23)
    4078:	04ffffc4 	movi	r19,-1
    407c:	0038d906 	br	23e4 <___vfprintf_internal_r+0x1fc>
    4080:	9cc00084 	addi	r19,r19,2
    4084:	dcc14515 	stw	r19,1300(sp)
    4088:	980f883a 	mov	r7,r19
    408c:	983f400e 	bge	r19,zero,3d90 <___vfprintf_internal_r+0x1ba8>
    4090:	003f7306 	br	3e60 <___vfprintf_internal_r+0x1c78>

00004094 <__vfprintf_internal>:
    4094:	00800074 	movhi	r2,1
    4098:	10915204 	addi	r2,r2,17736
    409c:	2013883a 	mov	r9,r4
    40a0:	11000017 	ldw	r4,0(r2)
    40a4:	2805883a 	mov	r2,r5
    40a8:	300f883a 	mov	r7,r6
    40ac:	480b883a 	mov	r5,r9
    40b0:	100d883a 	mov	r6,r2
    40b4:	00021e81 	jmpi	21e8 <___vfprintf_internal_r>

000040b8 <__svfscanf_r>:
    40b8:	deff4e04 	addi	sp,sp,-712
    40bc:	dd80ae15 	stw	r22,696(sp)
    40c0:	dd00ac15 	stw	r20,688(sp)
    40c4:	dc40a915 	stw	r17,676(sp)
    40c8:	dc00a815 	stw	r16,672(sp)
    40cc:	dfc0b115 	stw	ra,708(sp)
    40d0:	df00b015 	stw	fp,704(sp)
    40d4:	ddc0af15 	stw	r23,700(sp)
    40d8:	dd40ad15 	stw	r21,692(sp)
    40dc:	dcc0ab15 	stw	r19,684(sp)
    40e0:	dc80aa15 	stw	r18,680(sp)
    40e4:	202d883a 	mov	r22,r4
    40e8:	2821883a 	mov	r16,r5
    40ec:	d9c0a415 	stw	r7,656(sp)
    40f0:	3029883a 	mov	r20,r6
    40f4:	d800a215 	stw	zero,648(sp)
    40f8:	0023883a 	mov	r17,zero
    40fc:	d800a115 	stw	zero,644(sp)
    4100:	d800a015 	stw	zero,640(sp)
    4104:	a1000007 	ldb	r4,0(r20)
    4108:	d9000115 	stw	r4,4(sp)
    410c:	20001f26 	beq	r4,zero,418c <__svfscanf_r+0xd4>
    4110:	04800074 	movhi	r18,1
    4114:	94915604 	addi	r18,r18,17752
    4118:	91800017 	ldw	r6,0(r18)
    411c:	a5000044 	addi	r20,r20,1
    4120:	3107883a 	add	r3,r6,r4
    4124:	18800003 	ldbu	r2,0(r3)
    4128:	1080020c 	andi	r2,r2,8
    412c:	10002426 	beq	r2,zero,41c0 <__svfscanf_r+0x108>
    4130:	80c00117 	ldw	r3,4(r16)
    4134:	00c00e0e 	bge	zero,r3,4170 <__svfscanf_r+0xb8>
    4138:	81400017 	ldw	r5,0(r16)
    413c:	90800017 	ldw	r2,0(r18)
    4140:	28c00003 	ldbu	r3,0(r5)
    4144:	1887883a 	add	r3,r3,r2
    4148:	19000003 	ldbu	r4,0(r3)
    414c:	2100020c 	andi	r4,r4,8
    4150:	203fec26 	beq	r4,zero,4104 <__svfscanf_r+0x4c>
    4154:	80c00117 	ldw	r3,4(r16)
    4158:	29800044 	addi	r6,r5,1
    415c:	8c400044 	addi	r17,r17,1
    4160:	18ffffc4 	addi	r3,r3,-1
    4164:	81800015 	stw	r6,0(r16)
    4168:	80c00115 	stw	r3,4(r16)
    416c:	00fff216 	blt	zero,r3,4138 <__svfscanf_r+0x80>
    4170:	b009883a 	mov	r4,r22
    4174:	800b883a 	mov	r5,r16
    4178:	00018e00 	call	18e0 <__srefill_r>
    417c:	103fee26 	beq	r2,zero,4138 <__svfscanf_r+0x80>
    4180:	a1000007 	ldb	r4,0(r20)
    4184:	d9000115 	stw	r4,4(sp)
    4188:	203fe11e 	bne	r4,zero,4110 <__svfscanf_r+0x58>
    418c:	d880a217 	ldw	r2,648(sp)
    4190:	dfc0b117 	ldw	ra,708(sp)
    4194:	df00b017 	ldw	fp,704(sp)
    4198:	ddc0af17 	ldw	r23,700(sp)
    419c:	dd80ae17 	ldw	r22,696(sp)
    41a0:	dd40ad17 	ldw	r21,692(sp)
    41a4:	dd00ac17 	ldw	r20,688(sp)
    41a8:	dcc0ab17 	ldw	r19,684(sp)
    41ac:	dc80aa17 	ldw	r18,680(sp)
    41b0:	dc40a917 	ldw	r17,676(sp)
    41b4:	dc00a817 	ldw	r16,672(sp)
    41b8:	dec0b204 	addi	sp,sp,712
    41bc:	f800283a 	ret
    41c0:	00800944 	movi	r2,37
    41c4:	20801626 	beq	r4,r2,4220 <__svfscanf_r+0x168>
    41c8:	80800117 	ldw	r2,4(r16)
    41cc:	00800b0e 	bge	zero,r2,41fc <__svfscanf_r+0x144>
    41d0:	81000017 	ldw	r4,0(r16)
    41d4:	a0ffffc7 	ldb	r3,-1(r20)
    41d8:	20800003 	ldbu	r2,0(r4)
    41dc:	10ffeb1e 	bne	r2,r3,418c <__svfscanf_r+0xd4>
    41e0:	80c00117 	ldw	r3,4(r16)
    41e4:	21800044 	addi	r6,r4,1
    41e8:	8c400044 	addi	r17,r17,1
    41ec:	18ffffc4 	addi	r3,r3,-1
    41f0:	80c00115 	stw	r3,4(r16)
    41f4:	81800015 	stw	r6,0(r16)
    41f8:	003fc206 	br	4104 <__svfscanf_r+0x4c>
    41fc:	b009883a 	mov	r4,r22
    4200:	800b883a 	mov	r5,r16
    4204:	00018e00 	call	18e0 <__srefill_r>
    4208:	103ff126 	beq	r2,zero,41d0 <__svfscanf_r+0x118>
    420c:	d900a217 	ldw	r4,648(sp)
    4210:	2004c91e 	bne	r4,zero,5538 <__svfscanf_r+0x1480>
    4214:	00bfffc4 	movi	r2,-1
    4218:	d880a215 	stw	r2,648(sp)
    421c:	003fdb06 	br	418c <__svfscanf_r+0xd4>
    4220:	d800a315 	stw	zero,652(sp)
    4224:	0027883a 	mov	r19,zero
    4228:	a0c00003 	ldbu	r3,0(r20)
    422c:	00801e04 	movi	r2,120
    4230:	a5000044 	addi	r20,r20,1
    4234:	19403fcc 	andi	r5,r3,255
    4238:	2940201c 	xori	r5,r5,128
    423c:	297fe004 	addi	r5,r5,-128
    4240:	10c08036 	bltu	r2,r3,4444 <__svfscanf_r+0x38c>
    4244:	18c5883a 	add	r2,r3,r3
    4248:	1085883a 	add	r2,r2,r2
    424c:	00c00034 	movhi	r3,0
    4250:	18d09804 	addi	r3,r3,16992
    4254:	10c5883a 	add	r2,r2,r3
    4258:	11000017 	ldw	r4,0(r2)
    425c:	2000683a 	jmp	r4
    4260:	00004214 	movui	zero,264
    4264:	00004444 	movi	zero,273
    4268:	00004444 	movi	zero,273
    426c:	00004444 	movi	zero,273
    4270:	00004444 	movi	zero,273
    4274:	00004444 	movi	zero,273
    4278:	00004444 	movi	zero,273
    427c:	00004444 	movi	zero,273
    4280:	00004444 	movi	zero,273
    4284:	00004444 	movi	zero,273
    4288:	00004444 	movi	zero,273
    428c:	00004444 	movi	zero,273
    4290:	00004444 	movi	zero,273
    4294:	00004444 	movi	zero,273
    4298:	00004444 	movi	zero,273
    429c:	00004444 	movi	zero,273
    42a0:	00004444 	movi	zero,273
    42a4:	00004444 	movi	zero,273
    42a8:	00004444 	movi	zero,273
    42ac:	00004444 	movi	zero,273
    42b0:	00004444 	movi	zero,273
    42b4:	00004444 	movi	zero,273
    42b8:	00004444 	movi	zero,273
    42bc:	00004444 	movi	zero,273
    42c0:	00004444 	movi	zero,273
    42c4:	00004444 	movi	zero,273
    42c8:	00004444 	movi	zero,273
    42cc:	00004444 	movi	zero,273
    42d0:	00004444 	movi	zero,273
    42d4:	00004444 	movi	zero,273
    42d8:	00004444 	movi	zero,273
    42dc:	00004444 	movi	zero,273
    42e0:	00004444 	movi	zero,273
    42e4:	00004444 	movi	zero,273
    42e8:	00004444 	movi	zero,273
    42ec:	00004444 	movi	zero,273
    42f0:	00004444 	movi	zero,273
    42f4:	000041c8 	cmpgei	zero,zero,263
    42f8:	00004444 	movi	zero,273
    42fc:	00004444 	movi	zero,273
    4300:	00004444 	movi	zero,273
    4304:	00004444 	movi	zero,273
    4308:	00005468 	cmpgeui	zero,zero,337
    430c:	00004444 	movi	zero,273
    4310:	00004444 	movi	zero,273
    4314:	00004444 	movi	zero,273
    4318:	00004444 	movi	zero,273
    431c:	00004444 	movi	zero,273
    4320:	00004e64 	muli	zero,zero,313
    4324:	00004e64 	muli	zero,zero,313
    4328:	00004e64 	muli	zero,zero,313
    432c:	00004e64 	muli	zero,zero,313
    4330:	00004e64 	muli	zero,zero,313
    4334:	00004e64 	muli	zero,zero,313
    4338:	00004e64 	muli	zero,zero,313
    433c:	00004e64 	muli	zero,zero,313
    4340:	00004e64 	muli	zero,zero,313
    4344:	00004e64 	muli	zero,zero,313
    4348:	00004444 	movi	zero,273
    434c:	00004444 	movi	zero,273
    4350:	00004444 	movi	zero,273
    4354:	00004444 	movi	zero,273
    4358:	00004444 	movi	zero,273
    435c:	00004444 	movi	zero,273
    4360:	00004444 	movi	zero,273
    4364:	00004444 	movi	zero,273
    4368:	00004444 	movi	zero,273
    436c:	00004444 	movi	zero,273
    4370:	000055e4 	muli	zero,zero,343
    4374:	000055dc 	xori	zero,zero,343
    4378:	00004444 	movi	zero,273
    437c:	000055dc 	xori	zero,zero,343
    4380:	00004444 	movi	zero,273
    4384:	00004444 	movi	zero,273
    4388:	00004444 	movi	zero,273
    438c:	00004444 	movi	zero,273
    4390:	00005674 	movhi	zero,345
    4394:	00004444 	movi	zero,273
    4398:	00004444 	movi	zero,273
    439c:	0000562c 	andhi	zero,zero,344
    43a0:	00004444 	movi	zero,273
    43a4:	00004444 	movi	zero,273
    43a8:	00004444 	movi	zero,273
    43ac:	00004444 	movi	zero,273
    43b0:	00004444 	movi	zero,273
    43b4:	00004444 	movi	zero,273
    43b8:	00004444 	movi	zero,273
    43bc:	00004444 	movi	zero,273
    43c0:	00005470 	cmpltui	zero,zero,337
    43c4:	00004444 	movi	zero,273
    43c8:	00004444 	movi	zero,273
    43cc:	00005610 	cmplti	zero,zero,344
    43d0:	00004444 	movi	zero,273
    43d4:	00004444 	movi	zero,273
    43d8:	00004444 	movi	zero,273
    43dc:	00004444 	movi	zero,273
    43e0:	00004444 	movi	zero,273
    43e4:	00004444 	movi	zero,273
    43e8:	00004444 	movi	zero,273
    43ec:	00005604 	movi	zero,344
    43f0:	000055e8 	cmpgeui	zero,zero,343
    43f4:	000055dc 	xori	zero,zero,343
    43f8:	000055dc 	xori	zero,zero,343
    43fc:	000055dc 	xori	zero,zero,343
    4400:	000055d4 	movui	zero,343
    4404:	000056c8 	cmpgei	zero,zero,347
    4408:	00004444 	movi	zero,273
    440c:	00004444 	movi	zero,273
    4410:	000056b4 	movhi	zero,346
    4414:	00004444 	movi	zero,273
    4418:	0000564c 	andi	zero,zero,345
    441c:	00005630 	cmpltui	zero,zero,344
    4420:	00005684 	movi	zero,346
    4424:	00004444 	movi	zero,273
    4428:	00004444 	movi	zero,273
    442c:	0000567c 	xorhi	zero,zero,345
    4430:	00004444 	movi	zero,273
    4434:	000049b4 	movhi	zero,294
    4438:	00004444 	movi	zero,273
    443c:	00004444 	movi	zero,273
    4440:	00005470 	cmpltui	zero,zero,337
    4444:	2987883a 	add	r3,r5,r6
    4448:	18800003 	ldbu	r2,0(r3)
    444c:	1080004c 	andi	r2,r2,1
    4450:	1005003a 	cmpeq	r2,r2,zero
    4454:	10002c26 	beq	r2,zero,4508 <__svfscanf_r+0x450>
    4458:	01000074 	movhi	r4,1
    445c:	212cdd04 	addi	r4,r4,-19596
    4460:	00800284 	movi	r2,10
    4464:	d900a015 	stw	r4,640(sp)
    4468:	054000c4 	movi	r21,3
    446c:	d880a115 	stw	r2,644(sp)
    4470:	80c00117 	ldw	r3,4(r16)
    4474:	00c14a0e 	bge	zero,r3,49a0 <__svfscanf_r+0x8e8>
    4478:	9880100c 	andi	r2,r19,64
    447c:	10001326 	beq	r2,zero,44cc <__svfscanf_r+0x414>
    4480:	00800104 	movi	r2,4
    4484:	157f1f36 	bltu	r2,r21,4104 <__svfscanf_r+0x4c>
    4488:	ad45883a 	add	r2,r21,r21
    448c:	1085883a 	add	r2,r2,r2
    4490:	00c00034 	movhi	r3,0
    4494:	18d12904 	addi	r3,r3,17572
    4498:	10c5883a 	add	r2,r2,r3
    449c:	11000017 	ldw	r4,0(r2)
    44a0:	2000683a 	jmp	r4
    44a4:	00004510 	cmplti	zero,zero,276
    44a8:	0000461c 	xori	zero,zero,280
    44ac:	00004690 	cmplti	zero,zero,282
    44b0:	0000497c 	xorhi	zero,zero,293
    44b4:	000047c8 	cmpgei	zero,zero,287
    44b8:	b009883a 	mov	r4,r22
    44bc:	800b883a 	mov	r5,r16
    44c0:	00018e00 	call	18e0 <__srefill_r>
    44c4:	103f511e 	bne	r2,zero,420c <__svfscanf_r+0x154>
    44c8:	8c400044 	addi	r17,r17,1
    44cc:	81400017 	ldw	r5,0(r16)
    44d0:	90800017 	ldw	r2,0(r18)
    44d4:	28c00003 	ldbu	r3,0(r5)
    44d8:	1887883a 	add	r3,r3,r2
    44dc:	19000003 	ldbu	r4,0(r3)
    44e0:	2100020c 	andi	r4,r4,8
    44e4:	203fe626 	beq	r4,zero,4480 <__svfscanf_r+0x3c8>
    44e8:	80c00117 	ldw	r3,4(r16)
    44ec:	18ffffc4 	addi	r3,r3,-1
    44f0:	80c00115 	stw	r3,4(r16)
    44f4:	00fff00e 	bge	zero,r3,44b8 <__svfscanf_r+0x400>
    44f8:	29800044 	addi	r6,r5,1
    44fc:	8c400044 	addi	r17,r17,1
    4500:	81800015 	stw	r6,0(r16)
    4504:	003ff106 	br	44cc <__svfscanf_r+0x414>
    4508:	9cc00054 	ori	r19,r19,1
    450c:	003fd206 	br	4458 <__svfscanf_r+0x3a0>
    4510:	d8c0a317 	ldw	r3,652(sp)
    4514:	1800021e 	bne	r3,zero,4520 <__svfscanf_r+0x468>
    4518:	01000044 	movi	r4,1
    451c:	d900a315 	stw	r4,652(sp)
    4520:	9880004c 	andi	r2,r19,1
    4524:	1005003a 	cmpeq	r2,r2,zero
    4528:	1003d91e 	bne	r2,zero,5490 <__svfscanf_r+0x13d8>
    452c:	9d40040c 	andi	r21,r19,16
    4530:	a839003a 	cmpeq	fp,r21,zero
    4534:	e0042526 	beq	fp,zero,55cc <__svfscanf_r+0x1514>
    4538:	d880a417 	ldw	r2,656(sp)
    453c:	14c00017 	ldw	r19,0(r2)
    4540:	10800104 	addi	r2,r2,4
    4544:	d880a415 	stw	r2,656(sp)
    4548:	d8c0a317 	ldw	r3,652(sp)
    454c:	18041a26 	beq	r3,zero,55b8 <__svfscanf_r+0x1500>
    4550:	01000074 	movhi	r4,1
    4554:	21115704 	addi	r4,r4,17756
    4558:	20800017 	ldw	r2,0(r4)
    455c:	103f2b26 	beq	r2,zero,420c <__svfscanf_r+0x154>
    4560:	d8804404 	addi	r2,sp,272
    4564:	0025883a 	mov	r18,zero
    4568:	d880a615 	stw	r2,664(sp)
    456c:	05ffffc4 	movi	r23,-1
    4570:	80800017 	ldw	r2,0(r16)
    4574:	80c00117 	ldw	r3,4(r16)
    4578:	d900a617 	ldw	r4,664(sp)
    457c:	12000003 	ldbu	r8,0(r2)
    4580:	18ffffc4 	addi	r3,r3,-1
    4584:	11800044 	addi	r6,r2,1
    4588:	248f883a 	add	r7,r4,r18
    458c:	80c00115 	stw	r3,4(r16)
    4590:	81800015 	stw	r6,0(r16)
    4594:	3a000005 	stb	r8,0(r7)
    4598:	d9000204 	addi	r4,sp,8
    459c:	000b883a 	mov	r5,zero
    45a0:	01800204 	movi	r6,8
    45a4:	00017d00 	call	17d0 <memset>
    45a8:	d980a617 	ldw	r6,664(sp)
    45ac:	94800044 	addi	r18,r18,1
    45b0:	d8800204 	addi	r2,sp,8
    45b4:	b009883a 	mov	r4,r22
    45b8:	980b883a 	mov	r5,r19
    45bc:	900f883a 	mov	r7,r18
    45c0:	d8800015 	stw	r2,0(sp)
    45c4:	00083900 	call	8390 <_mbrtowc_r>
    45c8:	1007883a 	mov	r3,r2
    45cc:	15ff0f26 	beq	r2,r23,420c <__svfscanf_r+0x154>
    45d0:	1003f11e 	bne	r2,zero,5598 <__svfscanf_r+0x14e0>
    45d4:	a800011e 	bne	r21,zero,45dc <__svfscanf_r+0x524>
    45d8:	98000015 	stw	zero,0(r19)
    45dc:	d8c0a317 	ldw	r3,652(sp)
    45e0:	8ca3883a 	add	r17,r17,r18
    45e4:	18ffffc4 	addi	r3,r3,-1
    45e8:	d8c0a315 	stw	r3,652(sp)
    45ec:	e0000126 	beq	fp,zero,45f4 <__svfscanf_r+0x53c>
    45f0:	9cc00104 	addi	r19,r19,4
    45f4:	0025883a 	mov	r18,zero
    45f8:	80c00117 	ldw	r3,4(r16)
    45fc:	00c3e90e 	bge	zero,r3,55a4 <__svfscanf_r+0x14ec>
    4600:	d900a317 	ldw	r4,652(sp)
    4604:	2003ec26 	beq	r4,zero,55b8 <__svfscanf_r+0x1500>
    4608:	00c00074 	movhi	r3,1
    460c:	18d15704 	addi	r3,r3,17756
    4610:	18800017 	ldw	r2,0(r3)
    4614:	90bfd61e 	bne	r18,r2,4570 <__svfscanf_r+0x4b8>
    4618:	003efc06 	br	420c <__svfscanf_r+0x154>
    461c:	d880a317 	ldw	r2,652(sp)
    4620:	1000021e 	bne	r2,zero,462c <__svfscanf_r+0x574>
    4624:	00ffffc4 	movi	r3,-1
    4628:	d8c0a315 	stw	r3,652(sp)
    462c:	9880040c 	andi	r2,r19,16
    4630:	10036526 	beq	r2,zero,53c8 <__svfscanf_r+0x1310>
    4634:	0027883a 	mov	r19,zero
    4638:	dd400404 	addi	r21,sp,16
    463c:	81000017 	ldw	r4,0(r16)
    4640:	20800003 	ldbu	r2,0(r4)
    4644:	a885883a 	add	r2,r21,r2
    4648:	10c00007 	ldb	r3,0(r2)
    464c:	1803be26 	beq	r3,zero,5548 <__svfscanf_r+0x1490>
    4650:	80c00117 	ldw	r3,4(r16)
    4654:	21800044 	addi	r6,r4,1
    4658:	d900a317 	ldw	r4,652(sp)
    465c:	18ffffc4 	addi	r3,r3,-1
    4660:	9cc00044 	addi	r19,r19,1
    4664:	81800015 	stw	r6,0(r16)
    4668:	80c00115 	stw	r3,4(r16)
    466c:	24c3b626 	beq	r4,r19,5548 <__svfscanf_r+0x1490>
    4670:	00fff216 	blt	zero,r3,463c <__svfscanf_r+0x584>
    4674:	b009883a 	mov	r4,r22
    4678:	800b883a 	mov	r5,r16
    467c:	00018e00 	call	18e0 <__srefill_r>
    4680:	103fee26 	beq	r2,zero,463c <__svfscanf_r+0x584>
    4684:	983ee126 	beq	r19,zero,420c <__svfscanf_r+0x154>
    4688:	8ce3883a 	add	r17,r17,r19
    468c:	003e9d06 	br	4104 <__svfscanf_r+0x4c>
    4690:	d900a317 	ldw	r4,652(sp)
    4694:	2000021e 	bne	r4,zero,46a0 <__svfscanf_r+0x5e8>
    4698:	00bfffc4 	movi	r2,-1
    469c:	d880a315 	stw	r2,652(sp)
    46a0:	9880004c 	andi	r2,r19,1
    46a4:	1005003a 	cmpeq	r2,r2,zero
    46a8:	1001f41e 	bne	r2,zero,4e7c <__svfscanf_r+0xdc4>
    46ac:	9dc0040c 	andi	r23,r19,16
    46b0:	b807003a 	cmpeq	r3,r23,zero
    46b4:	d8c0a515 	stw	r3,660(sp)
    46b8:	1803b21e 	bne	r3,zero,5584 <__svfscanf_r+0x14cc>
    46bc:	dd400104 	addi	r21,sp,4
    46c0:	0027883a 	mov	r19,zero
    46c4:	073fffc4 	movi	fp,-1
    46c8:	81400017 	ldw	r5,0(r16)
    46cc:	90800017 	ldw	r2,0(r18)
    46d0:	29c00003 	ldbu	r7,0(r5)
    46d4:	38c03fcc 	andi	r3,r7,255
    46d8:	1887883a 	add	r3,r3,r2
    46dc:	19000003 	ldbu	r4,0(r3)
    46e0:	2100020c 	andi	r4,r4,8
    46e4:	2000321e 	bne	r4,zero,47b0 <__svfscanf_r+0x6f8>
    46e8:	d8c0a317 	ldw	r3,652(sp)
    46ec:	18003026 	beq	r3,zero,47b0 <__svfscanf_r+0x6f8>
    46f0:	00800074 	movhi	r2,1
    46f4:	10915704 	addi	r2,r2,17756
    46f8:	10c00017 	ldw	r3,0(r2)
    46fc:	98fec326 	beq	r19,r3,420c <__svfscanf_r+0x154>
    4700:	d8c04404 	addi	r3,sp,272
    4704:	80800117 	ldw	r2,4(r16)
    4708:	d8c0a615 	stw	r3,664(sp)
    470c:	d900a617 	ldw	r4,664(sp)
    4710:	10ffffc4 	addi	r3,r2,-1
    4714:	29800044 	addi	r6,r5,1
    4718:	80c00115 	stw	r3,4(r16)
    471c:	24c5883a 	add	r2,r4,r19
    4720:	81800015 	stw	r6,0(r16)
    4724:	d9000204 	addi	r4,sp,8
    4728:	000b883a 	mov	r5,zero
    472c:	01800204 	movi	r6,8
    4730:	11c00005 	stb	r7,0(r2)
    4734:	00017d00 	call	17d0 <memset>
    4738:	d980a617 	ldw	r6,664(sp)
    473c:	9cc00044 	addi	r19,r19,1
    4740:	d8800204 	addi	r2,sp,8
    4744:	b009883a 	mov	r4,r22
    4748:	a80b883a 	mov	r5,r21
    474c:	980f883a 	mov	r7,r19
    4750:	d8800015 	stw	r2,0(sp)
    4754:	00083900 	call	8390 <_mbrtowc_r>
    4758:	1007883a 	mov	r3,r2
    475c:	173eab26 	beq	r2,fp,420c <__svfscanf_r+0x154>
    4760:	1003851e 	bne	r2,zero,5578 <__svfscanf_r+0x14c0>
    4764:	a8000015 	stw	zero,0(r21)
    4768:	a9000017 	ldw	r4,0(r21)
    476c:	00080940 	call	8094 <iswspace>
    4770:	1003781e 	bne	r2,zero,5554 <__svfscanf_r+0x149c>
    4774:	d900a317 	ldw	r4,652(sp)
    4778:	d880a517 	ldw	r2,660(sp)
    477c:	8ce3883a 	add	r17,r17,r19
    4780:	213fffc4 	addi	r4,r4,-1
    4784:	d900a315 	stw	r4,652(sp)
    4788:	10000126 	beq	r2,zero,4790 <__svfscanf_r+0x6d8>
    478c:	ad400104 	addi	r21,r21,4
    4790:	0027883a 	mov	r19,zero
    4794:	80c00117 	ldw	r3,4(r16)
    4798:	00ffcb16 	blt	zero,r3,46c8 <__svfscanf_r+0x610>
    479c:	b009883a 	mov	r4,r22
    47a0:	800b883a 	mov	r5,r16
    47a4:	00018e00 	call	18e0 <__srefill_r>
    47a8:	103fc726 	beq	r2,zero,46c8 <__svfscanf_r+0x610>
    47ac:	983e971e 	bne	r19,zero,420c <__svfscanf_r+0x154>
    47b0:	b83e541e 	bne	r23,zero,4104 <__svfscanf_r+0x4c>
    47b4:	d900a217 	ldw	r4,648(sp)
    47b8:	a8000015 	stw	zero,0(r21)
    47bc:	21000044 	addi	r4,r4,1
    47c0:	d900a215 	stw	r4,648(sp)
    47c4:	003e4f06 	br	4104 <__svfscanf_r+0x4c>
    47c8:	d900a317 	ldw	r4,652(sp)
    47cc:	00805704 	movi	r2,348
    47d0:	20ffffc4 	addi	r3,r4,-1
    47d4:	10c1ed2e 	bgeu	r2,r3,4f8c <__svfscanf_r+0xed4>
    47d8:	00805744 	movi	r2,349
    47dc:	21bfa8c4 	addi	r6,r4,-349
    47e0:	9d41e014 	ori	r21,r19,1920
    47e4:	d880a315 	stw	r2,652(sp)
    47e8:	d8c04404 	addi	r3,sp,272
    47ec:	d8c0a615 	stw	r3,664(sp)
    47f0:	182f883a 	mov	r23,r3
    47f4:	d8009f15 	stw	zero,636(sp)
    47f8:	d8009e15 	stw	zero,632(sp)
    47fc:	d8009d15 	stw	zero,628(sp)
    4800:	d8009c15 	stw	zero,624(sp)
    4804:	0039883a 	mov	fp,zero
    4808:	0025883a 	mov	r18,zero
    480c:	80800017 	ldw	r2,0(r16)
    4810:	11400003 	ldbu	r5,0(r2)
    4814:	00801384 	movi	r2,78
    4818:	28fff544 	addi	r3,r5,-43
    481c:	18c03fcc 	andi	r3,r3,255
    4820:	10c07d36 	bltu	r2,r3,4a18 <__svfscanf_r+0x960>
    4824:	18c5883a 	add	r2,r3,r3
    4828:	1085883a 	add	r2,r2,r2
    482c:	00c00034 	movhi	r3,0
    4830:	18d21004 	addi	r3,r3,18496
    4834:	10c5883a 	add	r2,r2,r3
    4838:	11000017 	ldw	r4,0(r2)
    483c:	2000683a 	jmp	r4
    4840:	000049d0 	cmplti	zero,zero,295
    4844:	00004a18 	cmpnei	zero,zero,296
    4848:	000049d0 	cmplti	zero,zero,295
    484c:	00004b64 	muli	zero,zero,301
    4850:	00004a18 	cmpnei	zero,zero,296
    4854:	00004b9c 	xori	zero,zero,302
    4858:	00004bd0 	cmplti	zero,zero,303
    485c:	00004bd0 	cmplti	zero,zero,303
    4860:	00004bd0 	cmplti	zero,zero,303
    4864:	00004bd0 	cmplti	zero,zero,303
    4868:	00004bd0 	cmplti	zero,zero,303
    486c:	00004bd0 	cmplti	zero,zero,303
    4870:	00004bd0 	cmplti	zero,zero,303
    4874:	00004bd0 	cmplti	zero,zero,303
    4878:	00004bd0 	cmplti	zero,zero,303
    487c:	00004a18 	cmpnei	zero,zero,296
    4880:	00004a18 	cmpnei	zero,zero,296
    4884:	00004a18 	cmpnei	zero,zero,296
    4888:	00004a18 	cmpnei	zero,zero,296
    488c:	00004a18 	cmpnei	zero,zero,296
    4890:	00004a18 	cmpnei	zero,zero,296
    4894:	00004a18 	cmpnei	zero,zero,296
    4898:	00004bf0 	cmpltui	zero,zero,303
    489c:	00004a18 	cmpnei	zero,zero,296
    48a0:	00004a18 	cmpnei	zero,zero,296
    48a4:	00004a18 	cmpnei	zero,zero,296
    48a8:	00004c00 	call	4c0 <cmd_help+0xc4>
    48ac:	00004c9c 	xori	zero,zero,306
    48b0:	00004a18 	cmpnei	zero,zero,296
    48b4:	00004a18 	cmpnei	zero,zero,296
    48b8:	00004cb8 	rdprs	zero,zero,306
    48bc:	00004a18 	cmpnei	zero,zero,296
    48c0:	00004a18 	cmpnei	zero,zero,296
    48c4:	00004a18 	cmpnei	zero,zero,296
    48c8:	00004a18 	cmpnei	zero,zero,296
    48cc:	00004ce4 	muli	zero,zero,307
    48d0:	00004a18 	cmpnei	zero,zero,296
    48d4:	00004a18 	cmpnei	zero,zero,296
    48d8:	00004a18 	cmpnei	zero,zero,296
    48dc:	00004a18 	cmpnei	zero,zero,296
    48e0:	00004a18 	cmpnei	zero,zero,296
    48e4:	00004d38 	rdprs	zero,zero,308
    48e8:	00004a18 	cmpnei	zero,zero,296
    48ec:	00004a18 	cmpnei	zero,zero,296
    48f0:	00004a18 	cmpnei	zero,zero,296
    48f4:	00004a18 	cmpnei	zero,zero,296
    48f8:	00004e48 	cmpgei	zero,zero,313
    48fc:	00004a18 	cmpnei	zero,zero,296
    4900:	00004a18 	cmpnei	zero,zero,296
    4904:	00004a18 	cmpnei	zero,zero,296
    4908:	00004a18 	cmpnei	zero,zero,296
    490c:	00004a18 	cmpnei	zero,zero,296
    4910:	00004a18 	cmpnei	zero,zero,296
    4914:	00004a18 	cmpnei	zero,zero,296
    4918:	00004bf0 	cmpltui	zero,zero,303
    491c:	00004a18 	cmpnei	zero,zero,296
    4920:	00004a18 	cmpnei	zero,zero,296
    4924:	00004a18 	cmpnei	zero,zero,296
    4928:	00004c00 	call	4c0 <cmd_help+0xc4>
    492c:	00004c9c 	xori	zero,zero,306
    4930:	00004a18 	cmpnei	zero,zero,296
    4934:	00004a18 	cmpnei	zero,zero,296
    4938:	00004cb8 	rdprs	zero,zero,306
    493c:	00004a18 	cmpnei	zero,zero,296
    4940:	00004a18 	cmpnei	zero,zero,296
    4944:	00004a18 	cmpnei	zero,zero,296
    4948:	00004a18 	cmpnei	zero,zero,296
    494c:	00004ce4 	muli	zero,zero,307
    4950:	00004a18 	cmpnei	zero,zero,296
    4954:	00004a18 	cmpnei	zero,zero,296
    4958:	00004a18 	cmpnei	zero,zero,296
    495c:	00004a18 	cmpnei	zero,zero,296
    4960:	00004a18 	cmpnei	zero,zero,296
    4964:	00004d38 	rdprs	zero,zero,308
    4968:	00004a18 	cmpnei	zero,zero,296
    496c:	00004a18 	cmpnei	zero,zero,296
    4970:	00004a18 	cmpnei	zero,zero,296
    4974:	00004a18 	cmpnei	zero,zero,296
    4978:	00004e48 	cmpgei	zero,zero,313
    497c:	d900a317 	ldw	r4,652(sp)
    4980:	00805704 	movi	r2,348
    4984:	20ffffc4 	addi	r3,r4,-1
    4988:	10c18c2e 	bgeu	r2,r3,4fbc <__svfscanf_r+0xf04>
    498c:	00805744 	movi	r2,349
    4990:	257fa8c4 	addi	r21,r4,-349
    4994:	9c836014 	ori	r18,r19,3456
    4998:	d880a315 	stw	r2,652(sp)
    499c:	0001a106 	br	5024 <__svfscanf_r+0xf6c>
    49a0:	b009883a 	mov	r4,r22
    49a4:	800b883a 	mov	r5,r16
    49a8:	00018e00 	call	18e0 <__srefill_r>
    49ac:	103eb226 	beq	r2,zero,4478 <__svfscanf_r+0x3c0>
    49b0:	003e1606 	br	420c <__svfscanf_r+0x154>
    49b4:	01000284 	movi	r4,10
    49b8:	00800074 	movhi	r2,1
    49bc:	10ae3d04 	addi	r2,r2,-18188
    49c0:	054000c4 	movi	r21,3
    49c4:	d900a115 	stw	r4,644(sp)
    49c8:	d880a015 	stw	r2,640(sp)
    49cc:	003ea806 	br	4470 <__svfscanf_r+0x3b8>
    49d0:	a880200c 	andi	r2,r21,128
    49d4:	10001026 	beq	r2,zero,4a18 <__svfscanf_r+0x960>
    49d8:	00bfdfc4 	movi	r2,-129
    49dc:	a8aa703a 	and	r21,r21,r2
    49e0:	b9400005 	stb	r5,0(r23)
    49e4:	bdc00044 	addi	r23,r23,1
    49e8:	80c00117 	ldw	r3,4(r16)
    49ec:	8c400044 	addi	r17,r17,1
    49f0:	18bfffc4 	addi	r2,r3,-1
    49f4:	80800115 	stw	r2,4(r16)
    49f8:	0080610e 	bge	zero,r2,4b80 <__svfscanf_r+0xac8>
    49fc:	80800017 	ldw	r2,0(r16)
    4a00:	10800044 	addi	r2,r2,1
    4a04:	80800015 	stw	r2,0(r16)
    4a08:	d880a317 	ldw	r2,652(sp)
    4a0c:	10bfffc4 	addi	r2,r2,-1
    4a10:	d880a315 	stw	r2,652(sp)
    4a14:	103f7d1e 	bne	r2,zero,480c <__svfscanf_r+0x754>
    4a18:	d8c09e17 	ldw	r3,632(sp)
    4a1c:	18000226 	beq	r3,zero,4a28 <__svfscanf_r+0x970>
    4a20:	00bfbfc4 	movi	r2,-257
    4a24:	a8aa703a 	and	r21,r21,r2
    4a28:	90ffffc4 	addi	r3,r18,-1
    4a2c:	00800044 	movi	r2,1
    4a30:	10c0cd2e 	bgeu	r2,r3,4d68 <__svfscanf_r+0xcb0>
    4a34:	e1003fcc 	andi	r4,fp,255
    4a38:	2100201c 	xori	r4,r4,128
    4a3c:	213fe004 	addi	r4,r4,-128
    4a40:	20ffffc4 	addi	r3,r4,-1
    4a44:	00800184 	movi	r2,6
    4a48:	10c01736 	bltu	r2,r3,4aa8 <__svfscanf_r+0x9f0>
    4a4c:	00c00084 	movi	r3,2
    4a50:	1900880e 	bge	r3,r4,4c74 <__svfscanf_r+0xbbc>
    4a54:	008000c4 	movi	r2,3
    4a58:	1100130e 	bge	r2,r4,4aa8 <__svfscanf_r+0x9f0>
    4a5c:	e4ffffc4 	addi	r19,fp,-1
    4a60:	b825883a 	mov	r18,r23
    4a64:	94bfffc4 	addi	r18,r18,-1
    4a68:	91400007 	ldb	r5,0(r18)
    4a6c:	b009883a 	mov	r4,r22
    4a70:	800d883a 	mov	r6,r16
    4a74:	000bf140 	call	bf14 <_ungetc_r>
    4a78:	9cffffc4 	addi	r19,r19,-1
    4a7c:	98c03fcc 	andi	r3,r19,255
    4a80:	18c0201c 	xori	r3,r3,128
    4a84:	18ffe004 	addi	r3,r3,-128
    4a88:	00800084 	movi	r2,2
    4a8c:	18bff51e 	bne	r3,r2,4a64 <__svfscanf_r+0x9ac>
    4a90:	e0bfff04 	addi	r2,fp,-4
    4a94:	10803fcc 	andi	r2,r2,255
    4a98:	b887c83a 	sub	r3,r23,r2
    4a9c:	8885c83a 	sub	r2,r17,r2
    4aa0:	147fffc4 	addi	r17,r2,-1
    4aa4:	1dffffc4 	addi	r23,r3,-1
    4aa8:	a880400c 	andi	r2,r21,256
    4aac:	10001226 	beq	r2,zero,4af8 <__svfscanf_r+0xa40>
    4ab0:	a881000c 	andi	r2,r21,1024
    4ab4:	1000651e 	bne	r2,zero,4c4c <__svfscanf_r+0xb94>
    4ab8:	bdffffc4 	addi	r23,r23,-1
    4abc:	b9400007 	ldb	r5,0(r23)
    4ac0:	00801944 	movi	r2,101
    4ac4:	8c7fffc4 	addi	r17,r17,-1
    4ac8:	28800826 	beq	r5,r2,4aec <__svfscanf_r+0xa34>
    4acc:	00801144 	movi	r2,69
    4ad0:	28800626 	beq	r5,r2,4aec <__svfscanf_r+0xa34>
    4ad4:	bdffffc4 	addi	r23,r23,-1
    4ad8:	b009883a 	mov	r4,r22
    4adc:	800d883a 	mov	r6,r16
    4ae0:	000bf140 	call	bf14 <_ungetc_r>
    4ae4:	b9400007 	ldb	r5,0(r23)
    4ae8:	8c7fffc4 	addi	r17,r17,-1
    4aec:	b009883a 	mov	r4,r22
    4af0:	800d883a 	mov	r6,r16
    4af4:	000bf140 	call	bf14 <_ungetc_r>
    4af8:	a880040c 	andi	r2,r21,16
    4afc:	103d811e 	bne	r2,zero,4104 <__svfscanf_r+0x4c>
    4b00:	a8c1800c 	andi	r3,r21,1536
    4b04:	00810004 	movi	r2,1024
    4b08:	b8000005 	stb	zero,0(r23)
    4b0c:	1880bb26 	beq	r3,r2,4dfc <__svfscanf_r+0xd44>
    4b10:	d8809d17 	ldw	r2,628(sp)
    4b14:	1000a61e 	bne	r2,zero,4db0 <__svfscanf_r+0xcf8>
    4b18:	d940a617 	ldw	r5,664(sp)
    4b1c:	b009883a 	mov	r4,r22
    4b20:	000d883a 	mov	r6,zero
    4b24:	0009d500 	call	9d50 <_strtod_r>
    4b28:	a900004c 	andi	r4,r21,1
    4b2c:	2009003a 	cmpeq	r4,r4,zero
    4b30:	1025883a 	mov	r18,r2
    4b34:	1827883a 	mov	r19,r3
    4b38:	2000951e 	bne	r4,zero,4d90 <__svfscanf_r+0xcd8>
    4b3c:	d8c0a417 	ldw	r3,656(sp)
    4b40:	18800017 	ldw	r2,0(r3)
    4b44:	1d400104 	addi	r21,r3,4
    4b48:	14c00115 	stw	r19,4(r2)
    4b4c:	14800015 	stw	r18,0(r2)
    4b50:	d8c0a217 	ldw	r3,648(sp)
    4b54:	dd40a415 	stw	r21,656(sp)
    4b58:	18c00044 	addi	r3,r3,1
    4b5c:	d8c0a215 	stw	r3,648(sp)
    4b60:	003d6806 	br	4104 <__svfscanf_r+0x4c>
    4b64:	a880800c 	andi	r2,r21,512
    4b68:	103fab26 	beq	r2,zero,4a18 <__svfscanf_r+0x960>
    4b6c:	d9009e17 	ldw	r4,632(sp)
    4b70:	00bf5fc4 	movi	r2,-641
    4b74:	a8aa703a 	and	r21,r21,r2
    4b78:	d9009f15 	stw	r4,636(sp)
    4b7c:	003f9806 	br	49e0 <__svfscanf_r+0x928>
    4b80:	b009883a 	mov	r4,r22
    4b84:	800b883a 	mov	r5,r16
    4b88:	d980a715 	stw	r6,668(sp)
    4b8c:	00018e00 	call	18e0 <__srefill_r>
    4b90:	d980a717 	ldw	r6,668(sp)
    4b94:	103f9c26 	beq	r2,zero,4a08 <__svfscanf_r+0x950>
    4b98:	003f9f06 	br	4a18 <__svfscanf_r+0x960>
    4b9c:	a880400c 	andi	r2,r21,256
    4ba0:	10000b26 	beq	r2,zero,4bd0 <__svfscanf_r+0xb18>
    4ba4:	00bfdfc4 	movi	r2,-129
    4ba8:	a8aa703a 	and	r21,r21,r2
    4bac:	d8809e17 	ldw	r2,632(sp)
    4bb0:	10800044 	addi	r2,r2,1
    4bb4:	d8809e15 	stw	r2,632(sp)
    4bb8:	303f8b26 	beq	r6,zero,49e8 <__svfscanf_r+0x930>
    4bbc:	d8c0a317 	ldw	r3,652(sp)
    4bc0:	31bfffc4 	addi	r6,r6,-1
    4bc4:	18c00044 	addi	r3,r3,1
    4bc8:	d8c0a315 	stw	r3,652(sp)
    4bcc:	003f8606 	br	49e8 <__svfscanf_r+0x930>
    4bd0:	e0803fcc 	andi	r2,fp,255
    4bd4:	1080201c 	xori	r2,r2,128
    4bd8:	10bfe004 	addi	r2,r2,-128
    4bdc:	9085883a 	add	r2,r18,r2
    4be0:	103f8d1e 	bne	r2,zero,4a18 <__svfscanf_r+0x960>
    4be4:	00bf9fc4 	movi	r2,-385
    4be8:	a8aa703a 	and	r21,r21,r2
    4bec:	003f7c06 	br	49e0 <__svfscanf_r+0x928>
    4bf0:	00800044 	movi	r2,1
    4bf4:	90bf881e 	bne	r18,r2,4a18 <__svfscanf_r+0x960>
    4bf8:	04800084 	movi	r18,2
    4bfc:	003f7806 	br	49e0 <__svfscanf_r+0x928>
    4c00:	a8c1400c 	andi	r3,r21,1280
    4c04:	00810004 	movi	r2,1024
    4c08:	18800426 	beq	r3,r2,4c1c <__svfscanf_r+0xb64>
    4c0c:	a884703a 	and	r2,r21,r2
    4c10:	103f8126 	beq	r2,zero,4a18 <__svfscanf_r+0x960>
    4c14:	d8809e17 	ldw	r2,632(sp)
    4c18:	103f8326 	beq	r2,zero,4a28 <__svfscanf_r+0x970>
    4c1c:	a880800c 	andi	r2,r21,512
    4c20:	1000051e 	bne	r2,zero,4c38 <__svfscanf_r+0xb80>
    4c24:	d8c09e17 	ldw	r3,632(sp)
    4c28:	d9009f17 	ldw	r4,636(sp)
    4c2c:	ddc09c15 	stw	r23,624(sp)
    4c30:	1907c83a 	sub	r3,r3,r4
    4c34:	d8c09d15 	stw	r3,628(sp)
    4c38:	00be7fc4 	movi	r2,-1537
    4c3c:	a884703a 	and	r2,r21,r2
    4c40:	15406014 	ori	r21,r2,384
    4c44:	d8009e15 	stw	zero,632(sp)
    4c48:	003f6506 	br	49e0 <__svfscanf_r+0x928>
    4c4c:	d900a617 	ldw	r4,664(sp)
    4c50:	25fd4e2e 	bgeu	r4,r23,418c <__svfscanf_r+0xd4>
    4c54:	bdffffc4 	addi	r23,r23,-1
    4c58:	b9400007 	ldb	r5,0(r23)
    4c5c:	b009883a 	mov	r4,r22
    4c60:	800d883a 	mov	r6,r16
    4c64:	000bf140 	call	bf14 <_ungetc_r>
    4c68:	d880a617 	ldw	r2,664(sp)
    4c6c:	15fff936 	bltu	r2,r23,4c54 <__svfscanf_r+0xb9c>
    4c70:	003d4606 	br	418c <__svfscanf_r+0xd4>
    4c74:	d900a617 	ldw	r4,664(sp)
    4c78:	25fd442e 	bgeu	r4,r23,418c <__svfscanf_r+0xd4>
    4c7c:	bdffffc4 	addi	r23,r23,-1
    4c80:	b9400007 	ldb	r5,0(r23)
    4c84:	b009883a 	mov	r4,r22
    4c88:	800d883a 	mov	r6,r16
    4c8c:	000bf140 	call	bf14 <_ungetc_r>
    4c90:	d8c0a617 	ldw	r3,664(sp)
    4c94:	1dfff936 	bltu	r3,r23,4c7c <__svfscanf_r+0xbc4>
    4c98:	003d3c06 	br	418c <__svfscanf_r+0xd4>
    4c9c:	e0c03fcc 	andi	r3,fp,255
    4ca0:	18c0201c 	xori	r3,r3,128
    4ca4:	18ffe004 	addi	r3,r3,-128
    4ca8:	00800084 	movi	r2,2
    4cac:	18bf5a1e 	bne	r3,r2,4a18 <__svfscanf_r+0x960>
    4cb0:	070000c4 	movi	fp,3
    4cb4:	003f4a06 	br	49e0 <__svfscanf_r+0x928>
    4cb8:	e0c03fcc 	andi	r3,fp,255
    4cbc:	18c0201c 	xori	r3,r3,128
    4cc0:	18ffe004 	addi	r3,r3,-128
    4cc4:	1800231e 	bne	r3,zero,4d54 <__svfscanf_r+0xc9c>
    4cc8:	a8c1c00c 	andi	r3,r21,1792
    4ccc:	0081c004 	movi	r2,1792
    4cd0:	18bf511e 	bne	r3,r2,4a18 <__svfscanf_r+0x960>
    4cd4:	00be1fc4 	movi	r2,-1921
    4cd8:	a8aa703a 	and	r21,r21,r2
    4cdc:	07000044 	movi	fp,1
    4ce0:	003f3f06 	br	49e0 <__svfscanf_r+0x928>
    4ce4:	9000101e 	bne	r18,zero,4d28 <__svfscanf_r+0xc70>
    4ce8:	a8c1c00c 	andi	r3,r21,1792
    4cec:	0081c004 	movi	r2,1792
    4cf0:	18800926 	beq	r3,r2,4d18 <__svfscanf_r+0xc60>
    4cf4:	e0c03fcc 	andi	r3,fp,255
    4cf8:	18c0201c 	xori	r3,r3,128
    4cfc:	18ffe004 	addi	r3,r3,-128
    4d00:	00800044 	movi	r2,1
    4d04:	18800226 	beq	r3,r2,4d10 <__svfscanf_r+0xc58>
    4d08:	00800104 	movi	r2,4
    4d0c:	18bf421e 	bne	r3,r2,4a18 <__svfscanf_r+0x960>
    4d10:	e7000044 	addi	fp,fp,1
    4d14:	003f3206 	br	49e0 <__svfscanf_r+0x928>
    4d18:	00be1fc4 	movi	r2,-1921
    4d1c:	a8aa703a 	and	r21,r21,r2
    4d20:	04800044 	movi	r18,1
    4d24:	003f2e06 	br	49e0 <__svfscanf_r+0x928>
    4d28:	00800084 	movi	r2,2
    4d2c:	90bff11e 	bne	r18,r2,4cf4 <__svfscanf_r+0xc3c>
    4d30:	048000c4 	movi	r18,3
    4d34:	003f2a06 	br	49e0 <__svfscanf_r+0x928>
    4d38:	e0c03fcc 	andi	r3,fp,255
    4d3c:	18c0201c 	xori	r3,r3,128
    4d40:	18ffe004 	addi	r3,r3,-128
    4d44:	00800184 	movi	r2,6
    4d48:	18bf331e 	bne	r3,r2,4a18 <__svfscanf_r+0x960>
    4d4c:	070001c4 	movi	fp,7
    4d50:	003f2306 	br	49e0 <__svfscanf_r+0x928>
    4d54:	008000c4 	movi	r2,3
    4d58:	18bfed26 	beq	r3,r2,4d10 <__svfscanf_r+0xc58>
    4d5c:	00800144 	movi	r2,5
    4d60:	18bfeb26 	beq	r3,r2,4d10 <__svfscanf_r+0xc58>
    4d64:	003f2c06 	br	4a18 <__svfscanf_r+0x960>
    4d68:	d900a617 	ldw	r4,664(sp)
    4d6c:	25fd072e 	bgeu	r4,r23,418c <__svfscanf_r+0xd4>
    4d70:	bdffffc4 	addi	r23,r23,-1
    4d74:	b9400007 	ldb	r5,0(r23)
    4d78:	b009883a 	mov	r4,r22
    4d7c:	800d883a 	mov	r6,r16
    4d80:	000bf140 	call	bf14 <_ungetc_r>
    4d84:	d880a617 	ldw	r2,664(sp)
    4d88:	15fff936 	bltu	r2,r23,4d70 <__svfscanf_r+0xcb8>
    4d8c:	003cff06 	br	418c <__svfscanf_r+0xd4>
    4d90:	a880008c 	andi	r2,r21,2
    4d94:	10002026 	beq	r2,zero,4e18 <__svfscanf_r+0xd60>
    4d98:	d900a417 	ldw	r4,656(sp)
    4d9c:	20800017 	ldw	r2,0(r4)
    4da0:	25400104 	addi	r21,r4,4
    4da4:	10c00115 	stw	r3,4(r2)
    4da8:	14800015 	stw	r18,0(r2)
    4dac:	003f6806 	br	4b50 <__svfscanf_r+0xa98>
    4db0:	d8c09c17 	ldw	r3,624(sp)
    4db4:	b009883a 	mov	r4,r22
    4db8:	000d883a 	mov	r6,zero
    4dbc:	19400044 	addi	r5,r3,1
    4dc0:	01c00284 	movi	r7,10
    4dc4:	000b3740 	call	b374 <_strtol_r>
    4dc8:	d9009d17 	ldw	r4,628(sp)
    4dcc:	110dc83a 	sub	r6,r2,r4
    4dd0:	d8c0a617 	ldw	r3,664(sp)
    4dd4:	d9009c17 	ldw	r4,624(sp)
    4dd8:	188054c4 	addi	r2,r3,339
    4ddc:	20800236 	bltu	r4,r2,4de8 <__svfscanf_r+0xd30>
    4de0:	18805484 	addi	r2,r3,338
    4de4:	d8809c15 	stw	r2,624(sp)
    4de8:	d9009c17 	ldw	r4,624(sp)
    4dec:	01400074 	movhi	r5,1
    4df0:	29495204 	addi	r5,r5,9544
    4df4:	0001b300 	call	1b30 <sprintf>
    4df8:	003f4706 	br	4b18 <__svfscanf_r+0xa60>
    4dfc:	d8c09e17 	ldw	r3,632(sp)
    4e00:	d9009f17 	ldw	r4,636(sp)
    4e04:	1905c83a 	sub	r2,r3,r4
    4e08:	103f4326 	beq	r2,zero,4b18 <__svfscanf_r+0xa60>
    4e0c:	008dc83a 	sub	r6,zero,r2
    4e10:	ddc09c15 	stw	r23,624(sp)
    4e14:	003fee06 	br	4dd0 <__svfscanf_r+0xd18>
    4e18:	d880a417 	ldw	r2,656(sp)
    4e1c:	9009883a 	mov	r4,r18
    4e20:	180b883a 	mov	r5,r3
    4e24:	15c00017 	ldw	r23,0(r2)
    4e28:	15400104 	addi	r21,r2,4
    4e2c:	0009c100 	call	9c10 <__isnand>
    4e30:	10021c1e 	bne	r2,zero,56a4 <__svfscanf_r+0x15ec>
    4e34:	980b883a 	mov	r5,r19
    4e38:	9009883a 	mov	r4,r18
    4e3c:	000ec3c0 	call	ec3c <__truncdfsf2>
    4e40:	b8800015 	stw	r2,0(r23)
    4e44:	003f4206 	br	4b50 <__svfscanf_r+0xa98>
    4e48:	e0c03fcc 	andi	r3,fp,255
    4e4c:	18c0201c 	xori	r3,r3,128
    4e50:	18ffe004 	addi	r3,r3,-128
    4e54:	008001c4 	movi	r2,7
    4e58:	18beef1e 	bne	r3,r2,4a18 <__svfscanf_r+0x960>
    4e5c:	07000204 	movi	fp,8
    4e60:	003edf06 	br	49e0 <__svfscanf_r+0x928>
    4e64:	d900a317 	ldw	r4,652(sp)
    4e68:	208002a4 	muli	r2,r4,10
    4e6c:	1145883a 	add	r2,r2,r5
    4e70:	10bff404 	addi	r2,r2,-48
    4e74:	d880a315 	stw	r2,652(sp)
    4e78:	003ceb06 	br	4228 <__svfscanf_r+0x170>
    4e7c:	9880040c 	andi	r2,r19,16
    4e80:	10001426 	beq	r2,zero,4ed4 <__svfscanf_r+0xe1c>
    4e84:	0027883a 	mov	r19,zero
    4e88:	00000906 	br	4eb0 <__svfscanf_r+0xdf8>
    4e8c:	80c00117 	ldw	r3,4(r16)
    4e90:	d880a317 	ldw	r2,652(sp)
    4e94:	29800044 	addi	r6,r5,1
    4e98:	18ffffc4 	addi	r3,r3,-1
    4e9c:	9cc00044 	addi	r19,r19,1
    4ea0:	81800015 	stw	r6,0(r16)
    4ea4:	80c00115 	stw	r3,4(r16)
    4ea8:	14fdf726 	beq	r2,r19,4688 <__svfscanf_r+0x5d0>
    4eac:	00c02c0e 	bge	zero,r3,4f60 <__svfscanf_r+0xea8>
    4eb0:	81400017 	ldw	r5,0(r16)
    4eb4:	90800017 	ldw	r2,0(r18)
    4eb8:	28c00003 	ldbu	r3,0(r5)
    4ebc:	1887883a 	add	r3,r3,r2
    4ec0:	19000003 	ldbu	r4,0(r3)
    4ec4:	2100020c 	andi	r4,r4,8
    4ec8:	203ff026 	beq	r4,zero,4e8c <__svfscanf_r+0xdd4>
    4ecc:	8ce3883a 	add	r17,r17,r19
    4ed0:	003c8c06 	br	4104 <__svfscanf_r+0x4c>
    4ed4:	d8c0a417 	ldw	r3,656(sp)
    4ed8:	1d400017 	ldw	r21,0(r3)
    4edc:	a827883a 	mov	r19,r21
    4ee0:	00000e06 	br	4f1c <__svfscanf_r+0xe64>
    4ee4:	80800117 	ldw	r2,4(r16)
    4ee8:	d900a317 	ldw	r4,652(sp)
    4eec:	29800044 	addi	r6,r5,1
    4ef0:	10ffffc4 	addi	r3,r2,-1
    4ef4:	213fffc4 	addi	r4,r4,-1
    4ef8:	d900a315 	stw	r4,652(sp)
    4efc:	80c00115 	stw	r3,4(r16)
    4f00:	28800003 	ldbu	r2,0(r5)
    4f04:	98800005 	stb	r2,0(r19)
    4f08:	81800015 	stw	r6,0(r16)
    4f0c:	9cc00044 	addi	r19,r19,1
    4f10:	20000926 	beq	r4,zero,4f38 <__svfscanf_r+0xe80>
    4f14:	80800117 	ldw	r2,4(r16)
    4f18:	0080170e 	bge	zero,r2,4f78 <__svfscanf_r+0xec0>
    4f1c:	81400017 	ldw	r5,0(r16)
    4f20:	90800017 	ldw	r2,0(r18)
    4f24:	28c00003 	ldbu	r3,0(r5)
    4f28:	1887883a 	add	r3,r3,r2
    4f2c:	19000003 	ldbu	r4,0(r3)
    4f30:	2100020c 	andi	r4,r4,8
    4f34:	203feb26 	beq	r4,zero,4ee4 <__svfscanf_r+0xe2c>
    4f38:	9d45c83a 	sub	r2,r19,r21
    4f3c:	d8c0a217 	ldw	r3,648(sp)
    4f40:	88a3883a 	add	r17,r17,r2
    4f44:	d880a417 	ldw	r2,656(sp)
    4f48:	18c00044 	addi	r3,r3,1
    4f4c:	d8c0a215 	stw	r3,648(sp)
    4f50:	10800104 	addi	r2,r2,4
    4f54:	d880a415 	stw	r2,656(sp)
    4f58:	98000005 	stb	zero,0(r19)
    4f5c:	003c6906 	br	4104 <__svfscanf_r+0x4c>
    4f60:	b009883a 	mov	r4,r22
    4f64:	800b883a 	mov	r5,r16
    4f68:	00018e00 	call	18e0 <__srefill_r>
    4f6c:	103fd026 	beq	r2,zero,4eb0 <__svfscanf_r+0xdf8>
    4f70:	8ce3883a 	add	r17,r17,r19
    4f74:	003c6306 	br	4104 <__svfscanf_r+0x4c>
    4f78:	b009883a 	mov	r4,r22
    4f7c:	800b883a 	mov	r5,r16
    4f80:	00018e00 	call	18e0 <__srefill_r>
    4f84:	103fe526 	beq	r2,zero,4f1c <__svfscanf_r+0xe64>
    4f88:	003feb06 	br	4f38 <__svfscanf_r+0xe80>
    4f8c:	d900a317 	ldw	r4,652(sp)
    4f90:	9d41e014 	ori	r21,r19,1920
    4f94:	2000821e 	bne	r4,zero,51a0 <__svfscanf_r+0x10e8>
    4f98:	d8c04404 	addi	r3,sp,272
    4f9c:	182f883a 	mov	r23,r3
    4fa0:	0039883a 	mov	fp,zero
    4fa4:	d8c0a615 	stw	r3,664(sp)
    4fa8:	d8009c15 	stw	zero,624(sp)
    4fac:	d8009d15 	stw	zero,628(sp)
    4fb0:	d8009f15 	stw	zero,636(sp)
    4fb4:	d8009e15 	stw	zero,632(sp)
    4fb8:	003e9e06 	br	4a34 <__svfscanf_r+0x97c>
    4fbc:	d900a317 	ldw	r4,652(sp)
    4fc0:	9c836014 	ori	r18,r19,3456
    4fc4:	2000161e 	bne	r4,zero,5020 <__svfscanf_r+0xf68>
    4fc8:	d8804404 	addi	r2,sp,272
    4fcc:	d880a615 	stw	r2,664(sp)
    4fd0:	002f883a 	mov	r23,zero
    4fd4:	1027883a 	mov	r19,r2
    4fd8:	9080400c 	andi	r2,r18,256
    4fdc:	10000926 	beq	r2,zero,5004 <__svfscanf_r+0xf4c>
    4fe0:	d8c0a617 	ldw	r3,664(sp)
    4fe4:	1cc0052e 	bgeu	r3,r19,4ffc <__svfscanf_r+0xf44>
    4fe8:	9cffffc4 	addi	r19,r19,-1
    4fec:	99400007 	ldb	r5,0(r19)
    4ff0:	b009883a 	mov	r4,r22
    4ff4:	800d883a 	mov	r6,r16
    4ff8:	000bf140 	call	bf14 <_ungetc_r>
    4ffc:	d900a617 	ldw	r4,664(sp)
    5000:	24fc6226 	beq	r4,r19,418c <__svfscanf_r+0xd4>
    5004:	9080040c 	andi	r2,r18,16
    5008:	10006726 	beq	r2,zero,51a8 <__svfscanf_r+0x10f0>
    500c:	d8c0a617 	ldw	r3,664(sp)
    5010:	98c5c83a 	sub	r2,r19,r3
    5014:	b885883a 	add	r2,r23,r2
    5018:	88a3883a 	add	r17,r17,r2
    501c:	003c3906 	br	4104 <__svfscanf_r+0x4c>
    5020:	002b883a 	mov	r21,zero
    5024:	d8c04404 	addi	r3,sp,272
    5028:	d8c0a615 	stw	r3,664(sp)
    502c:	002f883a 	mov	r23,zero
    5030:	1827883a 	mov	r19,r3
    5034:	81800017 	ldw	r6,0(r16)
    5038:	00c01344 	movi	r3,77
    503c:	31400003 	ldbu	r5,0(r6)
    5040:	28bff544 	addi	r2,r5,-43
    5044:	10803fcc 	andi	r2,r2,255
    5048:	18bfe336 	bltu	r3,r2,4fd8 <__svfscanf_r+0xf20>
    504c:	1085883a 	add	r2,r2,r2
    5050:	1085883a 	add	r2,r2,r2
    5054:	00c00034 	movhi	r3,0
    5058:	18d41a04 	addi	r3,r3,20584
    505c:	10c5883a 	add	r2,r2,r3
    5060:	11000017 	ldw	r4,0(r2)
    5064:	2000683a 	jmp	r4
    5068:	000051fc 	xorhi	zero,zero,327
    506c:	00004fd8 	cmpnei	zero,zero,319
    5070:	000051fc 	xorhi	zero,zero,327
    5074:	00004fd8 	cmpnei	zero,zero,319
    5078:	00004fd8 	cmpnei	zero,zero,319
    507c:	00005240 	call	524 <cmd_help+0x128>
    5080:	0000533c 	xorhi	zero,zero,332
    5084:	0000533c 	xorhi	zero,zero,332
    5088:	0000533c 	xorhi	zero,zero,332
    508c:	0000533c 	xorhi	zero,zero,332
    5090:	0000533c 	xorhi	zero,zero,332
    5094:	0000533c 	xorhi	zero,zero,332
    5098:	0000533c 	xorhi	zero,zero,332
    509c:	00005364 	muli	zero,zero,333
    50a0:	00005364 	muli	zero,zero,333
    50a4:	00004fd8 	cmpnei	zero,zero,319
    50a8:	00004fd8 	cmpnei	zero,zero,319
    50ac:	00004fd8 	cmpnei	zero,zero,319
    50b0:	00004fd8 	cmpnei	zero,zero,319
    50b4:	00004fd8 	cmpnei	zero,zero,319
    50b8:	00004fd8 	cmpnei	zero,zero,319
    50bc:	00004fd8 	cmpnei	zero,zero,319
    50c0:	00005394 	movui	zero,334
    50c4:	00005394 	movui	zero,334
    50c8:	00005394 	movui	zero,334
    50cc:	00005394 	movui	zero,334
    50d0:	00005394 	movui	zero,334
    50d4:	00005394 	movui	zero,334
    50d8:	00004fd8 	cmpnei	zero,zero,319
    50dc:	00004fd8 	cmpnei	zero,zero,319
    50e0:	00004fd8 	cmpnei	zero,zero,319
    50e4:	00004fd8 	cmpnei	zero,zero,319
    50e8:	00004fd8 	cmpnei	zero,zero,319
    50ec:	00004fd8 	cmpnei	zero,zero,319
    50f0:	00004fd8 	cmpnei	zero,zero,319
    50f4:	00004fd8 	cmpnei	zero,zero,319
    50f8:	00004fd8 	cmpnei	zero,zero,319
    50fc:	00004fd8 	cmpnei	zero,zero,319
    5100:	00004fd8 	cmpnei	zero,zero,319
    5104:	00004fd8 	cmpnei	zero,zero,319
    5108:	00004fd8 	cmpnei	zero,zero,319
    510c:	00004fd8 	cmpnei	zero,zero,319
    5110:	00004fd8 	cmpnei	zero,zero,319
    5114:	00004fd8 	cmpnei	zero,zero,319
    5118:	00004fd8 	cmpnei	zero,zero,319
    511c:	000053a4 	muli	zero,zero,334
    5120:	00004fd8 	cmpnei	zero,zero,319
    5124:	00004fd8 	cmpnei	zero,zero,319
    5128:	00004fd8 	cmpnei	zero,zero,319
    512c:	00004fd8 	cmpnei	zero,zero,319
    5130:	00004fd8 	cmpnei	zero,zero,319
    5134:	00004fd8 	cmpnei	zero,zero,319
    5138:	00004fd8 	cmpnei	zero,zero,319
    513c:	00004fd8 	cmpnei	zero,zero,319
    5140:	00005394 	movui	zero,334
    5144:	00005394 	movui	zero,334
    5148:	00005394 	movui	zero,334
    514c:	00005394 	movui	zero,334
    5150:	00005394 	movui	zero,334
    5154:	00005394 	movui	zero,334
    5158:	00004fd8 	cmpnei	zero,zero,319
    515c:	00004fd8 	cmpnei	zero,zero,319
    5160:	00004fd8 	cmpnei	zero,zero,319
    5164:	00004fd8 	cmpnei	zero,zero,319
    5168:	00004fd8 	cmpnei	zero,zero,319
    516c:	00004fd8 	cmpnei	zero,zero,319
    5170:	00004fd8 	cmpnei	zero,zero,319
    5174:	00004fd8 	cmpnei	zero,zero,319
    5178:	00004fd8 	cmpnei	zero,zero,319
    517c:	00004fd8 	cmpnei	zero,zero,319
    5180:	00004fd8 	cmpnei	zero,zero,319
    5184:	00004fd8 	cmpnei	zero,zero,319
    5188:	00004fd8 	cmpnei	zero,zero,319
    518c:	00004fd8 	cmpnei	zero,zero,319
    5190:	00004fd8 	cmpnei	zero,zero,319
    5194:	00004fd8 	cmpnei	zero,zero,319
    5198:	00004fd8 	cmpnei	zero,zero,319
    519c:	000053a4 	muli	zero,zero,334
    51a0:	000d883a 	mov	r6,zero
    51a4:	003d9006 	br	47e8 <__svfscanf_r+0x730>
    51a8:	98000005 	stb	zero,0(r19)
    51ac:	d8c0a017 	ldw	r3,640(sp)
    51b0:	d940a617 	ldw	r5,664(sp)
    51b4:	d9c0a117 	ldw	r7,644(sp)
    51b8:	b009883a 	mov	r4,r22
    51bc:	000d883a 	mov	r6,zero
    51c0:	183ee83a 	callr	r3
    51c4:	1007883a 	mov	r3,r2
    51c8:	9080080c 	andi	r2,r18,32
    51cc:	10004d1e 	bne	r2,zero,5304 <__svfscanf_r+0x124c>
    51d0:	9080010c 	andi	r2,r18,4
    51d4:	10003426 	beq	r2,zero,52a8 <__svfscanf_r+0x11f0>
    51d8:	d900a417 	ldw	r4,656(sp)
    51dc:	20800017 	ldw	r2,0(r4)
    51e0:	21000104 	addi	r4,r4,4
    51e4:	d900a415 	stw	r4,656(sp)
    51e8:	10c0000d 	sth	r3,0(r2)
    51ec:	d880a217 	ldw	r2,648(sp)
    51f0:	10800044 	addi	r2,r2,1
    51f4:	d880a215 	stw	r2,648(sp)
    51f8:	003f8406 	br	500c <__svfscanf_r+0xf54>
    51fc:	9080200c 	andi	r2,r18,128
    5200:	103f7526 	beq	r2,zero,4fd8 <__svfscanf_r+0xf20>
    5204:	00bfdfc4 	movi	r2,-129
    5208:	90a4703a 	and	r18,r18,r2
    520c:	99400005 	stb	r5,0(r19)
    5210:	9cc00044 	addi	r19,r19,1
    5214:	80c00117 	ldw	r3,4(r16)
    5218:	18ffffc4 	addi	r3,r3,-1
    521c:	80c00115 	stw	r3,4(r16)
    5220:	00c0130e 	bge	zero,r3,5270 <__svfscanf_r+0x11b8>
    5224:	31800044 	addi	r6,r6,1
    5228:	81800015 	stw	r6,0(r16)
    522c:	d880a317 	ldw	r2,652(sp)
    5230:	10bfffc4 	addi	r2,r2,-1
    5234:	d880a315 	stw	r2,652(sp)
    5238:	103f7e1e 	bne	r2,zero,5034 <__svfscanf_r+0xf7c>
    523c:	003f6606 	br	4fd8 <__svfscanf_r+0xf20>
    5240:	9082000c 	andi	r2,r18,2048
    5244:	103ff126 	beq	r2,zero,520c <__svfscanf_r+0x1154>
    5248:	d8c0a117 	ldw	r3,644(sp)
    524c:	1800031e 	bne	r3,zero,525c <__svfscanf_r+0x11a4>
    5250:	01000204 	movi	r4,8
    5254:	94808014 	ori	r18,r18,512
    5258:	d900a115 	stw	r4,644(sp)
    525c:	9081000c 	andi	r2,r18,1024
    5260:	10000826 	beq	r2,zero,5284 <__svfscanf_r+0x11cc>
    5264:	00be9fc4 	movi	r2,-1409
    5268:	90a4703a 	and	r18,r18,r2
    526c:	003fe706 	br	520c <__svfscanf_r+0x1154>
    5270:	b009883a 	mov	r4,r22
    5274:	800b883a 	mov	r5,r16
    5278:	00018e00 	call	18e0 <__srefill_r>
    527c:	103feb26 	beq	r2,zero,522c <__svfscanf_r+0x1174>
    5280:	003f5506 	br	4fd8 <__svfscanf_r+0xf20>
    5284:	a8000426 	beq	r21,zero,5298 <__svfscanf_r+0x11e0>
    5288:	d880a317 	ldw	r2,652(sp)
    528c:	ad7fffc4 	addi	r21,r21,-1
    5290:	10800044 	addi	r2,r2,1
    5294:	d880a315 	stw	r2,652(sp)
    5298:	00bf1fc4 	movi	r2,-897
    529c:	90a4703a 	and	r18,r18,r2
    52a0:	bdc00044 	addi	r23,r23,1
    52a4:	003fdb06 	br	5214 <__svfscanf_r+0x115c>
    52a8:	9080004c 	andi	r2,r18,1
    52ac:	1005003a 	cmpeq	r2,r2,zero
    52b0:	10001426 	beq	r2,zero,5304 <__svfscanf_r+0x124c>
    52b4:	9080008c 	andi	r2,r18,2
    52b8:	10001226 	beq	r2,zero,5304 <__svfscanf_r+0x124c>
    52bc:	d8c0a017 	ldw	r3,640(sp)
    52c0:	00800074 	movhi	r2,1
    52c4:	10ae3d04 	addi	r2,r2,-18188
    52c8:	18801426 	beq	r3,r2,531c <__svfscanf_r+0x1264>
    52cc:	d9c0a117 	ldw	r7,644(sp)
    52d0:	d940a617 	ldw	r5,664(sp)
    52d4:	000d883a 	mov	r6,zero
    52d8:	b009883a 	mov	r4,r22
    52dc:	000b5dc0 	call	b5dc <_strtoll_r>
    52e0:	100d883a 	mov	r6,r2
    52e4:	180f883a 	mov	r7,r3
    52e8:	d900a417 	ldw	r4,656(sp)
    52ec:	20800017 	ldw	r2,0(r4)
    52f0:	21000104 	addi	r4,r4,4
    52f4:	d900a415 	stw	r4,656(sp)
    52f8:	11c00115 	stw	r7,4(r2)
    52fc:	11800015 	stw	r6,0(r2)
    5300:	003fba06 	br	51ec <__svfscanf_r+0x1134>
    5304:	d900a417 	ldw	r4,656(sp)
    5308:	20800017 	ldw	r2,0(r4)
    530c:	21000104 	addi	r4,r4,4
    5310:	d900a415 	stw	r4,656(sp)
    5314:	10c00015 	stw	r3,0(r2)
    5318:	003fb406 	br	51ec <__svfscanf_r+0x1134>
    531c:	d9c0a117 	ldw	r7,644(sp)
    5320:	d940a617 	ldw	r5,664(sp)
    5324:	000d883a 	mov	r6,zero
    5328:	b009883a 	mov	r4,r22
    532c:	000bb480 	call	bb48 <_strtoull_r>
    5330:	100d883a 	mov	r6,r2
    5334:	180f883a 	mov	r7,r3
    5338:	003feb06 	br	52e8 <__svfscanf_r+0x1230>
    533c:	d8c0a117 	ldw	r3,644(sp)
    5340:	18c5883a 	add	r2,r3,r3
    5344:	00c00074 	movhi	r3,1
    5348:	18c95384 	addi	r3,r3,9550
    534c:	10c5883a 	add	r2,r2,r3
    5350:	1080000f 	ldh	r2,0(r2)
    5354:	00fd1fc4 	movi	r3,-2945
    5358:	90e4703a 	and	r18,r18,r3
    535c:	d880a115 	stw	r2,644(sp)
    5360:	003faa06 	br	520c <__svfscanf_r+0x1154>
    5364:	d900a117 	ldw	r4,644(sp)
    5368:	00c00074 	movhi	r3,1
    536c:	18c95384 	addi	r3,r3,9550
    5370:	2105883a 	add	r2,r4,r4
    5374:	10c5883a 	add	r2,r2,r3
    5378:	1080000f 	ldh	r2,0(r2)
    537c:	00c00204 	movi	r3,8
    5380:	d880a115 	stw	r2,644(sp)
    5384:	18bf140e 	bge	r3,r2,4fd8 <__svfscanf_r+0xf20>
    5388:	00bd1fc4 	movi	r2,-2945
    538c:	90a4703a 	and	r18,r18,r2
    5390:	003f9e06 	br	520c <__svfscanf_r+0x1154>
    5394:	d8c0a117 	ldw	r3,644(sp)
    5398:	00800284 	movi	r2,10
    539c:	10fffa16 	blt	r2,r3,5388 <__svfscanf_r+0x12d0>
    53a0:	003f0d06 	br	4fd8 <__svfscanf_r+0xf20>
    53a4:	90c1800c 	andi	r3,r18,1536
    53a8:	00808004 	movi	r2,512
    53ac:	18bf0a1e 	bne	r3,r2,4fd8 <__svfscanf_r+0xf20>
    53b0:	00bf7fc4 	movi	r2,-513
    53b4:	9084703a 	and	r2,r18,r2
    53b8:	01000404 	movi	r4,16
    53bc:	14814014 	ori	r18,r2,1280
    53c0:	d900a115 	stw	r4,644(sp)
    53c4:	003f9106 	br	520c <__svfscanf_r+0x1154>
    53c8:	d880a417 	ldw	r2,656(sp)
    53cc:	dd400404 	addi	r21,sp,16
    53d0:	14800017 	ldw	r18,0(r2)
    53d4:	9027883a 	mov	r19,r18
    53d8:	81000017 	ldw	r4,0(r16)
    53dc:	20800003 	ldbu	r2,0(r4)
    53e0:	a885883a 	add	r2,r21,r2
    53e4:	10c00007 	ldb	r3,0(r2)
    53e8:	18001426 	beq	r3,zero,543c <__svfscanf_r+0x1384>
    53ec:	d8c0a317 	ldw	r3,652(sp)
    53f0:	80800117 	ldw	r2,4(r16)
    53f4:	21800044 	addi	r6,r4,1
    53f8:	18ffffc4 	addi	r3,r3,-1
    53fc:	d8c0a315 	stw	r3,652(sp)
    5400:	10ffffc4 	addi	r3,r2,-1
    5404:	80c00115 	stw	r3,4(r16)
    5408:	20800003 	ldbu	r2,0(r4)
    540c:	90800005 	stb	r2,0(r18)
    5410:	d900a317 	ldw	r4,652(sp)
    5414:	81800015 	stw	r6,0(r16)
    5418:	94800044 	addi	r18,r18,1
    541c:	20000726 	beq	r4,zero,543c <__svfscanf_r+0x1384>
    5420:	80800117 	ldw	r2,4(r16)
    5424:	00bfec16 	blt	zero,r2,53d8 <__svfscanf_r+0x1320>
    5428:	b009883a 	mov	r4,r22
    542c:	800b883a 	mov	r5,r16
    5430:	00018e00 	call	18e0 <__srefill_r>
    5434:	103fe826 	beq	r2,zero,53d8 <__svfscanf_r+0x1320>
    5438:	9cbb7426 	beq	r19,r18,420c <__svfscanf_r+0x154>
    543c:	94e7c83a 	sub	r19,r18,r19
    5440:	983b5226 	beq	r19,zero,418c <__svfscanf_r+0xd4>
    5444:	90000005 	stb	zero,0(r18)
    5448:	d880a417 	ldw	r2,656(sp)
    544c:	d8c0a217 	ldw	r3,648(sp)
    5450:	8ce3883a 	add	r17,r17,r19
    5454:	10800104 	addi	r2,r2,4
    5458:	18c00044 	addi	r3,r3,1
    545c:	d880a415 	stw	r2,656(sp)
    5460:	d8c0a215 	stw	r3,648(sp)
    5464:	003b2706 	br	4104 <__svfscanf_r+0x4c>
    5468:	9cc00414 	ori	r19,r19,16
    546c:	003b6e06 	br	4228 <__svfscanf_r+0x170>
    5470:	00c00404 	movi	r3,16
    5474:	01000074 	movhi	r4,1
    5478:	212e3d04 	addi	r4,r4,-18188
    547c:	9cc08014 	ori	r19,r19,512
    5480:	054000c4 	movi	r21,3
    5484:	d8c0a115 	stw	r3,644(sp)
    5488:	d900a015 	stw	r4,640(sp)
    548c:	003bf806 	br	4470 <__svfscanf_r+0x3b8>
    5490:	9880040c 	andi	r2,r19,16
    5494:	10001926 	beq	r2,zero,54fc <__svfscanf_r+0x1444>
    5498:	0027883a 	mov	r19,zero
    549c:	00000b06 	br	54cc <__svfscanf_r+0x1414>
    54a0:	80800017 	ldw	r2,0(r16)
    54a4:	b009883a 	mov	r4,r22
    54a8:	800b883a 	mov	r5,r16
    54ac:	148d883a 	add	r6,r2,r18
    54b0:	81800015 	stw	r6,0(r16)
    54b4:	9ca7883a 	add	r19,r19,r18
    54b8:	00018e00 	call	18e0 <__srefill_r>
    54bc:	103c711e 	bne	r2,zero,4684 <__svfscanf_r+0x5cc>
    54c0:	d900a317 	ldw	r4,652(sp)
    54c4:	2489c83a 	sub	r4,r4,r18
    54c8:	d900a315 	stw	r4,652(sp)
    54cc:	84800117 	ldw	r18,4(r16)
    54d0:	d8c0a317 	ldw	r3,652(sp)
    54d4:	90fff216 	blt	r18,r3,54a0 <__svfscanf_r+0x13e8>
    54d8:	d900a317 	ldw	r4,652(sp)
    54dc:	80800017 	ldw	r2,0(r16)
    54e0:	9927883a 	add	r19,r19,r4
    54e4:	9107c83a 	sub	r3,r18,r4
    54e8:	110d883a 	add	r6,r2,r4
    54ec:	8ce3883a 	add	r17,r17,r19
    54f0:	80c00115 	stw	r3,4(r16)
    54f4:	81800015 	stw	r6,0(r16)
    54f8:	003b0206 	br	4104 <__svfscanf_r+0x4c>
    54fc:	d880a417 	ldw	r2,656(sp)
    5500:	d980a317 	ldw	r6,652(sp)
    5504:	01400044 	movi	r5,1
    5508:	11000017 	ldw	r4,0(r2)
    550c:	800f883a 	mov	r7,r16
    5510:	00077780 	call	7778 <fread>
    5514:	103b3d26 	beq	r2,zero,420c <__svfscanf_r+0x154>
    5518:	d8c0a417 	ldw	r3,656(sp)
    551c:	d900a217 	ldw	r4,648(sp)
    5520:	88a3883a 	add	r17,r17,r2
    5524:	18c00104 	addi	r3,r3,4
    5528:	21000044 	addi	r4,r4,1
    552c:	d8c0a415 	stw	r3,656(sp)
    5530:	d900a215 	stw	r4,648(sp)
    5534:	003af306 	br	4104 <__svfscanf_r+0x4c>
    5538:	8080030b 	ldhu	r2,12(r16)
    553c:	1080100c 	andi	r2,r2,64
    5540:	103b1226 	beq	r2,zero,418c <__svfscanf_r+0xd4>
    5544:	003b3306 	br	4214 <__svfscanf_r+0x15c>
    5548:	983b1026 	beq	r19,zero,418c <__svfscanf_r+0xd4>
    554c:	8ce3883a 	add	r17,r17,r19
    5550:	003aec06 	br	4104 <__svfscanf_r+0x4c>
    5554:	983c9626 	beq	r19,zero,47b0 <__svfscanf_r+0x6f8>
    5558:	9cffffc4 	addi	r19,r19,-1
    555c:	d8c04404 	addi	r3,sp,272
    5560:	1cc5883a 	add	r2,r3,r19
    5564:	11400003 	ldbu	r5,0(r2)
    5568:	b009883a 	mov	r4,r22
    556c:	800d883a 	mov	r6,r16
    5570:	000bf140 	call	bf14 <_ungetc_r>
    5574:	003ff706 	br	5554 <__svfscanf_r+0x149c>
    5578:	00bfff84 	movi	r2,-2
    557c:	18bc7a1e 	bne	r3,r2,4768 <__svfscanf_r+0x6b0>
    5580:	003c8406 	br	4794 <__svfscanf_r+0x6dc>
    5584:	d900a417 	ldw	r4,656(sp)
    5588:	25400017 	ldw	r21,0(r4)
    558c:	21000104 	addi	r4,r4,4
    5590:	d900a415 	stw	r4,656(sp)
    5594:	003c4a06 	br	46c0 <__svfscanf_r+0x608>
    5598:	00bfff84 	movi	r2,-2
    559c:	18bc0f1e 	bne	r3,r2,45dc <__svfscanf_r+0x524>
    55a0:	003c1506 	br	45f8 <__svfscanf_r+0x540>
    55a4:	b009883a 	mov	r4,r22
    55a8:	800b883a 	mov	r5,r16
    55ac:	00018e00 	call	18e0 <__srefill_r>
    55b0:	103c1326 	beq	r2,zero,4600 <__svfscanf_r+0x548>
    55b4:	903b151e 	bne	r18,zero,420c <__svfscanf_r+0x154>
    55b8:	a83ad21e 	bne	r21,zero,4104 <__svfscanf_r+0x4c>
    55bc:	d880a217 	ldw	r2,648(sp)
    55c0:	10800044 	addi	r2,r2,1
    55c4:	d880a215 	stw	r2,648(sp)
    55c8:	003ace06 	br	4104 <__svfscanf_r+0x4c>
    55cc:	0027883a 	mov	r19,zero
    55d0:	003bdd06 	br	4548 <__svfscanf_r+0x490>
    55d4:	9cc00114 	ori	r19,r19,4
    55d8:	003b1306 	br	4228 <__svfscanf_r+0x170>
    55dc:	05400104 	movi	r21,4
    55e0:	003ba306 	br	4470 <__svfscanf_r+0x3b8>
    55e4:	9cc00054 	ori	r19,r19,1
    55e8:	00800074 	movhi	r2,1
    55ec:	10acdd04 	addi	r2,r2,-19596
    55f0:	00c00284 	movi	r3,10
    55f4:	054000c4 	movi	r21,3
    55f8:	d880a015 	stw	r2,640(sp)
    55fc:	d8c0a115 	stw	r3,644(sp)
    5600:	003b9b06 	br	4470 <__svfscanf_r+0x3b8>
    5604:	9cc01014 	ori	r19,r19,64
    5608:	002b883a 	mov	r21,zero
    560c:	003b9806 	br	4470 <__svfscanf_r+0x3b8>
    5610:	a00b883a 	mov	r5,r20
    5614:	d9000404 	addi	r4,sp,16
    5618:	0009c400 	call	9c40 <__sccl>
    561c:	1029883a 	mov	r20,r2
    5620:	9cc01014 	ori	r19,r19,64
    5624:	05400044 	movi	r21,1
    5628:	003b9106 	br	4470 <__svfscanf_r+0x3b8>
    562c:	9cc00054 	ori	r19,r19,1
    5630:	00800204 	movi	r2,8
    5634:	00c00074 	movhi	r3,1
    5638:	18ee3d04 	addi	r3,r3,-18188
    563c:	054000c4 	movi	r21,3
    5640:	d880a115 	stw	r2,644(sp)
    5644:	d8c0a015 	stw	r3,640(sp)
    5648:	003b8906 	br	4470 <__svfscanf_r+0x3b8>
    564c:	9880040c 	andi	r2,r19,16
    5650:	103aac1e 	bne	r2,zero,4104 <__svfscanf_r+0x4c>
    5654:	9880010c 	andi	r2,r19,4
    5658:	10002426 	beq	r2,zero,56ec <__svfscanf_r+0x1634>
    565c:	d900a417 	ldw	r4,656(sp)
    5660:	20800017 	ldw	r2,0(r4)
    5664:	21000104 	addi	r4,r4,4
    5668:	d900a415 	stw	r4,656(sp)
    566c:	1440000d 	sth	r17,0(r2)
    5670:	003aa406 	br	4104 <__svfscanf_r+0x4c>
    5674:	9cc00094 	ori	r19,r19,2
    5678:	003aeb06 	br	4228 <__svfscanf_r+0x170>
    567c:	05400084 	movi	r21,2
    5680:	003b7b06 	br	4470 <__svfscanf_r+0x3b8>
    5684:	00800404 	movi	r2,16
    5688:	00c00074 	movhi	r3,1
    568c:	18ee3d04 	addi	r3,r3,-18188
    5690:	9cc08814 	ori	r19,r19,544
    5694:	054000c4 	movi	r21,3
    5698:	d880a115 	stw	r2,644(sp)
    569c:	d8c0a015 	stw	r3,640(sp)
    56a0:	003b7306 	br	4470 <__svfscanf_r+0x3b8>
    56a4:	0009883a 	mov	r4,zero
    56a8:	0009d000 	call	9d00 <nanf>
    56ac:	b8800015 	stw	r2,0(r23)
    56b0:	003d2706 	br	4b50 <__svfscanf_r+0xa98>
    56b4:	a0c00007 	ldb	r3,0(r20)
    56b8:	00801b04 	movi	r2,108
    56bc:	18800826 	beq	r3,r2,56e0 <__svfscanf_r+0x1628>
    56c0:	9cc00054 	ori	r19,r19,1
    56c4:	003ad806 	br	4228 <__svfscanf_r+0x170>
    56c8:	01000074 	movhi	r4,1
    56cc:	212cdd04 	addi	r4,r4,-19596
    56d0:	054000c4 	movi	r21,3
    56d4:	d900a015 	stw	r4,640(sp)
    56d8:	d800a115 	stw	zero,644(sp)
    56dc:	003b6406 	br	4470 <__svfscanf_r+0x3b8>
    56e0:	a5000044 	addi	r20,r20,1
    56e4:	9cc00094 	ori	r19,r19,2
    56e8:	003acf06 	br	4228 <__svfscanf_r+0x170>
    56ec:	9880004c 	andi	r2,r19,1
    56f0:	1005003a 	cmpeq	r2,r2,zero
    56f4:	10000a26 	beq	r2,zero,5720 <__svfscanf_r+0x1668>
    56f8:	9880008c 	andi	r2,r19,2
    56fc:	10000826 	beq	r2,zero,5720 <__svfscanf_r+0x1668>
    5700:	d900a417 	ldw	r4,656(sp)
    5704:	8807d7fa 	srai	r3,r17,31
    5708:	20800017 	ldw	r2,0(r4)
    570c:	21000104 	addi	r4,r4,4
    5710:	d900a415 	stw	r4,656(sp)
    5714:	14400015 	stw	r17,0(r2)
    5718:	10c00115 	stw	r3,4(r2)
    571c:	003a7906 	br	4104 <__svfscanf_r+0x4c>
    5720:	d8c0a417 	ldw	r3,656(sp)
    5724:	18800017 	ldw	r2,0(r3)
    5728:	18c00104 	addi	r3,r3,4
    572c:	d8c0a415 	stw	r3,656(sp)
    5730:	14400015 	stw	r17,0(r2)
    5734:	003a7306 	br	4104 <__svfscanf_r+0x4c>

00005738 <__svfscanf>:
    5738:	00800074 	movhi	r2,1
    573c:	10915204 	addi	r2,r2,17736
    5740:	2013883a 	mov	r9,r4
    5744:	11000017 	ldw	r4,0(r2)
    5748:	2805883a 	mov	r2,r5
    574c:	300f883a 	mov	r7,r6
    5750:	480b883a 	mov	r5,r9
    5754:	100d883a 	mov	r6,r2
    5758:	00040b81 	jmpi	40b8 <__svfscanf_r>

0000575c <_vfscanf_r>:
    575c:	defffb04 	addi	sp,sp,-20
    5760:	dcc00315 	stw	r19,12(sp)
    5764:	dc800215 	stw	r18,8(sp)
    5768:	dc400115 	stw	r17,4(sp)
    576c:	dc000015 	stw	r16,0(sp)
    5770:	dfc00415 	stw	ra,16(sp)
    5774:	2021883a 	mov	r16,r4
    5778:	2823883a 	mov	r17,r5
    577c:	3025883a 	mov	r18,r6
    5780:	3827883a 	mov	r19,r7
    5784:	20000226 	beq	r4,zero,5790 <_vfscanf_r+0x34>
    5788:	20800e17 	ldw	r2,56(r4)
    578c:	10000b26 	beq	r2,zero,57bc <_vfscanf_r+0x60>
    5790:	8009883a 	mov	r4,r16
    5794:	880b883a 	mov	r5,r17
    5798:	900d883a 	mov	r6,r18
    579c:	980f883a 	mov	r7,r19
    57a0:	dfc00417 	ldw	ra,16(sp)
    57a4:	dcc00317 	ldw	r19,12(sp)
    57a8:	dc800217 	ldw	r18,8(sp)
    57ac:	dc400117 	ldw	r17,4(sp)
    57b0:	dc000017 	ldw	r16,0(sp)
    57b4:	dec00504 	addi	sp,sp,20
    57b8:	00040b81 	jmpi	40b8 <__svfscanf_r>
    57bc:	0000b340 	call	b34 <__sinit>
    57c0:	003ff306 	br	5790 <_vfscanf_r+0x34>

000057c4 <vfscanf>:
    57c4:	defffb04 	addi	sp,sp,-20
    57c8:	dcc00315 	stw	r19,12(sp)
    57cc:	04c00074 	movhi	r19,1
    57d0:	9cd15204 	addi	r19,r19,17736
    57d4:	98c00017 	ldw	r3,0(r19)
    57d8:	dc800215 	stw	r18,8(sp)
    57dc:	dc400115 	stw	r17,4(sp)
    57e0:	dc000015 	stw	r16,0(sp)
    57e4:	dfc00415 	stw	ra,16(sp)
    57e8:	2021883a 	mov	r16,r4
    57ec:	2823883a 	mov	r17,r5
    57f0:	3025883a 	mov	r18,r6
    57f4:	18000326 	beq	r3,zero,5804 <vfscanf+0x40>
    57f8:	18800e17 	ldw	r2,56(r3)
    57fc:	1809883a 	mov	r4,r3
    5800:	10000b26 	beq	r2,zero,5830 <vfscanf+0x6c>
    5804:	99000017 	ldw	r4,0(r19)
    5808:	800b883a 	mov	r5,r16
    580c:	880d883a 	mov	r6,r17
    5810:	900f883a 	mov	r7,r18
    5814:	dfc00417 	ldw	ra,16(sp)
    5818:	dcc00317 	ldw	r19,12(sp)
    581c:	dc800217 	ldw	r18,8(sp)
    5820:	dc400117 	ldw	r17,4(sp)
    5824:	dc000017 	ldw	r16,0(sp)
    5828:	dec00504 	addi	sp,sp,20
    582c:	00040b81 	jmpi	40b8 <__svfscanf_r>
    5830:	0000b340 	call	b34 <__sinit>
    5834:	003ff306 	br	5804 <vfscanf+0x40>

00005838 <_write_r>:
    5838:	defffd04 	addi	sp,sp,-12
    583c:	dc000015 	stw	r16,0(sp)
    5840:	04000074 	movhi	r16,1
    5844:	84180804 	addi	r16,r16,24608
    5848:	dc400115 	stw	r17,4(sp)
    584c:	80000015 	stw	zero,0(r16)
    5850:	2023883a 	mov	r17,r4
    5854:	2809883a 	mov	r4,r5
    5858:	300b883a 	mov	r5,r6
    585c:	380d883a 	mov	r6,r7
    5860:	dfc00215 	stw	ra,8(sp)
    5864:	00101800 	call	10180 <write>
    5868:	1007883a 	mov	r3,r2
    586c:	00bfffc4 	movi	r2,-1
    5870:	18800626 	beq	r3,r2,588c <_write_r+0x54>
    5874:	1805883a 	mov	r2,r3
    5878:	dfc00217 	ldw	ra,8(sp)
    587c:	dc400117 	ldw	r17,4(sp)
    5880:	dc000017 	ldw	r16,0(sp)
    5884:	dec00304 	addi	sp,sp,12
    5888:	f800283a 	ret
    588c:	80800017 	ldw	r2,0(r16)
    5890:	103ff826 	beq	r2,zero,5874 <_write_r+0x3c>
    5894:	88800015 	stw	r2,0(r17)
    5898:	1805883a 	mov	r2,r3
    589c:	dfc00217 	ldw	ra,8(sp)
    58a0:	dc400117 	ldw	r17,4(sp)
    58a4:	dc000017 	ldw	r16,0(sp)
    58a8:	dec00304 	addi	sp,sp,12
    58ac:	f800283a 	ret

000058b0 <__swsetup_r>:
    58b0:	00800074 	movhi	r2,1
    58b4:	10915204 	addi	r2,r2,17736
    58b8:	10c00017 	ldw	r3,0(r2)
    58bc:	defffd04 	addi	sp,sp,-12
    58c0:	dc400115 	stw	r17,4(sp)
    58c4:	dc000015 	stw	r16,0(sp)
    58c8:	dfc00215 	stw	ra,8(sp)
    58cc:	2023883a 	mov	r17,r4
    58d0:	2821883a 	mov	r16,r5
    58d4:	18000226 	beq	r3,zero,58e0 <__swsetup_r+0x30>
    58d8:	18800e17 	ldw	r2,56(r3)
    58dc:	10001f26 	beq	r2,zero,595c <__swsetup_r+0xac>
    58e0:	8100030b 	ldhu	r4,12(r16)
    58e4:	2080020c 	andi	r2,r4,8
    58e8:	10002826 	beq	r2,zero,598c <__swsetup_r+0xdc>
    58ec:	81400417 	ldw	r5,16(r16)
    58f0:	28001d26 	beq	r5,zero,5968 <__swsetup_r+0xb8>
    58f4:	2080004c 	andi	r2,r4,1
    58f8:	1005003a 	cmpeq	r2,r2,zero
    58fc:	10000b26 	beq	r2,zero,592c <__swsetup_r+0x7c>
    5900:	2080008c 	andi	r2,r4,2
    5904:	10001226 	beq	r2,zero,5950 <__swsetup_r+0xa0>
    5908:	0005883a 	mov	r2,zero
    590c:	80800215 	stw	r2,8(r16)
    5910:	28000b26 	beq	r5,zero,5940 <__swsetup_r+0x90>
    5914:	0005883a 	mov	r2,zero
    5918:	dfc00217 	ldw	ra,8(sp)
    591c:	dc400117 	ldw	r17,4(sp)
    5920:	dc000017 	ldw	r16,0(sp)
    5924:	dec00304 	addi	sp,sp,12
    5928:	f800283a 	ret
    592c:	80800517 	ldw	r2,20(r16)
    5930:	80000215 	stw	zero,8(r16)
    5934:	0085c83a 	sub	r2,zero,r2
    5938:	80800615 	stw	r2,24(r16)
    593c:	283ff51e 	bne	r5,zero,5914 <__swsetup_r+0x64>
    5940:	2080200c 	andi	r2,r4,128
    5944:	103ff326 	beq	r2,zero,5914 <__swsetup_r+0x64>
    5948:	00bfffc4 	movi	r2,-1
    594c:	003ff206 	br	5918 <__swsetup_r+0x68>
    5950:	80800517 	ldw	r2,20(r16)
    5954:	80800215 	stw	r2,8(r16)
    5958:	003fed06 	br	5910 <__swsetup_r+0x60>
    595c:	1809883a 	mov	r4,r3
    5960:	0000b340 	call	b34 <__sinit>
    5964:	003fde06 	br	58e0 <__swsetup_r+0x30>
    5968:	20c0a00c 	andi	r3,r4,640
    596c:	00808004 	movi	r2,512
    5970:	18bfe026 	beq	r3,r2,58f4 <__swsetup_r+0x44>
    5974:	8809883a 	mov	r4,r17
    5978:	800b883a 	mov	r5,r16
    597c:	00081fc0 	call	81fc <__smakebuf_r>
    5980:	8100030b 	ldhu	r4,12(r16)
    5984:	81400417 	ldw	r5,16(r16)
    5988:	003fda06 	br	58f4 <__swsetup_r+0x44>
    598c:	2080040c 	andi	r2,r4,16
    5990:	103fed26 	beq	r2,zero,5948 <__swsetup_r+0x98>
    5994:	2080010c 	andi	r2,r4,4
    5998:	10001226 	beq	r2,zero,59e4 <__swsetup_r+0x134>
    599c:	81400c17 	ldw	r5,48(r16)
    59a0:	28000526 	beq	r5,zero,59b8 <__swsetup_r+0x108>
    59a4:	80801004 	addi	r2,r16,64
    59a8:	28800226 	beq	r5,r2,59b4 <__swsetup_r+0x104>
    59ac:	8809883a 	mov	r4,r17
    59b0:	00078e40 	call	78e4 <_free_r>
    59b4:	80000c15 	stw	zero,48(r16)
    59b8:	8080030b 	ldhu	r2,12(r16)
    59bc:	81400417 	ldw	r5,16(r16)
    59c0:	80000115 	stw	zero,4(r16)
    59c4:	10bff6cc 	andi	r2,r2,65499
    59c8:	8080030d 	sth	r2,12(r16)
    59cc:	81400015 	stw	r5,0(r16)
    59d0:	8080030b 	ldhu	r2,12(r16)
    59d4:	10800214 	ori	r2,r2,8
    59d8:	113fffcc 	andi	r4,r2,65535
    59dc:	8080030d 	sth	r2,12(r16)
    59e0:	003fc306 	br	58f0 <__swsetup_r+0x40>
    59e4:	81400417 	ldw	r5,16(r16)
    59e8:	003ff906 	br	59d0 <__swsetup_r+0x120>

000059ec <_close_r>:
    59ec:	defffd04 	addi	sp,sp,-12
    59f0:	dc000015 	stw	r16,0(sp)
    59f4:	04000074 	movhi	r16,1
    59f8:	84180804 	addi	r16,r16,24608
    59fc:	dc400115 	stw	r17,4(sp)
    5a00:	80000015 	stw	zero,0(r16)
    5a04:	2023883a 	mov	r17,r4
    5a08:	2809883a 	mov	r4,r5
    5a0c:	dfc00215 	stw	ra,8(sp)
    5a10:	000f8200 	call	f820 <close>
    5a14:	1007883a 	mov	r3,r2
    5a18:	00bfffc4 	movi	r2,-1
    5a1c:	18800626 	beq	r3,r2,5a38 <_close_r+0x4c>
    5a20:	1805883a 	mov	r2,r3
    5a24:	dfc00217 	ldw	ra,8(sp)
    5a28:	dc400117 	ldw	r17,4(sp)
    5a2c:	dc000017 	ldw	r16,0(sp)
    5a30:	dec00304 	addi	sp,sp,12
    5a34:	f800283a 	ret
    5a38:	80800017 	ldw	r2,0(r16)
    5a3c:	103ff826 	beq	r2,zero,5a20 <_close_r+0x34>
    5a40:	88800015 	stw	r2,0(r17)
    5a44:	1805883a 	mov	r2,r3
    5a48:	dfc00217 	ldw	ra,8(sp)
    5a4c:	dc400117 	ldw	r17,4(sp)
    5a50:	dc000017 	ldw	r16,0(sp)
    5a54:	dec00304 	addi	sp,sp,12
    5a58:	f800283a 	ret

00005a5c <quorem>:
    5a5c:	28c00417 	ldw	r3,16(r5)
    5a60:	20800417 	ldw	r2,16(r4)
    5a64:	defff604 	addi	sp,sp,-40
    5a68:	ddc00715 	stw	r23,28(sp)
    5a6c:	dd400515 	stw	r21,20(sp)
    5a70:	dfc00915 	stw	ra,36(sp)
    5a74:	df000815 	stw	fp,32(sp)
    5a78:	dd800615 	stw	r22,24(sp)
    5a7c:	dd000415 	stw	r20,16(sp)
    5a80:	dcc00315 	stw	r19,12(sp)
    5a84:	dc800215 	stw	r18,8(sp)
    5a88:	dc400115 	stw	r17,4(sp)
    5a8c:	dc000015 	stw	r16,0(sp)
    5a90:	202f883a 	mov	r23,r4
    5a94:	282b883a 	mov	r21,r5
    5a98:	10c07416 	blt	r2,r3,5c6c <quorem+0x210>
    5a9c:	1c7fffc4 	addi	r17,r3,-1
    5aa0:	8c45883a 	add	r2,r17,r17
    5aa4:	1085883a 	add	r2,r2,r2
    5aa8:	2c000504 	addi	r16,r5,20
    5aac:	24c00504 	addi	r19,r4,20
    5ab0:	14ed883a 	add	r22,r2,r19
    5ab4:	80a5883a 	add	r18,r16,r2
    5ab8:	b7000017 	ldw	fp,0(r22)
    5abc:	91400017 	ldw	r5,0(r18)
    5ac0:	e009883a 	mov	r4,fp
    5ac4:	29400044 	addi	r5,r5,1
    5ac8:	000ef800 	call	ef80 <__udivsi3>
    5acc:	1029883a 	mov	r20,r2
    5ad0:	10003c1e 	bne	r2,zero,5bc4 <quorem+0x168>
    5ad4:	a80b883a 	mov	r5,r21
    5ad8:	b809883a 	mov	r4,r23
    5adc:	00086cc0 	call	86cc <__mcmp>
    5ae0:	10002b16 	blt	r2,zero,5b90 <quorem+0x134>
    5ae4:	a5000044 	addi	r20,r20,1
    5ae8:	980f883a 	mov	r7,r19
    5aec:	0011883a 	mov	r8,zero
    5af0:	0009883a 	mov	r4,zero
    5af4:	81400017 	ldw	r5,0(r16)
    5af8:	38c00017 	ldw	r3,0(r7)
    5afc:	84000104 	addi	r16,r16,4
    5b00:	28bfffcc 	andi	r2,r5,65535
    5b04:	2085883a 	add	r2,r4,r2
    5b08:	11bfffcc 	andi	r6,r2,65535
    5b0c:	193fffcc 	andi	r4,r3,65535
    5b10:	1004d43a 	srli	r2,r2,16
    5b14:	280ad43a 	srli	r5,r5,16
    5b18:	2189c83a 	sub	r4,r4,r6
    5b1c:	2209883a 	add	r4,r4,r8
    5b20:	1806d43a 	srli	r3,r3,16
    5b24:	288b883a 	add	r5,r5,r2
    5b28:	200dd43a 	srai	r6,r4,16
    5b2c:	28bfffcc 	andi	r2,r5,65535
    5b30:	1887c83a 	sub	r3,r3,r2
    5b34:	1987883a 	add	r3,r3,r6
    5b38:	3900000d 	sth	r4,0(r7)
    5b3c:	38c0008d 	sth	r3,2(r7)
    5b40:	2808d43a 	srli	r4,r5,16
    5b44:	39c00104 	addi	r7,r7,4
    5b48:	1811d43a 	srai	r8,r3,16
    5b4c:	943fe92e 	bgeu	r18,r16,5af4 <quorem+0x98>
    5b50:	8c45883a 	add	r2,r17,r17
    5b54:	1085883a 	add	r2,r2,r2
    5b58:	9885883a 	add	r2,r19,r2
    5b5c:	10c00017 	ldw	r3,0(r2)
    5b60:	18000b1e 	bne	r3,zero,5b90 <quorem+0x134>
    5b64:	113fff04 	addi	r4,r2,-4
    5b68:	9900082e 	bgeu	r19,r4,5b8c <quorem+0x130>
    5b6c:	10bfff17 	ldw	r2,-4(r2)
    5b70:	10000326 	beq	r2,zero,5b80 <quorem+0x124>
    5b74:	00000506 	br	5b8c <quorem+0x130>
    5b78:	20800017 	ldw	r2,0(r4)
    5b7c:	1000031e 	bne	r2,zero,5b8c <quorem+0x130>
    5b80:	213fff04 	addi	r4,r4,-4
    5b84:	8c7fffc4 	addi	r17,r17,-1
    5b88:	993ffb36 	bltu	r19,r4,5b78 <quorem+0x11c>
    5b8c:	bc400415 	stw	r17,16(r23)
    5b90:	a005883a 	mov	r2,r20
    5b94:	dfc00917 	ldw	ra,36(sp)
    5b98:	df000817 	ldw	fp,32(sp)
    5b9c:	ddc00717 	ldw	r23,28(sp)
    5ba0:	dd800617 	ldw	r22,24(sp)
    5ba4:	dd400517 	ldw	r21,20(sp)
    5ba8:	dd000417 	ldw	r20,16(sp)
    5bac:	dcc00317 	ldw	r19,12(sp)
    5bb0:	dc800217 	ldw	r18,8(sp)
    5bb4:	dc400117 	ldw	r17,4(sp)
    5bb8:	dc000017 	ldw	r16,0(sp)
    5bbc:	dec00a04 	addi	sp,sp,40
    5bc0:	f800283a 	ret
    5bc4:	980f883a 	mov	r7,r19
    5bc8:	8011883a 	mov	r8,r16
    5bcc:	0013883a 	mov	r9,zero
    5bd0:	000d883a 	mov	r6,zero
    5bd4:	40c00017 	ldw	r3,0(r8)
    5bd8:	39000017 	ldw	r4,0(r7)
    5bdc:	42000104 	addi	r8,r8,4
    5be0:	18bfffcc 	andi	r2,r3,65535
    5be4:	a085383a 	mul	r2,r20,r2
    5be8:	1806d43a 	srli	r3,r3,16
    5bec:	217fffcc 	andi	r5,r4,65535
    5bf0:	3085883a 	add	r2,r6,r2
    5bf4:	11bfffcc 	andi	r6,r2,65535
    5bf8:	a0c7383a 	mul	r3,r20,r3
    5bfc:	1004d43a 	srli	r2,r2,16
    5c00:	298bc83a 	sub	r5,r5,r6
    5c04:	2a4b883a 	add	r5,r5,r9
    5c08:	2008d43a 	srli	r4,r4,16
    5c0c:	1887883a 	add	r3,r3,r2
    5c10:	280dd43a 	srai	r6,r5,16
    5c14:	18bfffcc 	andi	r2,r3,65535
    5c18:	2089c83a 	sub	r4,r4,r2
    5c1c:	2189883a 	add	r4,r4,r6
    5c20:	3900008d 	sth	r4,2(r7)
    5c24:	3940000d 	sth	r5,0(r7)
    5c28:	180cd43a 	srli	r6,r3,16
    5c2c:	39c00104 	addi	r7,r7,4
    5c30:	2013d43a 	srai	r9,r4,16
    5c34:	923fe72e 	bgeu	r18,r8,5bd4 <quorem+0x178>
    5c38:	e03fa61e 	bne	fp,zero,5ad4 <quorem+0x78>
    5c3c:	b0ffff04 	addi	r3,r22,-4
    5c40:	98c0082e 	bgeu	r19,r3,5c64 <quorem+0x208>
    5c44:	b0bfff17 	ldw	r2,-4(r22)
    5c48:	10000326 	beq	r2,zero,5c58 <quorem+0x1fc>
    5c4c:	00000506 	br	5c64 <quorem+0x208>
    5c50:	18800017 	ldw	r2,0(r3)
    5c54:	1000031e 	bne	r2,zero,5c64 <quorem+0x208>
    5c58:	18ffff04 	addi	r3,r3,-4
    5c5c:	8c7fffc4 	addi	r17,r17,-1
    5c60:	98fffb36 	bltu	r19,r3,5c50 <quorem+0x1f4>
    5c64:	bc400415 	stw	r17,16(r23)
    5c68:	003f9a06 	br	5ad4 <quorem+0x78>
    5c6c:	0005883a 	mov	r2,zero
    5c70:	003fc806 	br	5b94 <quorem+0x138>

00005c74 <_dtoa_r>:
    5c74:	22001017 	ldw	r8,64(r4)
    5c78:	deffda04 	addi	sp,sp,-152
    5c7c:	dd402115 	stw	r21,132(sp)
    5c80:	dd002015 	stw	r20,128(sp)
    5c84:	dc801e15 	stw	r18,120(sp)
    5c88:	dc401d15 	stw	r17,116(sp)
    5c8c:	dfc02515 	stw	ra,148(sp)
    5c90:	df002415 	stw	fp,144(sp)
    5c94:	ddc02315 	stw	r23,140(sp)
    5c98:	dd802215 	stw	r22,136(sp)
    5c9c:	dcc01f15 	stw	r19,124(sp)
    5ca0:	dc001c15 	stw	r16,112(sp)
    5ca4:	d9001615 	stw	r4,88(sp)
    5ca8:	3023883a 	mov	r17,r6
    5cac:	2829883a 	mov	r20,r5
    5cb0:	d9c01715 	stw	r7,92(sp)
    5cb4:	dc802817 	ldw	r18,160(sp)
    5cb8:	302b883a 	mov	r21,r6
    5cbc:	40000a26 	beq	r8,zero,5ce8 <_dtoa_r+0x74>
    5cc0:	20801117 	ldw	r2,68(r4)
    5cc4:	400b883a 	mov	r5,r8
    5cc8:	40800115 	stw	r2,4(r8)
    5ccc:	20c01117 	ldw	r3,68(r4)
    5cd0:	00800044 	movi	r2,1
    5cd4:	10c4983a 	sll	r2,r2,r3
    5cd8:	40800215 	stw	r2,8(r8)
    5cdc:	00085700 	call	8570 <_Bfree>
    5ce0:	d8c01617 	ldw	r3,88(sp)
    5ce4:	18001015 	stw	zero,64(r3)
    5ce8:	8800a316 	blt	r17,zero,5f78 <_dtoa_r+0x304>
    5cec:	90000015 	stw	zero,0(r18)
    5cf0:	a8dffc2c 	andhi	r3,r21,32752
    5cf4:	009ffc34 	movhi	r2,32752
    5cf8:	18809126 	beq	r3,r2,5f40 <_dtoa_r+0x2cc>
    5cfc:	000d883a 	mov	r6,zero
    5d00:	000f883a 	mov	r7,zero
    5d04:	a009883a 	mov	r4,r20
    5d08:	a80b883a 	mov	r5,r21
    5d0c:	dd001215 	stw	r20,72(sp)
    5d10:	dd401315 	stw	r21,76(sp)
    5d14:	000e7c40 	call	e7c4 <__nedf2>
    5d18:	1000171e 	bne	r2,zero,5d78 <_dtoa_r+0x104>
    5d1c:	d9802717 	ldw	r6,156(sp)
    5d20:	00800044 	movi	r2,1
    5d24:	30800015 	stw	r2,0(r6)
    5d28:	d8802917 	ldw	r2,164(sp)
    5d2c:	10029b26 	beq	r2,zero,679c <_dtoa_r+0xb28>
    5d30:	d9002917 	ldw	r4,164(sp)
    5d34:	00800074 	movhi	r2,1
    5d38:	10894944 	addi	r2,r2,9509
    5d3c:	10ffffc4 	addi	r3,r2,-1
    5d40:	20800015 	stw	r2,0(r4)
    5d44:	1805883a 	mov	r2,r3
    5d48:	dfc02517 	ldw	ra,148(sp)
    5d4c:	df002417 	ldw	fp,144(sp)
    5d50:	ddc02317 	ldw	r23,140(sp)
    5d54:	dd802217 	ldw	r22,136(sp)
    5d58:	dd402117 	ldw	r21,132(sp)
    5d5c:	dd002017 	ldw	r20,128(sp)
    5d60:	dcc01f17 	ldw	r19,124(sp)
    5d64:	dc801e17 	ldw	r18,120(sp)
    5d68:	dc401d17 	ldw	r17,116(sp)
    5d6c:	dc001c17 	ldw	r16,112(sp)
    5d70:	dec02604 	addi	sp,sp,152
    5d74:	f800283a 	ret
    5d78:	d9001617 	ldw	r4,88(sp)
    5d7c:	d9401217 	ldw	r5,72(sp)
    5d80:	d8800104 	addi	r2,sp,4
    5d84:	a80d883a 	mov	r6,r21
    5d88:	d9c00204 	addi	r7,sp,8
    5d8c:	d8800015 	stw	r2,0(sp)
    5d90:	0008bac0 	call	8bac <__d2b>
    5d94:	d8800715 	stw	r2,28(sp)
    5d98:	a804d53a 	srli	r2,r21,20
    5d9c:	1101ffcc 	andi	r4,r2,2047
    5da0:	20008626 	beq	r4,zero,5fbc <_dtoa_r+0x348>
    5da4:	d8c01217 	ldw	r3,72(sp)
    5da8:	00800434 	movhi	r2,16
    5dac:	10bfffc4 	addi	r2,r2,-1
    5db0:	ddc00117 	ldw	r23,4(sp)
    5db4:	a884703a 	and	r2,r21,r2
    5db8:	1811883a 	mov	r8,r3
    5dbc:	124ffc34 	orhi	r9,r2,16368
    5dc0:	25bf0044 	addi	r22,r4,-1023
    5dc4:	d8000815 	stw	zero,32(sp)
    5dc8:	0005883a 	mov	r2,zero
    5dcc:	00cffe34 	movhi	r3,16376
    5dd0:	480b883a 	mov	r5,r9
    5dd4:	4009883a 	mov	r4,r8
    5dd8:	180f883a 	mov	r7,r3
    5ddc:	100d883a 	mov	r6,r2
    5de0:	000e02c0 	call	e02c <__subdf3>
    5de4:	0218dbf4 	movhi	r8,25455
    5de8:	4210d844 	addi	r8,r8,17249
    5dec:	024ff4f4 	movhi	r9,16339
    5df0:	4a61e9c4 	addi	r9,r9,-30809
    5df4:	480f883a 	mov	r7,r9
    5df8:	400d883a 	mov	r6,r8
    5dfc:	180b883a 	mov	r5,r3
    5e00:	1009883a 	mov	r4,r2
    5e04:	000e1200 	call	e120 <__muldf3>
    5e08:	0222d874 	movhi	r8,35681
    5e0c:	42322cc4 	addi	r8,r8,-14157
    5e10:	024ff1f4 	movhi	r9,16327
    5e14:	4a628a04 	addi	r9,r9,-30168
    5e18:	480f883a 	mov	r7,r9
    5e1c:	400d883a 	mov	r6,r8
    5e20:	180b883a 	mov	r5,r3
    5e24:	1009883a 	mov	r4,r2
    5e28:	000e0ac0 	call	e0ac <__adddf3>
    5e2c:	b009883a 	mov	r4,r22
    5e30:	1021883a 	mov	r16,r2
    5e34:	1823883a 	mov	r17,r3
    5e38:	000ea6c0 	call	ea6c <__floatsidf>
    5e3c:	021427f4 	movhi	r8,20639
    5e40:	421e7ec4 	addi	r8,r8,31227
    5e44:	024ff4f4 	movhi	r9,16339
    5e48:	4a5104c4 	addi	r9,r9,17427
    5e4c:	480f883a 	mov	r7,r9
    5e50:	400d883a 	mov	r6,r8
    5e54:	180b883a 	mov	r5,r3
    5e58:	1009883a 	mov	r4,r2
    5e5c:	000e1200 	call	e120 <__muldf3>
    5e60:	180f883a 	mov	r7,r3
    5e64:	880b883a 	mov	r5,r17
    5e68:	100d883a 	mov	r6,r2
    5e6c:	8009883a 	mov	r4,r16
    5e70:	000e0ac0 	call	e0ac <__adddf3>
    5e74:	1009883a 	mov	r4,r2
    5e78:	180b883a 	mov	r5,r3
    5e7c:	1021883a 	mov	r16,r2
    5e80:	1823883a 	mov	r17,r3
    5e84:	000eb640 	call	eb64 <__fixdfsi>
    5e88:	000d883a 	mov	r6,zero
    5e8c:	000f883a 	mov	r7,zero
    5e90:	8009883a 	mov	r4,r16
    5e94:	880b883a 	mov	r5,r17
    5e98:	d8800d15 	stw	r2,52(sp)
    5e9c:	000e95c0 	call	e95c <__ltdf2>
    5ea0:	10031716 	blt	r2,zero,6b00 <_dtoa_r+0xe8c>
    5ea4:	d8c00d17 	ldw	r3,52(sp)
    5ea8:	00800584 	movi	r2,22
    5eac:	10c1482e 	bgeu	r2,r3,63d0 <_dtoa_r+0x75c>
    5eb0:	01000044 	movi	r4,1
    5eb4:	d9000c15 	stw	r4,48(sp)
    5eb8:	bd85c83a 	sub	r2,r23,r22
    5ebc:	11bfffc4 	addi	r6,r2,-1
    5ec0:	30030b16 	blt	r6,zero,6af0 <_dtoa_r+0xe7c>
    5ec4:	d9800a15 	stw	r6,40(sp)
    5ec8:	d8001115 	stw	zero,68(sp)
    5ecc:	d8c00d17 	ldw	r3,52(sp)
    5ed0:	1802ff16 	blt	r3,zero,6ad0 <_dtoa_r+0xe5c>
    5ed4:	d9000a17 	ldw	r4,40(sp)
    5ed8:	d8c00915 	stw	r3,36(sp)
    5edc:	d8001015 	stw	zero,64(sp)
    5ee0:	20c9883a 	add	r4,r4,r3
    5ee4:	d9000a15 	stw	r4,40(sp)
    5ee8:	d9001717 	ldw	r4,92(sp)
    5eec:	00800244 	movi	r2,9
    5ef0:	11004636 	bltu	r2,r4,600c <_dtoa_r+0x398>
    5ef4:	00800144 	movi	r2,5
    5ef8:	11020416 	blt	r2,r4,670c <_dtoa_r+0xa98>
    5efc:	04400044 	movi	r17,1
    5f00:	d8c01717 	ldw	r3,92(sp)
    5f04:	00800144 	movi	r2,5
    5f08:	10c1ed36 	bltu	r2,r3,66c0 <_dtoa_r+0xa4c>
    5f0c:	18c5883a 	add	r2,r3,r3
    5f10:	1085883a 	add	r2,r2,r2
    5f14:	00c00034 	movhi	r3,0
    5f18:	18d7ca04 	addi	r3,r3,24360
    5f1c:	10c5883a 	add	r2,r2,r3
    5f20:	11000017 	ldw	r4,0(r2)
    5f24:	2000683a 	jmp	r4
    5f28:	00006014 	movui	zero,384
    5f2c:	00006014 	movui	zero,384
    5f30:	00006a14 	movui	zero,424
    5f34:	000069ec 	andhi	zero,zero,423
    5f38:	00006a30 	cmpltui	zero,zero,424
    5f3c:	00006a3c 	xorhi	zero,zero,424
    5f40:	d9002717 	ldw	r4,156(sp)
    5f44:	0089c3c4 	movi	r2,9999
    5f48:	20800015 	stw	r2,0(r4)
    5f4c:	a0001026 	beq	r20,zero,5f90 <_dtoa_r+0x31c>
    5f50:	00c00074 	movhi	r3,1
    5f54:	18ca0004 	addi	r3,r3,10240
    5f58:	d9802917 	ldw	r6,164(sp)
    5f5c:	303f7926 	beq	r6,zero,5d44 <_dtoa_r+0xd0>
    5f60:	188000c7 	ldb	r2,3(r3)
    5f64:	190000c4 	addi	r4,r3,3
    5f68:	1000101e 	bne	r2,zero,5fac <_dtoa_r+0x338>
    5f6c:	d8802917 	ldw	r2,164(sp)
    5f70:	11000015 	stw	r4,0(r2)
    5f74:	003f7306 	br	5d44 <_dtoa_r+0xd0>
    5f78:	00a00034 	movhi	r2,32768
    5f7c:	10bfffc4 	addi	r2,r2,-1
    5f80:	00c00044 	movi	r3,1
    5f84:	88aa703a 	and	r21,r17,r2
    5f88:	90c00015 	stw	r3,0(r18)
    5f8c:	003f5806 	br	5cf0 <_dtoa_r+0x7c>
    5f90:	00800434 	movhi	r2,16
    5f94:	10bfffc4 	addi	r2,r2,-1
    5f98:	a884703a 	and	r2,r21,r2
    5f9c:	103fec1e 	bne	r2,zero,5f50 <_dtoa_r+0x2dc>
    5fa0:	00c00074 	movhi	r3,1
    5fa4:	18c9fd04 	addi	r3,r3,10228
    5fa8:	003feb06 	br	5f58 <_dtoa_r+0x2e4>
    5fac:	d8802917 	ldw	r2,164(sp)
    5fb0:	19000204 	addi	r4,r3,8
    5fb4:	11000015 	stw	r4,0(r2)
    5fb8:	003f6206 	br	5d44 <_dtoa_r+0xd0>
    5fbc:	ddc00117 	ldw	r23,4(sp)
    5fc0:	d8800217 	ldw	r2,8(sp)
    5fc4:	01000804 	movi	r4,32
    5fc8:	b8c10c84 	addi	r3,r23,1074
    5fcc:	18a3883a 	add	r17,r3,r2
    5fd0:	2441b80e 	bge	r4,r17,66b4 <_dtoa_r+0xa40>
    5fd4:	00c01004 	movi	r3,64
    5fd8:	1c47c83a 	sub	r3,r3,r17
    5fdc:	88bff804 	addi	r2,r17,-32
    5fe0:	a8c6983a 	sll	r3,r21,r3
    5fe4:	a084d83a 	srl	r2,r20,r2
    5fe8:	1888b03a 	or	r4,r3,r2
    5fec:	000ecb00 	call	ecb0 <__floatunsidf>
    5ff0:	1011883a 	mov	r8,r2
    5ff4:	00bf8434 	movhi	r2,65040
    5ff8:	01000044 	movi	r4,1
    5ffc:	10d3883a 	add	r9,r2,r3
    6000:	8dbef344 	addi	r22,r17,-1075
    6004:	d9000815 	stw	r4,32(sp)
    6008:	003f6f06 	br	5dc8 <_dtoa_r+0x154>
    600c:	d8001715 	stw	zero,92(sp)
    6010:	04400044 	movi	r17,1
    6014:	00bfffc4 	movi	r2,-1
    6018:	00c00044 	movi	r3,1
    601c:	d8800e15 	stw	r2,56(sp)
    6020:	d8002615 	stw	zero,152(sp)
    6024:	d8800f15 	stw	r2,60(sp)
    6028:	d8c00b15 	stw	r3,44(sp)
    602c:	1021883a 	mov	r16,r2
    6030:	d8801617 	ldw	r2,88(sp)
    6034:	10001115 	stw	zero,68(r2)
    6038:	d8801617 	ldw	r2,88(sp)
    603c:	11401117 	ldw	r5,68(r2)
    6040:	1009883a 	mov	r4,r2
    6044:	0008af00 	call	8af0 <_Balloc>
    6048:	d8c01617 	ldw	r3,88(sp)
    604c:	d8800515 	stw	r2,20(sp)
    6050:	18801015 	stw	r2,64(r3)
    6054:	00800384 	movi	r2,14
    6058:	14006836 	bltu	r2,r16,61fc <_dtoa_r+0x588>
    605c:	8805003a 	cmpeq	r2,r17,zero
    6060:	1000661e 	bne	r2,zero,61fc <_dtoa_r+0x588>
    6064:	d9000d17 	ldw	r4,52(sp)
    6068:	0102300e 	bge	zero,r4,692c <_dtoa_r+0xcb8>
    606c:	208003cc 	andi	r2,r4,15
    6070:	100490fa 	slli	r2,r2,3
    6074:	2025d13a 	srai	r18,r4,4
    6078:	00c00074 	movhi	r3,1
    607c:	18ca1104 	addi	r3,r3,10308
    6080:	10c5883a 	add	r2,r2,r3
    6084:	90c0040c 	andi	r3,r18,16
    6088:	14000017 	ldw	r16,0(r2)
    608c:	14400117 	ldw	r17,4(r2)
    6090:	18036a1e 	bne	r3,zero,6e3c <_dtoa_r+0x11c8>
    6094:	05800084 	movi	r22,2
    6098:	90001026 	beq	r18,zero,60dc <_dtoa_r+0x468>
    609c:	04c00074 	movhi	r19,1
    60a0:	9cca4304 	addi	r19,r19,10508
    60a4:	9080004c 	andi	r2,r18,1
    60a8:	1005003a 	cmpeq	r2,r2,zero
    60ac:	1000081e 	bne	r2,zero,60d0 <_dtoa_r+0x45c>
    60b0:	99800017 	ldw	r6,0(r19)
    60b4:	99c00117 	ldw	r7,4(r19)
    60b8:	880b883a 	mov	r5,r17
    60bc:	8009883a 	mov	r4,r16
    60c0:	000e1200 	call	e120 <__muldf3>
    60c4:	1021883a 	mov	r16,r2
    60c8:	b5800044 	addi	r22,r22,1
    60cc:	1823883a 	mov	r17,r3
    60d0:	9025d07a 	srai	r18,r18,1
    60d4:	9cc00204 	addi	r19,r19,8
    60d8:	903ff21e 	bne	r18,zero,60a4 <_dtoa_r+0x430>
    60dc:	a80b883a 	mov	r5,r21
    60e0:	a009883a 	mov	r4,r20
    60e4:	880f883a 	mov	r7,r17
    60e8:	800d883a 	mov	r6,r16
    60ec:	000e4e40 	call	e4e4 <__divdf3>
    60f0:	1029883a 	mov	r20,r2
    60f4:	182b883a 	mov	r21,r3
    60f8:	d8c00c17 	ldw	r3,48(sp)
    60fc:	1805003a 	cmpeq	r2,r3,zero
    6100:	1000081e 	bne	r2,zero,6124 <_dtoa_r+0x4b0>
    6104:	0005883a 	mov	r2,zero
    6108:	00cffc34 	movhi	r3,16368
    610c:	180f883a 	mov	r7,r3
    6110:	a009883a 	mov	r4,r20
    6114:	a80b883a 	mov	r5,r21
    6118:	100d883a 	mov	r6,r2
    611c:	000e95c0 	call	e95c <__ltdf2>
    6120:	1003fe16 	blt	r2,zero,711c <_dtoa_r+0x14a8>
    6124:	b009883a 	mov	r4,r22
    6128:	000ea6c0 	call	ea6c <__floatsidf>
    612c:	180b883a 	mov	r5,r3
    6130:	1009883a 	mov	r4,r2
    6134:	a00d883a 	mov	r6,r20
    6138:	a80f883a 	mov	r7,r21
    613c:	000e1200 	call	e120 <__muldf3>
    6140:	0011883a 	mov	r8,zero
    6144:	02500734 	movhi	r9,16412
    6148:	1009883a 	mov	r4,r2
    614c:	180b883a 	mov	r5,r3
    6150:	480f883a 	mov	r7,r9
    6154:	400d883a 	mov	r6,r8
    6158:	000e0ac0 	call	e0ac <__adddf3>
    615c:	d9000f17 	ldw	r4,60(sp)
    6160:	102d883a 	mov	r22,r2
    6164:	00bf3034 	movhi	r2,64704
    6168:	18b9883a 	add	fp,r3,r2
    616c:	e02f883a 	mov	r23,fp
    6170:	20028f1e 	bne	r4,zero,6bb0 <_dtoa_r+0xf3c>
    6174:	0005883a 	mov	r2,zero
    6178:	00d00534 	movhi	r3,16404
    617c:	a009883a 	mov	r4,r20
    6180:	a80b883a 	mov	r5,r21
    6184:	180f883a 	mov	r7,r3
    6188:	100d883a 	mov	r6,r2
    618c:	000e02c0 	call	e02c <__subdf3>
    6190:	1009883a 	mov	r4,r2
    6194:	e00f883a 	mov	r7,fp
    6198:	180b883a 	mov	r5,r3
    619c:	b00d883a 	mov	r6,r22
    61a0:	1025883a 	mov	r18,r2
    61a4:	1827883a 	mov	r19,r3
    61a8:	000e84c0 	call	e84c <__gtdf2>
    61ac:	00834f16 	blt	zero,r2,6eec <_dtoa_r+0x1278>
    61b0:	e0e0003c 	xorhi	r3,fp,32768
    61b4:	9009883a 	mov	r4,r18
    61b8:	980b883a 	mov	r5,r19
    61bc:	180f883a 	mov	r7,r3
    61c0:	b00d883a 	mov	r6,r22
    61c4:	000e95c0 	call	e95c <__ltdf2>
    61c8:	1000080e 	bge	r2,zero,61ec <_dtoa_r+0x578>
    61cc:	0027883a 	mov	r19,zero
    61d0:	0025883a 	mov	r18,zero
    61d4:	d8802617 	ldw	r2,152(sp)
    61d8:	df000517 	ldw	fp,20(sp)
    61dc:	d8000615 	stw	zero,24(sp)
    61e0:	0084303a 	nor	r2,zero,r2
    61e4:	d8800d15 	stw	r2,52(sp)
    61e8:	00019b06 	br	6858 <_dtoa_r+0xbe4>
    61ec:	d9801217 	ldw	r6,72(sp)
    61f0:	d8801317 	ldw	r2,76(sp)
    61f4:	3029883a 	mov	r20,r6
    61f8:	102b883a 	mov	r21,r2
    61fc:	d8c00217 	ldw	r3,8(sp)
    6200:	18008516 	blt	r3,zero,6418 <_dtoa_r+0x7a4>
    6204:	d9000d17 	ldw	r4,52(sp)
    6208:	00800384 	movi	r2,14
    620c:	11008216 	blt	r2,r4,6418 <_dtoa_r+0x7a4>
    6210:	200490fa 	slli	r2,r4,3
    6214:	d9802617 	ldw	r6,152(sp)
    6218:	00c00074 	movhi	r3,1
    621c:	18ca1104 	addi	r3,r3,10308
    6220:	10c5883a 	add	r2,r2,r3
    6224:	14800017 	ldw	r18,0(r2)
    6228:	14c00117 	ldw	r19,4(r2)
    622c:	30031e16 	blt	r6,zero,6ea8 <_dtoa_r+0x1234>
    6230:	d9000517 	ldw	r4,20(sp)
    6234:	d8c00f17 	ldw	r3,60(sp)
    6238:	a823883a 	mov	r17,r21
    623c:	a021883a 	mov	r16,r20
    6240:	192b883a 	add	r21,r3,r4
    6244:	2039883a 	mov	fp,r4
    6248:	00000f06 	br	6288 <_dtoa_r+0x614>
    624c:	0005883a 	mov	r2,zero
    6250:	00d00934 	movhi	r3,16420
    6254:	5009883a 	mov	r4,r10
    6258:	580b883a 	mov	r5,r11
    625c:	180f883a 	mov	r7,r3
    6260:	100d883a 	mov	r6,r2
    6264:	000e1200 	call	e120 <__muldf3>
    6268:	180b883a 	mov	r5,r3
    626c:	000d883a 	mov	r6,zero
    6270:	000f883a 	mov	r7,zero
    6274:	1009883a 	mov	r4,r2
    6278:	1021883a 	mov	r16,r2
    627c:	1823883a 	mov	r17,r3
    6280:	000e7c40 	call	e7c4 <__nedf2>
    6284:	10004526 	beq	r2,zero,639c <_dtoa_r+0x728>
    6288:	900d883a 	mov	r6,r18
    628c:	980f883a 	mov	r7,r19
    6290:	8009883a 	mov	r4,r16
    6294:	880b883a 	mov	r5,r17
    6298:	000e4e40 	call	e4e4 <__divdf3>
    629c:	180b883a 	mov	r5,r3
    62a0:	1009883a 	mov	r4,r2
    62a4:	000eb640 	call	eb64 <__fixdfsi>
    62a8:	1009883a 	mov	r4,r2
    62ac:	1029883a 	mov	r20,r2
    62b0:	000ea6c0 	call	ea6c <__floatsidf>
    62b4:	180f883a 	mov	r7,r3
    62b8:	9009883a 	mov	r4,r18
    62bc:	980b883a 	mov	r5,r19
    62c0:	100d883a 	mov	r6,r2
    62c4:	000e1200 	call	e120 <__muldf3>
    62c8:	180f883a 	mov	r7,r3
    62cc:	880b883a 	mov	r5,r17
    62d0:	8009883a 	mov	r4,r16
    62d4:	100d883a 	mov	r6,r2
    62d8:	000e02c0 	call	e02c <__subdf3>
    62dc:	1015883a 	mov	r10,r2
    62e0:	a0800c04 	addi	r2,r20,48
    62e4:	e0800005 	stb	r2,0(fp)
    62e8:	e7000044 	addi	fp,fp,1
    62ec:	1817883a 	mov	r11,r3
    62f0:	e57fd61e 	bne	fp,r21,624c <_dtoa_r+0x5d8>
    62f4:	500d883a 	mov	r6,r10
    62f8:	180f883a 	mov	r7,r3
    62fc:	5009883a 	mov	r4,r10
    6300:	180b883a 	mov	r5,r3
    6304:	000e0ac0 	call	e0ac <__adddf3>
    6308:	100d883a 	mov	r6,r2
    630c:	9009883a 	mov	r4,r18
    6310:	980b883a 	mov	r5,r19
    6314:	180f883a 	mov	r7,r3
    6318:	1021883a 	mov	r16,r2
    631c:	1823883a 	mov	r17,r3
    6320:	000e95c0 	call	e95c <__ltdf2>
    6324:	10000816 	blt	r2,zero,6348 <_dtoa_r+0x6d4>
    6328:	980b883a 	mov	r5,r19
    632c:	800d883a 	mov	r6,r16
    6330:	880f883a 	mov	r7,r17
    6334:	9009883a 	mov	r4,r18
    6338:	000e73c0 	call	e73c <__eqdf2>
    633c:	1000171e 	bne	r2,zero,639c <_dtoa_r+0x728>
    6340:	a080004c 	andi	r2,r20,1
    6344:	10001526 	beq	r2,zero,639c <_dtoa_r+0x728>
    6348:	d8800d17 	ldw	r2,52(sp)
    634c:	d8800415 	stw	r2,16(sp)
    6350:	e009883a 	mov	r4,fp
    6354:	213fffc4 	addi	r4,r4,-1
    6358:	20c00007 	ldb	r3,0(r4)
    635c:	00800e44 	movi	r2,57
    6360:	1880081e 	bne	r3,r2,6384 <_dtoa_r+0x710>
    6364:	d8800517 	ldw	r2,20(sp)
    6368:	113ffa1e 	bne	r2,r4,6354 <_dtoa_r+0x6e0>
    636c:	d8c00417 	ldw	r3,16(sp)
    6370:	d9800517 	ldw	r6,20(sp)
    6374:	00800c04 	movi	r2,48
    6378:	18c00044 	addi	r3,r3,1
    637c:	d8c00415 	stw	r3,16(sp)
    6380:	30800005 	stb	r2,0(r6)
    6384:	20800003 	ldbu	r2,0(r4)
    6388:	d8c00417 	ldw	r3,16(sp)
    638c:	27000044 	addi	fp,r4,1
    6390:	10800044 	addi	r2,r2,1
    6394:	d8c00d15 	stw	r3,52(sp)
    6398:	20800005 	stb	r2,0(r4)
    639c:	d9001617 	ldw	r4,88(sp)
    63a0:	d9400717 	ldw	r5,28(sp)
    63a4:	00085700 	call	8570 <_Bfree>
    63a8:	e0000005 	stb	zero,0(fp)
    63ac:	d9800d17 	ldw	r6,52(sp)
    63b0:	d8c02717 	ldw	r3,156(sp)
    63b4:	d9002917 	ldw	r4,164(sp)
    63b8:	30800044 	addi	r2,r6,1
    63bc:	18800015 	stw	r2,0(r3)
    63c0:	20029c26 	beq	r4,zero,6e34 <_dtoa_r+0x11c0>
    63c4:	d8c00517 	ldw	r3,20(sp)
    63c8:	27000015 	stw	fp,0(r4)
    63cc:	003e5d06 	br	5d44 <_dtoa_r+0xd0>
    63d0:	d9800d17 	ldw	r6,52(sp)
    63d4:	00c00074 	movhi	r3,1
    63d8:	18ca1104 	addi	r3,r3,10308
    63dc:	d9001217 	ldw	r4,72(sp)
    63e0:	300490fa 	slli	r2,r6,3
    63e4:	d9401317 	ldw	r5,76(sp)
    63e8:	10c5883a 	add	r2,r2,r3
    63ec:	12000017 	ldw	r8,0(r2)
    63f0:	12400117 	ldw	r9,4(r2)
    63f4:	400d883a 	mov	r6,r8
    63f8:	480f883a 	mov	r7,r9
    63fc:	000e95c0 	call	e95c <__ltdf2>
    6400:	1000030e 	bge	r2,zero,6410 <_dtoa_r+0x79c>
    6404:	d8800d17 	ldw	r2,52(sp)
    6408:	10bfffc4 	addi	r2,r2,-1
    640c:	d8800d15 	stw	r2,52(sp)
    6410:	d8000c15 	stw	zero,48(sp)
    6414:	003ea806 	br	5eb8 <_dtoa_r+0x244>
    6418:	d9000b17 	ldw	r4,44(sp)
    641c:	202cc03a 	cmpne	r22,r4,zero
    6420:	b000c71e 	bne	r22,zero,6740 <_dtoa_r+0xacc>
    6424:	dc001117 	ldw	r16,68(sp)
    6428:	dc801017 	ldw	r18,64(sp)
    642c:	0027883a 	mov	r19,zero
    6430:	04000b0e 	bge	zero,r16,6460 <_dtoa_r+0x7ec>
    6434:	d8c00a17 	ldw	r3,40(sp)
    6438:	00c0090e 	bge	zero,r3,6460 <_dtoa_r+0x7ec>
    643c:	8005883a 	mov	r2,r16
    6440:	1c011316 	blt	r3,r16,6890 <_dtoa_r+0xc1c>
    6444:	d9000a17 	ldw	r4,40(sp)
    6448:	d9801117 	ldw	r6,68(sp)
    644c:	80a1c83a 	sub	r16,r16,r2
    6450:	2089c83a 	sub	r4,r4,r2
    6454:	308dc83a 	sub	r6,r6,r2
    6458:	d9000a15 	stw	r4,40(sp)
    645c:	d9801115 	stw	r6,68(sp)
    6460:	d8801017 	ldw	r2,64(sp)
    6464:	0080150e 	bge	zero,r2,64bc <_dtoa_r+0x848>
    6468:	d8c00b17 	ldw	r3,44(sp)
    646c:	1805003a 	cmpeq	r2,r3,zero
    6470:	1001c91e 	bne	r2,zero,6b98 <_dtoa_r+0xf24>
    6474:	04800e0e 	bge	zero,r18,64b0 <_dtoa_r+0x83c>
    6478:	d9001617 	ldw	r4,88(sp)
    647c:	980b883a 	mov	r5,r19
    6480:	900d883a 	mov	r6,r18
    6484:	00093240 	call	9324 <__pow5mult>
    6488:	d9001617 	ldw	r4,88(sp)
    648c:	d9800717 	ldw	r6,28(sp)
    6490:	100b883a 	mov	r5,r2
    6494:	1027883a 	mov	r19,r2
    6498:	00090000 	call	9000 <__multiply>
    649c:	d9001617 	ldw	r4,88(sp)
    64a0:	d9400717 	ldw	r5,28(sp)
    64a4:	1023883a 	mov	r17,r2
    64a8:	00085700 	call	8570 <_Bfree>
    64ac:	dc400715 	stw	r17,28(sp)
    64b0:	d9001017 	ldw	r4,64(sp)
    64b4:	248dc83a 	sub	r6,r4,r18
    64b8:	30010e1e 	bne	r6,zero,68f4 <_dtoa_r+0xc80>
    64bc:	d9001617 	ldw	r4,88(sp)
    64c0:	04400044 	movi	r17,1
    64c4:	880b883a 	mov	r5,r17
    64c8:	00091e80 	call	91e8 <__i2b>
    64cc:	d9800917 	ldw	r6,36(sp)
    64d0:	1025883a 	mov	r18,r2
    64d4:	0180040e 	bge	zero,r6,64e8 <_dtoa_r+0x874>
    64d8:	d9001617 	ldw	r4,88(sp)
    64dc:	100b883a 	mov	r5,r2
    64e0:	00093240 	call	9324 <__pow5mult>
    64e4:	1025883a 	mov	r18,r2
    64e8:	d8801717 	ldw	r2,92(sp)
    64ec:	8880f30e 	bge	r17,r2,68bc <_dtoa_r+0xc48>
    64f0:	0023883a 	mov	r17,zero
    64f4:	d9800917 	ldw	r6,36(sp)
    64f8:	30019e1e 	bne	r6,zero,6b74 <_dtoa_r+0xf00>
    64fc:	00c00044 	movi	r3,1
    6500:	d9000a17 	ldw	r4,40(sp)
    6504:	20c5883a 	add	r2,r4,r3
    6508:	10c007cc 	andi	r3,r2,31
    650c:	1800841e 	bne	r3,zero,6720 <_dtoa_r+0xaac>
    6510:	00800704 	movi	r2,28
    6514:	d9000a17 	ldw	r4,40(sp)
    6518:	d9801117 	ldw	r6,68(sp)
    651c:	80a1883a 	add	r16,r16,r2
    6520:	2089883a 	add	r4,r4,r2
    6524:	308d883a 	add	r6,r6,r2
    6528:	d9000a15 	stw	r4,40(sp)
    652c:	d9801115 	stw	r6,68(sp)
    6530:	d8801117 	ldw	r2,68(sp)
    6534:	0080050e 	bge	zero,r2,654c <_dtoa_r+0x8d8>
    6538:	d9400717 	ldw	r5,28(sp)
    653c:	d9001617 	ldw	r4,88(sp)
    6540:	100d883a 	mov	r6,r2
    6544:	0008eb40 	call	8eb4 <__lshift>
    6548:	d8800715 	stw	r2,28(sp)
    654c:	d8c00a17 	ldw	r3,40(sp)
    6550:	00c0050e 	bge	zero,r3,6568 <_dtoa_r+0x8f4>
    6554:	d9001617 	ldw	r4,88(sp)
    6558:	900b883a 	mov	r5,r18
    655c:	180d883a 	mov	r6,r3
    6560:	0008eb40 	call	8eb4 <__lshift>
    6564:	1025883a 	mov	r18,r2
    6568:	d9000c17 	ldw	r4,48(sp)
    656c:	2005003a 	cmpeq	r2,r4,zero
    6570:	10016f26 	beq	r2,zero,6b30 <_dtoa_r+0xebc>
    6574:	d9000f17 	ldw	r4,60(sp)
    6578:	0102170e 	bge	zero,r4,6dd8 <_dtoa_r+0x1164>
    657c:	d9800b17 	ldw	r6,44(sp)
    6580:	3005003a 	cmpeq	r2,r6,zero
    6584:	1000881e 	bne	r2,zero,67a8 <_dtoa_r+0xb34>
    6588:	0400050e 	bge	zero,r16,65a0 <_dtoa_r+0x92c>
    658c:	d9001617 	ldw	r4,88(sp)
    6590:	980b883a 	mov	r5,r19
    6594:	800d883a 	mov	r6,r16
    6598:	0008eb40 	call	8eb4 <__lshift>
    659c:	1027883a 	mov	r19,r2
    65a0:	8804c03a 	cmpne	r2,r17,zero
    65a4:	1002541e 	bne	r2,zero,6ef8 <_dtoa_r+0x1284>
    65a8:	980b883a 	mov	r5,r19
    65ac:	dd800517 	ldw	r22,20(sp)
    65b0:	dcc00615 	stw	r19,24(sp)
    65b4:	a700004c 	andi	fp,r20,1
    65b8:	2827883a 	mov	r19,r5
    65bc:	d9000717 	ldw	r4,28(sp)
    65c0:	900b883a 	mov	r5,r18
    65c4:	0005a5c0 	call	5a5c <quorem>
    65c8:	d9000717 	ldw	r4,28(sp)
    65cc:	d9400617 	ldw	r5,24(sp)
    65d0:	1023883a 	mov	r17,r2
    65d4:	8dc00c04 	addi	r23,r17,48
    65d8:	00086cc0 	call	86cc <__mcmp>
    65dc:	d9001617 	ldw	r4,88(sp)
    65e0:	900b883a 	mov	r5,r18
    65e4:	980d883a 	mov	r6,r19
    65e8:	1029883a 	mov	r20,r2
    65ec:	0008d280 	call	8d28 <__mdiff>
    65f0:	102b883a 	mov	r21,r2
    65f4:	10800317 	ldw	r2,12(r2)
    65f8:	1001281e 	bne	r2,zero,6a9c <_dtoa_r+0xe28>
    65fc:	d9000717 	ldw	r4,28(sp)
    6600:	a80b883a 	mov	r5,r21
    6604:	00086cc0 	call	86cc <__mcmp>
    6608:	d9001617 	ldw	r4,88(sp)
    660c:	1021883a 	mov	r16,r2
    6610:	a80b883a 	mov	r5,r21
    6614:	00085700 	call	8570 <_Bfree>
    6618:	8000041e 	bne	r16,zero,662c <_dtoa_r+0x9b8>
    661c:	d8801717 	ldw	r2,92(sp)
    6620:	1000021e 	bne	r2,zero,662c <_dtoa_r+0x9b8>
    6624:	e004c03a 	cmpne	r2,fp,zero
    6628:	10011726 	beq	r2,zero,6a88 <_dtoa_r+0xe14>
    662c:	a0010616 	blt	r20,zero,6a48 <_dtoa_r+0xdd4>
    6630:	a000041e 	bne	r20,zero,6644 <_dtoa_r+0x9d0>
    6634:	d8c01717 	ldw	r3,92(sp)
    6638:	1800021e 	bne	r3,zero,6644 <_dtoa_r+0x9d0>
    663c:	e004c03a 	cmpne	r2,fp,zero
    6640:	10010126 	beq	r2,zero,6a48 <_dtoa_r+0xdd4>
    6644:	04023d16 	blt	zero,r16,6f3c <_dtoa_r+0x12c8>
    6648:	b5c00005 	stb	r23,0(r22)
    664c:	d9800517 	ldw	r6,20(sp)
    6650:	d9000f17 	ldw	r4,60(sp)
    6654:	b5800044 	addi	r22,r22,1
    6658:	3105883a 	add	r2,r6,r4
    665c:	b0806526 	beq	r22,r2,67f4 <_dtoa_r+0xb80>
    6660:	d9400717 	ldw	r5,28(sp)
    6664:	d9001617 	ldw	r4,88(sp)
    6668:	01800284 	movi	r6,10
    666c:	000f883a 	mov	r7,zero
    6670:	00092240 	call	9224 <__multadd>
    6674:	d8800715 	stw	r2,28(sp)
    6678:	d8800617 	ldw	r2,24(sp)
    667c:	14c10c26 	beq	r2,r19,6ab0 <_dtoa_r+0xe3c>
    6680:	d9400617 	ldw	r5,24(sp)
    6684:	d9001617 	ldw	r4,88(sp)
    6688:	01800284 	movi	r6,10
    668c:	000f883a 	mov	r7,zero
    6690:	00092240 	call	9224 <__multadd>
    6694:	d9001617 	ldw	r4,88(sp)
    6698:	980b883a 	mov	r5,r19
    669c:	01800284 	movi	r6,10
    66a0:	000f883a 	mov	r7,zero
    66a4:	d8800615 	stw	r2,24(sp)
    66a8:	00092240 	call	9224 <__multadd>
    66ac:	1027883a 	mov	r19,r2
    66b0:	003fc206 	br	65bc <_dtoa_r+0x948>
    66b4:	2445c83a 	sub	r2,r4,r17
    66b8:	a088983a 	sll	r4,r20,r2
    66bc:	003e4b06 	br	5fec <_dtoa_r+0x378>
    66c0:	01bfffc4 	movi	r6,-1
    66c4:	00800044 	movi	r2,1
    66c8:	d9800e15 	stw	r6,56(sp)
    66cc:	d9800f15 	stw	r6,60(sp)
    66d0:	d8800b15 	stw	r2,44(sp)
    66d4:	d8c01617 	ldw	r3,88(sp)
    66d8:	008005c4 	movi	r2,23
    66dc:	18001115 	stw	zero,68(r3)
    66e0:	1580082e 	bgeu	r2,r22,6704 <_dtoa_r+0xa90>
    66e4:	00c00104 	movi	r3,4
    66e8:	0009883a 	mov	r4,zero
    66ec:	18c7883a 	add	r3,r3,r3
    66f0:	18800504 	addi	r2,r3,20
    66f4:	21000044 	addi	r4,r4,1
    66f8:	b0bffc2e 	bgeu	r22,r2,66ec <_dtoa_r+0xa78>
    66fc:	d9801617 	ldw	r6,88(sp)
    6700:	31001115 	stw	r4,68(r6)
    6704:	dc000f17 	ldw	r16,60(sp)
    6708:	003e4b06 	br	6038 <_dtoa_r+0x3c4>
    670c:	d9801717 	ldw	r6,92(sp)
    6710:	0023883a 	mov	r17,zero
    6714:	31bfff04 	addi	r6,r6,-4
    6718:	d9801715 	stw	r6,92(sp)
    671c:	003df806 	br	5f00 <_dtoa_r+0x28c>
    6720:	00800804 	movi	r2,32
    6724:	10c9c83a 	sub	r4,r2,r3
    6728:	00c00104 	movi	r3,4
    672c:	19005a16 	blt	r3,r4,6898 <_dtoa_r+0xc24>
    6730:	008000c4 	movi	r2,3
    6734:	113f7e16 	blt	r2,r4,6530 <_dtoa_r+0x8bc>
    6738:	20800704 	addi	r2,r4,28
    673c:	003f7506 	br	6514 <_dtoa_r+0x8a0>
    6740:	d9801717 	ldw	r6,92(sp)
    6744:	00800044 	movi	r2,1
    6748:	1180a10e 	bge	r2,r6,69d0 <_dtoa_r+0xd5c>
    674c:	d9800f17 	ldw	r6,60(sp)
    6750:	d8c01017 	ldw	r3,64(sp)
    6754:	30bfffc4 	addi	r2,r6,-1
    6758:	1881c616 	blt	r3,r2,6e74 <_dtoa_r+0x1200>
    675c:	18a5c83a 	sub	r18,r3,r2
    6760:	d8800f17 	ldw	r2,60(sp)
    6764:	10026216 	blt	r2,zero,70f0 <_dtoa_r+0x147c>
    6768:	dc001117 	ldw	r16,68(sp)
    676c:	1007883a 	mov	r3,r2
    6770:	d9800a17 	ldw	r6,40(sp)
    6774:	d8801117 	ldw	r2,68(sp)
    6778:	d9001617 	ldw	r4,88(sp)
    677c:	30cd883a 	add	r6,r6,r3
    6780:	10c5883a 	add	r2,r2,r3
    6784:	01400044 	movi	r5,1
    6788:	d9800a15 	stw	r6,40(sp)
    678c:	d8801115 	stw	r2,68(sp)
    6790:	00091e80 	call	91e8 <__i2b>
    6794:	1027883a 	mov	r19,r2
    6798:	003f2506 	br	6430 <_dtoa_r+0x7bc>
    679c:	00c00074 	movhi	r3,1
    67a0:	18c94904 	addi	r3,r3,9508
    67a4:	003d6706 	br	5d44 <_dtoa_r+0xd0>
    67a8:	dd800517 	ldw	r22,20(sp)
    67ac:	04000044 	movi	r16,1
    67b0:	00000706 	br	67d0 <_dtoa_r+0xb5c>
    67b4:	d9400717 	ldw	r5,28(sp)
    67b8:	d9001617 	ldw	r4,88(sp)
    67bc:	01800284 	movi	r6,10
    67c0:	000f883a 	mov	r7,zero
    67c4:	00092240 	call	9224 <__multadd>
    67c8:	d8800715 	stw	r2,28(sp)
    67cc:	84000044 	addi	r16,r16,1
    67d0:	d9000717 	ldw	r4,28(sp)
    67d4:	900b883a 	mov	r5,r18
    67d8:	0005a5c0 	call	5a5c <quorem>
    67dc:	15c00c04 	addi	r23,r2,48
    67e0:	b5c00005 	stb	r23,0(r22)
    67e4:	d8c00f17 	ldw	r3,60(sp)
    67e8:	b5800044 	addi	r22,r22,1
    67ec:	80fff116 	blt	r16,r3,67b4 <_dtoa_r+0xb40>
    67f0:	d8000615 	stw	zero,24(sp)
    67f4:	d9400717 	ldw	r5,28(sp)
    67f8:	d9001617 	ldw	r4,88(sp)
    67fc:	01800044 	movi	r6,1
    6800:	0008eb40 	call	8eb4 <__lshift>
    6804:	1009883a 	mov	r4,r2
    6808:	900b883a 	mov	r5,r18
    680c:	d8800715 	stw	r2,28(sp)
    6810:	00086cc0 	call	86cc <__mcmp>
    6814:	00803c0e 	bge	zero,r2,6908 <_dtoa_r+0xc94>
    6818:	b009883a 	mov	r4,r22
    681c:	213fffc4 	addi	r4,r4,-1
    6820:	21400003 	ldbu	r5,0(r4)
    6824:	00800e44 	movi	r2,57
    6828:	28c03fcc 	andi	r3,r5,255
    682c:	18c0201c 	xori	r3,r3,128
    6830:	18ffe004 	addi	r3,r3,-128
    6834:	1881981e 	bne	r3,r2,6e98 <_dtoa_r+0x1224>
    6838:	d9800517 	ldw	r6,20(sp)
    683c:	21bff71e 	bne	r4,r6,681c <_dtoa_r+0xba8>
    6840:	d8800d17 	ldw	r2,52(sp)
    6844:	37000044 	addi	fp,r6,1
    6848:	10800044 	addi	r2,r2,1
    684c:	d8800d15 	stw	r2,52(sp)
    6850:	00800c44 	movi	r2,49
    6854:	30800005 	stb	r2,0(r6)
    6858:	d9001617 	ldw	r4,88(sp)
    685c:	900b883a 	mov	r5,r18
    6860:	00085700 	call	8570 <_Bfree>
    6864:	983ecd26 	beq	r19,zero,639c <_dtoa_r+0x728>
    6868:	d8c00617 	ldw	r3,24(sp)
    686c:	18000426 	beq	r3,zero,6880 <_dtoa_r+0xc0c>
    6870:	1cc00326 	beq	r3,r19,6880 <_dtoa_r+0xc0c>
    6874:	d9001617 	ldw	r4,88(sp)
    6878:	180b883a 	mov	r5,r3
    687c:	00085700 	call	8570 <_Bfree>
    6880:	d9001617 	ldw	r4,88(sp)
    6884:	980b883a 	mov	r5,r19
    6888:	00085700 	call	8570 <_Bfree>
    688c:	003ec306 	br	639c <_dtoa_r+0x728>
    6890:	1805883a 	mov	r2,r3
    6894:	003eeb06 	br	6444 <_dtoa_r+0x7d0>
    6898:	d9800a17 	ldw	r6,40(sp)
    689c:	d8c01117 	ldw	r3,68(sp)
    68a0:	20bfff04 	addi	r2,r4,-4
    68a4:	308d883a 	add	r6,r6,r2
    68a8:	1887883a 	add	r3,r3,r2
    68ac:	80a1883a 	add	r16,r16,r2
    68b0:	d9800a15 	stw	r6,40(sp)
    68b4:	d8c01115 	stw	r3,68(sp)
    68b8:	003f1d06 	br	6530 <_dtoa_r+0x8bc>
    68bc:	a03f0c1e 	bne	r20,zero,64f0 <_dtoa_r+0x87c>
    68c0:	00800434 	movhi	r2,16
    68c4:	10bfffc4 	addi	r2,r2,-1
    68c8:	a884703a 	and	r2,r21,r2
    68cc:	103f081e 	bne	r2,zero,64f0 <_dtoa_r+0x87c>
    68d0:	a89ffc2c 	andhi	r2,r21,32752
    68d4:	103f0626 	beq	r2,zero,64f0 <_dtoa_r+0x87c>
    68d8:	d8c01117 	ldw	r3,68(sp)
    68dc:	d9000a17 	ldw	r4,40(sp)
    68e0:	18c00044 	addi	r3,r3,1
    68e4:	21000044 	addi	r4,r4,1
    68e8:	d8c01115 	stw	r3,68(sp)
    68ec:	d9000a15 	stw	r4,40(sp)
    68f0:	003f0006 	br	64f4 <_dtoa_r+0x880>
    68f4:	d9400717 	ldw	r5,28(sp)
    68f8:	d9001617 	ldw	r4,88(sp)
    68fc:	00093240 	call	9324 <__pow5mult>
    6900:	d8800715 	stw	r2,28(sp)
    6904:	003eed06 	br	64bc <_dtoa_r+0x848>
    6908:	1000021e 	bne	r2,zero,6914 <_dtoa_r+0xca0>
    690c:	b880004c 	andi	r2,r23,1
    6910:	103fc11e 	bne	r2,zero,6818 <_dtoa_r+0xba4>
    6914:	b5bfffc4 	addi	r22,r22,-1
    6918:	b0c00007 	ldb	r3,0(r22)
    691c:	00800c04 	movi	r2,48
    6920:	18bffc26 	beq	r3,r2,6914 <_dtoa_r+0xca0>
    6924:	b7000044 	addi	fp,r22,1
    6928:	003fcb06 	br	6858 <_dtoa_r+0xbe4>
    692c:	d9800d17 	ldw	r6,52(sp)
    6930:	018fc83a 	sub	r7,zero,r6
    6934:	3801f726 	beq	r7,zero,7114 <_dtoa_r+0x14a0>
    6938:	398003cc 	andi	r6,r7,15
    693c:	300c90fa 	slli	r6,r6,3
    6940:	01400074 	movhi	r5,1
    6944:	294a1104 	addi	r5,r5,10308
    6948:	d9001217 	ldw	r4,72(sp)
    694c:	314d883a 	add	r6,r6,r5
    6950:	30c00117 	ldw	r3,4(r6)
    6954:	30800017 	ldw	r2,0(r6)
    6958:	d9401317 	ldw	r5,76(sp)
    695c:	3821d13a 	srai	r16,r7,4
    6960:	100d883a 	mov	r6,r2
    6964:	180f883a 	mov	r7,r3
    6968:	000e1200 	call	e120 <__muldf3>
    696c:	1011883a 	mov	r8,r2
    6970:	1813883a 	mov	r9,r3
    6974:	1029883a 	mov	r20,r2
    6978:	182b883a 	mov	r21,r3
    697c:	8001e526 	beq	r16,zero,7114 <_dtoa_r+0x14a0>
    6980:	05800084 	movi	r22,2
    6984:	04400074 	movhi	r17,1
    6988:	8c4a4304 	addi	r17,r17,10508
    698c:	8080004c 	andi	r2,r16,1
    6990:	1005003a 	cmpeq	r2,r2,zero
    6994:	1000081e 	bne	r2,zero,69b8 <_dtoa_r+0xd44>
    6998:	89800017 	ldw	r6,0(r17)
    699c:	89c00117 	ldw	r7,4(r17)
    69a0:	480b883a 	mov	r5,r9
    69a4:	4009883a 	mov	r4,r8
    69a8:	000e1200 	call	e120 <__muldf3>
    69ac:	1011883a 	mov	r8,r2
    69b0:	b5800044 	addi	r22,r22,1
    69b4:	1813883a 	mov	r9,r3
    69b8:	8021d07a 	srai	r16,r16,1
    69bc:	8c400204 	addi	r17,r17,8
    69c0:	803ff21e 	bne	r16,zero,698c <_dtoa_r+0xd18>
    69c4:	4029883a 	mov	r20,r8
    69c8:	482b883a 	mov	r21,r9
    69cc:	003dca06 	br	60f8 <_dtoa_r+0x484>
    69d0:	d9000817 	ldw	r4,32(sp)
    69d4:	2005003a 	cmpeq	r2,r4,zero
    69d8:	1001f61e 	bne	r2,zero,71b4 <_dtoa_r+0x1540>
    69dc:	dc001117 	ldw	r16,68(sp)
    69e0:	dc801017 	ldw	r18,64(sp)
    69e4:	18c10cc4 	addi	r3,r3,1075
    69e8:	003f6106 	br	6770 <_dtoa_r+0xafc>
    69ec:	d8000b15 	stw	zero,44(sp)
    69f0:	d9802617 	ldw	r6,152(sp)
    69f4:	d8c00d17 	ldw	r3,52(sp)
    69f8:	30800044 	addi	r2,r6,1
    69fc:	18ad883a 	add	r22,r3,r2
    6a00:	b13fffc4 	addi	r4,r22,-1
    6a04:	d9000e15 	stw	r4,56(sp)
    6a08:	0581f60e 	bge	zero,r22,71e4 <_dtoa_r+0x1570>
    6a0c:	dd800f15 	stw	r22,60(sp)
    6a10:	003f3006 	br	66d4 <_dtoa_r+0xa60>
    6a14:	d8000b15 	stw	zero,44(sp)
    6a18:	d9002617 	ldw	r4,152(sp)
    6a1c:	0101eb0e 	bge	zero,r4,71cc <_dtoa_r+0x1558>
    6a20:	202d883a 	mov	r22,r4
    6a24:	d9000e15 	stw	r4,56(sp)
    6a28:	d9000f15 	stw	r4,60(sp)
    6a2c:	003f2906 	br	66d4 <_dtoa_r+0xa60>
    6a30:	01800044 	movi	r6,1
    6a34:	d9800b15 	stw	r6,44(sp)
    6a38:	003ff706 	br	6a18 <_dtoa_r+0xda4>
    6a3c:	01000044 	movi	r4,1
    6a40:	d9000b15 	stw	r4,44(sp)
    6a44:	003fea06 	br	69f0 <_dtoa_r+0xd7c>
    6a48:	04000c0e 	bge	zero,r16,6a7c <_dtoa_r+0xe08>
    6a4c:	d9400717 	ldw	r5,28(sp)
    6a50:	d9001617 	ldw	r4,88(sp)
    6a54:	01800044 	movi	r6,1
    6a58:	0008eb40 	call	8eb4 <__lshift>
    6a5c:	1009883a 	mov	r4,r2
    6a60:	900b883a 	mov	r5,r18
    6a64:	d8800715 	stw	r2,28(sp)
    6a68:	00086cc0 	call	86cc <__mcmp>
    6a6c:	0081e00e 	bge	zero,r2,71f0 <_dtoa_r+0x157c>
    6a70:	bdc00044 	addi	r23,r23,1
    6a74:	00800e84 	movi	r2,58
    6a78:	b881a226 	beq	r23,r2,7104 <_dtoa_r+0x1490>
    6a7c:	b7000044 	addi	fp,r22,1
    6a80:	b5c00005 	stb	r23,0(r22)
    6a84:	003f7406 	br	6858 <_dtoa_r+0xbe4>
    6a88:	00800e44 	movi	r2,57
    6a8c:	b8819d26 	beq	r23,r2,7104 <_dtoa_r+0x1490>
    6a90:	053ffa0e 	bge	zero,r20,6a7c <_dtoa_r+0xe08>
    6a94:	8dc00c44 	addi	r23,r17,49
    6a98:	003ff806 	br	6a7c <_dtoa_r+0xe08>
    6a9c:	d9001617 	ldw	r4,88(sp)
    6aa0:	a80b883a 	mov	r5,r21
    6aa4:	04000044 	movi	r16,1
    6aa8:	00085700 	call	8570 <_Bfree>
    6aac:	003edf06 	br	662c <_dtoa_r+0x9b8>
    6ab0:	d9001617 	ldw	r4,88(sp)
    6ab4:	980b883a 	mov	r5,r19
    6ab8:	01800284 	movi	r6,10
    6abc:	000f883a 	mov	r7,zero
    6ac0:	00092240 	call	9224 <__multadd>
    6ac4:	1027883a 	mov	r19,r2
    6ac8:	d8800615 	stw	r2,24(sp)
    6acc:	003ebb06 	br	65bc <_dtoa_r+0x948>
    6ad0:	d9801117 	ldw	r6,68(sp)
    6ad4:	d8800d17 	ldw	r2,52(sp)
    6ad8:	d8000915 	stw	zero,36(sp)
    6adc:	308dc83a 	sub	r6,r6,r2
    6ae0:	0087c83a 	sub	r3,zero,r2
    6ae4:	d9801115 	stw	r6,68(sp)
    6ae8:	d8c01015 	stw	r3,64(sp)
    6aec:	003cfe06 	br	5ee8 <_dtoa_r+0x274>
    6af0:	018dc83a 	sub	r6,zero,r6
    6af4:	d9801115 	stw	r6,68(sp)
    6af8:	d8000a15 	stw	zero,40(sp)
    6afc:	003cf306 	br	5ecc <_dtoa_r+0x258>
    6b00:	d9000d17 	ldw	r4,52(sp)
    6b04:	000ea6c0 	call	ea6c <__floatsidf>
    6b08:	880b883a 	mov	r5,r17
    6b0c:	8009883a 	mov	r4,r16
    6b10:	180f883a 	mov	r7,r3
    6b14:	100d883a 	mov	r6,r2
    6b18:	000e7c40 	call	e7c4 <__nedf2>
    6b1c:	103ce126 	beq	r2,zero,5ea4 <_dtoa_r+0x230>
    6b20:	d9800d17 	ldw	r6,52(sp)
    6b24:	31bfffc4 	addi	r6,r6,-1
    6b28:	d9800d15 	stw	r6,52(sp)
    6b2c:	003cdd06 	br	5ea4 <_dtoa_r+0x230>
    6b30:	d9000717 	ldw	r4,28(sp)
    6b34:	900b883a 	mov	r5,r18
    6b38:	00086cc0 	call	86cc <__mcmp>
    6b3c:	103e8d0e 	bge	r2,zero,6574 <_dtoa_r+0x900>
    6b40:	d9400717 	ldw	r5,28(sp)
    6b44:	d9001617 	ldw	r4,88(sp)
    6b48:	01800284 	movi	r6,10
    6b4c:	000f883a 	mov	r7,zero
    6b50:	00092240 	call	9224 <__multadd>
    6b54:	d9800d17 	ldw	r6,52(sp)
    6b58:	d8800715 	stw	r2,28(sp)
    6b5c:	31bfffc4 	addi	r6,r6,-1
    6b60:	d9800d15 	stw	r6,52(sp)
    6b64:	b001a71e 	bne	r22,zero,7204 <_dtoa_r+0x1590>
    6b68:	d8800e17 	ldw	r2,56(sp)
    6b6c:	d8800f15 	stw	r2,60(sp)
    6b70:	003e8006 	br	6574 <_dtoa_r+0x900>
    6b74:	90800417 	ldw	r2,16(r18)
    6b78:	1085883a 	add	r2,r2,r2
    6b7c:	1085883a 	add	r2,r2,r2
    6b80:	1485883a 	add	r2,r2,r18
    6b84:	11000417 	ldw	r4,16(r2)
    6b88:	00085980 	call	8598 <__hi0bits>
    6b8c:	00c00804 	movi	r3,32
    6b90:	1887c83a 	sub	r3,r3,r2
    6b94:	003e5a06 	br	6500 <_dtoa_r+0x88c>
    6b98:	d9400717 	ldw	r5,28(sp)
    6b9c:	d9801017 	ldw	r6,64(sp)
    6ba0:	d9001617 	ldw	r4,88(sp)
    6ba4:	00093240 	call	9324 <__pow5mult>
    6ba8:	d8800715 	stw	r2,28(sp)
    6bac:	003e4306 	br	64bc <_dtoa_r+0x848>
    6bb0:	d9800f17 	ldw	r6,60(sp)
    6bb4:	d8800d17 	ldw	r2,52(sp)
    6bb8:	d9800315 	stw	r6,12(sp)
    6bbc:	d8800415 	stw	r2,16(sp)
    6bc0:	d8c00b17 	ldw	r3,44(sp)
    6bc4:	1805003a 	cmpeq	r2,r3,zero
    6bc8:	1000e21e 	bne	r2,zero,6f54 <_dtoa_r+0x12e0>
    6bcc:	d9000317 	ldw	r4,12(sp)
    6bd0:	0005883a 	mov	r2,zero
    6bd4:	00cff834 	movhi	r3,16352
    6bd8:	200c90fa 	slli	r6,r4,3
    6bdc:	01000074 	movhi	r4,1
    6be0:	210a1104 	addi	r4,r4,10308
    6be4:	180b883a 	mov	r5,r3
    6be8:	310d883a 	add	r6,r6,r4
    6bec:	327fff17 	ldw	r9,-4(r6)
    6bf0:	323ffe17 	ldw	r8,-8(r6)
    6bf4:	1009883a 	mov	r4,r2
    6bf8:	480f883a 	mov	r7,r9
    6bfc:	400d883a 	mov	r6,r8
    6c00:	000e4e40 	call	e4e4 <__divdf3>
    6c04:	180b883a 	mov	r5,r3
    6c08:	b00d883a 	mov	r6,r22
    6c0c:	b80f883a 	mov	r7,r23
    6c10:	1009883a 	mov	r4,r2
    6c14:	000e02c0 	call	e02c <__subdf3>
    6c18:	a80b883a 	mov	r5,r21
    6c1c:	a009883a 	mov	r4,r20
    6c20:	d8c01915 	stw	r3,100(sp)
    6c24:	d8801815 	stw	r2,96(sp)
    6c28:	000eb640 	call	eb64 <__fixdfsi>
    6c2c:	1009883a 	mov	r4,r2
    6c30:	1027883a 	mov	r19,r2
    6c34:	000ea6c0 	call	ea6c <__floatsidf>
    6c38:	a80b883a 	mov	r5,r21
    6c3c:	a009883a 	mov	r4,r20
    6c40:	180f883a 	mov	r7,r3
    6c44:	100d883a 	mov	r6,r2
    6c48:	000e02c0 	call	e02c <__subdf3>
    6c4c:	d9801817 	ldw	r6,96(sp)
    6c50:	1823883a 	mov	r17,r3
    6c54:	d8801415 	stw	r2,80(sp)
    6c58:	302d883a 	mov	r22,r6
    6c5c:	d9800517 	ldw	r6,20(sp)
    6c60:	9cc00c04 	addi	r19,r19,48
    6c64:	dc401515 	stw	r17,84(sp)
    6c68:	d8c01917 	ldw	r3,100(sp)
    6c6c:	34c00005 	stb	r19,0(r6)
    6c70:	d8800517 	ldw	r2,20(sp)
    6c74:	d9401917 	ldw	r5,100(sp)
    6c78:	d9801417 	ldw	r6,80(sp)
    6c7c:	b009883a 	mov	r4,r22
    6c80:	880f883a 	mov	r7,r17
    6c84:	182f883a 	mov	r23,r3
    6c88:	17000044 	addi	fp,r2,1
    6c8c:	000e84c0 	call	e84c <__gtdf2>
    6c90:	00804e16 	blt	zero,r2,6dcc <_dtoa_r+0x1158>
    6c94:	d9801417 	ldw	r6,80(sp)
    6c98:	0005883a 	mov	r2,zero
    6c9c:	00cffc34 	movhi	r3,16368
    6ca0:	180b883a 	mov	r5,r3
    6ca4:	880f883a 	mov	r7,r17
    6ca8:	1009883a 	mov	r4,r2
    6cac:	000e02c0 	call	e02c <__subdf3>
    6cb0:	d9401917 	ldw	r5,100(sp)
    6cb4:	180f883a 	mov	r7,r3
    6cb8:	b009883a 	mov	r4,r22
    6cbc:	100d883a 	mov	r6,r2
    6cc0:	000e84c0 	call	e84c <__gtdf2>
    6cc4:	00bda216 	blt	zero,r2,6350 <_dtoa_r+0x6dc>
    6cc8:	d8c00317 	ldw	r3,12(sp)
    6ccc:	00800044 	movi	r2,1
    6cd0:	10c01216 	blt	r2,r3,6d1c <_dtoa_r+0x10a8>
    6cd4:	003d4506 	br	61ec <_dtoa_r+0x578>
    6cd8:	d9801417 	ldw	r6,80(sp)
    6cdc:	0005883a 	mov	r2,zero
    6ce0:	00cffc34 	movhi	r3,16368
    6ce4:	180b883a 	mov	r5,r3
    6ce8:	880f883a 	mov	r7,r17
    6cec:	1009883a 	mov	r4,r2
    6cf0:	000e02c0 	call	e02c <__subdf3>
    6cf4:	d9c01b17 	ldw	r7,108(sp)
    6cf8:	180b883a 	mov	r5,r3
    6cfc:	1009883a 	mov	r4,r2
    6d00:	b00d883a 	mov	r6,r22
    6d04:	000e95c0 	call	e95c <__ltdf2>
    6d08:	103d9116 	blt	r2,zero,6350 <_dtoa_r+0x6dc>
    6d0c:	d9800517 	ldw	r6,20(sp)
    6d10:	d9000317 	ldw	r4,12(sp)
    6d14:	3105883a 	add	r2,r6,r4
    6d18:	e0bd3426 	beq	fp,r2,61ec <_dtoa_r+0x578>
    6d1c:	04500934 	movhi	r17,16420
    6d20:	0021883a 	mov	r16,zero
    6d24:	b80b883a 	mov	r5,r23
    6d28:	b009883a 	mov	r4,r22
    6d2c:	800d883a 	mov	r6,r16
    6d30:	880f883a 	mov	r7,r17
    6d34:	000e1200 	call	e120 <__muldf3>
    6d38:	d9401517 	ldw	r5,84(sp)
    6d3c:	d9001417 	ldw	r4,80(sp)
    6d40:	880f883a 	mov	r7,r17
    6d44:	000d883a 	mov	r6,zero
    6d48:	d8801a15 	stw	r2,104(sp)
    6d4c:	d8c01b15 	stw	r3,108(sp)
    6d50:	000e1200 	call	e120 <__muldf3>
    6d54:	180b883a 	mov	r5,r3
    6d58:	1009883a 	mov	r4,r2
    6d5c:	1823883a 	mov	r17,r3
    6d60:	1021883a 	mov	r16,r2
    6d64:	000eb640 	call	eb64 <__fixdfsi>
    6d68:	1009883a 	mov	r4,r2
    6d6c:	102b883a 	mov	r21,r2
    6d70:	000ea6c0 	call	ea6c <__floatsidf>
    6d74:	880b883a 	mov	r5,r17
    6d78:	8009883a 	mov	r4,r16
    6d7c:	180f883a 	mov	r7,r3
    6d80:	100d883a 	mov	r6,r2
    6d84:	000e02c0 	call	e02c <__subdf3>
    6d88:	1021883a 	mov	r16,r2
    6d8c:	d9001b17 	ldw	r4,108(sp)
    6d90:	1823883a 	mov	r17,r3
    6d94:	dc001415 	stw	r16,80(sp)
    6d98:	ad400c04 	addi	r21,r21,48
    6d9c:	dc401515 	stw	r17,84(sp)
    6da0:	d8801a17 	ldw	r2,104(sp)
    6da4:	e5400005 	stb	r21,0(fp)
    6da8:	202f883a 	mov	r23,r4
    6dac:	d9c01b17 	ldw	r7,108(sp)
    6db0:	d9001417 	ldw	r4,80(sp)
    6db4:	880b883a 	mov	r5,r17
    6db8:	100d883a 	mov	r6,r2
    6dbc:	102d883a 	mov	r22,r2
    6dc0:	e7000044 	addi	fp,fp,1
    6dc4:	000e95c0 	call	e95c <__ltdf2>
    6dc8:	103fc30e 	bge	r2,zero,6cd8 <_dtoa_r+0x1064>
    6dcc:	d9000417 	ldw	r4,16(sp)
    6dd0:	d9000d15 	stw	r4,52(sp)
    6dd4:	003d7106 	br	639c <_dtoa_r+0x728>
    6dd8:	d9801717 	ldw	r6,92(sp)
    6ddc:	00800084 	movi	r2,2
    6de0:	11bde60e 	bge	r2,r6,657c <_dtoa_r+0x908>
    6de4:	203cfb1e 	bne	r4,zero,61d4 <_dtoa_r+0x560>
    6de8:	d9001617 	ldw	r4,88(sp)
    6dec:	900b883a 	mov	r5,r18
    6df0:	01800144 	movi	r6,5
    6df4:	000f883a 	mov	r7,zero
    6df8:	00092240 	call	9224 <__multadd>
    6dfc:	d9000717 	ldw	r4,28(sp)
    6e00:	100b883a 	mov	r5,r2
    6e04:	1025883a 	mov	r18,r2
    6e08:	00086cc0 	call	86cc <__mcmp>
    6e0c:	00bcf10e 	bge	zero,r2,61d4 <_dtoa_r+0x560>
    6e10:	d8c00d17 	ldw	r3,52(sp)
    6e14:	d9000517 	ldw	r4,20(sp)
    6e18:	d8000615 	stw	zero,24(sp)
    6e1c:	18c00044 	addi	r3,r3,1
    6e20:	d8c00d15 	stw	r3,52(sp)
    6e24:	00800c44 	movi	r2,49
    6e28:	27000044 	addi	fp,r4,1
    6e2c:	20800005 	stb	r2,0(r4)
    6e30:	003e8906 	br	6858 <_dtoa_r+0xbe4>
    6e34:	d8c00517 	ldw	r3,20(sp)
    6e38:	003bc206 	br	5d44 <_dtoa_r+0xd0>
    6e3c:	01800074 	movhi	r6,1
    6e40:	318a4304 	addi	r6,r6,10508
    6e44:	30c00917 	ldw	r3,36(r6)
    6e48:	30800817 	ldw	r2,32(r6)
    6e4c:	d9001217 	ldw	r4,72(sp)
    6e50:	d9401317 	ldw	r5,76(sp)
    6e54:	180f883a 	mov	r7,r3
    6e58:	100d883a 	mov	r6,r2
    6e5c:	000e4e40 	call	e4e4 <__divdf3>
    6e60:	948003cc 	andi	r18,r18,15
    6e64:	058000c4 	movi	r22,3
    6e68:	1029883a 	mov	r20,r2
    6e6c:	182b883a 	mov	r21,r3
    6e70:	003c8906 	br	6098 <_dtoa_r+0x424>
    6e74:	d9001017 	ldw	r4,64(sp)
    6e78:	d9800917 	ldw	r6,36(sp)
    6e7c:	0025883a 	mov	r18,zero
    6e80:	1105c83a 	sub	r2,r2,r4
    6e84:	2089883a 	add	r4,r4,r2
    6e88:	308d883a 	add	r6,r6,r2
    6e8c:	d9001015 	stw	r4,64(sp)
    6e90:	d9800915 	stw	r6,36(sp)
    6e94:	003e3206 	br	6760 <_dtoa_r+0xaec>
    6e98:	28800044 	addi	r2,r5,1
    6e9c:	27000044 	addi	fp,r4,1
    6ea0:	20800005 	stb	r2,0(r4)
    6ea4:	003e6c06 	br	6858 <_dtoa_r+0xbe4>
    6ea8:	d8800f17 	ldw	r2,60(sp)
    6eac:	00bce016 	blt	zero,r2,6230 <_dtoa_r+0x5bc>
    6eb0:	d9800f17 	ldw	r6,60(sp)
    6eb4:	303cc51e 	bne	r6,zero,61cc <_dtoa_r+0x558>
    6eb8:	0005883a 	mov	r2,zero
    6ebc:	00d00534 	movhi	r3,16404
    6ec0:	980b883a 	mov	r5,r19
    6ec4:	180f883a 	mov	r7,r3
    6ec8:	9009883a 	mov	r4,r18
    6ecc:	100d883a 	mov	r6,r2
    6ed0:	000e1200 	call	e120 <__muldf3>
    6ed4:	180b883a 	mov	r5,r3
    6ed8:	a80f883a 	mov	r7,r21
    6edc:	1009883a 	mov	r4,r2
    6ee0:	a00d883a 	mov	r6,r20
    6ee4:	000e8d40 	call	e8d4 <__gedf2>
    6ee8:	103cb80e 	bge	r2,zero,61cc <_dtoa_r+0x558>
    6eec:	0027883a 	mov	r19,zero
    6ef0:	0025883a 	mov	r18,zero
    6ef4:	003fc606 	br	6e10 <_dtoa_r+0x119c>
    6ef8:	99400117 	ldw	r5,4(r19)
    6efc:	d9001617 	ldw	r4,88(sp)
    6f00:	0008af00 	call	8af0 <_Balloc>
    6f04:	99800417 	ldw	r6,16(r19)
    6f08:	11000304 	addi	r4,r2,12
    6f0c:	99400304 	addi	r5,r19,12
    6f10:	318d883a 	add	r6,r6,r6
    6f14:	318d883a 	add	r6,r6,r6
    6f18:	31800204 	addi	r6,r6,8
    6f1c:	1023883a 	mov	r17,r2
    6f20:	00017300 	call	1730 <memcpy>
    6f24:	d9001617 	ldw	r4,88(sp)
    6f28:	880b883a 	mov	r5,r17
    6f2c:	01800044 	movi	r6,1
    6f30:	0008eb40 	call	8eb4 <__lshift>
    6f34:	100b883a 	mov	r5,r2
    6f38:	003d9c06 	br	65ac <_dtoa_r+0x938>
    6f3c:	00800e44 	movi	r2,57
    6f40:	b8807026 	beq	r23,r2,7104 <_dtoa_r+0x1490>
    6f44:	b8800044 	addi	r2,r23,1
    6f48:	b7000044 	addi	fp,r22,1
    6f4c:	b0800005 	stb	r2,0(r22)
    6f50:	003e4106 	br	6858 <_dtoa_r+0xbe4>
    6f54:	d8800317 	ldw	r2,12(sp)
    6f58:	01800074 	movhi	r6,1
    6f5c:	318a1104 	addi	r6,r6,10308
    6f60:	b009883a 	mov	r4,r22
    6f64:	100e90fa 	slli	r7,r2,3
    6f68:	b80b883a 	mov	r5,r23
    6f6c:	398f883a 	add	r7,r7,r6
    6f70:	38bffe17 	ldw	r2,-8(r7)
    6f74:	d9800517 	ldw	r6,20(sp)
    6f78:	38ffff17 	ldw	r3,-4(r7)
    6f7c:	37000044 	addi	fp,r6,1
    6f80:	180f883a 	mov	r7,r3
    6f84:	100d883a 	mov	r6,r2
    6f88:	000e1200 	call	e120 <__muldf3>
    6f8c:	a80b883a 	mov	r5,r21
    6f90:	a009883a 	mov	r4,r20
    6f94:	182f883a 	mov	r23,r3
    6f98:	102d883a 	mov	r22,r2
    6f9c:	000eb640 	call	eb64 <__fixdfsi>
    6fa0:	1009883a 	mov	r4,r2
    6fa4:	1027883a 	mov	r19,r2
    6fa8:	000ea6c0 	call	ea6c <__floatsidf>
    6fac:	a80b883a 	mov	r5,r21
    6fb0:	a009883a 	mov	r4,r20
    6fb4:	180f883a 	mov	r7,r3
    6fb8:	100d883a 	mov	r6,r2
    6fbc:	000e02c0 	call	e02c <__subdf3>
    6fc0:	180b883a 	mov	r5,r3
    6fc4:	d8c00517 	ldw	r3,20(sp)
    6fc8:	9cc00c04 	addi	r19,r19,48
    6fcc:	1009883a 	mov	r4,r2
    6fd0:	1cc00005 	stb	r19,0(r3)
    6fd4:	2021883a 	mov	r16,r4
    6fd8:	d9000317 	ldw	r4,12(sp)
    6fdc:	00800044 	movi	r2,1
    6fe0:	2823883a 	mov	r17,r5
    6fe4:	20802226 	beq	r4,r2,7070 <_dtoa_r+0x13fc>
    6fe8:	1029883a 	mov	r20,r2
    6fec:	0005883a 	mov	r2,zero
    6ff0:	00d00934 	movhi	r3,16420
    6ff4:	180f883a 	mov	r7,r3
    6ff8:	100d883a 	mov	r6,r2
    6ffc:	880b883a 	mov	r5,r17
    7000:	8009883a 	mov	r4,r16
    7004:	000e1200 	call	e120 <__muldf3>
    7008:	180b883a 	mov	r5,r3
    700c:	1009883a 	mov	r4,r2
    7010:	1823883a 	mov	r17,r3
    7014:	1021883a 	mov	r16,r2
    7018:	000eb640 	call	eb64 <__fixdfsi>
    701c:	1009883a 	mov	r4,r2
    7020:	102b883a 	mov	r21,r2
    7024:	000ea6c0 	call	ea6c <__floatsidf>
    7028:	880b883a 	mov	r5,r17
    702c:	8009883a 	mov	r4,r16
    7030:	180f883a 	mov	r7,r3
    7034:	100d883a 	mov	r6,r2
    7038:	000e02c0 	call	e02c <__subdf3>
    703c:	180b883a 	mov	r5,r3
    7040:	d8c00517 	ldw	r3,20(sp)
    7044:	1009883a 	mov	r4,r2
    7048:	ad400c04 	addi	r21,r21,48
    704c:	1d05883a 	add	r2,r3,r20
    7050:	15400005 	stb	r21,0(r2)
    7054:	2021883a 	mov	r16,r4
    7058:	d9000317 	ldw	r4,12(sp)
    705c:	a5000044 	addi	r20,r20,1
    7060:	2823883a 	mov	r17,r5
    7064:	a13fe11e 	bne	r20,r4,6fec <_dtoa_r+0x1378>
    7068:	e505883a 	add	r2,fp,r20
    706c:	173fffc4 	addi	fp,r2,-1
    7070:	0025883a 	mov	r18,zero
    7074:	04cff834 	movhi	r19,16352
    7078:	b009883a 	mov	r4,r22
    707c:	b80b883a 	mov	r5,r23
    7080:	900d883a 	mov	r6,r18
    7084:	980f883a 	mov	r7,r19
    7088:	000e0ac0 	call	e0ac <__adddf3>
    708c:	180b883a 	mov	r5,r3
    7090:	1009883a 	mov	r4,r2
    7094:	800d883a 	mov	r6,r16
    7098:	880f883a 	mov	r7,r17
    709c:	000e95c0 	call	e95c <__ltdf2>
    70a0:	103cab16 	blt	r2,zero,6350 <_dtoa_r+0x6dc>
    70a4:	0009883a 	mov	r4,zero
    70a8:	980b883a 	mov	r5,r19
    70ac:	b80f883a 	mov	r7,r23
    70b0:	b00d883a 	mov	r6,r22
    70b4:	000e02c0 	call	e02c <__subdf3>
    70b8:	180b883a 	mov	r5,r3
    70bc:	880f883a 	mov	r7,r17
    70c0:	1009883a 	mov	r4,r2
    70c4:	800d883a 	mov	r6,r16
    70c8:	000e84c0 	call	e84c <__gtdf2>
    70cc:	00bc470e 	bge	zero,r2,61ec <_dtoa_r+0x578>
    70d0:	00c00c04 	movi	r3,48
    70d4:	e73fffc4 	addi	fp,fp,-1
    70d8:	e0800007 	ldb	r2,0(fp)
    70dc:	10fffd26 	beq	r2,r3,70d4 <_dtoa_r+0x1460>
    70e0:	d9800417 	ldw	r6,16(sp)
    70e4:	e7000044 	addi	fp,fp,1
    70e8:	d9800d15 	stw	r6,52(sp)
    70ec:	003cab06 	br	639c <_dtoa_r+0x728>
    70f0:	d8c00f17 	ldw	r3,60(sp)
    70f4:	d9001117 	ldw	r4,68(sp)
    70f8:	20e1c83a 	sub	r16,r4,r3
    70fc:	0007883a 	mov	r3,zero
    7100:	003d9b06 	br	6770 <_dtoa_r+0xafc>
    7104:	00800e44 	movi	r2,57
    7108:	b0800005 	stb	r2,0(r22)
    710c:	b5800044 	addi	r22,r22,1
    7110:	003dc106 	br	6818 <_dtoa_r+0xba4>
    7114:	05800084 	movi	r22,2
    7118:	003bf706 	br	60f8 <_dtoa_r+0x484>
    711c:	d9000f17 	ldw	r4,60(sp)
    7120:	013c000e 	bge	zero,r4,6124 <_dtoa_r+0x4b0>
    7124:	d9800e17 	ldw	r6,56(sp)
    7128:	01bc300e 	bge	zero,r6,61ec <_dtoa_r+0x578>
    712c:	0005883a 	mov	r2,zero
    7130:	00d00934 	movhi	r3,16420
    7134:	a80b883a 	mov	r5,r21
    7138:	180f883a 	mov	r7,r3
    713c:	a009883a 	mov	r4,r20
    7140:	100d883a 	mov	r6,r2
    7144:	000e1200 	call	e120 <__muldf3>
    7148:	b1000044 	addi	r4,r22,1
    714c:	1021883a 	mov	r16,r2
    7150:	1823883a 	mov	r17,r3
    7154:	000ea6c0 	call	ea6c <__floatsidf>
    7158:	880b883a 	mov	r5,r17
    715c:	8009883a 	mov	r4,r16
    7160:	180f883a 	mov	r7,r3
    7164:	100d883a 	mov	r6,r2
    7168:	000e1200 	call	e120 <__muldf3>
    716c:	0011883a 	mov	r8,zero
    7170:	02500734 	movhi	r9,16412
    7174:	180b883a 	mov	r5,r3
    7178:	480f883a 	mov	r7,r9
    717c:	1009883a 	mov	r4,r2
    7180:	400d883a 	mov	r6,r8
    7184:	000e0ac0 	call	e0ac <__adddf3>
    7188:	102d883a 	mov	r22,r2
    718c:	00bf3034 	movhi	r2,64704
    7190:	10ef883a 	add	r23,r2,r3
    7194:	d8800d17 	ldw	r2,52(sp)
    7198:	d8c00e17 	ldw	r3,56(sp)
    719c:	8029883a 	mov	r20,r16
    71a0:	10bfffc4 	addi	r2,r2,-1
    71a4:	882b883a 	mov	r21,r17
    71a8:	d8800415 	stw	r2,16(sp)
    71ac:	d8c00315 	stw	r3,12(sp)
    71b0:	003e8306 	br	6bc0 <_dtoa_r+0xf4c>
    71b4:	d8800117 	ldw	r2,4(sp)
    71b8:	dc001117 	ldw	r16,68(sp)
    71bc:	dc801017 	ldw	r18,64(sp)
    71c0:	00c00d84 	movi	r3,54
    71c4:	1887c83a 	sub	r3,r3,r2
    71c8:	003d6906 	br	6770 <_dtoa_r+0xafc>
    71cc:	01800044 	movi	r6,1
    71d0:	3021883a 	mov	r16,r6
    71d4:	d9800f15 	stw	r6,60(sp)
    71d8:	d9802615 	stw	r6,152(sp)
    71dc:	d9800e15 	stw	r6,56(sp)
    71e0:	003b9306 	br	6030 <_dtoa_r+0x3bc>
    71e4:	b021883a 	mov	r16,r22
    71e8:	dd800f15 	stw	r22,60(sp)
    71ec:	003b9006 	br	6030 <_dtoa_r+0x3bc>
    71f0:	103e221e 	bne	r2,zero,6a7c <_dtoa_r+0xe08>
    71f4:	b880004c 	andi	r2,r23,1
    71f8:	1005003a 	cmpeq	r2,r2,zero
    71fc:	103e1f1e 	bne	r2,zero,6a7c <_dtoa_r+0xe08>
    7200:	003e1b06 	br	6a70 <_dtoa_r+0xdfc>
    7204:	d9001617 	ldw	r4,88(sp)
    7208:	980b883a 	mov	r5,r19
    720c:	01800284 	movi	r6,10
    7210:	000f883a 	mov	r7,zero
    7214:	00092240 	call	9224 <__multadd>
    7218:	d8c00e17 	ldw	r3,56(sp)
    721c:	1027883a 	mov	r19,r2
    7220:	d8c00f15 	stw	r3,60(sp)
    7224:	003cd306 	br	6574 <_dtoa_r+0x900>

00007228 <_fclose_r>:
    7228:	defffc04 	addi	sp,sp,-16
    722c:	dc400115 	stw	r17,4(sp)
    7230:	dc000015 	stw	r16,0(sp)
    7234:	dfc00315 	stw	ra,12(sp)
    7238:	dc800215 	stw	r18,8(sp)
    723c:	2821883a 	mov	r16,r5
    7240:	2023883a 	mov	r17,r4
    7244:	28002926 	beq	r5,zero,72ec <_fclose_r+0xc4>
    7248:	0000b240 	call	b24 <__sfp_lock_acquire>
    724c:	88000226 	beq	r17,zero,7258 <_fclose_r+0x30>
    7250:	88800e17 	ldw	r2,56(r17)
    7254:	10002d26 	beq	r2,zero,730c <_fclose_r+0xe4>
    7258:	8080030f 	ldh	r2,12(r16)
    725c:	10002226 	beq	r2,zero,72e8 <_fclose_r+0xc0>
    7260:	8809883a 	mov	r4,r17
    7264:	800b883a 	mov	r5,r16
    7268:	000734c0 	call	734c <_fflush_r>
    726c:	1025883a 	mov	r18,r2
    7270:	80800b17 	ldw	r2,44(r16)
    7274:	10000426 	beq	r2,zero,7288 <_fclose_r+0x60>
    7278:	81400717 	ldw	r5,28(r16)
    727c:	8809883a 	mov	r4,r17
    7280:	103ee83a 	callr	r2
    7284:	10002a16 	blt	r2,zero,7330 <_fclose_r+0x108>
    7288:	8080030b 	ldhu	r2,12(r16)
    728c:	1080200c 	andi	r2,r2,128
    7290:	1000231e 	bne	r2,zero,7320 <_fclose_r+0xf8>
    7294:	81400c17 	ldw	r5,48(r16)
    7298:	28000526 	beq	r5,zero,72b0 <_fclose_r+0x88>
    729c:	80801004 	addi	r2,r16,64
    72a0:	28800226 	beq	r5,r2,72ac <_fclose_r+0x84>
    72a4:	8809883a 	mov	r4,r17
    72a8:	00078e40 	call	78e4 <_free_r>
    72ac:	80000c15 	stw	zero,48(r16)
    72b0:	81401117 	ldw	r5,68(r16)
    72b4:	28000326 	beq	r5,zero,72c4 <_fclose_r+0x9c>
    72b8:	8809883a 	mov	r4,r17
    72bc:	00078e40 	call	78e4 <_free_r>
    72c0:	80001115 	stw	zero,68(r16)
    72c4:	8000030d 	sth	zero,12(r16)
    72c8:	0000b280 	call	b28 <__sfp_lock_release>
    72cc:	9005883a 	mov	r2,r18
    72d0:	dfc00317 	ldw	ra,12(sp)
    72d4:	dc800217 	ldw	r18,8(sp)
    72d8:	dc400117 	ldw	r17,4(sp)
    72dc:	dc000017 	ldw	r16,0(sp)
    72e0:	dec00404 	addi	sp,sp,16
    72e4:	f800283a 	ret
    72e8:	0000b280 	call	b28 <__sfp_lock_release>
    72ec:	0025883a 	mov	r18,zero
    72f0:	9005883a 	mov	r2,r18
    72f4:	dfc00317 	ldw	ra,12(sp)
    72f8:	dc800217 	ldw	r18,8(sp)
    72fc:	dc400117 	ldw	r17,4(sp)
    7300:	dc000017 	ldw	r16,0(sp)
    7304:	dec00404 	addi	sp,sp,16
    7308:	f800283a 	ret
    730c:	8809883a 	mov	r4,r17
    7310:	0000b340 	call	b34 <__sinit>
    7314:	8080030f 	ldh	r2,12(r16)
    7318:	103fd11e 	bne	r2,zero,7260 <_fclose_r+0x38>
    731c:	003ff206 	br	72e8 <_fclose_r+0xc0>
    7320:	81400417 	ldw	r5,16(r16)
    7324:	8809883a 	mov	r4,r17
    7328:	00078e40 	call	78e4 <_free_r>
    732c:	003fd906 	br	7294 <_fclose_r+0x6c>
    7330:	04bfffc4 	movi	r18,-1
    7334:	003fd406 	br	7288 <_fclose_r+0x60>

00007338 <fclose>:
    7338:	00800074 	movhi	r2,1
    733c:	10915204 	addi	r2,r2,17736
    7340:	200b883a 	mov	r5,r4
    7344:	11000017 	ldw	r4,0(r2)
    7348:	00072281 	jmpi	7228 <_fclose_r>

0000734c <_fflush_r>:
    734c:	defffb04 	addi	sp,sp,-20
    7350:	dcc00315 	stw	r19,12(sp)
    7354:	dc800215 	stw	r18,8(sp)
    7358:	dfc00415 	stw	ra,16(sp)
    735c:	dc400115 	stw	r17,4(sp)
    7360:	dc000015 	stw	r16,0(sp)
    7364:	2027883a 	mov	r19,r4
    7368:	2825883a 	mov	r18,r5
    736c:	20000226 	beq	r4,zero,7378 <_fflush_r+0x2c>
    7370:	20800e17 	ldw	r2,56(r4)
    7374:	10005626 	beq	r2,zero,74d0 <_fflush_r+0x184>
    7378:	9100030b 	ldhu	r4,12(r18)
    737c:	20ffffcc 	andi	r3,r4,65535
    7380:	18e0001c 	xori	r3,r3,32768
    7384:	18e00004 	addi	r3,r3,-32768
    7388:	1880020c 	andi	r2,r3,8
    738c:	1000261e 	bne	r2,zero,7428 <_fflush_r+0xdc>
    7390:	90c00117 	ldw	r3,4(r18)
    7394:	20820014 	ori	r2,r4,2048
    7398:	9080030d 	sth	r2,12(r18)
    739c:	1009883a 	mov	r4,r2
    73a0:	00c0400e 	bge	zero,r3,74a4 <_fflush_r+0x158>
    73a4:	92000a17 	ldw	r8,40(r18)
    73a8:	40004026 	beq	r8,zero,74ac <_fflush_r+0x160>
    73ac:	2084000c 	andi	r2,r4,4096
    73b0:	10005326 	beq	r2,zero,7500 <_fflush_r+0x1b4>
    73b4:	94001417 	ldw	r16,80(r18)
    73b8:	9080030b 	ldhu	r2,12(r18)
    73bc:	1080010c 	andi	r2,r2,4
    73c0:	1000481e 	bne	r2,zero,74e4 <_fflush_r+0x198>
    73c4:	91400717 	ldw	r5,28(r18)
    73c8:	9809883a 	mov	r4,r19
    73cc:	800d883a 	mov	r6,r16
    73d0:	000f883a 	mov	r7,zero
    73d4:	403ee83a 	callr	r8
    73d8:	8080261e 	bne	r16,r2,7474 <_fflush_r+0x128>
    73dc:	9080030b 	ldhu	r2,12(r18)
    73e0:	91000417 	ldw	r4,16(r18)
    73e4:	90000115 	stw	zero,4(r18)
    73e8:	10bdffcc 	andi	r2,r2,63487
    73ec:	10ffffcc 	andi	r3,r2,65535
    73f0:	18c4000c 	andi	r3,r3,4096
    73f4:	9080030d 	sth	r2,12(r18)
    73f8:	91000015 	stw	r4,0(r18)
    73fc:	18002b26 	beq	r3,zero,74ac <_fflush_r+0x160>
    7400:	0007883a 	mov	r3,zero
    7404:	1805883a 	mov	r2,r3
    7408:	94001415 	stw	r16,80(r18)
    740c:	dfc00417 	ldw	ra,16(sp)
    7410:	dcc00317 	ldw	r19,12(sp)
    7414:	dc800217 	ldw	r18,8(sp)
    7418:	dc400117 	ldw	r17,4(sp)
    741c:	dc000017 	ldw	r16,0(sp)
    7420:	dec00504 	addi	sp,sp,20
    7424:	f800283a 	ret
    7428:	94400417 	ldw	r17,16(r18)
    742c:	88001f26 	beq	r17,zero,74ac <_fflush_r+0x160>
    7430:	90800017 	ldw	r2,0(r18)
    7434:	18c000cc 	andi	r3,r3,3
    7438:	94400015 	stw	r17,0(r18)
    743c:	1461c83a 	sub	r16,r2,r17
    7440:	18002526 	beq	r3,zero,74d8 <_fflush_r+0x18c>
    7444:	0005883a 	mov	r2,zero
    7448:	90800215 	stw	r2,8(r18)
    744c:	0400170e 	bge	zero,r16,74ac <_fflush_r+0x160>
    7450:	90c00917 	ldw	r3,36(r18)
    7454:	91400717 	ldw	r5,28(r18)
    7458:	880d883a 	mov	r6,r17
    745c:	800f883a 	mov	r7,r16
    7460:	9809883a 	mov	r4,r19
    7464:	183ee83a 	callr	r3
    7468:	88a3883a 	add	r17,r17,r2
    746c:	80a1c83a 	sub	r16,r16,r2
    7470:	00bff616 	blt	zero,r2,744c <_fflush_r+0x100>
    7474:	9080030b 	ldhu	r2,12(r18)
    7478:	00ffffc4 	movi	r3,-1
    747c:	10801014 	ori	r2,r2,64
    7480:	9080030d 	sth	r2,12(r18)
    7484:	1805883a 	mov	r2,r3
    7488:	dfc00417 	ldw	ra,16(sp)
    748c:	dcc00317 	ldw	r19,12(sp)
    7490:	dc800217 	ldw	r18,8(sp)
    7494:	dc400117 	ldw	r17,4(sp)
    7498:	dc000017 	ldw	r16,0(sp)
    749c:	dec00504 	addi	sp,sp,20
    74a0:	f800283a 	ret
    74a4:	90800f17 	ldw	r2,60(r18)
    74a8:	00bfbe16 	blt	zero,r2,73a4 <_fflush_r+0x58>
    74ac:	0007883a 	mov	r3,zero
    74b0:	1805883a 	mov	r2,r3
    74b4:	dfc00417 	ldw	ra,16(sp)
    74b8:	dcc00317 	ldw	r19,12(sp)
    74bc:	dc800217 	ldw	r18,8(sp)
    74c0:	dc400117 	ldw	r17,4(sp)
    74c4:	dc000017 	ldw	r16,0(sp)
    74c8:	dec00504 	addi	sp,sp,20
    74cc:	f800283a 	ret
    74d0:	0000b340 	call	b34 <__sinit>
    74d4:	003fa806 	br	7378 <_fflush_r+0x2c>
    74d8:	90800517 	ldw	r2,20(r18)
    74dc:	90800215 	stw	r2,8(r18)
    74e0:	003fda06 	br	744c <_fflush_r+0x100>
    74e4:	90800117 	ldw	r2,4(r18)
    74e8:	90c00c17 	ldw	r3,48(r18)
    74ec:	80a1c83a 	sub	r16,r16,r2
    74f0:	183fb426 	beq	r3,zero,73c4 <_fflush_r+0x78>
    74f4:	90800f17 	ldw	r2,60(r18)
    74f8:	80a1c83a 	sub	r16,r16,r2
    74fc:	003fb106 	br	73c4 <_fflush_r+0x78>
    7500:	91400717 	ldw	r5,28(r18)
    7504:	9809883a 	mov	r4,r19
    7508:	000d883a 	mov	r6,zero
    750c:	01c00044 	movi	r7,1
    7510:	403ee83a 	callr	r8
    7514:	1021883a 	mov	r16,r2
    7518:	00bfffc4 	movi	r2,-1
    751c:	80800226 	beq	r16,r2,7528 <_fflush_r+0x1dc>
    7520:	92000a17 	ldw	r8,40(r18)
    7524:	003fa406 	br	73b8 <_fflush_r+0x6c>
    7528:	98c00017 	ldw	r3,0(r19)
    752c:	00800744 	movi	r2,29
    7530:	18bfde26 	beq	r3,r2,74ac <_fflush_r+0x160>
    7534:	9080030b 	ldhu	r2,12(r18)
    7538:	8007883a 	mov	r3,r16
    753c:	10801014 	ori	r2,r2,64
    7540:	9080030d 	sth	r2,12(r18)
    7544:	003fcf06 	br	7484 <_fflush_r+0x138>

00007548 <fflush>:
    7548:	01400034 	movhi	r5,0
    754c:	295cd304 	addi	r5,r5,29516
    7550:	2007883a 	mov	r3,r4
    7554:	20000526 	beq	r4,zero,756c <fflush+0x24>
    7558:	00800074 	movhi	r2,1
    755c:	10915204 	addi	r2,r2,17736
    7560:	11000017 	ldw	r4,0(r2)
    7564:	180b883a 	mov	r5,r3
    7568:	000734c1 	jmpi	734c <_fflush_r>
    756c:	00800074 	movhi	r2,1
    7570:	10915304 	addi	r2,r2,17740
    7574:	11000017 	ldw	r4,0(r2)
    7578:	0000d8c1 	jmpi	d8c <_fwalk_reent>

0000757c <_fread_r>:
    757c:	defff504 	addi	sp,sp,-44
    7580:	ddc00815 	stw	r23,32(sp)
    7584:	39af383a 	mul	r23,r7,r6
    7588:	df000915 	stw	fp,36(sp)
    758c:	dd800715 	stw	r22,28(sp)
    7590:	dcc00415 	stw	r19,16(sp)
    7594:	dc000115 	stw	r16,4(sp)
    7598:	dfc00a15 	stw	ra,40(sp)
    759c:	dd400615 	stw	r21,24(sp)
    75a0:	dd000515 	stw	r20,20(sp)
    75a4:	dc800315 	stw	r18,12(sp)
    75a8:	dc400215 	stw	r17,8(sp)
    75ac:	d9800015 	stw	r6,0(sp)
    75b0:	3839883a 	mov	fp,r7
    75b4:	2821883a 	mov	r16,r5
    75b8:	202d883a 	mov	r22,r4
    75bc:	dcc00b17 	ldw	r19,44(sp)
    75c0:	b8005926 	beq	r23,zero,7728 <_fread_r+0x1ac>
    75c4:	20000226 	beq	r4,zero,75d0 <_fread_r+0x54>
    75c8:	20800e17 	ldw	r2,56(r4)
    75cc:	10005826 	beq	r2,zero,7730 <_fread_r+0x1b4>
    75d0:	9c400117 	ldw	r17,4(r19)
    75d4:	88005916 	blt	r17,zero,773c <_fread_r+0x1c0>
    75d8:	9880030b 	ldhu	r2,12(r19)
    75dc:	8029883a 	mov	r20,r16
    75e0:	1080008c 	andi	r2,r2,2
    75e4:	1000221e 	bne	r2,zero,7670 <_fread_r+0xf4>
    75e8:	b825883a 	mov	r18,r23
    75ec:	00000106 	br	75f4 <_fread_r+0x78>
    75f0:	9c400117 	ldw	r17,4(r19)
    75f4:	a009883a 	mov	r4,r20
    75f8:	880d883a 	mov	r6,r17
    75fc:	8c80542e 	bgeu	r17,r18,7750 <_fread_r+0x1d4>
    7600:	99400017 	ldw	r5,0(r19)
    7604:	a469883a 	add	r20,r20,r17
    7608:	9465c83a 	sub	r18,r18,r17
    760c:	00017300 	call	1730 <memcpy>
    7610:	98800017 	ldw	r2,0(r19)
    7614:	b009883a 	mov	r4,r22
    7618:	980b883a 	mov	r5,r19
    761c:	1461883a 	add	r16,r2,r17
    7620:	9c000015 	stw	r16,0(r19)
    7624:	00018e00 	call	18e0 <__srefill_r>
    7628:	103ff126 	beq	r2,zero,75f0 <_fread_r+0x74>
    762c:	d9400017 	ldw	r5,0(sp)
    7630:	bc89c83a 	sub	r4,r23,r18
    7634:	000ef800 	call	ef80 <__udivsi3>
    7638:	1039883a 	mov	fp,r2
    763c:	e005883a 	mov	r2,fp
    7640:	dfc00a17 	ldw	ra,40(sp)
    7644:	df000917 	ldw	fp,36(sp)
    7648:	ddc00817 	ldw	r23,32(sp)
    764c:	dd800717 	ldw	r22,28(sp)
    7650:	dd400617 	ldw	r21,24(sp)
    7654:	dd000517 	ldw	r20,20(sp)
    7658:	dcc00417 	ldw	r19,16(sp)
    765c:	dc800317 	ldw	r18,12(sp)
    7660:	dc400217 	ldw	r17,8(sp)
    7664:	dc000117 	ldw	r16,4(sp)
    7668:	dec00b04 	addi	sp,sp,44
    766c:	f800283a 	ret
    7670:	b825883a 	mov	r18,r23
    7674:	8dc03436 	bltu	r17,r23,7748 <_fread_r+0x1cc>
    7678:	99400017 	ldw	r5,0(r19)
    767c:	a009883a 	mov	r4,r20
    7680:	900d883a 	mov	r6,r18
    7684:	00017300 	call	1730 <memcpy>
    7688:	9c000017 	ldw	r16,0(r19)
    768c:	98800117 	ldw	r2,4(r19)
    7690:	99400c17 	ldw	r5,48(r19)
    7694:	84a1883a 	add	r16,r16,r18
    7698:	14a3c83a 	sub	r17,r2,r18
    769c:	a4ab883a 	add	r21,r20,r18
    76a0:	9c400115 	stw	r17,4(r19)
    76a4:	9c000015 	stw	r16,0(r19)
    76a8:	bca9c83a 	sub	r20,r23,r18
    76ac:	28000826 	beq	r5,zero,76d0 <_fread_r+0x154>
    76b0:	a03fe226 	beq	r20,zero,763c <_fread_r+0xc0>
    76b4:	98801004 	addi	r2,r19,64
    76b8:	28800326 	beq	r5,r2,76c8 <_fread_r+0x14c>
    76bc:	b009883a 	mov	r4,r22
    76c0:	00078e40 	call	78e4 <_free_r>
    76c4:	9c000017 	ldw	r16,0(r19)
    76c8:	98000c15 	stw	zero,48(r19)
    76cc:	00000106 	br	76d4 <_fread_r+0x158>
    76d0:	a03fda26 	beq	r20,zero,763c <_fread_r+0xc0>
    76d4:	9c800417 	ldw	r18,16(r19)
    76d8:	9c400517 	ldw	r17,20(r19)
    76dc:	9d400015 	stw	r21,0(r19)
    76e0:	9d400415 	stw	r21,16(r19)
    76e4:	9d000515 	stw	r20,20(r19)
    76e8:	b009883a 	mov	r4,r22
    76ec:	980b883a 	mov	r5,r19
    76f0:	00018e00 	call	18e0 <__srefill_r>
    76f4:	98c00117 	ldw	r3,4(r19)
    76f8:	9c800415 	stw	r18,16(r19)
    76fc:	9c400515 	stw	r17,20(r19)
    7700:	a8eb883a 	add	r21,r21,r3
    7704:	9c000015 	stw	r16,0(r19)
    7708:	a0e9c83a 	sub	r20,r20,r3
    770c:	98000115 	stw	zero,4(r19)
    7710:	103fef26 	beq	r2,zero,76d0 <_fread_r+0x154>
    7714:	d9400017 	ldw	r5,0(sp)
    7718:	bd09c83a 	sub	r4,r23,r20
    771c:	000ef800 	call	ef80 <__udivsi3>
    7720:	1039883a 	mov	fp,r2
    7724:	003fc506 	br	763c <_fread_r+0xc0>
    7728:	0039883a 	mov	fp,zero
    772c:	003fc306 	br	763c <_fread_r+0xc0>
    7730:	0000b340 	call	b34 <__sinit>
    7734:	9c400117 	ldw	r17,4(r19)
    7738:	883fa70e 	bge	r17,zero,75d8 <_fread_r+0x5c>
    773c:	0023883a 	mov	r17,zero
    7740:	98000115 	stw	zero,4(r19)
    7744:	003fa406 	br	75d8 <_fread_r+0x5c>
    7748:	8825883a 	mov	r18,r17
    774c:	003fca06 	br	7678 <_fread_r+0xfc>
    7750:	99400017 	ldw	r5,0(r19)
    7754:	900d883a 	mov	r6,r18
    7758:	00017300 	call	1730 <memcpy>
    775c:	98c00117 	ldw	r3,4(r19)
    7760:	98800017 	ldw	r2,0(r19)
    7764:	1c87c83a 	sub	r3,r3,r18
    7768:	1485883a 	add	r2,r2,r18
    776c:	98800015 	stw	r2,0(r19)
    7770:	98c00115 	stw	r3,4(r19)
    7774:	003fb106 	br	763c <_fread_r+0xc0>

00007778 <fread>:
    7778:	00800074 	movhi	r2,1
    777c:	10915204 	addi	r2,r2,17736
    7780:	2017883a 	mov	r11,r4
    7784:	11000017 	ldw	r4,0(r2)
    7788:	defffe04 	addi	sp,sp,-8
    778c:	3013883a 	mov	r9,r6
    7790:	2805883a 	mov	r2,r5
    7794:	d9c00015 	stw	r7,0(sp)
    7798:	580b883a 	mov	r5,r11
    779c:	100d883a 	mov	r6,r2
    77a0:	480f883a 	mov	r7,r9
    77a4:	dfc00115 	stw	ra,4(sp)
    77a8:	000757c0 	call	757c <_fread_r>
    77ac:	dfc00117 	ldw	ra,4(sp)
    77b0:	dec00204 	addi	sp,sp,8
    77b4:	f800283a 	ret

000077b8 <_malloc_trim_r>:
    77b8:	defffb04 	addi	sp,sp,-20
    77bc:	dcc00315 	stw	r19,12(sp)
    77c0:	04c00074 	movhi	r19,1
    77c4:	9ccbc104 	addi	r19,r19,12036
    77c8:	dc800215 	stw	r18,8(sp)
    77cc:	dc400115 	stw	r17,4(sp)
    77d0:	dc000015 	stw	r16,0(sp)
    77d4:	2823883a 	mov	r17,r5
    77d8:	2025883a 	mov	r18,r4
    77dc:	dfc00415 	stw	ra,16(sp)
    77e0:	000fea40 	call	fea4 <__malloc_lock>
    77e4:	98800217 	ldw	r2,8(r19)
    77e8:	9009883a 	mov	r4,r18
    77ec:	000b883a 	mov	r5,zero
    77f0:	10c00117 	ldw	r3,4(r2)
    77f4:	00bfff04 	movi	r2,-4
    77f8:	18a0703a 	and	r16,r3,r2
    77fc:	8463c83a 	sub	r17,r16,r17
    7800:	8c43fbc4 	addi	r17,r17,4079
    7804:	8822d33a 	srli	r17,r17,12
    7808:	0083ffc4 	movi	r2,4095
    780c:	8c7fffc4 	addi	r17,r17,-1
    7810:	8822933a 	slli	r17,r17,12
    7814:	1440060e 	bge	r2,r17,7830 <_malloc_trim_r+0x78>
    7818:	0001ac00 	call	1ac0 <_sbrk_r>
    781c:	98c00217 	ldw	r3,8(r19)
    7820:	9009883a 	mov	r4,r18
    7824:	044bc83a 	sub	r5,zero,r17
    7828:	80c7883a 	add	r3,r16,r3
    782c:	10c00926 	beq	r2,r3,7854 <_malloc_trim_r+0x9c>
    7830:	000fec40 	call	fec4 <__malloc_unlock>
    7834:	0005883a 	mov	r2,zero
    7838:	dfc00417 	ldw	ra,16(sp)
    783c:	dcc00317 	ldw	r19,12(sp)
    7840:	dc800217 	ldw	r18,8(sp)
    7844:	dc400117 	ldw	r17,4(sp)
    7848:	dc000017 	ldw	r16,0(sp)
    784c:	dec00504 	addi	sp,sp,20
    7850:	f800283a 	ret
    7854:	9009883a 	mov	r4,r18
    7858:	0001ac00 	call	1ac0 <_sbrk_r>
    785c:	844dc83a 	sub	r6,r16,r17
    7860:	00ffffc4 	movi	r3,-1
    7864:	9009883a 	mov	r4,r18
    7868:	000b883a 	mov	r5,zero
    786c:	01c00074 	movhi	r7,1
    7870:	39d81504 	addi	r7,r7,24660
    7874:	31800054 	ori	r6,r6,1
    7878:	10c00926 	beq	r2,r3,78a0 <_malloc_trim_r+0xe8>
    787c:	38800017 	ldw	r2,0(r7)
    7880:	98c00217 	ldw	r3,8(r19)
    7884:	9009883a 	mov	r4,r18
    7888:	1445c83a 	sub	r2,r2,r17
    788c:	38800015 	stw	r2,0(r7)
    7890:	19800115 	stw	r6,4(r3)
    7894:	000fec40 	call	fec4 <__malloc_unlock>
    7898:	00800044 	movi	r2,1
    789c:	003fe606 	br	7838 <_malloc_trim_r+0x80>
    78a0:	0001ac00 	call	1ac0 <_sbrk_r>
    78a4:	99800217 	ldw	r6,8(r19)
    78a8:	100f883a 	mov	r7,r2
    78ac:	9009883a 	mov	r4,r18
    78b0:	1187c83a 	sub	r3,r2,r6
    78b4:	008003c4 	movi	r2,15
    78b8:	19400054 	ori	r5,r3,1
    78bc:	10ffdc0e 	bge	r2,r3,7830 <_malloc_trim_r+0x78>
    78c0:	00800074 	movhi	r2,1
    78c4:	10915504 	addi	r2,r2,17748
    78c8:	10c00017 	ldw	r3,0(r2)
    78cc:	00800074 	movhi	r2,1
    78d0:	10981504 	addi	r2,r2,24660
    78d4:	31400115 	stw	r5,4(r6)
    78d8:	38c7c83a 	sub	r3,r7,r3
    78dc:	10c00015 	stw	r3,0(r2)
    78e0:	003fd306 	br	7830 <_malloc_trim_r+0x78>

000078e4 <_free_r>:
    78e4:	defffd04 	addi	sp,sp,-12
    78e8:	dc400115 	stw	r17,4(sp)
    78ec:	dc000015 	stw	r16,0(sp)
    78f0:	dfc00215 	stw	ra,8(sp)
    78f4:	2821883a 	mov	r16,r5
    78f8:	2023883a 	mov	r17,r4
    78fc:	28005a26 	beq	r5,zero,7a68 <_free_r+0x184>
    7900:	000fea40 	call	fea4 <__malloc_lock>
    7904:	823ffe04 	addi	r8,r16,-8
    7908:	41400117 	ldw	r5,4(r8)
    790c:	00bfff84 	movi	r2,-2
    7910:	02800074 	movhi	r10,1
    7914:	528bc104 	addi	r10,r10,12036
    7918:	288e703a 	and	r7,r5,r2
    791c:	41cd883a 	add	r6,r8,r7
    7920:	30c00117 	ldw	r3,4(r6)
    7924:	51000217 	ldw	r4,8(r10)
    7928:	00bfff04 	movi	r2,-4
    792c:	1892703a 	and	r9,r3,r2
    7930:	5017883a 	mov	r11,r10
    7934:	31006726 	beq	r6,r4,7ad4 <_free_r+0x1f0>
    7938:	2880004c 	andi	r2,r5,1
    793c:	1005003a 	cmpeq	r2,r2,zero
    7940:	32400115 	stw	r9,4(r6)
    7944:	10001a1e 	bne	r2,zero,79b0 <_free_r+0xcc>
    7948:	000b883a 	mov	r5,zero
    794c:	3247883a 	add	r3,r6,r9
    7950:	18800117 	ldw	r2,4(r3)
    7954:	1080004c 	andi	r2,r2,1
    7958:	1000231e 	bne	r2,zero,79e8 <_free_r+0x104>
    795c:	280ac03a 	cmpne	r5,r5,zero
    7960:	3a4f883a 	add	r7,r7,r9
    7964:	2800451e 	bne	r5,zero,7a7c <_free_r+0x198>
    7968:	31000217 	ldw	r4,8(r6)
    796c:	00800074 	movhi	r2,1
    7970:	108bc304 	addi	r2,r2,12044
    7974:	20807b26 	beq	r4,r2,7b64 <_free_r+0x280>
    7978:	30800317 	ldw	r2,12(r6)
    797c:	3a07883a 	add	r3,r7,r8
    7980:	19c00015 	stw	r7,0(r3)
    7984:	11000215 	stw	r4,8(r2)
    7988:	20800315 	stw	r2,12(r4)
    798c:	38800054 	ori	r2,r7,1
    7990:	40800115 	stw	r2,4(r8)
    7994:	28001a26 	beq	r5,zero,7a00 <_free_r+0x11c>
    7998:	8809883a 	mov	r4,r17
    799c:	dfc00217 	ldw	ra,8(sp)
    79a0:	dc400117 	ldw	r17,4(sp)
    79a4:	dc000017 	ldw	r16,0(sp)
    79a8:	dec00304 	addi	sp,sp,12
    79ac:	000fec41 	jmpi	fec4 <__malloc_unlock>
    79b0:	80bffe17 	ldw	r2,-8(r16)
    79b4:	50c00204 	addi	r3,r10,8
    79b8:	4091c83a 	sub	r8,r8,r2
    79bc:	41000217 	ldw	r4,8(r8)
    79c0:	388f883a 	add	r7,r7,r2
    79c4:	20c06126 	beq	r4,r3,7b4c <_free_r+0x268>
    79c8:	40800317 	ldw	r2,12(r8)
    79cc:	3247883a 	add	r3,r6,r9
    79d0:	000b883a 	mov	r5,zero
    79d4:	11000215 	stw	r4,8(r2)
    79d8:	20800315 	stw	r2,12(r4)
    79dc:	18800117 	ldw	r2,4(r3)
    79e0:	1080004c 	andi	r2,r2,1
    79e4:	103fdd26 	beq	r2,zero,795c <_free_r+0x78>
    79e8:	38800054 	ori	r2,r7,1
    79ec:	3a07883a 	add	r3,r7,r8
    79f0:	280ac03a 	cmpne	r5,r5,zero
    79f4:	40800115 	stw	r2,4(r8)
    79f8:	19c00015 	stw	r7,0(r3)
    79fc:	283fe61e 	bne	r5,zero,7998 <_free_r+0xb4>
    7a00:	00807fc4 	movi	r2,511
    7a04:	11c01f2e 	bgeu	r2,r7,7a84 <_free_r+0x1a0>
    7a08:	3806d27a 	srli	r3,r7,9
    7a0c:	1800481e 	bne	r3,zero,7b30 <_free_r+0x24c>
    7a10:	3804d0fa 	srli	r2,r7,3
    7a14:	100690fa 	slli	r3,r2,3
    7a18:	1acd883a 	add	r6,r3,r11
    7a1c:	31400217 	ldw	r5,8(r6)
    7a20:	31405926 	beq	r6,r5,7b88 <_free_r+0x2a4>
    7a24:	28800117 	ldw	r2,4(r5)
    7a28:	00ffff04 	movi	r3,-4
    7a2c:	10c4703a 	and	r2,r2,r3
    7a30:	3880022e 	bgeu	r7,r2,7a3c <_free_r+0x158>
    7a34:	29400217 	ldw	r5,8(r5)
    7a38:	317ffa1e 	bne	r6,r5,7a24 <_free_r+0x140>
    7a3c:	29800317 	ldw	r6,12(r5)
    7a40:	41800315 	stw	r6,12(r8)
    7a44:	41400215 	stw	r5,8(r8)
    7a48:	8809883a 	mov	r4,r17
    7a4c:	2a000315 	stw	r8,12(r5)
    7a50:	32000215 	stw	r8,8(r6)
    7a54:	dfc00217 	ldw	ra,8(sp)
    7a58:	dc400117 	ldw	r17,4(sp)
    7a5c:	dc000017 	ldw	r16,0(sp)
    7a60:	dec00304 	addi	sp,sp,12
    7a64:	000fec41 	jmpi	fec4 <__malloc_unlock>
    7a68:	dfc00217 	ldw	ra,8(sp)
    7a6c:	dc400117 	ldw	r17,4(sp)
    7a70:	dc000017 	ldw	r16,0(sp)
    7a74:	dec00304 	addi	sp,sp,12
    7a78:	f800283a 	ret
    7a7c:	31000217 	ldw	r4,8(r6)
    7a80:	003fbd06 	br	7978 <_free_r+0x94>
    7a84:	3806d0fa 	srli	r3,r7,3
    7a88:	00800044 	movi	r2,1
    7a8c:	51400117 	ldw	r5,4(r10)
    7a90:	180890fa 	slli	r4,r3,3
    7a94:	1807d0ba 	srai	r3,r3,2
    7a98:	22c9883a 	add	r4,r4,r11
    7a9c:	21800217 	ldw	r6,8(r4)
    7aa0:	10c4983a 	sll	r2,r2,r3
    7aa4:	41000315 	stw	r4,12(r8)
    7aa8:	41800215 	stw	r6,8(r8)
    7aac:	288ab03a 	or	r5,r5,r2
    7ab0:	22000215 	stw	r8,8(r4)
    7ab4:	8809883a 	mov	r4,r17
    7ab8:	51400115 	stw	r5,4(r10)
    7abc:	32000315 	stw	r8,12(r6)
    7ac0:	dfc00217 	ldw	ra,8(sp)
    7ac4:	dc400117 	ldw	r17,4(sp)
    7ac8:	dc000017 	ldw	r16,0(sp)
    7acc:	dec00304 	addi	sp,sp,12
    7ad0:	000fec41 	jmpi	fec4 <__malloc_unlock>
    7ad4:	2880004c 	andi	r2,r5,1
    7ad8:	3a4d883a 	add	r6,r7,r9
    7adc:	1000071e 	bne	r2,zero,7afc <_free_r+0x218>
    7ae0:	80bffe17 	ldw	r2,-8(r16)
    7ae4:	4091c83a 	sub	r8,r8,r2
    7ae8:	41000317 	ldw	r4,12(r8)
    7aec:	40c00217 	ldw	r3,8(r8)
    7af0:	308d883a 	add	r6,r6,r2
    7af4:	20c00215 	stw	r3,8(r4)
    7af8:	19000315 	stw	r4,12(r3)
    7afc:	00800074 	movhi	r2,1
    7b00:	10915404 	addi	r2,r2,17744
    7b04:	11000017 	ldw	r4,0(r2)
    7b08:	30c00054 	ori	r3,r6,1
    7b0c:	52000215 	stw	r8,8(r10)
    7b10:	40c00115 	stw	r3,4(r8)
    7b14:	313fa036 	bltu	r6,r4,7998 <_free_r+0xb4>
    7b18:	00800074 	movhi	r2,1
    7b1c:	10980504 	addi	r2,r2,24596
    7b20:	11400017 	ldw	r5,0(r2)
    7b24:	8809883a 	mov	r4,r17
    7b28:	00077b80 	call	77b8 <_malloc_trim_r>
    7b2c:	003f9a06 	br	7998 <_free_r+0xb4>
    7b30:	00800104 	movi	r2,4
    7b34:	10c0072e 	bgeu	r2,r3,7b54 <_free_r+0x270>
    7b38:	00800504 	movi	r2,20
    7b3c:	10c01936 	bltu	r2,r3,7ba4 <_free_r+0x2c0>
    7b40:	188016c4 	addi	r2,r3,91
    7b44:	100690fa 	slli	r3,r2,3
    7b48:	003fb306 	br	7a18 <_free_r+0x134>
    7b4c:	01400044 	movi	r5,1
    7b50:	003f7e06 	br	794c <_free_r+0x68>
    7b54:	3804d1ba 	srli	r2,r7,6
    7b58:	10800e04 	addi	r2,r2,56
    7b5c:	100690fa 	slli	r3,r2,3
    7b60:	003fad06 	br	7a18 <_free_r+0x134>
    7b64:	22000315 	stw	r8,12(r4)
    7b68:	22000215 	stw	r8,8(r4)
    7b6c:	3a05883a 	add	r2,r7,r8
    7b70:	38c00054 	ori	r3,r7,1
    7b74:	11c00015 	stw	r7,0(r2)
    7b78:	41000215 	stw	r4,8(r8)
    7b7c:	40c00115 	stw	r3,4(r8)
    7b80:	41000315 	stw	r4,12(r8)
    7b84:	003f8406 	br	7998 <_free_r+0xb4>
    7b88:	1005d0ba 	srai	r2,r2,2
    7b8c:	00c00044 	movi	r3,1
    7b90:	51000117 	ldw	r4,4(r10)
    7b94:	1886983a 	sll	r3,r3,r2
    7b98:	20c8b03a 	or	r4,r4,r3
    7b9c:	51000115 	stw	r4,4(r10)
    7ba0:	003fa706 	br	7a40 <_free_r+0x15c>
    7ba4:	00801504 	movi	r2,84
    7ba8:	10c00436 	bltu	r2,r3,7bbc <_free_r+0x2d8>
    7bac:	3804d33a 	srli	r2,r7,12
    7bb0:	10801b84 	addi	r2,r2,110
    7bb4:	100690fa 	slli	r3,r2,3
    7bb8:	003f9706 	br	7a18 <_free_r+0x134>
    7bbc:	00805504 	movi	r2,340
    7bc0:	10c00436 	bltu	r2,r3,7bd4 <_free_r+0x2f0>
    7bc4:	3804d3fa 	srli	r2,r7,15
    7bc8:	10801dc4 	addi	r2,r2,119
    7bcc:	100690fa 	slli	r3,r2,3
    7bd0:	003f9106 	br	7a18 <_free_r+0x134>
    7bd4:	00815504 	movi	r2,1364
    7bd8:	10c0032e 	bgeu	r2,r3,7be8 <_free_r+0x304>
    7bdc:	00801f84 	movi	r2,126
    7be0:	00c0fc04 	movi	r3,1008
    7be4:	003f8c06 	br	7a18 <_free_r+0x134>
    7be8:	3804d4ba 	srli	r2,r7,18
    7bec:	10801f04 	addi	r2,r2,124
    7bf0:	100690fa 	slli	r3,r2,3
    7bf4:	003f8806 	br	7a18 <_free_r+0x134>

00007bf8 <__sfvwrite_r>:
    7bf8:	30800217 	ldw	r2,8(r6)
    7bfc:	defff504 	addi	sp,sp,-44
    7c00:	df000915 	stw	fp,36(sp)
    7c04:	dd800715 	stw	r22,28(sp)
    7c08:	dc800315 	stw	r18,12(sp)
    7c0c:	dfc00a15 	stw	ra,40(sp)
    7c10:	ddc00815 	stw	r23,32(sp)
    7c14:	dd400615 	stw	r21,24(sp)
    7c18:	dd000515 	stw	r20,20(sp)
    7c1c:	dcc00415 	stw	r19,16(sp)
    7c20:	dc400215 	stw	r17,8(sp)
    7c24:	dc000115 	stw	r16,4(sp)
    7c28:	302d883a 	mov	r22,r6
    7c2c:	2039883a 	mov	fp,r4
    7c30:	2825883a 	mov	r18,r5
    7c34:	10001c26 	beq	r2,zero,7ca8 <__sfvwrite_r+0xb0>
    7c38:	29c0030b 	ldhu	r7,12(r5)
    7c3c:	3880020c 	andi	r2,r7,8
    7c40:	10002726 	beq	r2,zero,7ce0 <__sfvwrite_r+0xe8>
    7c44:	28800417 	ldw	r2,16(r5)
    7c48:	10002526 	beq	r2,zero,7ce0 <__sfvwrite_r+0xe8>
    7c4c:	3880008c 	andi	r2,r7,2
    7c50:	b5400017 	ldw	r21,0(r22)
    7c54:	10002826 	beq	r2,zero,7cf8 <__sfvwrite_r+0x100>
    7c58:	0021883a 	mov	r16,zero
    7c5c:	0023883a 	mov	r17,zero
    7c60:	880d883a 	mov	r6,r17
    7c64:	e009883a 	mov	r4,fp
    7c68:	00810004 	movi	r2,1024
    7c6c:	80006e26 	beq	r16,zero,7e28 <__sfvwrite_r+0x230>
    7c70:	800f883a 	mov	r7,r16
    7c74:	91400717 	ldw	r5,28(r18)
    7c78:	1400012e 	bgeu	r2,r16,7c80 <__sfvwrite_r+0x88>
    7c7c:	100f883a 	mov	r7,r2
    7c80:	90c00917 	ldw	r3,36(r18)
    7c84:	183ee83a 	callr	r3
    7c88:	1007883a 	mov	r3,r2
    7c8c:	80a1c83a 	sub	r16,r16,r2
    7c90:	88a3883a 	add	r17,r17,r2
    7c94:	00806d0e 	bge	zero,r2,7e4c <__sfvwrite_r+0x254>
    7c98:	b0800217 	ldw	r2,8(r22)
    7c9c:	10c5c83a 	sub	r2,r2,r3
    7ca0:	b0800215 	stw	r2,8(r22)
    7ca4:	103fee1e 	bne	r2,zero,7c60 <__sfvwrite_r+0x68>
    7ca8:	0009883a 	mov	r4,zero
    7cac:	2005883a 	mov	r2,r4
    7cb0:	dfc00a17 	ldw	ra,40(sp)
    7cb4:	df000917 	ldw	fp,36(sp)
    7cb8:	ddc00817 	ldw	r23,32(sp)
    7cbc:	dd800717 	ldw	r22,28(sp)
    7cc0:	dd400617 	ldw	r21,24(sp)
    7cc4:	dd000517 	ldw	r20,20(sp)
    7cc8:	dcc00417 	ldw	r19,16(sp)
    7ccc:	dc800317 	ldw	r18,12(sp)
    7cd0:	dc400217 	ldw	r17,8(sp)
    7cd4:	dc000117 	ldw	r16,4(sp)
    7cd8:	dec00b04 	addi	sp,sp,44
    7cdc:	f800283a 	ret
    7ce0:	00058b00 	call	58b0 <__swsetup_r>
    7ce4:	1000e41e 	bne	r2,zero,8078 <__sfvwrite_r+0x480>
    7ce8:	91c0030b 	ldhu	r7,12(r18)
    7cec:	b5400017 	ldw	r21,0(r22)
    7cf0:	3880008c 	andi	r2,r7,2
    7cf4:	103fd81e 	bne	r2,zero,7c58 <__sfvwrite_r+0x60>
    7cf8:	3880004c 	andi	r2,r7,1
    7cfc:	1005003a 	cmpeq	r2,r2,zero
    7d00:	10005726 	beq	r2,zero,7e60 <__sfvwrite_r+0x268>
    7d04:	0029883a 	mov	r20,zero
    7d08:	002f883a 	mov	r23,zero
    7d0c:	a0004226 	beq	r20,zero,7e18 <__sfvwrite_r+0x220>
    7d10:	3880800c 	andi	r2,r7,512
    7d14:	94000217 	ldw	r16,8(r18)
    7d18:	10008b26 	beq	r2,zero,7f48 <__sfvwrite_r+0x350>
    7d1c:	800d883a 	mov	r6,r16
    7d20:	a400a536 	bltu	r20,r16,7fb8 <__sfvwrite_r+0x3c0>
    7d24:	3881200c 	andi	r2,r7,1152
    7d28:	10002726 	beq	r2,zero,7dc8 <__sfvwrite_r+0x1d0>
    7d2c:	90800517 	ldw	r2,20(r18)
    7d30:	92000417 	ldw	r8,16(r18)
    7d34:	91400017 	ldw	r5,0(r18)
    7d38:	1087883a 	add	r3,r2,r2
    7d3c:	1887883a 	add	r3,r3,r2
    7d40:	1808d7fa 	srli	r4,r3,31
    7d44:	2a21c83a 	sub	r16,r5,r8
    7d48:	80800044 	addi	r2,r16,1
    7d4c:	20c9883a 	add	r4,r4,r3
    7d50:	2027d07a 	srai	r19,r4,1
    7d54:	a085883a 	add	r2,r20,r2
    7d58:	980d883a 	mov	r6,r19
    7d5c:	9880022e 	bgeu	r19,r2,7d68 <__sfvwrite_r+0x170>
    7d60:	1027883a 	mov	r19,r2
    7d64:	100d883a 	mov	r6,r2
    7d68:	3881000c 	andi	r2,r7,1024
    7d6c:	1000b826 	beq	r2,zero,8050 <__sfvwrite_r+0x458>
    7d70:	300b883a 	mov	r5,r6
    7d74:	e009883a 	mov	r4,fp
    7d78:	0000f0c0 	call	f0c <_malloc_r>
    7d7c:	10003126 	beq	r2,zero,7e44 <__sfvwrite_r+0x24c>
    7d80:	91400417 	ldw	r5,16(r18)
    7d84:	1009883a 	mov	r4,r2
    7d88:	800d883a 	mov	r6,r16
    7d8c:	1023883a 	mov	r17,r2
    7d90:	00017300 	call	1730 <memcpy>
    7d94:	90c0030b 	ldhu	r3,12(r18)
    7d98:	00beffc4 	movi	r2,-1025
    7d9c:	1886703a 	and	r3,r3,r2
    7da0:	18c02014 	ori	r3,r3,128
    7da4:	90c0030d 	sth	r3,12(r18)
    7da8:	9c07c83a 	sub	r3,r19,r16
    7dac:	8c05883a 	add	r2,r17,r16
    7db0:	a00d883a 	mov	r6,r20
    7db4:	a021883a 	mov	r16,r20
    7db8:	90800015 	stw	r2,0(r18)
    7dbc:	90c00215 	stw	r3,8(r18)
    7dc0:	94400415 	stw	r17,16(r18)
    7dc4:	94c00515 	stw	r19,20(r18)
    7dc8:	91000017 	ldw	r4,0(r18)
    7dcc:	b80b883a 	mov	r5,r23
    7dd0:	a023883a 	mov	r17,r20
    7dd4:	00084900 	call	8490 <memmove>
    7dd8:	90c00217 	ldw	r3,8(r18)
    7ddc:	90800017 	ldw	r2,0(r18)
    7de0:	a027883a 	mov	r19,r20
    7de4:	1c07c83a 	sub	r3,r3,r16
    7de8:	1405883a 	add	r2,r2,r16
    7dec:	90c00215 	stw	r3,8(r18)
    7df0:	a021883a 	mov	r16,r20
    7df4:	90800015 	stw	r2,0(r18)
    7df8:	b0800217 	ldw	r2,8(r22)
    7dfc:	1405c83a 	sub	r2,r2,r16
    7e00:	b0800215 	stw	r2,8(r22)
    7e04:	103fa826 	beq	r2,zero,7ca8 <__sfvwrite_r+0xb0>
    7e08:	a469c83a 	sub	r20,r20,r17
    7e0c:	91c0030b 	ldhu	r7,12(r18)
    7e10:	bcef883a 	add	r23,r23,r19
    7e14:	a03fbe1e 	bne	r20,zero,7d10 <__sfvwrite_r+0x118>
    7e18:	adc00017 	ldw	r23,0(r21)
    7e1c:	ad000117 	ldw	r20,4(r21)
    7e20:	ad400204 	addi	r21,r21,8
    7e24:	003fb906 	br	7d0c <__sfvwrite_r+0x114>
    7e28:	ac400017 	ldw	r17,0(r21)
    7e2c:	ac000117 	ldw	r16,4(r21)
    7e30:	ad400204 	addi	r21,r21,8
    7e34:	003f8a06 	br	7c60 <__sfvwrite_r+0x68>
    7e38:	91400417 	ldw	r5,16(r18)
    7e3c:	e009883a 	mov	r4,fp
    7e40:	00078e40 	call	78e4 <_free_r>
    7e44:	00800304 	movi	r2,12
    7e48:	e0800015 	stw	r2,0(fp)
    7e4c:	9080030b 	ldhu	r2,12(r18)
    7e50:	013fffc4 	movi	r4,-1
    7e54:	10801014 	ori	r2,r2,64
    7e58:	9080030d 	sth	r2,12(r18)
    7e5c:	003f9306 	br	7cac <__sfvwrite_r+0xb4>
    7e60:	0027883a 	mov	r19,zero
    7e64:	002f883a 	mov	r23,zero
    7e68:	d8000015 	stw	zero,0(sp)
    7e6c:	0029883a 	mov	r20,zero
    7e70:	98001e26 	beq	r19,zero,7eec <__sfvwrite_r+0x2f4>
    7e74:	d8c00017 	ldw	r3,0(sp)
    7e78:	1804c03a 	cmpne	r2,r3,zero
    7e7c:	10005e26 	beq	r2,zero,7ff8 <__sfvwrite_r+0x400>
    7e80:	9821883a 	mov	r16,r19
    7e84:	a4c0012e 	bgeu	r20,r19,7e8c <__sfvwrite_r+0x294>
    7e88:	a021883a 	mov	r16,r20
    7e8c:	91000017 	ldw	r4,0(r18)
    7e90:	90800417 	ldw	r2,16(r18)
    7e94:	91800217 	ldw	r6,8(r18)
    7e98:	91c00517 	ldw	r7,20(r18)
    7e9c:	1100022e 	bgeu	r2,r4,7ea8 <__sfvwrite_r+0x2b0>
    7ea0:	31e3883a 	add	r17,r6,r7
    7ea4:	8c001616 	blt	r17,r16,7f00 <__sfvwrite_r+0x308>
    7ea8:	81c03816 	blt	r16,r7,7f8c <__sfvwrite_r+0x394>
    7eac:	90c00917 	ldw	r3,36(r18)
    7eb0:	91400717 	ldw	r5,28(r18)
    7eb4:	e009883a 	mov	r4,fp
    7eb8:	b80d883a 	mov	r6,r23
    7ebc:	183ee83a 	callr	r3
    7ec0:	1023883a 	mov	r17,r2
    7ec4:	00bfe10e 	bge	zero,r2,7e4c <__sfvwrite_r+0x254>
    7ec8:	a469c83a 	sub	r20,r20,r17
    7ecc:	a0001826 	beq	r20,zero,7f30 <__sfvwrite_r+0x338>
    7ed0:	b0800217 	ldw	r2,8(r22)
    7ed4:	1445c83a 	sub	r2,r2,r17
    7ed8:	b0800215 	stw	r2,8(r22)
    7edc:	103f7226 	beq	r2,zero,7ca8 <__sfvwrite_r+0xb0>
    7ee0:	9c67c83a 	sub	r19,r19,r17
    7ee4:	bc6f883a 	add	r23,r23,r17
    7ee8:	983fe21e 	bne	r19,zero,7e74 <__sfvwrite_r+0x27c>
    7eec:	adc00017 	ldw	r23,0(r21)
    7ef0:	acc00117 	ldw	r19,4(r21)
    7ef4:	ad400204 	addi	r21,r21,8
    7ef8:	d8000015 	stw	zero,0(sp)
    7efc:	003fdc06 	br	7e70 <__sfvwrite_r+0x278>
    7f00:	b80b883a 	mov	r5,r23
    7f04:	880d883a 	mov	r6,r17
    7f08:	00084900 	call	8490 <memmove>
    7f0c:	90c00017 	ldw	r3,0(r18)
    7f10:	e009883a 	mov	r4,fp
    7f14:	900b883a 	mov	r5,r18
    7f18:	1c47883a 	add	r3,r3,r17
    7f1c:	90c00015 	stw	r3,0(r18)
    7f20:	000734c0 	call	734c <_fflush_r>
    7f24:	103fc91e 	bne	r2,zero,7e4c <__sfvwrite_r+0x254>
    7f28:	a469c83a 	sub	r20,r20,r17
    7f2c:	a03fe81e 	bne	r20,zero,7ed0 <__sfvwrite_r+0x2d8>
    7f30:	e009883a 	mov	r4,fp
    7f34:	900b883a 	mov	r5,r18
    7f38:	000734c0 	call	734c <_fflush_r>
    7f3c:	103fc31e 	bne	r2,zero,7e4c <__sfvwrite_r+0x254>
    7f40:	d8000015 	stw	zero,0(sp)
    7f44:	003fe206 	br	7ed0 <__sfvwrite_r+0x2d8>
    7f48:	91000017 	ldw	r4,0(r18)
    7f4c:	90800417 	ldw	r2,16(r18)
    7f50:	1100022e 	bgeu	r2,r4,7f5c <__sfvwrite_r+0x364>
    7f54:	8023883a 	mov	r17,r16
    7f58:	85003136 	bltu	r16,r20,8020 <__sfvwrite_r+0x428>
    7f5c:	91c00517 	ldw	r7,20(r18)
    7f60:	a1c01836 	bltu	r20,r7,7fc4 <__sfvwrite_r+0x3cc>
    7f64:	90c00917 	ldw	r3,36(r18)
    7f68:	91400717 	ldw	r5,28(r18)
    7f6c:	e009883a 	mov	r4,fp
    7f70:	b80d883a 	mov	r6,r23
    7f74:	183ee83a 	callr	r3
    7f78:	1021883a 	mov	r16,r2
    7f7c:	00bfb30e 	bge	zero,r2,7e4c <__sfvwrite_r+0x254>
    7f80:	1023883a 	mov	r17,r2
    7f84:	1027883a 	mov	r19,r2
    7f88:	003f9b06 	br	7df8 <__sfvwrite_r+0x200>
    7f8c:	b80b883a 	mov	r5,r23
    7f90:	800d883a 	mov	r6,r16
    7f94:	00084900 	call	8490 <memmove>
    7f98:	90c00217 	ldw	r3,8(r18)
    7f9c:	90800017 	ldw	r2,0(r18)
    7fa0:	8023883a 	mov	r17,r16
    7fa4:	1c07c83a 	sub	r3,r3,r16
    7fa8:	1405883a 	add	r2,r2,r16
    7fac:	90c00215 	stw	r3,8(r18)
    7fb0:	90800015 	stw	r2,0(r18)
    7fb4:	003fc406 	br	7ec8 <__sfvwrite_r+0x2d0>
    7fb8:	a00d883a 	mov	r6,r20
    7fbc:	a021883a 	mov	r16,r20
    7fc0:	003f8106 	br	7dc8 <__sfvwrite_r+0x1d0>
    7fc4:	b80b883a 	mov	r5,r23
    7fc8:	a00d883a 	mov	r6,r20
    7fcc:	00084900 	call	8490 <memmove>
    7fd0:	90c00217 	ldw	r3,8(r18)
    7fd4:	90800017 	ldw	r2,0(r18)
    7fd8:	a021883a 	mov	r16,r20
    7fdc:	1d07c83a 	sub	r3,r3,r20
    7fe0:	1505883a 	add	r2,r2,r20
    7fe4:	a023883a 	mov	r17,r20
    7fe8:	a027883a 	mov	r19,r20
    7fec:	90c00215 	stw	r3,8(r18)
    7ff0:	90800015 	stw	r2,0(r18)
    7ff4:	003f8006 	br	7df8 <__sfvwrite_r+0x200>
    7ff8:	b809883a 	mov	r4,r23
    7ffc:	01400284 	movi	r5,10
    8000:	980d883a 	mov	r6,r19
    8004:	000164c0 	call	164c <memchr>
    8008:	10001726 	beq	r2,zero,8068 <__sfvwrite_r+0x470>
    800c:	15c5c83a 	sub	r2,r2,r23
    8010:	15000044 	addi	r20,r2,1
    8014:	00800044 	movi	r2,1
    8018:	d8800015 	stw	r2,0(sp)
    801c:	003f9806 	br	7e80 <__sfvwrite_r+0x288>
    8020:	b80b883a 	mov	r5,r23
    8024:	800d883a 	mov	r6,r16
    8028:	00084900 	call	8490 <memmove>
    802c:	90c00017 	ldw	r3,0(r18)
    8030:	e009883a 	mov	r4,fp
    8034:	900b883a 	mov	r5,r18
    8038:	1c07883a 	add	r3,r3,r16
    803c:	90c00015 	stw	r3,0(r18)
    8040:	8027883a 	mov	r19,r16
    8044:	000734c0 	call	734c <_fflush_r>
    8048:	103f6b26 	beq	r2,zero,7df8 <__sfvwrite_r+0x200>
    804c:	003f7f06 	br	7e4c <__sfvwrite_r+0x254>
    8050:	400b883a 	mov	r5,r8
    8054:	e009883a 	mov	r4,fp
    8058:	00095dc0 	call	95dc <_realloc_r>
    805c:	103f7626 	beq	r2,zero,7e38 <__sfvwrite_r+0x240>
    8060:	1023883a 	mov	r17,r2
    8064:	003f5006 	br	7da8 <__sfvwrite_r+0x1b0>
    8068:	00c00044 	movi	r3,1
    806c:	9d000044 	addi	r20,r19,1
    8070:	d8c00015 	stw	r3,0(sp)
    8074:	003f8206 	br	7e80 <__sfvwrite_r+0x288>
    8078:	9080030b 	ldhu	r2,12(r18)
    807c:	00c00244 	movi	r3,9
    8080:	013fffc4 	movi	r4,-1
    8084:	10801014 	ori	r2,r2,64
    8088:	9080030d 	sth	r2,12(r18)
    808c:	e0c00015 	stw	r3,0(fp)
    8090:	003f0606 	br	7cac <__sfvwrite_r+0xb4>

00008094 <iswspace>:
    8094:	00803fc4 	movi	r2,255
    8098:	0007883a 	mov	r3,zero
    809c:	11000636 	bltu	r2,r4,80b8 <iswspace+0x24>
    80a0:	00800074 	movhi	r2,1
    80a4:	10915604 	addi	r2,r2,17752
    80a8:	10c00017 	ldw	r3,0(r2)
    80ac:	1907883a 	add	r3,r3,r4
    80b0:	18800003 	ldbu	r2,0(r3)
    80b4:	10c0020c 	andi	r3,r2,8
    80b8:	1805883a 	mov	r2,r3
    80bc:	f800283a 	ret

000080c0 <__locale_charset>:
    80c0:	d0a00617 	ldw	r2,-32744(gp)
    80c4:	f800283a 	ret

000080c8 <_localeconv_r>:
    80c8:	00800074 	movhi	r2,1
    80cc:	108a0504 	addi	r2,r2,10260
    80d0:	f800283a 	ret

000080d4 <localeconv>:
    80d4:	00800074 	movhi	r2,1
    80d8:	10915204 	addi	r2,r2,17736
    80dc:	11000017 	ldw	r4,0(r2)
    80e0:	00080c81 	jmpi	80c8 <_localeconv_r>

000080e4 <_setlocale_r>:
    80e4:	defffc04 	addi	sp,sp,-16
    80e8:	00c00074 	movhi	r3,1
    80ec:	18c93104 	addi	r3,r3,9412
    80f0:	dc800215 	stw	r18,8(sp)
    80f4:	dc400115 	stw	r17,4(sp)
    80f8:	dc000015 	stw	r16,0(sp)
    80fc:	2023883a 	mov	r17,r4
    8100:	2825883a 	mov	r18,r5
    8104:	dfc00315 	stw	ra,12(sp)
    8108:	3021883a 	mov	r16,r6
    810c:	3009883a 	mov	r4,r6
    8110:	180b883a 	mov	r5,r3
    8114:	30000926 	beq	r6,zero,813c <_setlocale_r+0x58>
    8118:	0001fd40 	call	1fd4 <strcmp>
    811c:	8009883a 	mov	r4,r16
    8120:	01400074 	movhi	r5,1
    8124:	29494104 	addi	r5,r5,9476
    8128:	10000b1e 	bne	r2,zero,8158 <_setlocale_r+0x74>
    812c:	8c000d15 	stw	r16,52(r17)
    8130:	8c800c15 	stw	r18,48(r17)
    8134:	00c00074 	movhi	r3,1
    8138:	18c93104 	addi	r3,r3,9412
    813c:	1805883a 	mov	r2,r3
    8140:	dfc00317 	ldw	ra,12(sp)
    8144:	dc800217 	ldw	r18,8(sp)
    8148:	dc400117 	ldw	r17,4(sp)
    814c:	dc000017 	ldw	r16,0(sp)
    8150:	dec00404 	addi	sp,sp,16
    8154:	f800283a 	ret
    8158:	0001fd40 	call	1fd4 <strcmp>
    815c:	0007883a 	mov	r3,zero
    8160:	103ff226 	beq	r2,zero,812c <_setlocale_r+0x48>
    8164:	003ff506 	br	813c <_setlocale_r+0x58>

00008168 <setlocale>:
    8168:	01800074 	movhi	r6,1
    816c:	31915204 	addi	r6,r6,17736
    8170:	2007883a 	mov	r3,r4
    8174:	31000017 	ldw	r4,0(r6)
    8178:	280d883a 	mov	r6,r5
    817c:	180b883a 	mov	r5,r3
    8180:	00080e41 	jmpi	80e4 <_setlocale_r>

00008184 <_lseek_r>:
    8184:	defffd04 	addi	sp,sp,-12
    8188:	dc000015 	stw	r16,0(sp)
    818c:	04000074 	movhi	r16,1
    8190:	84180804 	addi	r16,r16,24608
    8194:	dc400115 	stw	r17,4(sp)
    8198:	80000015 	stw	zero,0(r16)
    819c:	2023883a 	mov	r17,r4
    81a0:	2809883a 	mov	r4,r5
    81a4:	300b883a 	mov	r5,r6
    81a8:	380d883a 	mov	r6,r7
    81ac:	dfc00215 	stw	ra,8(sp)
    81b0:	000fce80 	call	fce8 <lseek>
    81b4:	1007883a 	mov	r3,r2
    81b8:	00bfffc4 	movi	r2,-1
    81bc:	18800626 	beq	r3,r2,81d8 <_lseek_r+0x54>
    81c0:	1805883a 	mov	r2,r3
    81c4:	dfc00217 	ldw	ra,8(sp)
    81c8:	dc400117 	ldw	r17,4(sp)
    81cc:	dc000017 	ldw	r16,0(sp)
    81d0:	dec00304 	addi	sp,sp,12
    81d4:	f800283a 	ret
    81d8:	80800017 	ldw	r2,0(r16)
    81dc:	103ff826 	beq	r2,zero,81c0 <_lseek_r+0x3c>
    81e0:	88800015 	stw	r2,0(r17)
    81e4:	1805883a 	mov	r2,r3
    81e8:	dfc00217 	ldw	ra,8(sp)
    81ec:	dc400117 	ldw	r17,4(sp)
    81f0:	dc000017 	ldw	r16,0(sp)
    81f4:	dec00304 	addi	sp,sp,12
    81f8:	f800283a 	ret

000081fc <__smakebuf_r>:
    81fc:	2880030b 	ldhu	r2,12(r5)
    8200:	deffed04 	addi	sp,sp,-76
    8204:	dc401015 	stw	r17,64(sp)
    8208:	1080008c 	andi	r2,r2,2
    820c:	dc000f15 	stw	r16,60(sp)
    8210:	dfc01215 	stw	ra,72(sp)
    8214:	dc801115 	stw	r18,68(sp)
    8218:	2821883a 	mov	r16,r5
    821c:	2023883a 	mov	r17,r4
    8220:	10000b26 	beq	r2,zero,8250 <__smakebuf_r+0x54>
    8224:	28c010c4 	addi	r3,r5,67
    8228:	00800044 	movi	r2,1
    822c:	28800515 	stw	r2,20(r5)
    8230:	28c00415 	stw	r3,16(r5)
    8234:	28c00015 	stw	r3,0(r5)
    8238:	dfc01217 	ldw	ra,72(sp)
    823c:	dc801117 	ldw	r18,68(sp)
    8240:	dc401017 	ldw	r17,64(sp)
    8244:	dc000f17 	ldw	r16,60(sp)
    8248:	dec01304 	addi	sp,sp,76
    824c:	f800283a 	ret
    8250:	2940038f 	ldh	r5,14(r5)
    8254:	28002116 	blt	r5,zero,82dc <__smakebuf_r+0xe0>
    8258:	d80d883a 	mov	r6,sp
    825c:	000c1800 	call	c180 <_fstat_r>
    8260:	10001e16 	blt	r2,zero,82dc <__smakebuf_r+0xe0>
    8264:	d8800117 	ldw	r2,4(sp)
    8268:	00e00014 	movui	r3,32768
    826c:	113c000c 	andi	r4,r2,61440
    8270:	20c03126 	beq	r4,r3,8338 <__smakebuf_r+0x13c>
    8274:	8080030b 	ldhu	r2,12(r16)
    8278:	00c80004 	movi	r3,8192
    827c:	10820014 	ori	r2,r2,2048
    8280:	8080030d 	sth	r2,12(r16)
    8284:	20c01e26 	beq	r4,r3,8300 <__smakebuf_r+0x104>
    8288:	04810004 	movi	r18,1024
    828c:	8809883a 	mov	r4,r17
    8290:	900b883a 	mov	r5,r18
    8294:	0000f0c0 	call	f0c <_malloc_r>
    8298:	1009883a 	mov	r4,r2
    829c:	10003126 	beq	r2,zero,8364 <__smakebuf_r+0x168>
    82a0:	80c0030b 	ldhu	r3,12(r16)
    82a4:	00800034 	movhi	r2,0
    82a8:	10830604 	addi	r2,r2,3096
    82ac:	88800f15 	stw	r2,60(r17)
    82b0:	18c02014 	ori	r3,r3,128
    82b4:	84800515 	stw	r18,20(r16)
    82b8:	80c0030d 	sth	r3,12(r16)
    82bc:	81000415 	stw	r4,16(r16)
    82c0:	81000015 	stw	r4,0(r16)
    82c4:	dfc01217 	ldw	ra,72(sp)
    82c8:	dc801117 	ldw	r18,68(sp)
    82cc:	dc401017 	ldw	r17,64(sp)
    82d0:	dc000f17 	ldw	r16,60(sp)
    82d4:	dec01304 	addi	sp,sp,76
    82d8:	f800283a 	ret
    82dc:	80c0030b 	ldhu	r3,12(r16)
    82e0:	1880200c 	andi	r2,r3,128
    82e4:	10000426 	beq	r2,zero,82f8 <__smakebuf_r+0xfc>
    82e8:	04801004 	movi	r18,64
    82ec:	18820014 	ori	r2,r3,2048
    82f0:	8080030d 	sth	r2,12(r16)
    82f4:	003fe506 	br	828c <__smakebuf_r+0x90>
    82f8:	04810004 	movi	r18,1024
    82fc:	003ffb06 	br	82ec <__smakebuf_r+0xf0>
    8300:	8140038f 	ldh	r5,14(r16)
    8304:	8809883a 	mov	r4,r17
    8308:	000cd7c0 	call	cd7c <_isatty_r>
    830c:	103fde26 	beq	r2,zero,8288 <__smakebuf_r+0x8c>
    8310:	8080030b 	ldhu	r2,12(r16)
    8314:	80c010c4 	addi	r3,r16,67
    8318:	04810004 	movi	r18,1024
    831c:	10800054 	ori	r2,r2,1
    8320:	8080030d 	sth	r2,12(r16)
    8324:	00800044 	movi	r2,1
    8328:	80c00415 	stw	r3,16(r16)
    832c:	80800515 	stw	r2,20(r16)
    8330:	80c00015 	stw	r3,0(r16)
    8334:	003fd506 	br	828c <__smakebuf_r+0x90>
    8338:	80c00a17 	ldw	r3,40(r16)
    833c:	00800034 	movhi	r2,0
    8340:	10874804 	addi	r2,r2,7456
    8344:	18bfcb1e 	bne	r3,r2,8274 <__smakebuf_r+0x78>
    8348:	8080030b 	ldhu	r2,12(r16)
    834c:	00c10004 	movi	r3,1024
    8350:	1825883a 	mov	r18,r3
    8354:	10c4b03a 	or	r2,r2,r3
    8358:	8080030d 	sth	r2,12(r16)
    835c:	80c01315 	stw	r3,76(r16)
    8360:	003fca06 	br	828c <__smakebuf_r+0x90>
    8364:	8100030b 	ldhu	r4,12(r16)
    8368:	2080800c 	andi	r2,r4,512
    836c:	103fb21e 	bne	r2,zero,8238 <__smakebuf_r+0x3c>
    8370:	80c010c4 	addi	r3,r16,67
    8374:	21000094 	ori	r4,r4,2
    8378:	00800044 	movi	r2,1
    837c:	80800515 	stw	r2,20(r16)
    8380:	8100030d 	sth	r4,12(r16)
    8384:	80c00415 	stw	r3,16(r16)
    8388:	80c00015 	stw	r3,0(r16)
    838c:	003faa06 	br	8238 <__smakebuf_r+0x3c>

00008390 <_mbrtowc_r>:
    8390:	defffc04 	addi	sp,sp,-16
    8394:	dc400215 	stw	r17,8(sp)
    8398:	dc000115 	stw	r16,4(sp)
    839c:	dfc00315 	stw	ra,12(sp)
    83a0:	dc000417 	ldw	r16,16(sp)
    83a4:	2023883a 	mov	r17,r4
    83a8:	30000f26 	beq	r6,zero,83e8 <_mbrtowc_r+0x58>
    83ac:	dc000015 	stw	r16,0(sp)
    83b0:	00084500 	call	8450 <_mbtowc_r>
    83b4:	1007883a 	mov	r3,r2
    83b8:	00bfffc4 	movi	r2,-1
    83bc:	1809883a 	mov	r4,r3
    83c0:	1880111e 	bne	r3,r2,8408 <_mbrtowc_r+0x78>
    83c4:	80000015 	stw	zero,0(r16)
    83c8:	00802284 	movi	r2,138
    83cc:	88800015 	stw	r2,0(r17)
    83d0:	2005883a 	mov	r2,r4
    83d4:	dfc00317 	ldw	ra,12(sp)
    83d8:	dc400217 	ldw	r17,8(sp)
    83dc:	dc000117 	ldw	r16,4(sp)
    83e0:	dec00404 	addi	sp,sp,16
    83e4:	f800283a 	ret
    83e8:	000b883a 	mov	r5,zero
    83ec:	01800074 	movhi	r6,1
    83f0:	31894104 	addi	r6,r6,9476
    83f4:	01c00044 	movi	r7,1
    83f8:	dc000015 	stw	r16,0(sp)
    83fc:	00084500 	call	8450 <_mbtowc_r>
    8400:	1007883a 	mov	r3,r2
    8404:	003fec06 	br	83b8 <_mbrtowc_r+0x28>
    8408:	1809883a 	mov	r4,r3
    840c:	003ff006 	br	83d0 <_mbrtowc_r+0x40>

00008410 <mbrtowc>:
    8410:	00800074 	movhi	r2,1
    8414:	10915204 	addi	r2,r2,17736
    8418:	2017883a 	mov	r11,r4
    841c:	11000017 	ldw	r4,0(r2)
    8420:	defffe04 	addi	sp,sp,-8
    8424:	3013883a 	mov	r9,r6
    8428:	2805883a 	mov	r2,r5
    842c:	d9c00015 	stw	r7,0(sp)
    8430:	580b883a 	mov	r5,r11
    8434:	100d883a 	mov	r6,r2
    8438:	480f883a 	mov	r7,r9
    843c:	dfc00115 	stw	ra,4(sp)
    8440:	00083900 	call	8390 <_mbrtowc_r>
    8444:	dfc00117 	ldw	ra,4(sp)
    8448:	dec00204 	addi	sp,sp,8
    844c:	f800283a 	ret

00008450 <_mbtowc_r>:
    8450:	deffff04 	addi	sp,sp,-4
    8454:	0005883a 	mov	r2,zero
    8458:	28000326 	beq	r5,zero,8468 <_mbtowc_r+0x18>
    845c:	3000041e 	bne	r6,zero,8470 <_mbtowc_r+0x20>
    8460:	dec00104 	addi	sp,sp,4
    8464:	f800283a 	ret
    8468:	d80b883a 	mov	r5,sp
    846c:	303ffc26 	beq	r6,zero,8460 <_mbtowc_r+0x10>
    8470:	00bfff84 	movi	r2,-2
    8474:	383ffa26 	beq	r7,zero,8460 <_mbtowc_r+0x10>
    8478:	30800003 	ldbu	r2,0(r6)
    847c:	28800015 	stw	r2,0(r5)
    8480:	30c00003 	ldbu	r3,0(r6)
    8484:	1804c03a 	cmpne	r2,r3,zero
    8488:	dec00104 	addi	sp,sp,4
    848c:	f800283a 	ret

00008490 <memmove>:
    8490:	2807883a 	mov	r3,r5
    8494:	2011883a 	mov	r8,r4
    8498:	29000c2e 	bgeu	r5,r4,84cc <memmove+0x3c>
    849c:	298f883a 	add	r7,r5,r6
    84a0:	21c00a2e 	bgeu	r4,r7,84cc <memmove+0x3c>
    84a4:	30000726 	beq	r6,zero,84c4 <memmove+0x34>
    84a8:	2187883a 	add	r3,r4,r6
    84ac:	198dc83a 	sub	r6,r3,r6
    84b0:	39ffffc4 	addi	r7,r7,-1
    84b4:	38800003 	ldbu	r2,0(r7)
    84b8:	18ffffc4 	addi	r3,r3,-1
    84bc:	18800005 	stb	r2,0(r3)
    84c0:	19bffb1e 	bne	r3,r6,84b0 <memmove+0x20>
    84c4:	2005883a 	mov	r2,r4
    84c8:	f800283a 	ret
    84cc:	01c003c4 	movi	r7,15
    84d0:	39800a36 	bltu	r7,r6,84fc <memmove+0x6c>
    84d4:	303ffb26 	beq	r6,zero,84c4 <memmove+0x34>
    84d8:	400f883a 	mov	r7,r8
    84dc:	320d883a 	add	r6,r6,r8
    84e0:	28800003 	ldbu	r2,0(r5)
    84e4:	29400044 	addi	r5,r5,1
    84e8:	38800005 	stb	r2,0(r7)
    84ec:	39c00044 	addi	r7,r7,1
    84f0:	39bffb1e 	bne	r7,r6,84e0 <memmove+0x50>
    84f4:	2005883a 	mov	r2,r4
    84f8:	f800283a 	ret
    84fc:	1904b03a 	or	r2,r3,r4
    8500:	108000cc 	andi	r2,r2,3
    8504:	103ff31e 	bne	r2,zero,84d4 <memmove+0x44>
    8508:	3811883a 	mov	r8,r7
    850c:	180b883a 	mov	r5,r3
    8510:	200f883a 	mov	r7,r4
    8514:	28c00017 	ldw	r3,0(r5)
    8518:	31bffc04 	addi	r6,r6,-16
    851c:	38c00015 	stw	r3,0(r7)
    8520:	28800117 	ldw	r2,4(r5)
    8524:	38800115 	stw	r2,4(r7)
    8528:	28c00217 	ldw	r3,8(r5)
    852c:	38c00215 	stw	r3,8(r7)
    8530:	28800317 	ldw	r2,12(r5)
    8534:	29400404 	addi	r5,r5,16
    8538:	38800315 	stw	r2,12(r7)
    853c:	39c00404 	addi	r7,r7,16
    8540:	41bff436 	bltu	r8,r6,8514 <memmove+0x84>
    8544:	008000c4 	movi	r2,3
    8548:	1180072e 	bgeu	r2,r6,8568 <memmove+0xd8>
    854c:	1007883a 	mov	r3,r2
    8550:	28800017 	ldw	r2,0(r5)
    8554:	31bfff04 	addi	r6,r6,-4
    8558:	29400104 	addi	r5,r5,4
    855c:	38800015 	stw	r2,0(r7)
    8560:	39c00104 	addi	r7,r7,4
    8564:	19bffa36 	bltu	r3,r6,8550 <memmove+0xc0>
    8568:	3811883a 	mov	r8,r7
    856c:	003fd906 	br	84d4 <memmove+0x44>

00008570 <_Bfree>:
    8570:	28000826 	beq	r5,zero,8594 <_Bfree+0x24>
    8574:	28800117 	ldw	r2,4(r5)
    8578:	21001317 	ldw	r4,76(r4)
    857c:	1085883a 	add	r2,r2,r2
    8580:	1085883a 	add	r2,r2,r2
    8584:	1105883a 	add	r2,r2,r4
    8588:	10c00017 	ldw	r3,0(r2)
    858c:	28c00015 	stw	r3,0(r5)
    8590:	11400015 	stw	r5,0(r2)
    8594:	f800283a 	ret

00008598 <__hi0bits>:
    8598:	20bfffec 	andhi	r2,r4,65535
    859c:	10001426 	beq	r2,zero,85f0 <__hi0bits+0x58>
    85a0:	0007883a 	mov	r3,zero
    85a4:	20bfc02c 	andhi	r2,r4,65280
    85a8:	1000021e 	bne	r2,zero,85b4 <__hi0bits+0x1c>
    85ac:	2008923a 	slli	r4,r4,8
    85b0:	18c00204 	addi	r3,r3,8
    85b4:	20bc002c 	andhi	r2,r4,61440
    85b8:	1000021e 	bne	r2,zero,85c4 <__hi0bits+0x2c>
    85bc:	2008913a 	slli	r4,r4,4
    85c0:	18c00104 	addi	r3,r3,4
    85c4:	20b0002c 	andhi	r2,r4,49152
    85c8:	1000031e 	bne	r2,zero,85d8 <__hi0bits+0x40>
    85cc:	2105883a 	add	r2,r4,r4
    85d0:	18c00084 	addi	r3,r3,2
    85d4:	1089883a 	add	r4,r2,r2
    85d8:	20000316 	blt	r4,zero,85e8 <__hi0bits+0x50>
    85dc:	2090002c 	andhi	r2,r4,16384
    85e0:	10000626 	beq	r2,zero,85fc <__hi0bits+0x64>
    85e4:	18c00044 	addi	r3,r3,1
    85e8:	1805883a 	mov	r2,r3
    85ec:	f800283a 	ret
    85f0:	2008943a 	slli	r4,r4,16
    85f4:	00c00404 	movi	r3,16
    85f8:	003fea06 	br	85a4 <__hi0bits+0xc>
    85fc:	00c00804 	movi	r3,32
    8600:	1805883a 	mov	r2,r3
    8604:	f800283a 	ret

00008608 <__lo0bits>:
    8608:	20c00017 	ldw	r3,0(r4)
    860c:	188001cc 	andi	r2,r3,7
    8610:	10000a26 	beq	r2,zero,863c <__lo0bits+0x34>
    8614:	1880004c 	andi	r2,r3,1
    8618:	1005003a 	cmpeq	r2,r2,zero
    861c:	10002126 	beq	r2,zero,86a4 <__lo0bits+0x9c>
    8620:	1880008c 	andi	r2,r3,2
    8624:	1000251e 	bne	r2,zero,86bc <__lo0bits+0xb4>
    8628:	1804d0ba 	srli	r2,r3,2
    862c:	01400084 	movi	r5,2
    8630:	20800015 	stw	r2,0(r4)
    8634:	2805883a 	mov	r2,r5
    8638:	f800283a 	ret
    863c:	18bfffcc 	andi	r2,r3,65535
    8640:	10001526 	beq	r2,zero,8698 <__lo0bits+0x90>
    8644:	000b883a 	mov	r5,zero
    8648:	18803fcc 	andi	r2,r3,255
    864c:	1000021e 	bne	r2,zero,8658 <__lo0bits+0x50>
    8650:	1806d23a 	srli	r3,r3,8
    8654:	29400204 	addi	r5,r5,8
    8658:	188003cc 	andi	r2,r3,15
    865c:	1000021e 	bne	r2,zero,8668 <__lo0bits+0x60>
    8660:	1806d13a 	srli	r3,r3,4
    8664:	29400104 	addi	r5,r5,4
    8668:	188000cc 	andi	r2,r3,3
    866c:	1000021e 	bne	r2,zero,8678 <__lo0bits+0x70>
    8670:	1806d0ba 	srli	r3,r3,2
    8674:	29400084 	addi	r5,r5,2
    8678:	1880004c 	andi	r2,r3,1
    867c:	1000031e 	bne	r2,zero,868c <__lo0bits+0x84>
    8680:	1806d07a 	srli	r3,r3,1
    8684:	18000a26 	beq	r3,zero,86b0 <__lo0bits+0xa8>
    8688:	29400044 	addi	r5,r5,1
    868c:	2805883a 	mov	r2,r5
    8690:	20c00015 	stw	r3,0(r4)
    8694:	f800283a 	ret
    8698:	1806d43a 	srli	r3,r3,16
    869c:	01400404 	movi	r5,16
    86a0:	003fe906 	br	8648 <__lo0bits+0x40>
    86a4:	000b883a 	mov	r5,zero
    86a8:	2805883a 	mov	r2,r5
    86ac:	f800283a 	ret
    86b0:	01400804 	movi	r5,32
    86b4:	2805883a 	mov	r2,r5
    86b8:	f800283a 	ret
    86bc:	1804d07a 	srli	r2,r3,1
    86c0:	01400044 	movi	r5,1
    86c4:	20800015 	stw	r2,0(r4)
    86c8:	003fda06 	br	8634 <__lo0bits+0x2c>

000086cc <__mcmp>:
    86cc:	20800417 	ldw	r2,16(r4)
    86d0:	28c00417 	ldw	r3,16(r5)
    86d4:	10cfc83a 	sub	r7,r2,r3
    86d8:	38000c1e 	bne	r7,zero,870c <__mcmp+0x40>
    86dc:	18c5883a 	add	r2,r3,r3
    86e0:	1085883a 	add	r2,r2,r2
    86e4:	10c00504 	addi	r3,r2,20
    86e8:	21000504 	addi	r4,r4,20
    86ec:	28cb883a 	add	r5,r5,r3
    86f0:	2085883a 	add	r2,r4,r2
    86f4:	10bfff04 	addi	r2,r2,-4
    86f8:	297fff04 	addi	r5,r5,-4
    86fc:	11800017 	ldw	r6,0(r2)
    8700:	28c00017 	ldw	r3,0(r5)
    8704:	30c0031e 	bne	r6,r3,8714 <__mcmp+0x48>
    8708:	20bffa36 	bltu	r4,r2,86f4 <__mcmp+0x28>
    870c:	3805883a 	mov	r2,r7
    8710:	f800283a 	ret
    8714:	30c00336 	bltu	r6,r3,8724 <__mcmp+0x58>
    8718:	01c00044 	movi	r7,1
    871c:	3805883a 	mov	r2,r7
    8720:	f800283a 	ret
    8724:	01ffffc4 	movi	r7,-1
    8728:	003ff806 	br	870c <__mcmp+0x40>

0000872c <__ulp>:
    872c:	295ffc2c 	andhi	r5,r5,32752
    8730:	013f3034 	movhi	r4,64704
    8734:	290b883a 	add	r5,r5,r4
    8738:	0145c83a 	sub	r2,zero,r5
    873c:	1007d53a 	srai	r3,r2,20
    8740:	000d883a 	mov	r6,zero
    8744:	0140040e 	bge	zero,r5,8758 <__ulp+0x2c>
    8748:	280f883a 	mov	r7,r5
    874c:	3807883a 	mov	r3,r7
    8750:	3005883a 	mov	r2,r6
    8754:	f800283a 	ret
    8758:	008004c4 	movi	r2,19
    875c:	193ffb04 	addi	r4,r3,-20
    8760:	10c00c0e 	bge	r2,r3,8794 <__ulp+0x68>
    8764:	008007c4 	movi	r2,31
    8768:	1107c83a 	sub	r3,r2,r4
    876c:	00800784 	movi	r2,30
    8770:	01400044 	movi	r5,1
    8774:	11000216 	blt	r2,r4,8780 <__ulp+0x54>
    8778:	00800044 	movi	r2,1
    877c:	10ca983a 	sll	r5,r2,r3
    8780:	000f883a 	mov	r7,zero
    8784:	280d883a 	mov	r6,r5
    8788:	3807883a 	mov	r3,r7
    878c:	3005883a 	mov	r2,r6
    8790:	f800283a 	ret
    8794:	00800234 	movhi	r2,8
    8798:	10cfd83a 	sra	r7,r2,r3
    879c:	000d883a 	mov	r6,zero
    87a0:	3005883a 	mov	r2,r6
    87a4:	3807883a 	mov	r3,r7
    87a8:	f800283a 	ret

000087ac <__b2d>:
    87ac:	20800417 	ldw	r2,16(r4)
    87b0:	defff904 	addi	sp,sp,-28
    87b4:	dd000415 	stw	r20,16(sp)
    87b8:	1085883a 	add	r2,r2,r2
    87bc:	25000504 	addi	r20,r4,20
    87c0:	1085883a 	add	r2,r2,r2
    87c4:	dc000015 	stw	r16,0(sp)
    87c8:	a0a1883a 	add	r16,r20,r2
    87cc:	dd400515 	stw	r21,20(sp)
    87d0:	857fff17 	ldw	r21,-4(r16)
    87d4:	dc400115 	stw	r17,4(sp)
    87d8:	dfc00615 	stw	ra,24(sp)
    87dc:	a809883a 	mov	r4,r21
    87e0:	2823883a 	mov	r17,r5
    87e4:	dcc00315 	stw	r19,12(sp)
    87e8:	dc800215 	stw	r18,8(sp)
    87ec:	00085980 	call	8598 <__hi0bits>
    87f0:	100b883a 	mov	r5,r2
    87f4:	00800804 	movi	r2,32
    87f8:	1145c83a 	sub	r2,r2,r5
    87fc:	88800015 	stw	r2,0(r17)
    8800:	00800284 	movi	r2,10
    8804:	80ffff04 	addi	r3,r16,-4
    8808:	11401416 	blt	r2,r5,885c <__b2d+0xb0>
    880c:	008002c4 	movi	r2,11
    8810:	1149c83a 	sub	r4,r2,r5
    8814:	a0c02736 	bltu	r20,r3,88b4 <__b2d+0x108>
    8818:	000d883a 	mov	r6,zero
    881c:	28800544 	addi	r2,r5,21
    8820:	a906d83a 	srl	r3,r21,r4
    8824:	a884983a 	sll	r2,r21,r2
    8828:	1ccffc34 	orhi	r19,r3,16368
    882c:	11a4b03a 	or	r18,r2,r6
    8830:	9005883a 	mov	r2,r18
    8834:	9807883a 	mov	r3,r19
    8838:	dfc00617 	ldw	ra,24(sp)
    883c:	dd400517 	ldw	r21,20(sp)
    8840:	dd000417 	ldw	r20,16(sp)
    8844:	dcc00317 	ldw	r19,12(sp)
    8848:	dc800217 	ldw	r18,8(sp)
    884c:	dc400117 	ldw	r17,4(sp)
    8850:	dc000017 	ldw	r16,0(sp)
    8854:	dec00704 	addi	sp,sp,28
    8858:	f800283a 	ret
    885c:	a0c00e36 	bltu	r20,r3,8898 <__b2d+0xec>
    8860:	293ffd44 	addi	r4,r5,-11
    8864:	000d883a 	mov	r6,zero
    8868:	20000f26 	beq	r4,zero,88a8 <__b2d+0xfc>
    886c:	00800804 	movi	r2,32
    8870:	110bc83a 	sub	r5,r2,r4
    8874:	a0c01236 	bltu	r20,r3,88c0 <__b2d+0x114>
    8878:	000f883a 	mov	r7,zero
    887c:	a904983a 	sll	r2,r21,r4
    8880:	3146d83a 	srl	r3,r6,r5
    8884:	3108983a 	sll	r4,r6,r4
    8888:	108ffc34 	orhi	r2,r2,16368
    888c:	18a6b03a 	or	r19,r3,r2
    8890:	3924b03a 	or	r18,r7,r4
    8894:	003fe606 	br	8830 <__b2d+0x84>
    8898:	293ffd44 	addi	r4,r5,-11
    889c:	81bffe17 	ldw	r6,-8(r16)
    88a0:	80fffe04 	addi	r3,r16,-8
    88a4:	203ff11e 	bne	r4,zero,886c <__b2d+0xc0>
    88a8:	accffc34 	orhi	r19,r21,16368
    88ac:	3025883a 	mov	r18,r6
    88b0:	003fdf06 	br	8830 <__b2d+0x84>
    88b4:	18bfff17 	ldw	r2,-4(r3)
    88b8:	110cd83a 	srl	r6,r2,r4
    88bc:	003fd706 	br	881c <__b2d+0x70>
    88c0:	18bfff17 	ldw	r2,-4(r3)
    88c4:	114ed83a 	srl	r7,r2,r5
    88c8:	003fec06 	br	887c <__b2d+0xd0>

000088cc <__ratio>:
    88cc:	defff904 	addi	sp,sp,-28
    88d0:	dc400215 	stw	r17,8(sp)
    88d4:	2823883a 	mov	r17,r5
    88d8:	d80b883a 	mov	r5,sp
    88dc:	dfc00615 	stw	ra,24(sp)
    88e0:	dd000515 	stw	r20,20(sp)
    88e4:	dcc00415 	stw	r19,16(sp)
    88e8:	dc800315 	stw	r18,12(sp)
    88ec:	2025883a 	mov	r18,r4
    88f0:	00087ac0 	call	87ac <__b2d>
    88f4:	8809883a 	mov	r4,r17
    88f8:	d9400104 	addi	r5,sp,4
    88fc:	1027883a 	mov	r19,r2
    8900:	1829883a 	mov	r20,r3
    8904:	00087ac0 	call	87ac <__b2d>
    8908:	89000417 	ldw	r4,16(r17)
    890c:	91c00417 	ldw	r7,16(r18)
    8910:	d9800117 	ldw	r6,4(sp)
    8914:	180b883a 	mov	r5,r3
    8918:	390fc83a 	sub	r7,r7,r4
    891c:	1009883a 	mov	r4,r2
    8920:	d8800017 	ldw	r2,0(sp)
    8924:	380e917a 	slli	r7,r7,5
    8928:	2011883a 	mov	r8,r4
    892c:	1185c83a 	sub	r2,r2,r6
    8930:	11c5883a 	add	r2,r2,r7
    8934:	1006953a 	slli	r3,r2,20
    8938:	2813883a 	mov	r9,r5
    893c:	00800d0e 	bge	zero,r2,8974 <__ratio+0xa8>
    8940:	1d29883a 	add	r20,r3,r20
    8944:	a00b883a 	mov	r5,r20
    8948:	480f883a 	mov	r7,r9
    894c:	9809883a 	mov	r4,r19
    8950:	400d883a 	mov	r6,r8
    8954:	000e4e40 	call	e4e4 <__divdf3>
    8958:	dfc00617 	ldw	ra,24(sp)
    895c:	dd000517 	ldw	r20,20(sp)
    8960:	dcc00417 	ldw	r19,16(sp)
    8964:	dc800317 	ldw	r18,12(sp)
    8968:	dc400217 	ldw	r17,8(sp)
    896c:	dec00704 	addi	sp,sp,28
    8970:	f800283a 	ret
    8974:	28d3c83a 	sub	r9,r5,r3
    8978:	003ff206 	br	8944 <__ratio+0x78>

0000897c <_mprec_log10>:
    897c:	defffe04 	addi	sp,sp,-8
    8980:	008005c4 	movi	r2,23
    8984:	dc000015 	stw	r16,0(sp)
    8988:	dfc00115 	stw	ra,4(sp)
    898c:	2021883a 	mov	r16,r4
    8990:	11000c16 	blt	r2,r4,89c4 <_mprec_log10+0x48>
    8994:	200490fa 	slli	r2,r4,3
    8998:	00c00074 	movhi	r3,1
    899c:	18ca1104 	addi	r3,r3,10308
    89a0:	10c5883a 	add	r2,r2,r3
    89a4:	12400117 	ldw	r9,4(r2)
    89a8:	12000017 	ldw	r8,0(r2)
    89ac:	4807883a 	mov	r3,r9
    89b0:	4005883a 	mov	r2,r8
    89b4:	dfc00117 	ldw	ra,4(sp)
    89b8:	dc000017 	ldw	r16,0(sp)
    89bc:	dec00204 	addi	sp,sp,8
    89c0:	f800283a 	ret
    89c4:	0011883a 	mov	r8,zero
    89c8:	024ffc34 	movhi	r9,16368
    89cc:	0005883a 	mov	r2,zero
    89d0:	00d00934 	movhi	r3,16420
    89d4:	480b883a 	mov	r5,r9
    89d8:	4009883a 	mov	r4,r8
    89dc:	180f883a 	mov	r7,r3
    89e0:	100d883a 	mov	r6,r2
    89e4:	000e1200 	call	e120 <__muldf3>
    89e8:	843fffc4 	addi	r16,r16,-1
    89ec:	1011883a 	mov	r8,r2
    89f0:	1813883a 	mov	r9,r3
    89f4:	803ff51e 	bne	r16,zero,89cc <_mprec_log10+0x50>
    89f8:	4005883a 	mov	r2,r8
    89fc:	4807883a 	mov	r3,r9
    8a00:	dfc00117 	ldw	ra,4(sp)
    8a04:	dc000017 	ldw	r16,0(sp)
    8a08:	dec00204 	addi	sp,sp,8
    8a0c:	f800283a 	ret

00008a10 <__copybits>:
    8a10:	297fffc4 	addi	r5,r5,-1
    8a14:	30800417 	ldw	r2,16(r6)
    8a18:	280bd17a 	srai	r5,r5,5
    8a1c:	31800504 	addi	r6,r6,20
    8a20:	1085883a 	add	r2,r2,r2
    8a24:	294b883a 	add	r5,r5,r5
    8a28:	294b883a 	add	r5,r5,r5
    8a2c:	1085883a 	add	r2,r2,r2
    8a30:	290b883a 	add	r5,r5,r4
    8a34:	3087883a 	add	r3,r6,r2
    8a38:	29400104 	addi	r5,r5,4
    8a3c:	30c0052e 	bgeu	r6,r3,8a54 <__copybits+0x44>
    8a40:	30800017 	ldw	r2,0(r6)
    8a44:	31800104 	addi	r6,r6,4
    8a48:	20800015 	stw	r2,0(r4)
    8a4c:	21000104 	addi	r4,r4,4
    8a50:	30fffb36 	bltu	r6,r3,8a40 <__copybits+0x30>
    8a54:	2140032e 	bgeu	r4,r5,8a64 <__copybits+0x54>
    8a58:	20000015 	stw	zero,0(r4)
    8a5c:	21000104 	addi	r4,r4,4
    8a60:	217ffd36 	bltu	r4,r5,8a58 <__copybits+0x48>
    8a64:	f800283a 	ret

00008a68 <__any_on>:
    8a68:	20800417 	ldw	r2,16(r4)
    8a6c:	2807d17a 	srai	r3,r5,5
    8a70:	21000504 	addi	r4,r4,20
    8a74:	10c00d0e 	bge	r2,r3,8aac <__any_on+0x44>
    8a78:	1085883a 	add	r2,r2,r2
    8a7c:	1085883a 	add	r2,r2,r2
    8a80:	208d883a 	add	r6,r4,r2
    8a84:	2180182e 	bgeu	r4,r6,8ae8 <__any_on+0x80>
    8a88:	30bfff17 	ldw	r2,-4(r6)
    8a8c:	30ffff04 	addi	r3,r6,-4
    8a90:	1000041e 	bne	r2,zero,8aa4 <__any_on+0x3c>
    8a94:	20c0142e 	bgeu	r4,r3,8ae8 <__any_on+0x80>
    8a98:	18ffff04 	addi	r3,r3,-4
    8a9c:	18800017 	ldw	r2,0(r3)
    8aa0:	103ffc26 	beq	r2,zero,8a94 <__any_on+0x2c>
    8aa4:	00800044 	movi	r2,1
    8aa8:	f800283a 	ret
    8aac:	18800a0e 	bge	r3,r2,8ad8 <__any_on+0x70>
    8ab0:	294007cc 	andi	r5,r5,31
    8ab4:	28000826 	beq	r5,zero,8ad8 <__any_on+0x70>
    8ab8:	18c5883a 	add	r2,r3,r3
    8abc:	1085883a 	add	r2,r2,r2
    8ac0:	208d883a 	add	r6,r4,r2
    8ac4:	30c00017 	ldw	r3,0(r6)
    8ac8:	1944d83a 	srl	r2,r3,r5
    8acc:	1144983a 	sll	r2,r2,r5
    8ad0:	18bff41e 	bne	r3,r2,8aa4 <__any_on+0x3c>
    8ad4:	003feb06 	br	8a84 <__any_on+0x1c>
    8ad8:	18c5883a 	add	r2,r3,r3
    8adc:	1085883a 	add	r2,r2,r2
    8ae0:	208d883a 	add	r6,r4,r2
    8ae4:	003fe706 	br	8a84 <__any_on+0x1c>
    8ae8:	0005883a 	mov	r2,zero
    8aec:	f800283a 	ret

00008af0 <_Balloc>:
    8af0:	20c01317 	ldw	r3,76(r4)
    8af4:	defffb04 	addi	sp,sp,-20
    8af8:	dcc00315 	stw	r19,12(sp)
    8afc:	dc800215 	stw	r18,8(sp)
    8b00:	dfc00415 	stw	ra,16(sp)
    8b04:	2825883a 	mov	r18,r5
    8b08:	dc400115 	stw	r17,4(sp)
    8b0c:	dc000015 	stw	r16,0(sp)
    8b10:	2027883a 	mov	r19,r4
    8b14:	01800404 	movi	r6,16
    8b18:	01400104 	movi	r5,4
    8b1c:	18001726 	beq	r3,zero,8b7c <_Balloc+0x8c>
    8b20:	01400044 	movi	r5,1
    8b24:	9485883a 	add	r2,r18,r18
    8b28:	2ca2983a 	sll	r17,r5,r18
    8b2c:	1085883a 	add	r2,r2,r2
    8b30:	10c7883a 	add	r3,r2,r3
    8b34:	1c000017 	ldw	r16,0(r3)
    8b38:	8c4d883a 	add	r6,r17,r17
    8b3c:	318d883a 	add	r6,r6,r6
    8b40:	9809883a 	mov	r4,r19
    8b44:	31800504 	addi	r6,r6,20
    8b48:	80001226 	beq	r16,zero,8b94 <_Balloc+0xa4>
    8b4c:	80800017 	ldw	r2,0(r16)
    8b50:	18800015 	stw	r2,0(r3)
    8b54:	80000415 	stw	zero,16(r16)
    8b58:	80000315 	stw	zero,12(r16)
    8b5c:	8005883a 	mov	r2,r16
    8b60:	dfc00417 	ldw	ra,16(sp)
    8b64:	dcc00317 	ldw	r19,12(sp)
    8b68:	dc800217 	ldw	r18,8(sp)
    8b6c:	dc400117 	ldw	r17,4(sp)
    8b70:	dc000017 	ldw	r16,0(sp)
    8b74:	dec00504 	addi	sp,sp,20
    8b78:	f800283a 	ret
    8b7c:	000c0cc0 	call	c0cc <_calloc_r>
    8b80:	1007883a 	mov	r3,r2
    8b84:	0021883a 	mov	r16,zero
    8b88:	98801315 	stw	r2,76(r19)
    8b8c:	103fe41e 	bne	r2,zero,8b20 <_Balloc+0x30>
    8b90:	003ff206 	br	8b5c <_Balloc+0x6c>
    8b94:	000c0cc0 	call	c0cc <_calloc_r>
    8b98:	103ff026 	beq	r2,zero,8b5c <_Balloc+0x6c>
    8b9c:	1021883a 	mov	r16,r2
    8ba0:	14800115 	stw	r18,4(r2)
    8ba4:	14400215 	stw	r17,8(r2)
    8ba8:	003fea06 	br	8b54 <_Balloc+0x64>

00008bac <__d2b>:
    8bac:	defff504 	addi	sp,sp,-44
    8bb0:	dcc00515 	stw	r19,20(sp)
    8bb4:	04c00044 	movi	r19,1
    8bb8:	dc000215 	stw	r16,8(sp)
    8bbc:	2821883a 	mov	r16,r5
    8bc0:	980b883a 	mov	r5,r19
    8bc4:	ddc00915 	stw	r23,36(sp)
    8bc8:	dd800815 	stw	r22,32(sp)
    8bcc:	dd400715 	stw	r21,28(sp)
    8bd0:	dd000615 	stw	r20,24(sp)
    8bd4:	dc800415 	stw	r18,16(sp)
    8bd8:	dc400315 	stw	r17,12(sp)
    8bdc:	dfc00a15 	stw	ra,40(sp)
    8be0:	3023883a 	mov	r17,r6
    8be4:	382d883a 	mov	r22,r7
    8be8:	ddc00b17 	ldw	r23,44(sp)
    8bec:	0008af00 	call	8af0 <_Balloc>
    8bf0:	1025883a 	mov	r18,r2
    8bf4:	00a00034 	movhi	r2,32768
    8bf8:	10bfffc4 	addi	r2,r2,-1
    8bfc:	8888703a 	and	r4,r17,r2
    8c00:	202ad53a 	srli	r21,r4,20
    8c04:	00800434 	movhi	r2,16
    8c08:	10bfffc4 	addi	r2,r2,-1
    8c0c:	8886703a 	and	r3,r17,r2
    8c10:	a829003a 	cmpeq	r20,r21,zero
    8c14:	800b883a 	mov	r5,r16
    8c18:	d8c00115 	stw	r3,4(sp)
    8c1c:	94000504 	addi	r16,r18,20
    8c20:	a000021e 	bne	r20,zero,8c2c <__d2b+0x80>
    8c24:	18c00434 	orhi	r3,r3,16
    8c28:	d8c00115 	stw	r3,4(sp)
    8c2c:	28002726 	beq	r5,zero,8ccc <__d2b+0x120>
    8c30:	d809883a 	mov	r4,sp
    8c34:	d9400015 	stw	r5,0(sp)
    8c38:	00086080 	call	8608 <__lo0bits>
    8c3c:	100d883a 	mov	r6,r2
    8c40:	10003526 	beq	r2,zero,8d18 <__d2b+0x16c>
    8c44:	d8c00117 	ldw	r3,4(sp)
    8c48:	00800804 	movi	r2,32
    8c4c:	1185c83a 	sub	r2,r2,r6
    8c50:	d9000017 	ldw	r4,0(sp)
    8c54:	1886983a 	sll	r3,r3,r2
    8c58:	1906b03a 	or	r3,r3,r4
    8c5c:	90c00515 	stw	r3,20(r18)
    8c60:	d8c00117 	ldw	r3,4(sp)
    8c64:	1986d83a 	srl	r3,r3,r6
    8c68:	d8c00115 	stw	r3,4(sp)
    8c6c:	180b003a 	cmpeq	r5,r3,zero
    8c70:	00800084 	movi	r2,2
    8c74:	114bc83a 	sub	r5,r2,r5
    8c78:	80c00115 	stw	r3,4(r16)
    8c7c:	91400415 	stw	r5,16(r18)
    8c80:	a0001a1e 	bne	r20,zero,8cec <__d2b+0x140>
    8c84:	3545883a 	add	r2,r6,r21
    8c88:	10bef344 	addi	r2,r2,-1075
    8c8c:	00c00d44 	movi	r3,53
    8c90:	b0800015 	stw	r2,0(r22)
    8c94:	1987c83a 	sub	r3,r3,r6
    8c98:	b8c00015 	stw	r3,0(r23)
    8c9c:	9005883a 	mov	r2,r18
    8ca0:	dfc00a17 	ldw	ra,40(sp)
    8ca4:	ddc00917 	ldw	r23,36(sp)
    8ca8:	dd800817 	ldw	r22,32(sp)
    8cac:	dd400717 	ldw	r21,28(sp)
    8cb0:	dd000617 	ldw	r20,24(sp)
    8cb4:	dcc00517 	ldw	r19,20(sp)
    8cb8:	dc800417 	ldw	r18,16(sp)
    8cbc:	dc400317 	ldw	r17,12(sp)
    8cc0:	dc000217 	ldw	r16,8(sp)
    8cc4:	dec00b04 	addi	sp,sp,44
    8cc8:	f800283a 	ret
    8ccc:	d9000104 	addi	r4,sp,4
    8cd0:	00086080 	call	8608 <__lo0bits>
    8cd4:	11800804 	addi	r6,r2,32
    8cd8:	d8800117 	ldw	r2,4(sp)
    8cdc:	94c00415 	stw	r19,16(r18)
    8ce0:	980b883a 	mov	r5,r19
    8ce4:	90800515 	stw	r2,20(r18)
    8ce8:	a03fe626 	beq	r20,zero,8c84 <__d2b+0xd8>
    8cec:	2945883a 	add	r2,r5,r5
    8cf0:	1085883a 	add	r2,r2,r2
    8cf4:	1405883a 	add	r2,r2,r16
    8cf8:	113fff17 	ldw	r4,-4(r2)
    8cfc:	30fef384 	addi	r3,r6,-1074
    8d00:	2820917a 	slli	r16,r5,5
    8d04:	b0c00015 	stw	r3,0(r22)
    8d08:	00085980 	call	8598 <__hi0bits>
    8d0c:	80a1c83a 	sub	r16,r16,r2
    8d10:	bc000015 	stw	r16,0(r23)
    8d14:	003fe106 	br	8c9c <__d2b+0xf0>
    8d18:	d8800017 	ldw	r2,0(sp)
    8d1c:	90800515 	stw	r2,20(r18)
    8d20:	d8c00117 	ldw	r3,4(sp)
    8d24:	003fd106 	br	8c6c <__d2b+0xc0>

00008d28 <__mdiff>:
    8d28:	defffb04 	addi	sp,sp,-20
    8d2c:	dc000015 	stw	r16,0(sp)
    8d30:	2821883a 	mov	r16,r5
    8d34:	dc800215 	stw	r18,8(sp)
    8d38:	300b883a 	mov	r5,r6
    8d3c:	2025883a 	mov	r18,r4
    8d40:	8009883a 	mov	r4,r16
    8d44:	dc400115 	stw	r17,4(sp)
    8d48:	dfc00415 	stw	ra,16(sp)
    8d4c:	dcc00315 	stw	r19,12(sp)
    8d50:	3023883a 	mov	r17,r6
    8d54:	00086cc0 	call	86cc <__mcmp>
    8d58:	10004226 	beq	r2,zero,8e64 <__mdiff+0x13c>
    8d5c:	10005016 	blt	r2,zero,8ea0 <__mdiff+0x178>
    8d60:	0027883a 	mov	r19,zero
    8d64:	81400117 	ldw	r5,4(r16)
    8d68:	9009883a 	mov	r4,r18
    8d6c:	0008af00 	call	8af0 <_Balloc>
    8d70:	1019883a 	mov	r12,r2
    8d74:	82800417 	ldw	r10,16(r16)
    8d78:	88800417 	ldw	r2,16(r17)
    8d7c:	81800504 	addi	r6,r16,20
    8d80:	5287883a 	add	r3,r10,r10
    8d84:	1085883a 	add	r2,r2,r2
    8d88:	18c7883a 	add	r3,r3,r3
    8d8c:	1085883a 	add	r2,r2,r2
    8d90:	8a000504 	addi	r8,r17,20
    8d94:	64c00315 	stw	r19,12(r12)
    8d98:	30db883a 	add	r13,r6,r3
    8d9c:	4097883a 	add	r11,r8,r2
    8da0:	61c00504 	addi	r7,r12,20
    8da4:	0013883a 	mov	r9,zero
    8da8:	31000017 	ldw	r4,0(r6)
    8dac:	41400017 	ldw	r5,0(r8)
    8db0:	42000104 	addi	r8,r8,4
    8db4:	20bfffcc 	andi	r2,r4,65535
    8db8:	28ffffcc 	andi	r3,r5,65535
    8dbc:	10c5c83a 	sub	r2,r2,r3
    8dc0:	1245883a 	add	r2,r2,r9
    8dc4:	2008d43a 	srli	r4,r4,16
    8dc8:	280ad43a 	srli	r5,r5,16
    8dcc:	1007d43a 	srai	r3,r2,16
    8dd0:	3880000d 	sth	r2,0(r7)
    8dd4:	2149c83a 	sub	r4,r4,r5
    8dd8:	20c9883a 	add	r4,r4,r3
    8ddc:	3900008d 	sth	r4,2(r7)
    8de0:	31800104 	addi	r6,r6,4
    8de4:	39c00104 	addi	r7,r7,4
    8de8:	2013d43a 	srai	r9,r4,16
    8dec:	42ffee36 	bltu	r8,r11,8da8 <__mdiff+0x80>
    8df0:	33400c2e 	bgeu	r6,r13,8e24 <__mdiff+0xfc>
    8df4:	30800017 	ldw	r2,0(r6)
    8df8:	31800104 	addi	r6,r6,4
    8dfc:	10ffffcc 	andi	r3,r2,65535
    8e00:	1a47883a 	add	r3,r3,r9
    8e04:	1004d43a 	srli	r2,r2,16
    8e08:	1809d43a 	srai	r4,r3,16
    8e0c:	38c0000d 	sth	r3,0(r7)
    8e10:	1105883a 	add	r2,r2,r4
    8e14:	3880008d 	sth	r2,2(r7)
    8e18:	1013d43a 	srai	r9,r2,16
    8e1c:	39c00104 	addi	r7,r7,4
    8e20:	337ff436 	bltu	r6,r13,8df4 <__mdiff+0xcc>
    8e24:	38bfff17 	ldw	r2,-4(r7)
    8e28:	38ffff04 	addi	r3,r7,-4
    8e2c:	1000041e 	bne	r2,zero,8e40 <__mdiff+0x118>
    8e30:	18ffff04 	addi	r3,r3,-4
    8e34:	18800017 	ldw	r2,0(r3)
    8e38:	52bfffc4 	addi	r10,r10,-1
    8e3c:	103ffc26 	beq	r2,zero,8e30 <__mdiff+0x108>
    8e40:	6005883a 	mov	r2,r12
    8e44:	62800415 	stw	r10,16(r12)
    8e48:	dfc00417 	ldw	ra,16(sp)
    8e4c:	dcc00317 	ldw	r19,12(sp)
    8e50:	dc800217 	ldw	r18,8(sp)
    8e54:	dc400117 	ldw	r17,4(sp)
    8e58:	dc000017 	ldw	r16,0(sp)
    8e5c:	dec00504 	addi	sp,sp,20
    8e60:	f800283a 	ret
    8e64:	9009883a 	mov	r4,r18
    8e68:	000b883a 	mov	r5,zero
    8e6c:	0008af00 	call	8af0 <_Balloc>
    8e70:	1019883a 	mov	r12,r2
    8e74:	00800044 	movi	r2,1
    8e78:	60800415 	stw	r2,16(r12)
    8e7c:	6005883a 	mov	r2,r12
    8e80:	60000515 	stw	zero,20(r12)
    8e84:	dfc00417 	ldw	ra,16(sp)
    8e88:	dcc00317 	ldw	r19,12(sp)
    8e8c:	dc800217 	ldw	r18,8(sp)
    8e90:	dc400117 	ldw	r17,4(sp)
    8e94:	dc000017 	ldw	r16,0(sp)
    8e98:	dec00504 	addi	sp,sp,20
    8e9c:	f800283a 	ret
    8ea0:	880d883a 	mov	r6,r17
    8ea4:	04c00044 	movi	r19,1
    8ea8:	8023883a 	mov	r17,r16
    8eac:	3021883a 	mov	r16,r6
    8eb0:	003fac06 	br	8d64 <__mdiff+0x3c>

00008eb4 <__lshift>:
    8eb4:	defff904 	addi	sp,sp,-28
    8eb8:	28800417 	ldw	r2,16(r5)
    8ebc:	dc000015 	stw	r16,0(sp)
    8ec0:	3021d17a 	srai	r16,r6,5
    8ec4:	28c00217 	ldw	r3,8(r5)
    8ec8:	10800044 	addi	r2,r2,1
    8ecc:	dc400115 	stw	r17,4(sp)
    8ed0:	80a3883a 	add	r17,r16,r2
    8ed4:	dd400515 	stw	r21,20(sp)
    8ed8:	dd000415 	stw	r20,16(sp)
    8edc:	dc800215 	stw	r18,8(sp)
    8ee0:	dfc00615 	stw	ra,24(sp)
    8ee4:	2825883a 	mov	r18,r5
    8ee8:	dcc00315 	stw	r19,12(sp)
    8eec:	3029883a 	mov	r20,r6
    8ef0:	202b883a 	mov	r21,r4
    8ef4:	29400117 	ldw	r5,4(r5)
    8ef8:	1c40030e 	bge	r3,r17,8f08 <__lshift+0x54>
    8efc:	18c7883a 	add	r3,r3,r3
    8f00:	29400044 	addi	r5,r5,1
    8f04:	1c7ffd16 	blt	r3,r17,8efc <__lshift+0x48>
    8f08:	a809883a 	mov	r4,r21
    8f0c:	0008af00 	call	8af0 <_Balloc>
    8f10:	1027883a 	mov	r19,r2
    8f14:	11400504 	addi	r5,r2,20
    8f18:	0400090e 	bge	zero,r16,8f40 <__lshift+0x8c>
    8f1c:	2805883a 	mov	r2,r5
    8f20:	0007883a 	mov	r3,zero
    8f24:	18c00044 	addi	r3,r3,1
    8f28:	10000015 	stw	zero,0(r2)
    8f2c:	10800104 	addi	r2,r2,4
    8f30:	80fffc1e 	bne	r16,r3,8f24 <__lshift+0x70>
    8f34:	8405883a 	add	r2,r16,r16
    8f38:	1085883a 	add	r2,r2,r2
    8f3c:	288b883a 	add	r5,r5,r2
    8f40:	90800417 	ldw	r2,16(r18)
    8f44:	91000504 	addi	r4,r18,20
    8f48:	a18007cc 	andi	r6,r20,31
    8f4c:	1085883a 	add	r2,r2,r2
    8f50:	1085883a 	add	r2,r2,r2
    8f54:	208f883a 	add	r7,r4,r2
    8f58:	30001e26 	beq	r6,zero,8fd4 <__lshift+0x120>
    8f5c:	00800804 	movi	r2,32
    8f60:	1191c83a 	sub	r8,r2,r6
    8f64:	0007883a 	mov	r3,zero
    8f68:	20800017 	ldw	r2,0(r4)
    8f6c:	1184983a 	sll	r2,r2,r6
    8f70:	1884b03a 	or	r2,r3,r2
    8f74:	28800015 	stw	r2,0(r5)
    8f78:	20c00017 	ldw	r3,0(r4)
    8f7c:	21000104 	addi	r4,r4,4
    8f80:	29400104 	addi	r5,r5,4
    8f84:	1a06d83a 	srl	r3,r3,r8
    8f88:	21fff736 	bltu	r4,r7,8f68 <__lshift+0xb4>
    8f8c:	28c00015 	stw	r3,0(r5)
    8f90:	18000126 	beq	r3,zero,8f98 <__lshift+0xe4>
    8f94:	8c400044 	addi	r17,r17,1
    8f98:	88bfffc4 	addi	r2,r17,-1
    8f9c:	98800415 	stw	r2,16(r19)
    8fa0:	a809883a 	mov	r4,r21
    8fa4:	900b883a 	mov	r5,r18
    8fa8:	00085700 	call	8570 <_Bfree>
    8fac:	9805883a 	mov	r2,r19
    8fb0:	dfc00617 	ldw	ra,24(sp)
    8fb4:	dd400517 	ldw	r21,20(sp)
    8fb8:	dd000417 	ldw	r20,16(sp)
    8fbc:	dcc00317 	ldw	r19,12(sp)
    8fc0:	dc800217 	ldw	r18,8(sp)
    8fc4:	dc400117 	ldw	r17,4(sp)
    8fc8:	dc000017 	ldw	r16,0(sp)
    8fcc:	dec00704 	addi	sp,sp,28
    8fd0:	f800283a 	ret
    8fd4:	20800017 	ldw	r2,0(r4)
    8fd8:	21000104 	addi	r4,r4,4
    8fdc:	28800015 	stw	r2,0(r5)
    8fe0:	29400104 	addi	r5,r5,4
    8fe4:	21ffec2e 	bgeu	r4,r7,8f98 <__lshift+0xe4>
    8fe8:	20800017 	ldw	r2,0(r4)
    8fec:	21000104 	addi	r4,r4,4
    8ff0:	28800015 	stw	r2,0(r5)
    8ff4:	29400104 	addi	r5,r5,4
    8ff8:	21fff636 	bltu	r4,r7,8fd4 <__lshift+0x120>
    8ffc:	003fe606 	br	8f98 <__lshift+0xe4>

00009000 <__multiply>:
    9000:	defff904 	addi	sp,sp,-28
    9004:	dcc00315 	stw	r19,12(sp)
    9008:	dc800215 	stw	r18,8(sp)
    900c:	2cc00417 	ldw	r19,16(r5)
    9010:	34800417 	ldw	r18,16(r6)
    9014:	dd000415 	stw	r20,16(sp)
    9018:	dc400115 	stw	r17,4(sp)
    901c:	dfc00615 	stw	ra,24(sp)
    9020:	dd400515 	stw	r21,20(sp)
    9024:	dc000015 	stw	r16,0(sp)
    9028:	2823883a 	mov	r17,r5
    902c:	3029883a 	mov	r20,r6
    9030:	9c80040e 	bge	r19,r18,9044 <__multiply+0x44>
    9034:	9027883a 	mov	r19,r18
    9038:	2c800417 	ldw	r18,16(r5)
    903c:	2829883a 	mov	r20,r5
    9040:	3023883a 	mov	r17,r6
    9044:	88800217 	ldw	r2,8(r17)
    9048:	9ca1883a 	add	r16,r19,r18
    904c:	89400117 	ldw	r5,4(r17)
    9050:	1400010e 	bge	r2,r16,9058 <__multiply+0x58>
    9054:	29400044 	addi	r5,r5,1
    9058:	0008af00 	call	8af0 <_Balloc>
    905c:	102b883a 	mov	r21,r2
    9060:	8405883a 	add	r2,r16,r16
    9064:	1085883a 	add	r2,r2,r2
    9068:	a9000504 	addi	r4,r21,20
    906c:	209d883a 	add	r14,r4,r2
    9070:	2380042e 	bgeu	r4,r14,9084 <__multiply+0x84>
    9074:	2005883a 	mov	r2,r4
    9078:	10000015 	stw	zero,0(r2)
    907c:	10800104 	addi	r2,r2,4
    9080:	13bffd36 	bltu	r2,r14,9078 <__multiply+0x78>
    9084:	9485883a 	add	r2,r18,r18
    9088:	9cc7883a 	add	r3,r19,r19
    908c:	a1800504 	addi	r6,r20,20
    9090:	1085883a 	add	r2,r2,r2
    9094:	8b400504 	addi	r13,r17,20
    9098:	18c7883a 	add	r3,r3,r3
    909c:	309f883a 	add	r15,r6,r2
    90a0:	68d7883a 	add	r11,r13,r3
    90a4:	33c03b2e 	bgeu	r6,r15,9194 <__multiply+0x194>
    90a8:	2019883a 	mov	r12,r4
    90ac:	30800017 	ldw	r2,0(r6)
    90b0:	127fffcc 	andi	r9,r2,65535
    90b4:	48001826 	beq	r9,zero,9118 <__multiply+0x118>
    90b8:	6811883a 	mov	r8,r13
    90bc:	600f883a 	mov	r7,r12
    90c0:	0015883a 	mov	r10,zero
    90c4:	40c00017 	ldw	r3,0(r8)
    90c8:	39400017 	ldw	r5,0(r7)
    90cc:	42000104 	addi	r8,r8,4
    90d0:	193fffcc 	andi	r4,r3,65535
    90d4:	4909383a 	mul	r4,r9,r4
    90d8:	1806d43a 	srli	r3,r3,16
    90dc:	28bfffcc 	andi	r2,r5,65535
    90e0:	5085883a 	add	r2,r10,r2
    90e4:	2089883a 	add	r4,r4,r2
    90e8:	48c7383a 	mul	r3,r9,r3
    90ec:	280ad43a 	srli	r5,r5,16
    90f0:	2004d43a 	srli	r2,r4,16
    90f4:	3900000d 	sth	r4,0(r7)
    90f8:	1947883a 	add	r3,r3,r5
    90fc:	10c5883a 	add	r2,r2,r3
    9100:	3880008d 	sth	r2,2(r7)
    9104:	1014d43a 	srli	r10,r2,16
    9108:	39c00104 	addi	r7,r7,4
    910c:	42ffed36 	bltu	r8,r11,90c4 <__multiply+0xc4>
    9110:	3a800015 	stw	r10,0(r7)
    9114:	30800017 	ldw	r2,0(r6)
    9118:	1012d43a 	srli	r9,r2,16
    911c:	48001926 	beq	r9,zero,9184 <__multiply+0x184>
    9120:	60800017 	ldw	r2,0(r12)
    9124:	6811883a 	mov	r8,r13
    9128:	600f883a 	mov	r7,r12
    912c:	0015883a 	mov	r10,zero
    9130:	100b883a 	mov	r5,r2
    9134:	41000017 	ldw	r4,0(r8)
    9138:	2806d43a 	srli	r3,r5,16
    913c:	3880000d 	sth	r2,0(r7)
    9140:	20bfffcc 	andi	r2,r4,65535
    9144:	4885383a 	mul	r2,r9,r2
    9148:	50c7883a 	add	r3,r10,r3
    914c:	2008d43a 	srli	r4,r4,16
    9150:	10c5883a 	add	r2,r2,r3
    9154:	3880008d 	sth	r2,2(r7)
    9158:	39c00104 	addi	r7,r7,4
    915c:	39400017 	ldw	r5,0(r7)
    9160:	4909383a 	mul	r4,r9,r4
    9164:	1004d43a 	srli	r2,r2,16
    9168:	28ffffcc 	andi	r3,r5,65535
    916c:	20c9883a 	add	r4,r4,r3
    9170:	1105883a 	add	r2,r2,r4
    9174:	42000104 	addi	r8,r8,4
    9178:	1014d43a 	srli	r10,r2,16
    917c:	42ffed36 	bltu	r8,r11,9134 <__multiply+0x134>
    9180:	38800015 	stw	r2,0(r7)
    9184:	31800104 	addi	r6,r6,4
    9188:	33c0022e 	bgeu	r6,r15,9194 <__multiply+0x194>
    918c:	63000104 	addi	r12,r12,4
    9190:	003fc606 	br	90ac <__multiply+0xac>
    9194:	0400090e 	bge	zero,r16,91bc <__multiply+0x1bc>
    9198:	70bfff17 	ldw	r2,-4(r14)
    919c:	70ffff04 	addi	r3,r14,-4
    91a0:	10000326 	beq	r2,zero,91b0 <__multiply+0x1b0>
    91a4:	00000506 	br	91bc <__multiply+0x1bc>
    91a8:	18800017 	ldw	r2,0(r3)
    91ac:	1000031e 	bne	r2,zero,91bc <__multiply+0x1bc>
    91b0:	843fffc4 	addi	r16,r16,-1
    91b4:	18ffff04 	addi	r3,r3,-4
    91b8:	803ffb1e 	bne	r16,zero,91a8 <__multiply+0x1a8>
    91bc:	a805883a 	mov	r2,r21
    91c0:	ac000415 	stw	r16,16(r21)
    91c4:	dfc00617 	ldw	ra,24(sp)
    91c8:	dd400517 	ldw	r21,20(sp)
    91cc:	dd000417 	ldw	r20,16(sp)
    91d0:	dcc00317 	ldw	r19,12(sp)
    91d4:	dc800217 	ldw	r18,8(sp)
    91d8:	dc400117 	ldw	r17,4(sp)
    91dc:	dc000017 	ldw	r16,0(sp)
    91e0:	dec00704 	addi	sp,sp,28
    91e4:	f800283a 	ret

000091e8 <__i2b>:
    91e8:	defffd04 	addi	sp,sp,-12
    91ec:	dc000015 	stw	r16,0(sp)
    91f0:	04000044 	movi	r16,1
    91f4:	dc800115 	stw	r18,4(sp)
    91f8:	2825883a 	mov	r18,r5
    91fc:	800b883a 	mov	r5,r16
    9200:	dfc00215 	stw	ra,8(sp)
    9204:	0008af00 	call	8af0 <_Balloc>
    9208:	14000415 	stw	r16,16(r2)
    920c:	14800515 	stw	r18,20(r2)
    9210:	dfc00217 	ldw	ra,8(sp)
    9214:	dc800117 	ldw	r18,4(sp)
    9218:	dc000017 	ldw	r16,0(sp)
    921c:	dec00304 	addi	sp,sp,12
    9220:	f800283a 	ret

00009224 <__multadd>:
    9224:	defffa04 	addi	sp,sp,-24
    9228:	dc800215 	stw	r18,8(sp)
    922c:	2c800417 	ldw	r18,16(r5)
    9230:	dd000415 	stw	r20,16(sp)
    9234:	dcc00315 	stw	r19,12(sp)
    9238:	dc000015 	stw	r16,0(sp)
    923c:	dfc00515 	stw	ra,20(sp)
    9240:	3821883a 	mov	r16,r7
    9244:	dc400115 	stw	r17,4(sp)
    9248:	2827883a 	mov	r19,r5
    924c:	2029883a 	mov	r20,r4
    9250:	2a000504 	addi	r8,r5,20
    9254:	000f883a 	mov	r7,zero
    9258:	40800017 	ldw	r2,0(r8)
    925c:	39c00044 	addi	r7,r7,1
    9260:	10ffffcc 	andi	r3,r2,65535
    9264:	1987383a 	mul	r3,r3,r6
    9268:	1004d43a 	srli	r2,r2,16
    926c:	1c07883a 	add	r3,r3,r16
    9270:	180ad43a 	srli	r5,r3,16
    9274:	1185383a 	mul	r2,r2,r6
    9278:	18ffffcc 	andi	r3,r3,65535
    927c:	1145883a 	add	r2,r2,r5
    9280:	1008943a 	slli	r4,r2,16
    9284:	1020d43a 	srli	r16,r2,16
    9288:	20c9883a 	add	r4,r4,r3
    928c:	41000015 	stw	r4,0(r8)
    9290:	42000104 	addi	r8,r8,4
    9294:	3cbff016 	blt	r7,r18,9258 <__multadd+0x34>
    9298:	80000826 	beq	r16,zero,92bc <__multadd+0x98>
    929c:	98800217 	ldw	r2,8(r19)
    92a0:	90800f0e 	bge	r18,r2,92e0 <__multadd+0xbc>
    92a4:	9485883a 	add	r2,r18,r18
    92a8:	1085883a 	add	r2,r2,r2
    92ac:	14c5883a 	add	r2,r2,r19
    92b0:	90c00044 	addi	r3,r18,1
    92b4:	14000515 	stw	r16,20(r2)
    92b8:	98c00415 	stw	r3,16(r19)
    92bc:	9805883a 	mov	r2,r19
    92c0:	dfc00517 	ldw	ra,20(sp)
    92c4:	dd000417 	ldw	r20,16(sp)
    92c8:	dcc00317 	ldw	r19,12(sp)
    92cc:	dc800217 	ldw	r18,8(sp)
    92d0:	dc400117 	ldw	r17,4(sp)
    92d4:	dc000017 	ldw	r16,0(sp)
    92d8:	dec00604 	addi	sp,sp,24
    92dc:	f800283a 	ret
    92e0:	99400117 	ldw	r5,4(r19)
    92e4:	a009883a 	mov	r4,r20
    92e8:	29400044 	addi	r5,r5,1
    92ec:	0008af00 	call	8af0 <_Balloc>
    92f0:	99800417 	ldw	r6,16(r19)
    92f4:	99400304 	addi	r5,r19,12
    92f8:	11000304 	addi	r4,r2,12
    92fc:	318d883a 	add	r6,r6,r6
    9300:	318d883a 	add	r6,r6,r6
    9304:	31800204 	addi	r6,r6,8
    9308:	1023883a 	mov	r17,r2
    930c:	00017300 	call	1730 <memcpy>
    9310:	980b883a 	mov	r5,r19
    9314:	a009883a 	mov	r4,r20
    9318:	00085700 	call	8570 <_Bfree>
    931c:	8827883a 	mov	r19,r17
    9320:	003fe006 	br	92a4 <__multadd+0x80>

00009324 <__pow5mult>:
    9324:	defffa04 	addi	sp,sp,-24
    9328:	308000cc 	andi	r2,r6,3
    932c:	dd000415 	stw	r20,16(sp)
    9330:	dcc00315 	stw	r19,12(sp)
    9334:	dc000015 	stw	r16,0(sp)
    9338:	dfc00515 	stw	ra,20(sp)
    933c:	dc800215 	stw	r18,8(sp)
    9340:	dc400115 	stw	r17,4(sp)
    9344:	3021883a 	mov	r16,r6
    9348:	2027883a 	mov	r19,r4
    934c:	2829883a 	mov	r20,r5
    9350:	10002b1e 	bne	r2,zero,9400 <__pow5mult+0xdc>
    9354:	8025d0ba 	srai	r18,r16,2
    9358:	90001b26 	beq	r18,zero,93c8 <__pow5mult+0xa4>
    935c:	9c001217 	ldw	r16,72(r19)
    9360:	8000081e 	bne	r16,zero,9384 <__pow5mult+0x60>
    9364:	00003006 	br	9428 <__pow5mult+0x104>
    9368:	800b883a 	mov	r5,r16
    936c:	800d883a 	mov	r6,r16
    9370:	9809883a 	mov	r4,r19
    9374:	90001426 	beq	r18,zero,93c8 <__pow5mult+0xa4>
    9378:	80800017 	ldw	r2,0(r16)
    937c:	10001b26 	beq	r2,zero,93ec <__pow5mult+0xc8>
    9380:	1021883a 	mov	r16,r2
    9384:	9080004c 	andi	r2,r18,1
    9388:	1005003a 	cmpeq	r2,r2,zero
    938c:	9025d07a 	srai	r18,r18,1
    9390:	800d883a 	mov	r6,r16
    9394:	9809883a 	mov	r4,r19
    9398:	a00b883a 	mov	r5,r20
    939c:	103ff21e 	bne	r2,zero,9368 <__pow5mult+0x44>
    93a0:	00090000 	call	9000 <__multiply>
    93a4:	a00b883a 	mov	r5,r20
    93a8:	9809883a 	mov	r4,r19
    93ac:	1023883a 	mov	r17,r2
    93b0:	00085700 	call	8570 <_Bfree>
    93b4:	8829883a 	mov	r20,r17
    93b8:	800b883a 	mov	r5,r16
    93bc:	800d883a 	mov	r6,r16
    93c0:	9809883a 	mov	r4,r19
    93c4:	903fec1e 	bne	r18,zero,9378 <__pow5mult+0x54>
    93c8:	a005883a 	mov	r2,r20
    93cc:	dfc00517 	ldw	ra,20(sp)
    93d0:	dd000417 	ldw	r20,16(sp)
    93d4:	dcc00317 	ldw	r19,12(sp)
    93d8:	dc800217 	ldw	r18,8(sp)
    93dc:	dc400117 	ldw	r17,4(sp)
    93e0:	dc000017 	ldw	r16,0(sp)
    93e4:	dec00604 	addi	sp,sp,24
    93e8:	f800283a 	ret
    93ec:	00090000 	call	9000 <__multiply>
    93f0:	80800015 	stw	r2,0(r16)
    93f4:	1021883a 	mov	r16,r2
    93f8:	10000015 	stw	zero,0(r2)
    93fc:	003fe106 	br	9384 <__pow5mult+0x60>
    9400:	1085883a 	add	r2,r2,r2
    9404:	00c00074 	movhi	r3,1
    9408:	18ca5704 	addi	r3,r3,10588
    940c:	1085883a 	add	r2,r2,r2
    9410:	10c5883a 	add	r2,r2,r3
    9414:	11bfff17 	ldw	r6,-4(r2)
    9418:	000f883a 	mov	r7,zero
    941c:	00092240 	call	9224 <__multadd>
    9420:	1029883a 	mov	r20,r2
    9424:	003fcb06 	br	9354 <__pow5mult+0x30>
    9428:	9809883a 	mov	r4,r19
    942c:	01409c44 	movi	r5,625
    9430:	00091e80 	call	91e8 <__i2b>
    9434:	98801215 	stw	r2,72(r19)
    9438:	1021883a 	mov	r16,r2
    943c:	10000015 	stw	zero,0(r2)
    9440:	003fd006 	br	9384 <__pow5mult+0x60>

00009444 <__s2b>:
    9444:	defff904 	addi	sp,sp,-28
    9448:	dcc00315 	stw	r19,12(sp)
    944c:	dc800215 	stw	r18,8(sp)
    9450:	2827883a 	mov	r19,r5
    9454:	2025883a 	mov	r18,r4
    9458:	01400244 	movi	r5,9
    945c:	39000204 	addi	r4,r7,8
    9460:	dd000415 	stw	r20,16(sp)
    9464:	dc400115 	stw	r17,4(sp)
    9468:	dfc00615 	stw	ra,24(sp)
    946c:	dd400515 	stw	r21,20(sp)
    9470:	dc000015 	stw	r16,0(sp)
    9474:	3829883a 	mov	r20,r7
    9478:	3023883a 	mov	r17,r6
    947c:	000eec00 	call	eec0 <__divsi3>
    9480:	00c00044 	movi	r3,1
    9484:	1880350e 	bge	r3,r2,955c <__s2b+0x118>
    9488:	000b883a 	mov	r5,zero
    948c:	18c7883a 	add	r3,r3,r3
    9490:	29400044 	addi	r5,r5,1
    9494:	18bffd16 	blt	r3,r2,948c <__s2b+0x48>
    9498:	9009883a 	mov	r4,r18
    949c:	0008af00 	call	8af0 <_Balloc>
    94a0:	1011883a 	mov	r8,r2
    94a4:	d8800717 	ldw	r2,28(sp)
    94a8:	00c00044 	movi	r3,1
    94ac:	01800244 	movi	r6,9
    94b0:	40800515 	stw	r2,20(r8)
    94b4:	40c00415 	stw	r3,16(r8)
    94b8:	3440260e 	bge	r6,r17,9554 <__s2b+0x110>
    94bc:	3021883a 	mov	r16,r6
    94c0:	99ab883a 	add	r21,r19,r6
    94c4:	9c05883a 	add	r2,r19,r16
    94c8:	11c00007 	ldb	r7,0(r2)
    94cc:	400b883a 	mov	r5,r8
    94d0:	9009883a 	mov	r4,r18
    94d4:	39fff404 	addi	r7,r7,-48
    94d8:	01800284 	movi	r6,10
    94dc:	00092240 	call	9224 <__multadd>
    94e0:	84000044 	addi	r16,r16,1
    94e4:	1011883a 	mov	r8,r2
    94e8:	8c3ff61e 	bne	r17,r16,94c4 <__s2b+0x80>
    94ec:	ac45883a 	add	r2,r21,r17
    94f0:	117ffe04 	addi	r5,r2,-8
    94f4:	880d883a 	mov	r6,r17
    94f8:	35000c0e 	bge	r6,r20,952c <__s2b+0xe8>
    94fc:	a185c83a 	sub	r2,r20,r6
    9500:	2821883a 	mov	r16,r5
    9504:	28a3883a 	add	r17,r5,r2
    9508:	81c00007 	ldb	r7,0(r16)
    950c:	400b883a 	mov	r5,r8
    9510:	9009883a 	mov	r4,r18
    9514:	39fff404 	addi	r7,r7,-48
    9518:	01800284 	movi	r6,10
    951c:	00092240 	call	9224 <__multadd>
    9520:	84000044 	addi	r16,r16,1
    9524:	1011883a 	mov	r8,r2
    9528:	847ff71e 	bne	r16,r17,9508 <__s2b+0xc4>
    952c:	4005883a 	mov	r2,r8
    9530:	dfc00617 	ldw	ra,24(sp)
    9534:	dd400517 	ldw	r21,20(sp)
    9538:	dd000417 	ldw	r20,16(sp)
    953c:	dcc00317 	ldw	r19,12(sp)
    9540:	dc800217 	ldw	r18,8(sp)
    9544:	dc400117 	ldw	r17,4(sp)
    9548:	dc000017 	ldw	r16,0(sp)
    954c:	dec00704 	addi	sp,sp,28
    9550:	f800283a 	ret
    9554:	99400284 	addi	r5,r19,10
    9558:	003fe706 	br	94f8 <__s2b+0xb4>
    955c:	000b883a 	mov	r5,zero
    9560:	003fcd06 	br	9498 <__s2b+0x54>

00009564 <_read_r>:
    9564:	defffd04 	addi	sp,sp,-12
    9568:	dc000015 	stw	r16,0(sp)
    956c:	04000074 	movhi	r16,1
    9570:	84180804 	addi	r16,r16,24608
    9574:	dc400115 	stw	r17,4(sp)
    9578:	80000015 	stw	zero,0(r16)
    957c:	2023883a 	mov	r17,r4
    9580:	2809883a 	mov	r4,r5
    9584:	300b883a 	mov	r5,r6
    9588:	380d883a 	mov	r6,r7
    958c:	dfc00215 	stw	ra,8(sp)
    9590:	000fee40 	call	fee4 <read>
    9594:	1007883a 	mov	r3,r2
    9598:	00bfffc4 	movi	r2,-1
    959c:	18800626 	beq	r3,r2,95b8 <_read_r+0x54>
    95a0:	1805883a 	mov	r2,r3
    95a4:	dfc00217 	ldw	ra,8(sp)
    95a8:	dc400117 	ldw	r17,4(sp)
    95ac:	dc000017 	ldw	r16,0(sp)
    95b0:	dec00304 	addi	sp,sp,12
    95b4:	f800283a 	ret
    95b8:	80800017 	ldw	r2,0(r16)
    95bc:	103ff826 	beq	r2,zero,95a0 <_read_r+0x3c>
    95c0:	88800015 	stw	r2,0(r17)
    95c4:	1805883a 	mov	r2,r3
    95c8:	dfc00217 	ldw	ra,8(sp)
    95cc:	dc400117 	ldw	r17,4(sp)
    95d0:	dc000017 	ldw	r16,0(sp)
    95d4:	dec00304 	addi	sp,sp,12
    95d8:	f800283a 	ret

000095dc <_realloc_r>:
    95dc:	defff404 	addi	sp,sp,-48
    95e0:	dd800815 	stw	r22,32(sp)
    95e4:	dc800415 	stw	r18,16(sp)
    95e8:	dc400315 	stw	r17,12(sp)
    95ec:	dfc00b15 	stw	ra,44(sp)
    95f0:	df000a15 	stw	fp,40(sp)
    95f4:	ddc00915 	stw	r23,36(sp)
    95f8:	dd400715 	stw	r21,28(sp)
    95fc:	dd000615 	stw	r20,24(sp)
    9600:	dcc00515 	stw	r19,20(sp)
    9604:	dc000215 	stw	r16,8(sp)
    9608:	2825883a 	mov	r18,r5
    960c:	3023883a 	mov	r17,r6
    9610:	202d883a 	mov	r22,r4
    9614:	2800c926 	beq	r5,zero,993c <_realloc_r+0x360>
    9618:	000fea40 	call	fea4 <__malloc_lock>
    961c:	943ffe04 	addi	r16,r18,-8
    9620:	88c002c4 	addi	r3,r17,11
    9624:	00800584 	movi	r2,22
    9628:	82000117 	ldw	r8,4(r16)
    962c:	10c01b2e 	bgeu	r2,r3,969c <_realloc_r+0xc0>
    9630:	00bffe04 	movi	r2,-8
    9634:	188e703a 	and	r7,r3,r2
    9638:	3839883a 	mov	fp,r7
    963c:	38001a16 	blt	r7,zero,96a8 <_realloc_r+0xcc>
    9640:	e4401936 	bltu	fp,r17,96a8 <_realloc_r+0xcc>
    9644:	013fff04 	movi	r4,-4
    9648:	4126703a 	and	r19,r8,r4
    964c:	99c02616 	blt	r19,r7,96e8 <_realloc_r+0x10c>
    9650:	802b883a 	mov	r21,r16
    9654:	9829883a 	mov	r20,r19
    9658:	84000204 	addi	r16,r16,8
    965c:	a80f883a 	mov	r7,r21
    9660:	a70dc83a 	sub	r6,r20,fp
    9664:	008003c4 	movi	r2,15
    9668:	1180c136 	bltu	r2,r6,9970 <_realloc_r+0x394>
    966c:	38800117 	ldw	r2,4(r7)
    9670:	a549883a 	add	r4,r20,r21
    9674:	1080004c 	andi	r2,r2,1
    9678:	a084b03a 	or	r2,r20,r2
    967c:	38800115 	stw	r2,4(r7)
    9680:	20c00117 	ldw	r3,4(r4)
    9684:	18c00054 	ori	r3,r3,1
    9688:	20c00115 	stw	r3,4(r4)
    968c:	b009883a 	mov	r4,r22
    9690:	000fec40 	call	fec4 <__malloc_unlock>
    9694:	8023883a 	mov	r17,r16
    9698:	00000606 	br	96b4 <_realloc_r+0xd8>
    969c:	01c00404 	movi	r7,16
    96a0:	3839883a 	mov	fp,r7
    96a4:	e47fe72e 	bgeu	fp,r17,9644 <_realloc_r+0x68>
    96a8:	00800304 	movi	r2,12
    96ac:	0023883a 	mov	r17,zero
    96b0:	b0800015 	stw	r2,0(r22)
    96b4:	8805883a 	mov	r2,r17
    96b8:	dfc00b17 	ldw	ra,44(sp)
    96bc:	df000a17 	ldw	fp,40(sp)
    96c0:	ddc00917 	ldw	r23,36(sp)
    96c4:	dd800817 	ldw	r22,32(sp)
    96c8:	dd400717 	ldw	r21,28(sp)
    96cc:	dd000617 	ldw	r20,24(sp)
    96d0:	dcc00517 	ldw	r19,20(sp)
    96d4:	dc800417 	ldw	r18,16(sp)
    96d8:	dc400317 	ldw	r17,12(sp)
    96dc:	dc000217 	ldw	r16,8(sp)
    96e0:	dec00c04 	addi	sp,sp,48
    96e4:	f800283a 	ret
    96e8:	00800074 	movhi	r2,1
    96ec:	108bc104 	addi	r2,r2,12036
    96f0:	12400217 	ldw	r9,8(r2)
    96f4:	84cd883a 	add	r6,r16,r19
    96f8:	802b883a 	mov	r21,r16
    96fc:	3240b926 	beq	r6,r9,99e4 <_realloc_r+0x408>
    9700:	31400117 	ldw	r5,4(r6)
    9704:	00bfff84 	movi	r2,-2
    9708:	2884703a 	and	r2,r5,r2
    970c:	1185883a 	add	r2,r2,r6
    9710:	10c00117 	ldw	r3,4(r2)
    9714:	18c0004c 	andi	r3,r3,1
    9718:	1807003a 	cmpeq	r3,r3,zero
    971c:	1800a326 	beq	r3,zero,99ac <_realloc_r+0x3d0>
    9720:	2908703a 	and	r4,r5,r4
    9724:	9929883a 	add	r20,r19,r4
    9728:	a1c0a30e 	bge	r20,r7,99b8 <_realloc_r+0x3dc>
    972c:	4080004c 	andi	r2,r8,1
    9730:	1000551e 	bne	r2,zero,9888 <_realloc_r+0x2ac>
    9734:	80800017 	ldw	r2,0(r16)
    9738:	80afc83a 	sub	r23,r16,r2
    973c:	b8c00117 	ldw	r3,4(r23)
    9740:	00bfff04 	movi	r2,-4
    9744:	1884703a 	and	r2,r3,r2
    9748:	30002e26 	beq	r6,zero,9804 <_realloc_r+0x228>
    974c:	3240b926 	beq	r6,r9,9a34 <_realloc_r+0x458>
    9750:	98a9883a 	add	r20,r19,r2
    9754:	2509883a 	add	r4,r4,r20
    9758:	d9000015 	stw	r4,0(sp)
    975c:	21c02a16 	blt	r4,r7,9808 <_realloc_r+0x22c>
    9760:	30800317 	ldw	r2,12(r6)
    9764:	30c00217 	ldw	r3,8(r6)
    9768:	01400904 	movi	r5,36
    976c:	99bfff04 	addi	r6,r19,-4
    9770:	18800315 	stw	r2,12(r3)
    9774:	10c00215 	stw	r3,8(r2)
    9778:	b9000317 	ldw	r4,12(r23)
    977c:	b8800217 	ldw	r2,8(r23)
    9780:	b82b883a 	mov	r21,r23
    9784:	bc000204 	addi	r16,r23,8
    9788:	20800215 	stw	r2,8(r4)
    978c:	11000315 	stw	r4,12(r2)
    9790:	2980e436 	bltu	r5,r6,9b24 <_realloc_r+0x548>
    9794:	008004c4 	movi	r2,19
    9798:	9009883a 	mov	r4,r18
    979c:	8011883a 	mov	r8,r16
    97a0:	11800f2e 	bgeu	r2,r6,97e0 <_realloc_r+0x204>
    97a4:	90800017 	ldw	r2,0(r18)
    97a8:	ba000404 	addi	r8,r23,16
    97ac:	91000204 	addi	r4,r18,8
    97b0:	b8800215 	stw	r2,8(r23)
    97b4:	90c00117 	ldw	r3,4(r18)
    97b8:	008006c4 	movi	r2,27
    97bc:	b8c00315 	stw	r3,12(r23)
    97c0:	1180072e 	bgeu	r2,r6,97e0 <_realloc_r+0x204>
    97c4:	90c00217 	ldw	r3,8(r18)
    97c8:	ba000604 	addi	r8,r23,24
    97cc:	91000404 	addi	r4,r18,16
    97d0:	b8c00415 	stw	r3,16(r23)
    97d4:	90800317 	ldw	r2,12(r18)
    97d8:	b8800515 	stw	r2,20(r23)
    97dc:	3140e726 	beq	r6,r5,9b7c <_realloc_r+0x5a0>
    97e0:	20800017 	ldw	r2,0(r4)
    97e4:	dd000017 	ldw	r20,0(sp)
    97e8:	b80f883a 	mov	r7,r23
    97ec:	40800015 	stw	r2,0(r8)
    97f0:	20c00117 	ldw	r3,4(r4)
    97f4:	40c00115 	stw	r3,4(r8)
    97f8:	20800217 	ldw	r2,8(r4)
    97fc:	40800215 	stw	r2,8(r8)
    9800:	003f9706 	br	9660 <_realloc_r+0x84>
    9804:	98a9883a 	add	r20,r19,r2
    9808:	a1c01f16 	blt	r20,r7,9888 <_realloc_r+0x2ac>
    980c:	b8c00317 	ldw	r3,12(r23)
    9810:	b8800217 	ldw	r2,8(r23)
    9814:	99bfff04 	addi	r6,r19,-4
    9818:	01400904 	movi	r5,36
    981c:	b82b883a 	mov	r21,r23
    9820:	18800215 	stw	r2,8(r3)
    9824:	10c00315 	stw	r3,12(r2)
    9828:	bc000204 	addi	r16,r23,8
    982c:	2980c336 	bltu	r5,r6,9b3c <_realloc_r+0x560>
    9830:	008004c4 	movi	r2,19
    9834:	9009883a 	mov	r4,r18
    9838:	8011883a 	mov	r8,r16
    983c:	11800f2e 	bgeu	r2,r6,987c <_realloc_r+0x2a0>
    9840:	90800017 	ldw	r2,0(r18)
    9844:	ba000404 	addi	r8,r23,16
    9848:	91000204 	addi	r4,r18,8
    984c:	b8800215 	stw	r2,8(r23)
    9850:	90c00117 	ldw	r3,4(r18)
    9854:	008006c4 	movi	r2,27
    9858:	b8c00315 	stw	r3,12(r23)
    985c:	1180072e 	bgeu	r2,r6,987c <_realloc_r+0x2a0>
    9860:	90c00217 	ldw	r3,8(r18)
    9864:	ba000604 	addi	r8,r23,24
    9868:	91000404 	addi	r4,r18,16
    986c:	b8c00415 	stw	r3,16(r23)
    9870:	90800317 	ldw	r2,12(r18)
    9874:	b8800515 	stw	r2,20(r23)
    9878:	3140c726 	beq	r6,r5,9b98 <_realloc_r+0x5bc>
    987c:	20800017 	ldw	r2,0(r4)
    9880:	b80f883a 	mov	r7,r23
    9884:	003fd906 	br	97ec <_realloc_r+0x210>
    9888:	880b883a 	mov	r5,r17
    988c:	b009883a 	mov	r4,r22
    9890:	0000f0c0 	call	f0c <_malloc_r>
    9894:	1023883a 	mov	r17,r2
    9898:	10002526 	beq	r2,zero,9930 <_realloc_r+0x354>
    989c:	80800117 	ldw	r2,4(r16)
    98a0:	00ffff84 	movi	r3,-2
    98a4:	893ffe04 	addi	r4,r17,-8
    98a8:	10c4703a 	and	r2,r2,r3
    98ac:	8085883a 	add	r2,r16,r2
    98b0:	20809526 	beq	r4,r2,9b08 <_realloc_r+0x52c>
    98b4:	99bfff04 	addi	r6,r19,-4
    98b8:	01c00904 	movi	r7,36
    98bc:	39804536 	bltu	r7,r6,99d4 <_realloc_r+0x3f8>
    98c0:	008004c4 	movi	r2,19
    98c4:	9009883a 	mov	r4,r18
    98c8:	880b883a 	mov	r5,r17
    98cc:	11800f2e 	bgeu	r2,r6,990c <_realloc_r+0x330>
    98d0:	90800017 	ldw	r2,0(r18)
    98d4:	89400204 	addi	r5,r17,8
    98d8:	91000204 	addi	r4,r18,8
    98dc:	88800015 	stw	r2,0(r17)
    98e0:	90c00117 	ldw	r3,4(r18)
    98e4:	008006c4 	movi	r2,27
    98e8:	88c00115 	stw	r3,4(r17)
    98ec:	1180072e 	bgeu	r2,r6,990c <_realloc_r+0x330>
    98f0:	90c00217 	ldw	r3,8(r18)
    98f4:	89400404 	addi	r5,r17,16
    98f8:	91000404 	addi	r4,r18,16
    98fc:	88c00215 	stw	r3,8(r17)
    9900:	90800317 	ldw	r2,12(r18)
    9904:	88800315 	stw	r2,12(r17)
    9908:	31c09126 	beq	r6,r7,9b50 <_realloc_r+0x574>
    990c:	20800017 	ldw	r2,0(r4)
    9910:	28800015 	stw	r2,0(r5)
    9914:	20c00117 	ldw	r3,4(r4)
    9918:	28c00115 	stw	r3,4(r5)
    991c:	20800217 	ldw	r2,8(r4)
    9920:	28800215 	stw	r2,8(r5)
    9924:	900b883a 	mov	r5,r18
    9928:	b009883a 	mov	r4,r22
    992c:	00078e40 	call	78e4 <_free_r>
    9930:	b009883a 	mov	r4,r22
    9934:	000fec40 	call	fec4 <__malloc_unlock>
    9938:	003f5e06 	br	96b4 <_realloc_r+0xd8>
    993c:	300b883a 	mov	r5,r6
    9940:	dfc00b17 	ldw	ra,44(sp)
    9944:	df000a17 	ldw	fp,40(sp)
    9948:	ddc00917 	ldw	r23,36(sp)
    994c:	dd800817 	ldw	r22,32(sp)
    9950:	dd400717 	ldw	r21,28(sp)
    9954:	dd000617 	ldw	r20,24(sp)
    9958:	dcc00517 	ldw	r19,20(sp)
    995c:	dc800417 	ldw	r18,16(sp)
    9960:	dc400317 	ldw	r17,12(sp)
    9964:	dc000217 	ldw	r16,8(sp)
    9968:	dec00c04 	addi	sp,sp,48
    996c:	0000f0c1 	jmpi	f0c <_malloc_r>
    9970:	38800117 	ldw	r2,4(r7)
    9974:	e54b883a 	add	r5,fp,r21
    9978:	31000054 	ori	r4,r6,1
    997c:	1080004c 	andi	r2,r2,1
    9980:	1704b03a 	or	r2,r2,fp
    9984:	38800115 	stw	r2,4(r7)
    9988:	29000115 	stw	r4,4(r5)
    998c:	2987883a 	add	r3,r5,r6
    9990:	18800117 	ldw	r2,4(r3)
    9994:	29400204 	addi	r5,r5,8
    9998:	b009883a 	mov	r4,r22
    999c:	10800054 	ori	r2,r2,1
    99a0:	18800115 	stw	r2,4(r3)
    99a4:	00078e40 	call	78e4 <_free_r>
    99a8:	003f3806 	br	968c <_realloc_r+0xb0>
    99ac:	000d883a 	mov	r6,zero
    99b0:	0009883a 	mov	r4,zero
    99b4:	003f5d06 	br	972c <_realloc_r+0x150>
    99b8:	30c00217 	ldw	r3,8(r6)
    99bc:	30800317 	ldw	r2,12(r6)
    99c0:	800f883a 	mov	r7,r16
    99c4:	84000204 	addi	r16,r16,8
    99c8:	10c00215 	stw	r3,8(r2)
    99cc:	18800315 	stw	r2,12(r3)
    99d0:	003f2306 	br	9660 <_realloc_r+0x84>
    99d4:	8809883a 	mov	r4,r17
    99d8:	900b883a 	mov	r5,r18
    99dc:	00084900 	call	8490 <memmove>
    99e0:	003fd006 	br	9924 <_realloc_r+0x348>
    99e4:	30800117 	ldw	r2,4(r6)
    99e8:	e0c00404 	addi	r3,fp,16
    99ec:	1108703a 	and	r4,r2,r4
    99f0:	9905883a 	add	r2,r19,r4
    99f4:	10ff4d16 	blt	r2,r3,972c <_realloc_r+0x150>
    99f8:	1705c83a 	sub	r2,r2,fp
    99fc:	870b883a 	add	r5,r16,fp
    9a00:	10800054 	ori	r2,r2,1
    9a04:	28800115 	stw	r2,4(r5)
    9a08:	80c00117 	ldw	r3,4(r16)
    9a0c:	00800074 	movhi	r2,1
    9a10:	108bc104 	addi	r2,r2,12036
    9a14:	b009883a 	mov	r4,r22
    9a18:	18c0004c 	andi	r3,r3,1
    9a1c:	e0c6b03a 	or	r3,fp,r3
    9a20:	11400215 	stw	r5,8(r2)
    9a24:	80c00115 	stw	r3,4(r16)
    9a28:	000fec40 	call	fec4 <__malloc_unlock>
    9a2c:	84400204 	addi	r17,r16,8
    9a30:	003f2006 	br	96b4 <_realloc_r+0xd8>
    9a34:	98a9883a 	add	r20,r19,r2
    9a38:	2509883a 	add	r4,r4,r20
    9a3c:	e0800404 	addi	r2,fp,16
    9a40:	d9000115 	stw	r4,4(sp)
    9a44:	20bf7016 	blt	r4,r2,9808 <_realloc_r+0x22c>
    9a48:	b8c00317 	ldw	r3,12(r23)
    9a4c:	b8800217 	ldw	r2,8(r23)
    9a50:	99bfff04 	addi	r6,r19,-4
    9a54:	01400904 	movi	r5,36
    9a58:	18800215 	stw	r2,8(r3)
    9a5c:	10c00315 	stw	r3,12(r2)
    9a60:	bc400204 	addi	r17,r23,8
    9a64:	29804136 	bltu	r5,r6,9b6c <_realloc_r+0x590>
    9a68:	008004c4 	movi	r2,19
    9a6c:	9009883a 	mov	r4,r18
    9a70:	880f883a 	mov	r7,r17
    9a74:	11800f2e 	bgeu	r2,r6,9ab4 <_realloc_r+0x4d8>
    9a78:	90800017 	ldw	r2,0(r18)
    9a7c:	b9c00404 	addi	r7,r23,16
    9a80:	91000204 	addi	r4,r18,8
    9a84:	b8800215 	stw	r2,8(r23)
    9a88:	90c00117 	ldw	r3,4(r18)
    9a8c:	008006c4 	movi	r2,27
    9a90:	b8c00315 	stw	r3,12(r23)
    9a94:	1180072e 	bgeu	r2,r6,9ab4 <_realloc_r+0x4d8>
    9a98:	90c00217 	ldw	r3,8(r18)
    9a9c:	b9c00604 	addi	r7,r23,24
    9aa0:	91000404 	addi	r4,r18,16
    9aa4:	b8c00415 	stw	r3,16(r23)
    9aa8:	90800317 	ldw	r2,12(r18)
    9aac:	b8800515 	stw	r2,20(r23)
    9ab0:	31404026 	beq	r6,r5,9bb4 <_realloc_r+0x5d8>
    9ab4:	20800017 	ldw	r2,0(r4)
    9ab8:	38800015 	stw	r2,0(r7)
    9abc:	20c00117 	ldw	r3,4(r4)
    9ac0:	38c00115 	stw	r3,4(r7)
    9ac4:	20800217 	ldw	r2,8(r4)
    9ac8:	38800215 	stw	r2,8(r7)
    9acc:	d8c00117 	ldw	r3,4(sp)
    9ad0:	bf0b883a 	add	r5,r23,fp
    9ad4:	b009883a 	mov	r4,r22
    9ad8:	1f05c83a 	sub	r2,r3,fp
    9adc:	10800054 	ori	r2,r2,1
    9ae0:	28800115 	stw	r2,4(r5)
    9ae4:	b8c00117 	ldw	r3,4(r23)
    9ae8:	00800074 	movhi	r2,1
    9aec:	108bc104 	addi	r2,r2,12036
    9af0:	11400215 	stw	r5,8(r2)
    9af4:	18c0004c 	andi	r3,r3,1
    9af8:	e0c6b03a 	or	r3,fp,r3
    9afc:	b8c00115 	stw	r3,4(r23)
    9b00:	000fec40 	call	fec4 <__malloc_unlock>
    9b04:	003eeb06 	br	96b4 <_realloc_r+0xd8>
    9b08:	20800117 	ldw	r2,4(r4)
    9b0c:	00ffff04 	movi	r3,-4
    9b10:	800f883a 	mov	r7,r16
    9b14:	10c4703a 	and	r2,r2,r3
    9b18:	98a9883a 	add	r20,r19,r2
    9b1c:	84000204 	addi	r16,r16,8
    9b20:	003ecf06 	br	9660 <_realloc_r+0x84>
    9b24:	900b883a 	mov	r5,r18
    9b28:	8009883a 	mov	r4,r16
    9b2c:	00084900 	call	8490 <memmove>
    9b30:	dd000017 	ldw	r20,0(sp)
    9b34:	b80f883a 	mov	r7,r23
    9b38:	003ec906 	br	9660 <_realloc_r+0x84>
    9b3c:	900b883a 	mov	r5,r18
    9b40:	8009883a 	mov	r4,r16
    9b44:	00084900 	call	8490 <memmove>
    9b48:	b80f883a 	mov	r7,r23
    9b4c:	003ec406 	br	9660 <_realloc_r+0x84>
    9b50:	90c00417 	ldw	r3,16(r18)
    9b54:	89400604 	addi	r5,r17,24
    9b58:	91000604 	addi	r4,r18,24
    9b5c:	88c00415 	stw	r3,16(r17)
    9b60:	90800517 	ldw	r2,20(r18)
    9b64:	88800515 	stw	r2,20(r17)
    9b68:	003f6806 	br	990c <_realloc_r+0x330>
    9b6c:	900b883a 	mov	r5,r18
    9b70:	8809883a 	mov	r4,r17
    9b74:	00084900 	call	8490 <memmove>
    9b78:	003fd406 	br	9acc <_realloc_r+0x4f0>
    9b7c:	90c00417 	ldw	r3,16(r18)
    9b80:	91000604 	addi	r4,r18,24
    9b84:	ba000804 	addi	r8,r23,32
    9b88:	b8c00615 	stw	r3,24(r23)
    9b8c:	90800517 	ldw	r2,20(r18)
    9b90:	b8800715 	stw	r2,28(r23)
    9b94:	003f1206 	br	97e0 <_realloc_r+0x204>
    9b98:	90c00417 	ldw	r3,16(r18)
    9b9c:	91000604 	addi	r4,r18,24
    9ba0:	ba000804 	addi	r8,r23,32
    9ba4:	b8c00615 	stw	r3,24(r23)
    9ba8:	90800517 	ldw	r2,20(r18)
    9bac:	b8800715 	stw	r2,28(r23)
    9bb0:	003f3206 	br	987c <_realloc_r+0x2a0>
    9bb4:	90c00417 	ldw	r3,16(r18)
    9bb8:	91000604 	addi	r4,r18,24
    9bbc:	b9c00804 	addi	r7,r23,32
    9bc0:	b8c00615 	stw	r3,24(r23)
    9bc4:	90800517 	ldw	r2,20(r18)
    9bc8:	b8800715 	stw	r2,28(r23)
    9bcc:	003fb906 	br	9ab4 <_realloc_r+0x4d8>

00009bd0 <__isinfd>:
    9bd0:	200d883a 	mov	r6,r4
    9bd4:	0109c83a 	sub	r4,zero,r4
    9bd8:	2188b03a 	or	r4,r4,r6
    9bdc:	2008d7fa 	srli	r4,r4,31
    9be0:	00a00034 	movhi	r2,32768
    9be4:	10bfffc4 	addi	r2,r2,-1
    9be8:	1144703a 	and	r2,r2,r5
    9bec:	2088b03a 	or	r4,r4,r2
    9bf0:	009ffc34 	movhi	r2,32752
    9bf4:	1105c83a 	sub	r2,r2,r4
    9bf8:	0087c83a 	sub	r3,zero,r2
    9bfc:	10c4b03a 	or	r2,r2,r3
    9c00:	1004d7fa 	srli	r2,r2,31
    9c04:	00c00044 	movi	r3,1
    9c08:	1885c83a 	sub	r2,r3,r2
    9c0c:	f800283a 	ret

00009c10 <__isnand>:
    9c10:	200d883a 	mov	r6,r4
    9c14:	0109c83a 	sub	r4,zero,r4
    9c18:	2188b03a 	or	r4,r4,r6
    9c1c:	2008d7fa 	srli	r4,r4,31
    9c20:	00a00034 	movhi	r2,32768
    9c24:	10bfffc4 	addi	r2,r2,-1
    9c28:	1144703a 	and	r2,r2,r5
    9c2c:	2088b03a 	or	r4,r4,r2
    9c30:	009ffc34 	movhi	r2,32752
    9c34:	1105c83a 	sub	r2,r2,r4
    9c38:	1004d7fa 	srli	r2,r2,31
    9c3c:	f800283a 	ret

00009c40 <__sccl>:
    9c40:	28c00003 	ldbu	r3,0(r5)
    9c44:	00801784 	movi	r2,94
    9c48:	2a000044 	addi	r8,r5,1
    9c4c:	18802526 	beq	r3,r2,9ce4 <__sccl+0xa4>
    9c50:	180f883a 	mov	r7,r3
    9c54:	0013883a 	mov	r9,zero
    9c58:	000d883a 	mov	r6,zero
    9c5c:	0007883a 	mov	r3,zero
    9c60:	01404004 	movi	r5,256
    9c64:	1905883a 	add	r2,r3,r4
    9c68:	18c00044 	addi	r3,r3,1
    9c6c:	11800005 	stb	r6,0(r2)
    9c70:	197ffc1e 	bne	r3,r5,9c64 <__sccl+0x24>
    9c74:	38000c26 	beq	r7,zero,9ca8 <__sccl+0x68>
    9c78:	00800044 	movi	r2,1
    9c7c:	124dc83a 	sub	r6,r2,r9
    9c80:	3905883a 	add	r2,r7,r4
    9c84:	11800005 	stb	r6,0(r2)
    9c88:	41400044 	addi	r5,r8,1
    9c8c:	02400b44 	movi	r9,45
    9c90:	02801744 	movi	r10,93
    9c94:	28bfffc3 	ldbu	r2,-1(r5)
    9c98:	2811883a 	mov	r8,r5
    9c9c:	12400726 	beq	r2,r9,9cbc <__sccl+0x7c>
    9ca0:	12800226 	beq	r2,r10,9cac <__sccl+0x6c>
    9ca4:	1000031e 	bne	r2,zero,9cb4 <__sccl+0x74>
    9ca8:	423fffc4 	addi	r8,r8,-1
    9cac:	4005883a 	mov	r2,r8
    9cb0:	f800283a 	ret
    9cb4:	100f883a 	mov	r7,r2
    9cb8:	003ff106 	br	9c80 <__sccl+0x40>
    9cbc:	28c00003 	ldbu	r3,0(r5)
    9cc0:	1a800d26 	beq	r3,r10,9cf8 <__sccl+0xb8>
    9cc4:	19c00c16 	blt	r3,r7,9cf8 <__sccl+0xb8>
    9cc8:	21c5883a 	add	r2,r4,r7
    9ccc:	39c00044 	addi	r7,r7,1
    9cd0:	11800045 	stb	r6,1(r2)
    9cd4:	10800044 	addi	r2,r2,1
    9cd8:	38fffc16 	blt	r7,r3,9ccc <__sccl+0x8c>
    9cdc:	29400084 	addi	r5,r5,2
    9ce0:	003fec06 	br	9c94 <__sccl+0x54>
    9ce4:	29c00043 	ldbu	r7,1(r5)
    9ce8:	02400044 	movi	r9,1
    9cec:	2a000084 	addi	r8,r5,2
    9cf0:	480d883a 	mov	r6,r9
    9cf4:	003fd906 	br	9c5c <__sccl+0x1c>
    9cf8:	01c00b44 	movi	r7,45
    9cfc:	003fe006 	br	9c80 <__sccl+0x40>

00009d00 <nanf>:
    9d00:	009ff034 	movhi	r2,32704
    9d04:	f800283a 	ret

00009d08 <match>:
    9d08:	21800017 	ldw	r6,0(r4)
    9d0c:	01c01004 	movi	r7,64
    9d10:	02001684 	movi	r8,90
    9d14:	28800007 	ldb	r2,0(r5)
    9d18:	29400044 	addi	r5,r5,1
    9d1c:	10000826 	beq	r2,zero,9d40 <match+0x38>
    9d20:	31800044 	addi	r6,r6,1
    9d24:	30c00007 	ldb	r3,0(r6)
    9d28:	38c0020e 	bge	r7,r3,9d34 <match+0x2c>
    9d2c:	40c00116 	blt	r8,r3,9d34 <match+0x2c>
    9d30:	18c00804 	addi	r3,r3,32
    9d34:	18bff726 	beq	r3,r2,9d14 <match+0xc>
    9d38:	0005883a 	mov	r2,zero
    9d3c:	f800283a 	ret
    9d40:	30800044 	addi	r2,r6,1
    9d44:	20800015 	stw	r2,0(r4)
    9d48:	00800044 	movi	r2,1
    9d4c:	f800283a 	ret

00009d50 <_strtod_r>:
    9d50:	deffde04 	addi	sp,sp,-136
    9d54:	df002015 	stw	fp,128(sp)
    9d58:	dd401d15 	stw	r21,116(sp)
    9d5c:	dc401915 	stw	r17,100(sp)
    9d60:	dfc02115 	stw	ra,132(sp)
    9d64:	ddc01f15 	stw	r23,124(sp)
    9d68:	dd801e15 	stw	r22,120(sp)
    9d6c:	dd001c15 	stw	r20,112(sp)
    9d70:	dcc01b15 	stw	r19,108(sp)
    9d74:	dc801a15 	stw	r18,104(sp)
    9d78:	dc001815 	stw	r16,96(sp)
    9d7c:	2823883a 	mov	r17,r5
    9d80:	202b883a 	mov	r21,r4
    9d84:	d9801515 	stw	r6,84(sp)
    9d88:	d8000915 	stw	zero,36(sp)
    9d8c:	d8000a15 	stw	zero,40(sp)
    9d90:	d9400415 	stw	r5,16(sp)
    9d94:	df000904 	addi	fp,sp,36
    9d98:	da000417 	ldw	r8,16(sp)
    9d9c:	00800b44 	movi	r2,45
    9da0:	40c00003 	ldbu	r3,0(r8)
    9da4:	10c03536 	bltu	r2,r3,9e7c <_strtod_r+0x12c>
    9da8:	18c5883a 	add	r2,r3,r3
    9dac:	1085883a 	add	r2,r2,r2
    9db0:	00c00074 	movhi	r3,1
    9db4:	18e77104 	addi	r3,r3,-25148
    9db8:	10c5883a 	add	r2,r2,r3
    9dbc:	11000017 	ldw	r4,0(r2)
    9dc0:	2000683a 	jmp	r4
    9dc4:	00009fb8 	rdprs	zero,zero,638
    9dc8:	00009e7c 	xorhi	zero,zero,633
    9dcc:	00009e7c 	xorhi	zero,zero,633
    9dd0:	00009e7c 	xorhi	zero,zero,633
    9dd4:	00009e7c 	xorhi	zero,zero,633
    9dd8:	00009e7c 	xorhi	zero,zero,633
    9ddc:	00009e7c 	xorhi	zero,zero,633
    9de0:	00009e7c 	xorhi	zero,zero,633
    9de4:	00009e7c 	xorhi	zero,zero,633
    9de8:	0000a2d0 	cmplti	zero,zero,651
    9dec:	0000a2d0 	cmplti	zero,zero,651
    9df0:	0000a2d0 	cmplti	zero,zero,651
    9df4:	0000a2d0 	cmplti	zero,zero,651
    9df8:	0000a2d0 	cmplti	zero,zero,651
    9dfc:	00009e7c 	xorhi	zero,zero,633
    9e00:	00009e7c 	xorhi	zero,zero,633
    9e04:	00009e7c 	xorhi	zero,zero,633
    9e08:	00009e7c 	xorhi	zero,zero,633
    9e0c:	00009e7c 	xorhi	zero,zero,633
    9e10:	00009e7c 	xorhi	zero,zero,633
    9e14:	00009e7c 	xorhi	zero,zero,633
    9e18:	00009e7c 	xorhi	zero,zero,633
    9e1c:	00009e7c 	xorhi	zero,zero,633
    9e20:	00009e7c 	xorhi	zero,zero,633
    9e24:	00009e7c 	xorhi	zero,zero,633
    9e28:	00009e7c 	xorhi	zero,zero,633
    9e2c:	00009e7c 	xorhi	zero,zero,633
    9e30:	00009e7c 	xorhi	zero,zero,633
    9e34:	00009e7c 	xorhi	zero,zero,633
    9e38:	00009e7c 	xorhi	zero,zero,633
    9e3c:	00009e7c 	xorhi	zero,zero,633
    9e40:	00009e7c 	xorhi	zero,zero,633
    9e44:	0000a2d0 	cmplti	zero,zero,651
    9e48:	00009e7c 	xorhi	zero,zero,633
    9e4c:	00009e7c 	xorhi	zero,zero,633
    9e50:	00009e7c 	xorhi	zero,zero,633
    9e54:	00009e7c 	xorhi	zero,zero,633
    9e58:	00009e7c 	xorhi	zero,zero,633
    9e5c:	00009e7c 	xorhi	zero,zero,633
    9e60:	00009e7c 	xorhi	zero,zero,633
    9e64:	00009e7c 	xorhi	zero,zero,633
    9e68:	00009e7c 	xorhi	zero,zero,633
    9e6c:	00009e7c 	xorhi	zero,zero,633
    9e70:	0000a2b0 	cmpltui	zero,zero,650
    9e74:	00009e7c 	xorhi	zero,zero,633
    9e78:	0000a2dc 	xori	zero,zero,651
    9e7c:	d8001115 	stw	zero,68(sp)
    9e80:	40c00007 	ldb	r3,0(r8)
    9e84:	00800c04 	movi	r2,48
    9e88:	1880d026 	beq	r3,r2,a1cc <_strtod_r+0x47c>
    9e8c:	001f883a 	mov	r15,zero
    9e90:	41000007 	ldb	r4,0(r8)
    9e94:	00c00bc4 	movi	r3,47
    9e98:	402d883a 	mov	r22,r8
    9e9c:	1903470e 	bge	r3,r4,abbc <_strtod_r+0xe6c>
    9ea0:	00800e44 	movi	r2,57
    9ea4:	11034516 	blt	r2,r4,abbc <_strtod_r+0xe6c>
    9ea8:	180f883a 	mov	r7,r3
    9eac:	1013883a 	mov	r9,r2
    9eb0:	4007883a 	mov	r3,r8
    9eb4:	000d883a 	mov	r6,zero
    9eb8:	0029883a 	mov	r20,zero
    9ebc:	0021883a 	mov	r16,zero
    9ec0:	01400204 	movi	r5,8
    9ec4:	028003c4 	movi	r10,15
    9ec8:	29803116 	blt	r5,r6,9f90 <_strtod_r+0x240>
    9ecc:	a08002a4 	muli	r2,r20,10
    9ed0:	1105883a 	add	r2,r2,r4
    9ed4:	153ff404 	addi	r20,r2,-48
    9ed8:	1a000044 	addi	r8,r3,1
    9edc:	da000415 	stw	r8,16(sp)
    9ee0:	41000007 	ldb	r4,0(r8)
    9ee4:	31800044 	addi	r6,r6,1
    9ee8:	4007883a 	mov	r3,r8
    9eec:	3900010e 	bge	r7,r4,9ef4 <_strtod_r+0x1a4>
    9ef0:	493ff50e 	bge	r9,r4,9ec8 <_strtod_r+0x178>
    9ef4:	00800b84 	movi	r2,46
    9ef8:	2080c126 	beq	r4,r2,a200 <_strtod_r+0x4b0>
    9efc:	3027883a 	mov	r19,r6
    9f00:	0025883a 	mov	r18,zero
    9f04:	0015883a 	mov	r10,zero
    9f08:	000f883a 	mov	r7,zero
    9f0c:	00801944 	movi	r2,101
    9f10:	20802426 	beq	r4,r2,9fa4 <_strtod_r+0x254>
    9f14:	00801144 	movi	r2,69
    9f18:	20802226 	beq	r4,r2,9fa4 <_strtod_r+0x254>
    9f1c:	9816c03a 	cmpne	r11,r19,zero
    9f20:	000b883a 	mov	r5,zero
    9f24:	5800631e 	bne	r11,zero,a0b4 <_strtod_r+0x364>
    9f28:	3800c126 	beq	r7,zero,a230 <_strtod_r+0x4e0>
    9f2c:	d8c01517 	ldw	r3,84(sp)
    9f30:	18000226 	beq	r3,zero,9f3c <_strtod_r+0x1ec>
    9f34:	d8800417 	ldw	r2,16(sp)
    9f38:	18800015 	stw	r2,0(r3)
    9f3c:	d9001117 	ldw	r4,68(sp)
    9f40:	2005003a 	cmpeq	r2,r4,zero
    9f44:	10001f1e 	bne	r2,zero,9fc4 <_strtod_r+0x274>
    9f48:	e0800017 	ldw	r2,0(fp)
    9f4c:	e0c00117 	ldw	r3,4(fp)
    9f50:	1009883a 	mov	r4,r2
    9f54:	1960003c 	xorhi	r5,r3,32768
    9f58:	2005883a 	mov	r2,r4
    9f5c:	2807883a 	mov	r3,r5
    9f60:	dfc02117 	ldw	ra,132(sp)
    9f64:	df002017 	ldw	fp,128(sp)
    9f68:	ddc01f17 	ldw	r23,124(sp)
    9f6c:	dd801e17 	ldw	r22,120(sp)
    9f70:	dd401d17 	ldw	r21,116(sp)
    9f74:	dd001c17 	ldw	r20,112(sp)
    9f78:	dcc01b17 	ldw	r19,108(sp)
    9f7c:	dc801a17 	ldw	r18,104(sp)
    9f80:	dc401917 	ldw	r17,100(sp)
    9f84:	dc001817 	ldw	r16,96(sp)
    9f88:	dec02204 	addi	sp,sp,136
    9f8c:	f800283a 	ret
    9f90:	51bfd116 	blt	r10,r6,9ed8 <_strtod_r+0x188>
    9f94:	808002a4 	muli	r2,r16,10
    9f98:	1105883a 	add	r2,r2,r4
    9f9c:	143ff404 	addi	r16,r2,-48
    9fa0:	003fcd06 	br	9ed8 <_strtod_r+0x188>
    9fa4:	9816c03a 	cmpne	r11,r19,zero
    9fa8:	5800091e 	bne	r11,zero,9fd0 <_strtod_r+0x280>
    9fac:	3800081e 	bne	r7,zero,9fd0 <_strtod_r+0x280>
    9fb0:	7805003a 	cmpeq	r2,r15,zero
    9fb4:	10000626 	beq	r2,zero,9fd0 <_strtod_r+0x280>
    9fb8:	d8001115 	stw	zero,68(sp)
    9fbc:	dc400415 	stw	r17,16(sp)
    9fc0:	003fda06 	br	9f2c <_strtod_r+0x1dc>
    9fc4:	e1000017 	ldw	r4,0(fp)
    9fc8:	e1400117 	ldw	r5,4(fp)
    9fcc:	003fe206 	br	9f58 <_strtod_r+0x208>
    9fd0:	dc400417 	ldw	r17,16(sp)
    9fd4:	00800ac4 	movi	r2,43
    9fd8:	8a000044 	addi	r8,r17,1
    9fdc:	da000415 	stw	r8,16(sp)
    9fe0:	88c00047 	ldb	r3,1(r17)
    9fe4:	4009883a 	mov	r4,r8
    9fe8:	1880bf26 	beq	r3,r2,a2e8 <_strtod_r+0x598>
    9fec:	00800b44 	movi	r2,45
    9ff0:	18834526 	beq	r3,r2,ad08 <_strtod_r+0xfb8>
    9ff4:	1809883a 	mov	r4,r3
    9ff8:	20fff404 	addi	r3,r4,-48
    9ffc:	00800244 	movi	r2,9
    a000:	001d883a 	mov	r14,zero
    a004:	10c0bf36 	bltu	r2,r3,a304 <_strtod_r+0x5b4>
    a008:	00800c04 	movi	r2,48
    a00c:	2080061e 	bne	r4,r2,a028 <_strtod_r+0x2d8>
    a010:	da000417 	ldw	r8,16(sp)
    a014:	2005883a 	mov	r2,r4
    a018:	42000044 	addi	r8,r8,1
    a01c:	da000415 	stw	r8,16(sp)
    a020:	41000007 	ldb	r4,0(r8)
    a024:	20bffc26 	beq	r4,r2,a018 <_strtod_r+0x2c8>
    a028:	20fff3c4 	addi	r3,r4,-49
    a02c:	00800204 	movi	r2,8
    a030:	10ffbb36 	bltu	r2,r3,9f20 <_strtod_r+0x1d0>
    a034:	da000417 	ldw	r8,16(sp)
    a038:	227ff404 	addi	r9,r4,-48
    a03c:	03000bc4 	movi	r12,47
    a040:	4007883a 	mov	r3,r8
    a044:	42000044 	addi	r8,r8,1
    a048:	da000415 	stw	r8,16(sp)
    a04c:	41000007 	ldb	r4,0(r8)
    a050:	61000d0e 	bge	r12,r4,a088 <_strtod_r+0x338>
    a054:	00800e44 	movi	r2,57
    a058:	11000b16 	blt	r2,r4,a088 <_strtod_r+0x338>
    a05c:	601b883a 	mov	r13,r12
    a060:	1019883a 	mov	r12,r2
    a064:	00000106 	br	a06c <_strtod_r+0x31c>
    a068:	61000716 	blt	r12,r4,a088 <_strtod_r+0x338>
    a06c:	488002a4 	muli	r2,r9,10
    a070:	42000044 	addi	r8,r8,1
    a074:	da000415 	stw	r8,16(sp)
    a078:	2085883a 	add	r2,r4,r2
    a07c:	41000007 	ldb	r4,0(r8)
    a080:	127ff404 	addi	r9,r2,-48
    a084:	693ff816 	blt	r13,r4,a068 <_strtod_r+0x318>
    a088:	40c7c83a 	sub	r3,r8,r3
    a08c:	00800204 	movi	r2,8
    a090:	10c2e416 	blt	r2,r3,ac24 <_strtod_r+0xed4>
    a094:	009387c4 	movi	r2,19999
    a098:	480b883a 	mov	r5,r9
    a09c:	1240010e 	bge	r2,r9,a0a4 <_strtod_r+0x354>
    a0a0:	100b883a 	mov	r5,r2
    a0a4:	7005003a 	cmpeq	r2,r14,zero
    a0a8:	103f9e1e 	bne	r2,zero,9f24 <_strtod_r+0x1d4>
    a0ac:	014bc83a 	sub	r5,zero,r5
    a0b0:	583f9d26 	beq	r11,zero,9f28 <_strtod_r+0x1d8>
    a0b4:	2a8bc83a 	sub	r5,r5,r10
    a0b8:	d9400f15 	stw	r5,60(sp)
    a0bc:	30007a1e 	bne	r6,zero,a2a8 <_strtod_r+0x558>
    a0c0:	dcc01215 	stw	r19,72(sp)
    a0c4:	00800404 	movi	r2,16
    a0c8:	9825883a 	mov	r18,r19
    a0cc:	14c0010e 	bge	r2,r19,a0d4 <_strtod_r+0x384>
    a0d0:	1025883a 	mov	r18,r2
    a0d4:	a009883a 	mov	r4,r20
    a0d8:	000ecb00 	call	ecb0 <__floatunsidf>
    a0dc:	100f883a 	mov	r7,r2
    a0e0:	e0800015 	stw	r2,0(fp)
    a0e4:	00800244 	movi	r2,9
    a0e8:	e0c00115 	stw	r3,4(fp)
    a0ec:	1480160e 	bge	r2,r18,a148 <_strtod_r+0x3f8>
    a0f0:	900c90fa 	slli	r6,r18,3
    a0f4:	01000074 	movhi	r4,1
    a0f8:	210a1104 	addi	r4,r4,10308
    a0fc:	180b883a 	mov	r5,r3
    a100:	310d883a 	add	r6,r6,r4
    a104:	30ffef17 	ldw	r3,-68(r6)
    a108:	30bfee17 	ldw	r2,-72(r6)
    a10c:	3809883a 	mov	r4,r7
    a110:	180f883a 	mov	r7,r3
    a114:	100d883a 	mov	r6,r2
    a118:	000e1200 	call	e120 <__muldf3>
    a11c:	8009883a 	mov	r4,r16
    a120:	1823883a 	mov	r17,r3
    a124:	1021883a 	mov	r16,r2
    a128:	000ecb00 	call	ecb0 <__floatunsidf>
    a12c:	880b883a 	mov	r5,r17
    a130:	180f883a 	mov	r7,r3
    a134:	8009883a 	mov	r4,r16
    a138:	100d883a 	mov	r6,r2
    a13c:	000e0ac0 	call	e0ac <__adddf3>
    a140:	e0c00115 	stw	r3,4(fp)
    a144:	e0800015 	stw	r2,0(fp)
    a148:	010003c4 	movi	r4,15
    a14c:	24c09816 	blt	r4,r19,a3b0 <_strtod_r+0x660>
    a150:	d9800f17 	ldw	r6,60(sp)
    a154:	303f7526 	beq	r6,zero,9f2c <_strtod_r+0x1dc>
    a158:	0183be0e 	bge	zero,r6,b054 <_strtod_r+0x1304>
    a15c:	00800584 	movi	r2,22
    a160:	1182b20e 	bge	r2,r6,ac2c <_strtod_r+0xedc>
    a164:	d8c00f17 	ldw	r3,60(sp)
    a168:	24e3c83a 	sub	r17,r4,r19
    a16c:	88800584 	addi	r2,r17,22
    a170:	10c08f16 	blt	r2,r3,a3b0 <_strtod_r+0x660>
    a174:	880890fa 	slli	r4,r17,3
    a178:	04000074 	movhi	r16,1
    a17c:	840a1104 	addi	r16,r16,10308
    a180:	e0800017 	ldw	r2,0(fp)
    a184:	2409883a 	add	r4,r4,r16
    a188:	22000017 	ldw	r8,0(r4)
    a18c:	22400117 	ldw	r9,4(r4)
    a190:	e0c00117 	ldw	r3,4(fp)
    a194:	1009883a 	mov	r4,r2
    a198:	480f883a 	mov	r7,r9
    a19c:	180b883a 	mov	r5,r3
    a1a0:	400d883a 	mov	r6,r8
    a1a4:	000e1200 	call	e120 <__muldf3>
    a1a8:	d9000f17 	ldw	r4,60(sp)
    a1ac:	180b883a 	mov	r5,r3
    a1b0:	2455c83a 	sub	r10,r4,r17
    a1b4:	501490fa 	slli	r10,r10,3
    a1b8:	1009883a 	mov	r4,r2
    a1bc:	5415883a 	add	r10,r10,r16
    a1c0:	52000017 	ldw	r8,0(r10)
    a1c4:	52400117 	ldw	r9,4(r10)
    a1c8:	0002a206 	br	ac54 <_strtod_r+0xf04>
    a1cc:	40c00047 	ldb	r3,1(r8)
    a1d0:	00801604 	movi	r2,88
    a1d4:	18804e26 	beq	r3,r2,a310 <_strtod_r+0x5c0>
    a1d8:	00801e04 	movi	r2,120
    a1dc:	18804c26 	beq	r3,r2,a310 <_strtod_r+0x5c0>
    a1e0:	42000044 	addi	r8,r8,1
    a1e4:	da000415 	stw	r8,16(sp)
    a1e8:	40c00007 	ldb	r3,0(r8)
    a1ec:	00800c04 	movi	r2,48
    a1f0:	18bffb26 	beq	r3,r2,a1e0 <_strtod_r+0x490>
    a1f4:	183f4d26 	beq	r3,zero,9f2c <_strtod_r+0x1dc>
    a1f8:	03c00044 	movi	r15,1
    a1fc:	003f2406 	br	9e90 <_strtod_r+0x140>
    a200:	42000044 	addi	r8,r8,1
    a204:	da000415 	stw	r8,16(sp)
    a208:	19000047 	ldb	r4,1(r3)
    a20c:	3000b726 	beq	r6,zero,a4ec <_strtod_r+0x79c>
    a210:	3027883a 	mov	r19,r6
    a214:	0015883a 	mov	r10,zero
    a218:	000f883a 	mov	r7,zero
    a21c:	227ff404 	addi	r9,r4,-48
    a220:	00800244 	movi	r2,9
    a224:	1242592e 	bgeu	r2,r9,ab8c <_strtod_r+0xe3c>
    a228:	04800044 	movi	r18,1
    a22c:	003f3706 	br	9f0c <_strtod_r+0x1bc>
    a230:	7804c03a 	cmpne	r2,r15,zero
    a234:	103f3d1e 	bne	r2,zero,9f2c <_strtod_r+0x1dc>
    a238:	9004c03a 	cmpne	r2,r18,zero
    a23c:	103f5e1e 	bne	r2,zero,9fb8 <_strtod_r+0x268>
    a240:	00801384 	movi	r2,78
    a244:	2083a226 	beq	r4,r2,b0d0 <_strtod_r+0x1380>
    a248:	11039d16 	blt	r2,r4,b0c0 <_strtod_r+0x1370>
    a24c:	00801244 	movi	r2,73
    a250:	20bf591e 	bne	r4,r2,9fb8 <_strtod_r+0x268>
    a254:	dc000404 	addi	r16,sp,16
    a258:	8009883a 	mov	r4,r16
    a25c:	01400074 	movhi	r5,1
    a260:	294a5a04 	addi	r5,r5,10600
    a264:	0009d080 	call	9d08 <match>
    a268:	103f5326 	beq	r2,zero,9fb8 <_strtod_r+0x268>
    a26c:	d8800417 	ldw	r2,16(sp)
    a270:	8009883a 	mov	r4,r16
    a274:	01400074 	movhi	r5,1
    a278:	294a5b04 	addi	r5,r5,10604
    a27c:	123fffc4 	addi	r8,r2,-1
    a280:	da000415 	stw	r8,16(sp)
    a284:	0009d080 	call	9d08 <match>
    a288:	1000031e 	bne	r2,zero,a298 <_strtod_r+0x548>
    a28c:	d8800417 	ldw	r2,16(sp)
    a290:	12000044 	addi	r8,r2,1
    a294:	da000415 	stw	r8,16(sp)
    a298:	019ffc34 	movhi	r6,32752
    a29c:	e1800115 	stw	r6,4(fp)
    a2a0:	e0000015 	stw	zero,0(fp)
    a2a4:	003f2106 	br	9f2c <_strtod_r+0x1dc>
    a2a8:	d9801215 	stw	r6,72(sp)
    a2ac:	003f8506 	br	a0c4 <_strtod_r+0x374>
    a2b0:	d8001115 	stw	zero,68(sp)
    a2b4:	42000044 	addi	r8,r8,1
    a2b8:	da000415 	stw	r8,16(sp)
    a2bc:	40800007 	ldb	r2,0(r8)
    a2c0:	103eef1e 	bne	r2,zero,9e80 <_strtod_r+0x130>
    a2c4:	d8001115 	stw	zero,68(sp)
    a2c8:	dc400415 	stw	r17,16(sp)
    a2cc:	003f1706 	br	9f2c <_strtod_r+0x1dc>
    a2d0:	42000044 	addi	r8,r8,1
    a2d4:	da000415 	stw	r8,16(sp)
    a2d8:	003eaf06 	br	9d98 <_strtod_r+0x48>
    a2dc:	00800044 	movi	r2,1
    a2e0:	d8801115 	stw	r2,68(sp)
    a2e4:	003ff306 	br	a2b4 <_strtod_r+0x564>
    a2e8:	001d883a 	mov	r14,zero
    a2ec:	42000044 	addi	r8,r8,1
    a2f0:	da000415 	stw	r8,16(sp)
    a2f4:	21000047 	ldb	r4,1(r4)
    a2f8:	00800244 	movi	r2,9
    a2fc:	20fff404 	addi	r3,r4,-48
    a300:	10ff412e 	bgeu	r2,r3,a008 <_strtod_r+0x2b8>
    a304:	000b883a 	mov	r5,zero
    a308:	dc400415 	stw	r17,16(sp)
    a30c:	003f0506 	br	9f24 <_strtod_r+0x1d4>
    a310:	d8c01117 	ldw	r3,68(sp)
    a314:	04800074 	movhi	r18,1
    a318:	948ccb04 	addi	r18,r18,13100
    a31c:	d8800504 	addi	r2,sp,20
    a320:	a809883a 	mov	r4,r21
    a324:	d9400404 	addi	r5,sp,16
    a328:	900d883a 	mov	r6,r18
    a32c:	d9c00604 	addi	r7,sp,24
    a330:	d8800015 	stw	r2,0(sp)
    a334:	d8c00115 	stw	r3,4(sp)
    a338:	000c3300 	call	c330 <__gethex>
    a33c:	140001cc 	andi	r16,r2,7
    a340:	1027883a 	mov	r19,r2
    a344:	803ef926 	beq	r16,zero,9f2c <_strtod_r+0x1dc>
    a348:	05000184 	movi	r20,6
    a34c:	853f1a26 	beq	r16,r20,9fb8 <_strtod_r+0x268>
    a350:	d9800517 	ldw	r6,20(sp)
    a354:	30000626 	beq	r6,zero,a370 <_strtod_r+0x620>
    a358:	91400017 	ldw	r5,0(r18)
    a35c:	d9000d04 	addi	r4,sp,52
    a360:	0008a100 	call	8a10 <__copybits>
    a364:	d9400517 	ldw	r5,20(sp)
    a368:	a809883a 	mov	r4,r21
    a36c:	00085700 	call	8570 <_Bfree>
    a370:	d9400617 	ldw	r5,24(sp)
    a374:	a4024136 	bltu	r20,r16,ac7c <_strtod_r+0xf2c>
    a378:	8405883a 	add	r2,r16,r16
    a37c:	1085883a 	add	r2,r2,r2
    a380:	00c00074 	movhi	r3,1
    a384:	18e8e504 	addi	r3,r3,-23660
    a388:	10c5883a 	add	r2,r2,r3
    a38c:	11000017 	ldw	r4,0(r2)
    a390:	2000683a 	jmp	r4
    a394:	0000acbc 	xorhi	zero,zero,690
    a398:	0000acc8 	cmpgei	zero,zero,691
    a39c:	0000ac6c 	andhi	zero,zero,689
    a3a0:	0000ac94 	movui	zero,690
    a3a4:	0000aca4 	muli	zero,zero,690
    a3a8:	0000acc8 	cmpgei	zero,zero,691
    a3ac:	0000acbc 	xorhi	zero,zero,690
    a3b0:	d8c00f17 	ldw	r3,60(sp)
    a3b4:	9c85c83a 	sub	r2,r19,r18
    a3b8:	18a1883a 	add	r16,r3,r2
    a3bc:	0402d00e 	bge	zero,r16,af00 <_strtod_r+0x11b0>
    a3c0:	814003cc 	andi	r5,r16,15
    a3c4:	28000f26 	beq	r5,zero,a404 <_strtod_r+0x6b4>
    a3c8:	280a90fa 	slli	r5,r5,3
    a3cc:	01000074 	movhi	r4,1
    a3d0:	210a1104 	addi	r4,r4,10308
    a3d4:	e0800017 	ldw	r2,0(fp)
    a3d8:	290b883a 	add	r5,r5,r4
    a3dc:	2a000017 	ldw	r8,0(r5)
    a3e0:	e0c00117 	ldw	r3,4(fp)
    a3e4:	2a400117 	ldw	r9,4(r5)
    a3e8:	1009883a 	mov	r4,r2
    a3ec:	180b883a 	mov	r5,r3
    a3f0:	480f883a 	mov	r7,r9
    a3f4:	400d883a 	mov	r6,r8
    a3f8:	000e1200 	call	e120 <__muldf3>
    a3fc:	e0c00115 	stw	r3,4(fp)
    a400:	e0800015 	stw	r2,0(fp)
    a404:	00bffc04 	movi	r2,-16
    a408:	808c703a 	and	r6,r16,r2
    a40c:	30005b26 	beq	r6,zero,a57c <_strtod_r+0x82c>
    a410:	00804d04 	movi	r2,308
    a414:	1181fd16 	blt	r2,r6,ac0c <_strtod_r+0xebc>
    a418:	3021d13a 	srai	r16,r6,4
    a41c:	00800044 	movi	r2,1
    a420:	1403610e 	bge	r2,r16,b1a8 <_strtod_r+0x1458>
    a424:	102f883a 	mov	r23,r2
    a428:	0025883a 	mov	r18,zero
    a42c:	04400074 	movhi	r17,1
    a430:	8c4a4304 	addi	r17,r17,10508
    a434:	8080004c 	andi	r2,r16,1
    a438:	1005003a 	cmpeq	r2,r2,zero
    a43c:	1000091e 	bne	r2,zero,a464 <_strtod_r+0x714>
    a440:	e0800017 	ldw	r2,0(fp)
    a444:	e0c00117 	ldw	r3,4(fp)
    a448:	89800017 	ldw	r6,0(r17)
    a44c:	89c00117 	ldw	r7,4(r17)
    a450:	180b883a 	mov	r5,r3
    a454:	1009883a 	mov	r4,r2
    a458:	000e1200 	call	e120 <__muldf3>
    a45c:	e0c00115 	stw	r3,4(fp)
    a460:	e0800015 	stw	r2,0(fp)
    a464:	8021d07a 	srai	r16,r16,1
    a468:	94800044 	addi	r18,r18,1
    a46c:	8c400204 	addi	r17,r17,8
    a470:	bc3ff016 	blt	r23,r16,a434 <_strtod_r+0x6e4>
    a474:	900e90fa 	slli	r7,r18,3
    a478:	01800074 	movhi	r6,1
    a47c:	318a4304 	addi	r6,r6,10508
    a480:	e2000117 	ldw	r8,4(fp)
    a484:	398f883a 	add	r7,r7,r6
    a488:	38800017 	ldw	r2,0(r7)
    a48c:	38c00117 	ldw	r3,4(r7)
    a490:	e1000017 	ldw	r4,0(fp)
    a494:	01bf2c34 	movhi	r6,64688
    a498:	418d883a 	add	r6,r8,r6
    a49c:	300b883a 	mov	r5,r6
    a4a0:	180f883a 	mov	r7,r3
    a4a4:	100d883a 	mov	r6,r2
    a4a8:	000e1200 	call	e120 <__muldf3>
    a4ac:	1009883a 	mov	r4,r2
    a4b0:	180b883a 	mov	r5,r3
    a4b4:	199ffc2c 	andhi	r6,r3,32752
    a4b8:	009f2834 	movhi	r2,31904
    a4bc:	e1000015 	stw	r4,0(fp)
    a4c0:	e1400115 	stw	r5,4(fp)
    a4c4:	1181d136 	bltu	r2,r6,ac0c <_strtod_r+0xebc>
    a4c8:	009f2434 	movhi	r2,31888
    a4cc:	1183202e 	bgeu	r2,r6,b150 <_strtod_r+0x1400>
    a4d0:	d8001415 	stw	zero,80(sp)
    a4d4:	019ffc34 	movhi	r6,32752
    a4d8:	31bfffc4 	addi	r6,r6,-1
    a4dc:	01ffffc4 	movi	r7,-1
    a4e0:	e1800115 	stw	r6,4(fp)
    a4e4:	e1c00015 	stw	r7,0(fp)
    a4e8:	00002506 	br	a580 <_strtod_r+0x830>
    a4ec:	00800c04 	movi	r2,48
    a4f0:	2083151e 	bne	r4,r2,b148 <_strtod_r+0x13f8>
    a4f4:	2005883a 	mov	r2,r4
    a4f8:	000f883a 	mov	r7,zero
    a4fc:	42000044 	addi	r8,r8,1
    a500:	da000415 	stw	r8,16(sp)
    a504:	41000007 	ldb	r4,0(r8)
    a508:	39c00044 	addi	r7,r7,1
    a50c:	20bffb26 	beq	r4,r2,a4fc <_strtod_r+0x7ac>
    a510:	20fff3c4 	addi	r3,r4,-49
    a514:	00800204 	movi	r2,8
    a518:	10c1b836 	bltu	r2,r3,abfc <_strtod_r+0xeac>
    a51c:	dd800417 	ldw	r22,16(sp)
    a520:	3815883a 	mov	r10,r7
    a524:	227ff404 	addi	r9,r4,-48
    a528:	b011883a 	mov	r8,r22
    a52c:	0027883a 	mov	r19,zero
    a530:	01c00044 	movi	r7,1
    a534:	4801fe26 	beq	r9,zero,ad30 <_strtod_r+0xfe0>
    a538:	00800044 	movi	r2,1
    a53c:	51d5883a 	add	r10,r10,r7
    a540:	11c31f0e 	bge	r2,r7,b1c0 <_strtod_r+0x1470>
    a544:	1009883a 	mov	r4,r2
    a548:	9807883a 	mov	r3,r19
    a54c:	02c00204 	movi	r11,8
    a550:	03000404 	movi	r12,16
    a554:	00000306 	br	a564 <_strtod_r+0x814>
    a558:	a50002a4 	muli	r20,r20,10
    a55c:	21000044 	addi	r4,r4,1
    a560:	21c1eb26 	beq	r4,r7,ad10 <_strtod_r+0xfc0>
    a564:	18c00044 	addi	r3,r3,1
    a568:	18bfffc4 	addi	r2,r3,-1
    a56c:	58bffa0e 	bge	r11,r2,a558 <_strtod_r+0x808>
    a570:	60fffa16 	blt	r12,r3,a55c <_strtod_r+0x80c>
    a574:	840002a4 	muli	r16,r16,10
    a578:	003ff806 	br	a55c <_strtod_r+0x80c>
    a57c:	d8001415 	stw	zero,80(sp)
    a580:	d9801217 	ldw	r6,72(sp)
    a584:	a809883a 	mov	r4,r21
    a588:	b00b883a 	mov	r5,r22
    a58c:	980f883a 	mov	r7,r19
    a590:	dd000015 	stw	r20,0(sp)
    a594:	00094440 	call	9444 <__s2b>
    a598:	d9800f17 	ldw	r6,60(sp)
    a59c:	11000304 	addi	r4,r2,12
    a5a0:	d8801015 	stw	r2,64(sp)
    a5a4:	300c803a 	cmplt	r6,r6,zero
    a5a8:	d9001715 	stw	r4,92(sp)
    a5ac:	d9801615 	stw	r6,88(sp)
    a5b0:	d8801017 	ldw	r2,64(sp)
    a5b4:	a809883a 	mov	r4,r21
    a5b8:	11400117 	ldw	r5,4(r2)
    a5bc:	0008af00 	call	8af0 <_Balloc>
    a5c0:	d8c01017 	ldw	r3,64(sp)
    a5c4:	d9401717 	ldw	r5,92(sp)
    a5c8:	11000304 	addi	r4,r2,12
    a5cc:	19800417 	ldw	r6,16(r3)
    a5d0:	102f883a 	mov	r23,r2
    a5d4:	318d883a 	add	r6,r6,r6
    a5d8:	318d883a 	add	r6,r6,r6
    a5dc:	31800204 	addi	r6,r6,8
    a5e0:	00017300 	call	1730 <memcpy>
    a5e4:	e2000017 	ldw	r8,0(fp)
    a5e8:	e2400117 	ldw	r9,4(fp)
    a5ec:	d9800304 	addi	r6,sp,12
    a5f0:	400b883a 	mov	r5,r8
    a5f4:	a809883a 	mov	r4,r21
    a5f8:	d9c00204 	addi	r7,sp,8
    a5fc:	d9800015 	stw	r6,0(sp)
    a600:	480d883a 	mov	r6,r9
    a604:	0008bac0 	call	8bac <__d2b>
    a608:	a809883a 	mov	r4,r21
    a60c:	01400044 	movi	r5,1
    a610:	d8800515 	stw	r2,20(sp)
    a614:	00091e80 	call	91e8 <__i2b>
    a618:	102d883a 	mov	r22,r2
    a61c:	d8801617 	ldw	r2,88(sp)
    a620:	1001051e 	bne	r2,zero,aa38 <_strtod_r+0xce8>
    a624:	dd000f17 	ldw	r20,60(sp)
    a628:	000f883a 	mov	r7,zero
    a62c:	0013883a 	mov	r9,zero
    a630:	a011883a 	mov	r8,r20
    a634:	d8800217 	ldw	r2,8(sp)
    a638:	1000fd16 	blt	r2,zero,aa30 <_strtod_r+0xce0>
    a63c:	388f883a 	add	r7,r7,r2
    a640:	d9801417 	ldw	r6,80(sp)
    a644:	d9400317 	ldw	r5,12(sp)
    a648:	00ff0084 	movi	r3,-1022
    a64c:	1189c83a 	sub	r4,r2,r6
    a650:	2145883a 	add	r2,r4,r5
    a654:	10bfffc4 	addi	r2,r2,-1
    a658:	10c09f0e 	bge	r2,r3,a8d8 <_strtod_r+0xb88>
    a65c:	21810cc4 	addi	r6,r4,1075
    a660:	d8c01417 	ldw	r3,80(sp)
    a664:	4185883a 	add	r2,r8,r6
    a668:	39a1883a 	add	r16,r7,r6
    a66c:	18a5883a 	add	r18,r3,r2
    a670:	3807883a 	mov	r3,r7
    a674:	81c0010e 	bge	r16,r7,a67c <_strtod_r+0x92c>
    a678:	8007883a 	mov	r3,r16
    a67c:	9005883a 	mov	r2,r18
    a680:	1c80010e 	bge	r3,r18,a688 <_strtod_r+0x938>
    a684:	1805883a 	mov	r2,r3
    a688:	0080e70e 	bge	zero,r2,aa28 <_strtod_r+0xcd8>
    a68c:	38a7c83a 	sub	r19,r7,r2
    a690:	80a1c83a 	sub	r16,r16,r2
    a694:	90a5c83a 	sub	r18,r18,r2
    a698:	02400e0e 	bge	zero,r9,a6d4 <_strtod_r+0x984>
    a69c:	480d883a 	mov	r6,r9
    a6a0:	b00b883a 	mov	r5,r22
    a6a4:	a809883a 	mov	r4,r21
    a6a8:	00093240 	call	9324 <__pow5mult>
    a6ac:	d9800517 	ldw	r6,20(sp)
    a6b0:	a809883a 	mov	r4,r21
    a6b4:	100b883a 	mov	r5,r2
    a6b8:	102d883a 	mov	r22,r2
    a6bc:	00090000 	call	9000 <__multiply>
    a6c0:	d9400517 	ldw	r5,20(sp)
    a6c4:	1023883a 	mov	r17,r2
    a6c8:	a809883a 	mov	r4,r21
    a6cc:	00085700 	call	8570 <_Bfree>
    a6d0:	dc400515 	stw	r17,20(sp)
    a6d4:	0400050e 	bge	zero,r16,a6ec <_strtod_r+0x99c>
    a6d8:	d9400517 	ldw	r5,20(sp)
    a6dc:	800d883a 	mov	r6,r16
    a6e0:	a809883a 	mov	r4,r21
    a6e4:	0008eb40 	call	8eb4 <__lshift>
    a6e8:	d8800515 	stw	r2,20(sp)
    a6ec:	a000741e 	bne	r20,zero,a8c0 <_strtod_r+0xb70>
    a6f0:	0480050e 	bge	zero,r18,a708 <_strtod_r+0x9b8>
    a6f4:	b80b883a 	mov	r5,r23
    a6f8:	900d883a 	mov	r6,r18
    a6fc:	a809883a 	mov	r4,r21
    a700:	0008eb40 	call	8eb4 <__lshift>
    a704:	102f883a 	mov	r23,r2
    a708:	04c0050e 	bge	zero,r19,a720 <_strtod_r+0x9d0>
    a70c:	b00b883a 	mov	r5,r22
    a710:	980d883a 	mov	r6,r19
    a714:	a809883a 	mov	r4,r21
    a718:	0008eb40 	call	8eb4 <__lshift>
    a71c:	102d883a 	mov	r22,r2
    a720:	d9400517 	ldw	r5,20(sp)
    a724:	a809883a 	mov	r4,r21
    a728:	b80d883a 	mov	r6,r23
    a72c:	0008d280 	call	8d28 <__mdiff>
    a730:	11000317 	ldw	r4,12(r2)
    a734:	b00b883a 	mov	r5,r22
    a738:	10000315 	stw	zero,12(r2)
    a73c:	d9001315 	stw	r4,76(sp)
    a740:	1009883a 	mov	r4,r2
    a744:	1029883a 	mov	r20,r2
    a748:	00086cc0 	call	86cc <__mcmp>
    a74c:	10017c16 	blt	r2,zero,ad40 <_strtod_r+0xff0>
    a750:	1001af26 	beq	r2,zero,ae10 <_strtod_r+0x10c0>
    a754:	a009883a 	mov	r4,r20
    a758:	b00b883a 	mov	r5,r22
    a75c:	00088cc0 	call	88cc <__ratio>
    a760:	0011883a 	mov	r8,zero
    a764:	02500034 	movhi	r9,16384
    a768:	480f883a 	mov	r7,r9
    a76c:	1009883a 	mov	r4,r2
    a770:	180b883a 	mov	r5,r3
    a774:	400d883a 	mov	r6,r8
    a778:	1021883a 	mov	r16,r2
    a77c:	1823883a 	mov	r17,r3
    a780:	000e9e40 	call	e9e4 <__ledf2>
    a784:	00805716 	blt	zero,r2,a8e4 <_strtod_r+0xb94>
    a788:	d9801317 	ldw	r6,76(sp)
    a78c:	3025003a 	cmpeq	r18,r6,zero
    a790:	90008b1e 	bne	r18,zero,a9c0 <_strtod_r+0xc70>
    a794:	008ffc34 	movhi	r2,16368
    a798:	0021883a 	mov	r16,zero
    a79c:	1023883a 	mov	r17,r2
    a7a0:	d8000715 	stw	zero,28(sp)
    a7a4:	d8800815 	stw	r2,32(sp)
    a7a8:	e1c00117 	ldw	r7,4(fp)
    a7ac:	009ff834 	movhi	r2,32736
    a7b0:	3cdffc2c 	andhi	r19,r7,32752
    a7b4:	98805e26 	beq	r19,r2,a930 <_strtod_r+0xbe0>
    a7b8:	d8801417 	ldw	r2,80(sp)
    a7bc:	10001b26 	beq	r2,zero,a82c <_strtod_r+0xadc>
    a7c0:	0081a834 	movhi	r2,1696
    a7c4:	14c01936 	bltu	r2,r19,a82c <_strtod_r+0xadc>
    a7c8:	00bff034 	movhi	r2,65472
    a7cc:	00d07834 	movhi	r3,16864
    a7d0:	18ffffc4 	addi	r3,r3,-1
    a7d4:	180f883a 	mov	r7,r3
    a7d8:	8009883a 	mov	r4,r16
    a7dc:	880b883a 	mov	r5,r17
    a7e0:	100d883a 	mov	r6,r2
    a7e4:	000e9e40 	call	e9e4 <__ledf2>
    a7e8:	00800b16 	blt	zero,r2,a818 <_strtod_r+0xac8>
    a7ec:	880b883a 	mov	r5,r17
    a7f0:	8009883a 	mov	r4,r16
    a7f4:	000ce840 	call	ce84 <__fixunsdfsi>
    a7f8:	1000df1e 	bne	r2,zero,ab78 <_strtod_r+0xe28>
    a7fc:	0021883a 	mov	r16,zero
    a800:	044ffc34 	movhi	r17,16368
    a804:	9000d91e 	bne	r18,zero,ab6c <_strtod_r+0xe1c>
    a808:	8005883a 	mov	r2,r16
    a80c:	8807883a 	mov	r3,r17
    a810:	d8c00815 	stw	r3,32(sp)
    a814:	d8800715 	stw	r2,28(sp)
    a818:	d8800817 	ldw	r2,32(sp)
    a81c:	00c1ac34 	movhi	r3,1712
    a820:	14c5c83a 	sub	r2,r2,r19
    a824:	10c5883a 	add	r2,r2,r3
    a828:	d8800815 	stw	r2,32(sp)
    a82c:	e0800017 	ldw	r2,0(fp)
    a830:	e0c00117 	ldw	r3,4(fp)
    a834:	1009883a 	mov	r4,r2
    a838:	180b883a 	mov	r5,r3
    a83c:	000872c0 	call	872c <__ulp>
    a840:	d9800717 	ldw	r6,28(sp)
    a844:	d9c00817 	ldw	r7,32(sp)
    a848:	180b883a 	mov	r5,r3
    a84c:	1009883a 	mov	r4,r2
    a850:	000e1200 	call	e120 <__muldf3>
    a854:	e2000017 	ldw	r8,0(fp)
    a858:	e2400117 	ldw	r9,4(fp)
    a85c:	180b883a 	mov	r5,r3
    a860:	1009883a 	mov	r4,r2
    a864:	480f883a 	mov	r7,r9
    a868:	400d883a 	mov	r6,r8
    a86c:	000e0ac0 	call	e0ac <__adddf3>
    a870:	e0c00115 	stw	r3,4(fp)
    a874:	e0800015 	stw	r2,0(fp)
    a878:	d8c01417 	ldw	r3,80(sp)
    a87c:	e4800117 	ldw	r18,4(fp)
    a880:	1800021e 	bne	r3,zero,a88c <_strtod_r+0xb3c>
    a884:	909ffc2c 	andhi	r2,r18,32752
    a888:	98807b26 	beq	r19,r2,aa78 <_strtod_r+0xd28>
    a88c:	d9400517 	ldw	r5,20(sp)
    a890:	a809883a 	mov	r4,r21
    a894:	00085700 	call	8570 <_Bfree>
    a898:	a809883a 	mov	r4,r21
    a89c:	b80b883a 	mov	r5,r23
    a8a0:	00085700 	call	8570 <_Bfree>
    a8a4:	a809883a 	mov	r4,r21
    a8a8:	b00b883a 	mov	r5,r22
    a8ac:	00085700 	call	8570 <_Bfree>
    a8b0:	a809883a 	mov	r4,r21
    a8b4:	a00b883a 	mov	r5,r20
    a8b8:	00085700 	call	8570 <_Bfree>
    a8bc:	003f3c06 	br	a5b0 <_strtod_r+0x860>
    a8c0:	b80b883a 	mov	r5,r23
    a8c4:	a00d883a 	mov	r6,r20
    a8c8:	a809883a 	mov	r4,r21
    a8cc:	00093240 	call	9324 <__pow5mult>
    a8d0:	102f883a 	mov	r23,r2
    a8d4:	003f8606 	br	a6f0 <_strtod_r+0x9a0>
    a8d8:	00800d84 	movi	r2,54
    a8dc:	114dc83a 	sub	r6,r2,r5
    a8e0:	003f5f06 	br	a660 <_strtod_r+0x910>
    a8e4:	0005883a 	mov	r2,zero
    a8e8:	00cff834 	movhi	r3,16352
    a8ec:	880b883a 	mov	r5,r17
    a8f0:	8009883a 	mov	r4,r16
    a8f4:	100d883a 	mov	r6,r2
    a8f8:	180f883a 	mov	r7,r3
    a8fc:	000e1200 	call	e120 <__muldf3>
    a900:	d9801317 	ldw	r6,76(sp)
    a904:	1021883a 	mov	r16,r2
    a908:	1823883a 	mov	r17,r3
    a90c:	3025003a 	cmpeq	r18,r6,zero
    a910:	90000126 	beq	r18,zero,a918 <_strtod_r+0xbc8>
    a914:	18e0003c 	xorhi	r3,r3,32768
    a918:	d8800715 	stw	r2,28(sp)
    a91c:	d8c00815 	stw	r3,32(sp)
    a920:	e1c00117 	ldw	r7,4(fp)
    a924:	009ff834 	movhi	r2,32736
    a928:	3cdffc2c 	andhi	r19,r7,32752
    a92c:	98bfa21e 	bne	r19,r2,a7b8 <_strtod_r+0xa68>
    a930:	e1000017 	ldw	r4,0(fp)
    a934:	01bf2c34 	movhi	r6,64688
    a938:	398d883a 	add	r6,r7,r6
    a93c:	d9000b15 	stw	r4,44(sp)
    a940:	d9c00c15 	stw	r7,48(sp)
    a944:	300b883a 	mov	r5,r6
    a948:	e1800115 	stw	r6,4(fp)
    a94c:	000872c0 	call	872c <__ulp>
    a950:	d9800717 	ldw	r6,28(sp)
    a954:	d9c00817 	ldw	r7,32(sp)
    a958:	180b883a 	mov	r5,r3
    a95c:	1009883a 	mov	r4,r2
    a960:	000e1200 	call	e120 <__muldf3>
    a964:	e2000017 	ldw	r8,0(fp)
    a968:	e2400117 	ldw	r9,4(fp)
    a96c:	180b883a 	mov	r5,r3
    a970:	1009883a 	mov	r4,r2
    a974:	480f883a 	mov	r7,r9
    a978:	400d883a 	mov	r6,r8
    a97c:	000e0ac0 	call	e0ac <__adddf3>
    a980:	1009883a 	mov	r4,r2
    a984:	180b883a 	mov	r5,r3
    a988:	009f2834 	movhi	r2,31904
    a98c:	10bfffc4 	addi	r2,r2,-1
    a990:	18dffc2c 	andhi	r3,r3,32752
    a994:	e1000015 	stw	r4,0(fp)
    a998:	e1400115 	stw	r5,4(fp)
    a99c:	10c06f2e 	bgeu	r2,r3,ab5c <_strtod_r+0xe0c>
    a9a0:	d8800c17 	ldw	r2,48(sp)
    a9a4:	011ffc34 	movhi	r4,32752
    a9a8:	213fffc4 	addi	r4,r4,-1
    a9ac:	11007a26 	beq	r2,r4,ab98 <_strtod_r+0xe48>
    a9b0:	01ffffc4 	movi	r7,-1
    a9b4:	e1000115 	stw	r4,4(fp)
    a9b8:	e1c00015 	stw	r7,0(fp)
    a9bc:	003fb306 	br	a88c <_strtod_r+0xb3c>
    a9c0:	e0c00017 	ldw	r3,0(fp)
    a9c4:	1800221e 	bne	r3,zero,aa50 <_strtod_r+0xd00>
    a9c8:	e0800117 	ldw	r2,4(fp)
    a9cc:	00c00434 	movhi	r3,16
    a9d0:	18ffffc4 	addi	r3,r3,-1
    a9d4:	10c4703a 	and	r2,r2,r3
    a9d8:	1000211e 	bne	r2,zero,aa60 <_strtod_r+0xd10>
    a9dc:	0005883a 	mov	r2,zero
    a9e0:	00cffc34 	movhi	r3,16368
    a9e4:	180f883a 	mov	r7,r3
    a9e8:	8009883a 	mov	r4,r16
    a9ec:	880b883a 	mov	r5,r17
    a9f0:	100d883a 	mov	r6,r2
    a9f4:	000e95c0 	call	e95c <__ltdf2>
    a9f8:	10013c16 	blt	r2,zero,aeec <_strtod_r+0x119c>
    a9fc:	0005883a 	mov	r2,zero
    aa00:	00cff834 	movhi	r3,16352
    aa04:	880b883a 	mov	r5,r17
    aa08:	8009883a 	mov	r4,r16
    aa0c:	180f883a 	mov	r7,r3
    aa10:	100d883a 	mov	r6,r2
    aa14:	000e1200 	call	e120 <__muldf3>
    aa18:	1823883a 	mov	r17,r3
    aa1c:	1021883a 	mov	r16,r2
    aa20:	18e0003c 	xorhi	r3,r3,32768
    aa24:	003fbc06 	br	a918 <_strtod_r+0xbc8>
    aa28:	3827883a 	mov	r19,r7
    aa2c:	003f1a06 	br	a698 <_strtod_r+0x948>
    aa30:	4091c83a 	sub	r8,r8,r2
    aa34:	003f0206 	br	a640 <_strtod_r+0x8f0>
    aa38:	d8c00f17 	ldw	r3,60(sp)
    aa3c:	0011883a 	mov	r8,zero
    aa40:	0029883a 	mov	r20,zero
    aa44:	00d3c83a 	sub	r9,zero,r3
    aa48:	480f883a 	mov	r7,r9
    aa4c:	003ef906 	br	a634 <_strtod_r+0x8e4>
    aa50:	00800044 	movi	r2,1
    aa54:	1880021e 	bne	r3,r2,aa60 <_strtod_r+0xd10>
    aa58:	e0800117 	ldw	r2,4(fp)
    aa5c:	1000a526 	beq	r2,zero,acf4 <_strtod_r+0xfa4>
    aa60:	00affc34 	movhi	r2,49136
    aa64:	0021883a 	mov	r16,zero
    aa68:	044ffc34 	movhi	r17,16368
    aa6c:	d8800815 	stw	r2,32(sp)
    aa70:	d8000715 	stw	zero,28(sp)
    aa74:	003f4c06 	br	a7a8 <_strtod_r+0xa58>
    aa78:	880b883a 	mov	r5,r17
    aa7c:	8009883a 	mov	r4,r16
    aa80:	000eb640 	call	eb64 <__fixdfsi>
    aa84:	1009883a 	mov	r4,r2
    aa88:	000ea6c0 	call	ea6c <__floatsidf>
    aa8c:	880b883a 	mov	r5,r17
    aa90:	8009883a 	mov	r4,r16
    aa94:	100d883a 	mov	r6,r2
    aa98:	180f883a 	mov	r7,r3
    aa9c:	000e02c0 	call	e02c <__subdf3>
    aaa0:	d9001317 	ldw	r4,76(sp)
    aaa4:	100b883a 	mov	r5,r2
    aaa8:	180d883a 	mov	r6,r3
    aaac:	1021883a 	mov	r16,r2
    aab0:	1823883a 	mov	r17,r3
    aab4:	2000061e 	bne	r4,zero,aad0 <_strtod_r+0xd80>
    aab8:	e0800017 	ldw	r2,0(fp)
    aabc:	1000041e 	bne	r2,zero,aad0 <_strtod_r+0xd80>
    aac0:	00c00434 	movhi	r3,16
    aac4:	18ffffc4 	addi	r3,r3,-1
    aac8:	90c4703a 	and	r2,r18,r3
    aacc:	10004026 	beq	r2,zero,abd0 <_strtod_r+0xe80>
    aad0:	00a52834 	movhi	r2,38048
    aad4:	108d6544 	addi	r2,r2,13717
    aad8:	00cff834 	movhi	r3,16352
    aadc:	18ffffc4 	addi	r3,r3,-1
    aae0:	180f883a 	mov	r7,r3
    aae4:	8009883a 	mov	r4,r16
    aae8:	880b883a 	mov	r5,r17
    aaec:	100d883a 	mov	r6,r2
    aaf0:	000e95c0 	call	e95c <__ltdf2>
    aaf4:	10000916 	blt	r2,zero,ab1c <_strtod_r+0xdcc>
    aaf8:	008d6c34 	movhi	r2,13744
    aafc:	10b94d44 	addi	r2,r2,-6859
    ab00:	00cff834 	movhi	r3,16352
    ab04:	880b883a 	mov	r5,r17
    ab08:	180f883a 	mov	r7,r3
    ab0c:	8009883a 	mov	r4,r16
    ab10:	100d883a 	mov	r6,r2
    ab14:	000e84c0 	call	e84c <__gtdf2>
    ab18:	00bf5c0e 	bge	zero,r2,a88c <_strtod_r+0xb3c>
    ab1c:	d9400517 	ldw	r5,20(sp)
    ab20:	a809883a 	mov	r4,r21
    ab24:	00085700 	call	8570 <_Bfree>
    ab28:	a809883a 	mov	r4,r21
    ab2c:	b80b883a 	mov	r5,r23
    ab30:	00085700 	call	8570 <_Bfree>
    ab34:	a809883a 	mov	r4,r21
    ab38:	b00b883a 	mov	r5,r22
    ab3c:	00085700 	call	8570 <_Bfree>
    ab40:	d9401017 	ldw	r5,64(sp)
    ab44:	a809883a 	mov	r4,r21
    ab48:	00085700 	call	8570 <_Bfree>
    ab4c:	a809883a 	mov	r4,r21
    ab50:	a00b883a 	mov	r5,r20
    ab54:	00085700 	call	8570 <_Bfree>
    ab58:	003cf406 	br	9f2c <_strtod_r+0x1dc>
    ab5c:	0080d434 	movhi	r2,848
    ab60:	288d883a 	add	r6,r5,r2
    ab64:	e1800115 	stw	r6,4(fp)
    ab68:	003f4306 	br	a878 <_strtod_r+0xb28>
    ab6c:	8005883a 	mov	r2,r16
    ab70:	88e0003c 	xorhi	r3,r17,32768
    ab74:	003f2606 	br	a810 <_strtod_r+0xac0>
    ab78:	1009883a 	mov	r4,r2
    ab7c:	000ecb00 	call	ecb0 <__floatunsidf>
    ab80:	1021883a 	mov	r16,r2
    ab84:	1823883a 	mov	r17,r3
    ab88:	003f1e06 	br	a804 <_strtod_r+0xab4>
    ab8c:	da000417 	ldw	r8,16(sp)
    ab90:	39c00044 	addi	r7,r7,1
    ab94:	003e6706 	br	a534 <_strtod_r+0x7e4>
    ab98:	d8c00b17 	ldw	r3,44(sp)
    ab9c:	00bfffc4 	movi	r2,-1
    aba0:	18bf831e 	bne	r3,r2,a9b0 <_strtod_r+0xc60>
    aba4:	00c00884 	movi	r3,34
    aba8:	a8c00015 	stw	r3,0(r21)
    abac:	009ffc34 	movhi	r2,32752
    abb0:	e0800115 	stw	r2,4(fp)
    abb4:	e0000015 	stw	zero,0(fp)
    abb8:	003fd806 	br	ab1c <_strtod_r+0xdcc>
    abbc:	4007883a 	mov	r3,r8
    abc0:	000d883a 	mov	r6,zero
    abc4:	0029883a 	mov	r20,zero
    abc8:	0021883a 	mov	r16,zero
    abcc:	003cc906 	br	9ef4 <_strtod_r+0x1a4>
    abd0:	00a52834 	movhi	r2,38048
    abd4:	108d6544 	addi	r2,r2,13717
    abd8:	00cff434 	movhi	r3,16336
    abdc:	18ffffc4 	addi	r3,r3,-1
    abe0:	2809883a 	mov	r4,r5
    abe4:	180f883a 	mov	r7,r3
    abe8:	300b883a 	mov	r5,r6
    abec:	100d883a 	mov	r6,r2
    abf0:	000e95c0 	call	e95c <__ltdf2>
    abf4:	103f250e 	bge	r2,zero,a88c <_strtod_r+0xb3c>
    abf8:	003fc806 	br	ab1c <_strtod_r+0xdcc>
    abfc:	0027883a 	mov	r19,zero
    ac00:	04800044 	movi	r18,1
    ac04:	0015883a 	mov	r10,zero
    ac08:	003cc006 	br	9f0c <_strtod_r+0x1bc>
    ac0c:	00800884 	movi	r2,34
    ac10:	a8800015 	stw	r2,0(r21)
    ac14:	019ffc34 	movhi	r6,32752
    ac18:	e1800115 	stw	r6,4(fp)
    ac1c:	e0000015 	stw	zero,0(fp)
    ac20:	003cc206 	br	9f2c <_strtod_r+0x1dc>
    ac24:	015387c4 	movi	r5,19999
    ac28:	003d1e06 	br	a0a4 <_strtod_r+0x354>
    ac2c:	300a90fa 	slli	r5,r6,3
    ac30:	e0800017 	ldw	r2,0(fp)
    ac34:	e0c00117 	ldw	r3,4(fp)
    ac38:	01000074 	movhi	r4,1
    ac3c:	210a1104 	addi	r4,r4,10308
    ac40:	290b883a 	add	r5,r5,r4
    ac44:	2a000017 	ldw	r8,0(r5)
    ac48:	2a400117 	ldw	r9,4(r5)
    ac4c:	1009883a 	mov	r4,r2
    ac50:	180b883a 	mov	r5,r3
    ac54:	480f883a 	mov	r7,r9
    ac58:	400d883a 	mov	r6,r8
    ac5c:	000e1200 	call	e120 <__muldf3>
    ac60:	e0c00115 	stw	r3,4(fp)
    ac64:	e0800015 	stw	r2,0(fp)
    ac68:	003cb006 	br	9f2c <_strtod_r+0x1dc>
    ac6c:	d8800d17 	ldw	r2,52(sp)
    ac70:	e0800015 	stw	r2,0(fp)
    ac74:	d8c00e17 	ldw	r3,56(sp)
    ac78:	e0c00115 	stw	r3,4(fp)
    ac7c:	9880020c 	andi	r2,r19,8
    ac80:	103caa26 	beq	r2,zero,9f2c <_strtod_r+0x1dc>
    ac84:	e0800117 	ldw	r2,4(fp)
    ac88:	10a00034 	orhi	r2,r2,32768
    ac8c:	e0800115 	stw	r2,4(fp)
    ac90:	003ca606 	br	9f2c <_strtod_r+0x1dc>
    ac94:	009ffc34 	movhi	r2,32752
    ac98:	e0800115 	stw	r2,4(fp)
    ac9c:	e0000015 	stw	zero,0(fp)
    aca0:	003ff606 	br	ac7c <_strtod_r+0xf2c>
    aca4:	00a00034 	movhi	r2,32768
    aca8:	10bfffc4 	addi	r2,r2,-1
    acac:	00ffffc4 	movi	r3,-1
    acb0:	e0800115 	stw	r2,4(fp)
    acb4:	e0c00015 	stw	r3,0(fp)
    acb8:	003ff006 	br	ac7c <_strtod_r+0xf2c>
    acbc:	e0000115 	stw	zero,4(fp)
    acc0:	e0000015 	stw	zero,0(fp)
    acc4:	003fed06 	br	ac7c <_strtod_r+0xf2c>
    acc8:	d8800e17 	ldw	r2,56(sp)
    accc:	29010cc4 	addi	r4,r5,1075
    acd0:	00fffc34 	movhi	r3,65520
    acd4:	18ffffc4 	addi	r3,r3,-1
    acd8:	2008953a 	slli	r4,r4,20
    acdc:	10c4703a 	and	r2,r2,r3
    ace0:	d8c00d17 	ldw	r3,52(sp)
    ace4:	1104b03a 	or	r2,r2,r4
    ace8:	e0800115 	stw	r2,4(fp)
    acec:	e0c00015 	stw	r3,0(fp)
    acf0:	003fe206 	br	ac7c <_strtod_r+0xf2c>
    acf4:	00800884 	movi	r2,34
    acf8:	a8800015 	stw	r2,0(r21)
    acfc:	e0000015 	stw	zero,0(fp)
    ad00:	e0000115 	stw	zero,4(fp)
    ad04:	003f8506 	br	ab1c <_strtod_r+0xdcc>
    ad08:	03800044 	movi	r14,1
    ad0c:	003d7706 	br	a2ec <_strtod_r+0x59c>
    ad10:	99c5883a 	add	r2,r19,r7
    ad14:	11ffffc4 	addi	r7,r2,-1
    ad18:	00800204 	movi	r2,8
    ad1c:	3cc00044 	addi	r19,r7,1
    ad20:	11c0df16 	blt	r2,r7,b0a0 <_strtod_r+0x1350>
    ad24:	a08002a4 	muli	r2,r20,10
    ad28:	000f883a 	mov	r7,zero
    ad2c:	1269883a 	add	r20,r2,r9
    ad30:	42000044 	addi	r8,r8,1
    ad34:	da000415 	stw	r8,16(sp)
    ad38:	41000007 	ldb	r4,0(r8)
    ad3c:	003d3706 	br	a21c <_strtod_r+0x4cc>
    ad40:	d9801317 	ldw	r6,76(sp)
    ad44:	3000511e 	bne	r6,zero,ae8c <_strtod_r+0x113c>
    ad48:	e0800017 	ldw	r2,0(fp)
    ad4c:	1000d81e 	bne	r2,zero,b0b0 <_strtod_r+0x1360>
    ad50:	e0c00117 	ldw	r3,4(fp)
    ad54:	01000434 	movhi	r4,16
    ad58:	213fffc4 	addi	r4,r4,-1
    ad5c:	1904703a 	and	r2,r3,r4
    ad60:	1000b01e 	bne	r2,zero,b024 <_strtod_r+0x12d4>
    ad64:	18dffc2c 	andhi	r3,r3,32752
    ad68:	0081ac34 	movhi	r2,1712
    ad6c:	10c1102e 	bgeu	r2,r3,b1b0 <_strtod_r+0x1460>
    ad70:	a0800517 	ldw	r2,20(r20)
    ad74:	1000031e 	bne	r2,zero,ad84 <_strtod_r+0x1034>
    ad78:	a0c00417 	ldw	r3,16(r20)
    ad7c:	00800044 	movi	r2,1
    ad80:	10c0420e 	bge	r2,r3,ae8c <_strtod_r+0x113c>
    ad84:	a00b883a 	mov	r5,r20
    ad88:	a809883a 	mov	r4,r21
    ad8c:	01800044 	movi	r6,1
    ad90:	0008eb40 	call	8eb4 <__lshift>
    ad94:	1009883a 	mov	r4,r2
    ad98:	b00b883a 	mov	r5,r22
    ad9c:	1029883a 	mov	r20,r2
    ada0:	00086cc0 	call	86cc <__mcmp>
    ada4:	0080c20e 	bge	zero,r2,b0b0 <_strtod_r+0x1360>
    ada8:	e1800117 	ldw	r6,4(fp)
    adac:	d9001417 	ldw	r4,80(sp)
    adb0:	2013003a 	cmpeq	r9,r4,zero
    adb4:	4800ef1e 	bne	r9,zero,b174 <_strtod_r+0x1424>
    adb8:	30dffc2c 	andhi	r3,r6,32752
    adbc:	0081ac34 	movhi	r2,1712
    adc0:	10c0ec36 	bltu	r2,r3,b174 <_strtod_r+0x1424>
    adc4:	0080dc34 	movhi	r2,880
    adc8:	10ffca2e 	bgeu	r2,r3,acf4 <_strtod_r+0xfa4>
    adcc:	e0800017 	ldw	r2,0(fp)
    add0:	e0c00117 	ldw	r3,4(fp)
    add4:	020e5434 	movhi	r8,14672
    add8:	000d883a 	mov	r6,zero
    addc:	400f883a 	mov	r7,r8
    ade0:	180b883a 	mov	r5,r3
    ade4:	1009883a 	mov	r4,r2
    ade8:	da000c15 	stw	r8,48(sp)
    adec:	d8000b15 	stw	zero,44(sp)
    adf0:	000e1200 	call	e120 <__muldf3>
    adf4:	e0800015 	stw	r2,0(fp)
    adf8:	e0c00115 	stw	r3,4(fp)
    adfc:	183f471e 	bne	r3,zero,ab1c <_strtod_r+0xdcc>
    ae00:	103f461e 	bne	r2,zero,ab1c <_strtod_r+0xdcc>
    ae04:	00800884 	movi	r2,34
    ae08:	a8800015 	stw	r2,0(r21)
    ae0c:	003f4306 	br	ab1c <_strtod_r+0xdcc>
    ae10:	d8801317 	ldw	r2,76(sp)
    ae14:	1025003a 	cmpeq	r18,r2,zero
    ae18:	9000861e 	bne	r18,zero,b034 <_strtod_r+0x12e4>
    ae1c:	e1400117 	ldw	r5,4(fp)
    ae20:	00c00434 	movhi	r3,16
    ae24:	18ffffc4 	addi	r3,r3,-1
    ae28:	28c4703a 	and	r2,r5,r3
    ae2c:	10c01b26 	beq	r2,r3,ae9c <_strtod_r+0x114c>
    ae30:	e1c00017 	ldw	r7,0(fp)
    ae34:	3880004c 	andi	r2,r7,1
    ae38:	1005003a 	cmpeq	r2,r2,zero
    ae3c:	1000791e 	bne	r2,zero,b024 <_strtod_r+0x12d4>
    ae40:	9000b126 	beq	r18,zero,b108 <_strtod_r+0x13b8>
    ae44:	e4400117 	ldw	r17,4(fp)
    ae48:	3809883a 	mov	r4,r7
    ae4c:	3821883a 	mov	r16,r7
    ae50:	880b883a 	mov	r5,r17
    ae54:	000872c0 	call	872c <__ulp>
    ae58:	180f883a 	mov	r7,r3
    ae5c:	880b883a 	mov	r5,r17
    ae60:	8009883a 	mov	r4,r16
    ae64:	100d883a 	mov	r6,r2
    ae68:	000e02c0 	call	e02c <__subdf3>
    ae6c:	1009883a 	mov	r4,r2
    ae70:	000d883a 	mov	r6,zero
    ae74:	000f883a 	mov	r7,zero
    ae78:	180b883a 	mov	r5,r3
    ae7c:	e0800015 	stw	r2,0(fp)
    ae80:	e0c00115 	stw	r3,4(fp)
    ae84:	000e7c40 	call	e7c4 <__nedf2>
    ae88:	103f9a26 	beq	r2,zero,acf4 <_strtod_r+0xfa4>
    ae8c:	d9001417 	ldw	r4,80(sp)
    ae90:	2013003a 	cmpeq	r9,r4,zero
    ae94:	483f211e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    ae98:	003fcc06 	br	adcc <_strtod_r+0x107c>
    ae9c:	d9001417 	ldw	r4,80(sp)
    aea0:	e1c00017 	ldw	r7,0(fp)
    aea4:	2013003a 	cmpeq	r9,r4,zero
    aea8:	4800bd1e 	bne	r9,zero,b1a0 <_strtod_r+0x1450>
    aeac:	28dffc2c 	andhi	r3,r5,32752
    aeb0:	0081a834 	movhi	r2,1696
    aeb4:	10c0ba36 	bltu	r2,r3,b1a0 <_strtod_r+0x1450>
    aeb8:	1804d53a 	srli	r2,r3,20
    aebc:	00c01ac4 	movi	r3,107
    aec0:	013fffc4 	movi	r4,-1
    aec4:	1887c83a 	sub	r3,r3,r2
    aec8:	20c4983a 	sll	r2,r4,r3
    aecc:	11ffd91e 	bne	r2,r7,ae34 <_strtod_r+0x10e4>
    aed0:	28dffc2c 	andhi	r3,r5,32752
    aed4:	00800434 	movhi	r2,16
    aed8:	188d883a 	add	r6,r3,r2
    aedc:	e1800115 	stw	r6,4(fp)
    aee0:	e0000015 	stw	zero,0(fp)
    aee4:	483f0d1e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    aee8:	003fb806 	br	adcc <_strtod_r+0x107c>
    aeec:	0021883a 	mov	r16,zero
    aef0:	0005883a 	mov	r2,zero
    aef4:	044ff834 	movhi	r17,16352
    aef8:	00eff834 	movhi	r3,49120
    aefc:	003e8606 	br	a918 <_strtod_r+0xbc8>
    af00:	803d9e26 	beq	r16,zero,a57c <_strtod_r+0x82c>
    af04:	0421c83a 	sub	r16,zero,r16
    af08:	814003cc 	andi	r5,r16,15
    af0c:	28000f26 	beq	r5,zero,af4c <_strtod_r+0x11fc>
    af10:	280a90fa 	slli	r5,r5,3
    af14:	01000074 	movhi	r4,1
    af18:	210a1104 	addi	r4,r4,10308
    af1c:	e0800017 	ldw	r2,0(fp)
    af20:	290b883a 	add	r5,r5,r4
    af24:	2a000017 	ldw	r8,0(r5)
    af28:	e0c00117 	ldw	r3,4(fp)
    af2c:	2a400117 	ldw	r9,4(r5)
    af30:	1009883a 	mov	r4,r2
    af34:	180b883a 	mov	r5,r3
    af38:	480f883a 	mov	r7,r9
    af3c:	400d883a 	mov	r6,r8
    af40:	000e4e40 	call	e4e4 <__divdf3>
    af44:	e0c00115 	stw	r3,4(fp)
    af48:	e0800015 	stw	r2,0(fp)
    af4c:	8021d13a 	srai	r16,r16,4
    af50:	803d8a26 	beq	r16,zero,a57c <_strtod_r+0x82c>
    af54:	008007c4 	movi	r2,31
    af58:	14002d16 	blt	r2,r16,b010 <_strtod_r+0x12c0>
    af5c:	8080040c 	andi	r2,r16,16
    af60:	10009926 	beq	r2,zero,b1c8 <_strtod_r+0x1478>
    af64:	00801a84 	movi	r2,106
    af68:	d8801415 	stw	r2,80(sp)
    af6c:	0400110e 	bge	zero,r16,afb4 <_strtod_r+0x1264>
    af70:	04400074 	movhi	r17,1
    af74:	8c4a5e04 	addi	r17,r17,10616
    af78:	8080004c 	andi	r2,r16,1
    af7c:	1005003a 	cmpeq	r2,r2,zero
    af80:	1000091e 	bne	r2,zero,afa8 <_strtod_r+0x1258>
    af84:	e0800017 	ldw	r2,0(fp)
    af88:	e0c00117 	ldw	r3,4(fp)
    af8c:	89800017 	ldw	r6,0(r17)
    af90:	89c00117 	ldw	r7,4(r17)
    af94:	180b883a 	mov	r5,r3
    af98:	1009883a 	mov	r4,r2
    af9c:	000e1200 	call	e120 <__muldf3>
    afa0:	e0c00115 	stw	r3,4(fp)
    afa4:	e0800015 	stw	r2,0(fp)
    afa8:	8021d07a 	srai	r16,r16,1
    afac:	8c400204 	addi	r17,r17,8
    afb0:	043ff116 	blt	zero,r16,af78 <_strtod_r+0x1228>
    afb4:	d8c01417 	ldw	r3,80(sp)
    afb8:	18000d26 	beq	r3,zero,aff0 <_strtod_r+0x12a0>
    afbc:	e1000117 	ldw	r4,4(fp)
    afc0:	00c01ac4 	movi	r3,107
    afc4:	209ffc2c 	andhi	r2,r4,32752
    afc8:	1004d53a 	srli	r2,r2,20
    afcc:	1887c83a 	sub	r3,r3,r2
    afd0:	00c0070e 	bge	zero,r3,aff0 <_strtod_r+0x12a0>
    afd4:	008007c4 	movi	r2,31
    afd8:	10c0900e 	bge	r2,r3,b21c <_strtod_r+0x14cc>
    afdc:	00800d04 	movi	r2,52
    afe0:	e0000015 	stw	zero,0(fp)
    afe4:	10c0870e 	bge	r2,r3,b204 <_strtod_r+0x14b4>
    afe8:	0180dc34 	movhi	r6,880
    afec:	e1800115 	stw	r6,4(fp)
    aff0:	e0800017 	ldw	r2,0(fp)
    aff4:	e0c00117 	ldw	r3,4(fp)
    aff8:	000d883a 	mov	r6,zero
    affc:	000f883a 	mov	r7,zero
    b000:	180b883a 	mov	r5,r3
    b004:	1009883a 	mov	r4,r2
    b008:	000e7c40 	call	e7c4 <__nedf2>
    b00c:	103d5c1e 	bne	r2,zero,a580 <_strtod_r+0x830>
    b010:	00800884 	movi	r2,34
    b014:	a8800015 	stw	r2,0(r21)
    b018:	e0000015 	stw	zero,0(fp)
    b01c:	e0000115 	stw	zero,4(fp)
    b020:	003bc206 	br	9f2c <_strtod_r+0x1dc>
    b024:	d8801417 	ldw	r2,80(sp)
    b028:	1013003a 	cmpeq	r9,r2,zero
    b02c:	483ebb1e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    b030:	003f6606 	br	adcc <_strtod_r+0x107c>
    b034:	e1800117 	ldw	r6,4(fp)
    b038:	00c00434 	movhi	r3,16
    b03c:	18ffffc4 	addi	r3,r3,-1
    b040:	30c4703a 	and	r2,r6,r3
    b044:	103f7a1e 	bne	r2,zero,ae30 <_strtod_r+0x10e0>
    b048:	e1c00017 	ldw	r7,0(fp)
    b04c:	383f791e 	bne	r7,zero,ae34 <_strtod_r+0x10e4>
    b050:	003f5606 	br	adac <_strtod_r+0x105c>
    b054:	d9800f17 	ldw	r6,60(sp)
    b058:	00bffa84 	movi	r2,-22
    b05c:	30bcd416 	blt	r6,r2,a3b0 <_strtod_r+0x660>
    b060:	317ffe24 	muli	r5,r6,-8
    b064:	01000074 	movhi	r4,1
    b068:	210a1104 	addi	r4,r4,10308
    b06c:	e0800017 	ldw	r2,0(fp)
    b070:	290b883a 	add	r5,r5,r4
    b074:	2a000017 	ldw	r8,0(r5)
    b078:	e0c00117 	ldw	r3,4(fp)
    b07c:	2a400117 	ldw	r9,4(r5)
    b080:	1009883a 	mov	r4,r2
    b084:	180b883a 	mov	r5,r3
    b088:	480f883a 	mov	r7,r9
    b08c:	400d883a 	mov	r6,r8
    b090:	000e4e40 	call	e4e4 <__divdf3>
    b094:	e0c00115 	stw	r3,4(fp)
    b098:	e0800015 	stw	r2,0(fp)
    b09c:	003ba306 	br	9f2c <_strtod_r+0x1dc>
    b0a0:	00800404 	movi	r2,16
    b0a4:	14c02f0e 	bge	r2,r19,b164 <_strtod_r+0x1414>
    b0a8:	000f883a 	mov	r7,zero
    b0ac:	003f2006 	br	ad30 <_strtod_r+0xfe0>
    b0b0:	d9801417 	ldw	r6,80(sp)
    b0b4:	3013003a 	cmpeq	r9,r6,zero
    b0b8:	483e981e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    b0bc:	003f4306 	br	adcc <_strtod_r+0x107c>
    b0c0:	00801a44 	movi	r2,105
    b0c4:	20bc6326 	beq	r4,r2,a254 <_strtod_r+0x504>
    b0c8:	00801b84 	movi	r2,110
    b0cc:	20bbba1e 	bne	r4,r2,9fb8 <_strtod_r+0x268>
    b0d0:	dc000404 	addi	r16,sp,16
    b0d4:	8009883a 	mov	r4,r16
    b0d8:	01400074 	movhi	r5,1
    b0dc:	294a5d04 	addi	r5,r5,10612
    b0e0:	0009d080 	call	9d08 <match>
    b0e4:	103bb426 	beq	r2,zero,9fb8 <_strtod_r+0x268>
    b0e8:	d8800417 	ldw	r2,16(sp)
    b0ec:	00c00a04 	movi	r3,40
    b0f0:	11000007 	ldb	r4,0(r2)
    b0f4:	20c03626 	beq	r4,r3,b1d0 <_strtod_r+0x1480>
    b0f8:	01bffe34 	movhi	r6,65528
    b0fc:	e1800115 	stw	r6,4(fp)
    b100:	e0000015 	stw	zero,0(fp)
    b104:	003b8906 	br	9f2c <_strtod_r+0x1dc>
    b108:	e4400117 	ldw	r17,4(fp)
    b10c:	3809883a 	mov	r4,r7
    b110:	3821883a 	mov	r16,r7
    b114:	880b883a 	mov	r5,r17
    b118:	000872c0 	call	872c <__ulp>
    b11c:	100d883a 	mov	r6,r2
    b120:	880b883a 	mov	r5,r17
    b124:	180f883a 	mov	r7,r3
    b128:	8009883a 	mov	r4,r16
    b12c:	000e0ac0 	call	e0ac <__adddf3>
    b130:	d9801417 	ldw	r6,80(sp)
    b134:	e0c00115 	stw	r3,4(fp)
    b138:	e0800015 	stw	r2,0(fp)
    b13c:	3013003a 	cmpeq	r9,r6,zero
    b140:	483e761e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    b144:	003f2106 	br	adcc <_strtod_r+0x107c>
    b148:	000f883a 	mov	r7,zero
    b14c:	003cf006 	br	a510 <_strtod_r+0x7c0>
    b150:	0080d434 	movhi	r2,848
    b154:	188d883a 	add	r6,r3,r2
    b158:	d8001415 	stw	zero,80(sp)
    b15c:	e1800115 	stw	r6,4(fp)
    b160:	003d0706 	br	a580 <_strtod_r+0x830>
    b164:	808002a4 	muli	r2,r16,10
    b168:	000f883a 	mov	r7,zero
    b16c:	1261883a 	add	r16,r2,r9
    b170:	003eef06 	br	ad30 <_strtod_r+0xfe0>
    b174:	309ffc2c 	andhi	r2,r6,32752
    b178:	00fffc34 	movhi	r3,65520
    b17c:	10c5883a 	add	r2,r2,r3
    b180:	00c00434 	movhi	r3,16
    b184:	18ffffc4 	addi	r3,r3,-1
    b188:	10ccb03a 	or	r6,r2,r3
    b18c:	01ffffc4 	movi	r7,-1
    b190:	e1800115 	stw	r6,4(fp)
    b194:	e1c00015 	stw	r7,0(fp)
    b198:	483e601e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    b19c:	003f0b06 	br	adcc <_strtod_r+0x107c>
    b1a0:	00bfffc4 	movi	r2,-1
    b1a4:	003f4906 	br	aecc <_strtod_r+0x117c>
    b1a8:	0025883a 	mov	r18,zero
    b1ac:	003cb106 	br	a474 <_strtod_r+0x724>
    b1b0:	d8c01417 	ldw	r3,80(sp)
    b1b4:	1813003a 	cmpeq	r9,r3,zero
    b1b8:	483e581e 	bne	r9,zero,ab1c <_strtod_r+0xdcc>
    b1bc:	003f0306 	br	adcc <_strtod_r+0x107c>
    b1c0:	980f883a 	mov	r7,r19
    b1c4:	003ed406 	br	ad18 <_strtod_r+0xfc8>
    b1c8:	d8001415 	stw	zero,80(sp)
    b1cc:	003f6706 	br	af6c <_strtod_r+0x121c>
    b1d0:	8009883a 	mov	r4,r16
    b1d4:	01400074 	movhi	r5,1
    b1d8:	294cc604 	addi	r5,r5,13080
    b1dc:	d9800d04 	addi	r6,sp,52
    b1e0:	000cb340 	call	cb34 <__hexnan>
    b1e4:	00c00144 	movi	r3,5
    b1e8:	10ffc31e 	bne	r2,r3,b0f8 <_strtod_r+0x13a8>
    b1ec:	d8800e17 	ldw	r2,56(sp)
    b1f0:	d9c00d17 	ldw	r7,52(sp)
    b1f4:	119ffc34 	orhi	r6,r2,32752
    b1f8:	e1800115 	stw	r6,4(fp)
    b1fc:	e1c00015 	stw	r7,0(fp)
    b200:	003b4a06 	br	9f2c <_strtod_r+0x1dc>
    b204:	18fff804 	addi	r3,r3,-32
    b208:	00bfffc4 	movi	r2,-1
    b20c:	10c4983a 	sll	r2,r2,r3
    b210:	208c703a 	and	r6,r4,r2
    b214:	e1800115 	stw	r6,4(fp)
    b218:	003f7506 	br	aff0 <_strtod_r+0x12a0>
    b21c:	00bfffc4 	movi	r2,-1
    b220:	10c4983a 	sll	r2,r2,r3
    b224:	e0c00017 	ldw	r3,0(fp)
    b228:	188e703a 	and	r7,r3,r2
    b22c:	e1c00015 	stw	r7,0(fp)
    b230:	003f6f06 	br	aff0 <_strtod_r+0x12a0>

0000b234 <strtof>:
    b234:	defffa04 	addi	sp,sp,-24
    b238:	dd000415 	stw	r20,16(sp)
    b23c:	05000074 	movhi	r20,1
    b240:	a5115204 	addi	r20,r20,17736
    b244:	2007883a 	mov	r3,r4
    b248:	a1000017 	ldw	r4,0(r20)
    b24c:	280d883a 	mov	r6,r5
    b250:	180b883a 	mov	r5,r3
    b254:	dfc00515 	stw	ra,20(sp)
    b258:	dcc00315 	stw	r19,12(sp)
    b25c:	dc800215 	stw	r18,8(sp)
    b260:	dc400115 	stw	r17,4(sp)
    b264:	dc000015 	stw	r16,0(sp)
    b268:	0009d500 	call	9d50 <_strtod_r>
    b26c:	180b883a 	mov	r5,r3
    b270:	1009883a 	mov	r4,r2
    b274:	1823883a 	mov	r17,r3
    b278:	1021883a 	mov	r16,r2
    b27c:	000ec3c0 	call	ec3c <__truncdfsf2>
    b280:	1009883a 	mov	r4,r2
    b284:	000b883a 	mov	r5,zero
    b288:	1025883a 	mov	r18,r2
    b28c:	1027883a 	mov	r19,r2
    b290:	000dab40 	call	dab4 <__nesf2>
    b294:	000d883a 	mov	r6,zero
    b298:	000f883a 	mov	r7,zero
    b29c:	8009883a 	mov	r4,r16
    b2a0:	880b883a 	mov	r5,r17
    b2a4:	10000e1e 	bne	r2,zero,b2e0 <strtof+0xac>
    b2a8:	000e7c40 	call	e7c4 <__nedf2>
    b2ac:	10000c26 	beq	r2,zero,b2e0 <strtof+0xac>
    b2b0:	a0c00017 	ldw	r3,0(r20)
    b2b4:	00800884 	movi	r2,34
    b2b8:	18800015 	stw	r2,0(r3)
    b2bc:	9805883a 	mov	r2,r19
    b2c0:	dfc00517 	ldw	ra,20(sp)
    b2c4:	dd000417 	ldw	r20,16(sp)
    b2c8:	dcc00317 	ldw	r19,12(sp)
    b2cc:	dc800217 	ldw	r18,8(sp)
    b2d0:	dc400117 	ldw	r17,4(sp)
    b2d4:	dc000017 	ldw	r16,0(sp)
    b2d8:	dec00604 	addi	sp,sp,24
    b2dc:	f800283a 	ret
    b2e0:	9009883a 	mov	r4,r18
    b2e4:	015fe034 	movhi	r5,32640
    b2e8:	297fffc4 	addi	r5,r5,-1
    b2ec:	000db2c0 	call	db2c <__gtsf2>
    b2f0:	00ffffc4 	movi	r3,-1
    b2f4:	011ffc34 	movhi	r4,32752
    b2f8:	213fffc4 	addi	r4,r4,-1
    b2fc:	200f883a 	mov	r7,r4
    b300:	180d883a 	mov	r6,r3
    b304:	8009883a 	mov	r4,r16
    b308:	880b883a 	mov	r5,r17
    b30c:	00800f16 	blt	zero,r2,b34c <strtof+0x118>
    b310:	9009883a 	mov	r4,r18
    b314:	017fe034 	movhi	r5,65408
    b318:	297fffc4 	addi	r5,r5,-1
    b31c:	000dba40 	call	dba4 <__ltsf2>
    b320:	023fffc4 	movi	r8,-1
    b324:	027ffc34 	movhi	r9,65520
    b328:	4a7fffc4 	addi	r9,r9,-1
    b32c:	880b883a 	mov	r5,r17
    b330:	480f883a 	mov	r7,r9
    b334:	8009883a 	mov	r4,r16
    b338:	400d883a 	mov	r6,r8
    b33c:	103fdf0e 	bge	r2,zero,b2bc <strtof+0x88>
    b340:	000e95c0 	call	e95c <__ltdf2>
    b344:	103fda0e 	bge	r2,zero,b2b0 <strtof+0x7c>
    b348:	003fdc06 	br	b2bc <strtof+0x88>
    b34c:	000e84c0 	call	e84c <__gtdf2>
    b350:	00bfd70e 	bge	zero,r2,b2b0 <strtof+0x7c>
    b354:	003fee06 	br	b310 <strtof+0xdc>

0000b358 <strtod>:
    b358:	01800074 	movhi	r6,1
    b35c:	31915204 	addi	r6,r6,17736
    b360:	2007883a 	mov	r3,r4
    b364:	31000017 	ldw	r4,0(r6)
    b368:	280d883a 	mov	r6,r5
    b36c:	180b883a 	mov	r5,r3
    b370:	0009d501 	jmpi	9d50 <_strtod_r>

0000b374 <_strtol_r>:
    b374:	defff304 	addi	sp,sp,-52
    b378:	00800074 	movhi	r2,1
    b37c:	10915604 	addi	r2,r2,17752
    b380:	dcc00615 	stw	r19,24(sp)
    b384:	14c00017 	ldw	r19,0(r2)
    b388:	ddc00a15 	stw	r23,40(sp)
    b38c:	dc000315 	stw	r16,12(sp)
    b390:	dfc00c15 	stw	ra,48(sp)
    b394:	df000b15 	stw	fp,44(sp)
    b398:	dd800915 	stw	r22,36(sp)
    b39c:	dd400815 	stw	r21,32(sp)
    b3a0:	dd000715 	stw	r20,28(sp)
    b3a4:	dc800515 	stw	r18,20(sp)
    b3a8:	dc400415 	stw	r17,16(sp)
    b3ac:	282f883a 	mov	r23,r5
    b3b0:	d9000015 	stw	r4,0(sp)
    b3b4:	d9800115 	stw	r6,4(sp)
    b3b8:	2821883a 	mov	r16,r5
    b3bc:	84400007 	ldb	r17,0(r16)
    b3c0:	84000044 	addi	r16,r16,1
    b3c4:	9c47883a 	add	r3,r19,r17
    b3c8:	18800003 	ldbu	r2,0(r3)
    b3cc:	1080020c 	andi	r2,r2,8
    b3d0:	103ffa1e 	bne	r2,zero,b3bc <_strtol_r+0x48>
    b3d4:	00800b44 	movi	r2,45
    b3d8:	88805c26 	beq	r17,r2,b54c <_strtol_r+0x1d8>
    b3dc:	00800ac4 	movi	r2,43
    b3e0:	88805726 	beq	r17,r2,b540 <_strtol_r+0x1cc>
    b3e4:	0039883a 	mov	fp,zero
    b3e8:	3807003a 	cmpeq	r3,r7,zero
    b3ec:	1800431e 	bne	r3,zero,b4fc <_strtol_r+0x188>
    b3f0:	00800404 	movi	r2,16
    b3f4:	38804126 	beq	r7,r2,b4fc <_strtol_r+0x188>
    b3f8:	3829883a 	mov	r20,r7
    b3fc:	e02cc03a 	cmpne	r22,fp,zero
    b400:	b0004b1e 	bne	r22,zero,b530 <_strtol_r+0x1bc>
    b404:	04a00034 	movhi	r18,32768
    b408:	94bfffc4 	addi	r18,r18,-1
    b40c:	9009883a 	mov	r4,r18
    b410:	a00b883a 	mov	r5,r20
    b414:	d9c00215 	stw	r7,8(sp)
    b418:	000ef880 	call	ef88 <__umodsi3>
    b41c:	9009883a 	mov	r4,r18
    b420:	a00b883a 	mov	r5,r20
    b424:	102b883a 	mov	r21,r2
    b428:	000ef800 	call	ef80 <__udivsi3>
    b42c:	1011883a 	mov	r8,r2
    b430:	9c45883a 	add	r2,r19,r17
    b434:	11000003 	ldbu	r4,0(r2)
    b438:	000b883a 	mov	r5,zero
    b43c:	000d883a 	mov	r6,zero
    b440:	20c0010c 	andi	r3,r4,4
    b444:	d9c00217 	ldw	r7,8(sp)
    b448:	18000e26 	beq	r3,zero,b484 <_strtol_r+0x110>
    b44c:	88fff404 	addi	r3,r17,-48
    b450:	19c0140e 	bge	r3,r7,b4a4 <_strtol_r+0x130>
    b454:	30003116 	blt	r6,zero,b51c <_strtol_r+0x1a8>
    b458:	41403036 	bltu	r8,r5,b51c <_strtol_r+0x1a8>
    b45c:	2a002e26 	beq	r5,r8,b518 <_strtol_r+0x1a4>
    b460:	2d05383a 	mul	r2,r5,r20
    b464:	01800044 	movi	r6,1
    b468:	10cb883a 	add	r5,r2,r3
    b46c:	84400007 	ldb	r17,0(r16)
    b470:	84000044 	addi	r16,r16,1
    b474:	9c45883a 	add	r2,r19,r17
    b478:	11000003 	ldbu	r4,0(r2)
    b47c:	20c0010c 	andi	r3,r4,4
    b480:	183ff21e 	bne	r3,zero,b44c <_strtol_r+0xd8>
    b484:	208000cc 	andi	r2,r4,3
    b488:	10000626 	beq	r2,zero,b4a4 <_strtol_r+0x130>
    b48c:	2080004c 	andi	r2,r4,1
    b490:	1005003a 	cmpeq	r2,r2,zero
    b494:	1000231e 	bne	r2,zero,b524 <_strtol_r+0x1b0>
    b498:	00800dc4 	movi	r2,55
    b49c:	8887c83a 	sub	r3,r17,r2
    b4a0:	19ffec16 	blt	r3,r7,b454 <_strtol_r+0xe0>
    b4a4:	30002d16 	blt	r6,zero,b55c <_strtol_r+0x1e8>
    b4a8:	b000231e 	bne	r22,zero,b538 <_strtol_r+0x1c4>
    b4ac:	2807883a 	mov	r3,r5
    b4b0:	d8800117 	ldw	r2,4(sp)
    b4b4:	10000426 	beq	r2,zero,b4c8 <_strtol_r+0x154>
    b4b8:	30000126 	beq	r6,zero,b4c0 <_strtol_r+0x14c>
    b4bc:	85ffffc4 	addi	r23,r16,-1
    b4c0:	d9000117 	ldw	r4,4(sp)
    b4c4:	25c00015 	stw	r23,0(r4)
    b4c8:	1805883a 	mov	r2,r3
    b4cc:	dfc00c17 	ldw	ra,48(sp)
    b4d0:	df000b17 	ldw	fp,44(sp)
    b4d4:	ddc00a17 	ldw	r23,40(sp)
    b4d8:	dd800917 	ldw	r22,36(sp)
    b4dc:	dd400817 	ldw	r21,32(sp)
    b4e0:	dd000717 	ldw	r20,28(sp)
    b4e4:	dcc00617 	ldw	r19,24(sp)
    b4e8:	dc800517 	ldw	r18,20(sp)
    b4ec:	dc400417 	ldw	r17,16(sp)
    b4f0:	dc000317 	ldw	r16,12(sp)
    b4f4:	dec00d04 	addi	sp,sp,52
    b4f8:	f800283a 	ret
    b4fc:	00800c04 	movi	r2,48
    b500:	88801d26 	beq	r17,r2,b578 <_strtol_r+0x204>
    b504:	183fbc26 	beq	r3,zero,b3f8 <_strtol_r+0x84>
    b508:	00800c04 	movi	r2,48
    b50c:	88802726 	beq	r17,r2,b5ac <_strtol_r+0x238>
    b510:	01c00284 	movi	r7,10
    b514:	003fb806 	br	b3f8 <_strtol_r+0x84>
    b518:	a8ffd10e 	bge	r21,r3,b460 <_strtol_r+0xec>
    b51c:	01bfffc4 	movi	r6,-1
    b520:	003fd206 	br	b46c <_strtol_r+0xf8>
    b524:	008015c4 	movi	r2,87
    b528:	8887c83a 	sub	r3,r17,r2
    b52c:	003fdc06 	br	b4a0 <_strtol_r+0x12c>
    b530:	04a00034 	movhi	r18,32768
    b534:	003fb506 	br	b40c <_strtol_r+0x98>
    b538:	0147c83a 	sub	r3,zero,r5
    b53c:	003fdc06 	br	b4b0 <_strtol_r+0x13c>
    b540:	84400007 	ldb	r17,0(r16)
    b544:	84000044 	addi	r16,r16,1
    b548:	003fa606 	br	b3e4 <_strtol_r+0x70>
    b54c:	84400007 	ldb	r17,0(r16)
    b550:	07000044 	movi	fp,1
    b554:	84000044 	addi	r16,r16,1
    b558:	003fa306 	br	b3e8 <_strtol_r+0x74>
    b55c:	e005003a 	cmpeq	r2,fp,zero
    b560:	10000f1e 	bne	r2,zero,b5a0 <_strtol_r+0x22c>
    b564:	00e00034 	movhi	r3,32768
    b568:	d9000017 	ldw	r4,0(sp)
    b56c:	00800884 	movi	r2,34
    b570:	20800015 	stw	r2,0(r4)
    b574:	003fce06 	br	b4b0 <_strtol_r+0x13c>
    b578:	81000007 	ldb	r4,0(r16)
    b57c:	00801e04 	movi	r2,120
    b580:	20800226 	beq	r4,r2,b58c <_strtol_r+0x218>
    b584:	00801604 	movi	r2,88
    b588:	20bfde1e 	bne	r4,r2,b504 <_strtol_r+0x190>
    b58c:	84400047 	ldb	r17,1(r16)
    b590:	01c00404 	movi	r7,16
    b594:	84000084 	addi	r16,r16,2
    b598:	3829883a 	mov	r20,r7
    b59c:	003f9706 	br	b3fc <_strtol_r+0x88>
    b5a0:	00e00034 	movhi	r3,32768
    b5a4:	18ffffc4 	addi	r3,r3,-1
    b5a8:	003fef06 	br	b568 <_strtol_r+0x1f4>
    b5ac:	01c00204 	movi	r7,8
    b5b0:	3829883a 	mov	r20,r7
    b5b4:	003f9106 	br	b3fc <_strtol_r+0x88>

0000b5b8 <strtol>:
    b5b8:	00800074 	movhi	r2,1
    b5bc:	10915204 	addi	r2,r2,17736
    b5c0:	2013883a 	mov	r9,r4
    b5c4:	11000017 	ldw	r4,0(r2)
    b5c8:	2805883a 	mov	r2,r5
    b5cc:	300f883a 	mov	r7,r6
    b5d0:	480b883a 	mov	r5,r9
    b5d4:	100d883a 	mov	r6,r2
    b5d8:	000b3741 	jmpi	b374 <_strtol_r>

0000b5dc <_strtoll_r>:
    b5dc:	defff004 	addi	sp,sp,-64
    b5e0:	00800074 	movhi	r2,1
    b5e4:	10915604 	addi	r2,r2,17752
    b5e8:	df000e15 	stw	fp,56(sp)
    b5ec:	17000017 	ldw	fp,0(r2)
    b5f0:	ddc00d15 	stw	r23,52(sp)
    b5f4:	dd000a15 	stw	r20,40(sp)
    b5f8:	dfc00f15 	stw	ra,60(sp)
    b5fc:	dd800c15 	stw	r22,48(sp)
    b600:	dd400b15 	stw	r21,44(sp)
    b604:	dcc00915 	stw	r19,36(sp)
    b608:	dc800815 	stw	r18,32(sp)
    b60c:	dc400715 	stw	r17,28(sp)
    b610:	dc000615 	stw	r16,24(sp)
    b614:	d9400315 	stw	r5,12(sp)
    b618:	d9000215 	stw	r4,8(sp)
    b61c:	d9800415 	stw	r6,16(sp)
    b620:	382f883a 	mov	r23,r7
    b624:	2829883a 	mov	r20,r5
    b628:	a4c00007 	ldb	r19,0(r20)
    b62c:	a5000044 	addi	r20,r20,1
    b630:	e4c7883a 	add	r3,fp,r19
    b634:	18800003 	ldbu	r2,0(r3)
    b638:	1080020c 	andi	r2,r2,8
    b63c:	103ffa1e 	bne	r2,zero,b628 <_strtoll_r+0x4c>
    b640:	00800b44 	movi	r2,45
    b644:	98808826 	beq	r19,r2,b868 <_strtoll_r+0x28c>
    b648:	00800ac4 	movi	r2,43
    b64c:	98808326 	beq	r19,r2,b85c <_strtoll_r+0x280>
    b650:	d8000115 	stw	zero,4(sp)
    b654:	b807003a 	cmpeq	r3,r23,zero
    b658:	18005f1e 	bne	r3,zero,b7d8 <_strtoll_r+0x1fc>
    b65c:	00800404 	movi	r2,16
    b660:	b8805d26 	beq	r23,r2,b7d8 <_strtoll_r+0x1fc>
    b664:	b82dd7fa 	srai	r22,r23,31
    b668:	b82b883a 	mov	r21,r23
    b66c:	d8c00117 	ldw	r3,4(sp)
    b670:	1806c03a 	cmpne	r3,r3,zero
    b674:	d8c00515 	stw	r3,20(sp)
    b678:	1800631e 	bne	r3,zero,b808 <_strtoll_r+0x22c>
    b67c:	043fffc4 	movi	r16,-1
    b680:	04600034 	movhi	r17,32768
    b684:	8c7fffc4 	addi	r17,r17,-1
    b688:	880b883a 	mov	r5,r17
    b68c:	8009883a 	mov	r4,r16
    b690:	a80d883a 	mov	r6,r21
    b694:	b00f883a 	mov	r7,r22
    b698:	000d5040 	call	d504 <__umoddi3>
    b69c:	880b883a 	mov	r5,r17
    b6a0:	8009883a 	mov	r4,r16
    b6a4:	b00f883a 	mov	r7,r22
    b6a8:	a80d883a 	mov	r6,r21
    b6ac:	d8800015 	stw	r2,0(sp)
    b6b0:	000cf280 	call	cf28 <__udivdi3>
    b6b4:	1023883a 	mov	r17,r2
    b6b8:	e4c5883a 	add	r2,fp,r19
    b6bc:	11000003 	ldbu	r4,0(r2)
    b6c0:	1825883a 	mov	r18,r3
    b6c4:	0015883a 	mov	r10,zero
    b6c8:	20c0010c 	andi	r3,r4,4
    b6cc:	0017883a 	mov	r11,zero
    b6d0:	000f883a 	mov	r7,zero
    b6d4:	18001a26 	beq	r3,zero,b740 <_strtoll_r+0x164>
    b6d8:	9c3ff404 	addi	r16,r19,-48
    b6dc:	85c0200e 	bge	r16,r23,b760 <_strtoll_r+0x184>
    b6e0:	38003b16 	blt	r7,zero,b7d0 <_strtoll_r+0x1f4>
    b6e4:	92c03a36 	bltu	r18,r11,b7d0 <_strtoll_r+0x1f4>
    b6e8:	5c803826 	beq	r11,r18,b7cc <_strtoll_r+0x1f0>
    b6ec:	54404c26 	beq	r10,r17,b820 <_strtoll_r+0x244>
    b6f0:	580b883a 	mov	r5,r11
    b6f4:	5009883a 	mov	r4,r10
    b6f8:	a80d883a 	mov	r6,r21
    b6fc:	b00f883a 	mov	r7,r22
    b700:	000cdec0 	call	cdec <__muldi3>
    b704:	8013d7fa 	srai	r9,r16,31
    b708:	100d883a 	mov	r6,r2
    b70c:	1405883a 	add	r2,r2,r16
    b710:	118d803a 	cmpltu	r6,r2,r6
    b714:	1a47883a 	add	r3,r3,r9
    b718:	30cd883a 	add	r6,r6,r3
    b71c:	1015883a 	mov	r10,r2
    b720:	3017883a 	mov	r11,r6
    b724:	01c00044 	movi	r7,1
    b728:	a4c00007 	ldb	r19,0(r20)
    b72c:	a5000044 	addi	r20,r20,1
    b730:	e4c5883a 	add	r2,fp,r19
    b734:	11000003 	ldbu	r4,0(r2)
    b738:	20c0010c 	andi	r3,r4,4
    b73c:	183fe61e 	bne	r3,zero,b6d8 <_strtoll_r+0xfc>
    b740:	208000cc 	andi	r2,r4,3
    b744:	10000626 	beq	r2,zero,b760 <_strtoll_r+0x184>
    b748:	2080004c 	andi	r2,r4,1
    b74c:	1005003a 	cmpeq	r2,r2,zero
    b750:	1000301e 	bne	r2,zero,b814 <_strtoll_r+0x238>
    b754:	02000dc4 	movi	r8,55
    b758:	9a21c83a 	sub	r16,r19,r8
    b75c:	85ffe016 	blt	r16,r23,b6e0 <_strtoll_r+0x104>
    b760:	38004616 	blt	r7,zero,b87c <_strtoll_r+0x2a0>
    b764:	d8800517 	ldw	r2,20(sp)
    b768:	1000341e 	bne	r2,zero,b83c <_strtoll_r+0x260>
    b76c:	500b883a 	mov	r5,r10
    b770:	580d883a 	mov	r6,r11
    b774:	d8c00417 	ldw	r3,16(sp)
    b778:	18000626 	beq	r3,zero,b794 <_strtoll_r+0x1b8>
    b77c:	38000226 	beq	r7,zero,b788 <_strtoll_r+0x1ac>
    b780:	a53fffc4 	addi	r20,r20,-1
    b784:	dd000315 	stw	r20,12(sp)
    b788:	d8c00317 	ldw	r3,12(sp)
    b78c:	d8800417 	ldw	r2,16(sp)
    b790:	10c00015 	stw	r3,0(r2)
    b794:	2805883a 	mov	r2,r5
    b798:	3007883a 	mov	r3,r6
    b79c:	dfc00f17 	ldw	ra,60(sp)
    b7a0:	df000e17 	ldw	fp,56(sp)
    b7a4:	ddc00d17 	ldw	r23,52(sp)
    b7a8:	dd800c17 	ldw	r22,48(sp)
    b7ac:	dd400b17 	ldw	r21,44(sp)
    b7b0:	dd000a17 	ldw	r20,40(sp)
    b7b4:	dcc00917 	ldw	r19,36(sp)
    b7b8:	dc800817 	ldw	r18,32(sp)
    b7bc:	dc400717 	ldw	r17,28(sp)
    b7c0:	dc000617 	ldw	r16,24(sp)
    b7c4:	dec01004 	addi	sp,sp,64
    b7c8:	f800283a 	ret
    b7cc:	8abfc72e 	bgeu	r17,r10,b6ec <_strtoll_r+0x110>
    b7d0:	01ffffc4 	movi	r7,-1
    b7d4:	003fd406 	br	b728 <_strtoll_r+0x14c>
    b7d8:	00800c04 	movi	r2,48
    b7dc:	98803226 	beq	r19,r2,b8a8 <_strtoll_r+0x2cc>
    b7e0:	183fa026 	beq	r3,zero,b664 <_strtoll_r+0x88>
    b7e4:	00800c04 	movi	r2,48
    b7e8:	98803e26 	beq	r19,r2,b8e4 <_strtoll_r+0x308>
    b7ec:	d8c00117 	ldw	r3,4(sp)
    b7f0:	05c00284 	movi	r23,10
    b7f4:	b82b883a 	mov	r21,r23
    b7f8:	1806c03a 	cmpne	r3,r3,zero
    b7fc:	002d883a 	mov	r22,zero
    b800:	d8c00515 	stw	r3,20(sp)
    b804:	183f9d26 	beq	r3,zero,b67c <_strtoll_r+0xa0>
    b808:	0021883a 	mov	r16,zero
    b80c:	04600034 	movhi	r17,32768
    b810:	003f9d06 	br	b688 <_strtoll_r+0xac>
    b814:	020015c4 	movi	r8,87
    b818:	9a21c83a 	sub	r16,r19,r8
    b81c:	003fcf06 	br	b75c <_strtoll_r+0x180>
    b820:	5cbfb31e 	bne	r11,r18,b6f0 <_strtoll_r+0x114>
    b824:	d8800017 	ldw	r2,0(sp)
    b828:	143fb10e 	bge	r2,r16,b6f0 <_strtoll_r+0x114>
    b82c:	8815883a 	mov	r10,r17
    b830:	9017883a 	mov	r11,r18
    b834:	01ffffc4 	movi	r7,-1
    b838:	003fbb06 	br	b728 <_strtoll_r+0x14c>
    b83c:	0009883a 	mov	r4,zero
    b840:	2285c83a 	sub	r2,r4,r10
    b844:	2089803a 	cmpltu	r4,r4,r2
    b848:	02c7c83a 	sub	r3,zero,r11
    b84c:	1909c83a 	sub	r4,r3,r4
    b850:	100b883a 	mov	r5,r2
    b854:	200d883a 	mov	r6,r4
    b858:	003fc606 	br	b774 <_strtoll_r+0x198>
    b85c:	a4c00007 	ldb	r19,0(r20)
    b860:	a5000044 	addi	r20,r20,1
    b864:	003f7a06 	br	b650 <_strtoll_r+0x74>
    b868:	a4c00007 	ldb	r19,0(r20)
    b86c:	00800044 	movi	r2,1
    b870:	a5000044 	addi	r20,r20,1
    b874:	d8800115 	stw	r2,4(sp)
    b878:	003f7606 	br	b654 <_strtoll_r+0x78>
    b87c:	d8c00117 	ldw	r3,4(sp)
    b880:	1805003a 	cmpeq	r2,r3,zero
    b884:	1000131e 	bne	r2,zero,b8d4 <_strtoll_r+0x2f8>
    b888:	0005883a 	mov	r2,zero
    b88c:	00e00034 	movhi	r3,32768
    b890:	100b883a 	mov	r5,r2
    b894:	180d883a 	mov	r6,r3
    b898:	d8c00217 	ldw	r3,8(sp)
    b89c:	00800884 	movi	r2,34
    b8a0:	18800015 	stw	r2,0(r3)
    b8a4:	003fb306 	br	b774 <_strtoll_r+0x198>
    b8a8:	a1000007 	ldb	r4,0(r20)
    b8ac:	00801e04 	movi	r2,120
    b8b0:	20800226 	beq	r4,r2,b8bc <_strtoll_r+0x2e0>
    b8b4:	00801604 	movi	r2,88
    b8b8:	20bfc91e 	bne	r4,r2,b7e0 <_strtoll_r+0x204>
    b8bc:	a4c00047 	ldb	r19,1(r20)
    b8c0:	05c00404 	movi	r23,16
    b8c4:	b82b883a 	mov	r21,r23
    b8c8:	a5000084 	addi	r20,r20,2
    b8cc:	002d883a 	mov	r22,zero
    b8d0:	003f6606 	br	b66c <_strtoll_r+0x90>
    b8d4:	017fffc4 	movi	r5,-1
    b8d8:	01a00034 	movhi	r6,32768
    b8dc:	31bfffc4 	addi	r6,r6,-1
    b8e0:	003fed06 	br	b898 <_strtoll_r+0x2bc>
    b8e4:	05c00204 	movi	r23,8
    b8e8:	b82b883a 	mov	r21,r23
    b8ec:	002d883a 	mov	r22,zero
    b8f0:	003f5e06 	br	b66c <_strtoll_r+0x90>

0000b8f4 <_strtoul_r>:
    b8f4:	defff604 	addi	sp,sp,-40
    b8f8:	00800074 	movhi	r2,1
    b8fc:	10915604 	addi	r2,r2,17752
    b900:	dd000415 	stw	r20,16(sp)
    b904:	15000017 	ldw	r20,0(r2)
    b908:	ddc00715 	stw	r23,28(sp)
    b90c:	dd800615 	stw	r22,24(sp)
    b910:	dd400515 	stw	r21,20(sp)
    b914:	dc800215 	stw	r18,8(sp)
    b918:	dc000015 	stw	r16,0(sp)
    b91c:	dfc00915 	stw	ra,36(sp)
    b920:	df000815 	stw	fp,32(sp)
    b924:	dcc00315 	stw	r19,12(sp)
    b928:	dc400115 	stw	r17,4(sp)
    b92c:	282b883a 	mov	r21,r5
    b930:	202f883a 	mov	r23,r4
    b934:	302d883a 	mov	r22,r6
    b938:	3825883a 	mov	r18,r7
    b93c:	2821883a 	mov	r16,r5
    b940:	84400007 	ldb	r17,0(r16)
    b944:	84000044 	addi	r16,r16,1
    b948:	a447883a 	add	r3,r20,r17
    b94c:	18800003 	ldbu	r2,0(r3)
    b950:	1080020c 	andi	r2,r2,8
    b954:	103ffa1e 	bne	r2,zero,b940 <_strtoul_r+0x4c>
    b958:	00800b44 	movi	r2,45
    b95c:	88805626 	beq	r17,r2,bab8 <_strtoul_r+0x1c4>
    b960:	00800ac4 	movi	r2,43
    b964:	88805126 	beq	r17,r2,baac <_strtoul_r+0x1b8>
    b968:	0039883a 	mov	fp,zero
    b96c:	9007003a 	cmpeq	r3,r18,zero
    b970:	18003b1e 	bne	r3,zero,ba60 <_strtoul_r+0x16c>
    b974:	00800404 	movi	r2,16
    b978:	90803926 	beq	r18,r2,ba60 <_strtoul_r+0x16c>
    b97c:	013fffc4 	movi	r4,-1
    b980:	900b883a 	mov	r5,r18
    b984:	000ef800 	call	ef80 <__udivsi3>
    b988:	013fffc4 	movi	r4,-1
    b98c:	900b883a 	mov	r5,r18
    b990:	1027883a 	mov	r19,r2
    b994:	000ef880 	call	ef88 <__umodsi3>
    b998:	1011883a 	mov	r8,r2
    b99c:	900f883a 	mov	r7,r18
    b9a0:	a445883a 	add	r2,r20,r17
    b9a4:	11000003 	ldbu	r4,0(r2)
    b9a8:	000b883a 	mov	r5,zero
    b9ac:	000d883a 	mov	r6,zero
    b9b0:	20c0010c 	andi	r3,r4,4
    b9b4:	18000e26 	beq	r3,zero,b9f0 <_strtoul_r+0xfc>
    b9b8:	88fff404 	addi	r3,r17,-48
    b9bc:	1c80140e 	bge	r3,r18,ba10 <_strtoul_r+0x11c>
    b9c0:	30003316 	blt	r6,zero,ba90 <_strtoul_r+0x19c>
    b9c4:	99403236 	bltu	r19,r5,ba90 <_strtoul_r+0x19c>
    b9c8:	2cc03026 	beq	r5,r19,ba8c <_strtoul_r+0x198>
    b9cc:	29c5383a 	mul	r2,r5,r7
    b9d0:	01800044 	movi	r6,1
    b9d4:	10cb883a 	add	r5,r2,r3
    b9d8:	84400007 	ldb	r17,0(r16)
    b9dc:	84000044 	addi	r16,r16,1
    b9e0:	a445883a 	add	r2,r20,r17
    b9e4:	11000003 	ldbu	r4,0(r2)
    b9e8:	20c0010c 	andi	r3,r4,4
    b9ec:	183ff21e 	bne	r3,zero,b9b8 <_strtoul_r+0xc4>
    b9f0:	208000cc 	andi	r2,r4,3
    b9f4:	10000626 	beq	r2,zero,ba10 <_strtoul_r+0x11c>
    b9f8:	2080004c 	andi	r2,r4,1
    b9fc:	1005003a 	cmpeq	r2,r2,zero
    ba00:	1000251e 	bne	r2,zero,ba98 <_strtoul_r+0x1a4>
    ba04:	00800dc4 	movi	r2,55
    ba08:	8887c83a 	sub	r3,r17,r2
    ba0c:	1cbfec16 	blt	r3,r18,b9c0 <_strtoul_r+0xcc>
    ba10:	3000400e 	bge	r6,zero,bb14 <_strtoul_r+0x220>
    ba14:	00800884 	movi	r2,34
    ba18:	017fffc4 	movi	r5,-1
    ba1c:	b8800015 	stw	r2,0(r23)
    ba20:	b0000226 	beq	r22,zero,ba2c <_strtoul_r+0x138>
    ba24:	30001f1e 	bne	r6,zero,baa4 <_strtoul_r+0x1b0>
    ba28:	b5400015 	stw	r21,0(r22)
    ba2c:	2805883a 	mov	r2,r5
    ba30:	dfc00917 	ldw	ra,36(sp)
    ba34:	df000817 	ldw	fp,32(sp)
    ba38:	ddc00717 	ldw	r23,28(sp)
    ba3c:	dd800617 	ldw	r22,24(sp)
    ba40:	dd400517 	ldw	r21,20(sp)
    ba44:	dd000417 	ldw	r20,16(sp)
    ba48:	dcc00317 	ldw	r19,12(sp)
    ba4c:	dc800217 	ldw	r18,8(sp)
    ba50:	dc400117 	ldw	r17,4(sp)
    ba54:	dc000017 	ldw	r16,0(sp)
    ba58:	dec00a04 	addi	sp,sp,40
    ba5c:	f800283a 	ret
    ba60:	00800c04 	movi	r2,48
    ba64:	88801826 	beq	r17,r2,bac8 <_strtoul_r+0x1d4>
    ba68:	183fc426 	beq	r3,zero,b97c <_strtoul_r+0x88>
    ba6c:	00800c04 	movi	r2,48
    ba70:	88802226 	beq	r17,r2,bafc <_strtoul_r+0x208>
    ba74:	04800284 	movi	r18,10
    ba78:	900f883a 	mov	r7,r18
    ba7c:	04c666b4 	movhi	r19,6554
    ba80:	9ce66644 	addi	r19,r19,-26215
    ba84:	02000144 	movi	r8,5
    ba88:	003fc506 	br	b9a0 <_strtoul_r+0xac>
    ba8c:	40ffcf0e 	bge	r8,r3,b9cc <_strtoul_r+0xd8>
    ba90:	01bfffc4 	movi	r6,-1
    ba94:	003fd006 	br	b9d8 <_strtoul_r+0xe4>
    ba98:	008015c4 	movi	r2,87
    ba9c:	8887c83a 	sub	r3,r17,r2
    baa0:	003fda06 	br	ba0c <_strtoul_r+0x118>
    baa4:	857fffc4 	addi	r21,r16,-1
    baa8:	003fdf06 	br	ba28 <_strtoul_r+0x134>
    baac:	84400007 	ldb	r17,0(r16)
    bab0:	84000044 	addi	r16,r16,1
    bab4:	003fac06 	br	b968 <_strtoul_r+0x74>
    bab8:	84400007 	ldb	r17,0(r16)
    babc:	07000044 	movi	fp,1
    bac0:	84000044 	addi	r16,r16,1
    bac4:	003fa906 	br	b96c <_strtoul_r+0x78>
    bac8:	81000007 	ldb	r4,0(r16)
    bacc:	00801e04 	movi	r2,120
    bad0:	20800226 	beq	r4,r2,badc <_strtoul_r+0x1e8>
    bad4:	00801604 	movi	r2,88
    bad8:	20bfe31e 	bne	r4,r2,ba68 <_strtoul_r+0x174>
    badc:	84400047 	ldb	r17,1(r16)
    bae0:	04800404 	movi	r18,16
    bae4:	84000084 	addi	r16,r16,2
    bae8:	900f883a 	mov	r7,r18
    baec:	04c40034 	movhi	r19,4096
    baf0:	9cffffc4 	addi	r19,r19,-1
    baf4:	020003c4 	movi	r8,15
    baf8:	003fa906 	br	b9a0 <_strtoul_r+0xac>
    bafc:	04800204 	movi	r18,8
    bb00:	900f883a 	mov	r7,r18
    bb04:	04c80034 	movhi	r19,8192
    bb08:	9cffffc4 	addi	r19,r19,-1
    bb0c:	020001c4 	movi	r8,7
    bb10:	003fa306 	br	b9a0 <_strtoul_r+0xac>
    bb14:	e005003a 	cmpeq	r2,fp,zero
    bb18:	103fc11e 	bne	r2,zero,ba20 <_strtoul_r+0x12c>
    bb1c:	014bc83a 	sub	r5,zero,r5
    bb20:	003fbf06 	br	ba20 <_strtoul_r+0x12c>

0000bb24 <strtoul>:
    bb24:	00800074 	movhi	r2,1
    bb28:	10915204 	addi	r2,r2,17736
    bb2c:	2013883a 	mov	r9,r4
    bb30:	11000017 	ldw	r4,0(r2)
    bb34:	2805883a 	mov	r2,r5
    bb38:	300f883a 	mov	r7,r6
    bb3c:	480b883a 	mov	r5,r9
    bb40:	100d883a 	mov	r6,r2
    bb44:	000b8f41 	jmpi	b8f4 <_strtoul_r>

0000bb48 <_strtoull_r>:
    bb48:	defff104 	addi	sp,sp,-60
    bb4c:	00800074 	movhi	r2,1
    bb50:	10915604 	addi	r2,r2,17752
    bb54:	df000d15 	stw	fp,52(sp)
    bb58:	17000017 	ldw	fp,0(r2)
    bb5c:	ddc00c15 	stw	r23,48(sp)
    bb60:	dcc00815 	stw	r19,32(sp)
    bb64:	dfc00e15 	stw	ra,56(sp)
    bb68:	dd800b15 	stw	r22,44(sp)
    bb6c:	dd400a15 	stw	r21,40(sp)
    bb70:	dd000915 	stw	r20,36(sp)
    bb74:	dc800715 	stw	r18,28(sp)
    bb78:	dc400615 	stw	r17,24(sp)
    bb7c:	dc000515 	stw	r16,20(sp)
    bb80:	d9400215 	stw	r5,8(sp)
    bb84:	d9000115 	stw	r4,4(sp)
    bb88:	d9800315 	stw	r6,12(sp)
    bb8c:	382f883a 	mov	r23,r7
    bb90:	2827883a 	mov	r19,r5
    bb94:	9d000007 	ldb	r20,0(r19)
    bb98:	9cc00044 	addi	r19,r19,1
    bb9c:	e507883a 	add	r3,fp,r20
    bba0:	18800003 	ldbu	r2,0(r3)
    bba4:	1080020c 	andi	r2,r2,8
    bba8:	103ffa1e 	bne	r2,zero,bb94 <_strtoull_r+0x4c>
    bbac:	00800b44 	movi	r2,45
    bbb0:	a0807a26 	beq	r20,r2,bd9c <_strtoull_r+0x254>
    bbb4:	00800ac4 	movi	r2,43
    bbb8:	a0807526 	beq	r20,r2,bd90 <_strtoull_r+0x248>
    bbbc:	d8000015 	stw	zero,0(sp)
    bbc0:	b807003a 	cmpeq	r3,r23,zero
    bbc4:	18005a1e 	bne	r3,zero,bd30 <_strtoull_r+0x1e8>
    bbc8:	00800404 	movi	r2,16
    bbcc:	b8805826 	beq	r23,r2,bd30 <_strtoull_r+0x1e8>
    bbd0:	b82dd7fa 	srai	r22,r23,31
    bbd4:	043fffc4 	movi	r16,-1
    bbd8:	8009883a 	mov	r4,r16
    bbdc:	800b883a 	mov	r5,r16
    bbe0:	b80d883a 	mov	r6,r23
    bbe4:	b00f883a 	mov	r7,r22
    bbe8:	000cf280 	call	cf28 <__udivdi3>
    bbec:	8009883a 	mov	r4,r16
    bbf0:	800b883a 	mov	r5,r16
    bbf4:	b80d883a 	mov	r6,r23
    bbf8:	b00f883a 	mov	r7,r22
    bbfc:	1023883a 	mov	r17,r2
    bc00:	1825883a 	mov	r18,r3
    bc04:	000d5040 	call	d504 <__umoddi3>
    bc08:	b82b883a 	mov	r21,r23
    bc0c:	1019883a 	mov	r12,r2
    bc10:	e505883a 	add	r2,fp,r20
    bc14:	11000003 	ldbu	r4,0(r2)
    bc18:	0015883a 	mov	r10,zero
    bc1c:	0017883a 	mov	r11,zero
    bc20:	20c0010c 	andi	r3,r4,4
    bc24:	000d883a 	mov	r6,zero
    bc28:	18001c26 	beq	r3,zero,bc9c <_strtoull_r+0x154>
    bc2c:	a43ff404 	addi	r16,r20,-48
    bc30:	85c0220e 	bge	r16,r23,bcbc <_strtoull_r+0x174>
    bc34:	30003c16 	blt	r6,zero,bd28 <_strtoull_r+0x1e0>
    bc38:	92c03b36 	bltu	r18,r11,bd28 <_strtoull_r+0x1e0>
    bc3c:	5c803926 	beq	r11,r18,bd24 <_strtoull_r+0x1dc>
    bc40:	54404c26 	beq	r10,r17,bd74 <_strtoull_r+0x22c>
    bc44:	580b883a 	mov	r5,r11
    bc48:	5009883a 	mov	r4,r10
    bc4c:	a80d883a 	mov	r6,r21
    bc50:	b00f883a 	mov	r7,r22
    bc54:	db000415 	stw	r12,16(sp)
    bc58:	000cdec0 	call	cdec <__muldi3>
    bc5c:	8013d7fa 	srai	r9,r16,31
    bc60:	100d883a 	mov	r6,r2
    bc64:	1405883a 	add	r2,r2,r16
    bc68:	118d803a 	cmpltu	r6,r2,r6
    bc6c:	1a47883a 	add	r3,r3,r9
    bc70:	db000417 	ldw	r12,16(sp)
    bc74:	30cd883a 	add	r6,r6,r3
    bc78:	3017883a 	mov	r11,r6
    bc7c:	1015883a 	mov	r10,r2
    bc80:	01800044 	movi	r6,1
    bc84:	9d000007 	ldb	r20,0(r19)
    bc88:	9cc00044 	addi	r19,r19,1
    bc8c:	e505883a 	add	r2,fp,r20
    bc90:	11000003 	ldbu	r4,0(r2)
    bc94:	20c0010c 	andi	r3,r4,4
    bc98:	183fe41e 	bne	r3,zero,bc2c <_strtoull_r+0xe4>
    bc9c:	208000cc 	andi	r2,r4,3
    bca0:	10000626 	beq	r2,zero,bcbc <_strtoull_r+0x174>
    bca4:	2080004c 	andi	r2,r4,1
    bca8:	1005003a 	cmpeq	r2,r2,zero
    bcac:	10002e1e 	bne	r2,zero,bd68 <_strtoull_r+0x220>
    bcb0:	02000dc4 	movi	r8,55
    bcb4:	a221c83a 	sub	r16,r20,r8
    bcb8:	85ffde16 	blt	r16,r23,bc34 <_strtoull_r+0xec>
    bcbc:	3000530e 	bge	r6,zero,be0c <_strtoull_r+0x2c4>
    bcc0:	d8c00117 	ldw	r3,4(sp)
    bcc4:	02bfffc4 	movi	r10,-1
    bcc8:	00800884 	movi	r2,34
    bccc:	5017883a 	mov	r11,r10
    bcd0:	18800015 	stw	r2,0(r3)
    bcd4:	d8800317 	ldw	r2,12(sp)
    bcd8:	10000426 	beq	r2,zero,bcec <_strtoull_r+0x1a4>
    bcdc:	3000291e 	bne	r6,zero,bd84 <_strtoull_r+0x23c>
    bce0:	d8800217 	ldw	r2,8(sp)
    bce4:	d8c00317 	ldw	r3,12(sp)
    bce8:	18800015 	stw	r2,0(r3)
    bcec:	5005883a 	mov	r2,r10
    bcf0:	5807883a 	mov	r3,r11
    bcf4:	dfc00e17 	ldw	ra,56(sp)
    bcf8:	df000d17 	ldw	fp,52(sp)
    bcfc:	ddc00c17 	ldw	r23,48(sp)
    bd00:	dd800b17 	ldw	r22,44(sp)
    bd04:	dd400a17 	ldw	r21,40(sp)
    bd08:	dd000917 	ldw	r20,36(sp)
    bd0c:	dcc00817 	ldw	r19,32(sp)
    bd10:	dc800717 	ldw	r18,28(sp)
    bd14:	dc400617 	ldw	r17,24(sp)
    bd18:	dc000517 	ldw	r16,20(sp)
    bd1c:	dec00f04 	addi	sp,sp,60
    bd20:	f800283a 	ret
    bd24:	8abfc62e 	bgeu	r17,r10,bc40 <_strtoull_r+0xf8>
    bd28:	01bfffc4 	movi	r6,-1
    bd2c:	003fd506 	br	bc84 <_strtoull_r+0x13c>
    bd30:	00800c04 	movi	r2,48
    bd34:	a0801e26 	beq	r20,r2,bdb0 <_strtoull_r+0x268>
    bd38:	183fa526 	beq	r3,zero,bbd0 <_strtoull_r+0x88>
    bd3c:	00800c04 	movi	r2,48
    bd40:	a0802a26 	beq	r20,r2,bdec <_strtoull_r+0x2a4>
    bd44:	05c00284 	movi	r23,10
    bd48:	b82b883a 	mov	r21,r23
    bd4c:	046666b4 	movhi	r17,39322
    bd50:	8c666644 	addi	r17,r17,-26215
    bd54:	002d883a 	mov	r22,zero
    bd58:	048666b4 	movhi	r18,6554
    bd5c:	94a66644 	addi	r18,r18,-26215
    bd60:	03000144 	movi	r12,5
    bd64:	003faa06 	br	bc10 <_strtoull_r+0xc8>
    bd68:	020015c4 	movi	r8,87
    bd6c:	a221c83a 	sub	r16,r20,r8
    bd70:	003fd106 	br	bcb8 <_strtoull_r+0x170>
    bd74:	5cbfb31e 	bne	r11,r18,bc44 <_strtoull_r+0xfc>
    bd78:	643fb20e 	bge	r12,r16,bc44 <_strtoull_r+0xfc>
    bd7c:	01bfffc4 	movi	r6,-1
    bd80:	003fc006 	br	bc84 <_strtoull_r+0x13c>
    bd84:	9cffffc4 	addi	r19,r19,-1
    bd88:	dcc00215 	stw	r19,8(sp)
    bd8c:	003fd406 	br	bce0 <_strtoull_r+0x198>
    bd90:	9d000007 	ldb	r20,0(r19)
    bd94:	9cc00044 	addi	r19,r19,1
    bd98:	003f8806 	br	bbbc <_strtoull_r+0x74>
    bd9c:	9d000007 	ldb	r20,0(r19)
    bda0:	00800044 	movi	r2,1
    bda4:	9cc00044 	addi	r19,r19,1
    bda8:	d8800015 	stw	r2,0(sp)
    bdac:	003f8406 	br	bbc0 <_strtoull_r+0x78>
    bdb0:	99000007 	ldb	r4,0(r19)
    bdb4:	00801e04 	movi	r2,120
    bdb8:	20800226 	beq	r4,r2,bdc4 <_strtoull_r+0x27c>
    bdbc:	00801604 	movi	r2,88
    bdc0:	20bfdd1e 	bne	r4,r2,bd38 <_strtoull_r+0x1f0>
    bdc4:	9d000047 	ldb	r20,1(r19)
    bdc8:	05c00404 	movi	r23,16
    bdcc:	b82b883a 	mov	r21,r23
    bdd0:	047fffc4 	movi	r17,-1
    bdd4:	9cc00084 	addi	r19,r19,2
    bdd8:	002d883a 	mov	r22,zero
    bddc:	04840034 	movhi	r18,4096
    bde0:	94bfffc4 	addi	r18,r18,-1
    bde4:	030003c4 	movi	r12,15
    bde8:	003f8906 	br	bc10 <_strtoull_r+0xc8>
    bdec:	05c00204 	movi	r23,8
    bdf0:	b82b883a 	mov	r21,r23
    bdf4:	047fffc4 	movi	r17,-1
    bdf8:	002d883a 	mov	r22,zero
    bdfc:	04880034 	movhi	r18,8192
    be00:	94bfffc4 	addi	r18,r18,-1
    be04:	030001c4 	movi	r12,7
    be08:	003f8106 	br	bc10 <_strtoull_r+0xc8>
    be0c:	d8c00017 	ldw	r3,0(sp)
    be10:	1805003a 	cmpeq	r2,r3,zero
    be14:	103faf1e 	bne	r2,zero,bcd4 <_strtoull_r+0x18c>
    be18:	0009883a 	mov	r4,zero
    be1c:	2285c83a 	sub	r2,r4,r10
    be20:	02c7c83a 	sub	r3,zero,r11
    be24:	2089803a 	cmpltu	r4,r4,r2
    be28:	1909c83a 	sub	r4,r3,r4
    be2c:	1015883a 	mov	r10,r2
    be30:	2017883a 	mov	r11,r4
    be34:	003fa706 	br	bcd4 <_strtoull_r+0x18c>

0000be38 <__submore>:
    be38:	defffa04 	addi	sp,sp,-24
    be3c:	28c00c17 	ldw	r3,48(r5)
    be40:	dc800215 	stw	r18,8(sp)
    be44:	2825883a 	mov	r18,r5
    be48:	dc000015 	stw	r16,0(sp)
    be4c:	90801004 	addi	r2,r18,64
    be50:	04010004 	movi	r16,1024
    be54:	dfc00515 	stw	ra,20(sp)
    be58:	dd000415 	stw	r20,16(sp)
    be5c:	dcc00315 	stw	r19,12(sp)
    be60:	dc400115 	stw	r17,4(sp)
    be64:	800b883a 	mov	r5,r16
    be68:	18801b26 	beq	r3,r2,bed8 <__submore+0xa0>
    be6c:	94400d17 	ldw	r17,52(r18)
    be70:	180b883a 	mov	r5,r3
    be74:	8c69883a 	add	r20,r17,r17
    be78:	a00d883a 	mov	r6,r20
    be7c:	00095dc0 	call	95dc <_realloc_r>
    be80:	1467883a 	add	r19,r2,r17
    be84:	1021883a 	mov	r16,r2
    be88:	880d883a 	mov	r6,r17
    be8c:	9809883a 	mov	r4,r19
    be90:	100b883a 	mov	r5,r2
    be94:	10000e26 	beq	r2,zero,bed0 <__submore+0x98>
    be98:	00017300 	call	1730 <memcpy>
    be9c:	000d883a 	mov	r6,zero
    bea0:	95000d15 	stw	r20,52(r18)
    bea4:	94c00015 	stw	r19,0(r18)
    bea8:	94000c15 	stw	r16,48(r18)
    beac:	3005883a 	mov	r2,r6
    beb0:	dfc00517 	ldw	ra,20(sp)
    beb4:	dd000417 	ldw	r20,16(sp)
    beb8:	dcc00317 	ldw	r19,12(sp)
    bebc:	dc800217 	ldw	r18,8(sp)
    bec0:	dc400117 	ldw	r17,4(sp)
    bec4:	dc000017 	ldw	r16,0(sp)
    bec8:	dec00604 	addi	sp,sp,24
    becc:	f800283a 	ret
    bed0:	01bfffc4 	movi	r6,-1
    bed4:	003ff506 	br	beac <__submore+0x74>
    bed8:	0000f0c0 	call	f0c <_malloc_r>
    bedc:	1009883a 	mov	r4,r2
    bee0:	1140ff44 	addi	r5,r2,1021
    bee4:	000d883a 	mov	r6,zero
    bee8:	103ff926 	beq	r2,zero,bed0 <__submore+0x98>
    beec:	90801083 	ldbu	r2,66(r18)
    bef0:	94000d15 	stw	r16,52(r18)
    bef4:	91000c15 	stw	r4,48(r18)
    bef8:	28800085 	stb	r2,2(r5)
    befc:	90c01043 	ldbu	r3,65(r18)
    bf00:	28c00045 	stb	r3,1(r5)
    bf04:	90801003 	ldbu	r2,64(r18)
    bf08:	2080ff45 	stb	r2,1021(r4)
    bf0c:	91400015 	stw	r5,0(r18)
    bf10:	003fe606 	br	beac <__submore+0x74>

0000bf14 <_ungetc_r>:
    bf14:	defffc04 	addi	sp,sp,-16
    bf18:	00bfffc4 	movi	r2,-1
    bf1c:	dc400215 	stw	r17,8(sp)
    bf20:	dc000115 	stw	r16,4(sp)
    bf24:	dfc00315 	stw	ra,12(sp)
    bf28:	2821883a 	mov	r16,r5
    bf2c:	2023883a 	mov	r17,r4
    bf30:	28801826 	beq	r5,r2,bf94 <_ungetc_r+0x80>
    bf34:	20000226 	beq	r4,zero,bf40 <_ungetc_r+0x2c>
    bf38:	20800e17 	ldw	r2,56(r4)
    bf3c:	10001b26 	beq	r2,zero,bfac <_ungetc_r+0x98>
    bf40:	3100030b 	ldhu	r4,12(r6)
    bf44:	00bff7c4 	movi	r2,-33
    bf48:	2084703a 	and	r2,r4,r2
    bf4c:	117fffcc 	andi	r5,r2,65535
    bf50:	28c0010c 	andi	r3,r5,4
    bf54:	1009883a 	mov	r4,r2
    bf58:	3080030d 	sth	r2,12(r6)
    bf5c:	18003526 	beq	r3,zero,c034 <_ungetc_r+0x120>
    bf60:	30800c17 	ldw	r2,48(r6)
    bf64:	84003fcc 	andi	r16,r16,255
    bf68:	10001426 	beq	r2,zero,bfbc <_ungetc_r+0xa8>
    bf6c:	30c00117 	ldw	r3,4(r6)
    bf70:	30800d17 	ldw	r2,52(r6)
    bf74:	1880380e 	bge	r3,r2,c058 <_ungetc_r+0x144>
    bf78:	30c00017 	ldw	r3,0(r6)
    bf7c:	19ffffc4 	addi	r7,r3,-1
    bf80:	31c00015 	stw	r7,0(r6)
    bf84:	1c3fffc5 	stb	r16,-1(r3)
    bf88:	30800117 	ldw	r2,4(r6)
    bf8c:	10800044 	addi	r2,r2,1
    bf90:	30800115 	stw	r2,4(r6)
    bf94:	8005883a 	mov	r2,r16
    bf98:	dfc00317 	ldw	ra,12(sp)
    bf9c:	dc400217 	ldw	r17,8(sp)
    bfa0:	dc000117 	ldw	r16,4(sp)
    bfa4:	dec00404 	addi	sp,sp,16
    bfa8:	f800283a 	ret
    bfac:	d9800015 	stw	r6,0(sp)
    bfb0:	0000b340 	call	b34 <__sinit>
    bfb4:	d9800017 	ldw	r6,0(sp)
    bfb8:	003fe106 	br	bf40 <_ungetc_r+0x2c>
    bfbc:	30800417 	ldw	r2,16(r6)
    bfc0:	10002326 	beq	r2,zero,c050 <_ungetc_r+0x13c>
    bfc4:	31c00017 	ldw	r7,0(r6)
    bfc8:	11c0022e 	bgeu	r2,r7,bfd4 <_ungetc_r+0xc0>
    bfcc:	38bfffc3 	ldbu	r2,-1(r7)
    bfd0:	80801226 	beq	r16,r2,c01c <_ungetc_r+0x108>
    bfd4:	30c00117 	ldw	r3,4(r6)
    bfd8:	00800044 	movi	r2,1
    bfdc:	30800115 	stw	r2,4(r6)
    bfe0:	008000c4 	movi	r2,3
    bfe4:	31001004 	addi	r4,r6,64
    bfe8:	31401084 	addi	r5,r6,66
    bfec:	30800d15 	stw	r2,52(r6)
    bff0:	8005883a 	mov	r2,r16
    bff4:	30c00f15 	stw	r3,60(r6)
    bff8:	31c00e15 	stw	r7,56(r6)
    bffc:	31000c15 	stw	r4,48(r6)
    c000:	31400015 	stw	r5,0(r6)
    c004:	34001085 	stb	r16,66(r6)
    c008:	dfc00317 	ldw	ra,12(sp)
    c00c:	dc400217 	ldw	r17,8(sp)
    c010:	dc000117 	ldw	r16,4(sp)
    c014:	dec00404 	addi	sp,sp,16
    c018:	f800283a 	ret
    c01c:	30800117 	ldw	r2,4(r6)
    c020:	39ffffc4 	addi	r7,r7,-1
    c024:	31c00015 	stw	r7,0(r6)
    c028:	10800044 	addi	r2,r2,1
    c02c:	30800115 	stw	r2,4(r6)
    c030:	003fd806 	br	bf94 <_ungetc_r+0x80>
    c034:	2880040c 	andi	r2,r5,16
    c038:	10000d26 	beq	r2,zero,c070 <_ungetc_r+0x15c>
    c03c:	2880020c 	andi	r2,r5,8
    c040:	10000d1e 	bne	r2,zero,c078 <_ungetc_r+0x164>
    c044:	20800114 	ori	r2,r4,4
    c048:	3080030d 	sth	r2,12(r6)
    c04c:	003fc406 	br	bf60 <_ungetc_r+0x4c>
    c050:	31c00017 	ldw	r7,0(r6)
    c054:	003fdf06 	br	bfd4 <_ungetc_r+0xc0>
    c058:	300b883a 	mov	r5,r6
    c05c:	8809883a 	mov	r4,r17
    c060:	d9800015 	stw	r6,0(sp)
    c064:	000be380 	call	be38 <__submore>
    c068:	d9800017 	ldw	r6,0(sp)
    c06c:	103fc226 	beq	r2,zero,bf78 <_ungetc_r+0x64>
    c070:	043fffc4 	movi	r16,-1
    c074:	003fc706 	br	bf94 <_ungetc_r+0x80>
    c078:	300b883a 	mov	r5,r6
    c07c:	8809883a 	mov	r4,r17
    c080:	d9800015 	stw	r6,0(sp)
    c084:	000734c0 	call	734c <_fflush_r>
    c088:	d9800017 	ldw	r6,0(sp)
    c08c:	103ff81e 	bne	r2,zero,c070 <_ungetc_r+0x15c>
    c090:	3100030b 	ldhu	r4,12(r6)
    c094:	00bffdc4 	movi	r2,-9
    c098:	30000215 	stw	zero,8(r6)
    c09c:	2084703a 	and	r2,r4,r2
    c0a0:	1009883a 	mov	r4,r2
    c0a4:	3080030d 	sth	r2,12(r6)
    c0a8:	30000615 	stw	zero,24(r6)
    c0ac:	003fe506 	br	c044 <_ungetc_r+0x130>

0000c0b0 <ungetc>:
    c0b0:	01800074 	movhi	r6,1
    c0b4:	31915204 	addi	r6,r6,17736
    c0b8:	2007883a 	mov	r3,r4
    c0bc:	31000017 	ldw	r4,0(r6)
    c0c0:	280d883a 	mov	r6,r5
    c0c4:	180b883a 	mov	r5,r3
    c0c8:	000bf141 	jmpi	bf14 <_ungetc_r>

0000c0cc <_calloc_r>:
    c0cc:	298b383a 	mul	r5,r5,r6
    c0d0:	defffe04 	addi	sp,sp,-8
    c0d4:	dc000015 	stw	r16,0(sp)
    c0d8:	dfc00115 	stw	ra,4(sp)
    c0dc:	0000f0c0 	call	f0c <_malloc_r>
    c0e0:	1021883a 	mov	r16,r2
    c0e4:	01c00904 	movi	r7,36
    c0e8:	10000d26 	beq	r2,zero,c120 <_calloc_r+0x54>
    c0ec:	10ffff17 	ldw	r3,-4(r2)
    c0f0:	1009883a 	mov	r4,r2
    c0f4:	00bfff04 	movi	r2,-4
    c0f8:	1886703a 	and	r3,r3,r2
    c0fc:	1887883a 	add	r3,r3,r2
    c100:	180d883a 	mov	r6,r3
    c104:	000b883a 	mov	r5,zero
    c108:	38c01736 	bltu	r7,r3,c168 <_calloc_r+0x9c>
    c10c:	008004c4 	movi	r2,19
    c110:	10c00836 	bltu	r2,r3,c134 <_calloc_r+0x68>
    c114:	20000215 	stw	zero,8(r4)
    c118:	20000015 	stw	zero,0(r4)
    c11c:	20000115 	stw	zero,4(r4)
    c120:	8005883a 	mov	r2,r16
    c124:	dfc00117 	ldw	ra,4(sp)
    c128:	dc000017 	ldw	r16,0(sp)
    c12c:	dec00204 	addi	sp,sp,8
    c130:	f800283a 	ret
    c134:	008006c4 	movi	r2,27
    c138:	80000015 	stw	zero,0(r16)
    c13c:	80000115 	stw	zero,4(r16)
    c140:	81000204 	addi	r4,r16,8
    c144:	10fff32e 	bgeu	r2,r3,c114 <_calloc_r+0x48>
    c148:	80000215 	stw	zero,8(r16)
    c14c:	80000315 	stw	zero,12(r16)
    c150:	81000404 	addi	r4,r16,16
    c154:	19ffef1e 	bne	r3,r7,c114 <_calloc_r+0x48>
    c158:	81000604 	addi	r4,r16,24
    c15c:	80000415 	stw	zero,16(r16)
    c160:	80000515 	stw	zero,20(r16)
    c164:	003feb06 	br	c114 <_calloc_r+0x48>
    c168:	00017d00 	call	17d0 <memset>
    c16c:	8005883a 	mov	r2,r16
    c170:	dfc00117 	ldw	ra,4(sp)
    c174:	dc000017 	ldw	r16,0(sp)
    c178:	dec00204 	addi	sp,sp,8
    c17c:	f800283a 	ret

0000c180 <_fstat_r>:
    c180:	defffd04 	addi	sp,sp,-12
    c184:	dc000015 	stw	r16,0(sp)
    c188:	04000074 	movhi	r16,1
    c18c:	84180804 	addi	r16,r16,24608
    c190:	dc400115 	stw	r17,4(sp)
    c194:	80000015 	stw	zero,0(r16)
    c198:	2023883a 	mov	r17,r4
    c19c:	2809883a 	mov	r4,r5
    c1a0:	300b883a 	mov	r5,r6
    c1a4:	dfc00215 	stw	ra,8(sp)
    c1a8:	000f9a80 	call	f9a8 <fstat>
    c1ac:	1007883a 	mov	r3,r2
    c1b0:	00bfffc4 	movi	r2,-1
    c1b4:	18800626 	beq	r3,r2,c1d0 <_fstat_r+0x50>
    c1b8:	1805883a 	mov	r2,r3
    c1bc:	dfc00217 	ldw	ra,8(sp)
    c1c0:	dc400117 	ldw	r17,4(sp)
    c1c4:	dc000017 	ldw	r16,0(sp)
    c1c8:	dec00304 	addi	sp,sp,12
    c1cc:	f800283a 	ret
    c1d0:	80800017 	ldw	r2,0(r16)
    c1d4:	103ff826 	beq	r2,zero,c1b8 <_fstat_r+0x38>
    c1d8:	88800015 	stw	r2,0(r17)
    c1dc:	1805883a 	mov	r2,r3
    c1e0:	dfc00217 	ldw	ra,8(sp)
    c1e4:	dc400117 	ldw	r17,4(sp)
    c1e8:	dc000017 	ldw	r16,0(sp)
    c1ec:	dec00304 	addi	sp,sp,12
    c1f0:	f800283a 	ret

0000c1f4 <htinit>:
    c1f4:	28800003 	ldbu	r2,0(r5)
    c1f8:	10000626 	beq	r2,zero,c214 <htinit+0x20>
    c1fc:	1105883a 	add	r2,r2,r4
    c200:	11800005 	stb	r6,0(r2)
    c204:	28800043 	ldbu	r2,1(r5)
    c208:	31800044 	addi	r6,r6,1
    c20c:	29400044 	addi	r5,r5,1
    c210:	103ffa1e 	bne	r2,zero,c1fc <htinit+0x8>
    c214:	f800283a 	ret

0000c218 <__hexdig_init>:
    c218:	defffd04 	addi	sp,sp,-12
    c21c:	dc400015 	stw	r17,0(sp)
    c220:	04400074 	movhi	r17,1
    c224:	8c581f04 	addi	r17,r17,24700
    c228:	dcc00115 	stw	r19,4(sp)
    c22c:	8809883a 	mov	r4,r17
    c230:	04c00684 	movi	r19,26
    c234:	01400074 	movhi	r5,1
    c238:	294a6804 	addi	r5,r5,10656
    c23c:	01800404 	movi	r6,16
    c240:	dfc00215 	stw	ra,8(sp)
    c244:	000c1f40 	call	c1f4 <htinit>
    c248:	980d883a 	mov	r6,r19
    c24c:	8809883a 	mov	r4,r17
    c250:	01400074 	movhi	r5,1
    c254:	294a6b04 	addi	r5,r5,10668
    c258:	000c1f40 	call	c1f4 <htinit>
    c25c:	8809883a 	mov	r4,r17
    c260:	980d883a 	mov	r6,r19
    c264:	01400074 	movhi	r5,1
    c268:	294a6d04 	addi	r5,r5,10676
    c26c:	dfc00217 	ldw	ra,8(sp)
    c270:	dcc00117 	ldw	r19,4(sp)
    c274:	dc400017 	ldw	r17,0(sp)
    c278:	dec00304 	addi	sp,sp,12
    c27c:	000c1f41 	jmpi	c1f4 <htinit>

0000c280 <rshift>:
    c280:	2807d17a 	srai	r3,r5,5
    c284:	20800417 	ldw	r2,16(r4)
    c288:	22400504 	addi	r9,r4,20
    c28c:	480f883a 	mov	r7,r9
    c290:	1880190e 	bge	r3,r2,c2f8 <rshift+0x78>
    c294:	1085883a 	add	r2,r2,r2
    c298:	18c7883a 	add	r3,r3,r3
    c29c:	1085883a 	add	r2,r2,r2
    c2a0:	18c7883a 	add	r3,r3,r3
    c2a4:	294007cc 	andi	r5,r5,31
    c2a8:	4891883a 	add	r8,r9,r2
    c2ac:	48cd883a 	add	r6,r9,r3
    c2b0:	28001726 	beq	r5,zero,c310 <rshift+0x90>
    c2b4:	30c00017 	ldw	r3,0(r6)
    c2b8:	00800804 	movi	r2,32
    c2bc:	31800104 	addi	r6,r6,4
    c2c0:	1155c83a 	sub	r10,r2,r5
    c2c4:	1946d83a 	srl	r3,r3,r5
    c2c8:	3200092e 	bgeu	r6,r8,c2f0 <rshift+0x70>
    c2cc:	30800017 	ldw	r2,0(r6)
    c2d0:	1284983a 	sll	r2,r2,r10
    c2d4:	10c4b03a 	or	r2,r2,r3
    c2d8:	38800015 	stw	r2,0(r7)
    c2dc:	30c00017 	ldw	r3,0(r6)
    c2e0:	31800104 	addi	r6,r6,4
    c2e4:	39c00104 	addi	r7,r7,4
    c2e8:	1946d83a 	srl	r3,r3,r5
    c2ec:	323ff736 	bltu	r6,r8,c2cc <rshift+0x4c>
    c2f0:	38c00015 	stw	r3,0(r7)
    c2f4:	18000c1e 	bne	r3,zero,c328 <rshift+0xa8>
    c2f8:	3a45c83a 	sub	r2,r7,r9
    c2fc:	1005d0ba 	srai	r2,r2,2
    c300:	20800415 	stw	r2,16(r4)
    c304:	1000011e 	bne	r2,zero,c30c <rshift+0x8c>
    c308:	20000515 	stw	zero,20(r4)
    c30c:	f800283a 	ret
    c310:	323ff92e 	bgeu	r6,r8,c2f8 <rshift+0x78>
    c314:	30800017 	ldw	r2,0(r6)
    c318:	31800104 	addi	r6,r6,4
    c31c:	38800015 	stw	r2,0(r7)
    c320:	39c00104 	addi	r7,r7,4
    c324:	003ffa06 	br	c310 <rshift+0x90>
    c328:	39c00104 	addi	r7,r7,4
    c32c:	003ff206 	br	c2f8 <rshift+0x78>

0000c330 <__gethex>:
    c330:	defff304 	addi	sp,sp,-52
    c334:	dd400815 	stw	r21,32(sp)
    c338:	dd000715 	stw	r20,28(sp)
    c33c:	dcc00615 	stw	r19,24(sp)
    c340:	dc400415 	stw	r17,16(sp)
    c344:	dfc00c15 	stw	ra,48(sp)
    c348:	df000b15 	stw	fp,44(sp)
    c34c:	ddc00a15 	stw	r23,40(sp)
    c350:	dd800915 	stw	r22,36(sp)
    c354:	dc800515 	stw	r18,20(sp)
    c358:	dc000315 	stw	r16,12(sp)
    c35c:	04400074 	movhi	r17,1
    c360:	8c581f04 	addi	r17,r17,24700
    c364:	88800c03 	ldbu	r2,48(r17)
    c368:	202b883a 	mov	r21,r4
    c36c:	2827883a 	mov	r19,r5
    c370:	3029883a 	mov	r20,r6
    c374:	d9c00115 	stw	r7,4(sp)
    c378:	10006e26 	beq	r2,zero,c534 <__gethex+0x204>
    c37c:	99800017 	ldw	r6,0(r19)
    c380:	00800c04 	movi	r2,48
    c384:	31000083 	ldbu	r4,2(r6)
    c388:	30c00084 	addi	r3,r6,2
    c38c:	20806f1e 	bne	r4,r2,c54c <__gethex+0x21c>
    c390:	200b883a 	mov	r5,r4
    c394:	3007883a 	mov	r3,r6
    c398:	188000c3 	ldbu	r2,3(r3)
    c39c:	18c00044 	addi	r3,r3,1
    c3a0:	1009883a 	mov	r4,r2
    c3a4:	117ffc26 	beq	r2,r5,c398 <__gethex+0x68>
    c3a8:	1997c83a 	sub	r11,r3,r6
    c3ac:	19400084 	addi	r5,r3,2
    c3b0:	2445883a 	add	r2,r4,r17
    c3b4:	10c00003 	ldbu	r3,0(r2)
    c3b8:	18002d26 	beq	r3,zero,c470 <__gethex+0x140>
    c3bc:	29000003 	ldbu	r4,0(r5)
    c3c0:	2825883a 	mov	r18,r5
    c3c4:	000d883a 	mov	r6,zero
    c3c8:	0013883a 	mov	r9,zero
    c3cc:	21003fcc 	andi	r4,r4,255
    c3d0:	2445883a 	add	r2,r4,r17
    c3d4:	10c00003 	ldbu	r3,0(r2)
    c3d8:	18000526 	beq	r3,zero,c3f0 <__gethex+0xc0>
    c3dc:	29400044 	addi	r5,r5,1
    c3e0:	29000003 	ldbu	r4,0(r5)
    c3e4:	2445883a 	add	r2,r4,r17
    c3e8:	10c00003 	ldbu	r3,0(r2)
    c3ec:	183ffb1e 	bne	r3,zero,c3dc <__gethex+0xac>
    c3f0:	00800b84 	movi	r2,46
    c3f4:	20805826 	beq	r4,r2,c558 <__gethex+0x228>
    c3f8:	30007a26 	beq	r6,zero,c5e4 <__gethex+0x2b4>
    c3fc:	2985c83a 	sub	r2,r5,r6
    c400:	1085883a 	add	r2,r2,r2
    c404:	1085883a 	add	r2,r2,r2
    c408:	00adc83a 	sub	r22,zero,r2
    c40c:	2821883a 	mov	r16,r5
    c410:	80c00003 	ldbu	r3,0(r16)
    c414:	00801404 	movi	r2,80
    c418:	18801e26 	beq	r3,r2,c494 <__gethex+0x164>
    c41c:	00801c04 	movi	r2,112
    c420:	18801c26 	beq	r3,r2,c494 <__gethex+0x164>
    c424:	800d883a 	mov	r6,r16
    c428:	4805003a 	cmpeq	r2,r9,zero
    c42c:	99800015 	stw	r6,0(r19)
    c430:	1000861e 	bne	r2,zero,c64c <__gethex+0x31c>
    c434:	58003d26 	beq	r11,zero,c52c <__gethex+0x1fc>
    c438:	0025883a 	mov	r18,zero
    c43c:	9005883a 	mov	r2,r18
    c440:	dfc00c17 	ldw	ra,48(sp)
    c444:	df000b17 	ldw	fp,44(sp)
    c448:	ddc00a17 	ldw	r23,40(sp)
    c44c:	dd800917 	ldw	r22,36(sp)
    c450:	dd400817 	ldw	r21,32(sp)
    c454:	dd000717 	ldw	r20,28(sp)
    c458:	dcc00617 	ldw	r19,24(sp)
    c45c:	dc800517 	ldw	r18,20(sp)
    c460:	dc400417 	ldw	r17,16(sp)
    c464:	dc000317 	ldw	r16,12(sp)
    c468:	dec00d04 	addi	sp,sp,52
    c46c:	f800283a 	ret
    c470:	00800b84 	movi	r2,46
    c474:	20804a26 	beq	r4,r2,c5a0 <__gethex+0x270>
    c478:	2821883a 	mov	r16,r5
    c47c:	80c00003 	ldbu	r3,0(r16)
    c480:	00801404 	movi	r2,80
    c484:	2825883a 	mov	r18,r5
    c488:	02400044 	movi	r9,1
    c48c:	002d883a 	mov	r22,zero
    c490:	18bfe21e 	bne	r3,r2,c41c <__gethex+0xec>
    c494:	80c00043 	ldbu	r3,1(r16)
    c498:	00800ac4 	movi	r2,43
    c49c:	81000044 	addi	r4,r16,1
    c4a0:	18804a26 	beq	r3,r2,c5cc <__gethex+0x29c>
    c4a4:	00800b44 	movi	r2,45
    c4a8:	18804c26 	beq	r3,r2,c5dc <__gethex+0x2ac>
    c4ac:	0015883a 	mov	r10,zero
    c4b0:	1c45883a 	add	r2,r3,r17
    c4b4:	10800003 	ldbu	r2,0(r2)
    c4b8:	103fda26 	beq	r2,zero,c424 <__gethex+0xf4>
    c4bc:	02000644 	movi	r8,25
    c4c0:	40bfd816 	blt	r8,r2,c424 <__gethex+0xf4>
    c4c4:	20c00043 	ldbu	r3,1(r4)
    c4c8:	11fffc04 	addi	r7,r2,-16
    c4cc:	00800074 	movhi	r2,1
    c4d0:	10981f04 	addi	r2,r2,24700
    c4d4:	1887883a 	add	r3,r3,r2
    c4d8:	18800003 	ldbu	r2,0(r3)
    c4dc:	21800044 	addi	r6,r4,1
    c4e0:	10000d26 	beq	r2,zero,c518 <__gethex+0x1e8>
    c4e4:	100b883a 	mov	r5,r2
    c4e8:	4080020e 	bge	r8,r2,c4f4 <__gethex+0x1c4>
    c4ec:	00000a06 	br	c518 <__gethex+0x1e8>
    c4f0:	41000916 	blt	r8,r4,c518 <__gethex+0x1e8>
    c4f4:	31800044 	addi	r6,r6,1
    c4f8:	30800003 	ldbu	r2,0(r6)
    c4fc:	38c002a4 	muli	r3,r7,10
    c500:	1445883a 	add	r2,r2,r17
    c504:	11000003 	ldbu	r4,0(r2)
    c508:	1947883a 	add	r3,r3,r5
    c50c:	19fffc04 	addi	r7,r3,-16
    c510:	200b883a 	mov	r5,r4
    c514:	203ff61e 	bne	r4,zero,c4f0 <__gethex+0x1c0>
    c518:	5005003a 	cmpeq	r2,r10,zero
    c51c:	1000011e 	bne	r2,zero,c524 <__gethex+0x1f4>
    c520:	01cfc83a 	sub	r7,zero,r7
    c524:	b1ed883a 	add	r22,r22,r7
    c528:	003fbf06 	br	c428 <__gethex+0xf8>
    c52c:	04800184 	movi	r18,6
    c530:	003fc206 	br	c43c <__gethex+0x10c>
    c534:	000c2180 	call	c218 <__hexdig_init>
    c538:	99800017 	ldw	r6,0(r19)
    c53c:	00800c04 	movi	r2,48
    c540:	31000083 	ldbu	r4,2(r6)
    c544:	30c00084 	addi	r3,r6,2
    c548:	20bf9126 	beq	r4,r2,c390 <__gethex+0x60>
    c54c:	180b883a 	mov	r5,r3
    c550:	0017883a 	mov	r11,zero
    c554:	003f9606 	br	c3b0 <__gethex+0x80>
    c558:	303fa81e 	bne	r6,zero,c3fc <__gethex+0xcc>
    c55c:	29400044 	addi	r5,r5,1
    c560:	28800003 	ldbu	r2,0(r5)
    c564:	1445883a 	add	r2,r2,r17
    c568:	10c00003 	ldbu	r3,0(r2)
    c56c:	1800ad26 	beq	r3,zero,c824 <__gethex+0x4f4>
    c570:	2809883a 	mov	r4,r5
    c574:	21000044 	addi	r4,r4,1
    c578:	20800003 	ldbu	r2,0(r4)
    c57c:	1445883a 	add	r2,r2,r17
    c580:	10c00003 	ldbu	r3,0(r2)
    c584:	183ffb1e 	bne	r3,zero,c574 <__gethex+0x244>
    c588:	2145c83a 	sub	r2,r4,r5
    c58c:	1085883a 	add	r2,r2,r2
    c590:	1085883a 	add	r2,r2,r2
    c594:	00adc83a 	sub	r22,zero,r2
    c598:	200b883a 	mov	r5,r4
    c59c:	003f9b06 	br	c40c <__gethex+0xdc>
    c5a0:	29000043 	ldbu	r4,1(r5)
    c5a4:	00800074 	movhi	r2,1
    c5a8:	10981f04 	addi	r2,r2,24700
    c5ac:	2c000044 	addi	r16,r5,1
    c5b0:	2085883a 	add	r2,r4,r2
    c5b4:	10c00003 	ldbu	r3,0(r2)
    c5b8:	18000d1e 	bne	r3,zero,c5f0 <__gethex+0x2c0>
    c5bc:	2825883a 	mov	r18,r5
    c5c0:	02400044 	movi	r9,1
    c5c4:	002d883a 	mov	r22,zero
    c5c8:	003f9106 	br	c410 <__gethex+0xe0>
    c5cc:	0015883a 	mov	r10,zero
    c5d0:	21000044 	addi	r4,r4,1
    c5d4:	20c00003 	ldbu	r3,0(r4)
    c5d8:	003fb506 	br	c4b0 <__gethex+0x180>
    c5dc:	02800044 	movi	r10,1
    c5e0:	003ffb06 	br	c5d0 <__gethex+0x2a0>
    c5e4:	2821883a 	mov	r16,r5
    c5e8:	002d883a 	mov	r22,zero
    c5ec:	003f8806 	br	c410 <__gethex+0xe0>
    c5f0:	00800c04 	movi	r2,48
    c5f4:	20800e1e 	bne	r4,r2,c630 <__gethex+0x300>
    c5f8:	2007883a 	mov	r3,r4
    c5fc:	800b883a 	mov	r5,r16
    c600:	29400044 	addi	r5,r5,1
    c604:	29000003 	ldbu	r4,0(r5)
    c608:	20803fcc 	andi	r2,r4,255
    c60c:	10fffc26 	beq	r2,r3,c600 <__gethex+0x2d0>
    c610:	1445883a 	add	r2,r2,r17
    c614:	10c00003 	ldbu	r3,0(r2)
    c618:	1800071e 	bne	r3,zero,c638 <__gethex+0x308>
    c61c:	02c00044 	movi	r11,1
    c620:	800d883a 	mov	r6,r16
    c624:	2825883a 	mov	r18,r5
    c628:	5813883a 	mov	r9,r11
    c62c:	003f6706 	br	c3cc <__gethex+0x9c>
    c630:	81000003 	ldbu	r4,0(r16)
    c634:	800b883a 	mov	r5,r16
    c638:	800d883a 	mov	r6,r16
    c63c:	2825883a 	mov	r18,r5
    c640:	02c00044 	movi	r11,1
    c644:	0013883a 	mov	r9,zero
    c648:	003f6006 	br	c3cc <__gethex+0x9c>
    c64c:	8485c83a 	sub	r2,r16,r18
    c650:	10bfffc4 	addi	r2,r2,-1
    c654:	00c001c4 	movi	r3,7
    c658:	1880700e 	bge	r3,r2,c81c <__gethex+0x4ec>
    c65c:	000b883a 	mov	r5,zero
    c660:	1005d07a 	srai	r2,r2,1
    c664:	29400044 	addi	r5,r5,1
    c668:	18bffd16 	blt	r3,r2,c660 <__gethex+0x330>
    c66c:	a809883a 	mov	r4,r21
    c670:	0008af00 	call	8af0 <_Balloc>
    c674:	1027883a 	mov	r19,r2
    c678:	10800504 	addi	r2,r2,20
    c67c:	d8800215 	stw	r2,8(sp)
    c680:	9400522e 	bgeu	r18,r16,c7cc <__gethex+0x49c>
    c684:	da000217 	ldw	r8,8(sp)
    c688:	800b883a 	mov	r5,r16
    c68c:	000f883a 	mov	r7,zero
    c690:	0009883a 	mov	r4,zero
    c694:	02400b84 	movi	r9,46
    c698:	02800804 	movi	r10,32
    c69c:	297fffc4 	addi	r5,r5,-1
    c6a0:	28c00003 	ldbu	r3,0(r5)
    c6a4:	1a400826 	beq	r3,r9,c6c8 <__gethex+0x398>
    c6a8:	380d883a 	mov	r6,r7
    c6ac:	3a802726 	beq	r7,r10,c74c <__gethex+0x41c>
    c6b0:	39c00104 	addi	r7,r7,4
    c6b4:	1c47883a 	add	r3,r3,r17
    c6b8:	18800003 	ldbu	r2,0(r3)
    c6bc:	108003cc 	andi	r2,r2,15
    c6c0:	1184983a 	sll	r2,r2,r6
    c6c4:	2088b03a 	or	r4,r4,r2
    c6c8:	917ff436 	bltu	r18,r5,c69c <__gethex+0x36c>
    c6cc:	d8c00217 	ldw	r3,8(sp)
    c6d0:	40800104 	addi	r2,r8,4
    c6d4:	41000015 	stw	r4,0(r8)
    c6d8:	10c5c83a 	sub	r2,r2,r3
    c6dc:	1021d0ba 	srai	r16,r2,2
    c6e0:	9c000415 	stw	r16,16(r19)
    c6e4:	00085980 	call	8598 <__hi0bits>
    c6e8:	8006917a 	slli	r3,r16,5
    c6ec:	a5c00017 	ldw	r23,0(r20)
    c6f0:	1885c83a 	sub	r2,r3,r2
    c6f4:	b8801c16 	blt	r23,r2,c768 <__gethex+0x438>
    c6f8:	15c00a16 	blt	r2,r23,c724 <__gethex+0x3f4>
    c6fc:	0039883a 	mov	fp,zero
    c700:	a0800217 	ldw	r2,8(r20)
    c704:	1580340e 	bge	r2,r22,c7d8 <__gethex+0x4a8>
    c708:	a809883a 	mov	r4,r21
    c70c:	980b883a 	mov	r5,r19
    c710:	00085700 	call	8570 <_Bfree>
    c714:	d8c00d17 	ldw	r3,52(sp)
    c718:	048028c4 	movi	r18,163
    c71c:	18000015 	stw	zero,0(r3)
    c720:	003f4606 	br	c43c <__gethex+0x10c>
    c724:	b8a1c83a 	sub	r16,r23,r2
    c728:	980b883a 	mov	r5,r19
    c72c:	a809883a 	mov	r4,r21
    c730:	800d883a 	mov	r6,r16
    c734:	0008eb40 	call	8eb4 <__lshift>
    c738:	1027883a 	mov	r19,r2
    c73c:	b42dc83a 	sub	r22,r22,r16
    c740:	10800504 	addi	r2,r2,20
    c744:	d8800215 	stw	r2,8(sp)
    c748:	003fec06 	br	c6fc <__gethex+0x3cc>
    c74c:	41000015 	stw	r4,0(r8)
    c750:	28c00003 	ldbu	r3,0(r5)
    c754:	01c00104 	movi	r7,4
    c758:	000d883a 	mov	r6,zero
    c75c:	41d1883a 	add	r8,r8,r7
    c760:	0009883a 	mov	r4,zero
    c764:	003fd306 	br	c6b4 <__gethex+0x384>
    c768:	15e1c83a 	sub	r16,r2,r23
    c76c:	9809883a 	mov	r4,r19
    c770:	800b883a 	mov	r5,r16
    c774:	0008a680 	call	8a68 <__any_on>
    c778:	1000061e 	bne	r2,zero,c794 <__gethex+0x464>
    c77c:	0039883a 	mov	fp,zero
    c780:	9809883a 	mov	r4,r19
    c784:	800b883a 	mov	r5,r16
    c788:	000c2800 	call	c280 <rshift>
    c78c:	b42d883a 	add	r22,r22,r16
    c790:	003fdb06 	br	c700 <__gethex+0x3d0>
    c794:	817fffc4 	addi	r5,r16,-1
    c798:	2805d17a 	srai	r2,r5,5
    c79c:	d8c00217 	ldw	r3,8(sp)
    c7a0:	290007cc 	andi	r4,r5,31
    c7a4:	1085883a 	add	r2,r2,r2
    c7a8:	1085883a 	add	r2,r2,r2
    c7ac:	01800044 	movi	r6,1
    c7b0:	10c5883a 	add	r2,r2,r3
    c7b4:	3108983a 	sll	r4,r6,r4
    c7b8:	10c00017 	ldw	r3,0(r2)
    c7bc:	20c8703a 	and	r4,r4,r3
    c7c0:	20001a1e 	bne	r4,zero,c82c <__gethex+0x4fc>
    c7c4:	3039883a 	mov	fp,r6
    c7c8:	003fed06 	br	c780 <__gethex+0x450>
    c7cc:	1011883a 	mov	r8,r2
    c7d0:	0009883a 	mov	r4,zero
    c7d4:	003fbd06 	br	c6cc <__gethex+0x39c>
    c7d8:	a1000117 	ldw	r4,4(r20)
    c7dc:	b1001a16 	blt	r22,r4,c848 <__gethex+0x518>
    c7e0:	04800044 	movi	r18,1
    c7e4:	e0000826 	beq	fp,zero,c808 <__gethex+0x4d8>
    c7e8:	a1000317 	ldw	r4,12(r20)
    c7ec:	00800084 	movi	r2,2
    c7f0:	20809426 	beq	r4,r2,ca44 <__gethex+0x714>
    c7f4:	008000c4 	movi	r2,3
    c7f8:	20805826 	beq	r4,r2,c95c <__gethex+0x62c>
    c7fc:	00800044 	movi	r2,1
    c800:	20803f26 	beq	r4,r2,c900 <__gethex+0x5d0>
    c804:	94800414 	ori	r18,r18,16
    c808:	d8800d17 	ldw	r2,52(sp)
    c80c:	d8c00117 	ldw	r3,4(sp)
    c810:	14c00015 	stw	r19,0(r2)
    c814:	1d800015 	stw	r22,0(r3)
    c818:	003f0806 	br	c43c <__gethex+0x10c>
    c81c:	000b883a 	mov	r5,zero
    c820:	003f9206 	br	c66c <__gethex+0x33c>
    c824:	002d883a 	mov	r22,zero
    c828:	003ef806 	br	c40c <__gethex+0xdc>
    c82c:	3140160e 	bge	r6,r5,c888 <__gethex+0x558>
    c830:	9809883a 	mov	r4,r19
    c834:	817fff84 	addi	r5,r16,-2
    c838:	0008a680 	call	8a68 <__any_on>
    c83c:	10001226 	beq	r2,zero,c888 <__gethex+0x558>
    c840:	070000c4 	movi	fp,3
    c844:	003fce06 	br	c780 <__gethex+0x450>
    c848:	25a3c83a 	sub	r17,r4,r22
    c84c:	8dc01016 	blt	r17,r23,c890 <__gethex+0x560>
    c850:	a0c00317 	ldw	r3,12(r20)
    c854:	00800084 	movi	r2,2
    c858:	18809326 	beq	r3,r2,caa8 <__gethex+0x778>
    c85c:	008000c4 	movi	r2,3
    c860:	18808e26 	beq	r3,r2,ca9c <__gethex+0x76c>
    c864:	00800044 	movi	r2,1
    c868:	18807b26 	beq	r3,r2,ca58 <__gethex+0x728>
    c86c:	a809883a 	mov	r4,r21
    c870:	980b883a 	mov	r5,r19
    c874:	00085700 	call	8570 <_Bfree>
    c878:	d8c00d17 	ldw	r3,52(sp)
    c87c:	04801404 	movi	r18,80
    c880:	18000015 	stw	zero,0(r3)
    c884:	003eed06 	br	c43c <__gethex+0x10c>
    c888:	07000084 	movi	fp,2
    c88c:	003fbc06 	br	c780 <__gethex+0x450>
    c890:	8c3fffc4 	addi	r16,r17,-1
    c894:	e0001426 	beq	fp,zero,c8e8 <__gethex+0x5b8>
    c898:	07000044 	movi	fp,1
    c89c:	8005d17a 	srai	r2,r16,5
    c8a0:	d8c00217 	ldw	r3,8(sp)
    c8a4:	814007cc 	andi	r5,r16,31
    c8a8:	1085883a 	add	r2,r2,r2
    c8ac:	1085883a 	add	r2,r2,r2
    c8b0:	10c5883a 	add	r2,r2,r3
    c8b4:	00c00044 	movi	r3,1
    c8b8:	1946983a 	sll	r3,r3,r5
    c8bc:	11000017 	ldw	r4,0(r2)
    c8c0:	1906703a 	and	r3,r3,r4
    c8c4:	18000126 	beq	r3,zero,c8cc <__gethex+0x59c>
    c8c8:	e7000094 	ori	fp,fp,2
    c8cc:	880b883a 	mov	r5,r17
    c8d0:	9809883a 	mov	r4,r19
    c8d4:	000c2800 	call	c280 <rshift>
    c8d8:	a5800117 	ldw	r22,4(r20)
    c8dc:	bc6fc83a 	sub	r23,r23,r17
    c8e0:	04800084 	movi	r18,2
    c8e4:	003fbf06 	br	c7e4 <__gethex+0x4b4>
    c8e8:	043fec0e 	bge	zero,r16,c89c <__gethex+0x56c>
    c8ec:	9809883a 	mov	r4,r19
    c8f0:	800b883a 	mov	r5,r16
    c8f4:	0008a680 	call	8a68 <__any_on>
    c8f8:	1039883a 	mov	fp,r2
    c8fc:	003fe706 	br	c89c <__gethex+0x56c>
    c900:	e080008c 	andi	r2,fp,2
    c904:	103fbf26 	beq	r2,zero,c804 <__gethex+0x4d4>
    c908:	d8c00217 	ldw	r3,8(sp)
    c90c:	18800017 	ldw	r2,0(r3)
    c910:	e084b03a 	or	r2,fp,r2
    c914:	1104703a 	and	r2,r2,r4
    c918:	103fba26 	beq	r2,zero,c804 <__gethex+0x4d4>
    c91c:	9c000417 	ldw	r16,16(r19)
    c920:	d8c00217 	ldw	r3,8(sp)
    c924:	017fffc4 	movi	r5,-1
    c928:	8405883a 	add	r2,r16,r16
    c92c:	10b9883a 	add	fp,r2,r2
    c930:	1f09883a 	add	r4,r3,fp
    c934:	dc000015 	stw	r16,0(sp)
    c938:	00000306 	br	c948 <__gethex+0x618>
    c93c:	18000015 	stw	zero,0(r3)
    c940:	18c00104 	addi	r3,r3,4
    c944:	1900082e 	bgeu	r3,r4,c968 <__gethex+0x638>
    c948:	18800017 	ldw	r2,0(r3)
    c94c:	117ffb26 	beq	r2,r5,c93c <__gethex+0x60c>
    c950:	10800044 	addi	r2,r2,1
    c954:	18800015 	stw	r2,0(r3)
    c958:	00001f06 	br	c9d8 <__gethex+0x6a8>
    c95c:	d8800e17 	ldw	r2,56(sp)
    c960:	103fa826 	beq	r2,zero,c804 <__gethex+0x4d4>
    c964:	003fed06 	br	c91c <__gethex+0x5ec>
    c968:	98800217 	ldw	r2,8(r19)
    c96c:	80801316 	blt	r16,r2,c9bc <__gethex+0x68c>
    c970:	99400117 	ldw	r5,4(r19)
    c974:	a809883a 	mov	r4,r21
    c978:	29400044 	addi	r5,r5,1
    c97c:	0008af00 	call	8af0 <_Balloc>
    c980:	99800417 	ldw	r6,16(r19)
    c984:	99400304 	addi	r5,r19,12
    c988:	11000304 	addi	r4,r2,12
    c98c:	318d883a 	add	r6,r6,r6
    c990:	318d883a 	add	r6,r6,r6
    c994:	31800204 	addi	r6,r6,8
    c998:	1023883a 	mov	r17,r2
    c99c:	00017300 	call	1730 <memcpy>
    c9a0:	980b883a 	mov	r5,r19
    c9a4:	a809883a 	mov	r4,r21
    c9a8:	00085700 	call	8570 <_Bfree>
    c9ac:	8c000417 	ldw	r16,16(r17)
    c9b0:	88800504 	addi	r2,r17,20
    c9b4:	8827883a 	mov	r19,r17
    c9b8:	d8800215 	stw	r2,8(sp)
    c9bc:	8405883a 	add	r2,r16,r16
    c9c0:	1085883a 	add	r2,r2,r2
    c9c4:	14c5883a 	add	r2,r2,r19
    c9c8:	84000044 	addi	r16,r16,1
    c9cc:	00c00044 	movi	r3,1
    c9d0:	10c00515 	stw	r3,20(r2)
    c9d4:	9c000415 	stw	r16,16(r19)
    c9d8:	00800084 	movi	r2,2
    c9dc:	90801426 	beq	r18,r2,ca30 <__gethex+0x700>
    c9e0:	d8800017 	ldw	r2,0(sp)
    c9e4:	14000b16 	blt	r2,r16,ca14 <__gethex+0x6e4>
    c9e8:	bc0007cc 	andi	r16,r23,31
    c9ec:	8000021e 	bne	r16,zero,c9f8 <__gethex+0x6c8>
    c9f0:	94800814 	ori	r18,r18,32
    c9f4:	003f8406 	br	c808 <__gethex+0x4d8>
    c9f8:	d8c00217 	ldw	r3,8(sp)
    c9fc:	1f05883a 	add	r2,r3,fp
    ca00:	113fff17 	ldw	r4,-4(r2)
    ca04:	00085980 	call	8598 <__hi0bits>
    ca08:	00c00804 	movi	r3,32
    ca0c:	1c07c83a 	sub	r3,r3,r16
    ca10:	10fff70e 	bge	r2,r3,c9f0 <__gethex+0x6c0>
    ca14:	9809883a 	mov	r4,r19
    ca18:	01400044 	movi	r5,1
    ca1c:	000c2800 	call	c280 <rshift>
    ca20:	a0800217 	ldw	r2,8(r20)
    ca24:	b5800044 	addi	r22,r22,1
    ca28:	15bf3716 	blt	r2,r22,c708 <__gethex+0x3d8>
    ca2c:	003ff006 	br	c9f0 <__gethex+0x6c0>
    ca30:	a0800017 	ldw	r2,0(r20)
    ca34:	10bfffc4 	addi	r2,r2,-1
    ca38:	b8801e26 	beq	r23,r2,cab4 <__gethex+0x784>
    ca3c:	04800884 	movi	r18,34
    ca40:	003f7106 	br	c808 <__gethex+0x4d8>
    ca44:	d8c00e17 	ldw	r3,56(sp)
    ca48:	00800044 	movi	r2,1
    ca4c:	10c5c83a 	sub	r2,r2,r3
    ca50:	103f6c26 	beq	r2,zero,c804 <__gethex+0x4d4>
    ca54:	003fb106 	br	c91c <__gethex+0x5ec>
    ca58:	bc7f841e 	bne	r23,r17,c86c <__gethex+0x53c>
    ca5c:	1dc0050e 	bge	r3,r23,ca74 <__gethex+0x744>
    ca60:	b8cbc83a 	sub	r5,r23,r3
    ca64:	9809883a 	mov	r4,r19
    ca68:	0008a680 	call	8a68 <__any_on>
    ca6c:	103f7f26 	beq	r2,zero,c86c <__gethex+0x53c>
    ca70:	a1000117 	ldw	r4,4(r20)
    ca74:	d8800117 	ldw	r2,4(sp)
    ca78:	d8c00217 	ldw	r3,8(sp)
    ca7c:	04000044 	movi	r16,1
    ca80:	11000015 	stw	r4,0(r2)
    ca84:	d8800d17 	ldw	r2,52(sp)
    ca88:	04801884 	movi	r18,98
    ca8c:	1c000015 	stw	r16,0(r3)
    ca90:	14c00015 	stw	r19,0(r2)
    ca94:	9c000415 	stw	r16,16(r19)
    ca98:	003e6806 	br	c43c <__gethex+0x10c>
    ca9c:	d8c00e17 	ldw	r3,56(sp)
    caa0:	183f7226 	beq	r3,zero,c86c <__gethex+0x53c>
    caa4:	003ff306 	br	ca74 <__gethex+0x744>
    caa8:	d8800e17 	ldw	r2,56(sp)
    caac:	103ff126 	beq	r2,zero,ca74 <__gethex+0x744>
    cab0:	003f6e06 	br	c86c <__gethex+0x53c>
    cab4:	b805d17a 	srai	r2,r23,5
    cab8:	d8c00217 	ldw	r3,8(sp)
    cabc:	b94007cc 	andi	r5,r23,31
    cac0:	1085883a 	add	r2,r2,r2
    cac4:	1085883a 	add	r2,r2,r2
    cac8:	10c5883a 	add	r2,r2,r3
    cacc:	00c00044 	movi	r3,1
    cad0:	1946983a 	sll	r3,r3,r5
    cad4:	11000017 	ldw	r4,0(r2)
    cad8:	1906703a 	and	r3,r3,r4
    cadc:	183fd726 	beq	r3,zero,ca3c <__gethex+0x70c>
    cae0:	04800844 	movi	r18,33
    cae4:	003f4806 	br	c808 <__gethex+0x4d8>

0000cae8 <L_shift>:
    cae8:	00800204 	movi	r2,8
    caec:	1185c83a 	sub	r2,r2,r6
    caf0:	1085883a 	add	r2,r2,r2
    caf4:	21c00017 	ldw	r7,0(r4)
    caf8:	1093883a 	add	r9,r2,r2
    cafc:	00800804 	movi	r2,32
    cb00:	200d883a 	mov	r6,r4
    cb04:	1251c83a 	sub	r8,r2,r9
    cb08:	31800104 	addi	r6,r6,4
    cb0c:	3805883a 	mov	r2,r7
    cb10:	31c00017 	ldw	r7,0(r6)
    cb14:	3a08983a 	sll	r4,r7,r8
    cb18:	3a46d83a 	srl	r3,r7,r9
    cb1c:	1104b03a 	or	r2,r2,r4
    cb20:	180f883a 	mov	r7,r3
    cb24:	30bfff15 	stw	r2,-4(r6)
    cb28:	30c00015 	stw	r3,0(r6)
    cb2c:	317ff636 	bltu	r6,r5,cb08 <L_shift+0x20>
    cb30:	f800283a 	ret

0000cb34 <__hexnan>:
    cb34:	defff404 	addi	sp,sp,-48
    cb38:	dd800815 	stw	r22,32(sp)
    cb3c:	05800074 	movhi	r22,1
    cb40:	b5981f04 	addi	r22,r22,24700
    cb44:	b0800c03 	ldbu	r2,48(r22)
    cb48:	dcc00515 	stw	r19,20(sp)
    cb4c:	dc000215 	stw	r16,8(sp)
    cb50:	dfc00b15 	stw	ra,44(sp)
    cb54:	df000a15 	stw	fp,40(sp)
    cb58:	ddc00915 	stw	r23,36(sp)
    cb5c:	dd400715 	stw	r21,28(sp)
    cb60:	dd000615 	stw	r20,24(sp)
    cb64:	dc800415 	stw	r18,16(sp)
    cb68:	dc400315 	stw	r17,12(sp)
    cb6c:	d9000115 	stw	r4,4(sp)
    cb70:	2821883a 	mov	r16,r5
    cb74:	3027883a 	mov	r19,r6
    cb78:	10007426 	beq	r2,zero,cd4c <__hexnan+0x218>
    cb7c:	80c00017 	ldw	r3,0(r16)
    cb80:	1805d17a 	srai	r2,r3,5
    cb84:	18c007cc 	andi	r3,r3,31
    cb88:	1839003a 	cmpeq	fp,r3,zero
    cb8c:	1085883a 	add	r2,r2,r2
    cb90:	1085883a 	add	r2,r2,r2
    cb94:	d8c00015 	stw	r3,0(sp)
    cb98:	14c5883a 	add	r2,r2,r19
    cb9c:	e000011e 	bne	fp,zero,cba4 <__hexnan+0x70>
    cba0:	10800104 	addi	r2,r2,4
    cba4:	d8c00117 	ldw	r3,4(sp)
    cba8:	153fff04 	addi	r20,r2,-4
    cbac:	a021883a 	mov	r16,r20
    cbb0:	1c400017 	ldw	r17,0(r3)
    cbb4:	a02b883a 	mov	r21,r20
    cbb8:	0025883a 	mov	r18,zero
    cbbc:	002f883a 	mov	r23,zero
    cbc0:	000d883a 	mov	r6,zero
    cbc4:	103fff15 	stw	zero,-4(r2)
    cbc8:	8c400044 	addi	r17,r17,1
    cbcc:	89000003 	ldbu	r4,0(r17)
    cbd0:	20000e26 	beq	r4,zero,cc0c <__hexnan+0xd8>
    cbd4:	2585883a 	add	r2,r4,r22
    cbd8:	10c00003 	ldbu	r3,0(r2)
    cbdc:	18002e1e 	bne	r3,zero,cc98 <__hexnan+0x164>
    cbe0:	00800804 	movi	r2,32
    cbe4:	11005536 	bltu	r2,r4,cd3c <__hexnan+0x208>
    cbe8:	bcbff70e 	bge	r23,r18,cbc8 <__hexnan+0x94>
    cbec:	8540022e 	bgeu	r16,r21,cbf8 <__hexnan+0xc4>
    cbf0:	008001c4 	movi	r2,7
    cbf4:	11803c0e 	bge	r2,r6,cce8 <__hexnan+0x1b4>
    cbf8:	9c003536 	bltu	r19,r16,ccd0 <__hexnan+0x19c>
    cbfc:	8c400044 	addi	r17,r17,1
    cc00:	89000003 	ldbu	r4,0(r17)
    cc04:	01800204 	movi	r6,8
    cc08:	203ff21e 	bne	r4,zero,cbd4 <__hexnan+0xa0>
    cc0c:	90004d26 	beq	r18,zero,cd44 <__hexnan+0x210>
    cc10:	85404336 	bltu	r16,r21,cd20 <__hexnan+0x1ec>
    cc14:	9c00382e 	bgeu	r19,r16,ccf8 <__hexnan+0x1c4>
    cc18:	9807883a 	mov	r3,r19
    cc1c:	80800017 	ldw	r2,0(r16)
    cc20:	84000104 	addi	r16,r16,4
    cc24:	18800015 	stw	r2,0(r3)
    cc28:	18c00104 	addi	r3,r3,4
    cc2c:	a43ffb2e 	bgeu	r20,r16,cc1c <__hexnan+0xe8>
    cc30:	18000015 	stw	zero,0(r3)
    cc34:	18c00104 	addi	r3,r3,4
    cc38:	a0fffd2e 	bgeu	r20,r3,cc30 <__hexnan+0xfc>
    cc3c:	a0800017 	ldw	r2,0(r20)
    cc40:	1000071e 	bne	r2,zero,cc60 <__hexnan+0x12c>
    cc44:	9d004326 	beq	r19,r20,cd54 <__hexnan+0x220>
    cc48:	a007883a 	mov	r3,r20
    cc4c:	00000106 	br	cc54 <__hexnan+0x120>
    cc50:	98c04026 	beq	r19,r3,cd54 <__hexnan+0x220>
    cc54:	18ffff04 	addi	r3,r3,-4
    cc58:	18800017 	ldw	r2,0(r3)
    cc5c:	103ffc26 	beq	r2,zero,cc50 <__hexnan+0x11c>
    cc60:	00c00144 	movi	r3,5
    cc64:	1805883a 	mov	r2,r3
    cc68:	dfc00b17 	ldw	ra,44(sp)
    cc6c:	df000a17 	ldw	fp,40(sp)
    cc70:	ddc00917 	ldw	r23,36(sp)
    cc74:	dd800817 	ldw	r22,32(sp)
    cc78:	dd400717 	ldw	r21,28(sp)
    cc7c:	dd000617 	ldw	r20,24(sp)
    cc80:	dcc00517 	ldw	r19,20(sp)
    cc84:	dc800417 	ldw	r18,16(sp)
    cc88:	dc400317 	ldw	r17,12(sp)
    cc8c:	dc000217 	ldw	r16,8(sp)
    cc90:	dec00c04 	addi	sp,sp,48
    cc94:	f800283a 	ret
    cc98:	31800044 	addi	r6,r6,1
    cc9c:	00800204 	movi	r2,8
    cca0:	94800044 	addi	r18,r18,1
    cca4:	1180040e 	bge	r2,r6,ccb8 <__hexnan+0x184>
    cca8:	9c3fc72e 	bgeu	r19,r16,cbc8 <__hexnan+0x94>
    ccac:	843fff04 	addi	r16,r16,-4
    ccb0:	80000015 	stw	zero,0(r16)
    ccb4:	01800044 	movi	r6,1
    ccb8:	80800017 	ldw	r2,0(r16)
    ccbc:	18c003cc 	andi	r3,r3,15
    ccc0:	1004913a 	slli	r2,r2,4
    ccc4:	10c4b03a 	or	r2,r2,r3
    ccc8:	80800015 	stw	r2,0(r16)
    cccc:	003fbe06 	br	cbc8 <__hexnan+0x94>
    ccd0:	843fff04 	addi	r16,r16,-4
    ccd4:	802b883a 	mov	r21,r16
    ccd8:	902f883a 	mov	r23,r18
    ccdc:	000d883a 	mov	r6,zero
    cce0:	80000015 	stw	zero,0(r16)
    cce4:	003fb806 	br	cbc8 <__hexnan+0x94>
    cce8:	8009883a 	mov	r4,r16
    ccec:	a80b883a 	mov	r5,r21
    ccf0:	000cae80 	call	cae8 <L_shift>
    ccf4:	003fc006 	br	cbf8 <__hexnan+0xc4>
    ccf8:	e03fd01e 	bne	fp,zero,cc3c <__hexnan+0x108>
    ccfc:	d8c00017 	ldw	r3,0(sp)
    cd00:	00800804 	movi	r2,32
    cd04:	10c5c83a 	sub	r2,r2,r3
    cd08:	00ffffc4 	movi	r3,-1
    cd0c:	1886d83a 	srl	r3,r3,r2
    cd10:	a0800017 	ldw	r2,0(r20)
    cd14:	10c4703a 	and	r2,r2,r3
    cd18:	a0800015 	stw	r2,0(r20)
    cd1c:	003fc806 	br	cc40 <__hexnan+0x10c>
    cd20:	008001c4 	movi	r2,7
    cd24:	11bfbb16 	blt	r2,r6,cc14 <__hexnan+0xe0>
    cd28:	a80b883a 	mov	r5,r21
    cd2c:	8009883a 	mov	r4,r16
    cd30:	000cae80 	call	cae8 <L_shift>
    cd34:	9c3ff02e 	bgeu	r19,r16,ccf8 <__hexnan+0x1c4>
    cd38:	003fb706 	br	cc18 <__hexnan+0xe4>
    cd3c:	00800a44 	movi	r2,41
    cd40:	20800826 	beq	r4,r2,cd64 <__hexnan+0x230>
    cd44:	00c00104 	movi	r3,4
    cd48:	003fc606 	br	cc64 <__hexnan+0x130>
    cd4c:	000c2180 	call	c218 <__hexdig_init>
    cd50:	003f8a06 	br	cb7c <__hexnan+0x48>
    cd54:	00800044 	movi	r2,1
    cd58:	00c00144 	movi	r3,5
    cd5c:	98800015 	stw	r2,0(r19)
    cd60:	003fc006 	br	cc64 <__hexnan+0x130>
    cd64:	903ff726 	beq	r18,zero,cd44 <__hexnan+0x210>
    cd68:	d8c00117 	ldw	r3,4(sp)
    cd6c:	88800044 	addi	r2,r17,1
    cd70:	18800015 	stw	r2,0(r3)
    cd74:	857fa72e 	bgeu	r16,r21,cc14 <__hexnan+0xe0>
    cd78:	003fe906 	br	cd20 <__hexnan+0x1ec>

0000cd7c <_isatty_r>:
    cd7c:	defffd04 	addi	sp,sp,-12
    cd80:	dc000015 	stw	r16,0(sp)
    cd84:	04000074 	movhi	r16,1
    cd88:	84180804 	addi	r16,r16,24608
    cd8c:	dc400115 	stw	r17,4(sp)
    cd90:	80000015 	stw	zero,0(r16)
    cd94:	2023883a 	mov	r17,r4
    cd98:	2809883a 	mov	r4,r5
    cd9c:	dfc00215 	stw	ra,8(sp)
    cda0:	000fadc0 	call	fadc <isatty>
    cda4:	1007883a 	mov	r3,r2
    cda8:	00bfffc4 	movi	r2,-1
    cdac:	18800626 	beq	r3,r2,cdc8 <_isatty_r+0x4c>
    cdb0:	1805883a 	mov	r2,r3
    cdb4:	dfc00217 	ldw	ra,8(sp)
    cdb8:	dc400117 	ldw	r17,4(sp)
    cdbc:	dc000017 	ldw	r16,0(sp)
    cdc0:	dec00304 	addi	sp,sp,12
    cdc4:	f800283a 	ret
    cdc8:	80800017 	ldw	r2,0(r16)
    cdcc:	103ff826 	beq	r2,zero,cdb0 <_isatty_r+0x34>
    cdd0:	88800015 	stw	r2,0(r17)
    cdd4:	1805883a 	mov	r2,r3
    cdd8:	dfc00217 	ldw	ra,8(sp)
    cddc:	dc400117 	ldw	r17,4(sp)
    cde0:	dc000017 	ldw	r16,0(sp)
    cde4:	dec00304 	addi	sp,sp,12
    cde8:	f800283a 	ret

0000cdec <__muldi3>:
    cdec:	2011883a 	mov	r8,r4
    cdf0:	427fffcc 	andi	r9,r8,65535
    cdf4:	4018d43a 	srli	r12,r8,16
    cdf8:	32bfffcc 	andi	r10,r6,65535
    cdfc:	3016d43a 	srli	r11,r6,16
    ce00:	4a85383a 	mul	r2,r9,r10
    ce04:	6295383a 	mul	r10,r12,r10
    ce08:	4ad3383a 	mul	r9,r9,r11
    ce0c:	113fffcc 	andi	r4,r2,65535
    ce10:	1004d43a 	srli	r2,r2,16
    ce14:	4a93883a 	add	r9,r9,r10
    ce18:	3807883a 	mov	r3,r7
    ce1c:	1245883a 	add	r2,r2,r9
    ce20:	280f883a 	mov	r7,r5
    ce24:	180b883a 	mov	r5,r3
    ce28:	1006943a 	slli	r3,r2,16
    ce2c:	defffd04 	addi	sp,sp,-12
    ce30:	dc800215 	stw	r18,8(sp)
    ce34:	1907883a 	add	r3,r3,r4
    ce38:	dc400115 	stw	r17,4(sp)
    ce3c:	dc000015 	stw	r16,0(sp)
    ce40:	4165383a 	mul	r18,r8,r5
    ce44:	31e3383a 	mul	r17,r6,r7
    ce48:	1012d43a 	srli	r9,r2,16
    ce4c:	62d9383a 	mul	r12,r12,r11
    ce50:	181f883a 	mov	r15,r3
    ce54:	1280022e 	bgeu	r2,r10,ce60 <__muldi3+0x74>
    ce58:	00800074 	movhi	r2,1
    ce5c:	6099883a 	add	r12,r12,r2
    ce60:	624d883a 	add	r6,r12,r9
    ce64:	9187883a 	add	r3,r18,r6
    ce68:	88c7883a 	add	r3,r17,r3
    ce6c:	7805883a 	mov	r2,r15
    ce70:	dc800217 	ldw	r18,8(sp)
    ce74:	dc400117 	ldw	r17,4(sp)
    ce78:	dc000017 	ldw	r16,0(sp)
    ce7c:	dec00304 	addi	sp,sp,12
    ce80:	f800283a 	ret

0000ce84 <__fixunsdfsi>:
    ce84:	defffb04 	addi	sp,sp,-20
    ce88:	dc400115 	stw	r17,4(sp)
    ce8c:	dc000015 	stw	r16,0(sp)
    ce90:	04507834 	movhi	r17,16864
    ce94:	0021883a 	mov	r16,zero
    ce98:	800d883a 	mov	r6,r16
    ce9c:	880f883a 	mov	r7,r17
    cea0:	dcc00315 	stw	r19,12(sp)
    cea4:	dc800215 	stw	r18,8(sp)
    cea8:	2827883a 	mov	r19,r5
    ceac:	2025883a 	mov	r18,r4
    ceb0:	dfc00415 	stw	ra,16(sp)
    ceb4:	000e8d40 	call	e8d4 <__gedf2>
    ceb8:	000d883a 	mov	r6,zero
    cebc:	880f883a 	mov	r7,r17
    cec0:	980b883a 	mov	r5,r19
    cec4:	9009883a 	mov	r4,r18
    cec8:	10000d16 	blt	r2,zero,cf00 <__fixunsdfsi+0x7c>
    cecc:	000e02c0 	call	e02c <__subdf3>
    ced0:	180b883a 	mov	r5,r3
    ced4:	1009883a 	mov	r4,r2
    ced8:	000eb640 	call	eb64 <__fixdfsi>
    cedc:	00e00034 	movhi	r3,32768
    cee0:	10c5883a 	add	r2,r2,r3
    cee4:	dfc00417 	ldw	ra,16(sp)
    cee8:	dcc00317 	ldw	r19,12(sp)
    ceec:	dc800217 	ldw	r18,8(sp)
    cef0:	dc400117 	ldw	r17,4(sp)
    cef4:	dc000017 	ldw	r16,0(sp)
    cef8:	dec00504 	addi	sp,sp,20
    cefc:	f800283a 	ret
    cf00:	980b883a 	mov	r5,r19
    cf04:	9009883a 	mov	r4,r18
    cf08:	000eb640 	call	eb64 <__fixdfsi>
    cf0c:	dfc00417 	ldw	ra,16(sp)
    cf10:	dcc00317 	ldw	r19,12(sp)
    cf14:	dc800217 	ldw	r18,8(sp)
    cf18:	dc400117 	ldw	r17,4(sp)
    cf1c:	dc000017 	ldw	r16,0(sp)
    cf20:	dec00504 	addi	sp,sp,20
    cf24:	f800283a 	ret

0000cf28 <__udivdi3>:
    cf28:	defff004 	addi	sp,sp,-64
    cf2c:	2005883a 	mov	r2,r4
    cf30:	3011883a 	mov	r8,r6
    cf34:	df000e15 	stw	fp,56(sp)
    cf38:	dd000a15 	stw	r20,40(sp)
    cf3c:	dc000615 	stw	r16,24(sp)
    cf40:	dfc00f15 	stw	ra,60(sp)
    cf44:	ddc00d15 	stw	r23,52(sp)
    cf48:	dd800c15 	stw	r22,48(sp)
    cf4c:	dd400b15 	stw	r21,44(sp)
    cf50:	dcc00915 	stw	r19,36(sp)
    cf54:	dc800815 	stw	r18,32(sp)
    cf58:	dc400715 	stw	r17,28(sp)
    cf5c:	4021883a 	mov	r16,r8
    cf60:	1039883a 	mov	fp,r2
    cf64:	2829883a 	mov	r20,r5
    cf68:	38003b1e 	bne	r7,zero,d058 <__udivdi3+0x130>
    cf6c:	2a005c36 	bltu	r5,r8,d0e0 <__udivdi3+0x1b8>
    cf70:	4000a626 	beq	r8,zero,d20c <__udivdi3+0x2e4>
    cf74:	00bfffd4 	movui	r2,65535
    cf78:	14009e36 	bltu	r2,r16,d1f4 <__udivdi3+0x2cc>
    cf7c:	00803fc4 	movi	r2,255
    cf80:	14013d36 	bltu	r2,r16,d478 <__udivdi3+0x550>
    cf84:	000b883a 	mov	r5,zero
    cf88:	0005883a 	mov	r2,zero
    cf8c:	8084d83a 	srl	r2,r16,r2
    cf90:	01000074 	movhi	r4,1
    cf94:	210a7404 	addi	r4,r4,10704
    cf98:	01800804 	movi	r6,32
    cf9c:	1105883a 	add	r2,r2,r4
    cfa0:	10c00003 	ldbu	r3,0(r2)
    cfa4:	28c7883a 	add	r3,r5,r3
    cfa8:	30edc83a 	sub	r22,r6,r3
    cfac:	b000ee1e 	bne	r22,zero,d368 <__udivdi3+0x440>
    cfb0:	802ad43a 	srli	r21,r16,16
    cfb4:	00800044 	movi	r2,1
    cfb8:	a423c83a 	sub	r17,r20,r16
    cfbc:	85ffffcc 	andi	r23,r16,65535
    cfc0:	d8800315 	stw	r2,12(sp)
    cfc4:	8809883a 	mov	r4,r17
    cfc8:	a80b883a 	mov	r5,r21
    cfcc:	000ef800 	call	ef80 <__udivsi3>
    cfd0:	8809883a 	mov	r4,r17
    cfd4:	a80b883a 	mov	r5,r21
    cfd8:	102d883a 	mov	r22,r2
    cfdc:	000ef880 	call	ef88 <__umodsi3>
    cfe0:	1004943a 	slli	r2,r2,16
    cfe4:	e006d43a 	srli	r3,fp,16
    cfe8:	bda3383a 	mul	r17,r23,r22
    cfec:	10c4b03a 	or	r2,r2,r3
    cff0:	1440042e 	bgeu	r2,r17,d004 <__udivdi3+0xdc>
    cff4:	1405883a 	add	r2,r2,r16
    cff8:	b5bfffc4 	addi	r22,r22,-1
    cffc:	14000136 	bltu	r2,r16,d004 <__udivdi3+0xdc>
    d000:	14413d36 	bltu	r2,r17,d4f8 <__udivdi3+0x5d0>
    d004:	1463c83a 	sub	r17,r2,r17
    d008:	8809883a 	mov	r4,r17
    d00c:	a80b883a 	mov	r5,r21
    d010:	000ef800 	call	ef80 <__udivsi3>
    d014:	8809883a 	mov	r4,r17
    d018:	a80b883a 	mov	r5,r21
    d01c:	1029883a 	mov	r20,r2
    d020:	000ef880 	call	ef88 <__umodsi3>
    d024:	1004943a 	slli	r2,r2,16
    d028:	bd09383a 	mul	r4,r23,r20
    d02c:	e0ffffcc 	andi	r3,fp,65535
    d030:	10c4b03a 	or	r2,r2,r3
    d034:	1100042e 	bgeu	r2,r4,d048 <__udivdi3+0x120>
    d038:	8085883a 	add	r2,r16,r2
    d03c:	a53fffc4 	addi	r20,r20,-1
    d040:	14000136 	bltu	r2,r16,d048 <__udivdi3+0x120>
    d044:	11012036 	bltu	r2,r4,d4c8 <__udivdi3+0x5a0>
    d048:	b004943a 	slli	r2,r22,16
    d04c:	d9000317 	ldw	r4,12(sp)
    d050:	a084b03a 	or	r2,r20,r2
    d054:	00001506 	br	d0ac <__udivdi3+0x184>
    d058:	380d883a 	mov	r6,r7
    d05c:	29c06236 	bltu	r5,r7,d1e8 <__udivdi3+0x2c0>
    d060:	00bfffd4 	movui	r2,65535
    d064:	11c05a36 	bltu	r2,r7,d1d0 <__udivdi3+0x2a8>
    d068:	00803fc4 	movi	r2,255
    d06c:	11c0fc36 	bltu	r2,r7,d460 <__udivdi3+0x538>
    d070:	000b883a 	mov	r5,zero
    d074:	0005883a 	mov	r2,zero
    d078:	3084d83a 	srl	r2,r6,r2
    d07c:	01000074 	movhi	r4,1
    d080:	210a7404 	addi	r4,r4,10704
    d084:	01c00804 	movi	r7,32
    d088:	1105883a 	add	r2,r2,r4
    d08c:	10c00003 	ldbu	r3,0(r2)
    d090:	28c7883a 	add	r3,r5,r3
    d094:	38efc83a 	sub	r23,r7,r3
    d098:	b800691e 	bne	r23,zero,d240 <__udivdi3+0x318>
    d09c:	35000136 	bltu	r6,r20,d0a4 <__udivdi3+0x17c>
    d0a0:	e4005136 	bltu	fp,r16,d1e8 <__udivdi3+0x2c0>
    d0a4:	00800044 	movi	r2,1
    d0a8:	0009883a 	mov	r4,zero
    d0ac:	2007883a 	mov	r3,r4
    d0b0:	dfc00f17 	ldw	ra,60(sp)
    d0b4:	df000e17 	ldw	fp,56(sp)
    d0b8:	ddc00d17 	ldw	r23,52(sp)
    d0bc:	dd800c17 	ldw	r22,48(sp)
    d0c0:	dd400b17 	ldw	r21,44(sp)
    d0c4:	dd000a17 	ldw	r20,40(sp)
    d0c8:	dcc00917 	ldw	r19,36(sp)
    d0cc:	dc800817 	ldw	r18,32(sp)
    d0d0:	dc400717 	ldw	r17,28(sp)
    d0d4:	dc000617 	ldw	r16,24(sp)
    d0d8:	dec01004 	addi	sp,sp,64
    d0dc:	f800283a 	ret
    d0e0:	00bfffd4 	movui	r2,65535
    d0e4:	12005036 	bltu	r2,r8,d228 <__udivdi3+0x300>
    d0e8:	00803fc4 	movi	r2,255
    d0ec:	1200e836 	bltu	r2,r8,d490 <__udivdi3+0x568>
    d0f0:	000b883a 	mov	r5,zero
    d0f4:	0005883a 	mov	r2,zero
    d0f8:	8084d83a 	srl	r2,r16,r2
    d0fc:	01000074 	movhi	r4,1
    d100:	210a7404 	addi	r4,r4,10704
    d104:	01800804 	movi	r6,32
    d108:	1105883a 	add	r2,r2,r4
    d10c:	10c00003 	ldbu	r3,0(r2)
    d110:	28c7883a 	add	r3,r5,r3
    d114:	30cbc83a 	sub	r5,r6,r3
    d118:	28000626 	beq	r5,zero,d134 <__udivdi3+0x20c>
    d11c:	3145c83a 	sub	r2,r6,r5
    d120:	e084d83a 	srl	r2,fp,r2
    d124:	a146983a 	sll	r3,r20,r5
    d128:	e178983a 	sll	fp,fp,r5
    d12c:	8160983a 	sll	r16,r16,r5
    d130:	18a8b03a 	or	r20,r3,r2
    d134:	802ad43a 	srli	r21,r16,16
    d138:	a009883a 	mov	r4,r20
    d13c:	85ffffcc 	andi	r23,r16,65535
    d140:	a80b883a 	mov	r5,r21
    d144:	000ef800 	call	ef80 <__udivsi3>
    d148:	a009883a 	mov	r4,r20
    d14c:	a80b883a 	mov	r5,r21
    d150:	102d883a 	mov	r22,r2
    d154:	000ef880 	call	ef88 <__umodsi3>
    d158:	1004943a 	slli	r2,r2,16
    d15c:	e006d43a 	srli	r3,fp,16
    d160:	bda3383a 	mul	r17,r23,r22
    d164:	10c4b03a 	or	r2,r2,r3
    d168:	1440042e 	bgeu	r2,r17,d17c <__udivdi3+0x254>
    d16c:	1405883a 	add	r2,r2,r16
    d170:	b5bfffc4 	addi	r22,r22,-1
    d174:	14000136 	bltu	r2,r16,d17c <__udivdi3+0x254>
    d178:	1440d536 	bltu	r2,r17,d4d0 <__udivdi3+0x5a8>
    d17c:	1463c83a 	sub	r17,r2,r17
    d180:	8809883a 	mov	r4,r17
    d184:	a80b883a 	mov	r5,r21
    d188:	000ef800 	call	ef80 <__udivsi3>
    d18c:	8809883a 	mov	r4,r17
    d190:	a80b883a 	mov	r5,r21
    d194:	1029883a 	mov	r20,r2
    d198:	000ef880 	call	ef88 <__umodsi3>
    d19c:	1004943a 	slli	r2,r2,16
    d1a0:	bd09383a 	mul	r4,r23,r20
    d1a4:	e0ffffcc 	andi	r3,fp,65535
    d1a8:	10c4b03a 	or	r2,r2,r3
    d1ac:	1100042e 	bgeu	r2,r4,d1c0 <__udivdi3+0x298>
    d1b0:	8085883a 	add	r2,r16,r2
    d1b4:	a53fffc4 	addi	r20,r20,-1
    d1b8:	14000136 	bltu	r2,r16,d1c0 <__udivdi3+0x298>
    d1bc:	1100c736 	bltu	r2,r4,d4dc <__udivdi3+0x5b4>
    d1c0:	b004943a 	slli	r2,r22,16
    d1c4:	0009883a 	mov	r4,zero
    d1c8:	a084b03a 	or	r2,r20,r2
    d1cc:	003fb706 	br	d0ac <__udivdi3+0x184>
    d1d0:	00804034 	movhi	r2,256
    d1d4:	10bfffc4 	addi	r2,r2,-1
    d1d8:	11c0a436 	bltu	r2,r7,d46c <__udivdi3+0x544>
    d1dc:	01400404 	movi	r5,16
    d1e0:	2805883a 	mov	r2,r5
    d1e4:	003fa406 	br	d078 <__udivdi3+0x150>
    d1e8:	0005883a 	mov	r2,zero
    d1ec:	0009883a 	mov	r4,zero
    d1f0:	003fae06 	br	d0ac <__udivdi3+0x184>
    d1f4:	00804034 	movhi	r2,256
    d1f8:	10bfffc4 	addi	r2,r2,-1
    d1fc:	1400a136 	bltu	r2,r16,d484 <__udivdi3+0x55c>
    d200:	01400404 	movi	r5,16
    d204:	2805883a 	mov	r2,r5
    d208:	003f6006 	br	cf8c <__udivdi3+0x64>
    d20c:	01000044 	movi	r4,1
    d210:	000b883a 	mov	r5,zero
    d214:	000ef800 	call	ef80 <__udivsi3>
    d218:	1021883a 	mov	r16,r2
    d21c:	00bfffd4 	movui	r2,65535
    d220:	143ff436 	bltu	r2,r16,d1f4 <__udivdi3+0x2cc>
    d224:	003f5506 	br	cf7c <__udivdi3+0x54>
    d228:	00804034 	movhi	r2,256
    d22c:	10bfffc4 	addi	r2,r2,-1
    d230:	12009a36 	bltu	r2,r8,d49c <__udivdi3+0x574>
    d234:	01400404 	movi	r5,16
    d238:	2805883a 	mov	r2,r5
    d23c:	003fae06 	br	d0f8 <__udivdi3+0x1d0>
    d240:	3dc5c83a 	sub	r2,r7,r23
    d244:	35c8983a 	sll	r4,r6,r23
    d248:	8086d83a 	srl	r3,r16,r2
    d24c:	a0a2d83a 	srl	r17,r20,r2
    d250:	e084d83a 	srl	r2,fp,r2
    d254:	20eab03a 	or	r21,r4,r3
    d258:	a82cd43a 	srli	r22,r21,16
    d25c:	a5c6983a 	sll	r3,r20,r23
    d260:	8809883a 	mov	r4,r17
    d264:	b00b883a 	mov	r5,r22
    d268:	1886b03a 	or	r3,r3,r2
    d26c:	d8c00215 	stw	r3,8(sp)
    d270:	000ef800 	call	ef80 <__udivsi3>
    d274:	8809883a 	mov	r4,r17
    d278:	b00b883a 	mov	r5,r22
    d27c:	1029883a 	mov	r20,r2
    d280:	000ef880 	call	ef88 <__umodsi3>
    d284:	a8ffffcc 	andi	r3,r21,65535
    d288:	d8c00515 	stw	r3,20(sp)
    d28c:	d9000217 	ldw	r4,8(sp)
    d290:	d9400517 	ldw	r5,20(sp)
    d294:	1004943a 	slli	r2,r2,16
    d298:	2006d43a 	srli	r3,r4,16
    d29c:	85e0983a 	sll	r16,r16,r23
    d2a0:	2d23383a 	mul	r17,r5,r20
    d2a4:	10c4b03a 	or	r2,r2,r3
    d2a8:	dc000015 	stw	r16,0(sp)
    d2ac:	1440032e 	bgeu	r2,r17,d2bc <__udivdi3+0x394>
    d2b0:	1545883a 	add	r2,r2,r21
    d2b4:	a53fffc4 	addi	r20,r20,-1
    d2b8:	15407f2e 	bgeu	r2,r21,d4b8 <__udivdi3+0x590>
    d2bc:	1463c83a 	sub	r17,r2,r17
    d2c0:	8809883a 	mov	r4,r17
    d2c4:	b00b883a 	mov	r5,r22
    d2c8:	000ef800 	call	ef80 <__udivsi3>
    d2cc:	8809883a 	mov	r4,r17
    d2d0:	b00b883a 	mov	r5,r22
    d2d4:	1021883a 	mov	r16,r2
    d2d8:	000ef880 	call	ef88 <__umodsi3>
    d2dc:	d8c00517 	ldw	r3,20(sp)
    d2e0:	d9000217 	ldw	r4,8(sp)
    d2e4:	1004943a 	slli	r2,r2,16
    d2e8:	1c0f383a 	mul	r7,r3,r16
    d2ec:	20ffffcc 	andi	r3,r4,65535
    d2f0:	10e2b03a 	or	r17,r2,r3
    d2f4:	89c0032e 	bgeu	r17,r7,d304 <__udivdi3+0x3dc>
    d2f8:	8d63883a 	add	r17,r17,r21
    d2fc:	843fffc4 	addi	r16,r16,-1
    d300:	8d40692e 	bgeu	r17,r21,d4a8 <__udivdi3+0x580>
    d304:	a008943a 	slli	r4,r20,16
    d308:	d9400017 	ldw	r5,0(sp)
    d30c:	89e3c83a 	sub	r17,r17,r7
    d310:	8110b03a 	or	r8,r16,r4
    d314:	280cd43a 	srli	r6,r5,16
    d318:	28ffffcc 	andi	r3,r5,65535
    d31c:	40bfffcc 	andi	r2,r8,65535
    d320:	400ad43a 	srli	r5,r8,16
    d324:	10d3383a 	mul	r9,r2,r3
    d328:	1185383a 	mul	r2,r2,r6
    d32c:	28c7383a 	mul	r3,r5,r3
    d330:	4808d43a 	srli	r4,r9,16
    d334:	298b383a 	mul	r5,r5,r6
    d338:	10c5883a 	add	r2,r2,r3
    d33c:	2089883a 	add	r4,r4,r2
    d340:	20c0022e 	bgeu	r4,r3,d34c <__udivdi3+0x424>
    d344:	00800074 	movhi	r2,1
    d348:	288b883a 	add	r5,r5,r2
    d34c:	2004d43a 	srli	r2,r4,16
    d350:	288b883a 	add	r5,r5,r2
    d354:	89403f36 	bltu	r17,r5,d454 <__udivdi3+0x52c>
    d358:	89403926 	beq	r17,r5,d440 <__udivdi3+0x518>
    d35c:	4005883a 	mov	r2,r8
    d360:	0009883a 	mov	r4,zero
    d364:	003f5106 	br	d0ac <__udivdi3+0x184>
    d368:	85a0983a 	sll	r16,r16,r22
    d36c:	3585c83a 	sub	r2,r6,r22
    d370:	a0a2d83a 	srl	r17,r20,r2
    d374:	802ad43a 	srli	r21,r16,16
    d378:	e084d83a 	srl	r2,fp,r2
    d37c:	a586983a 	sll	r3,r20,r22
    d380:	8809883a 	mov	r4,r17
    d384:	a80b883a 	mov	r5,r21
    d388:	1886b03a 	or	r3,r3,r2
    d38c:	d8c00115 	stw	r3,4(sp)
    d390:	000ef800 	call	ef80 <__udivsi3>
    d394:	8809883a 	mov	r4,r17
    d398:	a80b883a 	mov	r5,r21
    d39c:	d8800415 	stw	r2,16(sp)
    d3a0:	000ef880 	call	ef88 <__umodsi3>
    d3a4:	d9000117 	ldw	r4,4(sp)
    d3a8:	d9400417 	ldw	r5,16(sp)
    d3ac:	1004943a 	slli	r2,r2,16
    d3b0:	85ffffcc 	andi	r23,r16,65535
    d3b4:	2006d43a 	srli	r3,r4,16
    d3b8:	b963383a 	mul	r17,r23,r5
    d3bc:	10c4b03a 	or	r2,r2,r3
    d3c0:	1440042e 	bgeu	r2,r17,d3d4 <__udivdi3+0x4ac>
    d3c4:	297fffc4 	addi	r5,r5,-1
    d3c8:	1405883a 	add	r2,r2,r16
    d3cc:	d9400415 	stw	r5,16(sp)
    d3d0:	1400442e 	bgeu	r2,r16,d4e4 <__udivdi3+0x5bc>
    d3d4:	1463c83a 	sub	r17,r2,r17
    d3d8:	8809883a 	mov	r4,r17
    d3dc:	a80b883a 	mov	r5,r21
    d3e0:	000ef800 	call	ef80 <__udivsi3>
    d3e4:	8809883a 	mov	r4,r17
    d3e8:	a80b883a 	mov	r5,r21
    d3ec:	1029883a 	mov	r20,r2
    d3f0:	000ef880 	call	ef88 <__umodsi3>
    d3f4:	d9400117 	ldw	r5,4(sp)
    d3f8:	1004943a 	slli	r2,r2,16
    d3fc:	bd09383a 	mul	r4,r23,r20
    d400:	28ffffcc 	andi	r3,r5,65535
    d404:	10c6b03a 	or	r3,r2,r3
    d408:	1900062e 	bgeu	r3,r4,d424 <__udivdi3+0x4fc>
    d40c:	1c07883a 	add	r3,r3,r16
    d410:	a53fffc4 	addi	r20,r20,-1
    d414:	1c000336 	bltu	r3,r16,d424 <__udivdi3+0x4fc>
    d418:	1900022e 	bgeu	r3,r4,d424 <__udivdi3+0x4fc>
    d41c:	a53fffc4 	addi	r20,r20,-1
    d420:	1c07883a 	add	r3,r3,r16
    d424:	d9400417 	ldw	r5,16(sp)
    d428:	e5b8983a 	sll	fp,fp,r22
    d42c:	1923c83a 	sub	r17,r3,r4
    d430:	2804943a 	slli	r2,r5,16
    d434:	a0a8b03a 	or	r20,r20,r2
    d438:	dd000315 	stw	r20,12(sp)
    d43c:	003ee106 	br	cfc4 <__udivdi3+0x9c>
    d440:	2004943a 	slli	r2,r4,16
    d444:	e5c8983a 	sll	r4,fp,r23
    d448:	48ffffcc 	andi	r3,r9,65535
    d44c:	10c5883a 	add	r2,r2,r3
    d450:	20bfc22e 	bgeu	r4,r2,d35c <__udivdi3+0x434>
    d454:	40bfffc4 	addi	r2,r8,-1
    d458:	0009883a 	mov	r4,zero
    d45c:	003f1306 	br	d0ac <__udivdi3+0x184>
    d460:	01400204 	movi	r5,8
    d464:	2805883a 	mov	r2,r5
    d468:	003f0306 	br	d078 <__udivdi3+0x150>
    d46c:	01400604 	movi	r5,24
    d470:	2805883a 	mov	r2,r5
    d474:	003f0006 	br	d078 <__udivdi3+0x150>
    d478:	01400204 	movi	r5,8
    d47c:	2805883a 	mov	r2,r5
    d480:	003ec206 	br	cf8c <__udivdi3+0x64>
    d484:	01400604 	movi	r5,24
    d488:	2805883a 	mov	r2,r5
    d48c:	003ebf06 	br	cf8c <__udivdi3+0x64>
    d490:	01400204 	movi	r5,8
    d494:	2805883a 	mov	r2,r5
    d498:	003f1706 	br	d0f8 <__udivdi3+0x1d0>
    d49c:	01400604 	movi	r5,24
    d4a0:	2805883a 	mov	r2,r5
    d4a4:	003f1406 	br	d0f8 <__udivdi3+0x1d0>
    d4a8:	89ff962e 	bgeu	r17,r7,d304 <__udivdi3+0x3dc>
    d4ac:	8d63883a 	add	r17,r17,r21
    d4b0:	843fffc4 	addi	r16,r16,-1
    d4b4:	003f9306 	br	d304 <__udivdi3+0x3dc>
    d4b8:	147f802e 	bgeu	r2,r17,d2bc <__udivdi3+0x394>
    d4bc:	a53fffc4 	addi	r20,r20,-1
    d4c0:	1545883a 	add	r2,r2,r21
    d4c4:	003f7d06 	br	d2bc <__udivdi3+0x394>
    d4c8:	a53fffc4 	addi	r20,r20,-1
    d4cc:	003ede06 	br	d048 <__udivdi3+0x120>
    d4d0:	b5bfffc4 	addi	r22,r22,-1
    d4d4:	1405883a 	add	r2,r2,r16
    d4d8:	003f2806 	br	d17c <__udivdi3+0x254>
    d4dc:	a53fffc4 	addi	r20,r20,-1
    d4e0:	003f3706 	br	d1c0 <__udivdi3+0x298>
    d4e4:	147fbb2e 	bgeu	r2,r17,d3d4 <__udivdi3+0x4ac>
    d4e8:	297fffc4 	addi	r5,r5,-1
    d4ec:	1405883a 	add	r2,r2,r16
    d4f0:	d9400415 	stw	r5,16(sp)
    d4f4:	003fb706 	br	d3d4 <__udivdi3+0x4ac>
    d4f8:	b5bfffc4 	addi	r22,r22,-1
    d4fc:	1405883a 	add	r2,r2,r16
    d500:	003ec006 	br	d004 <__udivdi3+0xdc>

0000d504 <__umoddi3>:
    d504:	defff104 	addi	sp,sp,-60
    d508:	dd800b15 	stw	r22,44(sp)
    d50c:	dd000915 	stw	r20,36(sp)
    d510:	dc000515 	stw	r16,20(sp)
    d514:	dfc00e15 	stw	ra,56(sp)
    d518:	df000d15 	stw	fp,52(sp)
    d51c:	ddc00c15 	stw	r23,48(sp)
    d520:	dd400a15 	stw	r21,40(sp)
    d524:	dcc00815 	stw	r19,32(sp)
    d528:	dc800715 	stw	r18,28(sp)
    d52c:	dc400615 	stw	r17,24(sp)
    d530:	3021883a 	mov	r16,r6
    d534:	202d883a 	mov	r22,r4
    d538:	2829883a 	mov	r20,r5
    d53c:	38002b1e 	bne	r7,zero,d5ec <__umoddi3+0xe8>
    d540:	29805036 	bltu	r5,r6,d684 <__umoddi3+0x180>
    d544:	30008a26 	beq	r6,zero,d770 <__umoddi3+0x26c>
    d548:	00bfffd4 	movui	r2,65535
    d54c:	14008236 	bltu	r2,r16,d758 <__umoddi3+0x254>
    d550:	00803fc4 	movi	r2,255
    d554:	14013636 	bltu	r2,r16,da30 <__umoddi3+0x52c>
    d558:	000b883a 	mov	r5,zero
    d55c:	0005883a 	mov	r2,zero
    d560:	8084d83a 	srl	r2,r16,r2
    d564:	01000074 	movhi	r4,1
    d568:	210a7404 	addi	r4,r4,10704
    d56c:	01800804 	movi	r6,32
    d570:	1105883a 	add	r2,r2,r4
    d574:	10c00003 	ldbu	r3,0(r2)
    d578:	28c7883a 	add	r3,r5,r3
    d57c:	30efc83a 	sub	r23,r6,r3
    d580:	b800941e 	bne	r23,zero,d7d4 <__umoddi3+0x2d0>
    d584:	802ad43a 	srli	r21,r16,16
    d588:	a423c83a 	sub	r17,r20,r16
    d58c:	0039883a 	mov	fp,zero
    d590:	853fffcc 	andi	r20,r16,65535
    d594:	8809883a 	mov	r4,r17
    d598:	a80b883a 	mov	r5,r21
    d59c:	000ef800 	call	ef80 <__udivsi3>
    d5a0:	8809883a 	mov	r4,r17
    d5a4:	a80b883a 	mov	r5,r21
    d5a8:	a0a3383a 	mul	r17,r20,r2
    d5ac:	000ef880 	call	ef88 <__umodsi3>
    d5b0:	1004943a 	slli	r2,r2,16
    d5b4:	b006d43a 	srli	r3,r22,16
    d5b8:	10c4b03a 	or	r2,r2,r3
    d5bc:	1440032e 	bgeu	r2,r17,d5cc <__umoddi3+0xc8>
    d5c0:	1405883a 	add	r2,r2,r16
    d5c4:	14000136 	bltu	r2,r16,d5cc <__umoddi3+0xc8>
    d5c8:	14413536 	bltu	r2,r17,daa0 <__umoddi3+0x59c>
    d5cc:	1463c83a 	sub	r17,r2,r17
    d5d0:	8809883a 	mov	r4,r17
    d5d4:	a80b883a 	mov	r5,r21
    d5d8:	000ef800 	call	ef80 <__udivsi3>
    d5dc:	8809883a 	mov	r4,r17
    d5e0:	a0a3383a 	mul	r17,r20,r2
    d5e4:	a80b883a 	mov	r5,r21
    d5e8:	00004d06 	br	d720 <__umoddi3+0x21c>
    d5ec:	380d883a 	mov	r6,r7
    d5f0:	29c0102e 	bgeu	r5,r7,d634 <__umoddi3+0x130>
    d5f4:	2011883a 	mov	r8,r4
    d5f8:	2813883a 	mov	r9,r5
    d5fc:	4005883a 	mov	r2,r8
    d600:	4807883a 	mov	r3,r9
    d604:	dfc00e17 	ldw	ra,56(sp)
    d608:	df000d17 	ldw	fp,52(sp)
    d60c:	ddc00c17 	ldw	r23,48(sp)
    d610:	dd800b17 	ldw	r22,44(sp)
    d614:	dd400a17 	ldw	r21,40(sp)
    d618:	dd000917 	ldw	r20,36(sp)
    d61c:	dcc00817 	ldw	r19,32(sp)
    d620:	dc800717 	ldw	r18,28(sp)
    d624:	dc400617 	ldw	r17,24(sp)
    d628:	dc000517 	ldw	r16,20(sp)
    d62c:	dec00f04 	addi	sp,sp,60
    d630:	f800283a 	ret
    d634:	00bfffd4 	movui	r2,65535
    d638:	11c05a36 	bltu	r2,r7,d7a4 <__umoddi3+0x2a0>
    d63c:	00803fc4 	movi	r2,255
    d640:	11c0fe36 	bltu	r2,r7,da3c <__umoddi3+0x538>
    d644:	000b883a 	mov	r5,zero
    d648:	0005883a 	mov	r2,zero
    d64c:	3084d83a 	srl	r2,r6,r2
    d650:	01000074 	movhi	r4,1
    d654:	210a7404 	addi	r4,r4,10704
    d658:	01c00804 	movi	r7,32
    d65c:	1105883a 	add	r2,r2,r4
    d660:	10c00003 	ldbu	r3,0(r2)
    d664:	28c7883a 	add	r3,r5,r3
    d668:	38ebc83a 	sub	r21,r7,r3
    d66c:	a800851e 	bne	r21,zero,d884 <__umoddi3+0x380>
    d670:	35005236 	bltu	r6,r20,d7bc <__umoddi3+0x2b8>
    d674:	b400512e 	bgeu	r22,r16,d7bc <__umoddi3+0x2b8>
    d678:	b011883a 	mov	r8,r22
    d67c:	a013883a 	mov	r9,r20
    d680:	003fde06 	br	d5fc <__umoddi3+0xf8>
    d684:	00bfffd4 	movui	r2,65535
    d688:	11804036 	bltu	r2,r6,d78c <__umoddi3+0x288>
    d68c:	00803fc4 	movi	r2,255
    d690:	1180ed36 	bltu	r2,r6,da48 <__umoddi3+0x544>
    d694:	000b883a 	mov	r5,zero
    d698:	0005883a 	mov	r2,zero
    d69c:	8084d83a 	srl	r2,r16,r2
    d6a0:	01000074 	movhi	r4,1
    d6a4:	210a7404 	addi	r4,r4,10704
    d6a8:	01800804 	movi	r6,32
    d6ac:	1105883a 	add	r2,r2,r4
    d6b0:	10c00003 	ldbu	r3,0(r2)
    d6b4:	28c7883a 	add	r3,r5,r3
    d6b8:	30c7c83a 	sub	r3,r6,r3
    d6bc:	1800bf1e 	bne	r3,zero,d9bc <__umoddi3+0x4b8>
    d6c0:	0039883a 	mov	fp,zero
    d6c4:	802ad43a 	srli	r21,r16,16
    d6c8:	a009883a 	mov	r4,r20
    d6cc:	85ffffcc 	andi	r23,r16,65535
    d6d0:	a80b883a 	mov	r5,r21
    d6d4:	000ef800 	call	ef80 <__udivsi3>
    d6d8:	a009883a 	mov	r4,r20
    d6dc:	a80b883a 	mov	r5,r21
    d6e0:	b8a3383a 	mul	r17,r23,r2
    d6e4:	000ef880 	call	ef88 <__umodsi3>
    d6e8:	1004943a 	slli	r2,r2,16
    d6ec:	b006d43a 	srli	r3,r22,16
    d6f0:	10c4b03a 	or	r2,r2,r3
    d6f4:	1440032e 	bgeu	r2,r17,d704 <__umoddi3+0x200>
    d6f8:	1405883a 	add	r2,r2,r16
    d6fc:	14000136 	bltu	r2,r16,d704 <__umoddi3+0x200>
    d700:	1440e536 	bltu	r2,r17,da98 <__umoddi3+0x594>
    d704:	1463c83a 	sub	r17,r2,r17
    d708:	8809883a 	mov	r4,r17
    d70c:	a80b883a 	mov	r5,r21
    d710:	000ef800 	call	ef80 <__udivsi3>
    d714:	8809883a 	mov	r4,r17
    d718:	b8a3383a 	mul	r17,r23,r2
    d71c:	a80b883a 	mov	r5,r21
    d720:	000ef880 	call	ef88 <__umodsi3>
    d724:	1004943a 	slli	r2,r2,16
    d728:	b0ffffcc 	andi	r3,r22,65535
    d72c:	10c4b03a 	or	r2,r2,r3
    d730:	1440042e 	bgeu	r2,r17,d744 <__umoddi3+0x240>
    d734:	1405883a 	add	r2,r2,r16
    d738:	14000236 	bltu	r2,r16,d744 <__umoddi3+0x240>
    d73c:	1440012e 	bgeu	r2,r17,d744 <__umoddi3+0x240>
    d740:	1405883a 	add	r2,r2,r16
    d744:	1445c83a 	sub	r2,r2,r17
    d748:	1724d83a 	srl	r18,r2,fp
    d74c:	0013883a 	mov	r9,zero
    d750:	9011883a 	mov	r8,r18
    d754:	003fa906 	br	d5fc <__umoddi3+0xf8>
    d758:	00804034 	movhi	r2,256
    d75c:	10bfffc4 	addi	r2,r2,-1
    d760:	1400b036 	bltu	r2,r16,da24 <__umoddi3+0x520>
    d764:	01400404 	movi	r5,16
    d768:	2805883a 	mov	r2,r5
    d76c:	003f7c06 	br	d560 <__umoddi3+0x5c>
    d770:	01000044 	movi	r4,1
    d774:	000b883a 	mov	r5,zero
    d778:	000ef800 	call	ef80 <__udivsi3>
    d77c:	1021883a 	mov	r16,r2
    d780:	00bfffd4 	movui	r2,65535
    d784:	143ff436 	bltu	r2,r16,d758 <__umoddi3+0x254>
    d788:	003f7106 	br	d550 <__umoddi3+0x4c>
    d78c:	00804034 	movhi	r2,256
    d790:	10bfffc4 	addi	r2,r2,-1
    d794:	1180af36 	bltu	r2,r6,da54 <__umoddi3+0x550>
    d798:	01400404 	movi	r5,16
    d79c:	2805883a 	mov	r2,r5
    d7a0:	003fbe06 	br	d69c <__umoddi3+0x198>
    d7a4:	00804034 	movhi	r2,256
    d7a8:	10bfffc4 	addi	r2,r2,-1
    d7ac:	11c0ac36 	bltu	r2,r7,da60 <__umoddi3+0x55c>
    d7b0:	01400404 	movi	r5,16
    d7b4:	2805883a 	mov	r2,r5
    d7b8:	003fa406 	br	d64c <__umoddi3+0x148>
    d7bc:	b409c83a 	sub	r4,r22,r16
    d7c0:	b105803a 	cmpltu	r2,r22,r4
    d7c4:	a187c83a 	sub	r3,r20,r6
    d7c8:	18a9c83a 	sub	r20,r3,r2
    d7cc:	202d883a 	mov	r22,r4
    d7d0:	003fa906 	br	d678 <__umoddi3+0x174>
    d7d4:	85e0983a 	sll	r16,r16,r23
    d7d8:	35c5c83a 	sub	r2,r6,r23
    d7dc:	a0a2d83a 	srl	r17,r20,r2
    d7e0:	802ad43a 	srli	r21,r16,16
    d7e4:	b084d83a 	srl	r2,r22,r2
    d7e8:	a5c6983a 	sll	r3,r20,r23
    d7ec:	8809883a 	mov	r4,r17
    d7f0:	a80b883a 	mov	r5,r21
    d7f4:	1886b03a 	or	r3,r3,r2
    d7f8:	d8c00115 	stw	r3,4(sp)
    d7fc:	853fffcc 	andi	r20,r16,65535
    d800:	000ef800 	call	ef80 <__udivsi3>
    d804:	8809883a 	mov	r4,r17
    d808:	a80b883a 	mov	r5,r21
    d80c:	a0a3383a 	mul	r17,r20,r2
    d810:	000ef880 	call	ef88 <__umodsi3>
    d814:	d9000117 	ldw	r4,4(sp)
    d818:	1004943a 	slli	r2,r2,16
    d81c:	b839883a 	mov	fp,r23
    d820:	2006d43a 	srli	r3,r4,16
    d824:	10c4b03a 	or	r2,r2,r3
    d828:	1440022e 	bgeu	r2,r17,d834 <__umoddi3+0x330>
    d82c:	1405883a 	add	r2,r2,r16
    d830:	1400962e 	bgeu	r2,r16,da8c <__umoddi3+0x588>
    d834:	1463c83a 	sub	r17,r2,r17
    d838:	8809883a 	mov	r4,r17
    d83c:	a80b883a 	mov	r5,r21
    d840:	000ef800 	call	ef80 <__udivsi3>
    d844:	8809883a 	mov	r4,r17
    d848:	a80b883a 	mov	r5,r21
    d84c:	a0a3383a 	mul	r17,r20,r2
    d850:	000ef880 	call	ef88 <__umodsi3>
    d854:	d9400117 	ldw	r5,4(sp)
    d858:	1004943a 	slli	r2,r2,16
    d85c:	28ffffcc 	andi	r3,r5,65535
    d860:	10c4b03a 	or	r2,r2,r3
    d864:	1440042e 	bgeu	r2,r17,d878 <__umoddi3+0x374>
    d868:	1405883a 	add	r2,r2,r16
    d86c:	14000236 	bltu	r2,r16,d878 <__umoddi3+0x374>
    d870:	1440012e 	bgeu	r2,r17,d878 <__umoddi3+0x374>
    d874:	1405883a 	add	r2,r2,r16
    d878:	b5ec983a 	sll	r22,r22,r23
    d87c:	1463c83a 	sub	r17,r2,r17
    d880:	003f4406 	br	d594 <__umoddi3+0x90>
    d884:	3d4fc83a 	sub	r7,r7,r21
    d888:	3546983a 	sll	r3,r6,r21
    d88c:	81c4d83a 	srl	r2,r16,r7
    d890:	a1e2d83a 	srl	r17,r20,r7
    d894:	a54c983a 	sll	r6,r20,r21
    d898:	18aeb03a 	or	r23,r3,r2
    d89c:	b828d43a 	srli	r20,r23,16
    d8a0:	b1c4d83a 	srl	r2,r22,r7
    d8a4:	8809883a 	mov	r4,r17
    d8a8:	a00b883a 	mov	r5,r20
    d8ac:	308cb03a 	or	r6,r6,r2
    d8b0:	d9c00315 	stw	r7,12(sp)
    d8b4:	d9800215 	stw	r6,8(sp)
    d8b8:	000ef800 	call	ef80 <__udivsi3>
    d8bc:	8809883a 	mov	r4,r17
    d8c0:	a00b883a 	mov	r5,r20
    d8c4:	1039883a 	mov	fp,r2
    d8c8:	000ef880 	call	ef88 <__umodsi3>
    d8cc:	b8ffffcc 	andi	r3,r23,65535
    d8d0:	d8c00415 	stw	r3,16(sp)
    d8d4:	d9000217 	ldw	r4,8(sp)
    d8d8:	d9400417 	ldw	r5,16(sp)
    d8dc:	1004943a 	slli	r2,r2,16
    d8e0:	2006d43a 	srli	r3,r4,16
    d8e4:	8560983a 	sll	r16,r16,r21
    d8e8:	2f23383a 	mul	r17,r5,fp
    d8ec:	10c4b03a 	or	r2,r2,r3
    d8f0:	dc000015 	stw	r16,0(sp)
    d8f4:	b56c983a 	sll	r22,r22,r21
    d8f8:	1440032e 	bgeu	r2,r17,d908 <__umoddi3+0x404>
    d8fc:	15c5883a 	add	r2,r2,r23
    d900:	e73fffc4 	addi	fp,fp,-1
    d904:	15c05d2e 	bgeu	r2,r23,da7c <__umoddi3+0x578>
    d908:	1463c83a 	sub	r17,r2,r17
    d90c:	8809883a 	mov	r4,r17
    d910:	a00b883a 	mov	r5,r20
    d914:	000ef800 	call	ef80 <__udivsi3>
    d918:	8809883a 	mov	r4,r17
    d91c:	a00b883a 	mov	r5,r20
    d920:	1021883a 	mov	r16,r2
    d924:	000ef880 	call	ef88 <__umodsi3>
    d928:	d8c00417 	ldw	r3,16(sp)
    d92c:	d9000217 	ldw	r4,8(sp)
    d930:	1004943a 	slli	r2,r2,16
    d934:	1c23383a 	mul	r17,r3,r16
    d938:	20ffffcc 	andi	r3,r4,65535
    d93c:	10ceb03a 	or	r7,r2,r3
    d940:	3c40032e 	bgeu	r7,r17,d950 <__umoddi3+0x44c>
    d944:	3dcf883a 	add	r7,r7,r23
    d948:	843fffc4 	addi	r16,r16,-1
    d94c:	3dc0472e 	bgeu	r7,r23,da6c <__umoddi3+0x568>
    d950:	e004943a 	slli	r2,fp,16
    d954:	d9400017 	ldw	r5,0(sp)
    d958:	3c4fc83a 	sub	r7,r7,r17
    d95c:	8084b03a 	or	r2,r16,r2
    d960:	28ffffcc 	andi	r3,r5,65535
    d964:	280cd43a 	srli	r6,r5,16
    d968:	100ad43a 	srli	r5,r2,16
    d96c:	10bfffcc 	andi	r2,r2,65535
    d970:	10d1383a 	mul	r8,r2,r3
    d974:	28c7383a 	mul	r3,r5,r3
    d978:	1185383a 	mul	r2,r2,r6
    d97c:	4008d43a 	srli	r4,r8,16
    d980:	298b383a 	mul	r5,r5,r6
    d984:	10c5883a 	add	r2,r2,r3
    d988:	2089883a 	add	r4,r4,r2
    d98c:	20c0022e 	bgeu	r4,r3,d998 <__umoddi3+0x494>
    d990:	00800074 	movhi	r2,1
    d994:	288b883a 	add	r5,r5,r2
    d998:	2004d43a 	srli	r2,r4,16
    d99c:	2008943a 	slli	r4,r4,16
    d9a0:	40ffffcc 	andi	r3,r8,65535
    d9a4:	288b883a 	add	r5,r5,r2
    d9a8:	20c9883a 	add	r4,r4,r3
    d9ac:	39400b36 	bltu	r7,r5,d9dc <__umoddi3+0x4d8>
    d9b0:	39403d26 	beq	r7,r5,daa8 <__umoddi3+0x5a4>
    d9b4:	394bc83a 	sub	r5,r7,r5
    d9b8:	00000f06 	br	d9f8 <__umoddi3+0x4f4>
    d9bc:	30c5c83a 	sub	r2,r6,r3
    d9c0:	1839883a 	mov	fp,r3
    d9c4:	b084d83a 	srl	r2,r22,r2
    d9c8:	a0c6983a 	sll	r3,r20,r3
    d9cc:	8720983a 	sll	r16,r16,fp
    d9d0:	b72c983a 	sll	r22,r22,fp
    d9d4:	18a8b03a 	or	r20,r3,r2
    d9d8:	003f3a06 	br	d6c4 <__umoddi3+0x1c0>
    d9dc:	d8c00017 	ldw	r3,0(sp)
    d9e0:	20c5c83a 	sub	r2,r4,r3
    d9e4:	2089803a 	cmpltu	r4,r4,r2
    d9e8:	2dc7c83a 	sub	r3,r5,r23
    d9ec:	1907c83a 	sub	r3,r3,r4
    d9f0:	38cbc83a 	sub	r5,r7,r3
    d9f4:	1009883a 	mov	r4,r2
    d9f8:	b105c83a 	sub	r2,r22,r4
    d9fc:	b087803a 	cmpltu	r3,r22,r2
    da00:	28c7c83a 	sub	r3,r5,r3
    da04:	d9400317 	ldw	r5,12(sp)
    da08:	1544d83a 	srl	r2,r2,r21
    da0c:	1948983a 	sll	r4,r3,r5
    da10:	1d46d83a 	srl	r3,r3,r21
    da14:	20a4b03a 	or	r18,r4,r2
    da18:	9011883a 	mov	r8,r18
    da1c:	1813883a 	mov	r9,r3
    da20:	003ef606 	br	d5fc <__umoddi3+0xf8>
    da24:	01400604 	movi	r5,24
    da28:	2805883a 	mov	r2,r5
    da2c:	003ecc06 	br	d560 <__umoddi3+0x5c>
    da30:	01400204 	movi	r5,8
    da34:	2805883a 	mov	r2,r5
    da38:	003ec906 	br	d560 <__umoddi3+0x5c>
    da3c:	01400204 	movi	r5,8
    da40:	2805883a 	mov	r2,r5
    da44:	003f0106 	br	d64c <__umoddi3+0x148>
    da48:	01400204 	movi	r5,8
    da4c:	2805883a 	mov	r2,r5
    da50:	003f1206 	br	d69c <__umoddi3+0x198>
    da54:	01400604 	movi	r5,24
    da58:	2805883a 	mov	r2,r5
    da5c:	003f0f06 	br	d69c <__umoddi3+0x198>
    da60:	01400604 	movi	r5,24
    da64:	2805883a 	mov	r2,r5
    da68:	003ef806 	br	d64c <__umoddi3+0x148>
    da6c:	3c7fb82e 	bgeu	r7,r17,d950 <__umoddi3+0x44c>
    da70:	843fffc4 	addi	r16,r16,-1
    da74:	3dcf883a 	add	r7,r7,r23
    da78:	003fb506 	br	d950 <__umoddi3+0x44c>
    da7c:	147fa22e 	bgeu	r2,r17,d908 <__umoddi3+0x404>
    da80:	e73fffc4 	addi	fp,fp,-1
    da84:	15c5883a 	add	r2,r2,r23
    da88:	003f9f06 	br	d908 <__umoddi3+0x404>
    da8c:	147f692e 	bgeu	r2,r17,d834 <__umoddi3+0x330>
    da90:	1405883a 	add	r2,r2,r16
    da94:	003f6706 	br	d834 <__umoddi3+0x330>
    da98:	1405883a 	add	r2,r2,r16
    da9c:	003f1906 	br	d704 <__umoddi3+0x200>
    daa0:	1405883a 	add	r2,r2,r16
    daa4:	003ec906 	br	d5cc <__umoddi3+0xc8>
    daa8:	b13fcc36 	bltu	r22,r4,d9dc <__umoddi3+0x4d8>
    daac:	000b883a 	mov	r5,zero
    dab0:	003fd106 	br	d9f8 <__umoddi3+0x4f4>

0000dab4 <__nesf2>:
    dab4:	defff304 	addi	sp,sp,-52
    dab8:	dc400b15 	stw	r17,44(sp)
    dabc:	dc400204 	addi	r17,sp,8
    dac0:	dc000a15 	stw	r16,40(sp)
    dac4:	d9000015 	stw	r4,0(sp)
    dac8:	d9400115 	stw	r5,4(sp)
    dacc:	d809883a 	mov	r4,sp
    dad0:	880b883a 	mov	r5,r17
    dad4:	dc000604 	addi	r16,sp,24
    dad8:	dfc00c15 	stw	ra,48(sp)
    dadc:	000f0100 	call	f010 <__unpack_f>
    dae0:	d9000104 	addi	r4,sp,4
    dae4:	800b883a 	mov	r5,r16
    dae8:	000f0100 	call	f010 <__unpack_f>
    daec:	d8800217 	ldw	r2,8(sp)
    daf0:	00c00044 	movi	r3,1
    daf4:	180d883a 	mov	r6,r3
    daf8:	1880062e 	bgeu	r3,r2,db14 <__nesf2+0x60>
    dafc:	d8800617 	ldw	r2,24(sp)
    db00:	8809883a 	mov	r4,r17
    db04:	800b883a 	mov	r5,r16
    db08:	1880022e 	bgeu	r3,r2,db14 <__nesf2+0x60>
    db0c:	000f0d80 	call	f0d8 <__fpcmp_parts_f>
    db10:	100d883a 	mov	r6,r2
    db14:	3005883a 	mov	r2,r6
    db18:	dfc00c17 	ldw	ra,48(sp)
    db1c:	dc400b17 	ldw	r17,44(sp)
    db20:	dc000a17 	ldw	r16,40(sp)
    db24:	dec00d04 	addi	sp,sp,52
    db28:	f800283a 	ret

0000db2c <__gtsf2>:
    db2c:	defff304 	addi	sp,sp,-52
    db30:	dc400b15 	stw	r17,44(sp)
    db34:	dc400204 	addi	r17,sp,8
    db38:	dc000a15 	stw	r16,40(sp)
    db3c:	d9000015 	stw	r4,0(sp)
    db40:	d9400115 	stw	r5,4(sp)
    db44:	d809883a 	mov	r4,sp
    db48:	880b883a 	mov	r5,r17
    db4c:	dc000604 	addi	r16,sp,24
    db50:	dfc00c15 	stw	ra,48(sp)
    db54:	000f0100 	call	f010 <__unpack_f>
    db58:	d9000104 	addi	r4,sp,4
    db5c:	800b883a 	mov	r5,r16
    db60:	000f0100 	call	f010 <__unpack_f>
    db64:	d8800217 	ldw	r2,8(sp)
    db68:	00c00044 	movi	r3,1
    db6c:	01bfffc4 	movi	r6,-1
    db70:	1880062e 	bgeu	r3,r2,db8c <__gtsf2+0x60>
    db74:	d8800617 	ldw	r2,24(sp)
    db78:	8809883a 	mov	r4,r17
    db7c:	800b883a 	mov	r5,r16
    db80:	1880022e 	bgeu	r3,r2,db8c <__gtsf2+0x60>
    db84:	000f0d80 	call	f0d8 <__fpcmp_parts_f>
    db88:	100d883a 	mov	r6,r2
    db8c:	3005883a 	mov	r2,r6
    db90:	dfc00c17 	ldw	ra,48(sp)
    db94:	dc400b17 	ldw	r17,44(sp)
    db98:	dc000a17 	ldw	r16,40(sp)
    db9c:	dec00d04 	addi	sp,sp,52
    dba0:	f800283a 	ret

0000dba4 <__ltsf2>:
    dba4:	defff304 	addi	sp,sp,-52
    dba8:	dc400b15 	stw	r17,44(sp)
    dbac:	dc400204 	addi	r17,sp,8
    dbb0:	dc000a15 	stw	r16,40(sp)
    dbb4:	d9000015 	stw	r4,0(sp)
    dbb8:	d9400115 	stw	r5,4(sp)
    dbbc:	d809883a 	mov	r4,sp
    dbc0:	880b883a 	mov	r5,r17
    dbc4:	dc000604 	addi	r16,sp,24
    dbc8:	dfc00c15 	stw	ra,48(sp)
    dbcc:	000f0100 	call	f010 <__unpack_f>
    dbd0:	d9000104 	addi	r4,sp,4
    dbd4:	800b883a 	mov	r5,r16
    dbd8:	000f0100 	call	f010 <__unpack_f>
    dbdc:	d8800217 	ldw	r2,8(sp)
    dbe0:	00c00044 	movi	r3,1
    dbe4:	180d883a 	mov	r6,r3
    dbe8:	1880062e 	bgeu	r3,r2,dc04 <__ltsf2+0x60>
    dbec:	d8800617 	ldw	r2,24(sp)
    dbf0:	8809883a 	mov	r4,r17
    dbf4:	800b883a 	mov	r5,r16
    dbf8:	1880022e 	bgeu	r3,r2,dc04 <__ltsf2+0x60>
    dbfc:	000f0d80 	call	f0d8 <__fpcmp_parts_f>
    dc00:	100d883a 	mov	r6,r2
    dc04:	3005883a 	mov	r2,r6
    dc08:	dfc00c17 	ldw	ra,48(sp)
    dc0c:	dc400b17 	ldw	r17,44(sp)
    dc10:	dc000a17 	ldw	r16,40(sp)
    dc14:	dec00d04 	addi	sp,sp,52
    dc18:	f800283a 	ret

0000dc1c <_fpadd_parts>:
    dc1c:	defff804 	addi	sp,sp,-32
    dc20:	dcc00315 	stw	r19,12(sp)
    dc24:	2027883a 	mov	r19,r4
    dc28:	21000017 	ldw	r4,0(r4)
    dc2c:	00c00044 	movi	r3,1
    dc30:	dd400515 	stw	r21,20(sp)
    dc34:	dd000415 	stw	r20,16(sp)
    dc38:	ddc00715 	stw	r23,28(sp)
    dc3c:	dd800615 	stw	r22,24(sp)
    dc40:	dc800215 	stw	r18,8(sp)
    dc44:	dc400115 	stw	r17,4(sp)
    dc48:	dc000015 	stw	r16,0(sp)
    dc4c:	282b883a 	mov	r21,r5
    dc50:	3029883a 	mov	r20,r6
    dc54:	1900632e 	bgeu	r3,r4,dde4 <_fpadd_parts+0x1c8>
    dc58:	28800017 	ldw	r2,0(r5)
    dc5c:	1880812e 	bgeu	r3,r2,de64 <_fpadd_parts+0x248>
    dc60:	00c00104 	movi	r3,4
    dc64:	20c0dc26 	beq	r4,r3,dfd8 <_fpadd_parts+0x3bc>
    dc68:	10c07e26 	beq	r2,r3,de64 <_fpadd_parts+0x248>
    dc6c:	00c00084 	movi	r3,2
    dc70:	10c06726 	beq	r2,r3,de10 <_fpadd_parts+0x1f4>
    dc74:	20c07b26 	beq	r4,r3,de64 <_fpadd_parts+0x248>
    dc78:	9dc00217 	ldw	r23,8(r19)
    dc7c:	28c00217 	ldw	r3,8(r5)
    dc80:	9c400317 	ldw	r17,12(r19)
    dc84:	2bc00317 	ldw	r15,12(r5)
    dc88:	b8cdc83a 	sub	r6,r23,r3
    dc8c:	9c800417 	ldw	r18,16(r19)
    dc90:	2c000417 	ldw	r16,16(r5)
    dc94:	3009883a 	mov	r4,r6
    dc98:	30009716 	blt	r6,zero,def8 <_fpadd_parts+0x2dc>
    dc9c:	00800fc4 	movi	r2,63
    dca0:	11806b16 	blt	r2,r6,de50 <_fpadd_parts+0x234>
    dca4:	0100a40e 	bge	zero,r4,df38 <_fpadd_parts+0x31c>
    dca8:	35bff804 	addi	r22,r6,-32
    dcac:	b000bc16 	blt	r22,zero,dfa0 <_fpadd_parts+0x384>
    dcb0:	8596d83a 	srl	r11,r16,r22
    dcb4:	0019883a 	mov	r12,zero
    dcb8:	0013883a 	mov	r9,zero
    dcbc:	01000044 	movi	r4,1
    dcc0:	0015883a 	mov	r10,zero
    dcc4:	b000be16 	blt	r22,zero,dfc0 <_fpadd_parts+0x3a4>
    dcc8:	2590983a 	sll	r8,r4,r22
    dccc:	000f883a 	mov	r7,zero
    dcd0:	00bfffc4 	movi	r2,-1
    dcd4:	3889883a 	add	r4,r7,r2
    dcd8:	408b883a 	add	r5,r8,r2
    dcdc:	21cd803a 	cmpltu	r6,r4,r7
    dce0:	314b883a 	add	r5,r6,r5
    dce4:	7904703a 	and	r2,r15,r4
    dce8:	8146703a 	and	r3,r16,r5
    dcec:	10c4b03a 	or	r2,r2,r3
    dcf0:	10000226 	beq	r2,zero,dcfc <_fpadd_parts+0xe0>
    dcf4:	02400044 	movi	r9,1
    dcf8:	0015883a 	mov	r10,zero
    dcfc:	5a5eb03a 	or	r15,r11,r9
    dd00:	62a0b03a 	or	r16,r12,r10
    dd04:	99400117 	ldw	r5,4(r19)
    dd08:	a8800117 	ldw	r2,4(r21)
    dd0c:	28806e26 	beq	r5,r2,dec8 <_fpadd_parts+0x2ac>
    dd10:	28006626 	beq	r5,zero,deac <_fpadd_parts+0x290>
    dd14:	7c45c83a 	sub	r2,r15,r17
    dd18:	7889803a 	cmpltu	r4,r15,r2
    dd1c:	8487c83a 	sub	r3,r16,r18
    dd20:	1909c83a 	sub	r4,r3,r4
    dd24:	100d883a 	mov	r6,r2
    dd28:	200f883a 	mov	r7,r4
    dd2c:	38007716 	blt	r7,zero,df0c <_fpadd_parts+0x2f0>
    dd30:	a5c00215 	stw	r23,8(r20)
    dd34:	a1c00415 	stw	r7,16(r20)
    dd38:	a0000115 	stw	zero,4(r20)
    dd3c:	a1800315 	stw	r6,12(r20)
    dd40:	a2000317 	ldw	r8,12(r20)
    dd44:	a2400417 	ldw	r9,16(r20)
    dd48:	00bfffc4 	movi	r2,-1
    dd4c:	408b883a 	add	r5,r8,r2
    dd50:	2a09803a 	cmpltu	r4,r5,r8
    dd54:	488d883a 	add	r6,r9,r2
    dd58:	01c40034 	movhi	r7,4096
    dd5c:	39ffffc4 	addi	r7,r7,-1
    dd60:	218d883a 	add	r6,r4,r6
    dd64:	39801736 	bltu	r7,r6,ddc4 <_fpadd_parts+0x1a8>
    dd68:	31c06526 	beq	r6,r7,df00 <_fpadd_parts+0x2e4>
    dd6c:	a3000217 	ldw	r12,8(r20)
    dd70:	4209883a 	add	r4,r8,r8
    dd74:	00bfffc4 	movi	r2,-1
    dd78:	220f803a 	cmpltu	r7,r4,r8
    dd7c:	4a4b883a 	add	r5,r9,r9
    dd80:	394f883a 	add	r7,r7,r5
    dd84:	2095883a 	add	r10,r4,r2
    dd88:	3897883a 	add	r11,r7,r2
    dd8c:	510d803a 	cmpltu	r6,r10,r4
    dd90:	6099883a 	add	r12,r12,r2
    dd94:	32d7883a 	add	r11,r6,r11
    dd98:	00840034 	movhi	r2,4096
    dd9c:	10bfffc4 	addi	r2,r2,-1
    dda0:	2011883a 	mov	r8,r4
    dda4:	3813883a 	mov	r9,r7
    dda8:	a1000315 	stw	r4,12(r20)
    ddac:	a1c00415 	stw	r7,16(r20)
    ddb0:	a3000215 	stw	r12,8(r20)
    ddb4:	12c00336 	bltu	r2,r11,ddc4 <_fpadd_parts+0x1a8>
    ddb8:	58bfed1e 	bne	r11,r2,dd70 <_fpadd_parts+0x154>
    ddbc:	00bfff84 	movi	r2,-2
    ddc0:	12bfeb2e 	bgeu	r2,r10,dd70 <_fpadd_parts+0x154>
    ddc4:	a2800417 	ldw	r10,16(r20)
    ddc8:	008000c4 	movi	r2,3
    ddcc:	00c80034 	movhi	r3,8192
    ddd0:	18ffffc4 	addi	r3,r3,-1
    ddd4:	a2400317 	ldw	r9,12(r20)
    ddd8:	a0800015 	stw	r2,0(r20)
    dddc:	1a802336 	bltu	r3,r10,de6c <_fpadd_parts+0x250>
    dde0:	a027883a 	mov	r19,r20
    dde4:	9805883a 	mov	r2,r19
    dde8:	ddc00717 	ldw	r23,28(sp)
    ddec:	dd800617 	ldw	r22,24(sp)
    ddf0:	dd400517 	ldw	r21,20(sp)
    ddf4:	dd000417 	ldw	r20,16(sp)
    ddf8:	dcc00317 	ldw	r19,12(sp)
    ddfc:	dc800217 	ldw	r18,8(sp)
    de00:	dc400117 	ldw	r17,4(sp)
    de04:	dc000017 	ldw	r16,0(sp)
    de08:	dec00804 	addi	sp,sp,32
    de0c:	f800283a 	ret
    de10:	20fff41e 	bne	r4,r3,dde4 <_fpadd_parts+0x1c8>
    de14:	31000015 	stw	r4,0(r6)
    de18:	98800117 	ldw	r2,4(r19)
    de1c:	30800115 	stw	r2,4(r6)
    de20:	98c00217 	ldw	r3,8(r19)
    de24:	30c00215 	stw	r3,8(r6)
    de28:	98800317 	ldw	r2,12(r19)
    de2c:	30800315 	stw	r2,12(r6)
    de30:	98c00417 	ldw	r3,16(r19)
    de34:	30c00415 	stw	r3,16(r6)
    de38:	98800117 	ldw	r2,4(r19)
    de3c:	28c00117 	ldw	r3,4(r5)
    de40:	3027883a 	mov	r19,r6
    de44:	10c4703a 	and	r2,r2,r3
    de48:	30800115 	stw	r2,4(r6)
    de4c:	003fe506 	br	dde4 <_fpadd_parts+0x1c8>
    de50:	1dc02616 	blt	r3,r23,deec <_fpadd_parts+0x2d0>
    de54:	0023883a 	mov	r17,zero
    de58:	182f883a 	mov	r23,r3
    de5c:	0025883a 	mov	r18,zero
    de60:	003fa806 	br	dd04 <_fpadd_parts+0xe8>
    de64:	a827883a 	mov	r19,r21
    de68:	003fde06 	br	dde4 <_fpadd_parts+0x1c8>
    de6c:	01800044 	movi	r6,1
    de70:	500497fa 	slli	r2,r10,31
    de74:	4808d07a 	srli	r4,r9,1
    de78:	518ad83a 	srl	r5,r10,r6
    de7c:	a2000217 	ldw	r8,8(r20)
    de80:	1108b03a 	or	r4,r2,r4
    de84:	0007883a 	mov	r3,zero
    de88:	4984703a 	and	r2,r9,r6
    de8c:	208cb03a 	or	r6,r4,r2
    de90:	28ceb03a 	or	r7,r5,r3
    de94:	42000044 	addi	r8,r8,1
    de98:	a027883a 	mov	r19,r20
    de9c:	a1c00415 	stw	r7,16(r20)
    dea0:	a2000215 	stw	r8,8(r20)
    dea4:	a1800315 	stw	r6,12(r20)
    dea8:	003fce06 	br	dde4 <_fpadd_parts+0x1c8>
    deac:	8bc5c83a 	sub	r2,r17,r15
    deb0:	8889803a 	cmpltu	r4,r17,r2
    deb4:	9407c83a 	sub	r3,r18,r16
    deb8:	1909c83a 	sub	r4,r3,r4
    debc:	100d883a 	mov	r6,r2
    dec0:	200f883a 	mov	r7,r4
    dec4:	003f9906 	br	dd2c <_fpadd_parts+0x110>
    dec8:	7c45883a 	add	r2,r15,r17
    decc:	13c9803a 	cmpltu	r4,r2,r15
    ded0:	8487883a 	add	r3,r16,r18
    ded4:	20c9883a 	add	r4,r4,r3
    ded8:	a1400115 	stw	r5,4(r20)
    dedc:	a5c00215 	stw	r23,8(r20)
    dee0:	a0800315 	stw	r2,12(r20)
    dee4:	a1000415 	stw	r4,16(r20)
    dee8:	003fb606 	br	ddc4 <_fpadd_parts+0x1a8>
    deec:	001f883a 	mov	r15,zero
    def0:	0021883a 	mov	r16,zero
    def4:	003f8306 	br	dd04 <_fpadd_parts+0xe8>
    def8:	018dc83a 	sub	r6,zero,r6
    defc:	003f6706 	br	dc9c <_fpadd_parts+0x80>
    df00:	00bfff84 	movi	r2,-2
    df04:	117faf36 	bltu	r2,r5,ddc4 <_fpadd_parts+0x1a8>
    df08:	003f9806 	br	dd6c <_fpadd_parts+0x150>
    df0c:	0005883a 	mov	r2,zero
    df10:	1189c83a 	sub	r4,r2,r6
    df14:	1105803a 	cmpltu	r2,r2,r4
    df18:	01cbc83a 	sub	r5,zero,r7
    df1c:	2885c83a 	sub	r2,r5,r2
    df20:	01800044 	movi	r6,1
    df24:	a1800115 	stw	r6,4(r20)
    df28:	a5c00215 	stw	r23,8(r20)
    df2c:	a1000315 	stw	r4,12(r20)
    df30:	a0800415 	stw	r2,16(r20)
    df34:	003f8206 	br	dd40 <_fpadd_parts+0x124>
    df38:	203f7226 	beq	r4,zero,dd04 <_fpadd_parts+0xe8>
    df3c:	35bff804 	addi	r22,r6,-32
    df40:	b9af883a 	add	r23,r23,r6
    df44:	b0003116 	blt	r22,zero,e00c <_fpadd_parts+0x3f0>
    df48:	959ad83a 	srl	r13,r18,r22
    df4c:	001d883a 	mov	r14,zero
    df50:	000f883a 	mov	r7,zero
    df54:	01000044 	movi	r4,1
    df58:	0011883a 	mov	r8,zero
    df5c:	b0002516 	blt	r22,zero,dff4 <_fpadd_parts+0x3d8>
    df60:	2594983a 	sll	r10,r4,r22
    df64:	0013883a 	mov	r9,zero
    df68:	00bfffc4 	movi	r2,-1
    df6c:	4889883a 	add	r4,r9,r2
    df70:	508b883a 	add	r5,r10,r2
    df74:	224d803a 	cmpltu	r6,r4,r9
    df78:	314b883a 	add	r5,r6,r5
    df7c:	8904703a 	and	r2,r17,r4
    df80:	9146703a 	and	r3,r18,r5
    df84:	10c4b03a 	or	r2,r2,r3
    df88:	10000226 	beq	r2,zero,df94 <_fpadd_parts+0x378>
    df8c:	01c00044 	movi	r7,1
    df90:	0011883a 	mov	r8,zero
    df94:	69e2b03a 	or	r17,r13,r7
    df98:	7224b03a 	or	r18,r14,r8
    df9c:	003f5906 	br	dd04 <_fpadd_parts+0xe8>
    dfa0:	8407883a 	add	r3,r16,r16
    dfa4:	008007c4 	movi	r2,31
    dfa8:	1185c83a 	sub	r2,r2,r6
    dfac:	1886983a 	sll	r3,r3,r2
    dfb0:	7996d83a 	srl	r11,r15,r6
    dfb4:	8198d83a 	srl	r12,r16,r6
    dfb8:	1ad6b03a 	or	r11,r3,r11
    dfbc:	003f3e06 	br	dcb8 <_fpadd_parts+0x9c>
    dfc0:	2006d07a 	srli	r3,r4,1
    dfc4:	008007c4 	movi	r2,31
    dfc8:	1185c83a 	sub	r2,r2,r6
    dfcc:	1890d83a 	srl	r8,r3,r2
    dfd0:	218e983a 	sll	r7,r4,r6
    dfd4:	003f3e06 	br	dcd0 <_fpadd_parts+0xb4>
    dfd8:	113f821e 	bne	r2,r4,dde4 <_fpadd_parts+0x1c8>
    dfdc:	28c00117 	ldw	r3,4(r5)
    dfe0:	98800117 	ldw	r2,4(r19)
    dfe4:	10ff7f26 	beq	r2,r3,dde4 <_fpadd_parts+0x1c8>
    dfe8:	04c00074 	movhi	r19,1
    dfec:	9cca6f04 	addi	r19,r19,10684
    dff0:	003f7c06 	br	dde4 <_fpadd_parts+0x1c8>
    dff4:	2006d07a 	srli	r3,r4,1
    dff8:	008007c4 	movi	r2,31
    dffc:	1185c83a 	sub	r2,r2,r6
    e000:	1894d83a 	srl	r10,r3,r2
    e004:	2192983a 	sll	r9,r4,r6
    e008:	003fd706 	br	df68 <_fpadd_parts+0x34c>
    e00c:	9487883a 	add	r3,r18,r18
    e010:	008007c4 	movi	r2,31
    e014:	1185c83a 	sub	r2,r2,r6
    e018:	1886983a 	sll	r3,r3,r2
    e01c:	899ad83a 	srl	r13,r17,r6
    e020:	919cd83a 	srl	r14,r18,r6
    e024:	1b5ab03a 	or	r13,r3,r13
    e028:	003fc906 	br	df50 <_fpadd_parts+0x334>

0000e02c <__subdf3>:
    e02c:	deffea04 	addi	sp,sp,-88
    e030:	dcc01415 	stw	r19,80(sp)
    e034:	dcc00404 	addi	r19,sp,16
    e038:	2011883a 	mov	r8,r4
    e03c:	2813883a 	mov	r9,r5
    e040:	dc401315 	stw	r17,76(sp)
    e044:	d809883a 	mov	r4,sp
    e048:	980b883a 	mov	r5,r19
    e04c:	dc400904 	addi	r17,sp,36
    e050:	dfc01515 	stw	ra,84(sp)
    e054:	da400115 	stw	r9,4(sp)
    e058:	d9c00315 	stw	r7,12(sp)
    e05c:	da000015 	stw	r8,0(sp)
    e060:	d9800215 	stw	r6,8(sp)
    e064:	000f4c00 	call	f4c0 <__unpack_d>
    e068:	d9000204 	addi	r4,sp,8
    e06c:	880b883a 	mov	r5,r17
    e070:	000f4c00 	call	f4c0 <__unpack_d>
    e074:	d8800a17 	ldw	r2,40(sp)
    e078:	880b883a 	mov	r5,r17
    e07c:	9809883a 	mov	r4,r19
    e080:	d9800e04 	addi	r6,sp,56
    e084:	1080005c 	xori	r2,r2,1
    e088:	d8800a15 	stw	r2,40(sp)
    e08c:	000dc1c0 	call	dc1c <_fpadd_parts>
    e090:	1009883a 	mov	r4,r2
    e094:	000f1ac0 	call	f1ac <__pack_d>
    e098:	dfc01517 	ldw	ra,84(sp)
    e09c:	dcc01417 	ldw	r19,80(sp)
    e0a0:	dc401317 	ldw	r17,76(sp)
    e0a4:	dec01604 	addi	sp,sp,88
    e0a8:	f800283a 	ret

0000e0ac <__adddf3>:
    e0ac:	deffea04 	addi	sp,sp,-88
    e0b0:	dcc01415 	stw	r19,80(sp)
    e0b4:	dcc00404 	addi	r19,sp,16
    e0b8:	2011883a 	mov	r8,r4
    e0bc:	2813883a 	mov	r9,r5
    e0c0:	dc401315 	stw	r17,76(sp)
    e0c4:	d809883a 	mov	r4,sp
    e0c8:	980b883a 	mov	r5,r19
    e0cc:	dc400904 	addi	r17,sp,36
    e0d0:	dfc01515 	stw	ra,84(sp)
    e0d4:	da400115 	stw	r9,4(sp)
    e0d8:	d9c00315 	stw	r7,12(sp)
    e0dc:	da000015 	stw	r8,0(sp)
    e0e0:	d9800215 	stw	r6,8(sp)
    e0e4:	000f4c00 	call	f4c0 <__unpack_d>
    e0e8:	d9000204 	addi	r4,sp,8
    e0ec:	880b883a 	mov	r5,r17
    e0f0:	000f4c00 	call	f4c0 <__unpack_d>
    e0f4:	d9800e04 	addi	r6,sp,56
    e0f8:	9809883a 	mov	r4,r19
    e0fc:	880b883a 	mov	r5,r17
    e100:	000dc1c0 	call	dc1c <_fpadd_parts>
    e104:	1009883a 	mov	r4,r2
    e108:	000f1ac0 	call	f1ac <__pack_d>
    e10c:	dfc01517 	ldw	ra,84(sp)
    e110:	dcc01417 	ldw	r19,80(sp)
    e114:	dc401317 	ldw	r17,76(sp)
    e118:	dec01604 	addi	sp,sp,88
    e11c:	f800283a 	ret

0000e120 <__muldf3>:
    e120:	deffe004 	addi	sp,sp,-128
    e124:	dc401815 	stw	r17,96(sp)
    e128:	dc400404 	addi	r17,sp,16
    e12c:	2011883a 	mov	r8,r4
    e130:	2813883a 	mov	r9,r5
    e134:	dc001715 	stw	r16,92(sp)
    e138:	d809883a 	mov	r4,sp
    e13c:	880b883a 	mov	r5,r17
    e140:	dc000904 	addi	r16,sp,36
    e144:	dfc01f15 	stw	ra,124(sp)
    e148:	da400115 	stw	r9,4(sp)
    e14c:	d9c00315 	stw	r7,12(sp)
    e150:	da000015 	stw	r8,0(sp)
    e154:	d9800215 	stw	r6,8(sp)
    e158:	ddc01e15 	stw	r23,120(sp)
    e15c:	dd801d15 	stw	r22,116(sp)
    e160:	dd401c15 	stw	r21,112(sp)
    e164:	dd001b15 	stw	r20,108(sp)
    e168:	dcc01a15 	stw	r19,104(sp)
    e16c:	dc801915 	stw	r18,100(sp)
    e170:	000f4c00 	call	f4c0 <__unpack_d>
    e174:	d9000204 	addi	r4,sp,8
    e178:	800b883a 	mov	r5,r16
    e17c:	000f4c00 	call	f4c0 <__unpack_d>
    e180:	d9000417 	ldw	r4,16(sp)
    e184:	00800044 	movi	r2,1
    e188:	1100102e 	bgeu	r2,r4,e1cc <__muldf3+0xac>
    e18c:	d8c00917 	ldw	r3,36(sp)
    e190:	10c0062e 	bgeu	r2,r3,e1ac <__muldf3+0x8c>
    e194:	00800104 	movi	r2,4
    e198:	20800a26 	beq	r4,r2,e1c4 <__muldf3+0xa4>
    e19c:	1880cc26 	beq	r3,r2,e4d0 <__muldf3+0x3b0>
    e1a0:	00800084 	movi	r2,2
    e1a4:	20800926 	beq	r4,r2,e1cc <__muldf3+0xac>
    e1a8:	1880191e 	bne	r3,r2,e210 <__muldf3+0xf0>
    e1ac:	d8c00a17 	ldw	r3,40(sp)
    e1b0:	d8800517 	ldw	r2,20(sp)
    e1b4:	8009883a 	mov	r4,r16
    e1b8:	10c4c03a 	cmpne	r2,r2,r3
    e1bc:	d8800a15 	stw	r2,40(sp)
    e1c0:	00000706 	br	e1e0 <__muldf3+0xc0>
    e1c4:	00800084 	movi	r2,2
    e1c8:	1880c326 	beq	r3,r2,e4d8 <__muldf3+0x3b8>
    e1cc:	d8800517 	ldw	r2,20(sp)
    e1d0:	d8c00a17 	ldw	r3,40(sp)
    e1d4:	8809883a 	mov	r4,r17
    e1d8:	10c4c03a 	cmpne	r2,r2,r3
    e1dc:	d8800515 	stw	r2,20(sp)
    e1e0:	000f1ac0 	call	f1ac <__pack_d>
    e1e4:	dfc01f17 	ldw	ra,124(sp)
    e1e8:	ddc01e17 	ldw	r23,120(sp)
    e1ec:	dd801d17 	ldw	r22,116(sp)
    e1f0:	dd401c17 	ldw	r21,112(sp)
    e1f4:	dd001b17 	ldw	r20,108(sp)
    e1f8:	dcc01a17 	ldw	r19,104(sp)
    e1fc:	dc801917 	ldw	r18,100(sp)
    e200:	dc401817 	ldw	r17,96(sp)
    e204:	dc001717 	ldw	r16,92(sp)
    e208:	dec02004 	addi	sp,sp,128
    e20c:	f800283a 	ret
    e210:	dd800717 	ldw	r22,28(sp)
    e214:	dc800c17 	ldw	r18,48(sp)
    e218:	002b883a 	mov	r21,zero
    e21c:	0023883a 	mov	r17,zero
    e220:	a80b883a 	mov	r5,r21
    e224:	b00d883a 	mov	r6,r22
    e228:	880f883a 	mov	r7,r17
    e22c:	ddc00817 	ldw	r23,32(sp)
    e230:	dcc00d17 	ldw	r19,52(sp)
    e234:	9009883a 	mov	r4,r18
    e238:	000cdec0 	call	cdec <__muldi3>
    e23c:	001b883a 	mov	r13,zero
    e240:	680f883a 	mov	r7,r13
    e244:	b009883a 	mov	r4,r22
    e248:	000b883a 	mov	r5,zero
    e24c:	980d883a 	mov	r6,r19
    e250:	b82d883a 	mov	r22,r23
    e254:	002f883a 	mov	r23,zero
    e258:	db401615 	stw	r13,88(sp)
    e25c:	d8801315 	stw	r2,76(sp)
    e260:	d8c01415 	stw	r3,80(sp)
    e264:	dcc01515 	stw	r19,84(sp)
    e268:	000cdec0 	call	cdec <__muldi3>
    e26c:	b00d883a 	mov	r6,r22
    e270:	000b883a 	mov	r5,zero
    e274:	9009883a 	mov	r4,r18
    e278:	b80f883a 	mov	r7,r23
    e27c:	1021883a 	mov	r16,r2
    e280:	1823883a 	mov	r17,r3
    e284:	000cdec0 	call	cdec <__muldi3>
    e288:	8085883a 	add	r2,r16,r2
    e28c:	140d803a 	cmpltu	r6,r2,r16
    e290:	88c7883a 	add	r3,r17,r3
    e294:	30cd883a 	add	r6,r6,r3
    e298:	1029883a 	mov	r20,r2
    e29c:	302b883a 	mov	r21,r6
    e2a0:	da801317 	ldw	r10,76(sp)
    e2a4:	dac01417 	ldw	r11,80(sp)
    e2a8:	db001517 	ldw	r12,84(sp)
    e2ac:	db401617 	ldw	r13,88(sp)
    e2b0:	3440612e 	bgeu	r6,r17,e438 <__muldf3+0x318>
    e2b4:	0009883a 	mov	r4,zero
    e2b8:	5105883a 	add	r2,r10,r4
    e2bc:	128d803a 	cmpltu	r6,r2,r10
    e2c0:	5d07883a 	add	r3,r11,r20
    e2c4:	30cd883a 	add	r6,r6,r3
    e2c8:	0021883a 	mov	r16,zero
    e2cc:	04400044 	movi	r17,1
    e2d0:	1025883a 	mov	r18,r2
    e2d4:	3027883a 	mov	r19,r6
    e2d8:	32c06236 	bltu	r6,r11,e464 <__muldf3+0x344>
    e2dc:	59807a26 	beq	r11,r6,e4c8 <__muldf3+0x3a8>
    e2e0:	680b883a 	mov	r5,r13
    e2e4:	b80f883a 	mov	r7,r23
    e2e8:	6009883a 	mov	r4,r12
    e2ec:	b00d883a 	mov	r6,r22
    e2f0:	000cdec0 	call	cdec <__muldi3>
    e2f4:	1009883a 	mov	r4,r2
    e2f8:	000f883a 	mov	r7,zero
    e2fc:	1545883a 	add	r2,r2,r21
    e300:	1111803a 	cmpltu	r8,r2,r4
    e304:	19c7883a 	add	r3,r3,r7
    e308:	40c7883a 	add	r3,r8,r3
    e30c:	88cb883a 	add	r5,r17,r3
    e310:	d8c00617 	ldw	r3,24(sp)
    e314:	8089883a 	add	r4,r16,r2
    e318:	d8800b17 	ldw	r2,44(sp)
    e31c:	18c00104 	addi	r3,r3,4
    e320:	240d803a 	cmpltu	r6,r4,r16
    e324:	10c7883a 	add	r3,r2,r3
    e328:	2013883a 	mov	r9,r4
    e32c:	d8800a17 	ldw	r2,40(sp)
    e330:	d9000517 	ldw	r4,20(sp)
    e334:	314d883a 	add	r6,r6,r5
    e338:	3015883a 	mov	r10,r6
    e33c:	2088c03a 	cmpne	r4,r4,r2
    e340:	00880034 	movhi	r2,8192
    e344:	10bfffc4 	addi	r2,r2,-1
    e348:	d9000f15 	stw	r4,60(sp)
    e34c:	d8c01015 	stw	r3,64(sp)
    e350:	1180162e 	bgeu	r2,r6,e3ac <__muldf3+0x28c>
    e354:	1811883a 	mov	r8,r3
    e358:	101f883a 	mov	r15,r2
    e35c:	980497fa 	slli	r2,r19,31
    e360:	9016d07a 	srli	r11,r18,1
    e364:	500697fa 	slli	r3,r10,31
    e368:	480cd07a 	srli	r6,r9,1
    e36c:	500ed07a 	srli	r7,r10,1
    e370:	12d6b03a 	or	r11,r2,r11
    e374:	00800044 	movi	r2,1
    e378:	198cb03a 	or	r6,r3,r6
    e37c:	4888703a 	and	r4,r9,r2
    e380:	9818d07a 	srli	r12,r19,1
    e384:	001b883a 	mov	r13,zero
    e388:	03a00034 	movhi	r14,32768
    e38c:	3013883a 	mov	r9,r6
    e390:	3815883a 	mov	r10,r7
    e394:	4091883a 	add	r8,r8,r2
    e398:	20000226 	beq	r4,zero,e3a4 <__muldf3+0x284>
    e39c:	5b64b03a 	or	r18,r11,r13
    e3a0:	63a6b03a 	or	r19,r12,r14
    e3a4:	7abfed36 	bltu	r15,r10,e35c <__muldf3+0x23c>
    e3a8:	da001015 	stw	r8,64(sp)
    e3ac:	00840034 	movhi	r2,4096
    e3b0:	10bfffc4 	addi	r2,r2,-1
    e3b4:	12801436 	bltu	r2,r10,e408 <__muldf3+0x2e8>
    e3b8:	da001017 	ldw	r8,64(sp)
    e3bc:	101f883a 	mov	r15,r2
    e3c0:	4a45883a 	add	r2,r9,r9
    e3c4:	124d803a 	cmpltu	r6,r2,r9
    e3c8:	5287883a 	add	r3,r10,r10
    e3cc:	9497883a 	add	r11,r18,r18
    e3d0:	5c8f803a 	cmpltu	r7,r11,r18
    e3d4:	9cd9883a 	add	r12,r19,r19
    e3d8:	01000044 	movi	r4,1
    e3dc:	30cd883a 	add	r6,r6,r3
    e3e0:	3b0f883a 	add	r7,r7,r12
    e3e4:	423fffc4 	addi	r8,r8,-1
    e3e8:	1013883a 	mov	r9,r2
    e3ec:	3015883a 	mov	r10,r6
    e3f0:	111ab03a 	or	r13,r2,r4
    e3f4:	98003016 	blt	r19,zero,e4b8 <__muldf3+0x398>
    e3f8:	5825883a 	mov	r18,r11
    e3fc:	3827883a 	mov	r19,r7
    e400:	7abfef2e 	bgeu	r15,r10,e3c0 <__muldf3+0x2a0>
    e404:	da001015 	stw	r8,64(sp)
    e408:	00803fc4 	movi	r2,255
    e40c:	488e703a 	and	r7,r9,r2
    e410:	00802004 	movi	r2,128
    e414:	0007883a 	mov	r3,zero
    e418:	0011883a 	mov	r8,zero
    e41c:	38801826 	beq	r7,r2,e480 <__muldf3+0x360>
    e420:	008000c4 	movi	r2,3
    e424:	d9000e04 	addi	r4,sp,56
    e428:	da801215 	stw	r10,72(sp)
    e42c:	d8800e15 	stw	r2,56(sp)
    e430:	da401115 	stw	r9,68(sp)
    e434:	003f6a06 	br	e1e0 <__muldf3+0xc0>
    e438:	89802126 	beq	r17,r6,e4c0 <__muldf3+0x3a0>
    e43c:	0009883a 	mov	r4,zero
    e440:	5105883a 	add	r2,r10,r4
    e444:	128d803a 	cmpltu	r6,r2,r10
    e448:	5d07883a 	add	r3,r11,r20
    e44c:	30cd883a 	add	r6,r6,r3
    e450:	0021883a 	mov	r16,zero
    e454:	0023883a 	mov	r17,zero
    e458:	1025883a 	mov	r18,r2
    e45c:	3027883a 	mov	r19,r6
    e460:	32ff9e2e 	bgeu	r6,r11,e2dc <__muldf3+0x1bc>
    e464:	00800044 	movi	r2,1
    e468:	8089883a 	add	r4,r16,r2
    e46c:	240d803a 	cmpltu	r6,r4,r16
    e470:	344d883a 	add	r6,r6,r17
    e474:	2021883a 	mov	r16,r4
    e478:	3023883a 	mov	r17,r6
    e47c:	003f9806 	br	e2e0 <__muldf3+0x1c0>
    e480:	403fe71e 	bne	r8,zero,e420 <__muldf3+0x300>
    e484:	01004004 	movi	r4,256
    e488:	4904703a 	and	r2,r9,r4
    e48c:	10c4b03a 	or	r2,r2,r3
    e490:	103fe31e 	bne	r2,zero,e420 <__muldf3+0x300>
    e494:	94c4b03a 	or	r2,r18,r19
    e498:	103fe126 	beq	r2,zero,e420 <__muldf3+0x300>
    e49c:	49c5883a 	add	r2,r9,r7
    e4a0:	1251803a 	cmpltu	r8,r2,r9
    e4a4:	4291883a 	add	r8,r8,r10
    e4a8:	013fc004 	movi	r4,-256
    e4ac:	1112703a 	and	r9,r2,r4
    e4b0:	4015883a 	mov	r10,r8
    e4b4:	003fda06 	br	e420 <__muldf3+0x300>
    e4b8:	6813883a 	mov	r9,r13
    e4bc:	003fce06 	br	e3f8 <__muldf3+0x2d8>
    e4c0:	143f7c36 	bltu	r2,r16,e2b4 <__muldf3+0x194>
    e4c4:	003fdd06 	br	e43c <__muldf3+0x31c>
    e4c8:	12bf852e 	bgeu	r2,r10,e2e0 <__muldf3+0x1c0>
    e4cc:	003fe506 	br	e464 <__muldf3+0x344>
    e4d0:	00800084 	movi	r2,2
    e4d4:	20bf351e 	bne	r4,r2,e1ac <__muldf3+0x8c>
    e4d8:	01000074 	movhi	r4,1
    e4dc:	210a6f04 	addi	r4,r4,10684
    e4e0:	003f3f06 	br	e1e0 <__muldf3+0xc0>

0000e4e4 <__divdf3>:
    e4e4:	deffed04 	addi	sp,sp,-76
    e4e8:	dcc01115 	stw	r19,68(sp)
    e4ec:	dcc00404 	addi	r19,sp,16
    e4f0:	2011883a 	mov	r8,r4
    e4f4:	2813883a 	mov	r9,r5
    e4f8:	dc000e15 	stw	r16,56(sp)
    e4fc:	d809883a 	mov	r4,sp
    e500:	980b883a 	mov	r5,r19
    e504:	dc000904 	addi	r16,sp,36
    e508:	dfc01215 	stw	ra,72(sp)
    e50c:	da400115 	stw	r9,4(sp)
    e510:	d9c00315 	stw	r7,12(sp)
    e514:	da000015 	stw	r8,0(sp)
    e518:	d9800215 	stw	r6,8(sp)
    e51c:	dc801015 	stw	r18,64(sp)
    e520:	dc400f15 	stw	r17,60(sp)
    e524:	000f4c00 	call	f4c0 <__unpack_d>
    e528:	d9000204 	addi	r4,sp,8
    e52c:	800b883a 	mov	r5,r16
    e530:	000f4c00 	call	f4c0 <__unpack_d>
    e534:	d9000417 	ldw	r4,16(sp)
    e538:	00800044 	movi	r2,1
    e53c:	11000b2e 	bgeu	r2,r4,e56c <__divdf3+0x88>
    e540:	d9400917 	ldw	r5,36(sp)
    e544:	1140762e 	bgeu	r2,r5,e720 <__divdf3+0x23c>
    e548:	d8800517 	ldw	r2,20(sp)
    e54c:	d8c00a17 	ldw	r3,40(sp)
    e550:	01800104 	movi	r6,4
    e554:	10c4f03a 	xor	r2,r2,r3
    e558:	d8800515 	stw	r2,20(sp)
    e55c:	21800226 	beq	r4,r6,e568 <__divdf3+0x84>
    e560:	00800084 	movi	r2,2
    e564:	2080141e 	bne	r4,r2,e5b8 <__divdf3+0xd4>
    e568:	29000926 	beq	r5,r4,e590 <__divdf3+0xac>
    e56c:	9809883a 	mov	r4,r19
    e570:	000f1ac0 	call	f1ac <__pack_d>
    e574:	dfc01217 	ldw	ra,72(sp)
    e578:	dcc01117 	ldw	r19,68(sp)
    e57c:	dc801017 	ldw	r18,64(sp)
    e580:	dc400f17 	ldw	r17,60(sp)
    e584:	dc000e17 	ldw	r16,56(sp)
    e588:	dec01304 	addi	sp,sp,76
    e58c:	f800283a 	ret
    e590:	01000074 	movhi	r4,1
    e594:	210a6f04 	addi	r4,r4,10684
    e598:	000f1ac0 	call	f1ac <__pack_d>
    e59c:	dfc01217 	ldw	ra,72(sp)
    e5a0:	dcc01117 	ldw	r19,68(sp)
    e5a4:	dc801017 	ldw	r18,64(sp)
    e5a8:	dc400f17 	ldw	r17,60(sp)
    e5ac:	dc000e17 	ldw	r16,56(sp)
    e5b0:	dec01304 	addi	sp,sp,76
    e5b4:	f800283a 	ret
    e5b8:	29805b26 	beq	r5,r6,e728 <__divdf3+0x244>
    e5bc:	28802d26 	beq	r5,r2,e674 <__divdf3+0x190>
    e5c0:	d8c00617 	ldw	r3,24(sp)
    e5c4:	d8800b17 	ldw	r2,44(sp)
    e5c8:	d9c00817 	ldw	r7,32(sp)
    e5cc:	dc400d17 	ldw	r17,52(sp)
    e5d0:	188bc83a 	sub	r5,r3,r2
    e5d4:	d9800717 	ldw	r6,28(sp)
    e5d8:	dc000c17 	ldw	r16,48(sp)
    e5dc:	d9400615 	stw	r5,24(sp)
    e5e0:	3c403836 	bltu	r7,r17,e6c4 <__divdf3+0x1e0>
    e5e4:	89c03626 	beq	r17,r7,e6c0 <__divdf3+0x1dc>
    e5e8:	0015883a 	mov	r10,zero
    e5ec:	001d883a 	mov	r14,zero
    e5f0:	02c40034 	movhi	r11,4096
    e5f4:	001f883a 	mov	r15,zero
    e5f8:	003f883a 	mov	ra,zero
    e5fc:	04800f44 	movi	r18,61
    e600:	00000f06 	br	e640 <__divdf3+0x15c>
    e604:	601d883a 	mov	r14,r12
    e608:	681f883a 	mov	r15,r13
    e60c:	400d883a 	mov	r6,r8
    e610:	100f883a 	mov	r7,r2
    e614:	3191883a 	add	r8,r6,r6
    e618:	5808d07a 	srli	r4,r11,1
    e61c:	4185803a 	cmpltu	r2,r8,r6
    e620:	39d3883a 	add	r9,r7,r7
    e624:	28c6b03a 	or	r3,r5,r3
    e628:	1245883a 	add	r2,r2,r9
    e62c:	1815883a 	mov	r10,r3
    e630:	2017883a 	mov	r11,r4
    e634:	400d883a 	mov	r6,r8
    e638:	100f883a 	mov	r7,r2
    e63c:	fc801726 	beq	ra,r18,e69c <__divdf3+0x1b8>
    e640:	580a97fa 	slli	r5,r11,31
    e644:	5006d07a 	srli	r3,r10,1
    e648:	ffc00044 	addi	ra,ra,1
    e64c:	3c7ff136 	bltu	r7,r17,e614 <__divdf3+0x130>
    e650:	3411c83a 	sub	r8,r6,r16
    e654:	3205803a 	cmpltu	r2,r6,r8
    e658:	3c53c83a 	sub	r9,r7,r17
    e65c:	7298b03a 	or	r12,r14,r10
    e660:	7adab03a 	or	r13,r15,r11
    e664:	4885c83a 	sub	r2,r9,r2
    e668:	89ffe61e 	bne	r17,r7,e604 <__divdf3+0x120>
    e66c:	343fe936 	bltu	r6,r16,e614 <__divdf3+0x130>
    e670:	003fe406 	br	e604 <__divdf3+0x120>
    e674:	9809883a 	mov	r4,r19
    e678:	d9800415 	stw	r6,16(sp)
    e67c:	000f1ac0 	call	f1ac <__pack_d>
    e680:	dfc01217 	ldw	ra,72(sp)
    e684:	dcc01117 	ldw	r19,68(sp)
    e688:	dc801017 	ldw	r18,64(sp)
    e68c:	dc400f17 	ldw	r17,60(sp)
    e690:	dc000e17 	ldw	r16,56(sp)
    e694:	dec01304 	addi	sp,sp,76
    e698:	f800283a 	ret
    e69c:	00803fc4 	movi	r2,255
    e6a0:	7090703a 	and	r8,r14,r2
    e6a4:	00802004 	movi	r2,128
    e6a8:	0007883a 	mov	r3,zero
    e6ac:	0013883a 	mov	r9,zero
    e6b0:	40800d26 	beq	r8,r2,e6e8 <__divdf3+0x204>
    e6b4:	dbc00815 	stw	r15,32(sp)
    e6b8:	db800715 	stw	r14,28(sp)
    e6bc:	003fab06 	br	e56c <__divdf3+0x88>
    e6c0:	343fc92e 	bgeu	r6,r16,e5e8 <__divdf3+0x104>
    e6c4:	3185883a 	add	r2,r6,r6
    e6c8:	1189803a 	cmpltu	r4,r2,r6
    e6cc:	39c7883a 	add	r3,r7,r7
    e6d0:	20c9883a 	add	r4,r4,r3
    e6d4:	297fffc4 	addi	r5,r5,-1
    e6d8:	100d883a 	mov	r6,r2
    e6dc:	200f883a 	mov	r7,r4
    e6e0:	d9400615 	stw	r5,24(sp)
    e6e4:	003fc006 	br	e5e8 <__divdf3+0x104>
    e6e8:	483ff21e 	bne	r9,zero,e6b4 <__divdf3+0x1d0>
    e6ec:	01004004 	movi	r4,256
    e6f0:	7104703a 	and	r2,r14,r4
    e6f4:	10c4b03a 	or	r2,r2,r3
    e6f8:	103fee1e 	bne	r2,zero,e6b4 <__divdf3+0x1d0>
    e6fc:	31c4b03a 	or	r2,r6,r7
    e700:	103fec26 	beq	r2,zero,e6b4 <__divdf3+0x1d0>
    e704:	7205883a 	add	r2,r14,r8
    e708:	1391803a 	cmpltu	r8,r2,r14
    e70c:	43d1883a 	add	r8,r8,r15
    e710:	013fc004 	movi	r4,-256
    e714:	111c703a 	and	r14,r2,r4
    e718:	401f883a 	mov	r15,r8
    e71c:	003fe506 	br	e6b4 <__divdf3+0x1d0>
    e720:	8009883a 	mov	r4,r16
    e724:	003f9206 	br	e570 <__divdf3+0x8c>
    e728:	9809883a 	mov	r4,r19
    e72c:	d8000715 	stw	zero,28(sp)
    e730:	d8000815 	stw	zero,32(sp)
    e734:	d8000615 	stw	zero,24(sp)
    e738:	003f8d06 	br	e570 <__divdf3+0x8c>

0000e73c <__eqdf2>:
    e73c:	deffef04 	addi	sp,sp,-68
    e740:	dc400f15 	stw	r17,60(sp)
    e744:	dc400404 	addi	r17,sp,16
    e748:	2005883a 	mov	r2,r4
    e74c:	2807883a 	mov	r3,r5
    e750:	dc000e15 	stw	r16,56(sp)
    e754:	d809883a 	mov	r4,sp
    e758:	880b883a 	mov	r5,r17
    e75c:	dc000904 	addi	r16,sp,36
    e760:	d8c00115 	stw	r3,4(sp)
    e764:	d8800015 	stw	r2,0(sp)
    e768:	d9800215 	stw	r6,8(sp)
    e76c:	dfc01015 	stw	ra,64(sp)
    e770:	d9c00315 	stw	r7,12(sp)
    e774:	000f4c00 	call	f4c0 <__unpack_d>
    e778:	d9000204 	addi	r4,sp,8
    e77c:	800b883a 	mov	r5,r16
    e780:	000f4c00 	call	f4c0 <__unpack_d>
    e784:	d8800417 	ldw	r2,16(sp)
    e788:	00c00044 	movi	r3,1
    e78c:	180d883a 	mov	r6,r3
    e790:	1880062e 	bgeu	r3,r2,e7ac <__eqdf2+0x70>
    e794:	d8800917 	ldw	r2,36(sp)
    e798:	8809883a 	mov	r4,r17
    e79c:	800b883a 	mov	r5,r16
    e7a0:	1880022e 	bgeu	r3,r2,e7ac <__eqdf2+0x70>
    e7a4:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    e7a8:	100d883a 	mov	r6,r2
    e7ac:	3005883a 	mov	r2,r6
    e7b0:	dfc01017 	ldw	ra,64(sp)
    e7b4:	dc400f17 	ldw	r17,60(sp)
    e7b8:	dc000e17 	ldw	r16,56(sp)
    e7bc:	dec01104 	addi	sp,sp,68
    e7c0:	f800283a 	ret

0000e7c4 <__nedf2>:
    e7c4:	deffef04 	addi	sp,sp,-68
    e7c8:	dc400f15 	stw	r17,60(sp)
    e7cc:	dc400404 	addi	r17,sp,16
    e7d0:	2005883a 	mov	r2,r4
    e7d4:	2807883a 	mov	r3,r5
    e7d8:	dc000e15 	stw	r16,56(sp)
    e7dc:	d809883a 	mov	r4,sp
    e7e0:	880b883a 	mov	r5,r17
    e7e4:	dc000904 	addi	r16,sp,36
    e7e8:	d8c00115 	stw	r3,4(sp)
    e7ec:	d8800015 	stw	r2,0(sp)
    e7f0:	d9800215 	stw	r6,8(sp)
    e7f4:	dfc01015 	stw	ra,64(sp)
    e7f8:	d9c00315 	stw	r7,12(sp)
    e7fc:	000f4c00 	call	f4c0 <__unpack_d>
    e800:	d9000204 	addi	r4,sp,8
    e804:	800b883a 	mov	r5,r16
    e808:	000f4c00 	call	f4c0 <__unpack_d>
    e80c:	d8800417 	ldw	r2,16(sp)
    e810:	00c00044 	movi	r3,1
    e814:	180d883a 	mov	r6,r3
    e818:	1880062e 	bgeu	r3,r2,e834 <__nedf2+0x70>
    e81c:	d8800917 	ldw	r2,36(sp)
    e820:	8809883a 	mov	r4,r17
    e824:	800b883a 	mov	r5,r16
    e828:	1880022e 	bgeu	r3,r2,e834 <__nedf2+0x70>
    e82c:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    e830:	100d883a 	mov	r6,r2
    e834:	3005883a 	mov	r2,r6
    e838:	dfc01017 	ldw	ra,64(sp)
    e83c:	dc400f17 	ldw	r17,60(sp)
    e840:	dc000e17 	ldw	r16,56(sp)
    e844:	dec01104 	addi	sp,sp,68
    e848:	f800283a 	ret

0000e84c <__gtdf2>:
    e84c:	deffef04 	addi	sp,sp,-68
    e850:	dc400f15 	stw	r17,60(sp)
    e854:	dc400404 	addi	r17,sp,16
    e858:	2005883a 	mov	r2,r4
    e85c:	2807883a 	mov	r3,r5
    e860:	dc000e15 	stw	r16,56(sp)
    e864:	d809883a 	mov	r4,sp
    e868:	880b883a 	mov	r5,r17
    e86c:	dc000904 	addi	r16,sp,36
    e870:	d8c00115 	stw	r3,4(sp)
    e874:	d8800015 	stw	r2,0(sp)
    e878:	d9800215 	stw	r6,8(sp)
    e87c:	dfc01015 	stw	ra,64(sp)
    e880:	d9c00315 	stw	r7,12(sp)
    e884:	000f4c00 	call	f4c0 <__unpack_d>
    e888:	d9000204 	addi	r4,sp,8
    e88c:	800b883a 	mov	r5,r16
    e890:	000f4c00 	call	f4c0 <__unpack_d>
    e894:	d8800417 	ldw	r2,16(sp)
    e898:	00c00044 	movi	r3,1
    e89c:	01bfffc4 	movi	r6,-1
    e8a0:	1880062e 	bgeu	r3,r2,e8bc <__gtdf2+0x70>
    e8a4:	d8800917 	ldw	r2,36(sp)
    e8a8:	8809883a 	mov	r4,r17
    e8ac:	800b883a 	mov	r5,r16
    e8b0:	1880022e 	bgeu	r3,r2,e8bc <__gtdf2+0x70>
    e8b4:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    e8b8:	100d883a 	mov	r6,r2
    e8bc:	3005883a 	mov	r2,r6
    e8c0:	dfc01017 	ldw	ra,64(sp)
    e8c4:	dc400f17 	ldw	r17,60(sp)
    e8c8:	dc000e17 	ldw	r16,56(sp)
    e8cc:	dec01104 	addi	sp,sp,68
    e8d0:	f800283a 	ret

0000e8d4 <__gedf2>:
    e8d4:	deffef04 	addi	sp,sp,-68
    e8d8:	dc400f15 	stw	r17,60(sp)
    e8dc:	dc400404 	addi	r17,sp,16
    e8e0:	2005883a 	mov	r2,r4
    e8e4:	2807883a 	mov	r3,r5
    e8e8:	dc000e15 	stw	r16,56(sp)
    e8ec:	d809883a 	mov	r4,sp
    e8f0:	880b883a 	mov	r5,r17
    e8f4:	dc000904 	addi	r16,sp,36
    e8f8:	d8c00115 	stw	r3,4(sp)
    e8fc:	d8800015 	stw	r2,0(sp)
    e900:	d9800215 	stw	r6,8(sp)
    e904:	dfc01015 	stw	ra,64(sp)
    e908:	d9c00315 	stw	r7,12(sp)
    e90c:	000f4c00 	call	f4c0 <__unpack_d>
    e910:	d9000204 	addi	r4,sp,8
    e914:	800b883a 	mov	r5,r16
    e918:	000f4c00 	call	f4c0 <__unpack_d>
    e91c:	d8800417 	ldw	r2,16(sp)
    e920:	00c00044 	movi	r3,1
    e924:	01bfffc4 	movi	r6,-1
    e928:	1880062e 	bgeu	r3,r2,e944 <__gedf2+0x70>
    e92c:	d8800917 	ldw	r2,36(sp)
    e930:	8809883a 	mov	r4,r17
    e934:	800b883a 	mov	r5,r16
    e938:	1880022e 	bgeu	r3,r2,e944 <__gedf2+0x70>
    e93c:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    e940:	100d883a 	mov	r6,r2
    e944:	3005883a 	mov	r2,r6
    e948:	dfc01017 	ldw	ra,64(sp)
    e94c:	dc400f17 	ldw	r17,60(sp)
    e950:	dc000e17 	ldw	r16,56(sp)
    e954:	dec01104 	addi	sp,sp,68
    e958:	f800283a 	ret

0000e95c <__ltdf2>:
    e95c:	deffef04 	addi	sp,sp,-68
    e960:	dc400f15 	stw	r17,60(sp)
    e964:	dc400404 	addi	r17,sp,16
    e968:	2005883a 	mov	r2,r4
    e96c:	2807883a 	mov	r3,r5
    e970:	dc000e15 	stw	r16,56(sp)
    e974:	d809883a 	mov	r4,sp
    e978:	880b883a 	mov	r5,r17
    e97c:	dc000904 	addi	r16,sp,36
    e980:	d8c00115 	stw	r3,4(sp)
    e984:	d8800015 	stw	r2,0(sp)
    e988:	d9800215 	stw	r6,8(sp)
    e98c:	dfc01015 	stw	ra,64(sp)
    e990:	d9c00315 	stw	r7,12(sp)
    e994:	000f4c00 	call	f4c0 <__unpack_d>
    e998:	d9000204 	addi	r4,sp,8
    e99c:	800b883a 	mov	r5,r16
    e9a0:	000f4c00 	call	f4c0 <__unpack_d>
    e9a4:	d8800417 	ldw	r2,16(sp)
    e9a8:	00c00044 	movi	r3,1
    e9ac:	180d883a 	mov	r6,r3
    e9b0:	1880062e 	bgeu	r3,r2,e9cc <__ltdf2+0x70>
    e9b4:	d8800917 	ldw	r2,36(sp)
    e9b8:	8809883a 	mov	r4,r17
    e9bc:	800b883a 	mov	r5,r16
    e9c0:	1880022e 	bgeu	r3,r2,e9cc <__ltdf2+0x70>
    e9c4:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    e9c8:	100d883a 	mov	r6,r2
    e9cc:	3005883a 	mov	r2,r6
    e9d0:	dfc01017 	ldw	ra,64(sp)
    e9d4:	dc400f17 	ldw	r17,60(sp)
    e9d8:	dc000e17 	ldw	r16,56(sp)
    e9dc:	dec01104 	addi	sp,sp,68
    e9e0:	f800283a 	ret

0000e9e4 <__ledf2>:
    e9e4:	deffef04 	addi	sp,sp,-68
    e9e8:	dc400f15 	stw	r17,60(sp)
    e9ec:	dc400404 	addi	r17,sp,16
    e9f0:	2005883a 	mov	r2,r4
    e9f4:	2807883a 	mov	r3,r5
    e9f8:	dc000e15 	stw	r16,56(sp)
    e9fc:	d809883a 	mov	r4,sp
    ea00:	880b883a 	mov	r5,r17
    ea04:	dc000904 	addi	r16,sp,36
    ea08:	d8c00115 	stw	r3,4(sp)
    ea0c:	d8800015 	stw	r2,0(sp)
    ea10:	d9800215 	stw	r6,8(sp)
    ea14:	dfc01015 	stw	ra,64(sp)
    ea18:	d9c00315 	stw	r7,12(sp)
    ea1c:	000f4c00 	call	f4c0 <__unpack_d>
    ea20:	d9000204 	addi	r4,sp,8
    ea24:	800b883a 	mov	r5,r16
    ea28:	000f4c00 	call	f4c0 <__unpack_d>
    ea2c:	d8800417 	ldw	r2,16(sp)
    ea30:	00c00044 	movi	r3,1
    ea34:	180d883a 	mov	r6,r3
    ea38:	1880062e 	bgeu	r3,r2,ea54 <__ledf2+0x70>
    ea3c:	d8800917 	ldw	r2,36(sp)
    ea40:	8809883a 	mov	r4,r17
    ea44:	800b883a 	mov	r5,r16
    ea48:	1880022e 	bgeu	r3,r2,ea54 <__ledf2+0x70>
    ea4c:	000f5f80 	call	f5f8 <__fpcmp_parts_d>
    ea50:	100d883a 	mov	r6,r2
    ea54:	3005883a 	mov	r2,r6
    ea58:	dfc01017 	ldw	ra,64(sp)
    ea5c:	dc400f17 	ldw	r17,60(sp)
    ea60:	dc000e17 	ldw	r16,56(sp)
    ea64:	dec01104 	addi	sp,sp,68
    ea68:	f800283a 	ret

0000ea6c <__floatsidf>:
    ea6c:	2006d7fa 	srli	r3,r4,31
    ea70:	defff604 	addi	sp,sp,-40
    ea74:	008000c4 	movi	r2,3
    ea78:	dfc00915 	stw	ra,36(sp)
    ea7c:	dcc00815 	stw	r19,32(sp)
    ea80:	dc800715 	stw	r18,28(sp)
    ea84:	dc400615 	stw	r17,24(sp)
    ea88:	dc000515 	stw	r16,20(sp)
    ea8c:	d8800015 	stw	r2,0(sp)
    ea90:	d8c00115 	stw	r3,4(sp)
    ea94:	20000f1e 	bne	r4,zero,ead4 <__floatsidf+0x68>
    ea98:	00800084 	movi	r2,2
    ea9c:	d8800015 	stw	r2,0(sp)
    eaa0:	d809883a 	mov	r4,sp
    eaa4:	000f1ac0 	call	f1ac <__pack_d>
    eaa8:	1009883a 	mov	r4,r2
    eaac:	180b883a 	mov	r5,r3
    eab0:	2005883a 	mov	r2,r4
    eab4:	2807883a 	mov	r3,r5
    eab8:	dfc00917 	ldw	ra,36(sp)
    eabc:	dcc00817 	ldw	r19,32(sp)
    eac0:	dc800717 	ldw	r18,28(sp)
    eac4:	dc400617 	ldw	r17,24(sp)
    eac8:	dc000517 	ldw	r16,20(sp)
    eacc:	dec00a04 	addi	sp,sp,40
    ead0:	f800283a 	ret
    ead4:	00800f04 	movi	r2,60
    ead8:	1807003a 	cmpeq	r3,r3,zero
    eadc:	d8800215 	stw	r2,8(sp)
    eae0:	18001126 	beq	r3,zero,eb28 <__floatsidf+0xbc>
    eae4:	0027883a 	mov	r19,zero
    eae8:	2025883a 	mov	r18,r4
    eaec:	d9000315 	stw	r4,12(sp)
    eaf0:	dcc00415 	stw	r19,16(sp)
    eaf4:	000ef900 	call	ef90 <__clzsi2>
    eaf8:	11000744 	addi	r4,r2,29
    eafc:	013fe80e 	bge	zero,r4,eaa0 <__floatsidf+0x34>
    eb00:	10bfff44 	addi	r2,r2,-3
    eb04:	10000c16 	blt	r2,zero,eb38 <__floatsidf+0xcc>
    eb08:	90a2983a 	sll	r17,r18,r2
    eb0c:	0021883a 	mov	r16,zero
    eb10:	d8800217 	ldw	r2,8(sp)
    eb14:	dc400415 	stw	r17,16(sp)
    eb18:	dc000315 	stw	r16,12(sp)
    eb1c:	1105c83a 	sub	r2,r2,r4
    eb20:	d8800215 	stw	r2,8(sp)
    eb24:	003fde06 	br	eaa0 <__floatsidf+0x34>
    eb28:	00a00034 	movhi	r2,32768
    eb2c:	20800a26 	beq	r4,r2,eb58 <__floatsidf+0xec>
    eb30:	0109c83a 	sub	r4,zero,r4
    eb34:	003feb06 	br	eae4 <__floatsidf+0x78>
    eb38:	9006d07a 	srli	r3,r18,1
    eb3c:	008007c4 	movi	r2,31
    eb40:	1105c83a 	sub	r2,r2,r4
    eb44:	1886d83a 	srl	r3,r3,r2
    eb48:	9922983a 	sll	r17,r19,r4
    eb4c:	9120983a 	sll	r16,r18,r4
    eb50:	1c62b03a 	or	r17,r3,r17
    eb54:	003fee06 	br	eb10 <__floatsidf+0xa4>
    eb58:	0009883a 	mov	r4,zero
    eb5c:	01707834 	movhi	r5,49632
    eb60:	003fd306 	br	eab0 <__floatsidf+0x44>

0000eb64 <__fixdfsi>:
    eb64:	defff804 	addi	sp,sp,-32
    eb68:	2005883a 	mov	r2,r4
    eb6c:	2807883a 	mov	r3,r5
    eb70:	d809883a 	mov	r4,sp
    eb74:	d9400204 	addi	r5,sp,8
    eb78:	d8c00115 	stw	r3,4(sp)
    eb7c:	d8800015 	stw	r2,0(sp)
    eb80:	dfc00715 	stw	ra,28(sp)
    eb84:	000f4c00 	call	f4c0 <__unpack_d>
    eb88:	d8c00217 	ldw	r3,8(sp)
    eb8c:	00800084 	movi	r2,2
    eb90:	1880051e 	bne	r3,r2,eba8 <__fixdfsi+0x44>
    eb94:	0007883a 	mov	r3,zero
    eb98:	1805883a 	mov	r2,r3
    eb9c:	dfc00717 	ldw	ra,28(sp)
    eba0:	dec00804 	addi	sp,sp,32
    eba4:	f800283a 	ret
    eba8:	00800044 	movi	r2,1
    ebac:	10fff92e 	bgeu	r2,r3,eb94 <__fixdfsi+0x30>
    ebb0:	00800104 	movi	r2,4
    ebb4:	18800426 	beq	r3,r2,ebc8 <__fixdfsi+0x64>
    ebb8:	d8c00417 	ldw	r3,16(sp)
    ebbc:	183ff516 	blt	r3,zero,eb94 <__fixdfsi+0x30>
    ebc0:	00800784 	movi	r2,30
    ebc4:	10c0080e 	bge	r2,r3,ebe8 <__fixdfsi+0x84>
    ebc8:	d8800317 	ldw	r2,12(sp)
    ebcc:	1000121e 	bne	r2,zero,ec18 <__fixdfsi+0xb4>
    ebd0:	00e00034 	movhi	r3,32768
    ebd4:	18ffffc4 	addi	r3,r3,-1
    ebd8:	1805883a 	mov	r2,r3
    ebdc:	dfc00717 	ldw	ra,28(sp)
    ebe0:	dec00804 	addi	sp,sp,32
    ebe4:	f800283a 	ret
    ebe8:	00800f04 	movi	r2,60
    ebec:	10d1c83a 	sub	r8,r2,r3
    ebf0:	40bff804 	addi	r2,r8,-32
    ebf4:	d9800517 	ldw	r6,20(sp)
    ebf8:	d9c00617 	ldw	r7,24(sp)
    ebfc:	10000816 	blt	r2,zero,ec20 <__fixdfsi+0xbc>
    ec00:	3888d83a 	srl	r4,r7,r2
    ec04:	d8800317 	ldw	r2,12(sp)
    ec08:	2007883a 	mov	r3,r4
    ec0c:	103fe226 	beq	r2,zero,eb98 <__fixdfsi+0x34>
    ec10:	0107c83a 	sub	r3,zero,r4
    ec14:	003fe006 	br	eb98 <__fixdfsi+0x34>
    ec18:	00e00034 	movhi	r3,32768
    ec1c:	003fde06 	br	eb98 <__fixdfsi+0x34>
    ec20:	39c7883a 	add	r3,r7,r7
    ec24:	008007c4 	movi	r2,31
    ec28:	1205c83a 	sub	r2,r2,r8
    ec2c:	1886983a 	sll	r3,r3,r2
    ec30:	3208d83a 	srl	r4,r6,r8
    ec34:	1908b03a 	or	r4,r3,r4
    ec38:	003ff206 	br	ec04 <__fixdfsi+0xa0>

0000ec3c <__truncdfsf2>:
    ec3c:	defff804 	addi	sp,sp,-32
    ec40:	2005883a 	mov	r2,r4
    ec44:	2807883a 	mov	r3,r5
    ec48:	d809883a 	mov	r4,sp
    ec4c:	d9400204 	addi	r5,sp,8
    ec50:	d8c00115 	stw	r3,4(sp)
    ec54:	d8800015 	stw	r2,0(sp)
    ec58:	dfc00715 	stw	ra,28(sp)
    ec5c:	000f4c00 	call	f4c0 <__unpack_d>
    ec60:	d9c00517 	ldw	r7,20(sp)
    ec64:	da000617 	ldw	r8,24(sp)
    ec68:	02d00034 	movhi	r11,16384
    ec6c:	5affffc4 	addi	r11,r11,-1
    ec70:	3812d7ba 	srli	r9,r7,30
    ec74:	401a90ba 	slli	r13,r8,2
    ec78:	3ac4703a 	and	r2,r7,r11
    ec7c:	0007883a 	mov	r3,zero
    ec80:	6a52b03a 	or	r9,r13,r9
    ec84:	10c4b03a 	or	r2,r2,r3
    ec88:	d9000217 	ldw	r4,8(sp)
    ec8c:	d9400317 	ldw	r5,12(sp)
    ec90:	d9800417 	ldw	r6,16(sp)
    ec94:	480f883a 	mov	r7,r9
    ec98:	10000126 	beq	r2,zero,eca0 <__truncdfsf2+0x64>
    ec9c:	49c00054 	ori	r7,r9,1
    eca0:	000f1800 	call	f180 <__make_fp>
    eca4:	dfc00717 	ldw	ra,28(sp)
    eca8:	dec00804 	addi	sp,sp,32
    ecac:	f800283a 	ret

0000ecb0 <__floatunsidf>:
    ecb0:	defff204 	addi	sp,sp,-56
    ecb4:	dfc00d15 	stw	ra,52(sp)
    ecb8:	ddc00c15 	stw	r23,48(sp)
    ecbc:	dd800b15 	stw	r22,44(sp)
    ecc0:	dd400a15 	stw	r21,40(sp)
    ecc4:	dd000915 	stw	r20,36(sp)
    ecc8:	dcc00815 	stw	r19,32(sp)
    eccc:	dc800715 	stw	r18,28(sp)
    ecd0:	dc400615 	stw	r17,24(sp)
    ecd4:	dc000515 	stw	r16,20(sp)
    ecd8:	d8000115 	stw	zero,4(sp)
    ecdc:	20000f1e 	bne	r4,zero,ed1c <__floatunsidf+0x6c>
    ece0:	00800084 	movi	r2,2
    ece4:	d8800015 	stw	r2,0(sp)
    ece8:	d809883a 	mov	r4,sp
    ecec:	000f1ac0 	call	f1ac <__pack_d>
    ecf0:	dfc00d17 	ldw	ra,52(sp)
    ecf4:	ddc00c17 	ldw	r23,48(sp)
    ecf8:	dd800b17 	ldw	r22,44(sp)
    ecfc:	dd400a17 	ldw	r21,40(sp)
    ed00:	dd000917 	ldw	r20,36(sp)
    ed04:	dcc00817 	ldw	r19,32(sp)
    ed08:	dc800717 	ldw	r18,28(sp)
    ed0c:	dc400617 	ldw	r17,24(sp)
    ed10:	dc000517 	ldw	r16,20(sp)
    ed14:	dec00e04 	addi	sp,sp,56
    ed18:	f800283a 	ret
    ed1c:	008000c4 	movi	r2,3
    ed20:	00c00f04 	movi	r3,60
    ed24:	002f883a 	mov	r23,zero
    ed28:	202d883a 	mov	r22,r4
    ed2c:	d8800015 	stw	r2,0(sp)
    ed30:	d8c00215 	stw	r3,8(sp)
    ed34:	d9000315 	stw	r4,12(sp)
    ed38:	ddc00415 	stw	r23,16(sp)
    ed3c:	000ef900 	call	ef90 <__clzsi2>
    ed40:	12400744 	addi	r9,r2,29
    ed44:	48000b16 	blt	r9,zero,ed74 <__floatunsidf+0xc4>
    ed48:	483fe726 	beq	r9,zero,ece8 <__floatunsidf+0x38>
    ed4c:	10bfff44 	addi	r2,r2,-3
    ed50:	10002e16 	blt	r2,zero,ee0c <__floatunsidf+0x15c>
    ed54:	b0a2983a 	sll	r17,r22,r2
    ed58:	0021883a 	mov	r16,zero
    ed5c:	d8800217 	ldw	r2,8(sp)
    ed60:	dc400415 	stw	r17,16(sp)
    ed64:	dc000315 	stw	r16,12(sp)
    ed68:	1245c83a 	sub	r2,r2,r9
    ed6c:	d8800215 	stw	r2,8(sp)
    ed70:	003fdd06 	br	ece8 <__floatunsidf+0x38>
    ed74:	0255c83a 	sub	r10,zero,r9
    ed78:	51bff804 	addi	r6,r10,-32
    ed7c:	30001b16 	blt	r6,zero,edec <__floatunsidf+0x13c>
    ed80:	b9a8d83a 	srl	r20,r23,r6
    ed84:	002b883a 	mov	r21,zero
    ed88:	000f883a 	mov	r7,zero
    ed8c:	01000044 	movi	r4,1
    ed90:	0011883a 	mov	r8,zero
    ed94:	30002516 	blt	r6,zero,ee2c <__floatunsidf+0x17c>
    ed98:	21a6983a 	sll	r19,r4,r6
    ed9c:	0025883a 	mov	r18,zero
    eda0:	00bfffc4 	movi	r2,-1
    eda4:	9089883a 	add	r4,r18,r2
    eda8:	988b883a 	add	r5,r19,r2
    edac:	248d803a 	cmpltu	r6,r4,r18
    edb0:	314b883a 	add	r5,r6,r5
    edb4:	b104703a 	and	r2,r22,r4
    edb8:	b946703a 	and	r3,r23,r5
    edbc:	10c4b03a 	or	r2,r2,r3
    edc0:	10000226 	beq	r2,zero,edcc <__floatunsidf+0x11c>
    edc4:	01c00044 	movi	r7,1
    edc8:	0011883a 	mov	r8,zero
    edcc:	d9000217 	ldw	r4,8(sp)
    edd0:	a1c4b03a 	or	r2,r20,r7
    edd4:	aa06b03a 	or	r3,r21,r8
    edd8:	2249c83a 	sub	r4,r4,r9
    eddc:	d8c00415 	stw	r3,16(sp)
    ede0:	d9000215 	stw	r4,8(sp)
    ede4:	d8800315 	stw	r2,12(sp)
    ede8:	003fbf06 	br	ece8 <__floatunsidf+0x38>
    edec:	bdc7883a 	add	r3,r23,r23
    edf0:	008007c4 	movi	r2,31
    edf4:	1285c83a 	sub	r2,r2,r10
    edf8:	1886983a 	sll	r3,r3,r2
    edfc:	b2a8d83a 	srl	r20,r22,r10
    ee00:	baaad83a 	srl	r21,r23,r10
    ee04:	1d28b03a 	or	r20,r3,r20
    ee08:	003fdf06 	br	ed88 <__floatunsidf+0xd8>
    ee0c:	b006d07a 	srli	r3,r22,1
    ee10:	008007c4 	movi	r2,31
    ee14:	1245c83a 	sub	r2,r2,r9
    ee18:	1886d83a 	srl	r3,r3,r2
    ee1c:	ba62983a 	sll	r17,r23,r9
    ee20:	b260983a 	sll	r16,r22,r9
    ee24:	1c62b03a 	or	r17,r3,r17
    ee28:	003fcc06 	br	ed5c <__floatunsidf+0xac>
    ee2c:	2006d07a 	srli	r3,r4,1
    ee30:	008007c4 	movi	r2,31
    ee34:	1285c83a 	sub	r2,r2,r10
    ee38:	18a6d83a 	srl	r19,r3,r2
    ee3c:	22a4983a 	sll	r18,r4,r10
    ee40:	003fd706 	br	eda0 <__floatunsidf+0xf0>

0000ee44 <udivmodsi4>:
    ee44:	29001b2e 	bgeu	r5,r4,eeb4 <udivmodsi4+0x70>
    ee48:	28001a16 	blt	r5,zero,eeb4 <udivmodsi4+0x70>
    ee4c:	00800044 	movi	r2,1
    ee50:	0007883a 	mov	r3,zero
    ee54:	01c007c4 	movi	r7,31
    ee58:	00000306 	br	ee68 <udivmodsi4+0x24>
    ee5c:	19c01326 	beq	r3,r7,eeac <udivmodsi4+0x68>
    ee60:	18c00044 	addi	r3,r3,1
    ee64:	28000416 	blt	r5,zero,ee78 <udivmodsi4+0x34>
    ee68:	294b883a 	add	r5,r5,r5
    ee6c:	1085883a 	add	r2,r2,r2
    ee70:	293ffa36 	bltu	r5,r4,ee5c <udivmodsi4+0x18>
    ee74:	10000d26 	beq	r2,zero,eeac <udivmodsi4+0x68>
    ee78:	0007883a 	mov	r3,zero
    ee7c:	21400236 	bltu	r4,r5,ee88 <udivmodsi4+0x44>
    ee80:	2149c83a 	sub	r4,r4,r5
    ee84:	1886b03a 	or	r3,r3,r2
    ee88:	1004d07a 	srli	r2,r2,1
    ee8c:	280ad07a 	srli	r5,r5,1
    ee90:	103ffa1e 	bne	r2,zero,ee7c <udivmodsi4+0x38>
    ee94:	30000226 	beq	r6,zero,eea0 <udivmodsi4+0x5c>
    ee98:	2005883a 	mov	r2,r4
    ee9c:	f800283a 	ret
    eea0:	1809883a 	mov	r4,r3
    eea4:	2005883a 	mov	r2,r4
    eea8:	f800283a 	ret
    eeac:	0007883a 	mov	r3,zero
    eeb0:	003ff806 	br	ee94 <udivmodsi4+0x50>
    eeb4:	00800044 	movi	r2,1
    eeb8:	0007883a 	mov	r3,zero
    eebc:	003fef06 	br	ee7c <udivmodsi4+0x38>

0000eec0 <__divsi3>:
    eec0:	defffe04 	addi	sp,sp,-8
    eec4:	dc000015 	stw	r16,0(sp)
    eec8:	dfc00115 	stw	ra,4(sp)
    eecc:	0021883a 	mov	r16,zero
    eed0:	20000c16 	blt	r4,zero,ef04 <__divsi3+0x44>
    eed4:	000d883a 	mov	r6,zero
    eed8:	28000e16 	blt	r5,zero,ef14 <__divsi3+0x54>
    eedc:	000ee440 	call	ee44 <udivmodsi4>
    eee0:	1007883a 	mov	r3,r2
    eee4:	8005003a 	cmpeq	r2,r16,zero
    eee8:	1000011e 	bne	r2,zero,eef0 <__divsi3+0x30>
    eeec:	00c7c83a 	sub	r3,zero,r3
    eef0:	1805883a 	mov	r2,r3
    eef4:	dfc00117 	ldw	ra,4(sp)
    eef8:	dc000017 	ldw	r16,0(sp)
    eefc:	dec00204 	addi	sp,sp,8
    ef00:	f800283a 	ret
    ef04:	0109c83a 	sub	r4,zero,r4
    ef08:	04000044 	movi	r16,1
    ef0c:	000d883a 	mov	r6,zero
    ef10:	283ff20e 	bge	r5,zero,eedc <__divsi3+0x1c>
    ef14:	014bc83a 	sub	r5,zero,r5
    ef18:	8021003a 	cmpeq	r16,r16,zero
    ef1c:	003fef06 	br	eedc <__divsi3+0x1c>

0000ef20 <__modsi3>:
    ef20:	deffff04 	addi	sp,sp,-4
    ef24:	dfc00015 	stw	ra,0(sp)
    ef28:	01800044 	movi	r6,1
    ef2c:	2807883a 	mov	r3,r5
    ef30:	20000416 	blt	r4,zero,ef44 <__modsi3+0x24>
    ef34:	28000c16 	blt	r5,zero,ef68 <__modsi3+0x48>
    ef38:	dfc00017 	ldw	ra,0(sp)
    ef3c:	dec00104 	addi	sp,sp,4
    ef40:	000ee441 	jmpi	ee44 <udivmodsi4>
    ef44:	0109c83a 	sub	r4,zero,r4
    ef48:	28000b16 	blt	r5,zero,ef78 <__modsi3+0x58>
    ef4c:	180b883a 	mov	r5,r3
    ef50:	01800044 	movi	r6,1
    ef54:	000ee440 	call	ee44 <udivmodsi4>
    ef58:	0085c83a 	sub	r2,zero,r2
    ef5c:	dfc00017 	ldw	ra,0(sp)
    ef60:	dec00104 	addi	sp,sp,4
    ef64:	f800283a 	ret
    ef68:	014bc83a 	sub	r5,zero,r5
    ef6c:	dfc00017 	ldw	ra,0(sp)
    ef70:	dec00104 	addi	sp,sp,4
    ef74:	000ee441 	jmpi	ee44 <udivmodsi4>
    ef78:	0147c83a 	sub	r3,zero,r5
    ef7c:	003ff306 	br	ef4c <__modsi3+0x2c>

0000ef80 <__udivsi3>:
    ef80:	000d883a 	mov	r6,zero
    ef84:	000ee441 	jmpi	ee44 <udivmodsi4>

0000ef88 <__umodsi3>:
    ef88:	01800044 	movi	r6,1
    ef8c:	000ee441 	jmpi	ee44 <udivmodsi4>

0000ef90 <__clzsi2>:
    ef90:	00bfffd4 	movui	r2,65535
    ef94:	11000e36 	bltu	r2,r4,efd0 <__clzsi2+0x40>
    ef98:	00803fc4 	movi	r2,255
    ef9c:	01400204 	movi	r5,8
    efa0:	0007883a 	mov	r3,zero
    efa4:	11001036 	bltu	r2,r4,efe8 <__clzsi2+0x58>
    efa8:	000b883a 	mov	r5,zero
    efac:	20c6d83a 	srl	r3,r4,r3
    efb0:	00800074 	movhi	r2,1
    efb4:	108a7404 	addi	r2,r2,10704
    efb8:	1887883a 	add	r3,r3,r2
    efbc:	18800003 	ldbu	r2,0(r3)
    efc0:	00c00804 	movi	r3,32
    efc4:	2885883a 	add	r2,r5,r2
    efc8:	1885c83a 	sub	r2,r3,r2
    efcc:	f800283a 	ret
    efd0:	01400404 	movi	r5,16
    efd4:	00804034 	movhi	r2,256
    efd8:	10bfffc4 	addi	r2,r2,-1
    efdc:	2807883a 	mov	r3,r5
    efe0:	113ff22e 	bgeu	r2,r4,efac <__clzsi2+0x1c>
    efe4:	01400604 	movi	r5,24
    efe8:	2807883a 	mov	r3,r5
    efec:	20c6d83a 	srl	r3,r4,r3
    eff0:	00800074 	movhi	r2,1
    eff4:	108a7404 	addi	r2,r2,10704
    eff8:	1887883a 	add	r3,r3,r2
    effc:	18800003 	ldbu	r2,0(r3)
    f000:	00c00804 	movi	r3,32
    f004:	2885883a 	add	r2,r5,r2
    f008:	1885c83a 	sub	r2,r3,r2
    f00c:	f800283a 	ret

0000f010 <__unpack_f>:
    f010:	21800017 	ldw	r6,0(r4)
    f014:	00c02034 	movhi	r3,128
    f018:	18ffffc4 	addi	r3,r3,-1
    f01c:	3004d5fa 	srli	r2,r6,23
    f020:	3008d7fa 	srli	r4,r6,31
    f024:	30ce703a 	and	r7,r6,r3
    f028:	10c03fcc 	andi	r3,r2,255
    f02c:	29000115 	stw	r4,4(r5)
    f030:	1800131e 	bne	r3,zero,f080 <__unpack_f+0x70>
    f034:	38000f26 	beq	r7,zero,f074 <__unpack_f+0x64>
    f038:	380691fa 	slli	r3,r7,7
    f03c:	01bfe084 	movi	r6,-126
    f040:	008000c4 	movi	r2,3
    f044:	01100034 	movhi	r4,16384
    f048:	213fffc4 	addi	r4,r4,-1
    f04c:	28800015 	stw	r2,0(r5)
    f050:	29800215 	stw	r6,8(r5)
    f054:	20c00536 	bltu	r4,r3,f06c <__unpack_f+0x5c>
    f058:	3005883a 	mov	r2,r6
    f05c:	18c7883a 	add	r3,r3,r3
    f060:	10bfffc4 	addi	r2,r2,-1
    f064:	20fffd2e 	bgeu	r4,r3,f05c <__unpack_f+0x4c>
    f068:	28800215 	stw	r2,8(r5)
    f06c:	28c00315 	stw	r3,12(r5)
    f070:	f800283a 	ret
    f074:	00800084 	movi	r2,2
    f078:	28800015 	stw	r2,0(r5)
    f07c:	f800283a 	ret
    f080:	00803fc4 	movi	r2,255
    f084:	18800826 	beq	r3,r2,f0a8 <__unpack_f+0x98>
    f088:	380491fa 	slli	r2,r7,7
    f08c:	18ffe044 	addi	r3,r3,-127
    f090:	28c00215 	stw	r3,8(r5)
    f094:	10900034 	orhi	r2,r2,16384
    f098:	28800315 	stw	r2,12(r5)
    f09c:	008000c4 	movi	r2,3
    f0a0:	28800015 	stw	r2,0(r5)
    f0a4:	f800283a 	ret
    f0a8:	3800031e 	bne	r7,zero,f0b8 <__unpack_f+0xa8>
    f0ac:	00800104 	movi	r2,4
    f0b0:	28800015 	stw	r2,0(r5)
    f0b4:	f800283a 	ret
    f0b8:	3080042c 	andhi	r2,r6,16
    f0bc:	10000426 	beq	r2,zero,f0d0 <__unpack_f+0xc0>
    f0c0:	00800044 	movi	r2,1
    f0c4:	28800015 	stw	r2,0(r5)
    f0c8:	29c00315 	stw	r7,12(r5)
    f0cc:	f800283a 	ret
    f0d0:	28000015 	stw	zero,0(r5)
    f0d4:	003ffc06 	br	f0c8 <__unpack_f+0xb8>

0000f0d8 <__fpcmp_parts_f>:
    f0d8:	21800017 	ldw	r6,0(r4)
    f0dc:	00c00044 	movi	r3,1
    f0e0:	19800a2e 	bgeu	r3,r6,f10c <__fpcmp_parts_f+0x34>
    f0e4:	28800017 	ldw	r2,0(r5)
    f0e8:	1880082e 	bgeu	r3,r2,f10c <__fpcmp_parts_f+0x34>
    f0ec:	00c00104 	movi	r3,4
    f0f0:	30c01e26 	beq	r6,r3,f16c <__fpcmp_parts_f+0x94>
    f0f4:	10c01a26 	beq	r2,r3,f160 <__fpcmp_parts_f+0x88>
    f0f8:	00c00084 	movi	r3,2
    f0fc:	30c00526 	beq	r6,r3,f114 <__fpcmp_parts_f+0x3c>
    f100:	10c0071e 	bne	r2,r3,f120 <__fpcmp_parts_f+0x48>
    f104:	20800117 	ldw	r2,4(r4)
    f108:	1000091e 	bne	r2,zero,f130 <__fpcmp_parts_f+0x58>
    f10c:	00800044 	movi	r2,1
    f110:	f800283a 	ret
    f114:	10c0121e 	bne	r2,r3,f160 <__fpcmp_parts_f+0x88>
    f118:	0005883a 	mov	r2,zero
    f11c:	f800283a 	ret
    f120:	20c00117 	ldw	r3,4(r4)
    f124:	28800117 	ldw	r2,4(r5)
    f128:	18800326 	beq	r3,r2,f138 <__fpcmp_parts_f+0x60>
    f12c:	183ff726 	beq	r3,zero,f10c <__fpcmp_parts_f+0x34>
    f130:	00bfffc4 	movi	r2,-1
    f134:	f800283a 	ret
    f138:	21800217 	ldw	r6,8(r4)
    f13c:	28800217 	ldw	r2,8(r5)
    f140:	11bffa16 	blt	r2,r6,f12c <__fpcmp_parts_f+0x54>
    f144:	30800416 	blt	r6,r2,f158 <__fpcmp_parts_f+0x80>
    f148:	21000317 	ldw	r4,12(r4)
    f14c:	29400317 	ldw	r5,12(r5)
    f150:	293ff636 	bltu	r5,r4,f12c <__fpcmp_parts_f+0x54>
    f154:	217ff02e 	bgeu	r4,r5,f118 <__fpcmp_parts_f+0x40>
    f158:	183fec1e 	bne	r3,zero,f10c <__fpcmp_parts_f+0x34>
    f15c:	003ff406 	br	f130 <__fpcmp_parts_f+0x58>
    f160:	28800117 	ldw	r2,4(r5)
    f164:	103fe91e 	bne	r2,zero,f10c <__fpcmp_parts_f+0x34>
    f168:	003ff106 	br	f130 <__fpcmp_parts_f+0x58>
    f16c:	11bfe51e 	bne	r2,r6,f104 <__fpcmp_parts_f+0x2c>
    f170:	28c00117 	ldw	r3,4(r5)
    f174:	20800117 	ldw	r2,4(r4)
    f178:	1885c83a 	sub	r2,r3,r2
    f17c:	f800283a 	ret

0000f180 <__make_fp>:
    f180:	defffb04 	addi	sp,sp,-20
    f184:	d9000015 	stw	r4,0(sp)
    f188:	d809883a 	mov	r4,sp
    f18c:	dfc00415 	stw	ra,16(sp)
    f190:	d9400115 	stw	r5,4(sp)
    f194:	d9800215 	stw	r6,8(sp)
    f198:	d9c00315 	stw	r7,12(sp)
    f19c:	000f6c00 	call	f6c0 <__pack_f>
    f1a0:	dfc00417 	ldw	ra,16(sp)
    f1a4:	dec00504 	addi	sp,sp,20
    f1a8:	f800283a 	ret

0000f1ac <__pack_d>:
    f1ac:	20c00017 	ldw	r3,0(r4)
    f1b0:	defffd04 	addi	sp,sp,-12
    f1b4:	dc000015 	stw	r16,0(sp)
    f1b8:	dc800215 	stw	r18,8(sp)
    f1bc:	dc400115 	stw	r17,4(sp)
    f1c0:	00800044 	movi	r2,1
    f1c4:	22000317 	ldw	r8,12(r4)
    f1c8:	001f883a 	mov	r15,zero
    f1cc:	22400417 	ldw	r9,16(r4)
    f1d0:	24000117 	ldw	r16,4(r4)
    f1d4:	10c0552e 	bgeu	r2,r3,f32c <__pack_d+0x180>
    f1d8:	00800104 	movi	r2,4
    f1dc:	18804f26 	beq	r3,r2,f31c <__pack_d+0x170>
    f1e0:	00800084 	movi	r2,2
    f1e4:	18800226 	beq	r3,r2,f1f0 <__pack_d+0x44>
    f1e8:	4244b03a 	or	r2,r8,r9
    f1ec:	10001a1e 	bne	r2,zero,f258 <__pack_d+0xac>
    f1f0:	000d883a 	mov	r6,zero
    f1f4:	000f883a 	mov	r7,zero
    f1f8:	0011883a 	mov	r8,zero
    f1fc:	00800434 	movhi	r2,16
    f200:	10bfffc4 	addi	r2,r2,-1
    f204:	301d883a 	mov	r14,r6
    f208:	3884703a 	and	r2,r7,r2
    f20c:	400a953a 	slli	r5,r8,20
    f210:	79bffc2c 	andhi	r6,r15,65520
    f214:	308cb03a 	or	r6,r6,r2
    f218:	00e00434 	movhi	r3,32784
    f21c:	18ffffc4 	addi	r3,r3,-1
    f220:	800497fa 	slli	r2,r16,31
    f224:	30c6703a 	and	r3,r6,r3
    f228:	1946b03a 	or	r3,r3,r5
    f22c:	01600034 	movhi	r5,32768
    f230:	297fffc4 	addi	r5,r5,-1
    f234:	194a703a 	and	r5,r3,r5
    f238:	288ab03a 	or	r5,r5,r2
    f23c:	2807883a 	mov	r3,r5
    f240:	7005883a 	mov	r2,r14
    f244:	dc800217 	ldw	r18,8(sp)
    f248:	dc400117 	ldw	r17,4(sp)
    f24c:	dc000017 	ldw	r16,0(sp)
    f250:	dec00304 	addi	sp,sp,12
    f254:	f800283a 	ret
    f258:	21000217 	ldw	r4,8(r4)
    f25c:	00bf0084 	movi	r2,-1022
    f260:	20803f16 	blt	r4,r2,f360 <__pack_d+0x1b4>
    f264:	0080ffc4 	movi	r2,1023
    f268:	11002c16 	blt	r2,r4,f31c <__pack_d+0x170>
    f26c:	00803fc4 	movi	r2,255
    f270:	408c703a 	and	r6,r8,r2
    f274:	00802004 	movi	r2,128
    f278:	0007883a 	mov	r3,zero
    f27c:	000f883a 	mov	r7,zero
    f280:	2280ffc4 	addi	r10,r4,1023
    f284:	30801e26 	beq	r6,r2,f300 <__pack_d+0x154>
    f288:	00801fc4 	movi	r2,127
    f28c:	4089883a 	add	r4,r8,r2
    f290:	220d803a 	cmpltu	r6,r4,r8
    f294:	324d883a 	add	r6,r6,r9
    f298:	2011883a 	mov	r8,r4
    f29c:	3013883a 	mov	r9,r6
    f2a0:	00880034 	movhi	r2,8192
    f2a4:	10bfffc4 	addi	r2,r2,-1
    f2a8:	12400d36 	bltu	r2,r9,f2e0 <__pack_d+0x134>
    f2ac:	4804963a 	slli	r2,r9,24
    f2b0:	400cd23a 	srli	r6,r8,8
    f2b4:	480ed23a 	srli	r7,r9,8
    f2b8:	013fffc4 	movi	r4,-1
    f2bc:	118cb03a 	or	r6,r2,r6
    f2c0:	01400434 	movhi	r5,16
    f2c4:	297fffc4 	addi	r5,r5,-1
    f2c8:	3104703a 	and	r2,r6,r4
    f2cc:	3946703a 	and	r3,r7,r5
    f2d0:	5201ffcc 	andi	r8,r10,2047
    f2d4:	100d883a 	mov	r6,r2
    f2d8:	180f883a 	mov	r7,r3
    f2dc:	003fc706 	br	f1fc <__pack_d+0x50>
    f2e0:	480897fa 	slli	r4,r9,31
    f2e4:	4004d07a 	srli	r2,r8,1
    f2e8:	4806d07a 	srli	r3,r9,1
    f2ec:	52800044 	addi	r10,r10,1
    f2f0:	2084b03a 	or	r2,r4,r2
    f2f4:	1011883a 	mov	r8,r2
    f2f8:	1813883a 	mov	r9,r3
    f2fc:	003feb06 	br	f2ac <__pack_d+0x100>
    f300:	383fe11e 	bne	r7,zero,f288 <__pack_d+0xdc>
    f304:	01004004 	movi	r4,256
    f308:	4104703a 	and	r2,r8,r4
    f30c:	10c4b03a 	or	r2,r2,r3
    f310:	103fe326 	beq	r2,zero,f2a0 <__pack_d+0xf4>
    f314:	3005883a 	mov	r2,r6
    f318:	003fdc06 	br	f28c <__pack_d+0xe0>
    f31c:	000d883a 	mov	r6,zero
    f320:	000f883a 	mov	r7,zero
    f324:	0201ffc4 	movi	r8,2047
    f328:	003fb406 	br	f1fc <__pack_d+0x50>
    f32c:	0005883a 	mov	r2,zero
    f330:	00c00234 	movhi	r3,8
    f334:	408cb03a 	or	r6,r8,r2
    f338:	48ceb03a 	or	r7,r9,r3
    f33c:	013fffc4 	movi	r4,-1
    f340:	01400434 	movhi	r5,16
    f344:	297fffc4 	addi	r5,r5,-1
    f348:	3104703a 	and	r2,r6,r4
    f34c:	3946703a 	and	r3,r7,r5
    f350:	100d883a 	mov	r6,r2
    f354:	180f883a 	mov	r7,r3
    f358:	0201ffc4 	movi	r8,2047
    f35c:	003fa706 	br	f1fc <__pack_d+0x50>
    f360:	1109c83a 	sub	r4,r2,r4
    f364:	00800e04 	movi	r2,56
    f368:	11004316 	blt	r2,r4,f478 <__pack_d+0x2cc>
    f36c:	21fff804 	addi	r7,r4,-32
    f370:	38004516 	blt	r7,zero,f488 <__pack_d+0x2dc>
    f374:	49d8d83a 	srl	r12,r9,r7
    f378:	001b883a 	mov	r13,zero
    f37c:	0023883a 	mov	r17,zero
    f380:	01400044 	movi	r5,1
    f384:	0025883a 	mov	r18,zero
    f388:	38004716 	blt	r7,zero,f4a8 <__pack_d+0x2fc>
    f38c:	29d6983a 	sll	r11,r5,r7
    f390:	0015883a 	mov	r10,zero
    f394:	00bfffc4 	movi	r2,-1
    f398:	5089883a 	add	r4,r10,r2
    f39c:	588b883a 	add	r5,r11,r2
    f3a0:	228d803a 	cmpltu	r6,r4,r10
    f3a4:	314b883a 	add	r5,r6,r5
    f3a8:	4104703a 	and	r2,r8,r4
    f3ac:	4946703a 	and	r3,r9,r5
    f3b0:	10c4b03a 	or	r2,r2,r3
    f3b4:	10000226 	beq	r2,zero,f3c0 <__pack_d+0x214>
    f3b8:	04400044 	movi	r17,1
    f3bc:	0025883a 	mov	r18,zero
    f3c0:	00803fc4 	movi	r2,255
    f3c4:	644eb03a 	or	r7,r12,r17
    f3c8:	3892703a 	and	r9,r7,r2
    f3cc:	00802004 	movi	r2,128
    f3d0:	6c90b03a 	or	r8,r13,r18
    f3d4:	0015883a 	mov	r10,zero
    f3d8:	48801626 	beq	r9,r2,f434 <__pack_d+0x288>
    f3dc:	01001fc4 	movi	r4,127
    f3e0:	3905883a 	add	r2,r7,r4
    f3e4:	11cd803a 	cmpltu	r6,r2,r7
    f3e8:	320d883a 	add	r6,r6,r8
    f3ec:	100f883a 	mov	r7,r2
    f3f0:	00840034 	movhi	r2,4096
    f3f4:	10bfffc4 	addi	r2,r2,-1
    f3f8:	3011883a 	mov	r8,r6
    f3fc:	0007883a 	mov	r3,zero
    f400:	11801b36 	bltu	r2,r6,f470 <__pack_d+0x2c4>
    f404:	4004963a 	slli	r2,r8,24
    f408:	3808d23a 	srli	r4,r7,8
    f40c:	400ad23a 	srli	r5,r8,8
    f410:	1813883a 	mov	r9,r3
    f414:	1108b03a 	or	r4,r2,r4
    f418:	00bfffc4 	movi	r2,-1
    f41c:	00c00434 	movhi	r3,16
    f420:	18ffffc4 	addi	r3,r3,-1
    f424:	208c703a 	and	r6,r4,r2
    f428:	28ce703a 	and	r7,r5,r3
    f42c:	4a01ffcc 	andi	r8,r9,2047
    f430:	003f7206 	br	f1fc <__pack_d+0x50>
    f434:	503fe91e 	bne	r10,zero,f3dc <__pack_d+0x230>
    f438:	01004004 	movi	r4,256
    f43c:	3904703a 	and	r2,r7,r4
    f440:	0007883a 	mov	r3,zero
    f444:	10c4b03a 	or	r2,r2,r3
    f448:	10000626 	beq	r2,zero,f464 <__pack_d+0x2b8>
    f44c:	3a45883a 	add	r2,r7,r9
    f450:	11cd803a 	cmpltu	r6,r2,r7
    f454:	320d883a 	add	r6,r6,r8
    f458:	100f883a 	mov	r7,r2
    f45c:	3011883a 	mov	r8,r6
    f460:	0007883a 	mov	r3,zero
    f464:	00840034 	movhi	r2,4096
    f468:	10bfffc4 	addi	r2,r2,-1
    f46c:	123fe52e 	bgeu	r2,r8,f404 <__pack_d+0x258>
    f470:	00c00044 	movi	r3,1
    f474:	003fe306 	br	f404 <__pack_d+0x258>
    f478:	0009883a 	mov	r4,zero
    f47c:	0013883a 	mov	r9,zero
    f480:	000b883a 	mov	r5,zero
    f484:	003fe406 	br	f418 <__pack_d+0x26c>
    f488:	4a47883a 	add	r3,r9,r9
    f48c:	008007c4 	movi	r2,31
    f490:	1105c83a 	sub	r2,r2,r4
    f494:	1886983a 	sll	r3,r3,r2
    f498:	4118d83a 	srl	r12,r8,r4
    f49c:	491ad83a 	srl	r13,r9,r4
    f4a0:	1b18b03a 	or	r12,r3,r12
    f4a4:	003fb506 	br	f37c <__pack_d+0x1d0>
    f4a8:	2806d07a 	srli	r3,r5,1
    f4ac:	008007c4 	movi	r2,31
    f4b0:	1105c83a 	sub	r2,r2,r4
    f4b4:	1896d83a 	srl	r11,r3,r2
    f4b8:	2914983a 	sll	r10,r5,r4
    f4bc:	003fb506 	br	f394 <__pack_d+0x1e8>

0000f4c0 <__unpack_d>:
    f4c0:	20c00117 	ldw	r3,4(r4)
    f4c4:	22400017 	ldw	r9,0(r4)
    f4c8:	00800434 	movhi	r2,16
    f4cc:	10bfffc4 	addi	r2,r2,-1
    f4d0:	1808d53a 	srli	r4,r3,20
    f4d4:	180cd7fa 	srli	r6,r3,31
    f4d8:	1894703a 	and	r10,r3,r2
    f4dc:	2201ffcc 	andi	r8,r4,2047
    f4e0:	281b883a 	mov	r13,r5
    f4e4:	4817883a 	mov	r11,r9
    f4e8:	29800115 	stw	r6,4(r5)
    f4ec:	5019883a 	mov	r12,r10
    f4f0:	40001e1e 	bne	r8,zero,f56c <__unpack_d+0xac>
    f4f4:	4a84b03a 	or	r2,r9,r10
    f4f8:	10001926 	beq	r2,zero,f560 <__unpack_d+0xa0>
    f4fc:	4804d63a 	srli	r2,r9,24
    f500:	500c923a 	slli	r6,r10,8
    f504:	013f0084 	movi	r4,-1022
    f508:	00c40034 	movhi	r3,4096
    f50c:	18ffffc4 	addi	r3,r3,-1
    f510:	118cb03a 	or	r6,r2,r6
    f514:	008000c4 	movi	r2,3
    f518:	480a923a 	slli	r5,r9,8
    f51c:	68800015 	stw	r2,0(r13)
    f520:	69000215 	stw	r4,8(r13)
    f524:	19800b36 	bltu	r3,r6,f554 <__unpack_d+0x94>
    f528:	200f883a 	mov	r7,r4
    f52c:	1811883a 	mov	r8,r3
    f530:	2945883a 	add	r2,r5,r5
    f534:	1149803a 	cmpltu	r4,r2,r5
    f538:	3187883a 	add	r3,r6,r6
    f53c:	20c9883a 	add	r4,r4,r3
    f540:	100b883a 	mov	r5,r2
    f544:	200d883a 	mov	r6,r4
    f548:	39ffffc4 	addi	r7,r7,-1
    f54c:	413ff82e 	bgeu	r8,r4,f530 <__unpack_d+0x70>
    f550:	69c00215 	stw	r7,8(r13)
    f554:	69800415 	stw	r6,16(r13)
    f558:	69400315 	stw	r5,12(r13)
    f55c:	f800283a 	ret
    f560:	00800084 	movi	r2,2
    f564:	28800015 	stw	r2,0(r5)
    f568:	f800283a 	ret
    f56c:	0081ffc4 	movi	r2,2047
    f570:	40800f26 	beq	r8,r2,f5b0 <__unpack_d+0xf0>
    f574:	480cd63a 	srli	r6,r9,24
    f578:	5006923a 	slli	r3,r10,8
    f57c:	4804923a 	slli	r2,r9,8
    f580:	0009883a 	mov	r4,zero
    f584:	30c6b03a 	or	r3,r6,r3
    f588:	01440034 	movhi	r5,4096
    f58c:	110cb03a 	or	r6,r2,r4
    f590:	423f0044 	addi	r8,r8,-1023
    f594:	194eb03a 	or	r7,r3,r5
    f598:	008000c4 	movi	r2,3
    f59c:	69c00415 	stw	r7,16(r13)
    f5a0:	6a000215 	stw	r8,8(r13)
    f5a4:	68800015 	stw	r2,0(r13)
    f5a8:	69800315 	stw	r6,12(r13)
    f5ac:	f800283a 	ret
    f5b0:	4a84b03a 	or	r2,r9,r10
    f5b4:	1000031e 	bne	r2,zero,f5c4 <__unpack_d+0x104>
    f5b8:	00800104 	movi	r2,4
    f5bc:	28800015 	stw	r2,0(r5)
    f5c0:	f800283a 	ret
    f5c4:	0009883a 	mov	r4,zero
    f5c8:	01400234 	movhi	r5,8
    f5cc:	4904703a 	and	r2,r9,r4
    f5d0:	5146703a 	and	r3,r10,r5
    f5d4:	10c4b03a 	or	r2,r2,r3
    f5d8:	10000526 	beq	r2,zero,f5f0 <__unpack_d+0x130>
    f5dc:	00800044 	movi	r2,1
    f5e0:	68800015 	stw	r2,0(r13)
    f5e4:	6b000415 	stw	r12,16(r13)
    f5e8:	6ac00315 	stw	r11,12(r13)
    f5ec:	f800283a 	ret
    f5f0:	68000015 	stw	zero,0(r13)
    f5f4:	003ffb06 	br	f5e4 <__unpack_d+0x124>

0000f5f8 <__fpcmp_parts_d>:
    f5f8:	21800017 	ldw	r6,0(r4)
    f5fc:	00c00044 	movi	r3,1
    f600:	19800a2e 	bgeu	r3,r6,f62c <__fpcmp_parts_d+0x34>
    f604:	28800017 	ldw	r2,0(r5)
    f608:	1880082e 	bgeu	r3,r2,f62c <__fpcmp_parts_d+0x34>
    f60c:	00c00104 	movi	r3,4
    f610:	30c02626 	beq	r6,r3,f6ac <__fpcmp_parts_d+0xb4>
    f614:	10c02226 	beq	r2,r3,f6a0 <__fpcmp_parts_d+0xa8>
    f618:	00c00084 	movi	r3,2
    f61c:	30c00526 	beq	r6,r3,f634 <__fpcmp_parts_d+0x3c>
    f620:	10c0071e 	bne	r2,r3,f640 <__fpcmp_parts_d+0x48>
    f624:	20800117 	ldw	r2,4(r4)
    f628:	1000091e 	bne	r2,zero,f650 <__fpcmp_parts_d+0x58>
    f62c:	00800044 	movi	r2,1
    f630:	f800283a 	ret
    f634:	10c01a1e 	bne	r2,r3,f6a0 <__fpcmp_parts_d+0xa8>
    f638:	0005883a 	mov	r2,zero
    f63c:	f800283a 	ret
    f640:	22000117 	ldw	r8,4(r4)
    f644:	28800117 	ldw	r2,4(r5)
    f648:	40800326 	beq	r8,r2,f658 <__fpcmp_parts_d+0x60>
    f64c:	403ff726 	beq	r8,zero,f62c <__fpcmp_parts_d+0x34>
    f650:	00bfffc4 	movi	r2,-1
    f654:	f800283a 	ret
    f658:	20c00217 	ldw	r3,8(r4)
    f65c:	28800217 	ldw	r2,8(r5)
    f660:	10fffa16 	blt	r2,r3,f64c <__fpcmp_parts_d+0x54>
    f664:	18800916 	blt	r3,r2,f68c <__fpcmp_parts_d+0x94>
    f668:	21c00417 	ldw	r7,16(r4)
    f66c:	28c00417 	ldw	r3,16(r5)
    f670:	21800317 	ldw	r6,12(r4)
    f674:	28800317 	ldw	r2,12(r5)
    f678:	19fff436 	bltu	r3,r7,f64c <__fpcmp_parts_d+0x54>
    f67c:	38c00526 	beq	r7,r3,f694 <__fpcmp_parts_d+0x9c>
    f680:	38c00236 	bltu	r7,r3,f68c <__fpcmp_parts_d+0x94>
    f684:	19ffec1e 	bne	r3,r7,f638 <__fpcmp_parts_d+0x40>
    f688:	30bfeb2e 	bgeu	r6,r2,f638 <__fpcmp_parts_d+0x40>
    f68c:	403fe71e 	bne	r8,zero,f62c <__fpcmp_parts_d+0x34>
    f690:	003fef06 	br	f650 <__fpcmp_parts_d+0x58>
    f694:	11bffa2e 	bgeu	r2,r6,f680 <__fpcmp_parts_d+0x88>
    f698:	403fe426 	beq	r8,zero,f62c <__fpcmp_parts_d+0x34>
    f69c:	003fec06 	br	f650 <__fpcmp_parts_d+0x58>
    f6a0:	28800117 	ldw	r2,4(r5)
    f6a4:	103fe11e 	bne	r2,zero,f62c <__fpcmp_parts_d+0x34>
    f6a8:	003fe906 	br	f650 <__fpcmp_parts_d+0x58>
    f6ac:	11bfdd1e 	bne	r2,r6,f624 <__fpcmp_parts_d+0x2c>
    f6b0:	28c00117 	ldw	r3,4(r5)
    f6b4:	20800117 	ldw	r2,4(r4)
    f6b8:	1885c83a 	sub	r2,r3,r2
    f6bc:	f800283a 	ret

0000f6c0 <__pack_f>:
    f6c0:	20c00017 	ldw	r3,0(r4)
    f6c4:	01c00044 	movi	r7,1
    f6c8:	21800317 	ldw	r6,12(r4)
    f6cc:	21400117 	ldw	r5,4(r4)
    f6d0:	38c02d2e 	bgeu	r7,r3,f788 <__pack_f+0xc8>
    f6d4:	00800104 	movi	r2,4
    f6d8:	18802826 	beq	r3,r2,f77c <__pack_f+0xbc>
    f6dc:	00800084 	movi	r2,2
    f6e0:	18800126 	beq	r3,r2,f6e8 <__pack_f+0x28>
    f6e4:	3000101e 	bne	r6,zero,f728 <__pack_f+0x68>
    f6e8:	000d883a 	mov	r6,zero
    f6ec:	0007883a 	mov	r3,zero
    f6f0:	19003fcc 	andi	r4,r3,255
    f6f4:	200895fa 	slli	r4,r4,23
    f6f8:	00c02034 	movhi	r3,128
    f6fc:	18ffffc4 	addi	r3,r3,-1
    f700:	30c6703a 	and	r3,r6,r3
    f704:	10a0002c 	andhi	r2,r2,32768
    f708:	10c4b03a 	or	r2,r2,r3
    f70c:	280a97fa 	slli	r5,r5,31
    f710:	1104b03a 	or	r2,r2,r4
    f714:	00e00034 	movhi	r3,32768
    f718:	18ffffc4 	addi	r3,r3,-1
    f71c:	10c4703a 	and	r2,r2,r3
    f720:	1144b03a 	or	r2,r2,r5
    f724:	f800283a 	ret
    f728:	21000217 	ldw	r4,8(r4)
    f72c:	00bfe084 	movi	r2,-126
    f730:	20801b16 	blt	r4,r2,f7a0 <__pack_f+0xe0>
    f734:	00801fc4 	movi	r2,127
    f738:	11001016 	blt	r2,r4,f77c <__pack_f+0xbc>
    f73c:	308e703a 	and	r7,r6,r2
    f740:	2087883a 	add	r3,r4,r2
    f744:	00801004 	movi	r2,64
    f748:	38800526 	beq	r7,r2,f760 <__pack_f+0xa0>
    f74c:	31800fc4 	addi	r6,r6,63
    f750:	30000716 	blt	r6,zero,f770 <__pack_f+0xb0>
    f754:	300490ba 	slli	r2,r6,2
    f758:	100cd27a 	srli	r6,r2,9
    f75c:	003fe406 	br	f6f0 <__pack_f+0x30>
    f760:	3080200c 	andi	r2,r6,128
    f764:	103ffa26 	beq	r2,zero,f750 <__pack_f+0x90>
    f768:	31cd883a 	add	r6,r6,r7
    f76c:	003ff806 	br	f750 <__pack_f+0x90>
    f770:	300cd07a 	srli	r6,r6,1
    f774:	18c00044 	addi	r3,r3,1
    f778:	003ff606 	br	f754 <__pack_f+0x94>
    f77c:	000d883a 	mov	r6,zero
    f780:	00ffffc4 	movi	r3,-1
    f784:	003fda06 	br	f6f0 <__pack_f+0x30>
    f788:	31800434 	orhi	r6,r6,16
    f78c:	00802034 	movhi	r2,128
    f790:	10bfffc4 	addi	r2,r2,-1
    f794:	308c703a 	and	r6,r6,r2
    f798:	00ffffc4 	movi	r3,-1
    f79c:	003fd406 	br	f6f0 <__pack_f+0x30>
    f7a0:	1109c83a 	sub	r4,r2,r4
    f7a4:	00800644 	movi	r2,25
    f7a8:	11001216 	blt	r2,r4,f7f4 <__pack_f+0x134>
    f7ac:	3904983a 	sll	r2,r7,r4
    f7b0:	3106d83a 	srl	r3,r6,r4
    f7b4:	10bfffc4 	addi	r2,r2,-1
    f7b8:	3084703a 	and	r2,r6,r2
    f7bc:	1004c03a 	cmpne	r2,r2,zero
    f7c0:	1886b03a 	or	r3,r3,r2
    f7c4:	19001fcc 	andi	r4,r3,127
    f7c8:	00801004 	movi	r2,64
    f7cc:	20800c26 	beq	r4,r2,f800 <__pack_f+0x140>
    f7d0:	18c00fc4 	addi	r3,r3,63
    f7d4:	00900034 	movhi	r2,16384
    f7d8:	10bfffc4 	addi	r2,r2,-1
    f7dc:	180cd1fa 	srli	r6,r3,7
    f7e0:	10c7803a 	cmpltu	r3,r2,r3
    f7e4:	00802034 	movhi	r2,128
    f7e8:	10bfffc4 	addi	r2,r2,-1
    f7ec:	308c703a 	and	r6,r6,r2
    f7f0:	003fbf06 	br	f6f0 <__pack_f+0x30>
    f7f4:	0007883a 	mov	r3,zero
    f7f8:	000d883a 	mov	r6,zero
    f7fc:	003ff906 	br	f7e4 <__pack_f+0x124>
    f800:	1880200c 	andi	r2,r3,128
    f804:	10000126 	beq	r2,zero,f80c <__pack_f+0x14c>
    f808:	1907883a 	add	r3,r3,r4
    f80c:	180cd1fa 	srli	r6,r3,7
    f810:	00900034 	movhi	r2,16384
    f814:	10bfffc4 	addi	r2,r2,-1
    f818:	10c7803a 	cmpltu	r3,r2,r3
    f81c:	003ff106 	br	f7e4 <__pack_f+0x124>

0000f820 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    f820:	defff804 	addi	sp,sp,-32
    f824:	dfc00715 	stw	ra,28(sp)
    f828:	df000615 	stw	fp,24(sp)
    f82c:	df000604 	addi	fp,sp,24
    f830:	e13ffc15 	stw	r4,-16(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    f834:	e0bffc17 	ldw	r2,-16(fp)
    f838:	1004803a 	cmplt	r2,r2,zero
    f83c:	1000081e 	bne	r2,zero,f860 <close+0x40>
    f840:	e0bffc17 	ldw	r2,-16(fp)
    f844:	10800324 	muli	r2,r2,12
    f848:	1007883a 	mov	r3,r2
    f84c:	00800074 	movhi	r2,1
    f850:	108cda04 	addi	r2,r2,13160
    f854:	1887883a 	add	r3,r3,r2
    f858:	e0ffff15 	stw	r3,-4(fp)
    f85c:	00000106 	br	f864 <close+0x44>
    f860:	e03fff15 	stw	zero,-4(fp)
    f864:	e0bfff17 	ldw	r2,-4(fp)
    f868:	e0bffb15 	stw	r2,-20(fp)

  if (fd)
    f86c:	e0bffb17 	ldw	r2,-20(fp)
    f870:	1005003a 	cmpeq	r2,r2,zero
    f874:	10001d1e 	bne	r2,zero,f8ec <close+0xcc>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    f878:	e0bffb17 	ldw	r2,-20(fp)
    f87c:	10800017 	ldw	r2,0(r2)
    f880:	10800417 	ldw	r2,16(r2)
    f884:	1005003a 	cmpeq	r2,r2,zero
    f888:	1000071e 	bne	r2,zero,f8a8 <close+0x88>
    f88c:	e0bffb17 	ldw	r2,-20(fp)
    f890:	10800017 	ldw	r2,0(r2)
    f894:	10800417 	ldw	r2,16(r2)
    f898:	e13ffb17 	ldw	r4,-20(fp)
    f89c:	103ee83a 	callr	r2
    f8a0:	e0bffe15 	stw	r2,-8(fp)
    f8a4:	00000106 	br	f8ac <close+0x8c>
    f8a8:	e03ffe15 	stw	zero,-8(fp)
    f8ac:	e0bffe17 	ldw	r2,-8(fp)
    f8b0:	e0bffa15 	stw	r2,-24(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    f8b4:	e13ffc17 	ldw	r4,-16(fp)
    f8b8:	00100640 	call	10064 <alt_release_fd>
    if (rval < 0)
    f8bc:	e0bffa17 	ldw	r2,-24(fp)
    f8c0:	1004403a 	cmpge	r2,r2,zero
    f8c4:	1000071e 	bne	r2,zero,f8e4 <close+0xc4>
    {
      ALT_ERRNO = -rval;
    f8c8:	000f91c0 	call	f91c <alt_get_errno>
    f8cc:	e0fffa17 	ldw	r3,-24(fp)
    f8d0:	00c7c83a 	sub	r3,zero,r3
    f8d4:	10c00015 	stw	r3,0(r2)
      return -1;
    f8d8:	00bfffc4 	movi	r2,-1
    f8dc:	e0bffd15 	stw	r2,-12(fp)
    f8e0:	00000806 	br	f904 <close+0xe4>
    }
    return 0;
    f8e4:	e03ffd15 	stw	zero,-12(fp)
    f8e8:	00000606 	br	f904 <close+0xe4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f8ec:	000f91c0 	call	f91c <alt_get_errno>
    f8f0:	1007883a 	mov	r3,r2
    f8f4:	00801444 	movi	r2,81
    f8f8:	18800015 	stw	r2,0(r3)
    return -1;
    f8fc:	00bfffc4 	movi	r2,-1
    f900:	e0bffd15 	stw	r2,-12(fp)
    f904:	e0bffd17 	ldw	r2,-12(fp)
  }
}
    f908:	e037883a 	mov	sp,fp
    f90c:	dfc00117 	ldw	ra,4(sp)
    f910:	df000017 	ldw	fp,0(sp)
    f914:	dec00204 	addi	sp,sp,8
    f918:	f800283a 	ret

0000f91c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f91c:	defffd04 	addi	sp,sp,-12
    f920:	dfc00215 	stw	ra,8(sp)
    f924:	df000115 	stw	fp,4(sp)
    f928:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    f92c:	00800074 	movhi	r2,1
    f930:	10915e04 	addi	r2,r2,17784
    f934:	10800017 	ldw	r2,0(r2)
    f938:	1005003a 	cmpeq	r2,r2,zero
    f93c:	1000061e 	bne	r2,zero,f958 <alt_get_errno+0x3c>
    f940:	00800074 	movhi	r2,1
    f944:	10915e04 	addi	r2,r2,17784
    f948:	10800017 	ldw	r2,0(r2)
    f94c:	103ee83a 	callr	r2
    f950:	e0bfff15 	stw	r2,-4(fp)
    f954:	00000306 	br	f964 <alt_get_errno+0x48>
    f958:	00800074 	movhi	r2,1
    f95c:	10980804 	addi	r2,r2,24608
    f960:	e0bfff15 	stw	r2,-4(fp)
    f964:	e0bfff17 	ldw	r2,-4(fp)
}
    f968:	e037883a 	mov	sp,fp
    f96c:	dfc00117 	ldw	ra,4(sp)
    f970:	df000017 	ldw	fp,0(sp)
    f974:	dec00204 	addi	sp,sp,8
    f978:	f800283a 	ret

0000f97c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    f97c:	defffc04 	addi	sp,sp,-16
    f980:	df000315 	stw	fp,12(sp)
    f984:	df000304 	addi	fp,sp,12
    f988:	e13ffd15 	stw	r4,-12(fp)
    f98c:	e17ffe15 	stw	r5,-8(fp)
    f990:	e1bfff15 	stw	r6,-4(fp)
  return len;
    f994:	e0bfff17 	ldw	r2,-4(fp)
}
    f998:	e037883a 	mov	sp,fp
    f99c:	df000017 	ldw	fp,0(sp)
    f9a0:	dec00104 	addi	sp,sp,4
    f9a4:	f800283a 	ret

0000f9a8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    f9a8:	defff904 	addi	sp,sp,-28
    f9ac:	dfc00615 	stw	ra,24(sp)
    f9b0:	df000515 	stw	fp,20(sp)
    f9b4:	df000504 	addi	fp,sp,20
    f9b8:	e13ffc15 	stw	r4,-16(fp)
    f9bc:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f9c0:	e0bffc17 	ldw	r2,-16(fp)
    f9c4:	1004803a 	cmplt	r2,r2,zero
    f9c8:	1000081e 	bne	r2,zero,f9ec <fstat+0x44>
    f9cc:	e0bffc17 	ldw	r2,-16(fp)
    f9d0:	10800324 	muli	r2,r2,12
    f9d4:	1007883a 	mov	r3,r2
    f9d8:	00800074 	movhi	r2,1
    f9dc:	108cda04 	addi	r2,r2,13160
    f9e0:	1887883a 	add	r3,r3,r2
    f9e4:	e0ffff15 	stw	r3,-4(fp)
    f9e8:	00000106 	br	f9f0 <fstat+0x48>
    f9ec:	e03fff15 	stw	zero,-4(fp)
    f9f0:	e0bfff17 	ldw	r2,-4(fp)
    f9f4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    f9f8:	e0bffb17 	ldw	r2,-20(fp)
    f9fc:	1005003a 	cmpeq	r2,r2,zero
    fa00:	1000121e 	bne	r2,zero,fa4c <fstat+0xa4>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    fa04:	e0bffb17 	ldw	r2,-20(fp)
    fa08:	10800017 	ldw	r2,0(r2)
    fa0c:	10800817 	ldw	r2,32(r2)
    fa10:	1005003a 	cmpeq	r2,r2,zero
    fa14:	1000081e 	bne	r2,zero,fa38 <fstat+0x90>
    {
      return fd->dev->fstat(fd, st);
    fa18:	e0bffb17 	ldw	r2,-20(fp)
    fa1c:	10800017 	ldw	r2,0(r2)
    fa20:	10800817 	ldw	r2,32(r2)
    fa24:	e13ffb17 	ldw	r4,-20(fp)
    fa28:	e17ffd17 	ldw	r5,-12(fp)
    fa2c:	103ee83a 	callr	r2
    fa30:	e0bffe15 	stw	r2,-8(fp)
    fa34:	00000b06 	br	fa64 <fstat+0xbc>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    fa38:	e0fffd17 	ldw	r3,-12(fp)
    fa3c:	00880004 	movi	r2,8192
    fa40:	18800115 	stw	r2,4(r3)
      return 0;
    fa44:	e03ffe15 	stw	zero,-8(fp)
    fa48:	00000606 	br	fa64 <fstat+0xbc>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    fa4c:	000fa7c0 	call	fa7c <alt_get_errno>
    fa50:	1007883a 	mov	r3,r2
    fa54:	00801444 	movi	r2,81
    fa58:	18800015 	stw	r2,0(r3)
    return -1;
    fa5c:	00bfffc4 	movi	r2,-1
    fa60:	e0bffe15 	stw	r2,-8(fp)
    fa64:	e0bffe17 	ldw	r2,-8(fp)
  }
}
    fa68:	e037883a 	mov	sp,fp
    fa6c:	dfc00117 	ldw	ra,4(sp)
    fa70:	df000017 	ldw	fp,0(sp)
    fa74:	dec00204 	addi	sp,sp,8
    fa78:	f800283a 	ret

0000fa7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fa7c:	defffd04 	addi	sp,sp,-12
    fa80:	dfc00215 	stw	ra,8(sp)
    fa84:	df000115 	stw	fp,4(sp)
    fa88:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    fa8c:	00800074 	movhi	r2,1
    fa90:	10915e04 	addi	r2,r2,17784
    fa94:	10800017 	ldw	r2,0(r2)
    fa98:	1005003a 	cmpeq	r2,r2,zero
    fa9c:	1000061e 	bne	r2,zero,fab8 <alt_get_errno+0x3c>
    faa0:	00800074 	movhi	r2,1
    faa4:	10915e04 	addi	r2,r2,17784
    faa8:	10800017 	ldw	r2,0(r2)
    faac:	103ee83a 	callr	r2
    fab0:	e0bfff15 	stw	r2,-4(fp)
    fab4:	00000306 	br	fac4 <alt_get_errno+0x48>
    fab8:	00800074 	movhi	r2,1
    fabc:	10980804 	addi	r2,r2,24608
    fac0:	e0bfff15 	stw	r2,-4(fp)
    fac4:	e0bfff17 	ldw	r2,-4(fp)
}
    fac8:	e037883a 	mov	sp,fp
    facc:	dfc00117 	ldw	ra,4(sp)
    fad0:	df000017 	ldw	fp,0(sp)
    fad4:	dec00204 	addi	sp,sp,8
    fad8:	f800283a 	ret

0000fadc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    fadc:	deffeb04 	addi	sp,sp,-84
    fae0:	dfc01415 	stw	ra,80(sp)
    fae4:	df001315 	stw	fp,76(sp)
    fae8:	df001304 	addi	fp,sp,76
    faec:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    faf0:	e0bffd17 	ldw	r2,-12(fp)
    faf4:	1004803a 	cmplt	r2,r2,zero
    faf8:	1000081e 	bne	r2,zero,fb1c <isatty+0x40>
    fafc:	e0bffd17 	ldw	r2,-12(fp)
    fb00:	10800324 	muli	r2,r2,12
    fb04:	1007883a 	mov	r3,r2
    fb08:	00800074 	movhi	r2,1
    fb0c:	108cda04 	addi	r2,r2,13160
    fb10:	1887883a 	add	r3,r3,r2
    fb14:	e0ffff15 	stw	r3,-4(fp)
    fb18:	00000106 	br	fb20 <isatty+0x44>
    fb1c:	e03fff15 	stw	zero,-4(fp)
    fb20:	e0bfff17 	ldw	r2,-4(fp)
    fb24:	e0bfed15 	stw	r2,-76(fp)
  
  if (fd)
    fb28:	e0bfed17 	ldw	r2,-76(fp)
    fb2c:	1005003a 	cmpeq	r2,r2,zero
    fb30:	10000f1e 	bne	r2,zero,fb70 <isatty+0x94>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    fb34:	e0bfed17 	ldw	r2,-76(fp)
    fb38:	10800017 	ldw	r2,0(r2)
    fb3c:	10800817 	ldw	r2,32(r2)
    fb40:	1004c03a 	cmpne	r2,r2,zero
    fb44:	1000031e 	bne	r2,zero,fb54 <isatty+0x78>
    {
      return 1;
    fb48:	00800044 	movi	r2,1
    fb4c:	e0bffe15 	stw	r2,-8(fp)
    fb50:	00000c06 	br	fb84 <isatty+0xa8>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    fb54:	e17fee04 	addi	r5,fp,-72
    fb58:	e13ffd17 	ldw	r4,-12(fp)
    fb5c:	000f9a80 	call	f9a8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    fb60:	e0bfef17 	ldw	r2,-68(fp)
    fb64:	10880020 	cmpeqi	r2,r2,8192
    fb68:	e0bffe15 	stw	r2,-8(fp)
    fb6c:	00000506 	br	fb84 <isatty+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    fb70:	000fb9c0 	call	fb9c <alt_get_errno>
    fb74:	1007883a 	mov	r3,r2
    fb78:	00801444 	movi	r2,81
    fb7c:	18800015 	stw	r2,0(r3)
    return 0;
    fb80:	e03ffe15 	stw	zero,-8(fp)
    fb84:	e0bffe17 	ldw	r2,-8(fp)
  }
}
    fb88:	e037883a 	mov	sp,fp
    fb8c:	dfc00117 	ldw	ra,4(sp)
    fb90:	df000017 	ldw	fp,0(sp)
    fb94:	dec00204 	addi	sp,sp,8
    fb98:	f800283a 	ret

0000fb9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fb9c:	defffd04 	addi	sp,sp,-12
    fba0:	dfc00215 	stw	ra,8(sp)
    fba4:	df000115 	stw	fp,4(sp)
    fba8:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    fbac:	00800074 	movhi	r2,1
    fbb0:	10915e04 	addi	r2,r2,17784
    fbb4:	10800017 	ldw	r2,0(r2)
    fbb8:	1005003a 	cmpeq	r2,r2,zero
    fbbc:	1000061e 	bne	r2,zero,fbd8 <alt_get_errno+0x3c>
    fbc0:	00800074 	movhi	r2,1
    fbc4:	10915e04 	addi	r2,r2,17784
    fbc8:	10800017 	ldw	r2,0(r2)
    fbcc:	103ee83a 	callr	r2
    fbd0:	e0bfff15 	stw	r2,-4(fp)
    fbd4:	00000306 	br	fbe4 <alt_get_errno+0x48>
    fbd8:	00800074 	movhi	r2,1
    fbdc:	10980804 	addi	r2,r2,24608
    fbe0:	e0bfff15 	stw	r2,-4(fp)
    fbe4:	e0bfff17 	ldw	r2,-4(fp)
}
    fbe8:	e037883a 	mov	sp,fp
    fbec:	dfc00117 	ldw	ra,4(sp)
    fbf0:	df000017 	ldw	fp,0(sp)
    fbf4:	dec00204 	addi	sp,sp,8
    fbf8:	f800283a 	ret

0000fbfc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    fbfc:	defffe04 	addi	sp,sp,-8
    fc00:	dfc00115 	stw	ra,4(sp)
    fc04:	df000015 	stw	fp,0(sp)
    fc08:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    fc0c:	01000074 	movhi	r4,1
    fc10:	21116304 	addi	r4,r4,17804
    fc14:	01400074 	movhi	r5,1
    fc18:	294ac104 	addi	r5,r5,11012
    fc1c:	01800074 	movhi	r6,1
    fc20:	31916304 	addi	r6,r6,17804
    fc24:	000fc7c0 	call	fc7c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    fc28:	01000034 	movhi	r4,0
    fc2c:	21000804 	addi	r4,r4,32
    fc30:	01400034 	movhi	r5,0
    fc34:	29400804 	addi	r5,r5,32
    fc38:	01800034 	movhi	r6,0
    fc3c:	31806d04 	addi	r6,r6,436
    fc40:	000fc7c0 	call	fc7c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    fc44:	01000074 	movhi	r4,1
    fc48:	2108ac04 	addi	r4,r4,8880
    fc4c:	01400074 	movhi	r5,1
    fc50:	2948ac04 	addi	r5,r5,8880
    fc54:	01800074 	movhi	r6,1
    fc58:	318ac104 	addi	r6,r6,11012
    fc5c:	000fc7c0 	call	fc7c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    fc60:	00110c80 	call	110c8 <alt_dcache_flush_all>
  alt_icache_flush_all();
    fc64:	00112e80 	call	112e8 <alt_icache_flush_all>
}
    fc68:	e037883a 	mov	sp,fp
    fc6c:	dfc00117 	ldw	ra,4(sp)
    fc70:	df000017 	ldw	fp,0(sp)
    fc74:	dec00204 	addi	sp,sp,8
    fc78:	f800283a 	ret

0000fc7c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    fc7c:	defffc04 	addi	sp,sp,-16
    fc80:	df000315 	stw	fp,12(sp)
    fc84:	df000304 	addi	fp,sp,12
    fc88:	e13ffd15 	stw	r4,-12(fp)
    fc8c:	e17ffe15 	stw	r5,-8(fp)
    fc90:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    fc94:	e0fffe17 	ldw	r3,-8(fp)
    fc98:	e0bffd17 	ldw	r2,-12(fp)
    fc9c:	18800e26 	beq	r3,r2,fcd8 <alt_load_section+0x5c>
  {
    while( to != end )
    fca0:	00000a06 	br	fccc <alt_load_section+0x50>
    {
      *to++ = *from++;
    fca4:	e0bffd17 	ldw	r2,-12(fp)
    fca8:	10c00017 	ldw	r3,0(r2)
    fcac:	e0bffe17 	ldw	r2,-8(fp)
    fcb0:	10c00015 	stw	r3,0(r2)
    fcb4:	e0bffe17 	ldw	r2,-8(fp)
    fcb8:	10800104 	addi	r2,r2,4
    fcbc:	e0bffe15 	stw	r2,-8(fp)
    fcc0:	e0bffd17 	ldw	r2,-12(fp)
    fcc4:	10800104 	addi	r2,r2,4
    fcc8:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    fccc:	e0fffe17 	ldw	r3,-8(fp)
    fcd0:	e0bfff17 	ldw	r2,-4(fp)
    fcd4:	18bff31e 	bne	r3,r2,fca4 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
    fcd8:	e037883a 	mov	sp,fp
    fcdc:	df000017 	ldw	fp,0(sp)
    fce0:	dec00104 	addi	sp,sp,4
    fce4:	f800283a 	ret

0000fce8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    fce8:	defff804 	addi	sp,sp,-32
    fcec:	dfc00715 	stw	ra,28(sp)
    fcf0:	df000615 	stw	fp,24(sp)
    fcf4:	df000604 	addi	fp,sp,24
    fcf8:	e13ffc15 	stw	r4,-16(fp)
    fcfc:	e17ffd15 	stw	r5,-12(fp)
    fd00:	e1bffe15 	stw	r6,-8(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    fd04:	e03ffa15 	stw	zero,-24(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    fd08:	e0bffc17 	ldw	r2,-16(fp)
    fd0c:	1004803a 	cmplt	r2,r2,zero
    fd10:	1000081e 	bne	r2,zero,fd34 <lseek+0x4c>
    fd14:	e0bffc17 	ldw	r2,-16(fp)
    fd18:	10800324 	muli	r2,r2,12
    fd1c:	1007883a 	mov	r3,r2
    fd20:	00800074 	movhi	r2,1
    fd24:	108cda04 	addi	r2,r2,13160
    fd28:	1887883a 	add	r3,r3,r2
    fd2c:	e0ffff15 	stw	r3,-4(fp)
    fd30:	00000106 	br	fd38 <lseek+0x50>
    fd34:	e03fff15 	stw	zero,-4(fp)
    fd38:	e0bfff17 	ldw	r2,-4(fp)
    fd3c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd) 
    fd40:	e0bffb17 	ldw	r2,-20(fp)
    fd44:	1005003a 	cmpeq	r2,r2,zero
    fd48:	1000111e 	bne	r2,zero,fd90 <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    fd4c:	e0bffb17 	ldw	r2,-20(fp)
    fd50:	10800017 	ldw	r2,0(r2)
    fd54:	10800717 	ldw	r2,28(r2)
    fd58:	1005003a 	cmpeq	r2,r2,zero
    fd5c:	1000091e 	bne	r2,zero,fd84 <lseek+0x9c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    fd60:	e0bffb17 	ldw	r2,-20(fp)
    fd64:	10800017 	ldw	r2,0(r2)
    fd68:	10800717 	ldw	r2,28(r2)
    fd6c:	e13ffb17 	ldw	r4,-20(fp)
    fd70:	e17ffd17 	ldw	r5,-12(fp)
    fd74:	e1bffe17 	ldw	r6,-8(fp)
    fd78:	103ee83a 	callr	r2
    fd7c:	e0bffa15 	stw	r2,-24(fp)
    fd80:	00000506 	br	fd98 <lseek+0xb0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    fd84:	00bfde84 	movi	r2,-134
    fd88:	e0bffa15 	stw	r2,-24(fp)
    fd8c:	00000206 	br	fd98 <lseek+0xb0>
    }
  }
  else  
  {
    rc = -EBADFD;
    fd90:	00bfebc4 	movi	r2,-81
    fd94:	e0bffa15 	stw	r2,-24(fp)
  }

  if (rc < 0)
    fd98:	e0bffa17 	ldw	r2,-24(fp)
    fd9c:	1004403a 	cmpge	r2,r2,zero
    fda0:	1000071e 	bne	r2,zero,fdc0 <lseek+0xd8>
  {
    ALT_ERRNO = -rc;
    fda4:	000fdd80 	call	fdd8 <alt_get_errno>
    fda8:	1007883a 	mov	r3,r2
    fdac:	e0bffa17 	ldw	r2,-24(fp)
    fdb0:	0085c83a 	sub	r2,zero,r2
    fdb4:	18800015 	stw	r2,0(r3)
    rc = -1;
    fdb8:	00bfffc4 	movi	r2,-1
    fdbc:	e0bffa15 	stw	r2,-24(fp)
  }

  return rc;
    fdc0:	e0bffa17 	ldw	r2,-24(fp)
}
    fdc4:	e037883a 	mov	sp,fp
    fdc8:	dfc00117 	ldw	ra,4(sp)
    fdcc:	df000017 	ldw	fp,0(sp)
    fdd0:	dec00204 	addi	sp,sp,8
    fdd4:	f800283a 	ret

0000fdd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fdd8:	defffd04 	addi	sp,sp,-12
    fddc:	dfc00215 	stw	ra,8(sp)
    fde0:	df000115 	stw	fp,4(sp)
    fde4:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
    fde8:	00800074 	movhi	r2,1
    fdec:	10915e04 	addi	r2,r2,17784
    fdf0:	10800017 	ldw	r2,0(r2)
    fdf4:	1005003a 	cmpeq	r2,r2,zero
    fdf8:	1000061e 	bne	r2,zero,fe14 <alt_get_errno+0x3c>
    fdfc:	00800074 	movhi	r2,1
    fe00:	10915e04 	addi	r2,r2,17784
    fe04:	10800017 	ldw	r2,0(r2)
    fe08:	103ee83a 	callr	r2
    fe0c:	e0bfff15 	stw	r2,-4(fp)
    fe10:	00000306 	br	fe20 <alt_get_errno+0x48>
    fe14:	00800074 	movhi	r2,1
    fe18:	10980804 	addi	r2,r2,24608
    fe1c:	e0bfff15 	stw	r2,-4(fp)
    fe20:	e0bfff17 	ldw	r2,-4(fp)
}
    fe24:	e037883a 	mov	sp,fp
    fe28:	dfc00117 	ldw	ra,4(sp)
    fe2c:	df000017 	ldw	fp,0(sp)
    fe30:	dec00204 	addi	sp,sp,8
    fe34:	f800283a 	ret

0000fe38 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    fe38:	defffd04 	addi	sp,sp,-12
    fe3c:	dfc00215 	stw	ra,8(sp)
    fe40:	df000115 	stw	fp,4(sp)
    fe44:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    fe48:	0009883a 	mov	r4,zero
    fe4c:	00103000 	call	10300 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    fe50:	00103340 	call	10334 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    fe54:	01000074 	movhi	r4,1
    fe58:	210ab704 	addi	r4,r4,10972
    fe5c:	01400074 	movhi	r5,1
    fe60:	294ab704 	addi	r5,r5,10972
    fe64:	01800074 	movhi	r6,1
    fe68:	318ab704 	addi	r6,r6,10972
    fe6c:	00116a80 	call	116a8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    fe70:	00112200 	call	11220 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    fe74:	01000074 	movhi	r4,1
    fe78:	2104a104 	addi	r4,r4,4740
    fe7c:	0011ea40 	call	11ea4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    fe80:	d126ba17 	ldw	r4,-25880(gp)
    fe84:	d166bb17 	ldw	r5,-25876(gp)
    fe88:	d1a6bc17 	ldw	r6,-25872(gp)
    fe8c:	00002000 	call	200 <main>
    fe90:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    fe94:	01000044 	movi	r4,1
    fe98:	000f8200 	call	f820 <close>
  exit (result);
    fe9c:	e13fff17 	ldw	r4,-4(fp)
    fea0:	0011eb80 	call	11eb8 <exit>

0000fea4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    fea4:	defffe04 	addi	sp,sp,-8
    fea8:	df000115 	stw	fp,4(sp)
    feac:	df000104 	addi	fp,sp,4
    feb0:	e13fff15 	stw	r4,-4(fp)
}
    feb4:	e037883a 	mov	sp,fp
    feb8:	df000017 	ldw	fp,0(sp)
    febc:	dec00104 	addi	sp,sp,4
    fec0:	f800283a 	ret

0000fec4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    fec4:	defffe04 	addi	sp,sp,-8
    fec8:	df000115 	stw	fp,4(sp)
    fecc:	df000104 	addi	fp,sp,4
    fed0:	e13fff15 	stw	r4,-4(fp)
}
    fed4:	e037883a 	mov	sp,fp
    fed8:	df000017 	ldw	fp,0(sp)
    fedc:	dec00104 	addi	sp,sp,4
    fee0:	f800283a 	ret

0000fee4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    fee4:	defff704 	addi	sp,sp,-36
    fee8:	dfc00815 	stw	ra,32(sp)
    feec:	df000715 	stw	fp,28(sp)
    fef0:	df000704 	addi	fp,sp,28
    fef4:	e13ffb15 	stw	r4,-20(fp)
    fef8:	e17ffc15 	stw	r5,-16(fp)
    fefc:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    ff00:	e0bffb17 	ldw	r2,-20(fp)
    ff04:	1004803a 	cmplt	r2,r2,zero
    ff08:	1000081e 	bne	r2,zero,ff2c <read+0x48>
    ff0c:	e0bffb17 	ldw	r2,-20(fp)
    ff10:	10800324 	muli	r2,r2,12
    ff14:	1007883a 	mov	r3,r2
    ff18:	00800074 	movhi	r2,1
    ff1c:	108cda04 	addi	r2,r2,13160
    ff20:	1887883a 	add	r3,r3,r2
    ff24:	e0ffff15 	stw	r3,-4(fp)
    ff28:	00000106 	br	ff30 <read+0x4c>
    ff2c:	e03fff15 	stw	zero,-4(fp)
    ff30:	e0bfff17 	ldw	r2,-4(fp)
    ff34:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
    ff38:	e0bffa17 	ldw	r2,-24(fp)
    ff3c:	1005003a 	cmpeq	r2,r2,zero
    ff40:	1000241e 	bne	r2,zero,ffd4 <read+0xf0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    ff44:	e0bffa17 	ldw	r2,-24(fp)
    ff48:	10800217 	ldw	r2,8(r2)
    ff4c:	108000cc 	andi	r2,r2,3
    ff50:	10800060 	cmpeqi	r2,r2,1
    ff54:	10001a1e 	bne	r2,zero,ffc0 <read+0xdc>
    ff58:	e0bffa17 	ldw	r2,-24(fp)
    ff5c:	10800017 	ldw	r2,0(r2)
    ff60:	10800517 	ldw	r2,20(r2)
    ff64:	1005003a 	cmpeq	r2,r2,zero
    ff68:	1000151e 	bne	r2,zero,ffc0 <read+0xdc>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    ff6c:	e0bffa17 	ldw	r2,-24(fp)
    ff70:	10800017 	ldw	r2,0(r2)
    ff74:	10800517 	ldw	r2,20(r2)
    ff78:	e17ffc17 	ldw	r5,-16(fp)
    ff7c:	e1bffd17 	ldw	r6,-12(fp)
    ff80:	e13ffa17 	ldw	r4,-24(fp)
    ff84:	103ee83a 	callr	r2
    ff88:	e0bff915 	stw	r2,-28(fp)
    ff8c:	e0bff917 	ldw	r2,-28(fp)
    ff90:	1004403a 	cmpge	r2,r2,zero
    ff94:	1000071e 	bne	r2,zero,ffb4 <read+0xd0>
        {
          ALT_ERRNO = -rval;
    ff98:	00100040 	call	10004 <alt_get_errno>
    ff9c:	e0fff917 	ldw	r3,-28(fp)
    ffa0:	00c7c83a 	sub	r3,zero,r3
    ffa4:	10c00015 	stw	r3,0(r2)
          return -1;
    ffa8:	00bfffc4 	movi	r2,-1
    ffac:	e0bffe15 	stw	r2,-8(fp)
    ffb0:	00000e06 	br	ffec <read+0x108>
        }
        return rval;
    ffb4:	e0bff917 	ldw	r2,-28(fp)
    ffb8:	e0bffe15 	stw	r2,-8(fp)
    ffbc:	00000b06 	br	ffec <read+0x108>
      }
      else
      {
        ALT_ERRNO = EACCES;
    ffc0:	00100040 	call	10004 <alt_get_errno>
    ffc4:	1007883a 	mov	r3,r2
    ffc8:	00800344 	movi	r2,13
    ffcc:	18800015 	stw	r2,0(r3)
    ffd0:	00000406 	br	ffe4 <read+0x100>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    ffd4:	00100040 	call	10004 <alt_get_errno>
    ffd8:	1007883a 	mov	r3,r2
    ffdc:	00801444 	movi	r2,81
    ffe0:	18800015 	stw	r2,0(r3)
  }
  return -1;
    ffe4:	00bfffc4 	movi	r2,-1
    ffe8:	e0bffe15 	stw	r2,-8(fp)
    ffec:	e0bffe17 	ldw	r2,-8(fp)
}
    fff0:	e037883a 	mov	sp,fp
    fff4:	dfc00117 	ldw	ra,4(sp)
    fff8:	df000017 	ldw	fp,0(sp)
    fffc:	dec00204 	addi	sp,sp,8
   10000:	f800283a 	ret

00010004 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10004:	defffd04 	addi	sp,sp,-12
   10008:	dfc00215 	stw	ra,8(sp)
   1000c:	df000115 	stw	fp,4(sp)
   10010:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   10014:	00800074 	movhi	r2,1
   10018:	10915e04 	addi	r2,r2,17784
   1001c:	10800017 	ldw	r2,0(r2)
   10020:	1005003a 	cmpeq	r2,r2,zero
   10024:	1000061e 	bne	r2,zero,10040 <alt_get_errno+0x3c>
   10028:	00800074 	movhi	r2,1
   1002c:	10915e04 	addi	r2,r2,17784
   10030:	10800017 	ldw	r2,0(r2)
   10034:	103ee83a 	callr	r2
   10038:	e0bfff15 	stw	r2,-4(fp)
   1003c:	00000306 	br	1004c <alt_get_errno+0x48>
   10040:	00800074 	movhi	r2,1
   10044:	10980804 	addi	r2,r2,24608
   10048:	e0bfff15 	stw	r2,-4(fp)
   1004c:	e0bfff17 	ldw	r2,-4(fp)
}
   10050:	e037883a 	mov	sp,fp
   10054:	dfc00117 	ldw	ra,4(sp)
   10058:	df000017 	ldw	fp,0(sp)
   1005c:	dec00204 	addi	sp,sp,8
   10060:	f800283a 	ret

00010064 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   10064:	defffe04 	addi	sp,sp,-8
   10068:	df000115 	stw	fp,4(sp)
   1006c:	df000104 	addi	fp,sp,4
   10070:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   10074:	e0bfff17 	ldw	r2,-4(fp)
   10078:	108000d0 	cmplti	r2,r2,3
   1007c:	10000d1e 	bne	r2,zero,100b4 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   10080:	e0bfff17 	ldw	r2,-4(fp)
   10084:	00c00074 	movhi	r3,1
   10088:	18ccda04 	addi	r3,r3,13160
   1008c:	10800324 	muli	r2,r2,12
   10090:	10c5883a 	add	r2,r2,r3
   10094:	10800204 	addi	r2,r2,8
   10098:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   1009c:	e0bfff17 	ldw	r2,-4(fp)
   100a0:	00c00074 	movhi	r3,1
   100a4:	18ccda04 	addi	r3,r3,13160
   100a8:	10800324 	muli	r2,r2,12
   100ac:	10c5883a 	add	r2,r2,r3
   100b0:	10000015 	stw	zero,0(r2)
  }
}
   100b4:	e037883a 	mov	sp,fp
   100b8:	df000017 	ldw	fp,0(sp)
   100bc:	dec00104 	addi	sp,sp,4
   100c0:	f800283a 	ret

000100c4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   100c4:	defff804 	addi	sp,sp,-32
   100c8:	df000715 	stw	fp,28(sp)
   100cc:	df000704 	addi	fp,sp,28
   100d0:	e13ffe15 	stw	r4,-8(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   100d4:	0005303a 	rdctl	r2,status
   100d8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   100dc:	e0fffb17 	ldw	r3,-20(fp)
   100e0:	00bfff84 	movi	r2,-2
   100e4:	1884703a 	and	r2,r3,r2
   100e8:	1001703a 	wrctl	status,r2
  
  return context;
   100ec:	e0bffb17 	ldw	r2,-20(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   100f0:	e0bffd15 	stw	r2,-12(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   100f4:	d0a00d17 	ldw	r2,-32716(gp)
   100f8:	10c000c4 	addi	r3,r2,3
   100fc:	00bfff04 	movi	r2,-4
   10100:	1884703a 	and	r2,r3,r2
   10104:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   10108:	d0e00d17 	ldw	r3,-32716(gp)
   1010c:	e0bffe17 	ldw	r2,-8(fp)
   10110:	1887883a 	add	r3,r3,r2
   10114:	00802034 	movhi	r2,128
   10118:	10800004 	addi	r2,r2,0
   1011c:	10c0072e 	bgeu	r2,r3,1013c <sbrk+0x78>
   10120:	e0bffd17 	ldw	r2,-12(fp)
   10124:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10128:	e0bffa17 	ldw	r2,-24(fp)
   1012c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   10130:	00bfffc4 	movi	r2,-1
   10134:	e0bfff15 	stw	r2,-4(fp)
   10138:	00000c06 	br	1016c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   1013c:	d0a00d17 	ldw	r2,-32716(gp)
   10140:	e0bffc15 	stw	r2,-16(fp)
  heap_end += incr; 
   10144:	d0e00d17 	ldw	r3,-32716(gp)
   10148:	e0bffe17 	ldw	r2,-8(fp)
   1014c:	1885883a 	add	r2,r3,r2
   10150:	d0a00d15 	stw	r2,-32716(gp)
   10154:	e0bffd17 	ldw	r2,-12(fp)
   10158:	e0bff915 	stw	r2,-28(fp)
   1015c:	e0bff917 	ldw	r2,-28(fp)
   10160:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   10164:	e0bffc17 	ldw	r2,-16(fp)
   10168:	e0bfff15 	stw	r2,-4(fp)
   1016c:	e0bfff17 	ldw	r2,-4(fp)
} 
   10170:	e037883a 	mov	sp,fp
   10174:	df000017 	ldw	fp,0(sp)
   10178:	dec00104 	addi	sp,sp,4
   1017c:	f800283a 	ret

00010180 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   10180:	defff704 	addi	sp,sp,-36
   10184:	dfc00815 	stw	ra,32(sp)
   10188:	df000715 	stw	fp,28(sp)
   1018c:	df000704 	addi	fp,sp,28
   10190:	e13ffb15 	stw	r4,-20(fp)
   10194:	e17ffc15 	stw	r5,-16(fp)
   10198:	e1bffd15 	stw	r6,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1019c:	e0bffb17 	ldw	r2,-20(fp)
   101a0:	1004803a 	cmplt	r2,r2,zero
   101a4:	1000081e 	bne	r2,zero,101c8 <write+0x48>
   101a8:	e0bffb17 	ldw	r2,-20(fp)
   101ac:	10800324 	muli	r2,r2,12
   101b0:	1007883a 	mov	r3,r2
   101b4:	00800074 	movhi	r2,1
   101b8:	108cda04 	addi	r2,r2,13160
   101bc:	1887883a 	add	r3,r3,r2
   101c0:	e0ffff15 	stw	r3,-4(fp)
   101c4:	00000106 	br	101cc <write+0x4c>
   101c8:	e03fff15 	stw	zero,-4(fp)
   101cc:	e0bfff17 	ldw	r2,-4(fp)
   101d0:	e0bffa15 	stw	r2,-24(fp)
  
  if (fd)
   101d4:	e0bffa17 	ldw	r2,-24(fp)
   101d8:	1005003a 	cmpeq	r2,r2,zero
   101dc:	1000241e 	bne	r2,zero,10270 <write+0xf0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   101e0:	e0bffa17 	ldw	r2,-24(fp)
   101e4:	10800217 	ldw	r2,8(r2)
   101e8:	108000cc 	andi	r2,r2,3
   101ec:	1005003a 	cmpeq	r2,r2,zero
   101f0:	10001a1e 	bne	r2,zero,1025c <write+0xdc>
   101f4:	e0bffa17 	ldw	r2,-24(fp)
   101f8:	10800017 	ldw	r2,0(r2)
   101fc:	10800617 	ldw	r2,24(r2)
   10200:	1005003a 	cmpeq	r2,r2,zero
   10204:	1000151e 	bne	r2,zero,1025c <write+0xdc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   10208:	e0bffa17 	ldw	r2,-24(fp)
   1020c:	10800017 	ldw	r2,0(r2)
   10210:	10800617 	ldw	r2,24(r2)
   10214:	e17ffc17 	ldw	r5,-16(fp)
   10218:	e1bffd17 	ldw	r6,-12(fp)
   1021c:	e13ffa17 	ldw	r4,-24(fp)
   10220:	103ee83a 	callr	r2
   10224:	e0bff915 	stw	r2,-28(fp)
   10228:	e0bff917 	ldw	r2,-28(fp)
   1022c:	1004403a 	cmpge	r2,r2,zero
   10230:	1000071e 	bne	r2,zero,10250 <write+0xd0>
      {
        ALT_ERRNO = -rval;
   10234:	00102a00 	call	102a0 <alt_get_errno>
   10238:	e0fff917 	ldw	r3,-28(fp)
   1023c:	00c7c83a 	sub	r3,zero,r3
   10240:	10c00015 	stw	r3,0(r2)
        return -1;
   10244:	00bfffc4 	movi	r2,-1
   10248:	e0bffe15 	stw	r2,-8(fp)
   1024c:	00000e06 	br	10288 <write+0x108>
      }
      return rval;
   10250:	e0bff917 	ldw	r2,-28(fp)
   10254:	e0bffe15 	stw	r2,-8(fp)
   10258:	00000b06 	br	10288 <write+0x108>
    }
    else
    {
      ALT_ERRNO = EACCES;
   1025c:	00102a00 	call	102a0 <alt_get_errno>
   10260:	1007883a 	mov	r3,r2
   10264:	00800344 	movi	r2,13
   10268:	18800015 	stw	r2,0(r3)
   1026c:	00000406 	br	10280 <write+0x100>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   10270:	00102a00 	call	102a0 <alt_get_errno>
   10274:	1007883a 	mov	r3,r2
   10278:	00801444 	movi	r2,81
   1027c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   10280:	00bfffc4 	movi	r2,-1
   10284:	e0bffe15 	stw	r2,-8(fp)
   10288:	e0bffe17 	ldw	r2,-8(fp)
}
   1028c:	e037883a 	mov	sp,fp
   10290:	dfc00117 	ldw	ra,4(sp)
   10294:	df000017 	ldw	fp,0(sp)
   10298:	dec00204 	addi	sp,sp,8
   1029c:	f800283a 	ret

000102a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   102a0:	defffd04 	addi	sp,sp,-12
   102a4:	dfc00215 	stw	ra,8(sp)
   102a8:	df000115 	stw	fp,4(sp)
   102ac:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   102b0:	00800074 	movhi	r2,1
   102b4:	10915e04 	addi	r2,r2,17784
   102b8:	10800017 	ldw	r2,0(r2)
   102bc:	1005003a 	cmpeq	r2,r2,zero
   102c0:	1000061e 	bne	r2,zero,102dc <alt_get_errno+0x3c>
   102c4:	00800074 	movhi	r2,1
   102c8:	10915e04 	addi	r2,r2,17784
   102cc:	10800017 	ldw	r2,0(r2)
   102d0:	103ee83a 	callr	r2
   102d4:	e0bfff15 	stw	r2,-4(fp)
   102d8:	00000306 	br	102e8 <alt_get_errno+0x48>
   102dc:	00800074 	movhi	r2,1
   102e0:	10980804 	addi	r2,r2,24608
   102e4:	e0bfff15 	stw	r2,-4(fp)
   102e8:	e0bfff17 	ldw	r2,-4(fp)
}
   102ec:	e037883a 	mov	sp,fp
   102f0:	dfc00117 	ldw	ra,4(sp)
   102f4:	df000017 	ldw	fp,0(sp)
   102f8:	dec00204 	addi	sp,sp,8
   102fc:	f800283a 	ret

00010300 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   10300:	defffd04 	addi	sp,sp,-12
   10304:	dfc00215 	stw	ra,8(sp)
   10308:	df000115 	stw	fp,4(sp)
   1030c:	df000104 	addi	fp,sp,4
   10310:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
   10314:	0011b880 	call	11b88 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   10318:	00800044 	movi	r2,1
   1031c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   10320:	e037883a 	mov	sp,fp
   10324:	dfc00117 	ldw	ra,4(sp)
   10328:	df000017 	ldw	fp,0(sp)
   1032c:	dec00204 	addi	sp,sp,8
   10330:	f800283a 	ret

00010334 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   10334:	defffe04 	addi	sp,sp,-8
   10338:	dfc00115 	stw	ra,4(sp)
   1033c:	df000015 	stw	fp,0(sp)
   10340:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   10344:	01002034 	movhi	r4,128
   10348:	21081004 	addi	r4,r4,8256
   1034c:	000b883a 	mov	r5,zero
   10350:	000d883a 	mov	r6,zero
   10354:	01c0fa04 	movi	r7,1000
   10358:	0010ee40 	call	10ee4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   1035c:	01000074 	movhi	r4,1
   10360:	210d4404 	addi	r4,r4,13584
   10364:	000b883a 	mov	r5,zero
   10368:	01800204 	movi	r6,8
   1036c:	00105100 	call	10510 <altera_avalon_jtag_uart_init>
   10370:	01000074 	movhi	r4,1
   10374:	210d3a04 	addi	r4,r4,13544
   10378:	00103900 	call	10390 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
}
   1037c:	e037883a 	mov	sp,fp
   10380:	dfc00117 	ldw	ra,4(sp)
   10384:	df000017 	ldw	fp,0(sp)
   10388:	dec00204 	addi	sp,sp,8
   1038c:	f800283a 	ret

00010390 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   10390:	defffd04 	addi	sp,sp,-12
   10394:	dfc00215 	stw	ra,8(sp)
   10398:	df000115 	stw	fp,4(sp)
   1039c:	df000104 	addi	fp,sp,4
   103a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   103a4:	e13fff17 	ldw	r4,-4(fp)
   103a8:	01400074 	movhi	r5,1
   103ac:	29515b04 	addi	r5,r5,17772
   103b0:	001110c0 	call	1110c <alt_dev_llist_insert>
}
   103b4:	e037883a 	mov	sp,fp
   103b8:	dfc00117 	ldw	ra,4(sp)
   103bc:	df000017 	ldw	fp,0(sp)
   103c0:	dec00204 	addi	sp,sp,8
   103c4:	f800283a 	ret

000103c8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   103c8:	defffa04 	addi	sp,sp,-24
   103cc:	dfc00515 	stw	ra,20(sp)
   103d0:	df000415 	stw	fp,16(sp)
   103d4:	df000404 	addi	fp,sp,16
   103d8:	e13ffd15 	stw	r4,-12(fp)
   103dc:	e17ffe15 	stw	r5,-8(fp)
   103e0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   103e4:	e0bffd17 	ldw	r2,-12(fp)
   103e8:	10800017 	ldw	r2,0(r2)
   103ec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   103f0:	e0bffc17 	ldw	r2,-16(fp)
   103f4:	11000a04 	addi	r4,r2,40
   103f8:	e0bffd17 	ldw	r2,-12(fp)
   103fc:	11c00217 	ldw	r7,8(r2)
   10400:	e17ffe17 	ldw	r5,-8(fp)
   10404:	e1bfff17 	ldw	r6,-4(fp)
   10408:	0010a100 	call	10a10 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   1040c:	e037883a 	mov	sp,fp
   10410:	dfc00117 	ldw	ra,4(sp)
   10414:	df000017 	ldw	fp,0(sp)
   10418:	dec00204 	addi	sp,sp,8
   1041c:	f800283a 	ret

00010420 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   10420:	defffa04 	addi	sp,sp,-24
   10424:	dfc00515 	stw	ra,20(sp)
   10428:	df000415 	stw	fp,16(sp)
   1042c:	df000404 	addi	fp,sp,16
   10430:	e13ffd15 	stw	r4,-12(fp)
   10434:	e17ffe15 	stw	r5,-8(fp)
   10438:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   1043c:	e0bffd17 	ldw	r2,-12(fp)
   10440:	10800017 	ldw	r2,0(r2)
   10444:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   10448:	e0bffc17 	ldw	r2,-16(fp)
   1044c:	11000a04 	addi	r4,r2,40
   10450:	e0bffd17 	ldw	r2,-12(fp)
   10454:	11c00217 	ldw	r7,8(r2)
   10458:	e17ffe17 	ldw	r5,-8(fp)
   1045c:	e1bfff17 	ldw	r6,-4(fp)
   10460:	0010c340 	call	10c34 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   10464:	e037883a 	mov	sp,fp
   10468:	dfc00117 	ldw	ra,4(sp)
   1046c:	df000017 	ldw	fp,0(sp)
   10470:	dec00204 	addi	sp,sp,8
   10474:	f800283a 	ret

00010478 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   10478:	defffc04 	addi	sp,sp,-16
   1047c:	dfc00315 	stw	ra,12(sp)
   10480:	df000215 	stw	fp,8(sp)
   10484:	df000204 	addi	fp,sp,8
   10488:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   1048c:	e0bfff17 	ldw	r2,-4(fp)
   10490:	10800017 	ldw	r2,0(r2)
   10494:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   10498:	e0bffe17 	ldw	r2,-8(fp)
   1049c:	11000a04 	addi	r4,r2,40
   104a0:	e0bfff17 	ldw	r2,-4(fp)
   104a4:	11400217 	ldw	r5,8(r2)
   104a8:	00108a80 	call	108a8 <altera_avalon_jtag_uart_close>
}
   104ac:	e037883a 	mov	sp,fp
   104b0:	dfc00117 	ldw	ra,4(sp)
   104b4:	df000017 	ldw	fp,0(sp)
   104b8:	dec00204 	addi	sp,sp,8
   104bc:	f800283a 	ret

000104c0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   104c0:	defffa04 	addi	sp,sp,-24
   104c4:	dfc00515 	stw	ra,20(sp)
   104c8:	df000415 	stw	fp,16(sp)
   104cc:	df000404 	addi	fp,sp,16
   104d0:	e13ffd15 	stw	r4,-12(fp)
   104d4:	e17ffe15 	stw	r5,-8(fp)
   104d8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   104dc:	e0bffd17 	ldw	r2,-12(fp)
   104e0:	10800017 	ldw	r2,0(r2)
   104e4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   104e8:	e0bffc17 	ldw	r2,-16(fp)
   104ec:	11000a04 	addi	r4,r2,40
   104f0:	e17ffe17 	ldw	r5,-8(fp)
   104f4:	e1bfff17 	ldw	r6,-4(fp)
   104f8:	001091c0 	call	1091c <altera_avalon_jtag_uart_ioctl>
}
   104fc:	e037883a 	mov	sp,fp
   10500:	dfc00117 	ldw	ra,4(sp)
   10504:	df000017 	ldw	fp,0(sp)
   10508:	dec00204 	addi	sp,sp,8
   1050c:	f800283a 	ret

00010510 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   10510:	defffa04 	addi	sp,sp,-24
   10514:	dfc00515 	stw	ra,20(sp)
   10518:	df000415 	stw	fp,16(sp)
   1051c:	df000404 	addi	fp,sp,16
   10520:	e13ffd15 	stw	r4,-12(fp)
   10524:	e17ffe15 	stw	r5,-8(fp)
   10528:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1052c:	e0fffd17 	ldw	r3,-12(fp)
   10530:	00800044 	movi	r2,1
   10534:	18800815 	stw	r2,32(r3)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   10538:	e0bffd17 	ldw	r2,-12(fp)
   1053c:	10800017 	ldw	r2,0(r2)
   10540:	11000104 	addi	r4,r2,4
   10544:	e0bffd17 	ldw	r2,-12(fp)
   10548:	10800817 	ldw	r2,32(r2)
   1054c:	1007883a 	mov	r3,r2
   10550:	2005883a 	mov	r2,r4
   10554:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   10558:	e13ffe17 	ldw	r4,-8(fp)
   1055c:	e17fff17 	ldw	r5,-4(fp)
   10560:	d8000015 	stw	zero,0(sp)
   10564:	01800074 	movhi	r6,1
   10568:	31817404 	addi	r6,r6,1488
   1056c:	e1fffd17 	ldw	r7,-12(fp)
   10570:	00113180 	call	11318 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   10574:	e0bffd17 	ldw	r2,-12(fp)
   10578:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   1057c:	e0bffd17 	ldw	r2,-12(fp)
   10580:	11000204 	addi	r4,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   10584:	00800074 	movhi	r2,1
   10588:	10981004 	addi	r2,r2,24640
   1058c:	10800017 	ldw	r2,0(r2)
   10590:	100b883a 	mov	r5,r2
   10594:	01800074 	movhi	r6,1
   10598:	3181fe04 	addi	r6,r6,2040
   1059c:	e1fffd17 	ldw	r7,-12(fp)
   105a0:	0010f740 	call	10f74 <alt_alarm_start>
   105a4:	1004403a 	cmpge	r2,r2,zero
   105a8:	1000041e 	bne	r2,zero,105bc <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   105ac:	e0fffd17 	ldw	r3,-12(fp)
   105b0:	00a00034 	movhi	r2,32768
   105b4:	10bfffc4 	addi	r2,r2,-1
   105b8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   105bc:	e037883a 	mov	sp,fp
   105c0:	dfc00117 	ldw	ra,4(sp)
   105c4:	df000017 	ldw	fp,0(sp)
   105c8:	dec00204 	addi	sp,sp,8
   105cc:	f800283a 	ret

000105d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   105d0:	defff804 	addi	sp,sp,-32
   105d4:	df000715 	stw	fp,28(sp)
   105d8:	df000704 	addi	fp,sp,28
   105dc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   105e0:	e0bfff17 	ldw	r2,-4(fp)
   105e4:	e0bffe15 	stw	r2,-8(fp)
  unsigned int base = sp->base;
   105e8:	e0bffe17 	ldw	r2,-8(fp)
   105ec:	10800017 	ldw	r2,0(r2)
   105f0:	e0bffd15 	stw	r2,-12(fp)
   105f4:	00000006 	br	105f8 <altera_avalon_jtag_uart_irq+0x28>
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   105f8:	e0bffd17 	ldw	r2,-12(fp)
   105fc:	10800104 	addi	r2,r2,4
   10600:	10800037 	ldwio	r2,0(r2)
   10604:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   10608:	e0bffc17 	ldw	r2,-16(fp)
   1060c:	1080c00c 	andi	r2,r2,768
   10610:	1005003a 	cmpeq	r2,r2,zero
   10614:	1000741e 	bne	r2,zero,107e8 <altera_avalon_jtag_uart_irq+0x218>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   10618:	e0bffc17 	ldw	r2,-16(fp)
   1061c:	1080400c 	andi	r2,r2,256
   10620:	1005003a 	cmpeq	r2,r2,zero
   10624:	1000351e 	bne	r2,zero,106fc <altera_avalon_jtag_uart_irq+0x12c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   10628:	00800074 	movhi	r2,1
   1062c:	e0bffb15 	stw	r2,-20(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10630:	e0bffe17 	ldw	r2,-8(fp)
   10634:	10800a17 	ldw	r2,40(r2)
   10638:	10800044 	addi	r2,r2,1
   1063c:	1081ffcc 	andi	r2,r2,2047
   10640:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   10644:	e0bffe17 	ldw	r2,-8(fp)
   10648:	10c00b17 	ldw	r3,44(r2)
   1064c:	e0bffa17 	ldw	r2,-24(fp)
   10650:	18801626 	beq	r3,r2,106ac <altera_avalon_jtag_uart_irq+0xdc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   10654:	e0bffd17 	ldw	r2,-12(fp)
   10658:	10800037 	ldwio	r2,0(r2)
   1065c:	e0bffb15 	stw	r2,-20(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   10660:	e0bffb17 	ldw	r2,-20(fp)
   10664:	10a0000c 	andi	r2,r2,32768
   10668:	1005003a 	cmpeq	r2,r2,zero
   1066c:	10000f1e 	bne	r2,zero,106ac <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   10670:	e0bffe17 	ldw	r2,-8(fp)
   10674:	10c00a17 	ldw	r3,40(r2)
   10678:	e0bffb17 	ldw	r2,-20(fp)
   1067c:	1009883a 	mov	r4,r2
   10680:	e0bffe17 	ldw	r2,-8(fp)
   10684:	1885883a 	add	r2,r3,r2
   10688:	10800e04 	addi	r2,r2,56
   1068c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10690:	e0bffe17 	ldw	r2,-8(fp)
   10694:	10800a17 	ldw	r2,40(r2)
   10698:	10800044 	addi	r2,r2,1
   1069c:	10c1ffcc 	andi	r3,r2,2047
   106a0:	e0bffe17 	ldw	r2,-8(fp)
   106a4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   106a8:	003fe106 	br	10630 <altera_avalon_jtag_uart_irq+0x60>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   106ac:	e0bffb17 	ldw	r2,-20(fp)
   106b0:	10bfffec 	andhi	r2,r2,65535
   106b4:	1005003a 	cmpeq	r2,r2,zero
   106b8:	1000101e 	bne	r2,zero,106fc <altera_avalon_jtag_uart_irq+0x12c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   106bc:	e0bffe17 	ldw	r2,-8(fp)
   106c0:	10c00817 	ldw	r3,32(r2)
   106c4:	00bfff84 	movi	r2,-2
   106c8:	1886703a 	and	r3,r3,r2
   106cc:	e0bffe17 	ldw	r2,-8(fp)
   106d0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   106d4:	e0bffd17 	ldw	r2,-12(fp)
   106d8:	11000104 	addi	r4,r2,4
   106dc:	e0bffe17 	ldw	r2,-8(fp)
   106e0:	10800817 	ldw	r2,32(r2)
   106e4:	1007883a 	mov	r3,r2
   106e8:	2005883a 	mov	r2,r4
   106ec:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   106f0:	e0bffd17 	ldw	r2,-12(fp)
   106f4:	10800104 	addi	r2,r2,4
   106f8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   106fc:	e0bffc17 	ldw	r2,-16(fp)
   10700:	1080800c 	andi	r2,r2,512
   10704:	1005003a 	cmpeq	r2,r2,zero
   10708:	103fbb1e 	bne	r2,zero,105f8 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   1070c:	e0bffc17 	ldw	r2,-16(fp)
   10710:	10bfffec 	andhi	r2,r2,65535
   10714:	1004d43a 	srli	r2,r2,16
   10718:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   1071c:	00001506 	br	10774 <altera_avalon_jtag_uart_irq+0x1a4>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   10720:	e13ffd17 	ldw	r4,-12(fp)
   10724:	e0bffe17 	ldw	r2,-8(fp)
   10728:	10c00d17 	ldw	r3,52(r2)
   1072c:	e0bffe17 	ldw	r2,-8(fp)
   10730:	1885883a 	add	r2,r3,r2
   10734:	10820e04 	addi	r2,r2,2104
   10738:	10800003 	ldbu	r2,0(r2)
   1073c:	10c03fcc 	andi	r3,r2,255
   10740:	18c0201c 	xori	r3,r3,128
   10744:	18ffe004 	addi	r3,r3,-128
   10748:	2005883a 	mov	r2,r4
   1074c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10750:	e0bffe17 	ldw	r2,-8(fp)
   10754:	10800d17 	ldw	r2,52(r2)
   10758:	10800044 	addi	r2,r2,1
   1075c:	10c1ffcc 	andi	r3,r2,2047
   10760:	e0bffe17 	ldw	r2,-8(fp)
   10764:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   10768:	e0bff917 	ldw	r2,-28(fp)
   1076c:	10bfffc4 	addi	r2,r2,-1
   10770:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   10774:	e0bff917 	ldw	r2,-28(fp)
   10778:	1005003a 	cmpeq	r2,r2,zero
   1077c:	1000051e 	bne	r2,zero,10794 <altera_avalon_jtag_uart_irq+0x1c4>
   10780:	e0bffe17 	ldw	r2,-8(fp)
   10784:	10c00d17 	ldw	r3,52(r2)
   10788:	e0bffe17 	ldw	r2,-8(fp)
   1078c:	10800c17 	ldw	r2,48(r2)
   10790:	18bfe31e 	bne	r3,r2,10720 <altera_avalon_jtag_uart_irq+0x150>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   10794:	e0bff917 	ldw	r2,-28(fp)
   10798:	1005003a 	cmpeq	r2,r2,zero
   1079c:	103f961e 	bne	r2,zero,105f8 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   107a0:	e0bffe17 	ldw	r2,-8(fp)
   107a4:	10c00817 	ldw	r3,32(r2)
   107a8:	00bfff44 	movi	r2,-3
   107ac:	1886703a 	and	r3,r3,r2
   107b0:	e0bffe17 	ldw	r2,-8(fp)
   107b4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   107b8:	e0bffe17 	ldw	r2,-8(fp)
   107bc:	10800017 	ldw	r2,0(r2)
   107c0:	11000104 	addi	r4,r2,4
   107c4:	e0bffe17 	ldw	r2,-8(fp)
   107c8:	10800817 	ldw	r2,32(r2)
   107cc:	1007883a 	mov	r3,r2
   107d0:	2005883a 	mov	r2,r4
   107d4:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   107d8:	e0bffd17 	ldw	r2,-12(fp)
   107dc:	10800104 	addi	r2,r2,4
   107e0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   107e4:	003f8406 	br	105f8 <altera_avalon_jtag_uart_irq+0x28>
}
   107e8:	e037883a 	mov	sp,fp
   107ec:	df000017 	ldw	fp,0(sp)
   107f0:	dec00104 	addi	sp,sp,4
   107f4:	f800283a 	ret

000107f8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   107f8:	defffc04 	addi	sp,sp,-16
   107fc:	df000315 	stw	fp,12(sp)
   10800:	df000304 	addi	fp,sp,12
   10804:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   10808:	e0bfff17 	ldw	r2,-4(fp)
   1080c:	e0bffe15 	stw	r2,-8(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   10810:	e0bffe17 	ldw	r2,-8(fp)
   10814:	10800017 	ldw	r2,0(r2)
   10818:	10800104 	addi	r2,r2,4
   1081c:	10800037 	ldwio	r2,0(r2)
   10820:	e0bffd15 	stw	r2,-12(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   10824:	e0bffd17 	ldw	r2,-12(fp)
   10828:	1081000c 	andi	r2,r2,1024
   1082c:	1005003a 	cmpeq	r2,r2,zero
   10830:	10000c1e 	bne	r2,zero,10864 <altera_avalon_jtag_uart_timeout+0x6c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   10834:	e0bffe17 	ldw	r2,-8(fp)
   10838:	10800017 	ldw	r2,0(r2)
   1083c:	11000104 	addi	r4,r2,4
   10840:	e0bffe17 	ldw	r2,-8(fp)
   10844:	10800817 	ldw	r2,32(r2)
   10848:	10810014 	ori	r2,r2,1024
   1084c:	1007883a 	mov	r3,r2
   10850:	2005883a 	mov	r2,r4
   10854:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
   10858:	e0bffe17 	ldw	r2,-8(fp)
   1085c:	10000915 	stw	zero,36(r2)
   10860:	00000a06 	br	1088c <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   10864:	e0bffe17 	ldw	r2,-8(fp)
   10868:	10c00917 	ldw	r3,36(r2)
   1086c:	00a00034 	movhi	r2,32768
   10870:	10bfff04 	addi	r2,r2,-4
   10874:	10c00536 	bltu	r2,r3,1088c <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   10878:	e0bffe17 	ldw	r2,-8(fp)
   1087c:	10800917 	ldw	r2,36(r2)
   10880:	10c00044 	addi	r3,r2,1
   10884:	e0bffe17 	ldw	r2,-8(fp)
   10888:	10c00915 	stw	r3,36(r2)
   1088c:	00800074 	movhi	r2,1
   10890:	10981004 	addi	r2,r2,24640
   10894:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   10898:	e037883a 	mov	sp,fp
   1089c:	df000017 	ldw	fp,0(sp)
   108a0:	dec00104 	addi	sp,sp,4
   108a4:	f800283a 	ret

000108a8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   108a8:	defffc04 	addi	sp,sp,-16
   108ac:	df000315 	stw	fp,12(sp)
   108b0:	df000304 	addi	fp,sp,12
   108b4:	e13ffd15 	stw	r4,-12(fp)
   108b8:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   108bc:	00000706 	br	108dc <altera_avalon_jtag_uart_close+0x34>
    if (flags & O_NONBLOCK) {
   108c0:	e0bffe17 	ldw	r2,-8(fp)
   108c4:	1090000c 	andi	r2,r2,16384
   108c8:	1005003a 	cmpeq	r2,r2,zero
   108cc:	1000031e 	bne	r2,zero,108dc <altera_avalon_jtag_uart_close+0x34>
      return -EWOULDBLOCK; 
   108d0:	00bffd44 	movi	r2,-11
   108d4:	e0bfff15 	stw	r2,-4(fp)
   108d8:	00000b06 	br	10908 <altera_avalon_jtag_uart_close+0x60>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   108dc:	e0bffd17 	ldw	r2,-12(fp)
   108e0:	10c00d17 	ldw	r3,52(r2)
   108e4:	e0bffd17 	ldw	r2,-12(fp)
   108e8:	10800c17 	ldw	r2,48(r2)
   108ec:	18800526 	beq	r3,r2,10904 <altera_avalon_jtag_uart_close+0x5c>
   108f0:	e0bffd17 	ldw	r2,-12(fp)
   108f4:	10c00917 	ldw	r3,36(r2)
   108f8:	e0bffd17 	ldw	r2,-12(fp)
   108fc:	10800117 	ldw	r2,4(r2)
   10900:	18bfef36 	bltu	r3,r2,108c0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   10904:	e03fff15 	stw	zero,-4(fp)
   10908:	e0bfff17 	ldw	r2,-4(fp)
}
   1090c:	e037883a 	mov	sp,fp
   10910:	df000017 	ldw	fp,0(sp)
   10914:	dec00104 	addi	sp,sp,4
   10918:	f800283a 	ret

0001091c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   1091c:	defff804 	addi	sp,sp,-32
   10920:	df000715 	stw	fp,28(sp)
   10924:	df000704 	addi	fp,sp,28
   10928:	e13ffb15 	stw	r4,-20(fp)
   1092c:	e17ffc15 	stw	r5,-16(fp)
   10930:	e1bffd15 	stw	r6,-12(fp)
  int rc = -ENOTTY;
   10934:	00bff9c4 	movi	r2,-25
   10938:	e0bffa15 	stw	r2,-24(fp)

  switch (req)
   1093c:	e0bffc17 	ldw	r2,-16(fp)
   10940:	e0bfff15 	stw	r2,-4(fp)
   10944:	e0ffff17 	ldw	r3,-4(fp)
   10948:	189a8060 	cmpeqi	r2,r3,27137
   1094c:	1000041e 	bne	r2,zero,10960 <altera_avalon_jtag_uart_ioctl+0x44>
   10950:	e0ffff17 	ldw	r3,-4(fp)
   10954:	189a80a0 	cmpeqi	r2,r3,27138
   10958:	10001b1e 	bne	r2,zero,109c8 <altera_avalon_jtag_uart_ioctl+0xac>
   1095c:	00002706 	br	109fc <altera_avalon_jtag_uart_ioctl+0xe0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   10960:	e0bffb17 	ldw	r2,-20(fp)
   10964:	10c00117 	ldw	r3,4(r2)
   10968:	00a00034 	movhi	r2,32768
   1096c:	10bfffc4 	addi	r2,r2,-1
   10970:	18802226 	beq	r3,r2,109fc <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
   10974:	e0bffd17 	ldw	r2,-12(fp)
   10978:	10800017 	ldw	r2,0(r2)
   1097c:	e0bff915 	stw	r2,-28(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   10980:	e0bff917 	ldw	r2,-28(fp)
   10984:	10800090 	cmplti	r2,r2,2
   10988:	1000071e 	bne	r2,zero,109a8 <altera_avalon_jtag_uart_ioctl+0x8c>
   1098c:	e0fff917 	ldw	r3,-28(fp)
   10990:	00a00034 	movhi	r2,32768
   10994:	10bfffc4 	addi	r2,r2,-1
   10998:	18800326 	beq	r3,r2,109a8 <altera_avalon_jtag_uart_ioctl+0x8c>
   1099c:	e0bff917 	ldw	r2,-28(fp)
   109a0:	e0bffe15 	stw	r2,-8(fp)
   109a4:	00000306 	br	109b4 <altera_avalon_jtag_uart_ioctl+0x98>
   109a8:	00e00034 	movhi	r3,32768
   109ac:	18ffff84 	addi	r3,r3,-2
   109b0:	e0fffe15 	stw	r3,-8(fp)
   109b4:	e0bffb17 	ldw	r2,-20(fp)
   109b8:	e0fffe17 	ldw	r3,-8(fp)
   109bc:	10c00115 	stw	r3,4(r2)
      rc = 0;
   109c0:	e03ffa15 	stw	zero,-24(fp)
    }
    break;
   109c4:	00000d06 	br	109fc <altera_avalon_jtag_uart_ioctl+0xe0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   109c8:	e0bffb17 	ldw	r2,-20(fp)
   109cc:	10c00117 	ldw	r3,4(r2)
   109d0:	00a00034 	movhi	r2,32768
   109d4:	10bfffc4 	addi	r2,r2,-1
   109d8:	18800826 	beq	r3,r2,109fc <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   109dc:	e13ffd17 	ldw	r4,-12(fp)
   109e0:	e0bffb17 	ldw	r2,-20(fp)
   109e4:	10c00917 	ldw	r3,36(r2)
   109e8:	e0bffb17 	ldw	r2,-20(fp)
   109ec:	10800117 	ldw	r2,4(r2)
   109f0:	1885803a 	cmpltu	r2,r3,r2
   109f4:	20800015 	stw	r2,0(r4)
      rc = 0;
   109f8:	e03ffa15 	stw	zero,-24(fp)

  default:
    break;
  }

  return rc;
   109fc:	e0bffa17 	ldw	r2,-24(fp)
}
   10a00:	e037883a 	mov	sp,fp
   10a04:	df000017 	ldw	fp,0(sp)
   10a08:	dec00104 	addi	sp,sp,4
   10a0c:	f800283a 	ret

00010a10 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   10a10:	defff204 	addi	sp,sp,-56
   10a14:	dfc00d15 	stw	ra,52(sp)
   10a18:	df000c15 	stw	fp,48(sp)
   10a1c:	df000c04 	addi	fp,sp,48
   10a20:	e13ffb15 	stw	r4,-20(fp)
   10a24:	e17ffc15 	stw	r5,-16(fp)
   10a28:	e1bffd15 	stw	r6,-12(fp)
   10a2c:	e1fffe15 	stw	r7,-8(fp)
  char * ptr = buffer;
   10a30:	e0bffc17 	ldw	r2,-16(fp)
   10a34:	e0bffa15 	stw	r2,-24(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   10a38:	00004806 	br	10b5c <altera_avalon_jtag_uart_read+0x14c>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   10a3c:	e0bffb17 	ldw	r2,-20(fp)
   10a40:	10800a17 	ldw	r2,40(r2)
   10a44:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   10a48:	e0bffb17 	ldw	r2,-20(fp)
   10a4c:	10800b17 	ldw	r2,44(r2)
   10a50:	e0bff615 	stw	r2,-40(fp)

      if (in >= out)
   10a54:	e0fff717 	ldw	r3,-36(fp)
   10a58:	e0bff617 	ldw	r2,-40(fp)
   10a5c:	18800536 	bltu	r3,r2,10a74 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   10a60:	e0bff717 	ldw	r2,-36(fp)
   10a64:	e0fff617 	ldw	r3,-40(fp)
   10a68:	10c5c83a 	sub	r2,r2,r3
   10a6c:	e0bff815 	stw	r2,-32(fp)
   10a70:	00000406 	br	10a84 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   10a74:	00820004 	movi	r2,2048
   10a78:	e0fff617 	ldw	r3,-40(fp)
   10a7c:	10c5c83a 	sub	r2,r2,r3
   10a80:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   10a84:	e0bff817 	ldw	r2,-32(fp)
   10a88:	1005003a 	cmpeq	r2,r2,zero
   10a8c:	10001f1e 	bne	r2,zero,10b0c <altera_avalon_jtag_uart_read+0xfc>
        break; /* No more data available */

      if (n > space)
   10a90:	e0fffd17 	ldw	r3,-12(fp)
   10a94:	e0bff817 	ldw	r2,-32(fp)
   10a98:	1880022e 	bgeu	r3,r2,10aa4 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   10a9c:	e0bffd17 	ldw	r2,-12(fp)
   10aa0:	e0bff815 	stw	r2,-32(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   10aa4:	e0bffb17 	ldw	r2,-20(fp)
   10aa8:	10c00e04 	addi	r3,r2,56
   10aac:	e0bff617 	ldw	r2,-40(fp)
   10ab0:	1887883a 	add	r3,r3,r2
   10ab4:	e0bffa17 	ldw	r2,-24(fp)
   10ab8:	1009883a 	mov	r4,r2
   10abc:	180b883a 	mov	r5,r3
   10ac0:	e1bff817 	ldw	r6,-32(fp)
   10ac4:	00017300 	call	1730 <memcpy>
      ptr   += n;
   10ac8:	e0fff817 	ldw	r3,-32(fp)
   10acc:	e0bffa17 	ldw	r2,-24(fp)
   10ad0:	10c5883a 	add	r2,r2,r3
   10ad4:	e0bffa15 	stw	r2,-24(fp)
      space -= n;
   10ad8:	e0fffd17 	ldw	r3,-12(fp)
   10adc:	e0bff817 	ldw	r2,-32(fp)
   10ae0:	1885c83a 	sub	r2,r3,r2
   10ae4:	e0bffd15 	stw	r2,-12(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10ae8:	e0fff617 	ldw	r3,-40(fp)
   10aec:	e0bff817 	ldw	r2,-32(fp)
   10af0:	1885883a 	add	r2,r3,r2
   10af4:	10c1ffcc 	andi	r3,r2,2047
   10af8:	e0bffb17 	ldw	r2,-20(fp)
   10afc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   10b00:	e0bffd17 	ldw	r2,-12(fp)
   10b04:	10800048 	cmpgei	r2,r2,1
   10b08:	103fcc1e 	bne	r2,zero,10a3c <altera_avalon_jtag_uart_read+0x2c>

    /* If we read any data then return it */
    if (ptr != buffer)
   10b0c:	e0fffa17 	ldw	r3,-24(fp)
   10b10:	e0bffc17 	ldw	r2,-16(fp)
   10b14:	1880141e 	bne	r3,r2,10b68 <altera_avalon_jtag_uart_read+0x158>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   10b18:	e0bffe17 	ldw	r2,-8(fp)
   10b1c:	1090000c 	andi	r2,r2,16384
   10b20:	1004c03a 	cmpne	r2,r2,zero
   10b24:	1000101e 	bne	r2,zero,10b68 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   10b28:	e0bffb17 	ldw	r2,-20(fp)
   10b2c:	10c00a17 	ldw	r3,40(r2)
   10b30:	e0bff717 	ldw	r2,-36(fp)
   10b34:	1880051e 	bne	r3,r2,10b4c <altera_avalon_jtag_uart_read+0x13c>
   10b38:	e0bffb17 	ldw	r2,-20(fp)
   10b3c:	10c00917 	ldw	r3,36(r2)
   10b40:	e0bffb17 	ldw	r2,-20(fp)
   10b44:	10800117 	ldw	r2,4(r2)
   10b48:	18bff736 	bltu	r3,r2,10b28 <altera_avalon_jtag_uart_read+0x118>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   10b4c:	e0bffb17 	ldw	r2,-20(fp)
   10b50:	10c00a17 	ldw	r3,40(r2)
   10b54:	e0bff717 	ldw	r2,-36(fp)
   10b58:	18800326 	beq	r3,r2,10b68 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   10b5c:	e0bffd17 	ldw	r2,-12(fp)
   10b60:	10800048 	cmpgei	r2,r2,1
   10b64:	103fb51e 	bne	r2,zero,10a3c <altera_avalon_jtag_uart_read+0x2c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   10b68:	e0fffa17 	ldw	r3,-24(fp)
   10b6c:	e0bffc17 	ldw	r2,-16(fp)
   10b70:	18801926 	beq	r3,r2,10bd8 <altera_avalon_jtag_uart_read+0x1c8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10b74:	0005303a 	rdctl	r2,status
   10b78:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10b7c:	e0fff517 	ldw	r3,-44(fp)
   10b80:	00bfff84 	movi	r2,-2
   10b84:	1884703a 	and	r2,r3,r2
   10b88:	1001703a 	wrctl	status,r2
  
  return context;
   10b8c:	e0bff517 	ldw	r2,-44(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   10b90:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   10b94:	e0bffb17 	ldw	r2,-20(fp)
   10b98:	10800817 	ldw	r2,32(r2)
   10b9c:	10c00054 	ori	r3,r2,1
   10ba0:	e0bffb17 	ldw	r2,-20(fp)
   10ba4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   10ba8:	e0bffb17 	ldw	r2,-20(fp)
   10bac:	10800017 	ldw	r2,0(r2)
   10bb0:	11000104 	addi	r4,r2,4
   10bb4:	e0bffb17 	ldw	r2,-20(fp)
   10bb8:	10800817 	ldw	r2,32(r2)
   10bbc:	1007883a 	mov	r3,r2
   10bc0:	2005883a 	mov	r2,r4
   10bc4:	10c00035 	stwio	r3,0(r2)
   10bc8:	e0bff917 	ldw	r2,-28(fp)
   10bcc:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10bd0:	e0bff417 	ldw	r2,-48(fp)
   10bd4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   10bd8:	e0fffa17 	ldw	r3,-24(fp)
   10bdc:	e0bffc17 	ldw	r2,-16(fp)
   10be0:	18800526 	beq	r3,r2,10bf8 <altera_avalon_jtag_uart_read+0x1e8>
    return ptr - buffer;
   10be4:	e0fffa17 	ldw	r3,-24(fp)
   10be8:	e0bffc17 	ldw	r2,-16(fp)
   10bec:	1887c83a 	sub	r3,r3,r2
   10bf0:	e0ffff15 	stw	r3,-4(fp)
   10bf4:	00000906 	br	10c1c <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   10bf8:	e0bffe17 	ldw	r2,-8(fp)
   10bfc:	1090000c 	andi	r2,r2,16384
   10c00:	1005003a 	cmpeq	r2,r2,zero
   10c04:	1000031e 	bne	r2,zero,10c14 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   10c08:	00bffd44 	movi	r2,-11
   10c0c:	e0bfff15 	stw	r2,-4(fp)
   10c10:	00000206 	br	10c1c <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   10c14:	00bffec4 	movi	r2,-5
   10c18:	e0bfff15 	stw	r2,-4(fp)
   10c1c:	e0bfff17 	ldw	r2,-4(fp)
}
   10c20:	e037883a 	mov	sp,fp
   10c24:	dfc00117 	ldw	ra,4(sp)
   10c28:	df000017 	ldw	fp,0(sp)
   10c2c:	dec00204 	addi	sp,sp,8
   10c30:	f800283a 	ret

00010c34 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   10c34:	defff204 	addi	sp,sp,-56
   10c38:	dfc00d15 	stw	ra,52(sp)
   10c3c:	df000c15 	stw	fp,48(sp)
   10c40:	df000c04 	addi	fp,sp,48
   10c44:	e13ffb15 	stw	r4,-20(fp)
   10c48:	e17ffc15 	stw	r5,-16(fp)
   10c4c:	e1bffd15 	stw	r6,-12(fp)
   10c50:	e1fffe15 	stw	r7,-8(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   10c54:	e03ff915 	stw	zero,-28(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   10c58:	e0bffc17 	ldw	r2,-16(fp)
   10c5c:	e0bff615 	stw	r2,-40(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   10c60:	00003a06 	br	10d4c <altera_avalon_jtag_uart_write+0x118>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   10c64:	e0bffb17 	ldw	r2,-20(fp)
   10c68:	10800c17 	ldw	r2,48(r2)
   10c6c:	e0bffa15 	stw	r2,-24(fp)
      out = sp->tx_out;
   10c70:	e0bffb17 	ldw	r2,-20(fp)
   10c74:	10800d17 	ldw	r2,52(r2)
   10c78:	e0bff915 	stw	r2,-28(fp)

      if (in < out)
   10c7c:	e0fffa17 	ldw	r3,-24(fp)
   10c80:	e0bff917 	ldw	r2,-28(fp)
   10c84:	1880062e 	bgeu	r3,r2,10ca0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   10c88:	e0fff917 	ldw	r3,-28(fp)
   10c8c:	e0bffa17 	ldw	r2,-24(fp)
   10c90:	1885c83a 	sub	r2,r3,r2
   10c94:	10bfffc4 	addi	r2,r2,-1
   10c98:	e0bff815 	stw	r2,-32(fp)
   10c9c:	00000c06 	br	10cd0 <altera_avalon_jtag_uart_write+0x9c>
      else if (out > 0)
   10ca0:	e0bff917 	ldw	r2,-28(fp)
   10ca4:	1005003a 	cmpeq	r2,r2,zero
   10ca8:	1000051e 	bne	r2,zero,10cc0 <altera_avalon_jtag_uart_write+0x8c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   10cac:	00820004 	movi	r2,2048
   10cb0:	e0fffa17 	ldw	r3,-24(fp)
   10cb4:	10c5c83a 	sub	r2,r2,r3
   10cb8:	e0bff815 	stw	r2,-32(fp)
   10cbc:	00000406 	br	10cd0 <altera_avalon_jtag_uart_write+0x9c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   10cc0:	0081ffc4 	movi	r2,2047
   10cc4:	e0fffa17 	ldw	r3,-24(fp)
   10cc8:	10c5c83a 	sub	r2,r2,r3
   10ccc:	e0bff815 	stw	r2,-32(fp)

      if (n == 0)
   10cd0:	e0bff817 	ldw	r2,-32(fp)
   10cd4:	1005003a 	cmpeq	r2,r2,zero
   10cd8:	10001f1e 	bne	r2,zero,10d58 <altera_avalon_jtag_uart_write+0x124>
        break;

      if (n > count)
   10cdc:	e0fffd17 	ldw	r3,-12(fp)
   10ce0:	e0bff817 	ldw	r2,-32(fp)
   10ce4:	1880022e 	bgeu	r3,r2,10cf0 <altera_avalon_jtag_uart_write+0xbc>
        n = count;
   10ce8:	e0bffd17 	ldw	r2,-12(fp)
   10cec:	e0bff815 	stw	r2,-32(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   10cf0:	e0bffb17 	ldw	r2,-20(fp)
   10cf4:	10c20e04 	addi	r3,r2,2104
   10cf8:	e0bffa17 	ldw	r2,-24(fp)
   10cfc:	1885883a 	add	r2,r3,r2
   10d00:	e0fffc17 	ldw	r3,-16(fp)
   10d04:	1009883a 	mov	r4,r2
   10d08:	180b883a 	mov	r5,r3
   10d0c:	e1bff817 	ldw	r6,-32(fp)
   10d10:	00017300 	call	1730 <memcpy>
      ptr   += n;
   10d14:	e0fff817 	ldw	r3,-32(fp)
   10d18:	e0bffc17 	ldw	r2,-16(fp)
   10d1c:	10c5883a 	add	r2,r2,r3
   10d20:	e0bffc15 	stw	r2,-16(fp)
      count -= n;
   10d24:	e0fffd17 	ldw	r3,-12(fp)
   10d28:	e0bff817 	ldw	r2,-32(fp)
   10d2c:	1885c83a 	sub	r2,r3,r2
   10d30:	e0bffd15 	stw	r2,-12(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10d34:	e0fffa17 	ldw	r3,-24(fp)
   10d38:	e0bff817 	ldw	r2,-32(fp)
   10d3c:	1885883a 	add	r2,r3,r2
   10d40:	10c1ffcc 	andi	r3,r2,2047
   10d44:	e0bffb17 	ldw	r2,-20(fp)
   10d48:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   10d4c:	e0bffd17 	ldw	r2,-12(fp)
   10d50:	10800048 	cmpgei	r2,r2,1
   10d54:	103fc31e 	bne	r2,zero,10c64 <altera_avalon_jtag_uart_write+0x30>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10d58:	0005303a 	rdctl	r2,status
   10d5c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10d60:	e0fff517 	ldw	r3,-44(fp)
   10d64:	00bfff84 	movi	r2,-2
   10d68:	1884703a 	and	r2,r3,r2
   10d6c:	1001703a 	wrctl	status,r2
  
  return context;
   10d70:	e0bff517 	ldw	r2,-44(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   10d74:	e0bff715 	stw	r2,-36(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   10d78:	e0bffb17 	ldw	r2,-20(fp)
   10d7c:	10800817 	ldw	r2,32(r2)
   10d80:	10c00094 	ori	r3,r2,2
   10d84:	e0bffb17 	ldw	r2,-20(fp)
   10d88:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   10d8c:	e0bffb17 	ldw	r2,-20(fp)
   10d90:	10800017 	ldw	r2,0(r2)
   10d94:	11000104 	addi	r4,r2,4
   10d98:	e0bffb17 	ldw	r2,-20(fp)
   10d9c:	10800817 	ldw	r2,32(r2)
   10da0:	1007883a 	mov	r3,r2
   10da4:	2005883a 	mov	r2,r4
   10da8:	10c00035 	stwio	r3,0(r2)
   10dac:	e0bff717 	ldw	r2,-36(fp)
   10db0:	e0bff415 	stw	r2,-48(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10db4:	e0bff417 	ldw	r2,-48(fp)
   10db8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   10dbc:	e0bffd17 	ldw	r2,-12(fp)
   10dc0:	10800050 	cmplti	r2,r2,1
   10dc4:	1000111e 	bne	r2,zero,10e0c <altera_avalon_jtag_uart_write+0x1d8>
    {
      if (flags & O_NONBLOCK)
   10dc8:	e0bffe17 	ldw	r2,-8(fp)
   10dcc:	1090000c 	andi	r2,r2,16384
   10dd0:	1004c03a 	cmpne	r2,r2,zero
   10dd4:	1000101e 	bne	r2,zero,10e18 <altera_avalon_jtag_uart_write+0x1e4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   10dd8:	e0bffb17 	ldw	r2,-20(fp)
   10ddc:	10c00d17 	ldw	r3,52(r2)
   10de0:	e0bff917 	ldw	r2,-28(fp)
   10de4:	1880051e 	bne	r3,r2,10dfc <altera_avalon_jtag_uart_write+0x1c8>
   10de8:	e0bffb17 	ldw	r2,-20(fp)
   10dec:	10c00917 	ldw	r3,36(r2)
   10df0:	e0bffb17 	ldw	r2,-20(fp)
   10df4:	10800117 	ldw	r2,4(r2)
   10df8:	18bff736 	bltu	r3,r2,10dd8 <altera_avalon_jtag_uart_write+0x1a4>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
   10dfc:	e0bffb17 	ldw	r2,-20(fp)
   10e00:	10c00d17 	ldw	r3,52(r2)
   10e04:	e0bff917 	ldw	r2,-28(fp)
   10e08:	18800326 	beq	r3,r2,10e18 <altera_avalon_jtag_uart_write+0x1e4>
         break;
    }
  }
  while (count > 0);
   10e0c:	e0bffd17 	ldw	r2,-12(fp)
   10e10:	10800048 	cmpgei	r2,r2,1
   10e14:	103fcd1e 	bne	r2,zero,10d4c <altera_avalon_jtag_uart_write+0x118>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   10e18:	e0fffc17 	ldw	r3,-16(fp)
   10e1c:	e0bff617 	ldw	r2,-40(fp)
   10e20:	18800526 	beq	r3,r2,10e38 <altera_avalon_jtag_uart_write+0x204>
    return ptr - start;
   10e24:	e0fffc17 	ldw	r3,-16(fp)
   10e28:	e0bff617 	ldw	r2,-40(fp)
   10e2c:	1887c83a 	sub	r3,r3,r2
   10e30:	e0ffff15 	stw	r3,-4(fp)
   10e34:	00000906 	br	10e5c <altera_avalon_jtag_uart_write+0x228>
  else if (flags & O_NONBLOCK)
   10e38:	e0bffe17 	ldw	r2,-8(fp)
   10e3c:	1090000c 	andi	r2,r2,16384
   10e40:	1005003a 	cmpeq	r2,r2,zero
   10e44:	1000031e 	bne	r2,zero,10e54 <altera_avalon_jtag_uart_write+0x220>
    return -EWOULDBLOCK;
   10e48:	00bffd44 	movi	r2,-11
   10e4c:	e0bfff15 	stw	r2,-4(fp)
   10e50:	00000206 	br	10e5c <altera_avalon_jtag_uart_write+0x228>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   10e54:	00bffec4 	movi	r2,-5
   10e58:	e0bfff15 	stw	r2,-4(fp)
   10e5c:	e0bfff17 	ldw	r2,-4(fp)
}
   10e60:	e037883a 	mov	sp,fp
   10e64:	dfc00117 	ldw	ra,4(sp)
   10e68:	df000017 	ldw	fp,0(sp)
   10e6c:	dec00204 	addi	sp,sp,8
   10e70:	f800283a 	ret

00010e74 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   10e74:	defffa04 	addi	sp,sp,-24
   10e78:	dfc00515 	stw	ra,20(sp)
   10e7c:	df000415 	stw	fp,16(sp)
   10e80:	df000404 	addi	fp,sp,16
   10e84:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   10e88:	e0bfff17 	ldw	r2,-4(fp)
   10e8c:	10000035 	stwio	zero,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   10e90:	e0bfff17 	ldw	r2,-4(fp)
   10e94:	10800104 	addi	r2,r2,4
   10e98:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10e9c:	0005303a 	rdctl	r2,status
   10ea0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10ea4:	e0fffd17 	ldw	r3,-12(fp)
   10ea8:	00bfff84 	movi	r2,-2
   10eac:	1884703a 	and	r2,r3,r2
   10eb0:	1001703a 	wrctl	status,r2
  
  return context;
   10eb4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   10eb8:	e0bffe15 	stw	r2,-8(fp)
  alt_tick ();
   10ebc:	0011a7c0 	call	11a7c <alt_tick>
   10ec0:	e0bffe17 	ldw	r2,-8(fp)
   10ec4:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10ec8:	e0bffc17 	ldw	r2,-16(fp)
   10ecc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   10ed0:	e037883a 	mov	sp,fp
   10ed4:	dfc00117 	ldw	ra,4(sp)
   10ed8:	df000017 	ldw	fp,0(sp)
   10edc:	dec00204 	addi	sp,sp,8
   10ee0:	f800283a 	ret

00010ee4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   10ee4:	defff804 	addi	sp,sp,-32
   10ee8:	dfc00715 	stw	ra,28(sp)
   10eec:	df000615 	stw	fp,24(sp)
   10ef0:	df000604 	addi	fp,sp,24
   10ef4:	e13ffc15 	stw	r4,-16(fp)
   10ef8:	e17ffd15 	stw	r5,-12(fp)
   10efc:	e1bffe15 	stw	r6,-8(fp)
   10f00:	e1ffff15 	stw	r7,-4(fp)
   10f04:	e0bfff17 	ldw	r2,-4(fp)
   10f08:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   10f0c:	00800074 	movhi	r2,1
   10f10:	10981004 	addi	r2,r2,24640
   10f14:	10800017 	ldw	r2,0(r2)
   10f18:	1004c03a 	cmpne	r2,r2,zero
   10f1c:	1000041e 	bne	r2,zero,10f30 <alt_avalon_timer_sc_init+0x4c>
  {
    _alt_tick_rate = nticks;
   10f20:	00c00074 	movhi	r3,1
   10f24:	18d81004 	addi	r3,r3,24640
   10f28:	e0bffb17 	ldw	r2,-20(fp)
   10f2c:	18800015 	stw	r2,0(r3)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   10f30:	e0bffc17 	ldw	r2,-16(fp)
   10f34:	10800104 	addi	r2,r2,4
   10f38:	1007883a 	mov	r3,r2
   10f3c:	008001c4 	movi	r2,7
   10f40:	18800035 	stwio	r2,0(r3)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   10f44:	d8000015 	stw	zero,0(sp)
   10f48:	e13ffd17 	ldw	r4,-12(fp)
   10f4c:	e17ffe17 	ldw	r5,-8(fp)
   10f50:	01800074 	movhi	r6,1
   10f54:	31839d04 	addi	r6,r6,3700
   10f58:	e1fffc17 	ldw	r7,-16(fp)
   10f5c:	00113180 	call	11318 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   10f60:	e037883a 	mov	sp,fp
   10f64:	dfc00117 	ldw	ra,4(sp)
   10f68:	df000017 	ldw	fp,0(sp)
   10f6c:	dec00204 	addi	sp,sp,8
   10f70:	f800283a 	ret

00010f74 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   10f74:	defff404 	addi	sp,sp,-48
   10f78:	df000b15 	stw	fp,44(sp)
   10f7c:	df000b04 	addi	fp,sp,44
   10f80:	e13ffb15 	stw	r4,-20(fp)
   10f84:	e17ffc15 	stw	r5,-16(fp)
   10f88:	e1bffd15 	stw	r6,-12(fp)
   10f8c:	e1fffe15 	stw	r7,-8(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   10f90:	e03ff915 	stw	zero,-28(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   10f94:	00800074 	movhi	r2,1
   10f98:	10981004 	addi	r2,r2,24640
   10f9c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   10fa0:	1005003a 	cmpeq	r2,r2,zero
   10fa4:	1000411e 	bne	r2,zero,110ac <alt_alarm_start+0x138>
  {
    if (alarm)
   10fa8:	e0bffb17 	ldw	r2,-20(fp)
   10fac:	1005003a 	cmpeq	r2,r2,zero
   10fb0:	10003b1e 	bne	r2,zero,110a0 <alt_alarm_start+0x12c>
    {
      alarm->callback = callback;
   10fb4:	e0fffb17 	ldw	r3,-20(fp)
   10fb8:	e0bffd17 	ldw	r2,-12(fp)
   10fbc:	18800315 	stw	r2,12(r3)
      alarm->context  = context;
   10fc0:	e0fffb17 	ldw	r3,-20(fp)
   10fc4:	e0bffe17 	ldw	r2,-8(fp)
   10fc8:	18800515 	stw	r2,20(r3)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10fcc:	0005303a 	rdctl	r2,status
   10fd0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10fd4:	e0fff817 	ldw	r3,-32(fp)
   10fd8:	00bfff84 	movi	r2,-2
   10fdc:	1884703a 	and	r2,r3,r2
   10fe0:	1001703a 	wrctl	status,r2
  
  return context;
   10fe4:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   10fe8:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   10fec:	00800074 	movhi	r2,1
   10ff0:	10981104 	addi	r2,r2,24644
   10ff4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   10ff8:	e0bff915 	stw	r2,-28(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   10ffc:	e0fffc17 	ldw	r3,-16(fp)
   11000:	e0bff917 	ldw	r2,-28(fp)
   11004:	1885883a 	add	r2,r3,r2
   11008:	10c00044 	addi	r3,r2,1
   1100c:	e0bffb17 	ldw	r2,-20(fp)
   11010:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   11014:	e0bffb17 	ldw	r2,-20(fp)
   11018:	10c00217 	ldw	r3,8(r2)
   1101c:	e0bff917 	ldw	r2,-28(fp)
   11020:	1880042e 	bgeu	r3,r2,11034 <alt_alarm_start+0xc0>
      {
        alarm->rollover = 1;
   11024:	e0fffb17 	ldw	r3,-20(fp)
   11028:	00800044 	movi	r2,1
   1102c:	18800405 	stb	r2,16(r3)
   11030:	00000206 	br	1103c <alt_alarm_start+0xc8>
      }
      else
      {
        alarm->rollover = 0;
   11034:	e0bffb17 	ldw	r2,-20(fp)
   11038:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   1103c:	e0fffb17 	ldw	r3,-20(fp)
   11040:	00800074 	movhi	r2,1
   11044:	10916104 	addi	r2,r2,17796
   11048:	e0bff615 	stw	r2,-40(fp)
   1104c:	e0fff715 	stw	r3,-36(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   11050:	e0fff717 	ldw	r3,-36(fp)
   11054:	e0bff617 	ldw	r2,-40(fp)
   11058:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   1105c:	e0bff617 	ldw	r2,-40(fp)
   11060:	10c00017 	ldw	r3,0(r2)
   11064:	e0bff717 	ldw	r2,-36(fp)
   11068:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   1106c:	e0bff617 	ldw	r2,-40(fp)
   11070:	10c00017 	ldw	r3,0(r2)
   11074:	e0bff717 	ldw	r2,-36(fp)
   11078:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   1107c:	e0fff617 	ldw	r3,-40(fp)
   11080:	e0bff717 	ldw	r2,-36(fp)
   11084:	18800015 	stw	r2,0(r3)
   11088:	e0bffa17 	ldw	r2,-24(fp)
   1108c:	e0bff515 	stw	r2,-44(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   11090:	e0bff517 	ldw	r2,-44(fp)
   11094:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   11098:	e03fff15 	stw	zero,-4(fp)
   1109c:	00000506 	br	110b4 <alt_alarm_start+0x140>
    }
    else
    {
      return -EINVAL;
   110a0:	00bffa84 	movi	r2,-22
   110a4:	e0bfff15 	stw	r2,-4(fp)
   110a8:	00000206 	br	110b4 <alt_alarm_start+0x140>
    }
  }
  else
  {
    return -ENOTSUP;
   110ac:	00bfde84 	movi	r2,-134
   110b0:	e0bfff15 	stw	r2,-4(fp)
   110b4:	e0bfff17 	ldw	r2,-4(fp)
  }
}
   110b8:	e037883a 	mov	sp,fp
   110bc:	df000017 	ldw	fp,0(sp)
   110c0:	dec00104 	addi	sp,sp,4
   110c4:	f800283a 	ret

000110c8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   110c8:	defffe04 	addi	sp,sp,-8
   110cc:	df000115 	stw	fp,4(sp)
   110d0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   110d4:	e03fff15 	stw	zero,-4(fp)
   110d8:	00000506 	br	110f0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   110dc:	e0bfff17 	ldw	r2,-4(fp)
   110e0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   110e4:	e0bfff17 	ldw	r2,-4(fp)
   110e8:	10800804 	addi	r2,r2,32
   110ec:	e0bfff15 	stw	r2,-4(fp)
   110f0:	e0bfff17 	ldw	r2,-4(fp)
   110f4:	10820030 	cmpltui	r2,r2,2048
   110f8:	103ff81e 	bne	r2,zero,110dc <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   110fc:	e037883a 	mov	sp,fp
   11100:	df000017 	ldw	fp,0(sp)
   11104:	dec00104 	addi	sp,sp,4
   11108:	f800283a 	ret

0001110c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1110c:	defff904 	addi	sp,sp,-28
   11110:	dfc00615 	stw	ra,24(sp)
   11114:	df000515 	stw	fp,20(sp)
   11118:	df000504 	addi	fp,sp,20
   1111c:	e13ffd15 	stw	r4,-12(fp)
   11120:	e17ffe15 	stw	r5,-8(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   11124:	e0bffd17 	ldw	r2,-12(fp)
   11128:	1005003a 	cmpeq	r2,r2,zero
   1112c:	1000041e 	bne	r2,zero,11140 <alt_dev_llist_insert+0x34>
   11130:	e0bffd17 	ldw	r2,-12(fp)
   11134:	10800217 	ldw	r2,8(r2)
   11138:	1004c03a 	cmpne	r2,r2,zero
   1113c:	1000071e 	bne	r2,zero,1115c <alt_dev_llist_insert+0x50>
  {
    ALT_ERRNO = EINVAL;
   11140:	00111c00 	call	111c0 <alt_get_errno>
   11144:	1007883a 	mov	r3,r2
   11148:	00800584 	movi	r2,22
   1114c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   11150:	00bffa84 	movi	r2,-22
   11154:	e0bfff15 	stw	r2,-4(fp)
   11158:	00001306 	br	111a8 <alt_dev_llist_insert+0x9c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   1115c:	e0fffd17 	ldw	r3,-12(fp)
   11160:	e0bffe17 	ldw	r2,-8(fp)
   11164:	e0bffb15 	stw	r2,-20(fp)
   11168:	e0fffc15 	stw	r3,-16(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1116c:	e0fffc17 	ldw	r3,-16(fp)
   11170:	e0bffb17 	ldw	r2,-20(fp)
   11174:	18800115 	stw	r2,4(r3)
  entry->next     = list->next;
   11178:	e0bffb17 	ldw	r2,-20(fp)
   1117c:	10c00017 	ldw	r3,0(r2)
   11180:	e0bffc17 	ldw	r2,-16(fp)
   11184:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   11188:	e0bffb17 	ldw	r2,-20(fp)
   1118c:	10c00017 	ldw	r3,0(r2)
   11190:	e0bffc17 	ldw	r2,-16(fp)
   11194:	18800115 	stw	r2,4(r3)
  list->next           = entry;
   11198:	e0fffb17 	ldw	r3,-20(fp)
   1119c:	e0bffc17 	ldw	r2,-16(fp)
   111a0:	18800015 	stw	r2,0(r3)

  return 0;  
   111a4:	e03fff15 	stw	zero,-4(fp)
   111a8:	e0bfff17 	ldw	r2,-4(fp)
}
   111ac:	e037883a 	mov	sp,fp
   111b0:	dfc00117 	ldw	ra,4(sp)
   111b4:	df000017 	ldw	fp,0(sp)
   111b8:	dec00204 	addi	sp,sp,8
   111bc:	f800283a 	ret

000111c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   111c0:	defffd04 	addi	sp,sp,-12
   111c4:	dfc00215 	stw	ra,8(sp)
   111c8:	df000115 	stw	fp,4(sp)
   111cc:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   111d0:	00800074 	movhi	r2,1
   111d4:	10915e04 	addi	r2,r2,17784
   111d8:	10800017 	ldw	r2,0(r2)
   111dc:	1005003a 	cmpeq	r2,r2,zero
   111e0:	1000061e 	bne	r2,zero,111fc <alt_get_errno+0x3c>
   111e4:	00800074 	movhi	r2,1
   111e8:	10915e04 	addi	r2,r2,17784
   111ec:	10800017 	ldw	r2,0(r2)
   111f0:	103ee83a 	callr	r2
   111f4:	e0bfff15 	stw	r2,-4(fp)
   111f8:	00000306 	br	11208 <alt_get_errno+0x48>
   111fc:	00800074 	movhi	r2,1
   11200:	10980804 	addi	r2,r2,24608
   11204:	e0bfff15 	stw	r2,-4(fp)
   11208:	e0bfff17 	ldw	r2,-4(fp)
}
   1120c:	e037883a 	mov	sp,fp
   11210:	dfc00117 	ldw	ra,4(sp)
   11214:	df000017 	ldw	fp,0(sp)
   11218:	dec00204 	addi	sp,sp,8
   1121c:	f800283a 	ret

00011220 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   11220:	defffd04 	addi	sp,sp,-12
   11224:	dfc00215 	stw	ra,8(sp)
   11228:	df000115 	stw	fp,4(sp)
   1122c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   11230:	00bfff04 	movi	r2,-4
   11234:	00c00074 	movhi	r3,1
   11238:	18c8ac04 	addi	r3,r3,8880
   1123c:	1885883a 	add	r2,r3,r2
   11240:	e0bfff15 	stw	r2,-4(fp)
   11244:	00000606 	br	11260 <_do_ctors+0x40>
        (*ctor) (); 
   11248:	e0bfff17 	ldw	r2,-4(fp)
   1124c:	10800017 	ldw	r2,0(r2)
   11250:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   11254:	e0bfff17 	ldw	r2,-4(fp)
   11258:	10bfff04 	addi	r2,r2,-4
   1125c:	e0bfff15 	stw	r2,-4(fp)
   11260:	e0ffff17 	ldw	r3,-4(fp)
   11264:	00800074 	movhi	r2,1
   11268:	1088ab04 	addi	r2,r2,8876
   1126c:	18bff62e 	bgeu	r3,r2,11248 <_do_ctors+0x28>
        (*ctor) (); 
}
   11270:	e037883a 	mov	sp,fp
   11274:	dfc00117 	ldw	ra,4(sp)
   11278:	df000017 	ldw	fp,0(sp)
   1127c:	dec00204 	addi	sp,sp,8
   11280:	f800283a 	ret

00011284 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   11284:	defffd04 	addi	sp,sp,-12
   11288:	dfc00215 	stw	ra,8(sp)
   1128c:	df000115 	stw	fp,4(sp)
   11290:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   11294:	00bfff04 	movi	r2,-4
   11298:	00c00074 	movhi	r3,1
   1129c:	18c8ac04 	addi	r3,r3,8880
   112a0:	1885883a 	add	r2,r3,r2
   112a4:	e0bfff15 	stw	r2,-4(fp)
   112a8:	00000606 	br	112c4 <_do_dtors+0x40>
        (*dtor) (); 
   112ac:	e0bfff17 	ldw	r2,-4(fp)
   112b0:	10800017 	ldw	r2,0(r2)
   112b4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   112b8:	e0bfff17 	ldw	r2,-4(fp)
   112bc:	10bfff04 	addi	r2,r2,-4
   112c0:	e0bfff15 	stw	r2,-4(fp)
   112c4:	e0ffff17 	ldw	r3,-4(fp)
   112c8:	00800074 	movhi	r2,1
   112cc:	1088ac04 	addi	r2,r2,8880
   112d0:	18bff62e 	bgeu	r3,r2,112ac <_do_dtors+0x28>
        (*dtor) (); 
}
   112d4:	e037883a 	mov	sp,fp
   112d8:	dfc00117 	ldw	ra,4(sp)
   112dc:	df000017 	ldw	fp,0(sp)
   112e0:	dec00204 	addi	sp,sp,8
   112e4:	f800283a 	ret

000112e8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   112e8:	defffe04 	addi	sp,sp,-8
   112ec:	dfc00115 	stw	ra,4(sp)
   112f0:	df000015 	stw	fp,0(sp)
   112f4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   112f8:	0009883a 	mov	r4,zero
   112fc:	01440004 	movi	r5,4096
   11300:	0011e140 	call	11e14 <alt_icache_flush>
#endif
}
   11304:	e037883a 	mov	sp,fp
   11308:	dfc00117 	ldw	ra,4(sp)
   1130c:	df000017 	ldw	fp,0(sp)
   11310:	dec00204 	addi	sp,sp,8
   11314:	f800283a 	ret

00011318 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   11318:	defff904 	addi	sp,sp,-28
   1131c:	dfc00615 	stw	ra,24(sp)
   11320:	df000515 	stw	fp,20(sp)
   11324:	df000504 	addi	fp,sp,20
   11328:	e13ffc15 	stw	r4,-16(fp)
   1132c:	e17ffd15 	stw	r5,-12(fp)
   11330:	e1bffe15 	stw	r6,-8(fp)
   11334:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   11338:	e0800217 	ldw	r2,8(fp)
   1133c:	d8800015 	stw	r2,0(sp)
   11340:	e13ffc17 	ldw	r4,-16(fp)
   11344:	e17ffd17 	ldw	r5,-12(fp)
   11348:	e1bffe17 	ldw	r6,-8(fp)
   1134c:	e1ffff17 	ldw	r7,-4(fp)
   11350:	00114ec0 	call	114ec <alt_iic_isr_register>
}  
   11354:	e037883a 	mov	sp,fp
   11358:	dfc00117 	ldw	ra,4(sp)
   1135c:	df000017 	ldw	fp,0(sp)
   11360:	dec00204 	addi	sp,sp,8
   11364:	f800283a 	ret

00011368 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   11368:	defff904 	addi	sp,sp,-28
   1136c:	df000615 	stw	fp,24(sp)
   11370:	df000604 	addi	fp,sp,24
   11374:	e13ffe15 	stw	r4,-8(fp)
   11378:	e17fff15 	stw	r5,-4(fp)
   1137c:	e0bfff17 	ldw	r2,-4(fp)
   11380:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   11384:	0005303a 	rdctl	r2,status
   11388:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1138c:	e0fffb17 	ldw	r3,-20(fp)
   11390:	00bfff84 	movi	r2,-2
   11394:	1884703a 	and	r2,r3,r2
   11398:	1001703a 	wrctl	status,r2
  
  return context;
   1139c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   113a0:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   113a4:	e0fffc17 	ldw	r3,-16(fp)
   113a8:	00800044 	movi	r2,1
   113ac:	10c4983a 	sll	r2,r2,r3
   113b0:	1007883a 	mov	r3,r2
   113b4:	00800074 	movhi	r2,1
   113b8:	10980f04 	addi	r2,r2,24636
   113bc:	10800017 	ldw	r2,0(r2)
   113c0:	1886b03a 	or	r3,r3,r2
   113c4:	00800074 	movhi	r2,1
   113c8:	10980f04 	addi	r2,r2,24636
   113cc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   113d0:	00800074 	movhi	r2,1
   113d4:	10980f04 	addi	r2,r2,24636
   113d8:	10800017 	ldw	r2,0(r2)
   113dc:	100170fa 	wrctl	ienable,r2
   113e0:	e0bffd17 	ldw	r2,-12(fp)
   113e4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   113e8:	e0bffa17 	ldw	r2,-24(fp)
   113ec:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   113f0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   113f4:	e037883a 	mov	sp,fp
   113f8:	df000017 	ldw	fp,0(sp)
   113fc:	dec00104 	addi	sp,sp,4
   11400:	f800283a 	ret

00011404 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   11404:	defff904 	addi	sp,sp,-28
   11408:	df000615 	stw	fp,24(sp)
   1140c:	df000604 	addi	fp,sp,24
   11410:	e13ffe15 	stw	r4,-8(fp)
   11414:	e17fff15 	stw	r5,-4(fp)
   11418:	e0bfff17 	ldw	r2,-4(fp)
   1141c:	e0bffc15 	stw	r2,-16(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   11420:	0005303a 	rdctl	r2,status
   11424:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   11428:	e0fffb17 	ldw	r3,-20(fp)
   1142c:	00bfff84 	movi	r2,-2
   11430:	1884703a 	and	r2,r3,r2
   11434:	1001703a 	wrctl	status,r2
  
  return context;
   11438:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   1143c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active &= ~(1 << id);
   11440:	e0fffc17 	ldw	r3,-16(fp)
   11444:	00800044 	movi	r2,1
   11448:	10c4983a 	sll	r2,r2,r3
   1144c:	0084303a 	nor	r2,zero,r2
   11450:	1007883a 	mov	r3,r2
   11454:	00800074 	movhi	r2,1
   11458:	10980f04 	addi	r2,r2,24636
   1145c:	10800017 	ldw	r2,0(r2)
   11460:	1886703a 	and	r3,r3,r2
   11464:	00800074 	movhi	r2,1
   11468:	10980f04 	addi	r2,r2,24636
   1146c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   11470:	00800074 	movhi	r2,1
   11474:	10980f04 	addi	r2,r2,24636
   11478:	10800017 	ldw	r2,0(r2)
   1147c:	100170fa 	wrctl	ienable,r2
   11480:	e0bffd17 	ldw	r2,-12(fp)
   11484:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   11488:	e0bffa17 	ldw	r2,-24(fp)
   1148c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   11490:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   11494:	e037883a 	mov	sp,fp
   11498:	df000017 	ldw	fp,0(sp)
   1149c:	dec00104 	addi	sp,sp,4
   114a0:	f800283a 	ret

000114a4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   114a4:	defffc04 	addi	sp,sp,-16
   114a8:	df000315 	stw	fp,12(sp)
   114ac:	df000304 	addi	fp,sp,12
   114b0:	e13ffe15 	stw	r4,-8(fp)
   114b4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   114b8:	000530fa 	rdctl	r2,ienable
   114bc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   114c0:	e0ffff17 	ldw	r3,-4(fp)
   114c4:	00800044 	movi	r2,1
   114c8:	10c4983a 	sll	r2,r2,r3
   114cc:	1007883a 	mov	r3,r2
   114d0:	e0bffd17 	ldw	r2,-12(fp)
   114d4:	1884703a 	and	r2,r3,r2
   114d8:	1004c03a 	cmpne	r2,r2,zero
}
   114dc:	e037883a 	mov	sp,fp
   114e0:	df000017 	ldw	fp,0(sp)
   114e4:	dec00104 	addi	sp,sp,4
   114e8:	f800283a 	ret

000114ec <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   114ec:	defff404 	addi	sp,sp,-48
   114f0:	dfc00b15 	stw	ra,44(sp)
   114f4:	df000a15 	stw	fp,40(sp)
   114f8:	df000a04 	addi	fp,sp,40
   114fc:	e13ffb15 	stw	r4,-20(fp)
   11500:	e17ffc15 	stw	r5,-16(fp)
   11504:	e1bffd15 	stw	r6,-12(fp)
   11508:	e1fffe15 	stw	r7,-8(fp)
  int rc = -EINVAL;  
   1150c:	00bffa84 	movi	r2,-22
   11510:	e0bffa15 	stw	r2,-24(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   11514:	e0bffc17 	ldw	r2,-16(fp)
   11518:	e0bff915 	stw	r2,-28(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1151c:	e0bff917 	ldw	r2,-28(fp)
   11520:	10800808 	cmpgei	r2,r2,32
   11524:	1000291e 	bne	r2,zero,115cc <alt_iic_isr_register+0xe0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   11528:	0005303a 	rdctl	r2,status
   1152c:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   11530:	e0fff717 	ldw	r3,-36(fp)
   11534:	00bfff84 	movi	r2,-2
   11538:	1884703a 	and	r2,r3,r2
   1153c:	1001703a 	wrctl	status,r2
  
  return context;
   11540:	e0bff717 	ldw	r2,-36(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   11544:	e0bff815 	stw	r2,-32(fp)

    alt_irq[id].handler = isr;
   11548:	e0bff917 	ldw	r2,-28(fp)
   1154c:	00c00074 	movhi	r3,1
   11550:	18d85f04 	addi	r3,r3,24956
   11554:	100490fa 	slli	r2,r2,3
   11558:	10c7883a 	add	r3,r2,r3
   1155c:	e0bffd17 	ldw	r2,-12(fp)
   11560:	18800015 	stw	r2,0(r3)
    alt_irq[id].context = isr_context;
   11564:	e0bff917 	ldw	r2,-28(fp)
   11568:	00c00074 	movhi	r3,1
   1156c:	18d85f04 	addi	r3,r3,24956
   11570:	100490fa 	slli	r2,r2,3
   11574:	10c5883a 	add	r2,r2,r3
   11578:	10c00104 	addi	r3,r2,4
   1157c:	e0bffe17 	ldw	r2,-8(fp)
   11580:	18800015 	stw	r2,0(r3)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   11584:	e0bffd17 	ldw	r2,-12(fp)
   11588:	1005003a 	cmpeq	r2,r2,zero
   1158c:	1000051e 	bne	r2,zero,115a4 <alt_iic_isr_register+0xb8>
   11590:	e17ff917 	ldw	r5,-28(fp)
   11594:	e13ffb17 	ldw	r4,-20(fp)
   11598:	00113680 	call	11368 <alt_ic_irq_enable>
   1159c:	e0bfff15 	stw	r2,-4(fp)
   115a0:	00000406 	br	115b4 <alt_iic_isr_register+0xc8>
   115a4:	e17ff917 	ldw	r5,-28(fp)
   115a8:	e13ffb17 	ldw	r4,-20(fp)
   115ac:	00114040 	call	11404 <alt_ic_irq_disable>
   115b0:	e0bfff15 	stw	r2,-4(fp)
   115b4:	e0bfff17 	ldw	r2,-4(fp)
   115b8:	e0bffa15 	stw	r2,-24(fp)
   115bc:	e0bff817 	ldw	r2,-32(fp)
   115c0:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   115c4:	e0bff617 	ldw	r2,-40(fp)
   115c8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   115cc:	e0bffa17 	ldw	r2,-24(fp)
}
   115d0:	e037883a 	mov	sp,fp
   115d4:	dfc00117 	ldw	ra,4(sp)
   115d8:	df000017 	ldw	fp,0(sp)
   115dc:	dec00204 	addi	sp,sp,8
   115e0:	f800283a 	ret

000115e4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   115e4:	defff904 	addi	sp,sp,-28
   115e8:	dfc00615 	stw	ra,24(sp)
   115ec:	df000515 	stw	fp,20(sp)
   115f0:	df000504 	addi	fp,sp,20
   115f4:	e13ffc15 	stw	r4,-16(fp)
   115f8:	e17ffd15 	stw	r5,-12(fp)
   115fc:	e1bffe15 	stw	r6,-8(fp)
   11600:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   11604:	e13ffd17 	ldw	r4,-12(fp)
   11608:	e17ffe17 	ldw	r5,-8(fp)
   1160c:	e1bfff17 	ldw	r6,-4(fp)
   11610:	00117fc0 	call	117fc <open>
   11614:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   11618:	e0bffb17 	ldw	r2,-20(fp)
   1161c:	1004803a 	cmplt	r2,r2,zero
   11620:	10001c1e 	bne	r2,zero,11694 <alt_open_fd+0xb0>
  {
    fd->dev      = alt_fd_list[old].dev;
   11624:	e0bffb17 	ldw	r2,-20(fp)
   11628:	00c00074 	movhi	r3,1
   1162c:	18ccda04 	addi	r3,r3,13160
   11630:	10800324 	muli	r2,r2,12
   11634:	10c5883a 	add	r2,r2,r3
   11638:	10c00017 	ldw	r3,0(r2)
   1163c:	e0bffc17 	ldw	r2,-16(fp)
   11640:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   11644:	e0bffb17 	ldw	r2,-20(fp)
   11648:	00c00074 	movhi	r3,1
   1164c:	18ccda04 	addi	r3,r3,13160
   11650:	10800324 	muli	r2,r2,12
   11654:	10c5883a 	add	r2,r2,r3
   11658:	10800104 	addi	r2,r2,4
   1165c:	10c00017 	ldw	r3,0(r2)
   11660:	e0bffc17 	ldw	r2,-16(fp)
   11664:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   11668:	e0bffb17 	ldw	r2,-20(fp)
   1166c:	00c00074 	movhi	r3,1
   11670:	18ccda04 	addi	r3,r3,13160
   11674:	10800324 	muli	r2,r2,12
   11678:	10c5883a 	add	r2,r2,r3
   1167c:	10800204 	addi	r2,r2,8
   11680:	10c00017 	ldw	r3,0(r2)
   11684:	e0bffc17 	ldw	r2,-16(fp)
   11688:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   1168c:	e13ffb17 	ldw	r4,-20(fp)
   11690:	00100640 	call	10064 <alt_release_fd>
  }
} 
   11694:	e037883a 	mov	sp,fp
   11698:	dfc00117 	ldw	ra,4(sp)
   1169c:	df000017 	ldw	fp,0(sp)
   116a0:	dec00204 	addi	sp,sp,8
   116a4:	f800283a 	ret

000116a8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   116a8:	defffb04 	addi	sp,sp,-20
   116ac:	dfc00415 	stw	ra,16(sp)
   116b0:	df000315 	stw	fp,12(sp)
   116b4:	df000304 	addi	fp,sp,12
   116b8:	e13ffd15 	stw	r4,-12(fp)
   116bc:	e17ffe15 	stw	r5,-8(fp)
   116c0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   116c4:	01000074 	movhi	r4,1
   116c8:	210cdd04 	addi	r4,r4,13172
   116cc:	e17ffd17 	ldw	r5,-12(fp)
   116d0:	01800044 	movi	r6,1
   116d4:	01c07fc4 	movi	r7,511
   116d8:	00115e40 	call	115e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   116dc:	01000074 	movhi	r4,1
   116e0:	210cda04 	addi	r4,r4,13160
   116e4:	e17ffe17 	ldw	r5,-8(fp)
   116e8:	000d883a 	mov	r6,zero
   116ec:	01c07fc4 	movi	r7,511
   116f0:	00115e40 	call	115e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   116f4:	01000074 	movhi	r4,1
   116f8:	210ce004 	addi	r4,r4,13184
   116fc:	e17fff17 	ldw	r5,-4(fp)
   11700:	01800044 	movi	r6,1
   11704:	01c07fc4 	movi	r7,511
   11708:	00115e40 	call	115e4 <alt_open_fd>
}  
   1170c:	e037883a 	mov	sp,fp
   11710:	dfc00117 	ldw	ra,4(sp)
   11714:	df000017 	ldw	fp,0(sp)
   11718:	dec00204 	addi	sp,sp,8
   1171c:	f800283a 	ret

00011720 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   11720:	defffc04 	addi	sp,sp,-16
   11724:	df000315 	stw	fp,12(sp)
   11728:	df000304 	addi	fp,sp,12
   1172c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   11730:	e0bffe17 	ldw	r2,-8(fp)
   11734:	10800217 	ldw	r2,8(r2)
   11738:	10d00034 	orhi	r3,r2,16384
   1173c:	e0bffe17 	ldw	r2,-8(fp)
   11740:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   11744:	e03ffd15 	stw	zero,-12(fp)
   11748:	00002006 	br	117cc <alt_file_locked+0xac>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   1174c:	e0bffd17 	ldw	r2,-12(fp)
   11750:	00c00074 	movhi	r3,1
   11754:	18ccda04 	addi	r3,r3,13160
   11758:	10800324 	muli	r2,r2,12
   1175c:	10c5883a 	add	r2,r2,r3
   11760:	10c00017 	ldw	r3,0(r2)
   11764:	e0bffe17 	ldw	r2,-8(fp)
   11768:	10800017 	ldw	r2,0(r2)
   1176c:	1880141e 	bne	r3,r2,117c0 <alt_file_locked+0xa0>
   11770:	e0bffd17 	ldw	r2,-12(fp)
   11774:	00c00074 	movhi	r3,1
   11778:	18ccda04 	addi	r3,r3,13160
   1177c:	10800324 	muli	r2,r2,12
   11780:	10c5883a 	add	r2,r2,r3
   11784:	10800204 	addi	r2,r2,8
   11788:	10800017 	ldw	r2,0(r2)
   1178c:	1004403a 	cmpge	r2,r2,zero
   11790:	10000b1e 	bne	r2,zero,117c0 <alt_file_locked+0xa0>
   11794:	e0bffd17 	ldw	r2,-12(fp)
   11798:	10800324 	muli	r2,r2,12
   1179c:	1007883a 	mov	r3,r2
   117a0:	00800074 	movhi	r2,1
   117a4:	108cda04 	addi	r2,r2,13160
   117a8:	1887883a 	add	r3,r3,r2
   117ac:	e0bffe17 	ldw	r2,-8(fp)
   117b0:	18800326 	beq	r3,r2,117c0 <alt_file_locked+0xa0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   117b4:	00bffcc4 	movi	r2,-13
   117b8:	e0bfff15 	stw	r2,-4(fp)
   117bc:	00000a06 	br	117e8 <alt_file_locked+0xc8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   117c0:	e0bffd17 	ldw	r2,-12(fp)
   117c4:	10800044 	addi	r2,r2,1
   117c8:	e0bffd15 	stw	r2,-12(fp)
   117cc:	00800074 	movhi	r2,1
   117d0:	10915d04 	addi	r2,r2,17780
   117d4:	10800017 	ldw	r2,0(r2)
   117d8:	1007883a 	mov	r3,r2
   117dc:	e0bffd17 	ldw	r2,-12(fp)
   117e0:	18bfda2e 	bgeu	r3,r2,1174c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   117e4:	e03fff15 	stw	zero,-4(fp)
   117e8:	e0bfff17 	ldw	r2,-4(fp)
}
   117ec:	e037883a 	mov	sp,fp
   117f0:	df000017 	ldw	fp,0(sp)
   117f4:	dec00104 	addi	sp,sp,4
   117f8:	f800283a 	ret

000117fc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   117fc:	defff404 	addi	sp,sp,-48
   11800:	dfc00b15 	stw	ra,44(sp)
   11804:	df000a15 	stw	fp,40(sp)
   11808:	df000a04 	addi	fp,sp,40
   1180c:	e13ffb15 	stw	r4,-20(fp)
   11810:	e17ffc15 	stw	r5,-16(fp)
   11814:	e1bffd15 	stw	r6,-12(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   11818:	00bfffc4 	movi	r2,-1
   1181c:	e0bff815 	stw	r2,-32(fp)
  int status = -ENODEV;
   11820:	00bffb44 	movi	r2,-19
   11824:	e0bff715 	stw	r2,-36(fp)
  int isafs = 0;
   11828:	e03ff615 	stw	zero,-40(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   1182c:	e13ffb17 	ldw	r4,-20(fp)
   11830:	01400074 	movhi	r5,1
   11834:	29515b04 	addi	r5,r5,17772
   11838:	0011ba80 	call	11ba8 <alt_find_dev>
   1183c:	e0bffa15 	stw	r2,-24(fp)
   11840:	e0bffa17 	ldw	r2,-24(fp)
   11844:	1004c03a 	cmpne	r2,r2,zero
   11848:	1000051e 	bne	r2,zero,11860 <open+0x64>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   1184c:	e13ffb17 	ldw	r4,-20(fp)
   11850:	0011c3c0 	call	11c3c <alt_find_file>
   11854:	e0bffa15 	stw	r2,-24(fp)
    isafs = 1;
   11858:	00800044 	movi	r2,1
   1185c:	e0bff615 	stw	r2,-40(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   11860:	e0bffa17 	ldw	r2,-24(fp)
   11864:	1005003a 	cmpeq	r2,r2,zero
   11868:	1000301e 	bne	r2,zero,1192c <open+0x130>
  {
    if ((index = alt_get_fd (dev)) < 0)
   1186c:	e13ffa17 	ldw	r4,-24(fp)
   11870:	0011d5c0 	call	11d5c <alt_get_fd>
   11874:	e0bff815 	stw	r2,-32(fp)
   11878:	e0bff817 	ldw	r2,-32(fp)
   1187c:	1004403a 	cmpge	r2,r2,zero
   11880:	1000031e 	bne	r2,zero,11890 <open+0x94>
    {
      status = index;
   11884:	e0bff817 	ldw	r2,-32(fp)
   11888:	e0bff715 	stw	r2,-36(fp)
   1188c:	00002906 	br	11934 <open+0x138>
    }
    else
    {
      fd = &alt_fd_list[index];
   11890:	e0bff817 	ldw	r2,-32(fp)
   11894:	10800324 	muli	r2,r2,12
   11898:	1007883a 	mov	r3,r2
   1189c:	00800074 	movhi	r2,1
   118a0:	108cda04 	addi	r2,r2,13160
   118a4:	1885883a 	add	r2,r3,r2
   118a8:	e0bff915 	stw	r2,-28(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   118ac:	e0fffc17 	ldw	r3,-16(fp)
   118b0:	00900034 	movhi	r2,16384
   118b4:	10bfffc4 	addi	r2,r2,-1
   118b8:	1886703a 	and	r3,r3,r2
   118bc:	e0bff917 	ldw	r2,-28(fp)
   118c0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   118c4:	e0bff617 	ldw	r2,-40(fp)
   118c8:	1004c03a 	cmpne	r2,r2,zero
   118cc:	1000061e 	bne	r2,zero,118e8 <open+0xec>
   118d0:	e13ff917 	ldw	r4,-28(fp)
   118d4:	00117200 	call	11720 <alt_file_locked>
   118d8:	e0bff715 	stw	r2,-36(fp)
   118dc:	e0bff717 	ldw	r2,-36(fp)
   118e0:	1004803a 	cmplt	r2,r2,zero
   118e4:	1000131e 	bne	r2,zero,11934 <open+0x138>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   118e8:	e0bffa17 	ldw	r2,-24(fp)
   118ec:	10800317 	ldw	r2,12(r2)
   118f0:	1005003a 	cmpeq	r2,r2,zero
   118f4:	1000091e 	bne	r2,zero,1191c <open+0x120>
   118f8:	e0bffa17 	ldw	r2,-24(fp)
   118fc:	10800317 	ldw	r2,12(r2)
   11900:	e13ff917 	ldw	r4,-28(fp)
   11904:	e17ffb17 	ldw	r5,-20(fp)
   11908:	e1bffc17 	ldw	r6,-16(fp)
   1190c:	e1fffd17 	ldw	r7,-12(fp)
   11910:	103ee83a 	callr	r2
   11914:	e0bfff15 	stw	r2,-4(fp)
   11918:	00000106 	br	11920 <open+0x124>
   1191c:	e03fff15 	stw	zero,-4(fp)
   11920:	e0bfff17 	ldw	r2,-4(fp)
   11924:	e0bff715 	stw	r2,-36(fp)
   11928:	00000206 	br	11934 <open+0x138>
      }
    }
  }
  else
  {
    status = -ENODEV;
   1192c:	00bffb44 	movi	r2,-19
   11930:	e0bff715 	stw	r2,-36(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   11934:	e0bff717 	ldw	r2,-36(fp)
   11938:	1004403a 	cmpge	r2,r2,zero
   1193c:	1000091e 	bne	r2,zero,11964 <open+0x168>
  {
    alt_release_fd (index);  
   11940:	e13ff817 	ldw	r4,-32(fp)
   11944:	00100640 	call	10064 <alt_release_fd>
    ALT_ERRNO = -status;
   11948:	00119840 	call	11984 <alt_get_errno>
   1194c:	e0fff717 	ldw	r3,-36(fp)
   11950:	00c7c83a 	sub	r3,zero,r3
   11954:	10c00015 	stw	r3,0(r2)
    return -1;
   11958:	00bfffc4 	movi	r2,-1
   1195c:	e0bffe15 	stw	r2,-8(fp)
   11960:	00000206 	br	1196c <open+0x170>
  }
  
  /* return the reference upon success */

  return index;
   11964:	e0bff817 	ldw	r2,-32(fp)
   11968:	e0bffe15 	stw	r2,-8(fp)
   1196c:	e0bffe17 	ldw	r2,-8(fp)
}
   11970:	e037883a 	mov	sp,fp
   11974:	dfc00117 	ldw	ra,4(sp)
   11978:	df000017 	ldw	fp,0(sp)
   1197c:	dec00204 	addi	sp,sp,8
   11980:	f800283a 	ret

00011984 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11984:	defffd04 	addi	sp,sp,-12
   11988:	dfc00215 	stw	ra,8(sp)
   1198c:	df000115 	stw	fp,4(sp)
   11990:	df000104 	addi	fp,sp,4
  return ((alt_errno) ? alt_errno() : &errno);
   11994:	00800074 	movhi	r2,1
   11998:	10915e04 	addi	r2,r2,17784
   1199c:	10800017 	ldw	r2,0(r2)
   119a0:	1005003a 	cmpeq	r2,r2,zero
   119a4:	1000061e 	bne	r2,zero,119c0 <alt_get_errno+0x3c>
   119a8:	00800074 	movhi	r2,1
   119ac:	10915e04 	addi	r2,r2,17784
   119b0:	10800017 	ldw	r2,0(r2)
   119b4:	103ee83a 	callr	r2
   119b8:	e0bfff15 	stw	r2,-4(fp)
   119bc:	00000306 	br	119cc <alt_get_errno+0x48>
   119c0:	00800074 	movhi	r2,1
   119c4:	10980804 	addi	r2,r2,24608
   119c8:	e0bfff15 	stw	r2,-4(fp)
   119cc:	e0bfff17 	ldw	r2,-4(fp)
}
   119d0:	e037883a 	mov	sp,fp
   119d4:	dfc00117 	ldw	ra,4(sp)
   119d8:	df000017 	ldw	fp,0(sp)
   119dc:	dec00204 	addi	sp,sp,8
   119e0:	f800283a 	ret

000119e4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   119e4:	defffa04 	addi	sp,sp,-24
   119e8:	df000515 	stw	fp,20(sp)
   119ec:	df000504 	addi	fp,sp,20
   119f0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   119f4:	0005303a 	rdctl	r2,status
   119f8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   119fc:	e0fffd17 	ldw	r3,-12(fp)
   11a00:	00bfff84 	movi	r2,-2
   11a04:	1884703a 	and	r2,r3,r2
   11a08:	1001703a 	wrctl	status,r2
  
  return context;
   11a0c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   11a10:	e0bffe15 	stw	r2,-8(fp)
  alt_llist_remove (&alarm->llist);
   11a14:	e0bfff17 	ldw	r2,-4(fp)
   11a18:	e0bffc15 	stw	r2,-16(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   11a1c:	e0bffc17 	ldw	r2,-16(fp)
   11a20:	10c00017 	ldw	r3,0(r2)
   11a24:	e0bffc17 	ldw	r2,-16(fp)
   11a28:	10800117 	ldw	r2,4(r2)
   11a2c:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
   11a30:	e0bffc17 	ldw	r2,-16(fp)
   11a34:	10c00117 	ldw	r3,4(r2)
   11a38:	e0bffc17 	ldw	r2,-16(fp)
   11a3c:	10800017 	ldw	r2,0(r2)
   11a40:	18800015 	stw	r2,0(r3)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   11a44:	e0fffc17 	ldw	r3,-16(fp)
   11a48:	e0bffc17 	ldw	r2,-16(fp)
   11a4c:	18800115 	stw	r2,4(r3)
  entry->next     = entry;
   11a50:	e0fffc17 	ldw	r3,-16(fp)
   11a54:	e0bffc17 	ldw	r2,-16(fp)
   11a58:	18800015 	stw	r2,0(r3)
   11a5c:	e0bffe17 	ldw	r2,-8(fp)
   11a60:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   11a64:	e0bffb17 	ldw	r2,-20(fp)
   11a68:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   11a6c:	e037883a 	mov	sp,fp
   11a70:	df000017 	ldw	fp,0(sp)
   11a74:	dec00104 	addi	sp,sp,4
   11a78:	f800283a 	ret

00011a7c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   11a7c:	defffb04 	addi	sp,sp,-20
   11a80:	dfc00415 	stw	ra,16(sp)
   11a84:	df000315 	stw	fp,12(sp)
   11a88:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   11a8c:	d0a00f17 	ldw	r2,-32708(gp)
   11a90:	e0bffe15 	stw	r2,-8(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   11a94:	d0a6bf17 	ldw	r2,-25860(gp)
   11a98:	10800044 	addi	r2,r2,1
   11a9c:	d0a6bf15 	stw	r2,-25860(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   11aa0:	00003106 	br	11b68 <alt_tick+0xec>
  {
    next = (alt_alarm*) alarm->llist.next;
   11aa4:	e0bffe17 	ldw	r2,-8(fp)
   11aa8:	10800017 	ldw	r2,0(r2)
   11aac:	e0bfff15 	stw	r2,-4(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   11ab0:	e0bffe17 	ldw	r2,-8(fp)
   11ab4:	10800403 	ldbu	r2,16(r2)
   11ab8:	10803fcc 	andi	r2,r2,255
   11abc:	1005003a 	cmpeq	r2,r2,zero
   11ac0:	1000051e 	bne	r2,zero,11ad8 <alt_tick+0x5c>
   11ac4:	d0a6bf17 	ldw	r2,-25860(gp)
   11ac8:	1004c03a 	cmpne	r2,r2,zero
   11acc:	1000021e 	bne	r2,zero,11ad8 <alt_tick+0x5c>
    {
      alarm->rollover = 0;
   11ad0:	e0bffe17 	ldw	r2,-8(fp)
   11ad4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   11ad8:	e0bffe17 	ldw	r2,-8(fp)
   11adc:	10c00217 	ldw	r3,8(r2)
   11ae0:	d0a6bf17 	ldw	r2,-25860(gp)
   11ae4:	10c01e36 	bltu	r2,r3,11b60 <alt_tick+0xe4>
   11ae8:	e0bffe17 	ldw	r2,-8(fp)
   11aec:	10800403 	ldbu	r2,16(r2)
   11af0:	10803fcc 	andi	r2,r2,255
   11af4:	1004c03a 	cmpne	r2,r2,zero
   11af8:	1000191e 	bne	r2,zero,11b60 <alt_tick+0xe4>
    {
      next_callback = alarm->callback (alarm->context);
   11afc:	e0bffe17 	ldw	r2,-8(fp)
   11b00:	10c00317 	ldw	r3,12(r2)
   11b04:	e0bffe17 	ldw	r2,-8(fp)
   11b08:	11000517 	ldw	r4,20(r2)
   11b0c:	183ee83a 	callr	r3
   11b10:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   11b14:	e0bffd17 	ldw	r2,-12(fp)
   11b18:	1004c03a 	cmpne	r2,r2,zero
   11b1c:	1000031e 	bne	r2,zero,11b2c <alt_tick+0xb0>
      {
        alt_alarm_stop (alarm);
   11b20:	e13ffe17 	ldw	r4,-8(fp)
   11b24:	00119e40 	call	119e4 <alt_alarm_stop>
   11b28:	00000d06 	br	11b60 <alt_tick+0xe4>
      }
      else
      {
        alarm->time += next_callback;
   11b2c:	e0bffe17 	ldw	r2,-8(fp)
   11b30:	10c00217 	ldw	r3,8(r2)
   11b34:	e0bffd17 	ldw	r2,-12(fp)
   11b38:	1887883a 	add	r3,r3,r2
   11b3c:	e0bffe17 	ldw	r2,-8(fp)
   11b40:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   11b44:	e0bffe17 	ldw	r2,-8(fp)
   11b48:	10c00217 	ldw	r3,8(r2)
   11b4c:	d0a6bf17 	ldw	r2,-25860(gp)
   11b50:	1880032e 	bgeu	r3,r2,11b60 <alt_tick+0xe4>
        {
          alarm->rollover = 1;
   11b54:	e0fffe17 	ldw	r3,-8(fp)
   11b58:	00800044 	movi	r2,1
   11b5c:	18800405 	stb	r2,16(r3)
        }
      }
    }
    alarm = next;
   11b60:	e0bfff17 	ldw	r2,-4(fp)
   11b64:	e0bffe15 	stw	r2,-8(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   11b68:	d0e00f04 	addi	r3,gp,-32708
   11b6c:	e0bffe17 	ldw	r2,-8(fp)
   11b70:	10ffcc1e 	bne	r2,r3,11aa4 <alt_tick+0x28>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   11b74:	e037883a 	mov	sp,fp
   11b78:	dfc00117 	ldw	ra,4(sp)
   11b7c:	df000017 	ldw	fp,0(sp)
   11b80:	dec00204 	addi	sp,sp,8
   11b84:	f800283a 	ret

00011b88 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   11b88:	deffff04 	addi	sp,sp,-4
   11b8c:	df000015 	stw	fp,0(sp)
   11b90:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   11b94:	000170fa 	wrctl	ienable,zero
}
   11b98:	e037883a 	mov	sp,fp
   11b9c:	df000017 	ldw	fp,0(sp)
   11ba0:	dec00104 	addi	sp,sp,4
   11ba4:	f800283a 	ret

00011ba8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   11ba8:	defff904 	addi	sp,sp,-28
   11bac:	dfc00615 	stw	ra,24(sp)
   11bb0:	df000515 	stw	fp,20(sp)
   11bb4:	df000504 	addi	fp,sp,20
   11bb8:	e13ffd15 	stw	r4,-12(fp)
   11bbc:	e17ffe15 	stw	r5,-8(fp)
  alt_dev* next = (alt_dev*) llist->next;
   11bc0:	e0bffe17 	ldw	r2,-8(fp)
   11bc4:	10800017 	ldw	r2,0(r2)
   11bc8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   11bcc:	e13ffd17 	ldw	r4,-12(fp)
   11bd0:	000211c0 	call	211c <strlen>
   11bd4:	10800044 	addi	r2,r2,1
   11bd8:	e0bffb15 	stw	r2,-20(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   11bdc:	00000d06 	br	11c14 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   11be0:	e0bffc17 	ldw	r2,-16(fp)
   11be4:	11000217 	ldw	r4,8(r2)
   11be8:	e1bffb17 	ldw	r6,-20(fp)
   11bec:	e17ffd17 	ldw	r5,-12(fp)
   11bf0:	0011ef00 	call	11ef0 <memcmp>
   11bf4:	1004c03a 	cmpne	r2,r2,zero
   11bf8:	1000031e 	bne	r2,zero,11c08 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   11bfc:	e0bffc17 	ldw	r2,-16(fp)
   11c00:	e0bfff15 	stw	r2,-4(fp)
   11c04:	00000706 	br	11c24 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   11c08:	e0bffc17 	ldw	r2,-16(fp)
   11c0c:	10800017 	ldw	r2,0(r2)
   11c10:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   11c14:	e0fffe17 	ldw	r3,-8(fp)
   11c18:	e0bffc17 	ldw	r2,-16(fp)
   11c1c:	10fff01e 	bne	r2,r3,11be0 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   11c20:	e03fff15 	stw	zero,-4(fp)
   11c24:	e0bfff17 	ldw	r2,-4(fp)
}
   11c28:	e037883a 	mov	sp,fp
   11c2c:	dfc00117 	ldw	ra,4(sp)
   11c30:	df000017 	ldw	fp,0(sp)
   11c34:	dec00204 	addi	sp,sp,8
   11c38:	f800283a 	ret

00011c3c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   11c3c:	defffa04 	addi	sp,sp,-24
   11c40:	dfc00515 	stw	ra,20(sp)
   11c44:	df000415 	stw	fp,16(sp)
   11c48:	df000404 	addi	fp,sp,16
   11c4c:	e13ffe15 	stw	r4,-8(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   11c50:	00800074 	movhi	r2,1
   11c54:	10915904 	addi	r2,r2,17764
   11c58:	10800017 	ldw	r2,0(r2)
   11c5c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   11c60:	00003306 	br	11d30 <alt_find_file+0xf4>
  {
    len = strlen(next->name);
   11c64:	e0bffd17 	ldw	r2,-12(fp)
   11c68:	11000217 	ldw	r4,8(r2)
   11c6c:	000211c0 	call	211c <strlen>
   11c70:	e0bffc15 	stw	r2,-16(fp)
    
    if (next->name[len-1] == '/')
   11c74:	e0bffd17 	ldw	r2,-12(fp)
   11c78:	10c00217 	ldw	r3,8(r2)
   11c7c:	e0bffc17 	ldw	r2,-16(fp)
   11c80:	1885883a 	add	r2,r3,r2
   11c84:	10bfffc4 	addi	r2,r2,-1
   11c88:	10800003 	ldbu	r2,0(r2)
   11c8c:	10803fcc 	andi	r2,r2,255
   11c90:	1080201c 	xori	r2,r2,128
   11c94:	10bfe004 	addi	r2,r2,-128
   11c98:	10800bd8 	cmpnei	r2,r2,47
   11c9c:	1000031e 	bne	r2,zero,11cac <alt_find_file+0x70>
    {
      len -= 1;
   11ca0:	e0bffc17 	ldw	r2,-16(fp)
   11ca4:	10bfffc4 	addi	r2,r2,-1
   11ca8:	e0bffc15 	stw	r2,-16(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   11cac:	e0bffc17 	ldw	r2,-16(fp)
   11cb0:	1007883a 	mov	r3,r2
   11cb4:	e0bffe17 	ldw	r2,-8(fp)
   11cb8:	1885883a 	add	r2,r3,r2
   11cbc:	10800003 	ldbu	r2,0(r2)
   11cc0:	10803fcc 	andi	r2,r2,255
   11cc4:	1080201c 	xori	r2,r2,128
   11cc8:	10bfe004 	addi	r2,r2,-128
   11ccc:	10800be0 	cmpeqi	r2,r2,47
   11cd0:	10000a1e 	bne	r2,zero,11cfc <alt_find_file+0xc0>
   11cd4:	e0bffc17 	ldw	r2,-16(fp)
   11cd8:	1007883a 	mov	r3,r2
   11cdc:	e0bffe17 	ldw	r2,-8(fp)
   11ce0:	1885883a 	add	r2,r3,r2
   11ce4:	10800003 	ldbu	r2,0(r2)
   11ce8:	10803fcc 	andi	r2,r2,255
   11cec:	1080201c 	xori	r2,r2,128
   11cf0:	10bfe004 	addi	r2,r2,-128
   11cf4:	1004c03a 	cmpne	r2,r2,zero
   11cf8:	10000a1e 	bne	r2,zero,11d24 <alt_find_file+0xe8>
   11cfc:	e0bffd17 	ldw	r2,-12(fp)
   11d00:	11000217 	ldw	r4,8(r2)
   11d04:	e1bffc17 	ldw	r6,-16(fp)
   11d08:	e17ffe17 	ldw	r5,-8(fp)
   11d0c:	0011ef00 	call	11ef0 <memcmp>
   11d10:	1004c03a 	cmpne	r2,r2,zero
   11d14:	1000031e 	bne	r2,zero,11d24 <alt_find_file+0xe8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   11d18:	e0bffd17 	ldw	r2,-12(fp)
   11d1c:	e0bfff15 	stw	r2,-4(fp)
   11d20:	00000806 	br	11d44 <alt_find_file+0x108>
    }
    next = (alt_dev*) next->llist.next;
   11d24:	e0bffd17 	ldw	r2,-12(fp)
   11d28:	10800017 	ldw	r2,0(r2)
   11d2c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   11d30:	00c00074 	movhi	r3,1
   11d34:	18d15904 	addi	r3,r3,17764
   11d38:	e0bffd17 	ldw	r2,-12(fp)
   11d3c:	10ffc91e 	bne	r2,r3,11c64 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   11d40:	e03fff15 	stw	zero,-4(fp)
   11d44:	e0bfff17 	ldw	r2,-4(fp)
}
   11d48:	e037883a 	mov	sp,fp
   11d4c:	dfc00117 	ldw	ra,4(sp)
   11d50:	df000017 	ldw	fp,0(sp)
   11d54:	dec00204 	addi	sp,sp,8
   11d58:	f800283a 	ret

00011d5c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   11d5c:	defffc04 	addi	sp,sp,-16
   11d60:	df000315 	stw	fp,12(sp)
   11d64:	df000304 	addi	fp,sp,12
   11d68:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   11d6c:	00bffa04 	movi	r2,-24
   11d70:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   11d74:	e03ffe15 	stw	zero,-8(fp)
   11d78:	00001e06 	br	11df4 <alt_get_fd+0x98>
  {
    if (!alt_fd_list[i].dev)
   11d7c:	e0bffe17 	ldw	r2,-8(fp)
   11d80:	00c00074 	movhi	r3,1
   11d84:	18ccda04 	addi	r3,r3,13160
   11d88:	10800324 	muli	r2,r2,12
   11d8c:	10c5883a 	add	r2,r2,r3
   11d90:	10800017 	ldw	r2,0(r2)
   11d94:	1004c03a 	cmpne	r2,r2,zero
   11d98:	1000131e 	bne	r2,zero,11de8 <alt_get_fd+0x8c>
    {
      alt_fd_list[i].dev = dev;
   11d9c:	e0bffe17 	ldw	r2,-8(fp)
   11da0:	00c00074 	movhi	r3,1
   11da4:	18ccda04 	addi	r3,r3,13160
   11da8:	10800324 	muli	r2,r2,12
   11dac:	10c7883a 	add	r3,r2,r3
   11db0:	e0bfff17 	ldw	r2,-4(fp)
   11db4:	18800015 	stw	r2,0(r3)
      if (i > alt_max_fd)
   11db8:	00800074 	movhi	r2,1
   11dbc:	10915d04 	addi	r2,r2,17780
   11dc0:	10c00017 	ldw	r3,0(r2)
   11dc4:	e0bffe17 	ldw	r2,-8(fp)
   11dc8:	1880040e 	bge	r3,r2,11ddc <alt_get_fd+0x80>
      {
        alt_max_fd = i;
   11dcc:	00c00074 	movhi	r3,1
   11dd0:	18d15d04 	addi	r3,r3,17780
   11dd4:	e0bffe17 	ldw	r2,-8(fp)
   11dd8:	18800015 	stw	r2,0(r3)
      }
      rc = i;
   11ddc:	e0bffe17 	ldw	r2,-8(fp)
   11de0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   11de4:	00000606 	br	11e00 <alt_get_fd+0xa4>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   11de8:	e0bffe17 	ldw	r2,-8(fp)
   11dec:	10800044 	addi	r2,r2,1
   11df0:	e0bffe15 	stw	r2,-8(fp)
   11df4:	e0bffe17 	ldw	r2,-8(fp)
   11df8:	10800810 	cmplti	r2,r2,32
   11dfc:	103fdf1e 	bne	r2,zero,11d7c <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   11e00:	e0bffd17 	ldw	r2,-12(fp)
}
   11e04:	e037883a 	mov	sp,fp
   11e08:	df000017 	ldw	fp,0(sp)
   11e0c:	dec00104 	addi	sp,sp,4
   11e10:	f800283a 	ret

00011e14 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   11e14:	defffb04 	addi	sp,sp,-20
   11e18:	df000415 	stw	fp,16(sp)
   11e1c:	df000404 	addi	fp,sp,16
   11e20:	e13ffe15 	stw	r4,-8(fp)
   11e24:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   11e28:	e0bfff17 	ldw	r2,-4(fp)
   11e2c:	10840070 	cmpltui	r2,r2,4097
   11e30:	1000021e 	bne	r2,zero,11e3c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   11e34:	00840004 	movi	r2,4096
   11e38:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   11e3c:	e0fffe17 	ldw	r3,-8(fp)
   11e40:	e0bfff17 	ldw	r2,-4(fp)
   11e44:	1885883a 	add	r2,r3,r2
   11e48:	e0bffc15 	stw	r2,-16(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   11e4c:	e0bffe17 	ldw	r2,-8(fp)
   11e50:	e0bffd15 	stw	r2,-12(fp)
   11e54:	00000506 	br	11e6c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   11e58:	e0bffd17 	ldw	r2,-12(fp)
   11e5c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   11e60:	e0bffd17 	ldw	r2,-12(fp)
   11e64:	10800804 	addi	r2,r2,32
   11e68:	e0bffd15 	stw	r2,-12(fp)
   11e6c:	e0fffd17 	ldw	r3,-12(fp)
   11e70:	e0bffc17 	ldw	r2,-16(fp)
   11e74:	18bff836 	bltu	r3,r2,11e58 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   11e78:	e0bffe17 	ldw	r2,-8(fp)
   11e7c:	108007cc 	andi	r2,r2,31
   11e80:	1005003a 	cmpeq	r2,r2,zero
   11e84:	1000021e 	bne	r2,zero,11e90 <alt_icache_flush+0x7c>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   11e88:	e0bffd17 	ldw	r2,-12(fp)
   11e8c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   11e90:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   11e94:	e037883a 	mov	sp,fp
   11e98:	df000017 	ldw	fp,0(sp)
   11e9c:	dec00104 	addi	sp,sp,4
   11ea0:	f800283a 	ret

00011ea4 <atexit>:
   11ea4:	200b883a 	mov	r5,r4
   11ea8:	000d883a 	mov	r6,zero
   11eac:	0009883a 	mov	r4,zero
   11eb0:	000f883a 	mov	r7,zero
   11eb4:	0011f641 	jmpi	11f64 <__register_exitproc>

00011eb8 <exit>:
   11eb8:	defffe04 	addi	sp,sp,-8
   11ebc:	000b883a 	mov	r5,zero
   11ec0:	dc000015 	stw	r16,0(sp)
   11ec4:	dfc00115 	stw	ra,4(sp)
   11ec8:	2021883a 	mov	r16,r4
   11ecc:	001209c0 	call	1209c <__call_exitprocs>
   11ed0:	00800074 	movhi	r2,1
   11ed4:	10915304 	addi	r2,r2,17740
   11ed8:	11000017 	ldw	r4,0(r2)
   11edc:	20800f17 	ldw	r2,60(r4)
   11ee0:	10000126 	beq	r2,zero,11ee8 <exit+0x30>
   11ee4:	103ee83a 	callr	r2
   11ee8:	8009883a 	mov	r4,r16
   11eec:	001228c0 	call	1228c <_exit>

00011ef0 <memcmp>:
   11ef0:	00c000c4 	movi	r3,3
   11ef4:	1980032e 	bgeu	r3,r6,11f04 <memcmp+0x14>
   11ef8:	2144b03a 	or	r2,r4,r5
   11efc:	10c4703a 	and	r2,r2,r3
   11f00:	10000f26 	beq	r2,zero,11f40 <memcmp+0x50>
   11f04:	31ffffc4 	addi	r7,r6,-1
   11f08:	3000061e 	bne	r6,zero,11f24 <memcmp+0x34>
   11f0c:	00000a06 	br	11f38 <memcmp+0x48>
   11f10:	39ffffc4 	addi	r7,r7,-1
   11f14:	00bfffc4 	movi	r2,-1
   11f18:	21000044 	addi	r4,r4,1
   11f1c:	29400044 	addi	r5,r5,1
   11f20:	38800526 	beq	r7,r2,11f38 <memcmp+0x48>
   11f24:	20c00003 	ldbu	r3,0(r4)
   11f28:	28800003 	ldbu	r2,0(r5)
   11f2c:	18bff826 	beq	r3,r2,11f10 <memcmp+0x20>
   11f30:	1885c83a 	sub	r2,r3,r2
   11f34:	f800283a 	ret
   11f38:	0005883a 	mov	r2,zero
   11f3c:	f800283a 	ret
   11f40:	180f883a 	mov	r7,r3
   11f44:	20c00017 	ldw	r3,0(r4)
   11f48:	28800017 	ldw	r2,0(r5)
   11f4c:	18bfed1e 	bne	r3,r2,11f04 <memcmp+0x14>
   11f50:	31bfff04 	addi	r6,r6,-4
   11f54:	21000104 	addi	r4,r4,4
   11f58:	29400104 	addi	r5,r5,4
   11f5c:	39bff936 	bltu	r7,r6,11f44 <memcmp+0x54>
   11f60:	003fe806 	br	11f04 <memcmp+0x14>

00011f64 <__register_exitproc>:
   11f64:	defffa04 	addi	sp,sp,-24
   11f68:	00800074 	movhi	r2,1
   11f6c:	10915304 	addi	r2,r2,17740
   11f70:	dc000015 	stw	r16,0(sp)
   11f74:	14000017 	ldw	r16,0(r2)
   11f78:	dd000415 	stw	r20,16(sp)
   11f7c:	2829883a 	mov	r20,r5
   11f80:	81405217 	ldw	r5,328(r16)
   11f84:	dcc00315 	stw	r19,12(sp)
   11f88:	dc800215 	stw	r18,8(sp)
   11f8c:	dc400115 	stw	r17,4(sp)
   11f90:	dfc00515 	stw	ra,20(sp)
   11f94:	2023883a 	mov	r17,r4
   11f98:	3027883a 	mov	r19,r6
   11f9c:	3825883a 	mov	r18,r7
   11fa0:	28002526 	beq	r5,zero,12038 <__register_exitproc+0xd4>
   11fa4:	29000117 	ldw	r4,4(r5)
   11fa8:	008007c4 	movi	r2,31
   11fac:	11002716 	blt	r2,r4,1204c <__register_exitproc+0xe8>
   11fb0:	8800101e 	bne	r17,zero,11ff4 <__register_exitproc+0x90>
   11fb4:	2105883a 	add	r2,r4,r4
   11fb8:	1085883a 	add	r2,r2,r2
   11fbc:	20c00044 	addi	r3,r4,1
   11fc0:	1145883a 	add	r2,r2,r5
   11fc4:	0009883a 	mov	r4,zero
   11fc8:	15000215 	stw	r20,8(r2)
   11fcc:	28c00115 	stw	r3,4(r5)
   11fd0:	2005883a 	mov	r2,r4
   11fd4:	dfc00517 	ldw	ra,20(sp)
   11fd8:	dd000417 	ldw	r20,16(sp)
   11fdc:	dcc00317 	ldw	r19,12(sp)
   11fe0:	dc800217 	ldw	r18,8(sp)
   11fe4:	dc400117 	ldw	r17,4(sp)
   11fe8:	dc000017 	ldw	r16,0(sp)
   11fec:	dec00604 	addi	sp,sp,24
   11ff0:	f800283a 	ret
   11ff4:	29802204 	addi	r6,r5,136
   11ff8:	00800044 	movi	r2,1
   11ffc:	110e983a 	sll	r7,r2,r4
   12000:	30c04017 	ldw	r3,256(r6)
   12004:	2105883a 	add	r2,r4,r4
   12008:	1085883a 	add	r2,r2,r2
   1200c:	1185883a 	add	r2,r2,r6
   12010:	19c6b03a 	or	r3,r3,r7
   12014:	14802015 	stw	r18,128(r2)
   12018:	14c00015 	stw	r19,0(r2)
   1201c:	00800084 	movi	r2,2
   12020:	30c04015 	stw	r3,256(r6)
   12024:	88bfe31e 	bne	r17,r2,11fb4 <__register_exitproc+0x50>
   12028:	30804117 	ldw	r2,260(r6)
   1202c:	11c4b03a 	or	r2,r2,r7
   12030:	30804115 	stw	r2,260(r6)
   12034:	003fdf06 	br	11fb4 <__register_exitproc+0x50>
   12038:	00800074 	movhi	r2,1
   1203c:	10989f04 	addi	r2,r2,25212
   12040:	100b883a 	mov	r5,r2
   12044:	80805215 	stw	r2,328(r16)
   12048:	003fd606 	br	11fa4 <__register_exitproc+0x40>
   1204c:	00800034 	movhi	r2,0
   12050:	10800004 	addi	r2,r2,0
   12054:	1000021e 	bne	r2,zero,12060 <__register_exitproc+0xfc>
   12058:	013fffc4 	movi	r4,-1
   1205c:	003fdc06 	br	11fd0 <__register_exitproc+0x6c>
   12060:	01006404 	movi	r4,400
   12064:	103ee83a 	callr	r2
   12068:	1007883a 	mov	r3,r2
   1206c:	103ffa26 	beq	r2,zero,12058 <__register_exitproc+0xf4>
   12070:	80805217 	ldw	r2,328(r16)
   12074:	180b883a 	mov	r5,r3
   12078:	18000115 	stw	zero,4(r3)
   1207c:	18800015 	stw	r2,0(r3)
   12080:	80c05215 	stw	r3,328(r16)
   12084:	18006215 	stw	zero,392(r3)
   12088:	18006315 	stw	zero,396(r3)
   1208c:	0009883a 	mov	r4,zero
   12090:	883fc826 	beq	r17,zero,11fb4 <__register_exitproc+0x50>
   12094:	003fd706 	br	11ff4 <__register_exitproc+0x90>

00012098 <register_fini>:
   12098:	f800283a 	ret

0001209c <__call_exitprocs>:
   1209c:	00800074 	movhi	r2,1
   120a0:	10915304 	addi	r2,r2,17740
   120a4:	10800017 	ldw	r2,0(r2)
   120a8:	defff304 	addi	sp,sp,-52
   120ac:	df000b15 	stw	fp,44(sp)
   120b0:	d8800115 	stw	r2,4(sp)
   120b4:	00800034 	movhi	r2,0
   120b8:	10800004 	addi	r2,r2,0
   120bc:	1005003a 	cmpeq	r2,r2,zero
   120c0:	d8800215 	stw	r2,8(sp)
   120c4:	d8800117 	ldw	r2,4(sp)
   120c8:	dd400815 	stw	r21,32(sp)
   120cc:	dd000715 	stw	r20,28(sp)
   120d0:	10805204 	addi	r2,r2,328
   120d4:	dfc00c15 	stw	ra,48(sp)
   120d8:	ddc00a15 	stw	r23,40(sp)
   120dc:	dd800915 	stw	r22,36(sp)
   120e0:	dcc00615 	stw	r19,24(sp)
   120e4:	dc800515 	stw	r18,20(sp)
   120e8:	dc400415 	stw	r17,16(sp)
   120ec:	dc000315 	stw	r16,12(sp)
   120f0:	282b883a 	mov	r21,r5
   120f4:	2039883a 	mov	fp,r4
   120f8:	d8800015 	stw	r2,0(sp)
   120fc:	2829003a 	cmpeq	r20,r5,zero
   12100:	d8800117 	ldw	r2,4(sp)
   12104:	14405217 	ldw	r17,328(r2)
   12108:	88001026 	beq	r17,zero,1214c <__call_exitprocs+0xb0>
   1210c:	ddc00017 	ldw	r23,0(sp)
   12110:	88800117 	ldw	r2,4(r17)
   12114:	8c802204 	addi	r18,r17,136
   12118:	143fffc4 	addi	r16,r2,-1
   1211c:	80000916 	blt	r16,zero,12144 <__call_exitprocs+0xa8>
   12120:	05bfffc4 	movi	r22,-1
   12124:	a000151e 	bne	r20,zero,1217c <__call_exitprocs+0xe0>
   12128:	8409883a 	add	r4,r16,r16
   1212c:	2105883a 	add	r2,r4,r4
   12130:	1485883a 	add	r2,r2,r18
   12134:	10c02017 	ldw	r3,128(r2)
   12138:	a8c01126 	beq	r21,r3,12180 <__call_exitprocs+0xe4>
   1213c:	843fffc4 	addi	r16,r16,-1
   12140:	85bff81e 	bne	r16,r22,12124 <__call_exitprocs+0x88>
   12144:	d8800217 	ldw	r2,8(sp)
   12148:	10003126 	beq	r2,zero,12210 <__call_exitprocs+0x174>
   1214c:	dfc00c17 	ldw	ra,48(sp)
   12150:	df000b17 	ldw	fp,44(sp)
   12154:	ddc00a17 	ldw	r23,40(sp)
   12158:	dd800917 	ldw	r22,36(sp)
   1215c:	dd400817 	ldw	r21,32(sp)
   12160:	dd000717 	ldw	r20,28(sp)
   12164:	dcc00617 	ldw	r19,24(sp)
   12168:	dc800517 	ldw	r18,20(sp)
   1216c:	dc400417 	ldw	r17,16(sp)
   12170:	dc000317 	ldw	r16,12(sp)
   12174:	dec00d04 	addi	sp,sp,52
   12178:	f800283a 	ret
   1217c:	8409883a 	add	r4,r16,r16
   12180:	88c00117 	ldw	r3,4(r17)
   12184:	2105883a 	add	r2,r4,r4
   12188:	1445883a 	add	r2,r2,r17
   1218c:	18ffffc4 	addi	r3,r3,-1
   12190:	11800217 	ldw	r6,8(r2)
   12194:	1c001526 	beq	r3,r16,121ec <__call_exitprocs+0x150>
   12198:	10000215 	stw	zero,8(r2)
   1219c:	303fe726 	beq	r6,zero,1213c <__call_exitprocs+0xa0>
   121a0:	00c00044 	movi	r3,1
   121a4:	1c06983a 	sll	r3,r3,r16
   121a8:	90804017 	ldw	r2,256(r18)
   121ac:	8cc00117 	ldw	r19,4(r17)
   121b0:	1884703a 	and	r2,r3,r2
   121b4:	10001426 	beq	r2,zero,12208 <__call_exitprocs+0x16c>
   121b8:	90804117 	ldw	r2,260(r18)
   121bc:	1884703a 	and	r2,r3,r2
   121c0:	10000c1e 	bne	r2,zero,121f4 <__call_exitprocs+0x158>
   121c4:	2105883a 	add	r2,r4,r4
   121c8:	1485883a 	add	r2,r2,r18
   121cc:	11400017 	ldw	r5,0(r2)
   121d0:	e009883a 	mov	r4,fp
   121d4:	303ee83a 	callr	r6
   121d8:	88800117 	ldw	r2,4(r17)
   121dc:	98bfc81e 	bne	r19,r2,12100 <__call_exitprocs+0x64>
   121e0:	b8800017 	ldw	r2,0(r23)
   121e4:	147fd526 	beq	r2,r17,1213c <__call_exitprocs+0xa0>
   121e8:	003fc506 	br	12100 <__call_exitprocs+0x64>
   121ec:	8c000115 	stw	r16,4(r17)
   121f0:	003fea06 	br	1219c <__call_exitprocs+0x100>
   121f4:	2105883a 	add	r2,r4,r4
   121f8:	1485883a 	add	r2,r2,r18
   121fc:	11000017 	ldw	r4,0(r2)
   12200:	303ee83a 	callr	r6
   12204:	003ff406 	br	121d8 <__call_exitprocs+0x13c>
   12208:	303ee83a 	callr	r6
   1220c:	003ff206 	br	121d8 <__call_exitprocs+0x13c>
   12210:	88800117 	ldw	r2,4(r17)
   12214:	1000081e 	bne	r2,zero,12238 <__call_exitprocs+0x19c>
   12218:	89000017 	ldw	r4,0(r17)
   1221c:	20000726 	beq	r4,zero,1223c <__call_exitprocs+0x1a0>
   12220:	b9000015 	stw	r4,0(r23)
   12224:	8809883a 	mov	r4,r17
   12228:	00000000 	call	0 <__alt_mem_sdram>
   1222c:	bc400017 	ldw	r17,0(r23)
   12230:	883fb71e 	bne	r17,zero,12110 <__call_exitprocs+0x74>
   12234:	003fc506 	br	1214c <__call_exitprocs+0xb0>
   12238:	89000017 	ldw	r4,0(r17)
   1223c:	882f883a 	mov	r23,r17
   12240:	2023883a 	mov	r17,r4
   12244:	883fb21e 	bne	r17,zero,12110 <__call_exitprocs+0x74>
   12248:	003fc006 	br	1214c <__call_exitprocs+0xb0>

0001224c <alt_sim_halt>:

/*
 * Routine called on exit.
 */
static ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
   1224c:	defffd04 	addi	sp,sp,-12
   12250:	df000215 	stw	fp,8(sp)
   12254:	df000204 	addi	fp,sp,8
   12258:	e13fff15 	stw	r4,-4(fp)
  int r2 = exit_code;
   1225c:	e0bfff17 	ldw	r2,-4(fp)
   12260:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   12264:	e0bffe17 	ldw	r2,-8(fp)
   12268:	1005003a 	cmpeq	r2,r2,zero
   1226c:	1000021e 	bne	r2,zero,12278 <alt_sim_halt+0x2c>
    ALT_SIM_FAIL();
   12270:	002af070 	cmpltui	zero,zero,43969
   12274:	00000106 	br	1227c <alt_sim_halt+0x30>
  } else {
    ALT_SIM_PASS();
   12278:	002af0b0 	cmpltui	zero,zero,43970
  }
#endif /* DEBUG_STUB */
}
   1227c:	e037883a 	mov	sp,fp
   12280:	df000017 	ldw	fp,0(sp)
   12284:	dec00104 	addi	sp,sp,4
   12288:	f800283a 	ret

0001228c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   1228c:	defffd04 	addi	sp,sp,-12
   12290:	dfc00215 	stw	ra,8(sp)
   12294:	df000115 	stw	fp,4(sp)
   12298:	df000104 	addi	fp,sp,4
   1229c:	e13fff15 	stw	r4,-4(fp)
  ALT_OS_STOP();

  /* Provide notification to the simulator that we've stopped */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_SIM_HALT().\r\n");
  ALT_SIM_HALT(exit_code);
   122a0:	e13fff17 	ldw	r4,-4(fp)
   122a4:	001224c0 	call	1224c <alt_sim_halt>

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   122a8:	003fff06 	br	122a8 <_exit+0x1c>
   122ac:	00012098 	cmpnei	zero,zero,1154
