ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Button.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Button_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Button_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Button_Enable, %function
  25              	Button_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Button.c"
   1:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Button.c **** * File Name: Button.c
   3:Generated_Source\PSoC5/Button.c **** * Version 3.50
   4:Generated_Source\PSoC5/Button.c **** *
   5:Generated_Source\PSoC5/Button.c **** * Description:
   6:Generated_Source\PSoC5/Button.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/Button.c **** *  component.
   8:Generated_Source\PSoC5/Button.c **** *
   9:Generated_Source\PSoC5/Button.c **** * Note:
  10:Generated_Source\PSoC5/Button.c **** *
  11:Generated_Source\PSoC5/Button.c **** ********************************************************************************
  12:Generated_Source\PSoC5/Button.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/Button.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/Button.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/Button.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/Button.c **** 
  18:Generated_Source\PSoC5/Button.c **** #include "Button.h"
  19:Generated_Source\PSoC5/Button.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/Button.c **** 
  21:Generated_Source\PSoC5/Button.c **** 
  22:Generated_Source\PSoC5/Button.c **** static uint8 Button_initVar = 0u;
  23:Generated_Source\PSoC5/Button.c ****             
  24:Generated_Source\PSoC5/Button.c **** /* Global software variables */
  25:Generated_Source\PSoC5/Button.c **** volatile uint8 Button_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/Button.c **** volatile uint8 Button_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/Button.c **** 
  28:Generated_Source\PSoC5/Button.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/Button.c **** #if (Button_TUNING_METHOD == Button_AUTO_TUNING)
  30:Generated_Source\PSoC5/Button.c ****     uint8 Button_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 2


  31:Generated_Source\PSoC5/Button.c **** #endif /* (Button_TUNING_METHOD == Button_AUTO_TUNING) */
  32:Generated_Source\PSoC5/Button.c **** 
  33:Generated_Source\PSoC5/Button.c **** #if (Button_CURRENT_SOURCE == Button_EXTERNAL_RB)
  34:Generated_Source\PSoC5/Button.c ****     uint8  Button_extRbCh0Cur = Button_RBLEED1;
  35:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/Button.c ****         uint8  Button_extRbCh1Cur = (Button_RBLEED1 + Button_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/Button.c **** #endif /* (Button_CURRENT_SOURCE == Button_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/Button.c ****         
  40:Generated_Source\PSoC5/Button.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/Button.c **** uint16 Button_sensorRaw[Button_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/Button.c **** 
  43:Generated_Source\PSoC5/Button.c **** uint8 Button_sensorEnableMask[(((Button_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/Button.c **** 0x3u, };
  45:Generated_Source\PSoC5/Button.c **** 
  46:Generated_Source\PSoC5/Button.c **** uint8 CYXDATA * const CYCODE Button_pcTable[] = {
  47:Generated_Source\PSoC5/Button.c ****     (uint8 CYXDATA *)Button_PortCH0__Left__BTN__PC, 
  48:Generated_Source\PSoC5/Button.c ****     (uint8 CYXDATA *)Button_PortCH0__Right__BTN__PC, 
  49:Generated_Source\PSoC5/Button.c **** };
  50:Generated_Source\PSoC5/Button.c **** 
  51:Generated_Source\PSoC5/Button.c **** const uint8 CYCODE Button_portTable[] = {
  52:Generated_Source\PSoC5/Button.c ****     Button_PortCH0__Left__BTN__PORT, 
  53:Generated_Source\PSoC5/Button.c ****     Button_PortCH0__Right__BTN__PORT, 
  54:Generated_Source\PSoC5/Button.c **** };
  55:Generated_Source\PSoC5/Button.c **** 
  56:Generated_Source\PSoC5/Button.c **** const uint8 CYCODE Button_maskTable[] = {
  57:Generated_Source\PSoC5/Button.c ****     Button_PortCH0__Left__BTN__MASK,
  58:Generated_Source\PSoC5/Button.c ****     Button_PortCH0__Right__BTN__MASK,
  59:Generated_Source\PSoC5/Button.c **** };
  60:Generated_Source\PSoC5/Button.c **** 
  61:Generated_Source\PSoC5/Button.c **** uint8 CYXDATA * const CYCODE Button_csTable[] = {
  62:Generated_Source\PSoC5/Button.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  63:Generated_Source\PSoC5/Button.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  64:Generated_Source\PSoC5/Button.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  65:Generated_Source\PSoC5/Button.c **** };
  66:Generated_Source\PSoC5/Button.c **** 
  67:Generated_Source\PSoC5/Button.c **** uint8 Button_idacSettings[] = {
  68:Generated_Source\PSoC5/Button.c ****     200u,200u,
  69:Generated_Source\PSoC5/Button.c **** };
  70:Generated_Source\PSoC5/Button.c **** 
  71:Generated_Source\PSoC5/Button.c **** uint8 Button_widgetResolution[] = {
  72:Generated_Source\PSoC5/Button.c ****     Button_PWM_RESOLUTION_10_BITS,
  73:Generated_Source\PSoC5/Button.c ****     Button_PWM_RESOLUTION_10_BITS,
  74:Generated_Source\PSoC5/Button.c **** };
  75:Generated_Source\PSoC5/Button.c **** 
  76:Generated_Source\PSoC5/Button.c **** uint8 Button_analogSwitchDivider[Button_TOTAL_SCANSLOT_COUNT];
  77:Generated_Source\PSoC5/Button.c **** const uint8 CYCODE Button_widgetNumber[] = {
  78:Generated_Source\PSoC5/Button.c ****     0u, /* Left__BTN */
  79:Generated_Source\PSoC5/Button.c ****     1u, /* Right__BTN */
  80:Generated_Source\PSoC5/Button.c ****     
  81:Generated_Source\PSoC5/Button.c **** };
  82:Generated_Source\PSoC5/Button.c **** 
  83:Generated_Source\PSoC5/Button.c **** 
  84:Generated_Source\PSoC5/Button.c **** 
  85:Generated_Source\PSoC5/Button.c **** 
  86:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
  87:Generated_Source\PSoC5/Button.c **** * Function Name: Button_Init
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 3


  88:Generated_Source\PSoC5/Button.c **** ********************************************************************************
  89:Generated_Source\PSoC5/Button.c **** *
  90:Generated_Source\PSoC5/Button.c **** * Summary:
  91:Generated_Source\PSoC5/Button.c **** *  Inits default CapSense configuration provided with customizer that defines 
  92:Generated_Source\PSoC5/Button.c **** *  mode of component operations and resets all sensors to an inactive state.
  93:Generated_Source\PSoC5/Button.c **** *
  94:Generated_Source\PSoC5/Button.c **** * Parameters:
  95:Generated_Source\PSoC5/Button.c **** *  None
  96:Generated_Source\PSoC5/Button.c **** *
  97:Generated_Source\PSoC5/Button.c **** * Return:
  98:Generated_Source\PSoC5/Button.c **** *  None
  99:Generated_Source\PSoC5/Button.c **** *
 100:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 101:Generated_Source\PSoC5/Button.c **** void Button_Init(void) 
 102:Generated_Source\PSoC5/Button.c **** {
 103:Generated_Source\PSoC5/Button.c ****     #if ( (Button_PRS_OPTIONS) || \
 104:Generated_Source\PSoC5/Button.c ****           (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_UDB) || \
 105:Generated_Source\PSoC5/Button.c ****           ( (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
 106:Generated_Source\PSoC5/Button.c ****             (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_UDB)) )
 107:Generated_Source\PSoC5/Button.c ****         
 108:Generated_Source\PSoC5/Button.c ****         uint8 enableInterrupts;
 109:Generated_Source\PSoC5/Button.c ****     #endif /* ( (Button_PRS_OPTIONS) || \
 110:Generated_Source\PSoC5/Button.c ****            * (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_UDB) || \
 111:Generated_Source\PSoC5/Button.c ****            * ( (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
 112:Generated_Source\PSoC5/Button.c ****            * (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_UDB)) ) 
 113:Generated_Source\PSoC5/Button.c ****            */
 114:Generated_Source\PSoC5/Button.c ****     
 115:Generated_Source\PSoC5/Button.c ****     /* Clear all sensors */
 116:Generated_Source\PSoC5/Button.c ****     Button_ClearSensors();
 117:Generated_Source\PSoC5/Button.c **** 
 118:Generated_Source\PSoC5/Button.c ****     /* Set Prescaler */
 119:Generated_Source\PSoC5/Button.c ****     #if (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB)
 120:Generated_Source\PSoC5/Button.c ****         /* Do nothing = config without prescaler */
 121:Generated_Source\PSoC5/Button.c ****     #elif (Button_PRESCALER_OPTIONS == Button_PRESCALER_FF)
 122:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_CONTROL_REG   = (Button_PRESCALER_CTRL_ENABLE |
 123:Generated_Source\PSoC5/Button.c ****                                                     Button_PRESCALER_CTRL_MODE_CMP);
 124:Generated_Source\PSoC5/Button.c ****                                                
 125:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_CONTROL2_REG |= Button_PRESCALER_CTRL_CMP_LESS_EQ;
 126:Generated_Source\PSoC5/Button.c ****     #else
 127:Generated_Source\PSoC5/Button.c ****         /* Do nothing = config without prescaler */
 128:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB) */
 129:Generated_Source\PSoC5/Button.c **** 
 130:Generated_Source\PSoC5/Button.c ****     /* Set PRS */
 131:Generated_Source\PSoC5/Button.c ****     #if (Button_PRS_OPTIONS)
 132:Generated_Source\PSoC5/Button.c ****         Button_SetAnalogSwitchesSource(Button_ANALOG_SWITCHES_SRC_PRS);
 133:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_PRS_OPTIONS) */
 134:Generated_Source\PSoC5/Button.c **** 
 135:Generated_Source\PSoC5/Button.c ****     #if (Button_PRS_OPTIONS == Button_PRS_8BITS)
 136:Generated_Source\PSoC5/Button.c ****         /* Aux control set FIFO as REG */
 137:Generated_Source\PSoC5/Button.c ****         enableInterrupts = CyEnterCriticalSection();
 138:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_A_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 139:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 140:Generated_Source\PSoC5/Button.c ****         
 141:Generated_Source\PSoC5/Button.c ****         /* Write polynomial */
 142:Generated_Source\PSoC5/Button.c ****         Button_POLYNOM_REG   = Button_PRS8_DEFAULT_POLYNOM;
 143:Generated_Source\PSoC5/Button.c ****         /* Write FIFO with seed */
 144:Generated_Source\PSoC5/Button.c ****         Button_SEED_COPY_REG = Button_MEASURE_FULL_RANGE_LOW;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 4


 145:Generated_Source\PSoC5/Button.c ****         
 146:Generated_Source\PSoC5/Button.c ****     #elif (Button_PRS_OPTIONS == Button_PRS_16BITS)
 147:Generated_Source\PSoC5/Button.c ****         /* Aux control set FIFO as REG */ 
 148:Generated_Source\PSoC5/Button.c ****         enableInterrupts = CyEnterCriticalSection();  
 149:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_A_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 150:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_B_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 151:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 152:Generated_Source\PSoC5/Button.c ****         
 153:Generated_Source\PSoC5/Button.c ****         /* Write polynomial */
 154:Generated_Source\PSoC5/Button.c ****         CY_SET_REG16(Button_POLYNOM_PTR, Button_PRS16_DEFAULT_POLYNOM);
 155:Generated_Source\PSoC5/Button.c ****         /* Write FIFO with seed */
 156:Generated_Source\PSoC5/Button.c ****         CY_SET_REG16(Button_SEED_COPY_PTR, Button_MEASURE_FULL_RANGE);
 157:Generated_Source\PSoC5/Button.c ****                 
 158:Generated_Source\PSoC5/Button.c ****     #elif (Button_PRS_OPTIONS == Button_PRS_16BITS_4X)
 159:Generated_Source\PSoC5/Button.c ****         /* Aux control set FIFO as REG */
 160:Generated_Source\PSoC5/Button.c ****         enableInterrupts = CyEnterCriticalSection();
 161:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_A_REG  |= Button_AUXCTRL_FIFO_SINGLE_REG;
 162:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 163:Generated_Source\PSoC5/Button.c ****         
 164:Generated_Source\PSoC5/Button.c ****         /* Write polynomial */
 165:Generated_Source\PSoC5/Button.c ****         Button_POLYNOM_A__D1_REG   = HI8(Button_PRS16_DEFAULT_POLYNOM);
 166:Generated_Source\PSoC5/Button.c ****         Button_POLYNOM_A__D0_REG   = LO8(Button_PRS16_DEFAULT_POLYNOM);
 167:Generated_Source\PSoC5/Button.c ****         /* Write FIFO with seed */
 168:Generated_Source\PSoC5/Button.c ****         Button_SEED_COPY_A__F1_REG = Button_MEASURE_FULL_RANGE_LOW;
 169:Generated_Source\PSoC5/Button.c ****         Button_SEED_COPY_A__F0_REG = Button_MEASURE_FULL_RANGE_LOW; 
 170:Generated_Source\PSoC5/Button.c ****         
 171:Generated_Source\PSoC5/Button.c ****     #else
 172:Generated_Source\PSoC5/Button.c ****         /* Do nothing = config without PRS */
 173:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_PRS_OPTIONS == Button_PRS_8BITS) */ 
 174:Generated_Source\PSoC5/Button.c ****     
 175:Generated_Source\PSoC5/Button.c ****     /* Set ScanSpeed */
 176:Generated_Source\PSoC5/Button.c ****     Button_SCANSPEED_PERIOD_REG = Button_SCANSPEED_VALUE;
 177:Generated_Source\PSoC5/Button.c ****     
 178:Generated_Source\PSoC5/Button.c ****     /* Set the Measure */
 179:Generated_Source\PSoC5/Button.c ****     #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
 180:Generated_Source\PSoC5/Button.c ****         /* Window PWM */
 181:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_CONTROL_REG      = Button_MEASURE_CTRL_ENABLE;
 182:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_CONTROL2_REG    |= Button_MEASURE_CTRL_PULSEWIDTH;
 183:Generated_Source\PSoC5/Button.c ****         CY_SET_REG16(Button_PWM_CH0_COUNTER_PTR, Button_MEASURE_FULL_RANGE);
 184:Generated_Source\PSoC5/Button.c ****         
 185:Generated_Source\PSoC5/Button.c ****         /* Raw Counter */
 186:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_CONTROL_REG      = Button_MEASURE_CTRL_ENABLE;
 187:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_CONTROL2_REG    |= Button_MEASURE_CTRL_PULSEWIDTH;
 188:Generated_Source\PSoC5/Button.c ****         CY_SET_REG16(Button_RAW_CH0_PERIOD_PTR, Button_MEASURE_FULL_RANGE);
 189:Generated_Source\PSoC5/Button.c ****     
 190:Generated_Source\PSoC5/Button.c ****     #else
 191:Generated_Source\PSoC5/Button.c ****         /*Window PWM and Raw Counter AUX set */
 192:Generated_Source\PSoC5/Button.c ****         enableInterrupts = CyEnterCriticalSection();
 193:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 194:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 195:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 196:Generated_Source\PSoC5/Button.c ****         
 197:Generated_Source\PSoC5/Button.c ****         /* Window PWM */
 198:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_ADD_VALUE_REG    = Button_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_COUNTER_LO_REG   = Button_MEASURE_FULL_RANGE_LOW;
 201:Generated_Source\PSoC5/Button.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 5


 202:Generated_Source\PSoC5/Button.c ****         /* Raw Counter */
 203:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_ADD_VALUE_REG    = Button_MEASURE_FULL_RANGE_LOW;
 204:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_PERIOD_HI_REG    = Button_MEASURE_FULL_RANGE_LOW;
 205:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 206:Generated_Source\PSoC5/Button.c ****         
 207:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF) */ 
 208:Generated_Source\PSoC5/Button.c ****     
 209:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 210:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)
 211:Generated_Source\PSoC5/Button.c ****             /* Window PWM */
 212:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_CONTROL_REG      = Button_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_CONTROL2_REG    |= Button_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/Button.c ****             CY_SET_REG16(Button_PWM_CH1_COUNTER_PTR, Button_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/Button.c ****             
 216:Generated_Source\PSoC5/Button.c ****             /* Raw Counter */
 217:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_CONTROL_REG      = Button_MEASURE_CTRL_ENABLE;
 218:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_CONTROL2_REG    |= Button_MEASURE_CTRL_PULSEWIDTH;
 219:Generated_Source\PSoC5/Button.c ****             CY_SET_REG16(Button_RAW_CH1_PERIOD_PTR, Button_MEASURE_FULL_RANGE);
 220:Generated_Source\PSoC5/Button.c ****            
 221:Generated_Source\PSoC5/Button.c ****         #else
 222:Generated_Source\PSoC5/Button.c ****             /*Window PWM and Raw Counter AUX set */
 223:Generated_Source\PSoC5/Button.c ****             enableInterrupts = CyEnterCriticalSection();
 224:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 225:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 226:Generated_Source\PSoC5/Button.c ****             CyExitCriticalSection(enableInterrupts);
 227:Generated_Source\PSoC5/Button.c ****             
 228:Generated_Source\PSoC5/Button.c ****             /* Window PWM */
 229:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_ADD_VALUE_REG    = Button_MEASURE_FULL_RANGE_LOW;
 230:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 231:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_COUNTER_LO_REG   = Button_MEASURE_FULL_RANGE_LOW;
 232:Generated_Source\PSoC5/Button.c ****             
 233:Generated_Source\PSoC5/Button.c ****             /* Raw Counter */
 234:Generated_Source\PSoC5/Button.c ****             
 235:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_ADD_VALUE_REG    = Button_MEASURE_FULL_RANGE_LOW;
 236:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_PERIOD_HI_REG    = Button_MEASURE_FULL_RANGE_LOW;
 237:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 238:Generated_Source\PSoC5/Button.c ****             
 239:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF) */
 240:Generated_Source\PSoC5/Button.c ****     
 241:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 242:Generated_Source\PSoC5/Button.c ****     
 243:Generated_Source\PSoC5/Button.c ****     /* Setup ISR */
 244:Generated_Source\PSoC5/Button.c ****     CyIntDisable(Button_IsrCH0_ISR_NUMBER);
 245:Generated_Source\PSoC5/Button.c ****     (void)CyIntSetVector(Button_IsrCH0_ISR_NUMBER, &Button_IsrCH0_ISR);
 246:Generated_Source\PSoC5/Button.c ****     CyIntSetPriority(Button_IsrCH0_ISR_NUMBER, Button_IsrCH0_ISR_PRIORITY);
 247:Generated_Source\PSoC5/Button.c ****     
 248:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 249:Generated_Source\PSoC5/Button.c ****         CyIntDisable(Button_IsrCH1_ISR_NUMBER);
 250:Generated_Source\PSoC5/Button.c ****         CyIntSetVector(Button_IsrCH1_ISR_NUMBER, Button_IsrCH1_ISR);
 251:Generated_Source\PSoC5/Button.c ****         CyIntSetPriority(Button_IsrCH1_ISR_NUMBER, Button_IsrCH1_ISR_PRIORITY);
 252:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 253:Generated_Source\PSoC5/Button.c ****     
 254:Generated_Source\PSoC5/Button.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 255:Generated_Source\PSoC5/Button.c ****     Button_AMuxCH0_Init();
 256:Generated_Source\PSoC5/Button.c ****     Button_AMuxCH0_Connect(Button_AMuxCH0_CMOD_CHANNEL);
 257:Generated_Source\PSoC5/Button.c ****     Button_AMuxCH0_Connect(Button_AMuxCH0_CMP_VP_CHANNEL);
 258:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 6


 259:Generated_Source\PSoC5/Button.c ****         Button_AMuxCH0_Connect(Button_AMuxCH0_IDAC_CHANNEL);
 260:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 261:Generated_Source\PSoC5/Button.c ****     
 262:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 263:Generated_Source\PSoC5/Button.c ****         Button_AMuxCH1_Init();
 264:Generated_Source\PSoC5/Button.c ****         Button_AMuxCH1_Connect(Button_AMuxCH1_CMOD_CHANNEL);
 265:Generated_Source\PSoC5/Button.c ****         Button_AMuxCH1_Connect(Button_AMuxCH1_CMP_VP_CHANNEL);
 266:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
 267:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH1_Connect(Button_AMuxCH1_IDAC_CHANNEL);
 268:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 269:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 270:Generated_Source\PSoC5/Button.c ****     
 271:Generated_Source\PSoC5/Button.c ****     /* Int Rb */
 272:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE == Button_EXTERNAL_RB)
 273:Generated_Source\PSoC5/Button.c ****         Button_InitRb();
 274:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_CURRENT_SOURCE == Button_EXTERNAL_RB) */
 275:Generated_Source\PSoC5/Button.c ****     
 276:Generated_Source\PSoC5/Button.c ****     /* Enable window generation */
 277:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG |= Button_CTRL_WINDOW_EN__CH0;
 278:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 279:Generated_Source\PSoC5/Button.c ****         Button_CONTROL_REG |= Button_CTRL_WINDOW_EN__CH1;
 280:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 281:Generated_Source\PSoC5/Button.c ****     
 282:Generated_Source\PSoC5/Button.c ****     /* Initialize Cmp and Idac */
 283:Generated_Source\PSoC5/Button.c ****     Button_CompCH0_Init();
 284:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 285:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_Init();
 286:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetPolarity(Button_IdacCH0_IDIR);
 287:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetRange(Button_IDAC_RANGE_VALUE);
 288:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetValue(Button_TURN_OFF_IDAC);
 289:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 290:Generated_Source\PSoC5/Button.c ****     
 291:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 292:Generated_Source\PSoC5/Button.c ****         Button_CompCH1_Init();
 293:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
 294:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_Init();
 295:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_SetPolarity(Button_IdacCH1_IDIR);
 296:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_SetRange(Button_IDAC_RANGE_VALUE);
 297:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_SetValue(Button_TURN_OFF_IDAC);
 298:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 299:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 300:Generated_Source\PSoC5/Button.c ****     
 301:Generated_Source\PSoC5/Button.c ****     /* Initialize Vref if as VDAC */
 302:Generated_Source\PSoC5/Button.c ****     #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
 303:Generated_Source\PSoC5/Button.c ****         Button_VdacRefCH0_Init();
 304:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 305:Generated_Source\PSoC5/Button.c ****             Button_VdacRefCH1_Init();
 306:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_DESIGN_TYPE */
 307:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_VREF_OPTIONS */
 308:Generated_Source\PSoC5/Button.c **** }
 309:Generated_Source\PSoC5/Button.c **** 
 310:Generated_Source\PSoC5/Button.c **** 
 311:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/Button.c **** * Function Name: Button_Enable
 313:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 314:Generated_Source\PSoC5/Button.c **** *
 315:Generated_Source\PSoC5/Button.c **** * Summary:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 7


 316:Generated_Source\PSoC5/Button.c **** *  Enables active mode power template bits for number of component used within 
 317:Generated_Source\PSoC5/Button.c **** *  CapSense.
 318:Generated_Source\PSoC5/Button.c **** *
 319:Generated_Source\PSoC5/Button.c **** * Parameters:
 320:Generated_Source\PSoC5/Button.c **** *  None
 321:Generated_Source\PSoC5/Button.c **** *
 322:Generated_Source\PSoC5/Button.c **** * Return:
 323:Generated_Source\PSoC5/Button.c **** *  None
 324:Generated_Source\PSoC5/Button.c **** *
 325:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/Button.c **** void Button_Enable(void) 
 327:Generated_Source\PSoC5/Button.c **** {
  28              		.loc 1 327 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 328:Generated_Source\PSoC5/Button.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC5/Button.c ****     
 330:Generated_Source\PSoC5/Button.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 330 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 331:Generated_Source\PSoC5/Button.c ****     
 332:Generated_Source\PSoC5/Button.c ****     /* Enable Prescaler */
 333:Generated_Source\PSoC5/Button.c ****     #if (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB)
 334:Generated_Source\PSoC5/Button.c ****         /* Do nothing  for UDB */
 335:Generated_Source\PSoC5/Button.c ****     #elif (Button_PRESCALER_OPTIONS == Button_PRESCALER_FF)
 336:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_ACT_PWRMGR_REG  |= Button_PRESCALER_ACT_PWR_EN;
 337:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_STBY_PWRMGR_REG |= Button_PRESCALER_STBY_PWR_EN;
 338:Generated_Source\PSoC5/Button.c ****         
 339:Generated_Source\PSoC5/Button.c ****     #else
 340:Generated_Source\PSoC5/Button.c ****         /* Do nothing = config without prescaler */
 341:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB) */
 342:Generated_Source\PSoC5/Button.c ****     
 343:Generated_Source\PSoC5/Button.c ****     /* Enable ScanSpeed */
 344:Generated_Source\PSoC5/Button.c ****     Button_SCANSPEED_AUX_CONTROL_REG |= Button_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 344 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 345:Generated_Source\PSoC5/Button.c ****     
 346:Generated_Source\PSoC5/Button.c ****     /* Enable Measure CH0 */
 347:Generated_Source\PSoC5/Button.c ****     #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
 348:Generated_Source\PSoC5/Button.c ****         /* Window PWM */
 349:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_ACT_PWRMGR_REG  |= Button_PWM_CH0_ACT_PWR_EN;
 350:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_STBY_PWRMGR_REG |= Button_PWM_CH0_STBY_PWR_EN;
 351:Generated_Source\PSoC5/Button.c ****         
 352:Generated_Source\PSoC5/Button.c ****         /* Raw Counter */
 353:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_ACT_PWRMGR_REG  |= Button_RAW_CH0_ACT_PWR_EN;
 354:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_STBY_PWRMGR_REG |= Button_RAW_CH0_STBY_PWR_EN;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 8


 355:Generated_Source\PSoC5/Button.c ****         
 356:Generated_Source\PSoC5/Button.c ****     #else
 357:Generated_Source\PSoC5/Button.c ****         /* Window PWM -  Do nothing */
 358:Generated_Source\PSoC5/Button.c ****         /* Raw Counter - Do nothing */
 359:Generated_Source\PSoC5/Button.c ****         
 360:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF) */ 
 361:Generated_Source\PSoC5/Button.c ****     
 362:Generated_Source\PSoC5/Button.c ****     /* Enable Measure CH1*/
 363:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 364:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)
 365:Generated_Source\PSoC5/Button.c ****             /* Window PWM */
 366:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_ACT_PWRMGR_REG  |= Button_PWM_CH1_ACT_PWR_EN;
 367:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_STBY_PWRMGR_REG |= Button_PWM_CH1_STBY_PWR_EN;
 368:Generated_Source\PSoC5/Button.c ****             
 369:Generated_Source\PSoC5/Button.c ****             /* Raw Counter */
 370:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_ACT_PWRMGR_REG  |= Button_RAW_CH1_ACT_PWR_EN;
 371:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_STBY_PWRMGR_REG |= Button_RAW_CH1_STBY_PWR_EN;
 372:Generated_Source\PSoC5/Button.c ****            
 373:Generated_Source\PSoC5/Button.c ****         #else
 374:Generated_Source\PSoC5/Button.c ****         /* Window PWM -  Do nothing */
 375:Generated_Source\PSoC5/Button.c ****         /* Raw Counter - Do nothing */
 376:Generated_Source\PSoC5/Button.c ****         
 377:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF) */
 378:Generated_Source\PSoC5/Button.c ****     
 379:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 380:Generated_Source\PSoC5/Button.c ****     
 381:Generated_Source\PSoC5/Button.c ****     /* Enable the Clock */
 382:Generated_Source\PSoC5/Button.c ****     #if (Button_CLOCK_SOURCE == Button_INTERNAL_CLOCK)
 383:Generated_Source\PSoC5/Button.c ****        Button_IntClock_Enable();
  46              		.loc 1 383 0
  47 0012 FFF7FEFF 		bl	Button_IntClock_Start
  48              	.LVL2:
 384:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CLOCK_SOURCE */
 385:Generated_Source\PSoC5/Button.c ****     
 386:Generated_Source\PSoC5/Button.c ****     /* Setup Cmp and Idac */
 387:Generated_Source\PSoC5/Button.c ****     Button_CompCH0_Enable();
  49              		.loc 1 387 0
  50 0016 FFF7FEFF 		bl	Button_CompCH0_Enable
  51              	.LVL3:
 388:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 389:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_Enable();
  52              		.loc 1 389 0
  53 001a FFF7FEFF 		bl	Button_IdacCH0_Enable
  54              	.LVL4:
 390:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 391:Generated_Source\PSoC5/Button.c ****     
 392:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 393:Generated_Source\PSoC5/Button.c ****         Button_CompCH1_Enable();
 394:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
 395:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_Enable();
 396:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 397:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 398:Generated_Source\PSoC5/Button.c ****     
 399:Generated_Source\PSoC5/Button.c ****     /* Enable Vref */
 400:Generated_Source\PSoC5/Button.c ****     #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
 401:Generated_Source\PSoC5/Button.c ****         Button_VdacRefCH0_Enable();
 402:Generated_Source\PSoC5/Button.c ****         Button_VdacRefCH0_SetValue(Button_VdacRefCH0_DEFAULT_DATA);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 9


 403:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 404:Generated_Source\PSoC5/Button.c ****             Button_VdacRefCH1_Enable();
 405:Generated_Source\PSoC5/Button.c ****             Button_VdacRefCH1_SetValue(Button_VdacRefCH1_DEFAULT_DATA);
 406:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) */
 407:Generated_Source\PSoC5/Button.c ****     #else
 408:Generated_Source\PSoC5/Button.c ****         /* Enable CapSense Buf */
 409:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_STBY_PWRMGR_REG |= Button_BufCH0_STBY_PWR_EN;
  55              		.loc 1 409 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F02003 		orr	r3, r3, #32
  59 0026 1370     		strb	r3, [r2]
 410:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_ACT_PWRMGR_REG  |= Button_BufCH0_ACT_PWR_EN;
  60              		.loc 1 410 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F02003 		orr	r3, r3, #32
  64 0030 1370     		strb	r3, [r2]
 411:Generated_Source\PSoC5/Button.c ****         
 412:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 413:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_STBY_PWRMGR_REG |= Button_BufCH1_STBY_PWR_EN;
 414:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_ACT_PWRMGR_REG  |= Button_BufCH1_ACT_PWR_EN;
 415:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) */
 416:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
 417:Generated_Source\PSoC5/Button.c ****     
 418:Generated_Source\PSoC5/Button.c ****     /* Set reference on AMux Bus */
 419:Generated_Source\PSoC5/Button.c ****     #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
 420:Generated_Source\PSoC5/Button.c ****         /* Connect Vdac to AMux Bus */
 421:Generated_Source\PSoC5/Button.c ****         Button_AMuxCH0_Connect(Button_AMuxCH0_VREF_CHANNEL);
 422:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 423:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH1_Connect(Button_AMuxCH1_VREF_CHANNEL);
 424:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) */
 425:Generated_Source\PSoC5/Button.c ****         
 426:Generated_Source\PSoC5/Button.c ****     #else
 427:Generated_Source\PSoC5/Button.c ****         /* Enable CapSense Buf */
 428:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_CAPS_CFG0_REG |= Button_CSBUF_ENABLE;
  65              		.loc 1 428 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0732     		adds	r2, r2, #7
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 429:Generated_Source\PSoC5/Button.c ****         
 430:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 431:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_CAPS_CFG0_REG |= Button_CSBUF_ENABLE;
 432:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) */
 433:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS)*/
 434:Generated_Source\PSoC5/Button.c ****     
 435:Generated_Source\PSoC5/Button.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 435 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 436:Generated_Source\PSoC5/Button.c ****     
 437:Generated_Source\PSoC5/Button.c ****     /* Enable interrupt */
 438:Generated_Source\PSoC5/Button.c ****     CyIntEnable(Button_IsrCH0_ISR_NUMBER);
  75              		.loc 1 438 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 10


  76 0046 0222     		movs	r2, #2
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 439:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 440:Generated_Source\PSoC5/Button.c ****         CyIntEnable(Button_IsrCH1_ISR_NUMBER);
 441:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 442:Generated_Source\PSoC5/Button.c ****     
 443:Generated_Source\PSoC5/Button.c ****     /* Set CapSense Enable state */
 444:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG |= Button_CTRL_CAPSENSE_EN;
  79              		.loc 1 444 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 92640040 		.word	1073767570
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 75640040 		.word	1073767541
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	Button_Enable, .-Button_Enable
  96              		.section	.text.Button_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	Button_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	Button_FindNextSensor, %function
 102              	Button_FindNextSensor:
 103              	.LFB4:
 445:Generated_Source\PSoC5/Button.c **** }
 446:Generated_Source\PSoC5/Button.c **** 
 447:Generated_Source\PSoC5/Button.c **** 
 448:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 449:Generated_Source\PSoC5/Button.c **** * Function Name: Button_Start
 450:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 451:Generated_Source\PSoC5/Button.c **** *
 452:Generated_Source\PSoC5/Button.c **** * Summary:
 453:Generated_Source\PSoC5/Button.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 454:Generated_Source\PSoC5/Button.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 455:Generated_Source\PSoC5/Button.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 456:Generated_Source\PSoC5/Button.c **** *  applied for all sensors.
 457:Generated_Source\PSoC5/Button.c **** *
 458:Generated_Source\PSoC5/Button.c **** * Parameters:
 459:Generated_Source\PSoC5/Button.c **** *  None
 460:Generated_Source\PSoC5/Button.c **** *
 461:Generated_Source\PSoC5/Button.c **** * Return:
 462:Generated_Source\PSoC5/Button.c **** *  None
 463:Generated_Source\PSoC5/Button.c **** *
 464:Generated_Source\PSoC5/Button.c **** * Global Variables:
 465:Generated_Source\PSoC5/Button.c **** *  Button_initVar - used to check initial configuration, modified on 
 466:Generated_Source\PSoC5/Button.c **** *  first function call.
 467:Generated_Source\PSoC5/Button.c **** *  Button_lowLevelTuningDone - used to notify the Tuner GUI that 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 11


 468:Generated_Source\PSoC5/Button.c **** *  tuning of scanning parameters are done.
 469:Generated_Source\PSoC5/Button.c **** *
 470:Generated_Source\PSoC5/Button.c **** * Reentrant:
 471:Generated_Source\PSoC5/Button.c **** *  No
 472:Generated_Source\PSoC5/Button.c **** *
 473:Generated_Source\PSoC5/Button.c **** * Note:
 474:Generated_Source\PSoC5/Button.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 475:Generated_Source\PSoC5/Button.c **** *  must be manually enabled as their long scan time is incompatible 
 476:Generated_Source\PSoC5/Button.c **** *  with the fast response required of other widget types. 
 477:Generated_Source\PSoC5/Button.c **** *
 478:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 479:Generated_Source\PSoC5/Button.c **** void Button_Start(void)  
 480:Generated_Source\PSoC5/Button.c **** {
 481:Generated_Source\PSoC5/Button.c ****     if (Button_initVar == 0u)
 482:Generated_Source\PSoC5/Button.c ****     {
 483:Generated_Source\PSoC5/Button.c ****         Button_Init();
 484:Generated_Source\PSoC5/Button.c ****         Button_initVar = 1u;
 485:Generated_Source\PSoC5/Button.c ****     }
 486:Generated_Source\PSoC5/Button.c ****     Button_Enable();
 487:Generated_Source\PSoC5/Button.c ****     
 488:Generated_Source\PSoC5/Button.c ****     /* AutoTunning start */
 489:Generated_Source\PSoC5/Button.c ****     #if (Button_TUNING_METHOD == Button_AUTO_TUNING)
 490:Generated_Source\PSoC5/Button.c ****         /* AutoTune by sensor or pair of sensor basis */
 491:Generated_Source\PSoC5/Button.c ****         Button_AutoTune();
 492:Generated_Source\PSoC5/Button.c ****         Button_lowLevelTuningDone = 1u;
 493:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_TUNING_METHOD == Button_AUTO_TUNING) */
 494:Generated_Source\PSoC5/Button.c **** }
 495:Generated_Source\PSoC5/Button.c **** 
 496:Generated_Source\PSoC5/Button.c **** 
 497:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 498:Generated_Source\PSoC5/Button.c **** * Function Name: Button_Stop
 499:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 500:Generated_Source\PSoC5/Button.c **** *
 501:Generated_Source\PSoC5/Button.c **** * Summary:
 502:Generated_Source\PSoC5/Button.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 503:Generated_Source\PSoC5/Button.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 504:Generated_Source\PSoC5/Button.c **** *  number of component used within CapSense.
 505:Generated_Source\PSoC5/Button.c **** *
 506:Generated_Source\PSoC5/Button.c **** * Parameters:
 507:Generated_Source\PSoC5/Button.c **** *  None
 508:Generated_Source\PSoC5/Button.c **** *
 509:Generated_Source\PSoC5/Button.c **** * Return:
 510:Generated_Source\PSoC5/Button.c **** *  None
 511:Generated_Source\PSoC5/Button.c **** *
 512:Generated_Source\PSoC5/Button.c **** * Side Effects:
 513:Generated_Source\PSoC5/Button.c **** *  This function should be called after scans will be completed.
 514:Generated_Source\PSoC5/Button.c **** *
 515:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 516:Generated_Source\PSoC5/Button.c **** void Button_Stop(void) 
 517:Generated_Source\PSoC5/Button.c **** {
 518:Generated_Source\PSoC5/Button.c ****     /* Stop Capsensing */
 519:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG &= (uint8)(~Button_CTRL_START);
 520:Generated_Source\PSoC5/Button.c ****     
 521:Generated_Source\PSoC5/Button.c ****     /* Disable interrupt */
 522:Generated_Source\PSoC5/Button.c ****     CyIntDisable(Button_IsrCH0_ISR_NUMBER);
 523:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 524:Generated_Source\PSoC5/Button.c ****         CyIntDisable(Button_IsrCH1_ISR_NUMBER);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 12


 525:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 526:Generated_Source\PSoC5/Button.c ****     
 527:Generated_Source\PSoC5/Button.c ****     /* Clear all sensors */
 528:Generated_Source\PSoC5/Button.c ****     Button_ClearSensors();
 529:Generated_Source\PSoC5/Button.c ****     
 530:Generated_Source\PSoC5/Button.c ****     /* Disable Prescaler */
 531:Generated_Source\PSoC5/Button.c ****     #if (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB)
 532:Generated_Source\PSoC5/Button.c ****         /* Do nothing  for UDB */
 533:Generated_Source\PSoC5/Button.c ****     #elif (Button_PRESCALER_OPTIONS == Button_PRESCALER_FF)        
 534:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_ACT_PWRMGR_REG  &= ~Button_PRESCALER_ACT_PWR_EN;
 535:Generated_Source\PSoC5/Button.c ****         Button_PRESCALER_STBY_PWRMGR_REG &= ~Button_PRESCALER_STBY_PWR_EN;
 536:Generated_Source\PSoC5/Button.c ****         
 537:Generated_Source\PSoC5/Button.c ****     #else
 538:Generated_Source\PSoC5/Button.c ****         /* Do nothing = config without prescaler */
 539:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB) */
 540:Generated_Source\PSoC5/Button.c ****     
 541:Generated_Source\PSoC5/Button.c ****     /* Disable ScanSpeed */
 542:Generated_Source\PSoC5/Button.c ****     Button_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~Button_SCANSPEED_CTRL_ENABLE);
 543:Generated_Source\PSoC5/Button.c ****     
 544:Generated_Source\PSoC5/Button.c ****     /* Disable Measure CH0 */
 545:Generated_Source\PSoC5/Button.c ****     #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
 546:Generated_Source\PSoC5/Button.c ****         /* Window PWM */
 547:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_ACT_PWRMGR_REG  &= ~Button_PWM_CH0_ACT_PWR_EN;
 548:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_STBY_PWRMGR_REG &= ~Button_PWM_CH0_STBY_PWR_EN;
 549:Generated_Source\PSoC5/Button.c **** 
 550:Generated_Source\PSoC5/Button.c ****         /* Raw Counter */
 551:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_ACT_PWRMGR_REG  &= ~Button_RAW_CH0_ACT_PWR_EN;
 552:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_STBY_PWRMGR_REG &= ~Button_RAW_CH0_STBY_PWR_EN;
 553:Generated_Source\PSoC5/Button.c **** 
 554:Generated_Source\PSoC5/Button.c ****     #else
 555:Generated_Source\PSoC5/Button.c ****         /* Window PWM -  Do nothing */
 556:Generated_Source\PSoC5/Button.c ****         /* Raw Counter - Do nothing */
 557:Generated_Source\PSoC5/Button.c ****         
 558:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF) */ 
 559:Generated_Source\PSoC5/Button.c ****     
 560:Generated_Source\PSoC5/Button.c ****     /* Disable Measure CH1 */
 561:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 562:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)
 563:Generated_Source\PSoC5/Button.c ****             /* Window PWM */
 564:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_ACT_PWRMGR_REG  &= ~Button_PWM_CH1_ACT_PWR_EN;
 565:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH1_STBY_PWRMGR_REG &= ~Button_PWM_CH1_STBY_PWR_EN;
 566:Generated_Source\PSoC5/Button.c ****     
 567:Generated_Source\PSoC5/Button.c ****             /* Raw Counter */
 568:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_ACT_PWRMGR_REG  &= ~Button_RAW_CH1_ACT_PWR_EN;
 569:Generated_Source\PSoC5/Button.c ****             Button_RAW_CH1_STBY_PWRMGR_REG &= ~Button_RAW_CH1_STBY_PWR_EN;
 570:Generated_Source\PSoC5/Button.c ****            
 571:Generated_Source\PSoC5/Button.c ****         #else
 572:Generated_Source\PSoC5/Button.c ****         /* Window PWM -  Do nothing */
 573:Generated_Source\PSoC5/Button.c ****         /* Raw Counter - Do nothing */
 574:Generated_Source\PSoC5/Button.c ****         
 575:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF) */
 576:Generated_Source\PSoC5/Button.c ****     
 577:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 578:Generated_Source\PSoC5/Button.c ****     
 579:Generated_Source\PSoC5/Button.c ****     /* Disable the Clock */
 580:Generated_Source\PSoC5/Button.c ****     #if (Button_CLOCK_SOURCE == Button_INTERNAL_CLOCK)
 581:Generated_Source\PSoC5/Button.c ****        Button_IntClock_Stop();
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 13


 582:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CLOCK_SOURCE */
 583:Generated_Source\PSoC5/Button.c ****     
 584:Generated_Source\PSoC5/Button.c ****     /* Disable power from Cmp and Idac */
 585:Generated_Source\PSoC5/Button.c ****     Button_CompCH0_Stop();
 586:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 587:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_Stop();
 588:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 589:Generated_Source\PSoC5/Button.c ****     
 590:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 591:Generated_Source\PSoC5/Button.c ****         Button_CompCH1_Stop();
 592:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
 593:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_Stop();
 594:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 595:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */    
 596:Generated_Source\PSoC5/Button.c ****     
 597:Generated_Source\PSoC5/Button.c ****     /* Disable Vref if as VDAC */
 598:Generated_Source\PSoC5/Button.c ****     #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
 599:Generated_Source\PSoC5/Button.c ****         Button_VdacRefCH0_Stop();
 600:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 601:Generated_Source\PSoC5/Button.c ****             Button_VdacRefCH1_Stop();
 602:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_DESIGN_TYPE */
 603:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_VREF_OPTIONS */
 604:Generated_Source\PSoC5/Button.c **** 
 605:Generated_Source\PSoC5/Button.c ****     #if (Button_VREF_VDAC == Button_VREF_OPTIONS)
 606:Generated_Source\PSoC5/Button.c ****         /* The Idac turn off before */
 607:Generated_Source\PSoC5/Button.c ****     #else
 608:Generated_Source\PSoC5/Button.c ****         /* Enable CapSense Buf */
 609:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_CAPS_CFG0_REG &= (uint8)(~Button_CSBUF_ENABLE);
 610:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_ACT_PWRMGR_REG &= (uint8)(~Button_BufCH0_ACT_PWR_EN);
 611:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_STBY_PWRMGR_REG &= (uint8)(~Button_BufCH0_STBY_PWR_EN);
 612:Generated_Source\PSoC5/Button.c ****         
 613:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 614:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_CAPS_CFG0_REG &= (uint8)(~Button_CSBUF_ENABLE);
 615:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_ACT_PWRMGR_REG &= (uint8)(~Button_BufCH1_ACT_PWR_EN);
 616:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_STBY_PWRMGR_REG &= (uint8)(~Button_BufCH1_STBY_PWR_EN);
 617:Generated_Source\PSoC5/Button.c ****         #endif  /*(Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) */
 618:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
 619:Generated_Source\PSoC5/Button.c ****     
 620:Generated_Source\PSoC5/Button.c ****     /* Set CapSense Disable state */
 621:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG &= (uint8)(~Button_CTRL_CAPSENSE_EN);
 622:Generated_Source\PSoC5/Button.c **** }
 623:Generated_Source\PSoC5/Button.c **** 
 624:Generated_Source\PSoC5/Button.c **** 
 625:Generated_Source\PSoC5/Button.c **** #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
 626:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
 627:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_FindNextSensor
 628:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
 629:Generated_Source\PSoC5/Button.c ****     *
 630:Generated_Source\PSoC5/Button.c ****     * Summary:
 631:Generated_Source\PSoC5/Button.c ****     *  Finds next sensor to scan. 
 632:Generated_Source\PSoC5/Button.c ****     *
 633:Generated_Source\PSoC5/Button.c ****     * Parameters:
 634:Generated_Source\PSoC5/Button.c ****     *  snsIndex:  Current index of sensor.
 635:Generated_Source\PSoC5/Button.c ****     *
 636:Generated_Source\PSoC5/Button.c ****     * Return:
 637:Generated_Source\PSoC5/Button.c ****     *  Returns the next sensor index to scan.
 638:Generated_Source\PSoC5/Button.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 14


 639:Generated_Source\PSoC5/Button.c ****     * Global Variables:
 640:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[ ] - used to store bit masks of enabled 
 641:Generated_Source\PSoC5/Button.c ****     *  sensors.
 642:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[0] contains the masked bits for sensors 0
 643:Generated_Source\PSoC5/Button.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 644:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[1] contains the masked bits for sensors 
 645:Generated_Source\PSoC5/Button.c ****     *  8 through 15 (if needed), and so on.
 646:Generated_Source\PSoC5/Button.c ****     *    0 - sensor doesn't scan by Button_ScanEnabledWidgets().
 647:Generated_Source\PSoC5/Button.c ****     *    1 - sensor scans by Button_ScanEnabledWidgets().
 648:Generated_Source\PSoC5/Button.c ****     *
 649:Generated_Source\PSoC5/Button.c ****     * Note: 
 650:Generated_Source\PSoC5/Button.c ****     *  This function has effect on current scanning scanning and should not
 651:Generated_Source\PSoC5/Button.c ****     *  be used outisde of component.
 652:Generated_Source\PSoC5/Button.c ****     *
 653:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
 654:Generated_Source\PSoC5/Button.c ****     uint8 Button_FindNextSensor(uint8 snsIndex) CYREENTRANT
 655:Generated_Source\PSoC5/Button.c ****     {
 104              		.loc 1 655 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 656:Generated_Source\PSoC5/Button.c ****         uint8 pos;
 657:Generated_Source\PSoC5/Button.c ****         uint8 enMask;
 658:Generated_Source\PSoC5/Button.c ****         
 659:Generated_Source\PSoC5/Button.c ****         /* Check if sensor enabled */
 660:Generated_Source\PSoC5/Button.c ****         do
 661:Generated_Source\PSoC5/Button.c ****         {
 662:Generated_Source\PSoC5/Button.c ****             /* Proceed with the next sensor */
 663:Generated_Source\PSoC5/Button.c ****             snsIndex++;
 111              		.loc 1 663 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 664:Generated_Source\PSoC5/Button.c ****             if(snsIndex == Button_TOTAL_SENSOR_COUNT)
 115              		.loc 1 664 0
 116 0004 0228     		cmp	r0, #2
 117 0006 08D0     		beq	.L6
 665:Generated_Source\PSoC5/Button.c ****             {
 666:Generated_Source\PSoC5/Button.c ****                 break;
 667:Generated_Source\PSoC5/Button.c ****             }
 668:Generated_Source\PSoC5/Button.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 668 0
 119 0008 C208     		lsrs	r2, r0, #3
 669:Generated_Source\PSoC5/Button.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 669 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 670:Generated_Source\PSoC5/Button.c ****         }    
 671:Generated_Source\PSoC5/Button.c ****         while((Button_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 671 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 15


 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 672:Generated_Source\PSoC5/Button.c ****         
 673:Generated_Source\PSoC5/Button.c ****         return snsIndex;
 674:Generated_Source\PSoC5/Button.c ****     }
 132              		.loc 1 674 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	Button_FindNextSensor, .-Button_FindNextSensor
 141              		.section	.text.Button_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	Button_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	Button_IsBusy, %function
 147              	Button_IsBusy:
 148              	.LFB8:
 675:Generated_Source\PSoC5/Button.c ****  #endif  /* Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN */
 676:Generated_Source\PSoC5/Button.c ****  
 677:Generated_Source\PSoC5/Button.c ****  
 678:Generated_Source\PSoC5/Button.c **** #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 679:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
 680:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_FindNextPair
 681:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
 682:Generated_Source\PSoC5/Button.c ****     *
 683:Generated_Source\PSoC5/Button.c ****     * Summary:
 684:Generated_Source\PSoC5/Button.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 685:Generated_Source\PSoC5/Button.c ****     *  
 686:Generated_Source\PSoC5/Button.c ****     * Parameters:
 687:Generated_Source\PSoC5/Button.c ****     *  snsIndex:  Current index pair of sensors.
 688:Generated_Source\PSoC5/Button.c ****     *
 689:Generated_Source\PSoC5/Button.c ****     * Return:
 690:Generated_Source\PSoC5/Button.c ****     *  Returns the next pair of sensors index to scan.
 691:Generated_Source\PSoC5/Button.c ****     *
 692:Generated_Source\PSoC5/Button.c ****     * Global Variables:
 693:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[ ] - used to store bit masks of enabled 
 694:Generated_Source\PSoC5/Button.c ****     *  sensors.
 695:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[0] contains the masked bits for sensors 0
 696:Generated_Source\PSoC5/Button.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 697:Generated_Source\PSoC5/Button.c ****     *  Button_sensorEnableMask[1] contains the masked bits for sensors 
 698:Generated_Source\PSoC5/Button.c ****     *  8 through 15 (if needed), and so on.
 699:Generated_Source\PSoC5/Button.c ****     *    0 - sensor doesn't scan by Button_ScanEnabledWidgets().
 700:Generated_Source\PSoC5/Button.c ****     *    1 - sensor scans by Button_ScanEnabledWidgets().
 701:Generated_Source\PSoC5/Button.c ****     *
 702:Generated_Source\PSoC5/Button.c ****     * Note: 
 703:Generated_Source\PSoC5/Button.c ****     *  This function has effect on control signals set for scanning and should not
 704:Generated_Source\PSoC5/Button.c ****     *  be used outisde of component.
 705:Generated_Source\PSoC5/Button.c ****     *
 706:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
 707:Generated_Source\PSoC5/Button.c ****     uint8 Button_FindNextPair(uint8 snsIndex) CYREENTRANT
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 16


 708:Generated_Source\PSoC5/Button.c ****     {
 709:Generated_Source\PSoC5/Button.c ****         uint8 posCh;
 710:Generated_Source\PSoC5/Button.c ****         uint8 enMaskCh;
 711:Generated_Source\PSoC5/Button.c ****         uint8 newRegValue;
 712:Generated_Source\PSoC5/Button.c ****         uint8 indexCh0 = snsIndex;
 713:Generated_Source\PSoC5/Button.c ****         uint8 indexCh1 = snsIndex + Button_TOTAL_SENSOR_COUNT__CH0;
 714:Generated_Source\PSoC5/Button.c ****         
 715:Generated_Source\PSoC5/Button.c ****         /* Find enabled sensor on channel 0 */
 716:Generated_Source\PSoC5/Button.c ****         do
 717:Generated_Source\PSoC5/Button.c ****         {
 718:Generated_Source\PSoC5/Button.c ****             /* Procced the scanning */
 719:Generated_Source\PSoC5/Button.c ****             indexCh0++;
 720:Generated_Source\PSoC5/Button.c ****             if (indexCh0 >= Button_TOTAL_SENSOR_COUNT__CH0)
 721:Generated_Source\PSoC5/Button.c ****             {
 722:Generated_Source\PSoC5/Button.c ****                 /* Lets hadle now all from CH1 */
 723:Generated_Source\PSoC5/Button.c ****                 indexCh0 = Button_END_OF_SCAN__CH0;
 724:Generated_Source\PSoC5/Button.c ****                 break;
 725:Generated_Source\PSoC5/Button.c ****             }
 726:Generated_Source\PSoC5/Button.c ****             
 727:Generated_Source\PSoC5/Button.c ****             posCh = (indexCh0 >> 3u);
 728:Generated_Source\PSoC5/Button.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 729:Generated_Source\PSoC5/Button.c ****         }
 730:Generated_Source\PSoC5/Button.c ****         while((Button_sensorEnableMask[posCh] & enMaskCh) == 0u);
 731:Generated_Source\PSoC5/Button.c ****         
 732:Generated_Source\PSoC5/Button.c ****         /* Find enabled sensor on channel 1 */
 733:Generated_Source\PSoC5/Button.c ****         do
 734:Generated_Source\PSoC5/Button.c ****         {
 735:Generated_Source\PSoC5/Button.c ****             /* Procced the scanning */
 736:Generated_Source\PSoC5/Button.c ****             indexCh1++;        
 737:Generated_Source\PSoC5/Button.c ****             if (indexCh1 >= Button_TOTAL_SENSOR_COUNT)
 738:Generated_Source\PSoC5/Button.c ****             {
 739:Generated_Source\PSoC5/Button.c ****                 /* Lets hadle now all from CH0 */
 740:Generated_Source\PSoC5/Button.c ****                 indexCh1 = Button_END_OF_SCAN__CH1;
 741:Generated_Source\PSoC5/Button.c ****                 break;
 742:Generated_Source\PSoC5/Button.c ****             }
 743:Generated_Source\PSoC5/Button.c ****             
 744:Generated_Source\PSoC5/Button.c ****             posCh = (indexCh1 >> 3u);
 745:Generated_Source\PSoC5/Button.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 746:Generated_Source\PSoC5/Button.c ****         } 
 747:Generated_Source\PSoC5/Button.c ****         while((Button_sensorEnableMask[posCh] & enMaskCh) == 0u);
 748:Generated_Source\PSoC5/Button.c ****         
 749:Generated_Source\PSoC5/Button.c ****         indexCh1 -= Button_TOTAL_SENSOR_COUNT__CH0;
 750:Generated_Source\PSoC5/Button.c ****         
 751:Generated_Source\PSoC5/Button.c ****         /* Find the pair to scan */
 752:Generated_Source\PSoC5/Button.c ****         if(indexCh0 == indexCh1)
 753:Generated_Source\PSoC5/Button.c ****         {
 754:Generated_Source\PSoC5/Button.c ****             /* Scans TWO Channels */
 755:Generated_Source\PSoC5/Button.c ****             snsIndex = indexCh0;
 756:Generated_Source\PSoC5/Button.c ****             
 757:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG |= (Button_CTRL_WINDOW_EN__CH0 | 
 758:Generated_Source\PSoC5/Button.c ****                                              Button_CTRL_WINDOW_EN__CH1);
 759:Generated_Source\PSoC5/Button.c ****         }
 760:Generated_Source\PSoC5/Button.c ****         else if(indexCh0 < indexCh1)
 761:Generated_Source\PSoC5/Button.c ****         {
 762:Generated_Source\PSoC5/Button.c ****            /* Scans Channel ONE only */
 763:Generated_Source\PSoC5/Button.c ****            snsIndex = indexCh0;
 764:Generated_Source\PSoC5/Button.c ****            
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 17


 765:Generated_Source\PSoC5/Button.c ****             newRegValue = Button_CONTROL_REG;
 766:Generated_Source\PSoC5/Button.c ****             newRegValue |= Button_CTRL_WINDOW_EN__CH0;
 767:Generated_Source\PSoC5/Button.c ****             newRegValue &= ~Button_CTRL_WINDOW_EN__CH1;
 768:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG = newRegValue;
 769:Generated_Source\PSoC5/Button.c ****         }
 770:Generated_Source\PSoC5/Button.c ****         else
 771:Generated_Source\PSoC5/Button.c ****         {
 772:Generated_Source\PSoC5/Button.c ****             /* Scans Channel TWO only */
 773:Generated_Source\PSoC5/Button.c ****             snsIndex = indexCh1;
 774:Generated_Source\PSoC5/Button.c ****             
 775:Generated_Source\PSoC5/Button.c ****             newRegValue = Button_CONTROL_REG;
 776:Generated_Source\PSoC5/Button.c ****             newRegValue |= Button_CTRL_WINDOW_EN__CH1;
 777:Generated_Source\PSoC5/Button.c ****             newRegValue &= ~Button_CTRL_WINDOW_EN__CH0;
 778:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG = newRegValue;
 779:Generated_Source\PSoC5/Button.c ****         }
 780:Generated_Source\PSoC5/Button.c ****         
 781:Generated_Source\PSoC5/Button.c ****         return (snsIndex);
 782:Generated_Source\PSoC5/Button.c ****     }
 783:Generated_Source\PSoC5/Button.c **** #endif  /* Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN */
 784:Generated_Source\PSoC5/Button.c **** 
 785:Generated_Source\PSoC5/Button.c **** 
 786:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 787:Generated_Source\PSoC5/Button.c **** * Function Name: Button_SetScanSlotSettings
 788:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 789:Generated_Source\PSoC5/Button.c **** *
 790:Generated_Source\PSoC5/Button.c **** * Summary:
 791:Generated_Source\PSoC5/Button.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 792:Generated_Source\PSoC5/Button.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 793:Generated_Source\PSoC5/Button.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 794:Generated_Source\PSoC5/Button.c **** *  widget.
 795:Generated_Source\PSoC5/Button.c **** *
 796:Generated_Source\PSoC5/Button.c **** * Parameters:
 797:Generated_Source\PSoC5/Button.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 798:Generated_Source\PSoC5/Button.c **** *
 799:Generated_Source\PSoC5/Button.c **** * Return:
 800:Generated_Source\PSoC5/Button.c **** *  None
 801:Generated_Source\PSoC5/Button.c **** *
 802:Generated_Source\PSoC5/Button.c **** * Global Variables:
 803:Generated_Source\PSoC5/Button.c **** *  Button_idacSettings[] - used to store idac value for every sensor.
 804:Generated_Source\PSoC5/Button.c **** *  Button_widgetResolution[] - used to store scan resolution of every 
 805:Generated_Source\PSoC5/Button.c **** *  widget.
 806:Generated_Source\PSoC5/Button.c **** *
 807:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 808:Generated_Source\PSoC5/Button.c **** void Button_SetScanSlotSettings(uint8 slot) CYREENTRANT
 809:Generated_Source\PSoC5/Button.c **** {
 810:Generated_Source\PSoC5/Button.c ****     uint8 widget;
 811:Generated_Source\PSoC5/Button.c ****     
 812:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
 813:Generated_Source\PSoC5/Button.c ****         /* Define widget sensor belongs to */
 814:Generated_Source\PSoC5/Button.c ****         widget = Button_widgetNumber[slot];
 815:Generated_Source\PSoC5/Button.c ****         
 816:Generated_Source\PSoC5/Button.c ****         /* Set Idac Value */
 817:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
 818:Generated_Source\PSoC5/Button.c ****             Button_IdacCH0_SetValue(Button_idacSettings[slot]);
 819:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 820:Generated_Source\PSoC5/Button.c ****         
 821:Generated_Source\PSoC5/Button.c ****         /* Window PWM */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 18


 822:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
 823:Generated_Source\PSoC5/Button.c ****             CY_SET_REG16(Button_PWM_CH0_PERIOD_PTR,
 824:Generated_Source\PSoC5/Button.c ****                 ((uint16) Button_widgetResolution[widget] << 8u) | Button_MEASURE_FULL_RANGE_LOW);
 825:Generated_Source\PSoC5/Button.c ****         #else
 826:Generated_Source\PSoC5/Button.c ****             Button_PWM_CH0_PERIOD_HI_REG = Button_widgetResolution[widget];
 827:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF) */ 
 828:Generated_Source\PSoC5/Button.c **** 
 829:Generated_Source\PSoC5/Button.c ****         #if ( (Button_MULTIPLE_PRESCALER_ENABLED) || \
 830:Generated_Source\PSoC5/Button.c ****               (Button_TUNING_METHOD == Button_AUTO_TUNING) )
 831:Generated_Source\PSoC5/Button.c ****             Button_SetPrescaler(Button_analogSwitchDivider[slot]);
 832:Generated_Source\PSoC5/Button.c ****         #elif (Button_PRESCALER_OPTIONS)
 833:Generated_Source\PSoC5/Button.c ****             Button_SetPrescaler(Button_analogSwitchDivider);
 834:Generated_Source\PSoC5/Button.c ****         #endif /* ((Button_MULTIPLE_PRESCALER_ENABLED) || \
 835:Generated_Source\PSoC5/Button.c ****                *   (Button_TUNING_METHOD == Button_AUTO_TUNING))
 836:Generated_Source\PSoC5/Button.c ****                */
 837:Generated_Source\PSoC5/Button.c **** 
 838:Generated_Source\PSoC5/Button.c ****     #else
 839:Generated_Source\PSoC5/Button.c ****         if(slot < Button_TOTAL_SENSOR_COUNT__CH0)
 840:Generated_Source\PSoC5/Button.c ****         {
 841:Generated_Source\PSoC5/Button.c ****             /* Define widget sensor belongs to */
 842:Generated_Source\PSoC5/Button.c ****             widget = Button_widgetNumber[slot];
 843:Generated_Source\PSoC5/Button.c ****             
 844:Generated_Source\PSoC5/Button.c ****             /* Set Idac Value */
 845:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE)
 846:Generated_Source\PSoC5/Button.c ****                 Button_IdacCH0_SetValue(Button_idacSettings[slot]);
 847:Generated_Source\PSoC5/Button.c ****             #endif  /* Button_CURRENT_SOURCE */
 848:Generated_Source\PSoC5/Button.c ****             
 849:Generated_Source\PSoC5/Button.c ****             /* Set Pwm Resolution */
 850:Generated_Source\PSoC5/Button.c ****             #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
 851:Generated_Source\PSoC5/Button.c ****                 CY_SET_REG16(Button_PWM_CH0_PERIOD_PTR,
 852:Generated_Source\PSoC5/Button.c ****                   ((uint16) Button_widgetResolution[widget] << 8u) | Button_MEASURE_FULL_RANGE_LOW)
 853:Generated_Source\PSoC5/Button.c ****             #else
 854:Generated_Source\PSoC5/Button.c ****                 Button_PWM_CH0_PERIOD_HI_REG = Button_widgetResolution[widget];
 855:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)*/ 
 856:Generated_Source\PSoC5/Button.c ****         }
 857:Generated_Source\PSoC5/Button.c ****         
 858:Generated_Source\PSoC5/Button.c ****         if(slot < Button_TOTAL_SENSOR_COUNT__CH1)
 859:Generated_Source\PSoC5/Button.c ****         {
 860:Generated_Source\PSoC5/Button.c ****             widget = Button_widgetNumber[slot+Button_TOTAL_SENSOR_COUNT__CH0];
 861:Generated_Source\PSoC5/Button.c ****         
 862:Generated_Source\PSoC5/Button.c ****             /* Set Idac Value */
 863:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE)
 864:Generated_Source\PSoC5/Button.c ****                 Button_IdacCH1_SetValue(Button_idacSettings[slot+
 865:Generated_Source\PSoC5/Button.c ****                                                                              Button_TOTAL_SENSOR_CO
 866:Generated_Source\PSoC5/Button.c ****             #endif  /* Button_CURRENT_SOURCE */
 867:Generated_Source\PSoC5/Button.c ****             
 868:Generated_Source\PSoC5/Button.c ****             /* Set Pwm Resolution */
 869:Generated_Source\PSoC5/Button.c ****             #if (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)
 870:Generated_Source\PSoC5/Button.c ****                 CY_SET_REG16(Button_PWM_CH1_PERIOD_PTR,
 871:Generated_Source\PSoC5/Button.c ****                   ((uint16) Button_widgetResolution[widget] << 8u) | Button_MEASURE_FULL_RANGE_LOW)
 872:Generated_Source\PSoC5/Button.c ****             #else
 873:Generated_Source\PSoC5/Button.c ****                 Button_PWM_CH1_PERIOD_HI_REG = Button_widgetResolution[widget];
 874:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)*/ 
 875:Generated_Source\PSoC5/Button.c ****         }
 876:Generated_Source\PSoC5/Button.c **** 
 877:Generated_Source\PSoC5/Button.c ****         #if ( (Button_MULTIPLE_PRESCALER_ENABLED) || \
 878:Generated_Source\PSoC5/Button.c ****               (Button_TUNING_METHOD == Button_AUTO_TUNING) )
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 19


 879:Generated_Source\PSoC5/Button.c ****             Button_SetPrescaler(Button_analogSwitchDivider[slot]);
 880:Generated_Source\PSoC5/Button.c ****         #elif (Button_PRESCALER_OPTIONS)
 881:Generated_Source\PSoC5/Button.c ****             Button_SetPrescaler(Button_analogSwitchDivider);
 882:Generated_Source\PSoC5/Button.c ****         #endif /* ((Button_MULTIPLE_PRESCALER_ENABLED) || \
 883:Generated_Source\PSoC5/Button.c ****                *   (Button_TUNING_METHOD == Button_AUTO_TUNING))
 884:Generated_Source\PSoC5/Button.c ****                */
 885:Generated_Source\PSoC5/Button.c **** 
 886:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 887:Generated_Source\PSoC5/Button.c **** }
 888:Generated_Source\PSoC5/Button.c **** 
 889:Generated_Source\PSoC5/Button.c **** 
 890:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 891:Generated_Source\PSoC5/Button.c **** * Function Name: Button_ScanSensor
 892:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 893:Generated_Source\PSoC5/Button.c **** *
 894:Generated_Source\PSoC5/Button.c **** * Summary:
 895:Generated_Source\PSoC5/Button.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 896:Generated_Source\PSoC5/Button.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 897:Generated_Source\PSoC5/Button.c **** *  at the same time. After scanning is complete the isr copies the measured 
 898:Generated_Source\PSoC5/Button.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 899:Generated_Source\PSoC5/Button.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 900:Generated_Source\PSoC5/Button.c **** *  This number is assigned by the CapSense customizer in sequence.
 901:Generated_Source\PSoC5/Button.c **** *
 902:Generated_Source\PSoC5/Button.c **** * Parameters:
 903:Generated_Source\PSoC5/Button.c **** *  sensor:  Sensor number.
 904:Generated_Source\PSoC5/Button.c **** *
 905:Generated_Source\PSoC5/Button.c **** * Return:
 906:Generated_Source\PSoC5/Button.c **** *  None
 907:Generated_Source\PSoC5/Button.c **** *
 908:Generated_Source\PSoC5/Button.c **** * Global Variables:
 909:Generated_Source\PSoC5/Button.c **** *  Button_csv - used to provide status and mode of scanning process. 
 910:Generated_Source\PSoC5/Button.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 911:Generated_Source\PSoC5/Button.c **** *  For two channel design the additional bits are set to define if scan a 
 912:Generated_Source\PSoC5/Button.c **** *  pair of sensors or single one.
 913:Generated_Source\PSoC5/Button.c **** *  Button_sensorIndex - used to store sensor scanning sensor number.
 914:Generated_Source\PSoC5/Button.c **** *  Sets to provided sensor argument.
 915:Generated_Source\PSoC5/Button.c **** *
 916:Generated_Source\PSoC5/Button.c **** * Reentrant:
 917:Generated_Source\PSoC5/Button.c **** *  No
 918:Generated_Source\PSoC5/Button.c **** *
 919:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 920:Generated_Source\PSoC5/Button.c **** void Button_ScanSensor(uint8 sensor)  
 921:Generated_Source\PSoC5/Button.c **** {
 922:Generated_Source\PSoC5/Button.c ****     /* Clears status/control variable and set sensorIndex */
 923:Generated_Source\PSoC5/Button.c ****     Button_csv = 0u;
 924:Generated_Source\PSoC5/Button.c ****     Button_sensorIndex = sensor;
 925:Generated_Source\PSoC5/Button.c ****     
 926:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
 927:Generated_Source\PSoC5/Button.c ****         /* Start of sensor scan */
 928:Generated_Source\PSoC5/Button.c ****         Button_csv = (Button_SW_STS_BUSY | Button_SW_CTRL_SINGLE_SCAN);
 929:Generated_Source\PSoC5/Button.c ****         Button_PreScan(sensor);
 930:Generated_Source\PSoC5/Button.c ****         
 931:Generated_Source\PSoC5/Button.c ****     #else
 932:Generated_Source\PSoC5/Button.c ****         /* CH0: check end of scan conditions */
 933:Generated_Source\PSoC5/Button.c ****         if(sensor < Button_TOTAL_SENSOR_COUNT__CH0)
 934:Generated_Source\PSoC5/Button.c ****         {
 935:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG |= Button_CTRL_WINDOW_EN__CH0;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 20


 936:Generated_Source\PSoC5/Button.c ****         }
 937:Generated_Source\PSoC5/Button.c ****         else
 938:Generated_Source\PSoC5/Button.c ****         {
 939:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG &= ~Button_CTRL_WINDOW_EN__CH0;
 940:Generated_Source\PSoC5/Button.c ****         }
 941:Generated_Source\PSoC5/Button.c ****         
 942:Generated_Source\PSoC5/Button.c ****         /* CH1: check end of scan conditions */
 943:Generated_Source\PSoC5/Button.c ****         if(sensor < Button_TOTAL_SENSOR_COUNT__CH1)
 944:Generated_Source\PSoC5/Button.c ****         {
 945:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG |= Button_CTRL_WINDOW_EN__CH1;
 946:Generated_Source\PSoC5/Button.c ****         }
 947:Generated_Source\PSoC5/Button.c ****         else
 948:Generated_Source\PSoC5/Button.c ****         {
 949:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG &= ~Button_CTRL_WINDOW_EN__CH1;
 950:Generated_Source\PSoC5/Button.c ****         }
 951:Generated_Source\PSoC5/Button.c ****         
 952:Generated_Source\PSoC5/Button.c ****         /* Start sensor scan */
 953:Generated_Source\PSoC5/Button.c ****         if( ((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH0) != 0u) || 
 954:Generated_Source\PSoC5/Button.c ****             ((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH1) != 0u) )
 955:Generated_Source\PSoC5/Button.c ****         {
 956:Generated_Source\PSoC5/Button.c ****         
 957:Generated_Source\PSoC5/Button.c ****             Button_csv |= (Button_SW_STS_BUSY | Button_SW_CTRL_SINGLE_SCAN);
 958:Generated_Source\PSoC5/Button.c ****             Button_PreScan(sensor);
 959:Generated_Source\PSoC5/Button.c ****         }
 960:Generated_Source\PSoC5/Button.c ****         
 961:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
 962:Generated_Source\PSoC5/Button.c **** }
 963:Generated_Source\PSoC5/Button.c **** 
 964:Generated_Source\PSoC5/Button.c **** 
 965:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/Button.c **** * Function Name: Button_ScanEnableWidgets
 967:Generated_Source\PSoC5/Button.c **** ********************************************************************************
 968:Generated_Source\PSoC5/Button.c **** *
 969:Generated_Source\PSoC5/Button.c **** * Summary:
 970:Generated_Source\PSoC5/Button.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 971:Generated_Source\PSoC5/Button.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 972:Generated_Source\PSoC5/Button.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 973:Generated_Source\PSoC5/Button.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 974:Generated_Source\PSoC5/Button.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 975:Generated_Source\PSoC5/Button.c **** *  incompatible with fast response desired of other widget types.
 976:Generated_Source\PSoC5/Button.c **** *
 977:Generated_Source\PSoC5/Button.c **** * Parameters:
 978:Generated_Source\PSoC5/Button.c **** *  None
 979:Generated_Source\PSoC5/Button.c **** *
 980:Generated_Source\PSoC5/Button.c **** * Return:
 981:Generated_Source\PSoC5/Button.c **** *  None
 982:Generated_Source\PSoC5/Button.c **** *
 983:Generated_Source\PSoC5/Button.c **** * Global Variables:
 984:Generated_Source\PSoC5/Button.c **** *  Button_csv - used to provide status and mode of scanning process. 
 985:Generated_Source\PSoC5/Button.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 986:Generated_Source\PSoC5/Button.c **** *  For two channel design the additional bits are set to define if scan a 
 987:Generated_Source\PSoC5/Button.c **** *  pair of sensors or single one. 
 988:Generated_Source\PSoC5/Button.c **** *  Button_sensorIndex - used to store sensor scanning sensor number.
 989:Generated_Source\PSoC5/Button.c **** *  Sets to 0xFF and provided to function Button_FindNextSensor or
 990:Generated_Source\PSoC5/Button.c **** *  Button_FindNextPair, these functions starts with sensor index
 991:Generated_Source\PSoC5/Button.c **** *  increment and overflow of uint8 gives desired index 0.
 992:Generated_Source\PSoC5/Button.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 21


 993:Generated_Source\PSoC5/Button.c **** * Reentrant:
 994:Generated_Source\PSoC5/Button.c **** *  No
 995:Generated_Source\PSoC5/Button.c **** *
 996:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
 997:Generated_Source\PSoC5/Button.c **** void Button_ScanEnabledWidgets(void) 
 998:Generated_Source\PSoC5/Button.c **** {
 999:Generated_Source\PSoC5/Button.c ****     /* Clears status/control variable and set sensorIndex */
1000:Generated_Source\PSoC5/Button.c ****     Button_csv = 0u;
1001:Generated_Source\PSoC5/Button.c ****     Button_sensorIndex = 0xFFu;
1002:Generated_Source\PSoC5/Button.c ****     
1003:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1004:Generated_Source\PSoC5/Button.c ****         /* Find next sensor */
1005:Generated_Source\PSoC5/Button.c ****         Button_sensorIndex = Button_FindNextSensor(Button_sensorIndex);
1006:Generated_Source\PSoC5/Button.c **** 
1007:Generated_Source\PSoC5/Button.c ****         /* Check end of scan condition */
1008:Generated_Source\PSoC5/Button.c ****         if(Button_sensorIndex < Button_TOTAL_SENSOR_COUNT)
1009:Generated_Source\PSoC5/Button.c ****         {
1010:Generated_Source\PSoC5/Button.c ****             Button_csv |= Button_SW_STS_BUSY;
1011:Generated_Source\PSoC5/Button.c ****             Button_PreScan(Button_sensorIndex);
1012:Generated_Source\PSoC5/Button.c ****         }
1013:Generated_Source\PSoC5/Button.c ****         
1014:Generated_Source\PSoC5/Button.c ****     #else
1015:Generated_Source\PSoC5/Button.c ****         /* Find next sensor and set proper control register */
1016:Generated_Source\PSoC5/Button.c ****         Button_sensorIndex = Button_FindNextPair(Button_sensorIndex);
1017:Generated_Source\PSoC5/Button.c ****         
1018:Generated_Source\PSoC5/Button.c ****         /* Start sensor scan */
1019:Generated_Source\PSoC5/Button.c ****         if((Button_sensorIndex < Button_TOTAL_SENSOR_COUNT__CH0) || 
1020:Generated_Source\PSoC5/Button.c ****            (Button_sensorIndex < Button_TOTAL_SENSOR_COUNT__CH1))
1021:Generated_Source\PSoC5/Button.c ****         {
1022:Generated_Source\PSoC5/Button.c ****             Button_csv |= Button_SW_STS_BUSY;
1023:Generated_Source\PSoC5/Button.c ****             Button_PreScan(Button_sensorIndex);
1024:Generated_Source\PSoC5/Button.c ****         }
1025:Generated_Source\PSoC5/Button.c ****         
1026:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
1027:Generated_Source\PSoC5/Button.c **** }
1028:Generated_Source\PSoC5/Button.c **** 
1029:Generated_Source\PSoC5/Button.c **** 
1030:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1031:Generated_Source\PSoC5/Button.c **** * Function Name: Button_IsBusy
1032:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1033:Generated_Source\PSoC5/Button.c **** *
1034:Generated_Source\PSoC5/Button.c **** * Summary:
1035:Generated_Source\PSoC5/Button.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1036:Generated_Source\PSoC5/Button.c **** *  progress and 0 means that scanning is complete.
1037:Generated_Source\PSoC5/Button.c **** *
1038:Generated_Source\PSoC5/Button.c **** * Parameters:
1039:Generated_Source\PSoC5/Button.c **** *  None
1040:Generated_Source\PSoC5/Button.c **** *
1041:Generated_Source\PSoC5/Button.c **** * Return:
1042:Generated_Source\PSoC5/Button.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1043:Generated_Source\PSoC5/Button.c **** *  completed.
1044:Generated_Source\PSoC5/Button.c **** *
1045:Generated_Source\PSoC5/Button.c **** * Global Variables:
1046:Generated_Source\PSoC5/Button.c **** *  Button_csv - used to provide status and mode of scanning process. 
1047:Generated_Source\PSoC5/Button.c **** *  Checks the busy status.
1048:Generated_Source\PSoC5/Button.c **** *
1049:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 22


1050:Generated_Source\PSoC5/Button.c **** uint8 Button_IsBusy(void) 
1051:Generated_Source\PSoC5/Button.c **** {
 149              		.loc 1 1051 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1052:Generated_Source\PSoC5/Button.c ****     return ((0u != (Button_csv & Button_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1052 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1053:Generated_Source\PSoC5/Button.c **** }
 157              		.loc 1 1053 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	Button_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	Button_IsBusy, .-Button_IsBusy
 167              		.section	.text.Button_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	Button_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	Button_ReadSensorRaw, %function
 173              	Button_ReadSensorRaw:
 174              	.LFB9:
1054:Generated_Source\PSoC5/Button.c **** 
1055:Generated_Source\PSoC5/Button.c **** 
1056:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1057:Generated_Source\PSoC5/Button.c **** * Function Name: Button_ReadSensorRaw
1058:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1059:Generated_Source\PSoC5/Button.c **** *
1060:Generated_Source\PSoC5/Button.c **** * Summary:
1061:Generated_Source\PSoC5/Button.c **** *  Returns scan sensor raw data from the Button_sensorRaw[] array. 
1062:Generated_Source\PSoC5/Button.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1063:Generated_Source\PSoC5/Button.c **** *  is assigned by the CapSense customizer in sequence.
1064:Generated_Source\PSoC5/Button.c **** *
1065:Generated_Source\PSoC5/Button.c **** * Parameters:
1066:Generated_Source\PSoC5/Button.c **** *  sensor:  Sensor number.
1067:Generated_Source\PSoC5/Button.c **** *
1068:Generated_Source\PSoC5/Button.c **** * Return:
1069:Generated_Source\PSoC5/Button.c **** *  Returns current raw data value for defined sensor number.
1070:Generated_Source\PSoC5/Button.c **** *
1071:Generated_Source\PSoC5/Button.c **** * Global Variables:
1072:Generated_Source\PSoC5/Button.c **** *  Button_sensorRaw[] - used to store sensors raw data.
1073:Generated_Source\PSoC5/Button.c **** *
1074:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1075:Generated_Source\PSoC5/Button.c **** uint16 Button_ReadSensorRaw(uint8 sensor) 
1076:Generated_Source\PSoC5/Button.c **** {
 175              		.loc 1 1076 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 23


 179              		@ link register save eliminated.
 180              	.LVL11:
1077:Generated_Source\PSoC5/Button.c ****     return (Button_sensorRaw[sensor]);
1078:Generated_Source\PSoC5/Button.c **** }
 181              		.loc 1 1078 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	Button_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	Button_ReadSensorRaw, .-Button_ReadSensorRaw
 193              		.section	.text.Button_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	Button_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	Button_EnableSensor, %function
 199              	Button_EnableSensor:
 200              	.LFB11:
1079:Generated_Source\PSoC5/Button.c **** 
1080:Generated_Source\PSoC5/Button.c **** 
1081:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1082:Generated_Source\PSoC5/Button.c **** * Function Name: Button_ClearSensors
1083:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1084:Generated_Source\PSoC5/Button.c **** *
1085:Generated_Source\PSoC5/Button.c **** * Summary:
1086:Generated_Source\PSoC5/Button.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1087:Generated_Source\PSoC5/Button.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1088:Generated_Source\PSoC5/Button.c **** *
1089:Generated_Source\PSoC5/Button.c **** * Parameters:
1090:Generated_Source\PSoC5/Button.c **** *  None
1091:Generated_Source\PSoC5/Button.c **** *
1092:Generated_Source\PSoC5/Button.c **** * Return:
1093:Generated_Source\PSoC5/Button.c **** *  None
1094:Generated_Source\PSoC5/Button.c **** *
1095:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1096:Generated_Source\PSoC5/Button.c **** void Button_ClearSensors(void) 
1097:Generated_Source\PSoC5/Button.c **** {
1098:Generated_Source\PSoC5/Button.c ****     uint8 i;
1099:Generated_Source\PSoC5/Button.c ****    
1100:Generated_Source\PSoC5/Button.c ****     for (i = 0u; i < Button_TOTAL_SENSOR_COUNT; i++)
1101:Generated_Source\PSoC5/Button.c ****     {
1102:Generated_Source\PSoC5/Button.c ****         Button_DisableScanSlot(i);
1103:Generated_Source\PSoC5/Button.c ****     }
1104:Generated_Source\PSoC5/Button.c **** }
1105:Generated_Source\PSoC5/Button.c **** 
1106:Generated_Source\PSoC5/Button.c **** 
1107:Generated_Source\PSoC5/Button.c **** #if (Button_IS_COMPLEX_SCANSLOTS)
1108:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1109:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_EnableScanSlot
1110:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1111:Generated_Source\PSoC5/Button.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 24


1112:Generated_Source\PSoC5/Button.c ****     * Summary:
1113:Generated_Source\PSoC5/Button.c ****     *  Configures the selected slot to measure during the next measurement 
1114:Generated_Source\PSoC5/Button.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1115:Generated_Source\PSoC5/Button.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1116:Generated_Source\PSoC5/Button.c ****     *
1117:Generated_Source\PSoC5/Button.c ****     * Parameters:
1118:Generated_Source\PSoC5/Button.c ****     *  slot:  Slot number.
1119:Generated_Source\PSoC5/Button.c ****     *
1120:Generated_Source\PSoC5/Button.c ****     * Return:
1121:Generated_Source\PSoC5/Button.c ****     *  None
1122:Generated_Source\PSoC5/Button.c ****     *
1123:Generated_Source\PSoC5/Button.c ****     * Global Constants:
1124:Generated_Source\PSoC5/Button.c ****     *  Button_portTable[]  - used to store the port number that pin 
1125:Generated_Source\PSoC5/Button.c ****     *  belongs to for every sensor.
1126:Generated_Source\PSoC5/Button.c ****     *  Button_maskTable[]  - used to store the pin within the port for 
1127:Generated_Source\PSoC5/Button.c ****     *  every sensor.
1128:Generated_Source\PSoC5/Button.c ****     *  Button_indexTable[] - used to store indexes of complex sensors.
1129:Generated_Source\PSoC5/Button.c ****     *  The offset and position in this array are stored in port and mask table for 
1130:Generated_Source\PSoC5/Button.c ****     *  complex sensors.
1131:Generated_Source\PSoC5/Button.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1132:Generated_Source\PSoC5/Button.c ****     *
1133:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1134:Generated_Source\PSoC5/Button.c ****     void Button_EnableScanSlot(uint8 slot) CYREENTRANT
1135:Generated_Source\PSoC5/Button.c ****     {
1136:Generated_Source\PSoC5/Button.c ****         uint8 j;
1137:Generated_Source\PSoC5/Button.c ****         uint8 snsNumber;
1138:Generated_Source\PSoC5/Button.c ****         const uint8 CYCODE *index;
1139:Generated_Source\PSoC5/Button.c ****         /* Read the sensor type: single or complex */
1140:Generated_Source\PSoC5/Button.c ****         uint8 snsType = Button_portTable[slot];
1141:Generated_Source\PSoC5/Button.c ****         
1142:Generated_Source\PSoC5/Button.c ****         /* Check if sensor is complex */
1143:Generated_Source\PSoC5/Button.c ****         if ((snsType & Button_COMPLEX_SS_FLAG) == 0u)
1144:Generated_Source\PSoC5/Button.c ****         {
1145:Generated_Source\PSoC5/Button.c ****             /* Enable sensor (signle) */
1146:Generated_Source\PSoC5/Button.c ****             Button_EnableSensor(slot);
1147:Generated_Source\PSoC5/Button.c ****         }
1148:Generated_Source\PSoC5/Button.c ****         else
1149:Generated_Source\PSoC5/Button.c ****         {
1150:Generated_Source\PSoC5/Button.c ****             /* Enable complex sensor */
1151:Generated_Source\PSoC5/Button.c ****             snsType &= ~Button_COMPLEX_SS_FLAG;
1152:Generated_Source\PSoC5/Button.c ****             index = &Button_indexTable[snsType];
1153:Generated_Source\PSoC5/Button.c ****             snsNumber = Button_maskTable[slot];
1154:Generated_Source\PSoC5/Button.c ****                         
1155:Generated_Source\PSoC5/Button.c ****             for (j=0u; j < snsNumber; j++)
1156:Generated_Source\PSoC5/Button.c ****             {
1157:Generated_Source\PSoC5/Button.c ****                 Button_EnableSensor(index[j]);
1158:Generated_Source\PSoC5/Button.c ****             }
1159:Generated_Source\PSoC5/Button.c ****         } 
1160:Generated_Source\PSoC5/Button.c ****     }
1161:Generated_Source\PSoC5/Button.c ****     
1162:Generated_Source\PSoC5/Button.c ****     
1163:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1164:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_DisableScanSlot
1165:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1166:Generated_Source\PSoC5/Button.c ****     *
1167:Generated_Source\PSoC5/Button.c ****     * Summary:
1168:Generated_Source\PSoC5/Button.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 25


1169:Generated_Source\PSoC5/Button.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1170:Generated_Source\PSoC5/Button.c ****     *
1171:Generated_Source\PSoC5/Button.c ****     * Parameters:
1172:Generated_Source\PSoC5/Button.c ****     *  slot:  Slot number.
1173:Generated_Source\PSoC5/Button.c ****     *
1174:Generated_Source\PSoC5/Button.c ****     * Return:
1175:Generated_Source\PSoC5/Button.c ****     *  None
1176:Generated_Source\PSoC5/Button.c ****     *
1177:Generated_Source\PSoC5/Button.c ****     * Global Variables:
1178:Generated_Source\PSoC5/Button.c ****     *  Button_portTable[]  - used to store the port number that pin 
1179:Generated_Source\PSoC5/Button.c ****     *  belongs to for every sensor.
1180:Generated_Source\PSoC5/Button.c ****     *  Button_maskTable[]  - used to store the pin within the port for 
1181:Generated_Source\PSoC5/Button.c ****     *  every sensor.
1182:Generated_Source\PSoC5/Button.c ****     *  Button_indexTable[] - used to store indexes of complex sensors.
1183:Generated_Source\PSoC5/Button.c ****     *  The offset and position in this array are stored in port and mask table for 
1184:Generated_Source\PSoC5/Button.c ****     *  complex sensors.
1185:Generated_Source\PSoC5/Button.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1186:Generated_Source\PSoC5/Button.c ****     *
1187:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1188:Generated_Source\PSoC5/Button.c ****     void Button_DisableScanSlot(uint8 slot) CYREENTRANT
1189:Generated_Source\PSoC5/Button.c ****     {
1190:Generated_Source\PSoC5/Button.c ****         uint8 j;
1191:Generated_Source\PSoC5/Button.c ****         uint8 snsNumber;
1192:Generated_Source\PSoC5/Button.c ****         const uint8 CYCODE *index;
1193:Generated_Source\PSoC5/Button.c ****         /* Read the sensor type: single or complex */
1194:Generated_Source\PSoC5/Button.c ****         uint8 snsType = Button_portTable[slot];
1195:Generated_Source\PSoC5/Button.c ****         
1196:Generated_Source\PSoC5/Button.c ****         /* Check if sensor is complex */
1197:Generated_Source\PSoC5/Button.c ****         if ((snsType & Button_COMPLEX_SS_FLAG) == 0u)
1198:Generated_Source\PSoC5/Button.c ****         {
1199:Generated_Source\PSoC5/Button.c ****             /* Disable sensor (signle) */
1200:Generated_Source\PSoC5/Button.c ****             Button_DisableSensor(slot);
1201:Generated_Source\PSoC5/Button.c ****         }
1202:Generated_Source\PSoC5/Button.c ****         else
1203:Generated_Source\PSoC5/Button.c ****         {
1204:Generated_Source\PSoC5/Button.c ****             /* Disable complex sensor */
1205:Generated_Source\PSoC5/Button.c ****             snsType &= ~Button_COMPLEX_SS_FLAG;
1206:Generated_Source\PSoC5/Button.c ****             index = &Button_indexTable[snsType];
1207:Generated_Source\PSoC5/Button.c ****             snsNumber = Button_maskTable[slot];
1208:Generated_Source\PSoC5/Button.c ****                         
1209:Generated_Source\PSoC5/Button.c ****             for (j=0u; j < snsNumber; j++)
1210:Generated_Source\PSoC5/Button.c ****             {
1211:Generated_Source\PSoC5/Button.c ****                 Button_DisableSensor(index[j]);
1212:Generated_Source\PSoC5/Button.c ****             }
1213:Generated_Source\PSoC5/Button.c ****         } 
1214:Generated_Source\PSoC5/Button.c ****     }
1215:Generated_Source\PSoC5/Button.c **** #endif  /* Button_IS_COMPLEX_SCANSLOTS */
1216:Generated_Source\PSoC5/Button.c **** 
1217:Generated_Source\PSoC5/Button.c **** 
1218:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1219:Generated_Source\PSoC5/Button.c **** * Function Name: Button_EnableSensor
1220:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1221:Generated_Source\PSoC5/Button.c **** *
1222:Generated_Source\PSoC5/Button.c **** * Summary:
1223:Generated_Source\PSoC5/Button.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1224:Generated_Source\PSoC5/Button.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1225:Generated_Source\PSoC5/Button.c **** *  Analog Mux Bus. This also enables the comparator function.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 26


1226:Generated_Source\PSoC5/Button.c **** *
1227:Generated_Source\PSoC5/Button.c **** * Parameters:
1228:Generated_Source\PSoC5/Button.c **** *  sensor:  Sensor number.
1229:Generated_Source\PSoC5/Button.c **** *
1230:Generated_Source\PSoC5/Button.c **** * Return:
1231:Generated_Source\PSoC5/Button.c **** *  None
1232:Generated_Source\PSoC5/Button.c **** *
1233:Generated_Source\PSoC5/Button.c **** * Global Variables:
1234:Generated_Source\PSoC5/Button.c **** *  Button_portTable[] - used to store the port number that pin 
1235:Generated_Source\PSoC5/Button.c **** *  belongs to for every sensor.
1236:Generated_Source\PSoC5/Button.c **** *  Button_maskTable[] - used to store the pin within the port for 
1237:Generated_Source\PSoC5/Button.c **** *  every sensor.
1238:Generated_Source\PSoC5/Button.c **** *  Button_csTable[]   - used to store the pointers to CAPS_SEL 
1239:Generated_Source\PSoC5/Button.c **** *  registers for every port.
1240:Generated_Source\PSoC5/Button.c **** *  Button_pcTable[]   - used to store the pointers to PC pin 
1241:Generated_Source\PSoC5/Button.c **** *  register for every sensor.
1242:Generated_Source\PSoC5/Button.c **** *  Button_amuxIndex[] - used to store corrected AMUX index when 
1243:Generated_Source\PSoC5/Button.c **** *  complex sensors are defeined.
1244:Generated_Source\PSoC5/Button.c **** *
1245:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1246:Generated_Source\PSoC5/Button.c **** void Button_EnableSensor(uint8 sensor) CYREENTRANT
1247:Generated_Source\PSoC5/Button.c **** {
 201              		.loc 1 1247 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 10B5     		push	{r4, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
1248:Generated_Source\PSoC5/Button.c ****     uint8 port = Button_portTable[sensor];
 210              		.loc 1 1248 0
 211 0002 0B4B     		ldr	r3, .L20
 212 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 213              	.LVL14:
1249:Generated_Source\PSoC5/Button.c ****     uint8 mask = Button_maskTable[sensor];
 214              		.loc 1 1249 0
 215 0006 1A18     		adds	r2, r3, r0
 216 0008 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 217              	.LVL15:
1250:Generated_Source\PSoC5/Button.c ****     
1251:Generated_Source\PSoC5/Button.c ****     #if ((Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
1252:Generated_Source\PSoC5/Button.c ****          (Button_IS_COMPLEX_SCANSLOTS))
1253:Generated_Source\PSoC5/Button.c ****         uint8 amuxCh = Button_amuxIndex[sensor];
1254:Generated_Source\PSoC5/Button.c ****     #endif  /* ((Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
1255:Generated_Source\PSoC5/Button.c ****             *   (Button_IS_COMPLEX_SCANSLOTS))
1256:Generated_Source\PSoC5/Button.c ****             */
1257:Generated_Source\PSoC5/Button.c ****     
1258:Generated_Source\PSoC5/Button.c ****     /* Make sensor High-Z */
1259:Generated_Source\PSoC5/Button.c ****     *Button_pcTable[sensor] = Button_PRT_PC_HIGHZ;
 218              		.loc 1 1259 0
 219 000a 03EB8003 		add	r3, r3, r0, lsl #2
 220 000e 9B68     		ldr	r3, [r3, #8]
 221 0010 0922     		movs	r2, #9
 222 0012 1A70     		strb	r2, [r3]
1260:Generated_Source\PSoC5/Button.c ****     
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 27


1261:Generated_Source\PSoC5/Button.c ****     /* Connect to DSI output */
1262:Generated_Source\PSoC5/Button.c **** 	if(port == 15u)
 223              		.loc 1 1262 0
 224 0014 0F29     		cmp	r1, #15
 225 0016 00D1     		bne	.L17
1263:Generated_Source\PSoC5/Button.c **** 	{
1264:Generated_Source\PSoC5/Button.c **** 		port = 7u;
 226              		.loc 1 1264 0
 227 0018 0721     		movs	r1, #7
 228              	.LVL16:
 229              	.L17:
1265:Generated_Source\PSoC5/Button.c **** 	}
1266:Generated_Source\PSoC5/Button.c ****     *Button_csTable[port] |= mask;
 230              		.loc 1 1266 0
 231 001a 054A     		ldr	r2, .L20
 232 001c 02EB8102 		add	r2, r2, r1, lsl #2
 233 0020 1269     		ldr	r2, [r2, #16]
 234 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 0024 2343     		orrs	r3, r3, r4
 236 0026 1370     		strb	r3, [r2]
1267:Generated_Source\PSoC5/Button.c ****     
1268:Generated_Source\PSoC5/Button.c ****     /* Connect to AMUX */
1269:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1270:Generated_Source\PSoC5/Button.c ****         #if (Button_IS_COMPLEX_SCANSLOTS)
1271:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Connect(Button_amuxIndex[sensor]);
1272:Generated_Source\PSoC5/Button.c ****         #else
1273:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Connect(sensor);
 237              		.loc 1 1273 0
 238 0028 FFF7FEFF 		bl	Button_AMuxCH0_Set
 239              	.LVL17:
 240 002c 10BD     		pop	{r4, pc}
 241              	.LVL18:
 242              	.L21:
 243 002e 00BF     		.align	2
 244              	.L20:
 245 0030 00000000 		.word	.LANCHOR1
 246              		.cfi_endproc
 247              	.LFE11:
 248              		.size	Button_EnableSensor, .-Button_EnableSensor
 249              		.section	.text.Button_DisableSensor,"ax",%progbits
 250              		.align	2
 251              		.global	Button_DisableSensor
 252              		.thumb
 253              		.thumb_func
 254              		.type	Button_DisableSensor, %function
 255              	Button_DisableSensor:
 256              	.LFB12:
1274:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_IS_COMPLEX_SCANSLOTS */
1275:Generated_Source\PSoC5/Button.c ****                 
1276:Generated_Source\PSoC5/Button.c ****     #else
1277:Generated_Source\PSoC5/Button.c ****         #if (Button_IS_COMPLEX_SCANSLOTS)
1278:Generated_Source\PSoC5/Button.c ****             if ((amuxCh & Button_CHANNEL1_FLAG) == 0u)
1279:Generated_Source\PSoC5/Button.c ****             {
1280:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Connect(amuxCh);
1281:Generated_Source\PSoC5/Button.c ****             } 
1282:Generated_Source\PSoC5/Button.c ****             else
1283:Generated_Source\PSoC5/Button.c ****             {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 28


1284:Generated_Source\PSoC5/Button.c ****                 amuxCh &= ~ Button_CHANNEL1_FLAG;
1285:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Connect(amuxCh);
1286:Generated_Source\PSoC5/Button.c ****             }
1287:Generated_Source\PSoC5/Button.c ****             
1288:Generated_Source\PSoC5/Button.c ****         #else
1289:Generated_Source\PSoC5/Button.c ****             if (sensor < Button_TOTAL_SENSOR_COUNT__CH0) 
1290:Generated_Source\PSoC5/Button.c ****             {
1291:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Connect(sensor);
1292:Generated_Source\PSoC5/Button.c ****             } 
1293:Generated_Source\PSoC5/Button.c ****             else
1294:Generated_Source\PSoC5/Button.c ****             {
1295:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Connect(sensor - Button_TOTAL_SENSOR_COUNT__CH0);
1296:Generated_Source\PSoC5/Button.c ****             }
1297:Generated_Source\PSoC5/Button.c ****             
1298:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_IS_COMPLEX_SCANSLOTS */
1299:Generated_Source\PSoC5/Button.c ****         
1300:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN */
1301:Generated_Source\PSoC5/Button.c **** }
1302:Generated_Source\PSoC5/Button.c **** 
1303:Generated_Source\PSoC5/Button.c **** 
1304:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1305:Generated_Source\PSoC5/Button.c **** * Function Name: Button_DisableSensor
1306:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1307:Generated_Source\PSoC5/Button.c **** *
1308:Generated_Source\PSoC5/Button.c **** * Summary:
1309:Generated_Source\PSoC5/Button.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1310:Generated_Source\PSoC5/Button.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1311:Generated_Source\PSoC5/Button.c **** *
1312:Generated_Source\PSoC5/Button.c **** * Parameters:
1313:Generated_Source\PSoC5/Button.c **** *  sensor:  Sensor number
1314:Generated_Source\PSoC5/Button.c **** *
1315:Generated_Source\PSoC5/Button.c **** * Return:
1316:Generated_Source\PSoC5/Button.c **** *  None
1317:Generated_Source\PSoC5/Button.c **** *
1318:Generated_Source\PSoC5/Button.c **** * Global Variables:
1319:Generated_Source\PSoC5/Button.c **** *  Button_portTable[] - used to store the port number that pin 
1320:Generated_Source\PSoC5/Button.c **** *  belongs to for every sensor.
1321:Generated_Source\PSoC5/Button.c **** *  Button_maskTable[] - used to store the pin within the port for 
1322:Generated_Source\PSoC5/Button.c **** *  every sensor.
1323:Generated_Source\PSoC5/Button.c **** *  Button_csTable[]   - used to store the pointers to CAPS_SEL 
1324:Generated_Source\PSoC5/Button.c **** *  registers for every port.
1325:Generated_Source\PSoC5/Button.c **** *  Button_pcTable[]   - used to store the pointers to PC pin 
1326:Generated_Source\PSoC5/Button.c **** *  register for every sensor.
1327:Generated_Source\PSoC5/Button.c **** *  Button_amuxIndex[] - used to store corrected AMUX index when 
1328:Generated_Source\PSoC5/Button.c **** *  complex sensors are defeined.
1329:Generated_Source\PSoC5/Button.c **** *
1330:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1331:Generated_Source\PSoC5/Button.c **** void Button_DisableSensor(uint8 sensor) CYREENTRANT
1332:Generated_Source\PSoC5/Button.c **** {
 257              		.loc 1 1332 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL19:
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              		.cfi_def_cfa_offset 16
 264              		.cfi_offset 4, -16
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 29


 265              		.cfi_offset 5, -12
 266              		.cfi_offset 6, -8
 267              		.cfi_offset 14, -4
 268 0002 0546     		mov	r5, r0
1333:Generated_Source\PSoC5/Button.c ****     uint8 port = Button_portTable[sensor];
 269              		.loc 1 1333 0
 270 0004 0B4B     		ldr	r3, .L26
 271 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 272              	.LVL20:
1334:Generated_Source\PSoC5/Button.c ****     uint8 mask = Button_maskTable[sensor];
 273              		.loc 1 1334 0
 274 0008 0344     		add	r3, r3, r0
 275 000a 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 276              	.LVL21:
1335:Generated_Source\PSoC5/Button.c ****     
1336:Generated_Source\PSoC5/Button.c ****     #if ((Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
1337:Generated_Source\PSoC5/Button.c ****          (Button_IS_COMPLEX_SCANSLOTS))
1338:Generated_Source\PSoC5/Button.c ****         uint8 amuxCh = Button_amuxIndex[sensor];
1339:Generated_Source\PSoC5/Button.c ****     #endif  /* ((Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) && \
1340:Generated_Source\PSoC5/Button.c ****             *   (Button_IS_COMPLEX_SCANSLOTS))
1341:Generated_Source\PSoC5/Button.c ****             */
1342:Generated_Source\PSoC5/Button.c ****     
1343:Generated_Source\PSoC5/Button.c ****     /* Disconnect from AMUX */
1344:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1345:Generated_Source\PSoC5/Button.c ****         #if (Button_IS_COMPLEX_SCANSLOTS)
1346:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Disconnect(Button_amuxIndex[sensor]);
1347:Generated_Source\PSoC5/Button.c ****         #else
1348:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Disconnect(sensor);
 277              		.loc 1 1348 0
 278 000c FFF7FEFF 		bl	Button_AMuxCH0_Unset
 279              	.LVL22:
1349:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_IS_COMPLEX_SCANSLOTS */
1350:Generated_Source\PSoC5/Button.c ****                 
1351:Generated_Source\PSoC5/Button.c ****     #else
1352:Generated_Source\PSoC5/Button.c ****         #if (Button_IS_COMPLEX_SCANSLOTS)
1353:Generated_Source\PSoC5/Button.c ****             if ((amuxCh & Button_CHANNEL1_FLAG) == 0u)
1354:Generated_Source\PSoC5/Button.c ****             {
1355:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Disconnect(amuxCh);
1356:Generated_Source\PSoC5/Button.c ****             } 
1357:Generated_Source\PSoC5/Button.c ****             else
1358:Generated_Source\PSoC5/Button.c ****             {
1359:Generated_Source\PSoC5/Button.c ****                 amuxCh &= ~ Button_CHANNEL1_FLAG;
1360:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Disconnect(amuxCh);
1361:Generated_Source\PSoC5/Button.c ****             }
1362:Generated_Source\PSoC5/Button.c ****             
1363:Generated_Source\PSoC5/Button.c ****         #else
1364:Generated_Source\PSoC5/Button.c ****             if (sensor < Button_TOTAL_SENSOR_COUNT__CH0) 
1365:Generated_Source\PSoC5/Button.c ****             {
1366:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Disconnect(sensor);
1367:Generated_Source\PSoC5/Button.c ****             } 
1368:Generated_Source\PSoC5/Button.c ****             else
1369:Generated_Source\PSoC5/Button.c ****             {
1370:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Disconnect(sensor - Button_TOTAL_SENSOR_COUNT__CH0);
1371:Generated_Source\PSoC5/Button.c ****             }
1372:Generated_Source\PSoC5/Button.c ****             
1373:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_IS_COMPLEX_SCANSLOTS */
1374:Generated_Source\PSoC5/Button.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 30


1375:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_DESIGN_TYPE */
1376:Generated_Source\PSoC5/Button.c ****     
1377:Generated_Source\PSoC5/Button.c ****     /* Disconnect from DSI output */
1378:Generated_Source\PSoC5/Button.c **** 	if(port == 15u)
 280              		.loc 1 1378 0
 281 0010 0F2C     		cmp	r4, #15
 282 0012 00D1     		bne	.L23
1379:Generated_Source\PSoC5/Button.c **** 	{
1380:Generated_Source\PSoC5/Button.c **** 		port = 7u;
 283              		.loc 1 1380 0
 284 0014 0724     		movs	r4, #7
 285              	.LVL23:
 286              	.L23:
1381:Generated_Source\PSoC5/Button.c **** 	}
1382:Generated_Source\PSoC5/Button.c ****     *Button_csTable[port] &= (uint8)~mask;
 287              		.loc 1 1382 0
 288 0016 0748     		ldr	r0, .L26
 289 0018 00EB8404 		add	r4, r0, r4, lsl #2
 290              	.LVL24:
 291 001c 2269     		ldr	r2, [r4, #16]
 292 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 293 0020 23EA0603 		bic	r3, r3, r6
 294 0024 1370     		strb	r3, [r2]
1383:Generated_Source\PSoC5/Button.c ****     
1384:Generated_Source\PSoC5/Button.c ****     /* Set sensor to inactive state */
1385:Generated_Source\PSoC5/Button.c ****     #if (Button_CONNECT_INACTIVE_SNS == Button_CIS_GND)
1386:Generated_Source\PSoC5/Button.c ****         *Button_pcTable[sensor] = Button_PRT_PC_GND;
 295              		.loc 1 1386 0
 296 0026 00EB8500 		add	r0, r0, r5, lsl #2
 297 002a 8368     		ldr	r3, [r0, #8]
 298 002c 0822     		movs	r2, #8
 299 002e 1A70     		strb	r2, [r3]
 300 0030 70BD     		pop	{r4, r5, r6, pc}
 301              	.LVL25:
 302              	.L27:
 303 0032 00BF     		.align	2
 304              	.L26:
 305 0034 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE12:
 308              		.size	Button_DisableSensor, .-Button_DisableSensor
 309              		.section	.text.Button_ClearSensors,"ax",%progbits
 310              		.align	2
 311              		.global	Button_ClearSensors
 312              		.thumb
 313              		.thumb_func
 314              		.type	Button_ClearSensors, %function
 315              	Button_ClearSensors:
 316              	.LFB10:
1097:Generated_Source\PSoC5/Button.c ****     uint8 i;
 317              		.loc 1 1097 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 31


 324              		.cfi_offset 14, -4
 325              	.LVL26:
1100:Generated_Source\PSoC5/Button.c ****     {
 326              		.loc 1 1100 0
 327 0002 0024     		movs	r4, #0
 328 0004 04E0     		b	.L29
 329              	.LVL27:
 330              	.L30:
1102:Generated_Source\PSoC5/Button.c ****     }
 331              		.loc 1 1102 0 discriminator 3
 332 0006 2046     		mov	r0, r4
 333 0008 FFF7FEFF 		bl	Button_DisableSensor
 334              	.LVL28:
1100:Generated_Source\PSoC5/Button.c ****     {
 335              		.loc 1 1100 0 discriminator 3
 336 000c 0134     		adds	r4, r4, #1
 337              	.LVL29:
 338 000e E4B2     		uxtb	r4, r4
 339              	.LVL30:
 340              	.L29:
1100:Generated_Source\PSoC5/Button.c ****     {
 341              		.loc 1 1100 0 is_stmt 0 discriminator 1
 342 0010 012C     		cmp	r4, #1
 343 0012 F8D9     		bls	.L30
1104:Generated_Source\PSoC5/Button.c **** 
 344              		.loc 1 1104 0 is_stmt 1
 345 0014 10BD     		pop	{r4, pc}
 346              		.cfi_endproc
 347              	.LFE10:
 348              		.size	Button_ClearSensors, .-Button_ClearSensors
 349 0016 00BF     		.section	.text.Button_Stop,"ax",%progbits
 350              		.align	2
 351              		.global	Button_Stop
 352              		.thumb
 353              		.thumb_func
 354              		.type	Button_Stop, %function
 355              	Button_Stop:
 356              	.LFB3:
 517:Generated_Source\PSoC5/Button.c ****     /* Stop Capsensing */
 357              		.loc 1 517 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 519:Generated_Source\PSoC5/Button.c ****     
 365              		.loc 1 519 0
 366 0002 154C     		ldr	r4, .L34
 367 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 368 0006 03F0FD03 		and	r3, r3, #253
 369 000a 2370     		strb	r3, [r4]
 522:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN) 
 370              		.loc 1 522 0
 371 000c 0222     		movs	r2, #2
 372 000e 134B     		ldr	r3, .L34+4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 32


 373 0010 1A60     		str	r2, [r3]
 528:Generated_Source\PSoC5/Button.c ****     
 374              		.loc 1 528 0
 375 0012 FFF7FEFF 		bl	Button_ClearSensors
 376              	.LVL31:
 542:Generated_Source\PSoC5/Button.c ****     
 377              		.loc 1 542 0
 378 0016 124A     		ldr	r2, .L34+8
 379 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 001a 03F0DF03 		and	r3, r3, #223
 381 001e 1370     		strb	r3, [r2]
 581:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CLOCK_SOURCE */
 382              		.loc 1 581 0
 383 0020 FFF7FEFF 		bl	Button_IntClock_Stop
 384              	.LVL32:
 585:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 385              		.loc 1 585 0
 386 0024 FFF7FEFF 		bl	Button_CompCH0_Stop
 387              	.LVL33:
 587:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 388              		.loc 1 587 0
 389 0028 FFF7FEFF 		bl	Button_IdacCH0_Stop
 390              	.LVL34:
 609:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_ACT_PWRMGR_REG &= (uint8)(~Button_BufCH0_ACT_PWR_EN);
 391              		.loc 1 609 0
 392 002c 0D4A     		ldr	r2, .L34+12
 393 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 0030 03F0FE03 		and	r3, r3, #254
 395 0034 1370     		strb	r3, [r2]
 610:Generated_Source\PSoC5/Button.c ****         Button_BufCH0_STBY_PWRMGR_REG &= (uint8)(~Button_BufCH0_STBY_PWR_EN);
 396              		.loc 1 610 0
 397 0036 A2F5A652 		sub	r2, r2, #5312
 398 003a 073A     		subs	r2, r2, #7
 399 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 400 003e 03F0DF03 		and	r3, r3, #223
 401 0042 1370     		strb	r3, [r2]
 611:Generated_Source\PSoC5/Button.c ****         
 402              		.loc 1 611 0
 403 0044 1032     		adds	r2, r2, #16
 404 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 405 0048 03F0DF03 		and	r3, r3, #223
 406 004c 1370     		strb	r3, [r2]
 621:Generated_Source\PSoC5/Button.c **** }
 407              		.loc 1 621 0
 408 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 409 0050 03F07F03 		and	r3, r3, #127
 410 0054 2370     		strb	r3, [r4]
 411 0056 10BD     		pop	{r4, pc}
 412              	.L35:
 413              		.align	2
 414              	.L34:
 415 0058 75640040 		.word	1073767541
 416 005c 80E100E0 		.word	-536813184
 417 0060 92640040 		.word	1073767570
 418 0064 72580040 		.word	1073764466
 419              		.cfi_endproc
 420              	.LFE3:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 33


 421              		.size	Button_Stop, .-Button_Stop
 422              		.section	.text.Button_PostScan,"ax",%progbits
 423              		.align	2
 424              		.global	Button_PostScan
 425              		.thumb
 426              		.thumb_func
 427              		.type	Button_PostScan, %function
 428              	Button_PostScan:
 429              	.LFB14:
1387:Generated_Source\PSoC5/Button.c ****     #elif (Button_CONNECT_INACTIVE_SNS == Button_CIS_HIGHZ)
1388:Generated_Source\PSoC5/Button.c ****         *Button_pcTable[sensor] = Button_PRT_PC_HIGHZ;
1389:Generated_Source\PSoC5/Button.c ****     #else
1390:Generated_Source\PSoC5/Button.c ****         *Button_pcTable[sensor] = Button_PRT_PC_SHIELD;
1391:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_CONNECT_INACTIVE_SNS == Button_CIS_GND) */
1392:Generated_Source\PSoC5/Button.c **** }
1393:Generated_Source\PSoC5/Button.c **** 
1394:Generated_Source\PSoC5/Button.c **** 
1395:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1396:Generated_Source\PSoC5/Button.c **** * Function Name: Button_PreScan
1397:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1398:Generated_Source\PSoC5/Button.c **** *
1399:Generated_Source\PSoC5/Button.c **** * Summary:
1400:Generated_Source\PSoC5/Button.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1401:Generated_Source\PSoC5/Button.c **** *  scanning process of the sensor.
1402:Generated_Source\PSoC5/Button.c **** *
1403:Generated_Source\PSoC5/Button.c **** * Parameters:
1404:Generated_Source\PSoC5/Button.c **** *  sensor:  Sensor number.
1405:Generated_Source\PSoC5/Button.c **** *
1406:Generated_Source\PSoC5/Button.c **** * Return:
1407:Generated_Source\PSoC5/Button.c **** *  None
1408:Generated_Source\PSoC5/Button.c **** *
1409:Generated_Source\PSoC5/Button.c **** * Global Variables:
1410:Generated_Source\PSoC5/Button.c **** *  Button_rbTable[] - used to store pointers to PC pin registers for 
1411:Generated_Source\PSoC5/Button.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1412:Generated_Source\PSoC5/Button.c **** *  resistor.
1413:Generated_Source\PSoC5/Button.c **** *
1414:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1415:Generated_Source\PSoC5/Button.c **** void Button_PreScan(uint8 sensor) CYREENTRANT
1416:Generated_Source\PSoC5/Button.c **** {
1417:Generated_Source\PSoC5/Button.c ****     /* Set Sensor Settings */
1418:Generated_Source\PSoC5/Button.c ****     Button_SetScanSlotSettings(sensor);
1419:Generated_Source\PSoC5/Button.c ****     
1420:Generated_Source\PSoC5/Button.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1421:Generated_Source\PSoC5/Button.c ****     /* `#START Button_PreScan_DisableInt` */
1422:Generated_Source\PSoC5/Button.c **** 
1423:Generated_Source\PSoC5/Button.c ****     /* `#END` */
1424:Generated_Source\PSoC5/Button.c ****     
1425:Generated_Source\PSoC5/Button.c ****     #ifdef Button_PRE_SCAN_DISABLE_INT_CALLBACK
1426:Generated_Source\PSoC5/Button.c ****     Button_PreScan_DisableInt_Callback();
1427:Generated_Source\PSoC5/Button.c ****     #endif /* Button_PRE_SCAN_DISABLE_INT_CALLBACK */
1428:Generated_Source\PSoC5/Button.c **** 
1429:Generated_Source\PSoC5/Button.c ****     /* Resets digital and pre-charge clocks */
1430:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG |= Button_CTRL_SYNC_EN;
1431:Generated_Source\PSoC5/Button.c ****         
1432:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1433:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE == Button_IDAC_SOURCE)
1434:Generated_Source\PSoC5/Button.c ****             /* Disable Vref from AMux */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 34


1435:Generated_Source\PSoC5/Button.c ****             #if (Button_VREF_VDAC == Button_VREF_OPTIONS)
1436:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Disconnect(Button_AMuxCH0_VREF_CHANNEL);
1437:Generated_Source\PSoC5/Button.c ****             #else
1438:Generated_Source\PSoC5/Button.c ****                 Button_BufCH0_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1439:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_VREF_VDAC != Button_VREF_OPTIONS) */
1440:Generated_Source\PSoC5/Button.c **** 
1441:Generated_Source\PSoC5/Button.c ****             /* Enable Sensor */
1442:Generated_Source\PSoC5/Button.c ****             Button_EnableScanSlot(sensor);
1443:Generated_Source\PSoC5/Button.c ****             
1444:Generated_Source\PSoC5/Button.c ****         #elif (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1445:Generated_Source\PSoC5/Button.c ****             /* Connect IDAC */
1446:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Connect(Button_AMuxCH0_IDAC_CHANNEL);
1447:Generated_Source\PSoC5/Button.c ****             
1448:Generated_Source\PSoC5/Button.c ****             /* Enable Sensor */
1449:Generated_Source\PSoC5/Button.c ****             Button_EnableScanSlot(sensor);
1450:Generated_Source\PSoC5/Button.c ****                 
1451:Generated_Source\PSoC5/Button.c ****             /* Disable CapSense Buffer */
1452:Generated_Source\PSoC5/Button.c ****             Button_BufCH0_CAPS_CFG0_REG &= (uint8)~Button_CSBUF_ENABLE;
1453:Generated_Source\PSoC5/Button.c ****             
1454:Generated_Source\PSoC5/Button.c ****         #else
1455:Generated_Source\PSoC5/Button.c ****             /* Connect DSI output to Rb */
1456:Generated_Source\PSoC5/Button.c ****             *Button_rbTable[Button_extRbCh0Cur] |= Button_BYP_MASK;
1457:Generated_Source\PSoC5/Button.c ****             
1458:Generated_Source\PSoC5/Button.c ****             /* Enable Sensor */
1459:Generated_Source\PSoC5/Button.c ****             Button_EnableScanSlot(sensor);
1460:Generated_Source\PSoC5/Button.c ****              
1461:Generated_Source\PSoC5/Button.c ****             /* Disable CapSense Buffer */
1462:Generated_Source\PSoC5/Button.c ****             Button_BufCH0_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1463:Generated_Source\PSoC5/Button.c ****         
1464:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SOURCE) */
1465:Generated_Source\PSoC5/Button.c ****         
1466:Generated_Source\PSoC5/Button.c ****     #else
1467:Generated_Source\PSoC5/Button.c **** 
1468:Generated_Source\PSoC5/Button.c ****         if((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH0) != 0u)
1469:Generated_Source\PSoC5/Button.c ****         {
1470:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE == Button_IDAC_SOURCE)
1471:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1472:Generated_Source\PSoC5/Button.c ****                 #if (Button_VREF_VDAC == Button_VREF_OPTIONS)
1473:Generated_Source\PSoC5/Button.c ****                     Button_AMuxCH0_Disconnect(Button_AMuxCH0_VREF_CHANNEL);
1474:Generated_Source\PSoC5/Button.c ****                 #else
1475:Generated_Source\PSoC5/Button.c ****                     Button_BufCH0_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1476:Generated_Source\PSoC5/Button.c ****                 #endif  /* (Button_VREF_VDAC != Button_VREF_OPTIONS) */
1477:Generated_Source\PSoC5/Button.c ****                 
1478:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1479:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1480:Generated_Source\PSoC5/Button.c ****                 
1481:Generated_Source\PSoC5/Button.c ****             #elif (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1482:Generated_Source\PSoC5/Button.c ****                 /* Connect IDAC */
1483:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Connect(Button_AMuxCH0_IDAC_CHANNEL);
1484:Generated_Source\PSoC5/Button.c ****                 
1485:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1486:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1487:Generated_Source\PSoC5/Button.c ****                     
1488:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1489:Generated_Source\PSoC5/Button.c ****                 Button_BufCH0_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1490:Generated_Source\PSoC5/Button.c ****                 
1491:Generated_Source\PSoC5/Button.c ****             #else
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 35


1492:Generated_Source\PSoC5/Button.c ****                 /* Connect DSI output to Rb */
1493:Generated_Source\PSoC5/Button.c ****                 *Button_rbTable[Button_extRbCh0Cur] |= Button_BYP_MASK;
1494:Generated_Source\PSoC5/Button.c ****                 
1495:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1496:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1497:Generated_Source\PSoC5/Button.c ****                     
1498:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1499:Generated_Source\PSoC5/Button.c ****                 Button_BufCH0_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1500:Generated_Source\PSoC5/Button.c ****             
1501:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SOURCE) */
1502:Generated_Source\PSoC5/Button.c ****             
1503:Generated_Source\PSoC5/Button.c ****         }
1504:Generated_Source\PSoC5/Button.c ****         
1505:Generated_Source\PSoC5/Button.c ****         if((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH1) != 0u)
1506:Generated_Source\PSoC5/Button.c ****         {
1507:Generated_Source\PSoC5/Button.c ****             sensor += Button_TOTAL_SENSOR_COUNT__CH0;
1508:Generated_Source\PSoC5/Button.c ****             
1509:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE == Button_IDAC_SOURCE)
1510:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1511:Generated_Source\PSoC5/Button.c ****                 #if (Button_VREF_VDAC == Button_VREF_OPTIONS)
1512:Generated_Source\PSoC5/Button.c ****                    Button_AMuxCH1_Disconnect(Button_AMuxCH1_VREF_CHANNEL);
1513:Generated_Source\PSoC5/Button.c ****                 #else 
1514:Generated_Source\PSoC5/Button.c ****                     Button_BufCH1_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1515:Generated_Source\PSoC5/Button.c ****                 #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
1516:Generated_Source\PSoC5/Button.c ****                 
1517:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1518:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1519:Generated_Source\PSoC5/Button.c ****                 
1520:Generated_Source\PSoC5/Button.c ****             #elif (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1521:Generated_Source\PSoC5/Button.c ****                 /* Connect IDAC */
1522:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Connect(Button_AMuxCH1_IDAC_CHANNEL);
1523:Generated_Source\PSoC5/Button.c ****                 
1524:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1525:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1526:Generated_Source\PSoC5/Button.c ****                     
1527:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1528:Generated_Source\PSoC5/Button.c ****                 Button_BufCH1_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1529:Generated_Source\PSoC5/Button.c ****                 
1530:Generated_Source\PSoC5/Button.c ****             #else
1531:Generated_Source\PSoC5/Button.c ****                 /* Connect DSI output to Rb */
1532:Generated_Source\PSoC5/Button.c ****                 *Button_rbTable[Button_extRbCh1Cur] |= Button_BYP_MASK;
1533:Generated_Source\PSoC5/Button.c ****                 
1534:Generated_Source\PSoC5/Button.c ****                 /* Enable Sensor */
1535:Generated_Source\PSoC5/Button.c ****                 Button_EnableScanSlot(sensor);
1536:Generated_Source\PSoC5/Button.c ****                 
1537:Generated_Source\PSoC5/Button.c ****                 /* Disable Vref from AMux */
1538:Generated_Source\PSoC5/Button.c ****                 Button_BufCH1_CAPS_CFG0_REG &= ~Button_CSBUF_ENABLE;
1539:Generated_Source\PSoC5/Button.c ****             
1540:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SOURCE) */
1541:Generated_Source\PSoC5/Button.c ****         }
1542:Generated_Source\PSoC5/Button.c ****     
1543:Generated_Source\PSoC5/Button.c ****     #endif  /* (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN) */
1544:Generated_Source\PSoC5/Button.c ****     
1545:Generated_Source\PSoC5/Button.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1546:Generated_Source\PSoC5/Button.c ****     Button_CONTROL_REG |= Button_CTRL_START;
1547:Generated_Source\PSoC5/Button.c ****     
1548:Generated_Source\PSoC5/Button.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 36


1549:Generated_Source\PSoC5/Button.c ****     /* `#START Button_PreScan_EnableInt` */
1550:Generated_Source\PSoC5/Button.c **** 
1551:Generated_Source\PSoC5/Button.c ****     /* `#END` */
1552:Generated_Source\PSoC5/Button.c **** 
1553:Generated_Source\PSoC5/Button.c ****     #ifdef Button_PRE_SCAN_ENABLE_INT_CALLBACK
1554:Generated_Source\PSoC5/Button.c ****         Button_PreScan_EnableInt_Callback();
1555:Generated_Source\PSoC5/Button.c ****     #endif /* Button_PRE_SCAN_ENABLE_INT_CALLBACK */
1556:Generated_Source\PSoC5/Button.c **** }
1557:Generated_Source\PSoC5/Button.c **** 
1558:Generated_Source\PSoC5/Button.c **** 
1559:Generated_Source\PSoC5/Button.c **** #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1560:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1561:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_PostScan
1562:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1563:Generated_Source\PSoC5/Button.c ****     *
1564:Generated_Source\PSoC5/Button.c ****     * Summary:
1565:Generated_Source\PSoC5/Button.c ****     *  Store results of measurament in Button_SensorResult[] array,
1566:Generated_Source\PSoC5/Button.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1567:Generated_Source\PSoC5/Button.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1568:Generated_Source\PSoC5/Button.c ****     *  Only one channel designs.
1569:Generated_Source\PSoC5/Button.c ****     *
1570:Generated_Source\PSoC5/Button.c ****     * Parameters:
1571:Generated_Source\PSoC5/Button.c ****     *  sensor:  Sensor number.
1572:Generated_Source\PSoC5/Button.c ****     *
1573:Generated_Source\PSoC5/Button.c ****     * Return:
1574:Generated_Source\PSoC5/Button.c ****     *  None
1575:Generated_Source\PSoC5/Button.c ****     *
1576:Generated_Source\PSoC5/Button.c ****     * Global Variables:
1577:Generated_Source\PSoC5/Button.c ****     *  Button_sensorRaw[] - used to store sensors raw data.
1578:Generated_Source\PSoC5/Button.c ****     *
1579:Generated_Source\PSoC5/Button.c ****     * Reentrant:
1580:Generated_Source\PSoC5/Button.c ****     *  No
1581:Generated_Source\PSoC5/Button.c ****     *
1582:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1583:Generated_Source\PSoC5/Button.c ****     void Button_PostScan(uint8 sensor) CYREENTRANT
1584:Generated_Source\PSoC5/Button.c ****     {
 430              		.loc 1 1584 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL35:
 435 0000 10B5     		push	{r4, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
1585:Generated_Source\PSoC5/Button.c ****         /* Stop Capsensing and rearm sync */
1586:Generated_Source\PSoC5/Button.c ****         Button_CONTROL_REG &= (uint8)~(Button_CTRL_START | Button_CTRL_SYNC_EN);
 439              		.loc 1 1586 0
 440 0002 0E4A     		ldr	r2, .L38
 441 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 442 0006 03F0FC03 		and	r3, r3, #252
 443 000a 1370     		strb	r3, [r2]
1587:Generated_Source\PSoC5/Button.c ****         
1588:Generated_Source\PSoC5/Button.c ****         /* Read SlotResult from Raw Counter */
1589:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
1590:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE - 
1591:Generated_Source\PSoC5/Button.c ****                                                       CY_GET_REG16(Button_RAW_CH0_COUNTER_PTR);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 37


1592:Generated_Source\PSoC5/Button.c ****         #else
1593:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = ((uint16) Button_RAW_CH0_COUNTER_HI_REG << 8u);
 444              		.loc 1 1593 0
 445 000c 0C4B     		ldr	r3, .L38+4
 446 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447 0010 1B02     		lsls	r3, r3, #8
 448 0012 0C49     		ldr	r1, .L38+8
 449 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1594:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor] |= (uint16) Button_RAW_CH0_COUNTER_LO_REG;
 450              		.loc 1 1594 0
 451 0018 743A     		subs	r2, r2, #116
 452 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 453 001c 1343     		orrs	r3, r3, r2
1595:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE -
 454              		.loc 1 1595 0
 455 001e DB43     		mvns	r3, r3
 456 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1596:Generated_Source\PSoC5/Button.c ****                                                       Button_sensorRaw[sensor];
1597:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION == Button_MEASURE_IMPLEMENTATION_FF) */
1598:Generated_Source\PSoC5/Button.c ****         
1599:Generated_Source\PSoC5/Button.c ****         /* Disable Sensor */
1600:Generated_Source\PSoC5/Button.c ****         Button_DisableScanSlot(sensor);
 457              		.loc 1 1600 0
 458 0024 FFF7FEFF 		bl	Button_DisableSensor
 459              	.LVL36:
1601:Generated_Source\PSoC5/Button.c ****         
1602:Generated_Source\PSoC5/Button.c ****         #if(Button_CURRENT_SOURCE)
1603:Generated_Source\PSoC5/Button.c ****             /* Turn off IDAC */
1604:Generated_Source\PSoC5/Button.c ****             Button_IdacCH0_SetValue(Button_TURN_OFF_IDAC);
 460              		.loc 1 1604 0
 461 0028 0020     		movs	r0, #0
 462 002a FFF7FEFF 		bl	Button_IdacCH0_SetValue
 463              	.LVL37:
1605:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1606:Generated_Source\PSoC5/Button.c ****                 /* Disconnect IDAC */
1607:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Disconnect(Button_AMuxCH0_IDAC_CHANNEL);
1608:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SINK) */
1609:Generated_Source\PSoC5/Button.c ****         #else
1610:Generated_Source\PSoC5/Button.c ****             /* Disconnect DSI output from Rb */
1611:Generated_Source\PSoC5/Button.c ****             *Button_rbTable[Button_extRbCh0Cur] &= ~Button_BYP_MASK; 
1612:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_CURRENT_SOURCE)*/
1613:Generated_Source\PSoC5/Button.c ****             
1614:Generated_Source\PSoC5/Button.c ****         /* Enable Vref on AMUX */
1615:Generated_Source\PSoC5/Button.c ****         #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
1616:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Connect(Button_AMuxCH0_VREF_CHANNEL);
1617:Generated_Source\PSoC5/Button.c ****         #else
1618:Generated_Source\PSoC5/Button.c ****             Button_BufCH0_CAPS_CFG0_REG |= Button_CSBUF_ENABLE;
 464              		.loc 1 1618 0
 465 002e 064A     		ldr	r2, .L38+12
 466 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 467 0032 43F00103 		orr	r3, r3, #1
 468 0036 1370     		strb	r3, [r2]
 469 0038 10BD     		pop	{r4, pc}
 470              	.L39:
 471 003a 00BF     		.align	2
 472              	.L38:
 473 003c 75640040 		.word	1073767541
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 38


 474 0040 11640040 		.word	1073767441
 475 0044 00000000 		.word	Button_sensorRaw
 476 0048 72580040 		.word	1073764466
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	Button_PostScan, .-Button_PostScan
 480              		.section	.text.Button_SetPrescaler,"ax",%progbits
 481              		.align	2
 482              		.global	Button_SetPrescaler
 483              		.thumb
 484              		.thumb_func
 485              		.type	Button_SetPrescaler, %function
 486              	Button_SetPrescaler:
 487              	.LFB15:
1619:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
1620:Generated_Source\PSoC5/Button.c ****     }
1621:Generated_Source\PSoC5/Button.c ****     
1622:Generated_Source\PSoC5/Button.c **** #else
1623:Generated_Source\PSoC5/Button.c **** 
1624:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1625:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_PostScan
1626:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1627:Generated_Source\PSoC5/Button.c ****     *
1628:Generated_Source\PSoC5/Button.c ****     * Summary:
1629:Generated_Source\PSoC5/Button.c ****     *  Store results of measurament in Button_SensorResult[] array,
1630:Generated_Source\PSoC5/Button.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1631:Generated_Source\PSoC5/Button.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1632:Generated_Source\PSoC5/Button.c ****     *  Only used for channel 0 in two channes designs.
1633:Generated_Source\PSoC5/Button.c ****     *
1634:Generated_Source\PSoC5/Button.c ****     * Parameters:
1635:Generated_Source\PSoC5/Button.c ****     *  sensor:  Sensor number.
1636:Generated_Source\PSoC5/Button.c ****     *
1637:Generated_Source\PSoC5/Button.c ****     * Return:
1638:Generated_Source\PSoC5/Button.c ****     *  None
1639:Generated_Source\PSoC5/Button.c ****     *
1640:Generated_Source\PSoC5/Button.c ****     * Global Variables:
1641:Generated_Source\PSoC5/Button.c ****     *  Button_sensorRaw[] - used to store sensors raw data.
1642:Generated_Source\PSoC5/Button.c ****     *
1643:Generated_Source\PSoC5/Button.c ****     * Reentrant:
1644:Generated_Source\PSoC5/Button.c ****     *  No
1645:Generated_Source\PSoC5/Button.c ****     *
1646:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1647:Generated_Source\PSoC5/Button.c ****     void Button_PostScanCh0(uint8 sensor) CYREENTRANT
1648:Generated_Source\PSoC5/Button.c ****     {
1649:Generated_Source\PSoC5/Button.c ****         if (((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH0) == 0u) && 
1650:Generated_Source\PSoC5/Button.c ****             ((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH1) == 0u)) 
1651:Generated_Source\PSoC5/Button.c ****         {
1652:Generated_Source\PSoC5/Button.c ****             /* Stop Capsensing and rearm sync */
1653:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG &= ~(Button_CTRL_START | Button_CTRL_SYNC_EN);
1654:Generated_Source\PSoC5/Button.c ****         }
1655:Generated_Source\PSoC5/Button.c ****         
1656:Generated_Source\PSoC5/Button.c ****         /* Read SlotResult from Raw Counter */
1657:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)
1658:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE - 
1659:Generated_Source\PSoC5/Button.c ****                                                       CY_GET_REG16(Button_RAW_CH0_COUNTER_PTR);
1660:Generated_Source\PSoC5/Button.c ****         #else
1661:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = ((uint16) Button_RAW_CH0_COUNTER_HI_REG << 8u);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 39


1662:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor] |= (uint16) Button_RAW_CH0_COUNTER_LO_REG;
1663:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE - 
1664:Generated_Source\PSoC5/Button.c ****                                                       Button_sensorRaw[sensor];
1665:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF)*/
1666:Generated_Source\PSoC5/Button.c ****         
1667:Generated_Source\PSoC5/Button.c ****         /* Disable Sensor */
1668:Generated_Source\PSoC5/Button.c ****         Button_DisableScanSlot(sensor);
1669:Generated_Source\PSoC5/Button.c ****         
1670:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
1671:Generated_Source\PSoC5/Button.c ****             /* Turn off IDAC */
1672:Generated_Source\PSoC5/Button.c ****             Button_IdacCH0_SetValue(Button_TURN_OFF_IDAC);
1673:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1674:Generated_Source\PSoC5/Button.c ****                 /* Disconnect IDAC */
1675:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH0_Disconnect(Button_AMuxCH0_IDAC_CHANNEL);
1676:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SINK) */
1677:Generated_Source\PSoC5/Button.c ****         #else
1678:Generated_Source\PSoC5/Button.c ****             /* Disconnect DSI output from Rb */
1679:Generated_Source\PSoC5/Button.c ****             *Button_rbTable[Button_extRbCh0Cur] &= ~Button_BYP_MASK; 
1680:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_CURRENT_SOURCE)*/
1681:Generated_Source\PSoC5/Button.c ****         
1682:Generated_Source\PSoC5/Button.c ****         /* Enable Vref on AMUX */
1683:Generated_Source\PSoC5/Button.c ****         #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
1684:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH0_Connect(Button_AMuxCH0_VREF_CHANNEL);
1685:Generated_Source\PSoC5/Button.c ****         #else
1686:Generated_Source\PSoC5/Button.c ****             Button_BufCH0_CAPS_CFG0_REG |= Button_CSBUF_ENABLE;
1687:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
1688:Generated_Source\PSoC5/Button.c ****     }
1689:Generated_Source\PSoC5/Button.c ****     
1690:Generated_Source\PSoC5/Button.c ****     
1691:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1692:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_PostScanCh1
1693:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1694:Generated_Source\PSoC5/Button.c ****     *
1695:Generated_Source\PSoC5/Button.c ****     * Summary:
1696:Generated_Source\PSoC5/Button.c ****     *  Store results of measurament in Button_SensorResult[] array,
1697:Generated_Source\PSoC5/Button.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1698:Generated_Source\PSoC5/Button.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1699:Generated_Source\PSoC5/Button.c ****     *  Only used for channel 1 in two channes designs.
1700:Generated_Source\PSoC5/Button.c ****     *
1701:Generated_Source\PSoC5/Button.c ****     * Parameters:
1702:Generated_Source\PSoC5/Button.c ****     *  sensor:  Sensor number.
1703:Generated_Source\PSoC5/Button.c ****     *
1704:Generated_Source\PSoC5/Button.c ****     * Return:
1705:Generated_Source\PSoC5/Button.c ****     *  None
1706:Generated_Source\PSoC5/Button.c ****     *
1707:Generated_Source\PSoC5/Button.c ****     * Global Variables:
1708:Generated_Source\PSoC5/Button.c ****     *  Button_sensorRaw[] - used to store sensors raw data.
1709:Generated_Source\PSoC5/Button.c ****     *
1710:Generated_Source\PSoC5/Button.c ****     * Reentrant:
1711:Generated_Source\PSoC5/Button.c ****     *  No
1712:Generated_Source\PSoC5/Button.c ****     *
1713:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1714:Generated_Source\PSoC5/Button.c ****     void Button_PostScanCh1(uint8 sensor) CYREENTRANT
1715:Generated_Source\PSoC5/Button.c ****     {
1716:Generated_Source\PSoC5/Button.c ****         if (((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH0) == 0u) && 
1717:Generated_Source\PSoC5/Button.c ****             ((Button_CONTROL_REG & Button_CTRL_WINDOW_EN__CH1) == 0u))
1718:Generated_Source\PSoC5/Button.c ****         {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 40


1719:Generated_Source\PSoC5/Button.c ****             /* Stop Capsensing and rearm sync */
1720:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG &= ~(Button_CTRL_START | Button_CTRL_SYNC_EN);
1721:Generated_Source\PSoC5/Button.c ****         }
1722:Generated_Source\PSoC5/Button.c ****         
1723:Generated_Source\PSoC5/Button.c ****         /* Read SlotResult from Raw Counter */
1724:Generated_Source\PSoC5/Button.c ****         #if (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)
1725:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE - 
1726:Generated_Source\PSoC5/Button.c ****                                                       CY_GET_REG16(Button_RAW_CH1_COUNTER_PTR);
1727:Generated_Source\PSoC5/Button.c ****         #else
1728:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = ((uint16) Button_RAW_CH1_COUNTER_HI_REG << 8u);
1729:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor] |= (uint16) Button_RAW_CH1_COUNTER_LO_REG;
1730:Generated_Source\PSoC5/Button.c ****             Button_sensorRaw[sensor]  = Button_MEASURE_FULL_RANGE - 
1731:Generated_Source\PSoC5/Button.c ****                                                       Button_sensorRaw[sensor];
1732:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH1 == Button_MEASURE_IMPLEMENTATION_FF)*/
1733:Generated_Source\PSoC5/Button.c ****         
1734:Generated_Source\PSoC5/Button.c ****         /* Disable Sensor */
1735:Generated_Source\PSoC5/Button.c ****         Button_DisableScanSlot(sensor);
1736:Generated_Source\PSoC5/Button.c ****         
1737:Generated_Source\PSoC5/Button.c ****         #if (Button_CURRENT_SOURCE)
1738:Generated_Source\PSoC5/Button.c ****             /* Turn off IDAC */
1739:Generated_Source\PSoC5/Button.c ****             Button_IdacCH1_SetValue(Button_TURN_OFF_IDAC);
1740:Generated_Source\PSoC5/Button.c ****             #if (Button_CURRENT_SOURCE == Button_IDAC_SINK)
1741:Generated_Source\PSoC5/Button.c ****                 /* Disconnect IDAC */
1742:Generated_Source\PSoC5/Button.c ****                 Button_AMuxCH1_Disconnect(Button_AMuxCH1_IDAC_CHANNEL);
1743:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_CURRENT_SOURCE == Button_IDAC_SINK) */
1744:Generated_Source\PSoC5/Button.c ****         #else
1745:Generated_Source\PSoC5/Button.c ****             /* Disconnect DSI output from Rb */
1746:Generated_Source\PSoC5/Button.c ****             *Button_rbTable[Button_extRbCh1Cur] &= ~Button_BYP_MASK; 
1747:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_CURRENT_SOURCE)*/
1748:Generated_Source\PSoC5/Button.c **** 
1749:Generated_Source\PSoC5/Button.c ****         /* Enable Vref on AMUX */
1750:Generated_Source\PSoC5/Button.c ****         #if (Button_VREF_OPTIONS == Button_VREF_VDAC)
1751:Generated_Source\PSoC5/Button.c ****             Button_AMuxCH1_Connect(Button_AMuxCH1_VREF_CHANNEL);
1752:Generated_Source\PSoC5/Button.c ****         #else
1753:Generated_Source\PSoC5/Button.c ****             Button_BufCH1_CAPS_CFG0_REG |= Button_CSBUF_ENABLE;
1754:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_VREF_VDAC == Button_VREF_OPTIONS) */
1755:Generated_Source\PSoC5/Button.c ****     }
1756:Generated_Source\PSoC5/Button.c ****     
1757:Generated_Source\PSoC5/Button.c **** #endif  /* Button_DESIGN_TYPE */
1758:Generated_Source\PSoC5/Button.c **** 
1759:Generated_Source\PSoC5/Button.c **** 
1760:Generated_Source\PSoC5/Button.c **** #if (Button_CURRENT_SOURCE == Button_EXTERNAL_RB)
1761:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1762:Generated_Source\PSoC5/Button.c ****     * Function Name:  Button_InitRb
1763:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1764:Generated_Source\PSoC5/Button.c ****     *
1765:Generated_Source\PSoC5/Button.c ****     * Summary:
1766:Generated_Source\PSoC5/Button.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1767:Generated_Source\PSoC5/Button.c ****     *  while next measure.
1768:Generated_Source\PSoC5/Button.c ****     *  This function is available only if Current Source is External Resistor.
1769:Generated_Source\PSoC5/Button.c ****     *
1770:Generated_Source\PSoC5/Button.c ****     * Parameters:
1771:Generated_Source\PSoC5/Button.c ****     *  None
1772:Generated_Source\PSoC5/Button.c ****     *
1773:Generated_Source\PSoC5/Button.c ****     * Return:
1774:Generated_Source\PSoC5/Button.c ****     *  None
1775:Generated_Source\PSoC5/Button.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 41


1776:Generated_Source\PSoC5/Button.c ****     ********************************************************************************/
1777:Generated_Source\PSoC5/Button.c ****     void Button_InitRb(void) 
1778:Generated_Source\PSoC5/Button.c ****     {
1779:Generated_Source\PSoC5/Button.c ****         uint8 i;
1780:Generated_Source\PSoC5/Button.c ****         
1781:Generated_Source\PSoC5/Button.c ****         /* Disable all Rb */
1782:Generated_Source\PSoC5/Button.c ****         for(i = 0u; i < Button_TOTAL_RB_NUMBER; i++)
1783:Generated_Source\PSoC5/Button.c ****         {
1784:Generated_Source\PSoC5/Button.c ****             /* Make High-Z */
1785:Generated_Source\PSoC5/Button.c ****             *Button_rbTable[i] = Button_PRT_PC_HIGHZ;
1786:Generated_Source\PSoC5/Button.c ****         }
1787:Generated_Source\PSoC5/Button.c ****     }
1788:Generated_Source\PSoC5/Button.c ****     
1789:Generated_Source\PSoC5/Button.c ****     
1790:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1791:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_SetRBleed
1792:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1793:Generated_Source\PSoC5/Button.c ****     *
1794:Generated_Source\PSoC5/Button.c ****     * Summary:
1795:Generated_Source\PSoC5/Button.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1796:Generated_Source\PSoC5/Button.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1797:Generated_Source\PSoC5/Button.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1798:Generated_Source\PSoC5/Button.c ****     *  This function is available only if Current Source is External Resistor.
1799:Generated_Source\PSoC5/Button.c ****     * 
1800:Generated_Source\PSoC5/Button.c ****     * Parameters:
1801:Generated_Source\PSoC5/Button.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1802:Generated_Source\PSoC5/Button.c ****     *  customizer.
1803:Generated_Source\PSoC5/Button.c ****     *
1804:Generated_Source\PSoC5/Button.c ****     * Return:
1805:Generated_Source\PSoC5/Button.c ****     *  None
1806:Generated_Source\PSoC5/Button.c ****     *
1807:Generated_Source\PSoC5/Button.c ****     * Global Variables:
1808:Generated_Source\PSoC5/Button.c ****     *  Button_extRbCh0Cur - used to store current number of active 
1809:Generated_Source\PSoC5/Button.c ****     *  bleed resistor (Rb) of channel 0.
1810:Generated_Source\PSoC5/Button.c ****     *  Button_extRbCh1Cur - used to store current number of active 
1811:Generated_Source\PSoC5/Button.c ****     *  bleed resistor (Rb) of channel 1.
1812:Generated_Source\PSoC5/Button.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1813:Generated_Source\PSoC5/Button.c ****     *  cycle.
1814:Generated_Source\PSoC5/Button.c ****     *
1815:Generated_Source\PSoC5/Button.c ****     * Reentrant:
1816:Generated_Source\PSoC5/Button.c ****     *  No
1817:Generated_Source\PSoC5/Button.c ****     *
1818:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1819:Generated_Source\PSoC5/Button.c ****     void Button_SetRBleed(uint8 rbleed) 
1820:Generated_Source\PSoC5/Button.c ****     {
1821:Generated_Source\PSoC5/Button.c ****         #if (Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN)
1822:Generated_Source\PSoC5/Button.c ****             Button_extRbCh0Cur = rbleed;
1823:Generated_Source\PSoC5/Button.c ****             
1824:Generated_Source\PSoC5/Button.c ****         #else
1825:Generated_Source\PSoC5/Button.c ****             if(rbleed < Button_TOTAL_RB_NUMBER__CH0)
1826:Generated_Source\PSoC5/Button.c ****             {
1827:Generated_Source\PSoC5/Button.c ****                 Button_extRbCh0Cur = rbleed;
1828:Generated_Source\PSoC5/Button.c ****             }
1829:Generated_Source\PSoC5/Button.c ****             else
1830:Generated_Source\PSoC5/Button.c ****             {
1831:Generated_Source\PSoC5/Button.c ****                 Button_extRbCh1Cur = (rbleed - Button_TOTAL_RB_NUMBER__CH0);   
1832:Generated_Source\PSoC5/Button.c ****             }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 42


1833:Generated_Source\PSoC5/Button.c ****     
1834:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_DESIGN_TYPE == Button_ONE_CHANNEL_DESIGN */ 
1835:Generated_Source\PSoC5/Button.c ****     }
1836:Generated_Source\PSoC5/Button.c **** #endif /* Button_CURRENT_SOURCE == Button_EXTERNAL_RB */ 
1837:Generated_Source\PSoC5/Button.c **** 
1838:Generated_Source\PSoC5/Button.c **** #if (Button_PRESCALER_OPTIONS)
1839:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1840:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_SetPrescaler
1841:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1842:Generated_Source\PSoC5/Button.c ****     *
1843:Generated_Source\PSoC5/Button.c ****     * Summary:
1844:Generated_Source\PSoC5/Button.c ****     *  Sets analog switch divider.
1845:Generated_Source\PSoC5/Button.c ****     *
1846:Generated_Source\PSoC5/Button.c ****     * Parameters:
1847:Generated_Source\PSoC5/Button.c ****     *  prescaler:  Sets prescaler divider values.
1848:Generated_Source\PSoC5/Button.c ****     *
1849:Generated_Source\PSoC5/Button.c ****     * Return:
1850:Generated_Source\PSoC5/Button.c ****     *  None
1851:Generated_Source\PSoC5/Button.c ****     *
1852:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1853:Generated_Source\PSoC5/Button.c ****     void Button_SetPrescaler(uint8 prescaler) CYREENTRANT
1854:Generated_Source\PSoC5/Button.c ****     {
 488              		.loc 1 1854 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL38:
1855:Generated_Source\PSoC5/Button.c ****         /* Set Prescaler */
1856:Generated_Source\PSoC5/Button.c ****         #if (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB)
1857:Generated_Source\PSoC5/Button.c ****             Button_PRESCALER_PERIOD_REG = prescaler;
 494              		.loc 1 1857 0
 495 0000 024B     		ldr	r3, .L41
 496 0002 1870     		strb	r0, [r3]
1858:Generated_Source\PSoC5/Button.c ****             Button_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 497              		.loc 1 1858 0
 498 0004 4008     		lsrs	r0, r0, #1
 499              	.LVL39:
 500 0006 1033     		adds	r3, r3, #16
 501              	.LVL40:
 502 0008 1870     		strb	r0, [r3]
 503              	.LVL41:
 504 000a 7047     		bx	lr
 505              	.L42:
 506              		.align	2
 507              	.L41:
 508 000c 2B640040 		.word	1073767467
 509              		.cfi_endproc
 510              	.LFE15:
 511              		.size	Button_SetPrescaler, .-Button_SetPrescaler
 512              		.section	.text.Button_SetScanSlotSettings,"ax",%progbits
 513              		.align	2
 514              		.global	Button_SetScanSlotSettings
 515              		.thumb
 516              		.thumb_func
 517              		.type	Button_SetScanSlotSettings, %function
 518              	Button_SetScanSlotSettings:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 43


 519              	.LFB5:
 809:Generated_Source\PSoC5/Button.c ****     uint8 widget;
 520              		.loc 1 809 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL42:
 525 0000 70B5     		push	{r4, r5, r6, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 4, -16
 528              		.cfi_offset 5, -12
 529              		.cfi_offset 6, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 814:Generated_Source\PSoC5/Button.c ****         
 532              		.loc 1 814 0
 533 0004 084B     		ldr	r3, .L45
 534 0006 0344     		add	r3, r3, r0
 535 0008 93F83050 		ldrb	r5, [r3, #48]	@ zero_extendqisi2
 536              	.LVL43:
 818:Generated_Source\PSoC5/Button.c ****         #endif  /* Button_CURRENT_SOURCE */
 537              		.loc 1 818 0
 538 000c 074E     		ldr	r6, .L45+4
 539 000e 3318     		adds	r3, r6, r0
 540 0010 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 541              	.LVL44:
 542 0012 FFF7FEFF 		bl	Button_IdacCH0_SetValue
 543              	.LVL45:
 826:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_IMPLEMENTATION_CH0 == Button_MEASURE_IMPLEMENTATION_FF) */ 
 544              		.loc 1 826 0
 545 0016 3544     		add	r5, r5, r6
 546              	.LVL46:
 547 0018 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 548 001a 054B     		ldr	r3, .L45+8
 549 001c 1A70     		strb	r2, [r3]
 831:Generated_Source\PSoC5/Button.c ****         #elif (Button_PRESCALER_OPTIONS)
 550              		.loc 1 831 0
 551 001e 054B     		ldr	r3, .L45+12
 552 0020 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 553 0022 FFF7FEFF 		bl	Button_SetPrescaler
 554              	.LVL47:
 555 0026 70BD     		pop	{r4, r5, r6, pc}
 556              	.LVL48:
 557              	.L46:
 558              		.align	2
 559              	.L45:
 560 0028 00000000 		.word	.LANCHOR1
 561 002c 00000000 		.word	.LANCHOR0
 562 0030 52640040 		.word	1073767506
 563 0034 00000000 		.word	Button_analogSwitchDivider
 564              		.cfi_endproc
 565              	.LFE5:
 566              		.size	Button_SetScanSlotSettings, .-Button_SetScanSlotSettings
 567              		.section	.text.Button_PreScan,"ax",%progbits
 568              		.align	2
 569              		.global	Button_PreScan
 570              		.thumb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 44


 571              		.thumb_func
 572              		.type	Button_PreScan, %function
 573              	Button_PreScan:
 574              	.LFB13:
1416:Generated_Source\PSoC5/Button.c ****     /* Set Sensor Settings */
 575              		.loc 1 1416 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              	.LVL49:
 580 0000 38B5     		push	{r3, r4, r5, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586 0002 0546     		mov	r5, r0
1418:Generated_Source\PSoC5/Button.c ****     
 587              		.loc 1 1418 0
 588 0004 FFF7FEFF 		bl	Button_SetScanSlotSettings
 589              	.LVL50:
1430:Generated_Source\PSoC5/Button.c ****         
 590              		.loc 1 1430 0
 591 0008 084C     		ldr	r4, .L49
 592 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 593 000c 43F00103 		orr	r3, r3, #1
 594 0010 2370     		strb	r3, [r4]
1438:Generated_Source\PSoC5/Button.c ****             #endif  /* (Button_VREF_VDAC != Button_VREF_OPTIONS) */
 595              		.loc 1 1438 0
 596 0012 074A     		ldr	r2, .L49+4
 597 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 598 0016 03F0FE03 		and	r3, r3, #254
 599 001a 1370     		strb	r3, [r2]
1442:Generated_Source\PSoC5/Button.c ****             
 600              		.loc 1 1442 0
 601 001c 2846     		mov	r0, r5
 602 001e FFF7FEFF 		bl	Button_EnableSensor
 603              	.LVL51:
1546:Generated_Source\PSoC5/Button.c ****     
 604              		.loc 1 1546 0
 605 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 606 0024 43F00203 		orr	r3, r3, #2
 607 0028 2370     		strb	r3, [r4]
 608 002a 38BD     		pop	{r3, r4, r5, pc}
 609              	.L50:
 610              		.align	2
 611              	.L49:
 612 002c 75640040 		.word	1073767541
 613 0030 72580040 		.word	1073764466
 614              		.cfi_endproc
 615              	.LFE13:
 616              		.size	Button_PreScan, .-Button_PreScan
 617              		.section	.text.Button_ScanSensor,"ax",%progbits
 618              		.align	2
 619              		.global	Button_ScanSensor
 620              		.thumb
 621              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 45


 622              		.type	Button_ScanSensor, %function
 623              	Button_ScanSensor:
 624              	.LFB6:
 921:Generated_Source\PSoC5/Button.c ****     /* Clears status/control variable and set sensorIndex */
 625              		.loc 1 921 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              	.LVL52:
 630 0000 08B5     		push	{r3, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 3, -8
 633              		.cfi_offset 14, -4
 923:Generated_Source\PSoC5/Button.c ****     Button_sensorIndex = sensor;
 634              		.loc 1 923 0
 635 0002 054B     		ldr	r3, .L53
 636 0004 0022     		movs	r2, #0
 637 0006 1A70     		strb	r2, [r3]
 924:Generated_Source\PSoC5/Button.c ****     
 638              		.loc 1 924 0
 639 0008 044A     		ldr	r2, .L53+4
 640 000a 1070     		strb	r0, [r2]
 928:Generated_Source\PSoC5/Button.c ****         Button_PreScan(sensor);
 641              		.loc 1 928 0
 642 000c 8122     		movs	r2, #129
 643 000e 1A70     		strb	r2, [r3]
 929:Generated_Source\PSoC5/Button.c ****         
 644              		.loc 1 929 0
 645 0010 FFF7FEFF 		bl	Button_PreScan
 646              	.LVL53:
 647 0014 08BD     		pop	{r3, pc}
 648              	.L54:
 649 0016 00BF     		.align	2
 650              	.L53:
 651 0018 00000000 		.word	Button_csv
 652 001c 00000000 		.word	Button_sensorIndex
 653              		.cfi_endproc
 654              	.LFE6:
 655              		.size	Button_ScanSensor, .-Button_ScanSensor
 656              		.section	.text.Button_ScanEnabledWidgets,"ax",%progbits
 657              		.align	2
 658              		.global	Button_ScanEnabledWidgets
 659              		.thumb
 660              		.thumb_func
 661              		.type	Button_ScanEnabledWidgets, %function
 662              	Button_ScanEnabledWidgets:
 663              	.LFB7:
 998:Generated_Source\PSoC5/Button.c ****     /* Clears status/control variable and set sensorIndex */
 664              		.loc 1 998 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668 0000 10B5     		push	{r4, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 4, -8
 671              		.cfi_offset 14, -4
1000:Generated_Source\PSoC5/Button.c ****     Button_sensorIndex = 0xFFu;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 46


 672              		.loc 1 1000 0
 673 0002 0022     		movs	r2, #0
 674 0004 0A4B     		ldr	r3, .L58
 675 0006 1A70     		strb	r2, [r3]
1001:Generated_Source\PSoC5/Button.c ****     
 676              		.loc 1 1001 0
 677 0008 0A4C     		ldr	r4, .L58+4
 678 000a FF23     		movs	r3, #255
 679 000c 2370     		strb	r3, [r4]
1005:Generated_Source\PSoC5/Button.c **** 
 680              		.loc 1 1005 0
 681 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 682 0010 FFF7FEFF 		bl	Button_FindNextSensor
 683              	.LVL54:
 684 0014 2070     		strb	r0, [r4]
1008:Generated_Source\PSoC5/Button.c ****         {
 685              		.loc 1 1008 0
 686 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 687 0018 DBB2     		uxtb	r3, r3
 688 001a 012B     		cmp	r3, #1
 689 001c 07D8     		bhi	.L55
1010:Generated_Source\PSoC5/Button.c ****             Button_PreScan(Button_sensorIndex);
 690              		.loc 1 1010 0
 691 001e 044A     		ldr	r2, .L58
 692 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 693 0022 43F00103 		orr	r3, r3, #1
 694 0026 1370     		strb	r3, [r2]
1011:Generated_Source\PSoC5/Button.c ****         }
 695              		.loc 1 1011 0
 696 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 697 002a FFF7FEFF 		bl	Button_PreScan
 698              	.LVL55:
 699              	.L55:
 700 002e 10BD     		pop	{r4, pc}
 701              	.L59:
 702              		.align	2
 703              	.L58:
 704 0030 00000000 		.word	Button_csv
 705 0034 00000000 		.word	Button_sensorIndex
 706              		.cfi_endproc
 707              	.LFE7:
 708              		.size	Button_ScanEnabledWidgets, .-Button_ScanEnabledWidgets
 709              		.section	.text.Button_GetPrescaler,"ax",%progbits
 710              		.align	2
 711              		.global	Button_GetPrescaler
 712              		.thumb
 713              		.thumb_func
 714              		.type	Button_GetPrescaler, %function
 715              	Button_GetPrescaler:
 716              	.LFB16:
1859:Generated_Source\PSoC5/Button.c ****         #elif (Button_PRESCALER_OPTIONS == Button_PRESCALER_FF)
1860:Generated_Source\PSoC5/Button.c ****             CY_SET_REG16(Button_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1861:Generated_Source\PSoC5/Button.c ****             CY_SET_REG16(Button_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1862:Generated_Source\PSoC5/Button.c ****         #else
1863:Generated_Source\PSoC5/Button.c ****             /* Do nothing = config without prescaler */
1864:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB) */
1865:Generated_Source\PSoC5/Button.c ****     }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 47


1866:Generated_Source\PSoC5/Button.c **** 
1867:Generated_Source\PSoC5/Button.c **** 
1868:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1869:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_GetPrescaler
1870:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1871:Generated_Source\PSoC5/Button.c ****     *
1872:Generated_Source\PSoC5/Button.c ****     * Summary:
1873:Generated_Source\PSoC5/Button.c ****     *  Gets analog switch divider.
1874:Generated_Source\PSoC5/Button.c ****     *
1875:Generated_Source\PSoC5/Button.c ****     * Parameters:
1876:Generated_Source\PSoC5/Button.c ****     *  None
1877:Generated_Source\PSoC5/Button.c ****     *
1878:Generated_Source\PSoC5/Button.c ****     * Return:
1879:Generated_Source\PSoC5/Button.c ****     *   Returns the prescaler divider value.
1880:Generated_Source\PSoC5/Button.c ****     *
1881:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1882:Generated_Source\PSoC5/Button.c ****     uint8 Button_GetPrescaler(void) 
1883:Generated_Source\PSoC5/Button.c ****     {
 717              		.loc 1 1883 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722              	.LVL56:
1884:Generated_Source\PSoC5/Button.c ****         uint8 prescaler = 0u;
1885:Generated_Source\PSoC5/Button.c **** 
1886:Generated_Source\PSoC5/Button.c ****         /* Get Prescaler */
1887:Generated_Source\PSoC5/Button.c ****         #if (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB)
1888:Generated_Source\PSoC5/Button.c ****             prescaler = Button_PRESCALER_PERIOD_REG;
 723              		.loc 1 1888 0
 724 0000 014B     		ldr	r3, .L61
 725 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 726              	.LVL57:
1889:Generated_Source\PSoC5/Button.c ****             
1890:Generated_Source\PSoC5/Button.c ****         #elif (Button_PRESCALER_OPTIONS == Button_PRESCALER_FF)
1891:Generated_Source\PSoC5/Button.c ****             prescaler = (uint8) CY_GET_REG16(Button_PRESCALER_PERIOD_PTR);
1892:Generated_Source\PSoC5/Button.c ****             
1893:Generated_Source\PSoC5/Button.c ****         #else
1894:Generated_Source\PSoC5/Button.c ****             /* Do nothing = config without prescaler */
1895:Generated_Source\PSoC5/Button.c ****         #endif  /* (Button_PRESCALER_OPTIONS == Button_PRESCALER_UDB) */
1896:Generated_Source\PSoC5/Button.c ****         
1897:Generated_Source\PSoC5/Button.c ****         return (prescaler);
1898:Generated_Source\PSoC5/Button.c ****     }
 727              		.loc 1 1898 0
 728 0004 7047     		bx	lr
 729              	.L62:
 730 0006 00BF     		.align	2
 731              	.L61:
 732 0008 2B640040 		.word	1073767467
 733              		.cfi_endproc
 734              	.LFE16:
 735              		.size	Button_GetPrescaler, .-Button_GetPrescaler
 736              		.section	.text.Button_SetScanSpeed,"ax",%progbits
 737              		.align	2
 738              		.global	Button_SetScanSpeed
 739              		.thumb
 740              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 48


 741              		.type	Button_SetScanSpeed, %function
 742              	Button_SetScanSpeed:
 743              	.LFB17:
1899:Generated_Source\PSoC5/Button.c **** #endif  /* Button_PRESCALER_OPTIONS */
1900:Generated_Source\PSoC5/Button.c **** 
1901:Generated_Source\PSoC5/Button.c **** 
1902:Generated_Source\PSoC5/Button.c **** /*******************************************************************************
1903:Generated_Source\PSoC5/Button.c **** * Function Name: Button_SetScanSpeed
1904:Generated_Source\PSoC5/Button.c **** ********************************************************************************
1905:Generated_Source\PSoC5/Button.c **** *
1906:Generated_Source\PSoC5/Button.c **** * Summary:
1907:Generated_Source\PSoC5/Button.c **** *  Sets ScanSpeed divider.
1908:Generated_Source\PSoC5/Button.c **** *
1909:Generated_Source\PSoC5/Button.c **** * Parameters:
1910:Generated_Source\PSoC5/Button.c **** *  scanspeed:  Sets ScanSpeed divider.
1911:Generated_Source\PSoC5/Button.c **** *
1912:Generated_Source\PSoC5/Button.c **** * Return:
1913:Generated_Source\PSoC5/Button.c **** *  None
1914:Generated_Source\PSoC5/Button.c **** *
1915:Generated_Source\PSoC5/Button.c **** *******************************************************************************/
1916:Generated_Source\PSoC5/Button.c **** void Button_SetScanSpeed(uint8 scanSpeed) 
1917:Generated_Source\PSoC5/Button.c **** {
 744              		.loc 1 1917 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL58:
1918:Generated_Source\PSoC5/Button.c ****     Button_SCANSPEED_PERIOD_REG = scanSpeed; 
 750              		.loc 1 1918 0
 751 0000 014B     		ldr	r3, .L64
 752 0002 1870     		strb	r0, [r3]
 753 0004 7047     		bx	lr
 754              	.L65:
 755 0006 00BF     		.align	2
 756              	.L64:
 757 0008 82640040 		.word	1073767554
 758              		.cfi_endproc
 759              	.LFE17:
 760              		.size	Button_SetScanSpeed, .-Button_SetScanSpeed
 761              		.section	.text.Button_SetAnalogSwitchesSource,"ax",%progbits
 762              		.align	2
 763              		.global	Button_SetAnalogSwitchesSource
 764              		.thumb
 765              		.thumb_func
 766              		.type	Button_SetAnalogSwitchesSource, %function
 767              	Button_SetAnalogSwitchesSource:
 768              	.LFB18:
1919:Generated_Source\PSoC5/Button.c **** }
1920:Generated_Source\PSoC5/Button.c **** 
1921:Generated_Source\PSoC5/Button.c **** 
1922:Generated_Source\PSoC5/Button.c **** #if (Button_PRS_OPTIONS)
1923:Generated_Source\PSoC5/Button.c ****     /*******************************************************************************
1924:Generated_Source\PSoC5/Button.c ****     * Function Name: Button_SetAnalogSwitchesSource
1925:Generated_Source\PSoC5/Button.c ****     ********************************************************************************
1926:Generated_Source\PSoC5/Button.c ****     *
1927:Generated_Source\PSoC5/Button.c ****     * Summary:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 49


1928:Generated_Source\PSoC5/Button.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1929:Generated_Source\PSoC5/Button.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1930:Generated_Source\PSoC5/Button.c ****     *  This function is used in auto-tuning procedure.
1931:Generated_Source\PSoC5/Button.c ****     *
1932:Generated_Source\PSoC5/Button.c ****     * Parameters:
1933:Generated_Source\PSoC5/Button.c ****     *  src:  analog switches source:
1934:Generated_Source\PSoC5/Button.c ****     *           Button_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1935:Generated_Source\PSoC5/Button.c ****     *           Button_ANALOG_SWITCHES_SRC_PRS - selects PRS
1936:Generated_Source\PSoC5/Button.c ****     *
1937:Generated_Source\PSoC5/Button.c ****     * Return:
1938:Generated_Source\PSoC5/Button.c ****     *  None
1939:Generated_Source\PSoC5/Button.c ****     *
1940:Generated_Source\PSoC5/Button.c ****     * Reentrant:
1941:Generated_Source\PSoC5/Button.c ****     *  No
1942:Generated_Source\PSoC5/Button.c ****     *******************************************************************************/
1943:Generated_Source\PSoC5/Button.c ****     void Button_SetAnalogSwitchesSource(uint8 src)
1944:Generated_Source\PSoC5/Button.c ****                       
1945:Generated_Source\PSoC5/Button.c ****     {
 769              		.loc 1 1945 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774              	.LVL59:
1946:Generated_Source\PSoC5/Button.c ****         if(src == Button_ANALOG_SWITCHES_SRC_PRESCALER)
 775              		.loc 1 1946 0
 776 0000 0128     		cmp	r0, #1
 777 0002 05D1     		bne	.L67
1947:Generated_Source\PSoC5/Button.c ****         {
1948:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG &= (uint8)~0x10u;
 778              		.loc 1 1948 0
 779 0004 054A     		ldr	r2, .L69
 780 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 781 0008 03F0EF03 		and	r3, r3, #239
 782 000c 1370     		strb	r3, [r2]
 783 000e 7047     		bx	lr
 784              	.L67:
1949:Generated_Source\PSoC5/Button.c ****         }
1950:Generated_Source\PSoC5/Button.c ****         else
1951:Generated_Source\PSoC5/Button.c ****         {
1952:Generated_Source\PSoC5/Button.c ****             Button_CONTROL_REG |= 0x10u;
 785              		.loc 1 1952 0
 786 0010 024A     		ldr	r2, .L69
 787 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 788 0014 43F01003 		orr	r3, r3, #16
 789 0018 1370     		strb	r3, [r2]
 790 001a 7047     		bx	lr
 791              	.L70:
 792              		.align	2
 793              	.L69:
 794 001c 75640040 		.word	1073767541
 795              		.cfi_endproc
 796              	.LFE18:
 797              		.size	Button_SetAnalogSwitchesSource, .-Button_SetAnalogSwitchesSource
 798              		.section	.text.Button_Init,"ax",%progbits
 799              		.align	2
 800              		.global	Button_Init
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 50


 801              		.thumb
 802              		.thumb_func
 803              		.type	Button_Init, %function
 804              	Button_Init:
 805              	.LFB0:
 102:Generated_Source\PSoC5/Button.c ****     #if ( (Button_PRS_OPTIONS) || \
 806              		.loc 1 102 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 38B5     		push	{r3, r4, r5, lr}
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 3, -16
 813              		.cfi_offset 4, -12
 814              		.cfi_offset 5, -8
 815              		.cfi_offset 14, -4
 116:Generated_Source\PSoC5/Button.c **** 
 816              		.loc 1 116 0
 817 0002 FFF7FEFF 		bl	Button_ClearSensors
 818              	.LVL60:
 132:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_PRS_OPTIONS) */
 819              		.loc 1 132 0
 820 0006 0220     		movs	r0, #2
 821 0008 FFF7FEFF 		bl	Button_SetAnalogSwitchesSource
 822              	.LVL61:
 148:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_A_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 823              		.loc 1 148 0
 824 000c FFF7FEFF 		bl	CyEnterCriticalSection
 825              	.LVL62:
 149:Generated_Source\PSoC5/Button.c ****         Button_AUX_CONTROL_B_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 826              		.loc 1 149 0
 827 0010 2E4A     		ldr	r2, .L73
 828 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 829 0014 43F00303 		orr	r3, r3, #3
 830 0018 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 831              		.loc 1 150 0
 832 001a 0132     		adds	r2, r2, #1
 833 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 834 001e 43F00303 		orr	r3, r3, #3
 835 0022 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/Button.c ****         
 836              		.loc 1 151 0
 837 0024 FFF7FEFF 		bl	CyExitCriticalSection
 838              	.LVL63:
 154:Generated_Source\PSoC5/Button.c ****         /* Write FIFO with seed */
 839              		.loc 1 154 0
 840 0028 4FF43442 		mov	r2, #46080
 841 002c 284B     		ldr	r3, .L73+4
 842 002e 1A80     		strh	r2, [r3]	@ movhi
 156:Generated_Source\PSoC5/Button.c ****                 
 843              		.loc 1 156 0
 844 0030 4FF6FF74 		movw	r4, #65535
 845 0034 2033     		adds	r3, r3, #32
 846 0036 1C80     		strh	r4, [r3]	@ movhi
 176:Generated_Source\PSoC5/Button.c ****     
 847              		.loc 1 176 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 51


 848 0038 0725     		movs	r5, #7
 849 003a 3E33     		adds	r3, r3, #62
 850 003c 1D70     		strb	r5, [r3]
 192:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 851              		.loc 1 192 0
 852 003e FFF7FEFF 		bl	CyEnterCriticalSection
 853              	.LVL64:
 193:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_AUX_CONTROL_REG |= Button_AUXCTRL_FIFO_SINGLE_REG;
 854              		.loc 1 193 0
 855 0042 244A     		ldr	r2, .L73+8
 856 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 857 0046 43F00303 		orr	r3, r3, #3
 858 004a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/Button.c ****         CyExitCriticalSection(enableInterrupts);
 859              		.loc 1 194 0
 860 004c 013A     		subs	r2, r2, #1
 861 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 862 0050 43F00303 		orr	r3, r3, #3
 863 0054 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/Button.c ****         
 864              		.loc 1 195 0
 865 0056 FFF7FEFF 		bl	CyExitCriticalSection
 866              	.LVL65:
 198:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 867              		.loc 1 198 0
 868 005a FF23     		movs	r3, #255
 869 005c 1E4A     		ldr	r2, .L73+12
 870 005e 1470     		strb	r4, [r2]
 199:Generated_Source\PSoC5/Button.c ****         Button_PWM_CH0_COUNTER_LO_REG   = Button_MEASURE_FULL_RANGE_LOW;
 871              		.loc 1 199 0
 872 0060 2032     		adds	r2, r2, #32
 873 0062 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/Button.c ****         
 874              		.loc 1 200 0
 875 0064 403A     		subs	r2, r2, #64
 876 0066 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_PERIOD_HI_REG    = Button_MEASURE_FULL_RANGE_LOW;
 877              		.loc 1 203 0
 878 0068 1F32     		adds	r2, r2, #31
 879 006a 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/Button.c ****         Button_RAW_CH0_PERIOD_LO_REG    = Button_MEASURE_FULL_RANGE_LOW;
 880              		.loc 1 204 0
 881 006c 3032     		adds	r2, r2, #48
 882 006e 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/Button.c ****         
 883              		.loc 1 205 0
 884 0070 103A     		subs	r2, r2, #16
 885 0072 1370     		strb	r3, [r2]
 244:Generated_Source\PSoC5/Button.c ****     (void)CyIntSetVector(Button_IsrCH0_ISR_NUMBER, &Button_IsrCH0_ISR);
 886              		.loc 1 244 0
 887 0074 0224     		movs	r4, #2
 888 0076 03F1E023 		add	r3, r3, #-536813568
 889 007a 8133     		adds	r3, r3, #129
 890 007c 1C60     		str	r4, [r3]
 245:Generated_Source\PSoC5/Button.c ****     CyIntSetPriority(Button_IsrCH0_ISR_NUMBER, Button_IsrCH0_ISR_PRIORITY);
 891              		.loc 1 245 0
 892 007e 1749     		ldr	r1, .L73+16
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 52


 893 0080 0120     		movs	r0, #1
 894 0082 FFF7FEFF 		bl	CyIntSetVector
 895              	.LVL66:
 246:Generated_Source\PSoC5/Button.c ****     
 896              		.loc 1 246 0
 897 0086 2946     		mov	r1, r5
 898 0088 0120     		movs	r0, #1
 899 008a FFF7FEFF 		bl	CyIntSetPriority
 900              	.LVL67:
 255:Generated_Source\PSoC5/Button.c ****     Button_AMuxCH0_Connect(Button_AMuxCH0_CMOD_CHANNEL);
 901              		.loc 1 255 0
 902 008e FFF7FEFF 		bl	Button_AMuxCH0_Init
 903              	.LVL68:
 256:Generated_Source\PSoC5/Button.c ****     Button_AMuxCH0_Connect(Button_AMuxCH0_CMP_VP_CHANNEL);
 904              		.loc 1 256 0
 905 0092 2046     		mov	r0, r4
 906 0094 FFF7FEFF 		bl	Button_AMuxCH0_Set
 907              	.LVL69:
 257:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 908              		.loc 1 257 0
 909 0098 0320     		movs	r0, #3
 910 009a FFF7FEFF 		bl	Button_AMuxCH0_Set
 911              	.LVL70:
 259:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 912              		.loc 1 259 0
 913 009e 0420     		movs	r0, #4
 914 00a0 FFF7FEFF 		bl	Button_AMuxCH0_Set
 915              	.LVL71:
 277:Generated_Source\PSoC5/Button.c ****     #if (Button_DESIGN_TYPE == Button_TWO_CHANNELS_DESIGN)
 916              		.loc 1 277 0
 917 00a4 0E4A     		ldr	r2, .L73+20
 918 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 919 00a8 43F00403 		orr	r3, r3, #4
 920 00ac 1370     		strb	r3, [r2]
 283:Generated_Source\PSoC5/Button.c ****     #if (Button_CURRENT_SOURCE)
 921              		.loc 1 283 0
 922 00ae FFF7FEFF 		bl	Button_CompCH0_Init
 923              	.LVL72:
 285:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetPolarity(Button_IdacCH0_IDIR);
 924              		.loc 1 285 0
 925 00b2 FFF7FEFF 		bl	Button_IdacCH0_Init
 926              	.LVL73:
 286:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetRange(Button_IDAC_RANGE_VALUE);
 927              		.loc 1 286 0
 928 00b6 0020     		movs	r0, #0
 929 00b8 FFF7FEFF 		bl	Button_IdacCH0_SetPolarity
 930              	.LVL74:
 287:Generated_Source\PSoC5/Button.c ****         Button_IdacCH0_SetValue(Button_TURN_OFF_IDAC);
 931              		.loc 1 287 0
 932 00bc 0420     		movs	r0, #4
 933 00be FFF7FEFF 		bl	Button_IdacCH0_SetRange
 934              	.LVL75:
 288:Generated_Source\PSoC5/Button.c ****     #endif  /* Button_CURRENT_SOURCE */
 935              		.loc 1 288 0
 936 00c2 0020     		movs	r0, #0
 937 00c4 FFF7FEFF 		bl	Button_IdacCH0_SetValue
 938              	.LVL76:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 53


 939 00c8 38BD     		pop	{r3, r4, r5, pc}
 940              	.L74:
 941 00ca 00BF     		.align	2
 942              	.L73:
 943 00cc 94640040 		.word	1073767572
 944 00d0 24640040 		.word	1073767460
 945 00d4 92640040 		.word	1073767570
 946 00d8 22640040 		.word	1073767458
 947 00dc 00000000 		.word	Button_IsrCH0_ISR
 948 00e0 75640040 		.word	1073767541
 949              		.cfi_endproc
 950              	.LFE0:
 951              		.size	Button_Init, .-Button_Init
 952              		.section	.text.Button_Start,"ax",%progbits
 953              		.align	2
 954              		.global	Button_Start
 955              		.thumb
 956              		.thumb_func
 957              		.type	Button_Start, %function
 958              	Button_Start:
 959              	.LFB2:
 480:Generated_Source\PSoC5/Button.c ****     if (Button_initVar == 0u)
 960              		.loc 1 480 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964 0000 08B5     		push	{r3, lr}
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 3, -8
 967              		.cfi_offset 14, -4
 481:Generated_Source\PSoC5/Button.c ****     {
 968              		.loc 1 481 0
 969 0002 084B     		ldr	r3, .L78
 970 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0006 23B9     		cbnz	r3, .L76
 483:Generated_Source\PSoC5/Button.c ****         Button_initVar = 1u;
 972              		.loc 1 483 0
 973 0008 FFF7FEFF 		bl	Button_Init
 974              	.LVL77:
 484:Generated_Source\PSoC5/Button.c ****     }
 975              		.loc 1 484 0
 976 000c 0122     		movs	r2, #1
 977 000e 054B     		ldr	r3, .L78
 978 0010 1A70     		strb	r2, [r3]
 979              	.L76:
 486:Generated_Source\PSoC5/Button.c ****     
 980              		.loc 1 486 0
 981 0012 FFF7FEFF 		bl	Button_Enable
 982              	.LVL78:
 491:Generated_Source\PSoC5/Button.c ****         Button_lowLevelTuningDone = 1u;
 983              		.loc 1 491 0
 984 0016 FFF7FEFF 		bl	Button_AutoTune
 985              	.LVL79:
 492:Generated_Source\PSoC5/Button.c ****     #endif /* (Button_TUNING_METHOD == Button_AUTO_TUNING) */
 986              		.loc 1 492 0
 987 001a 0122     		movs	r2, #1
 988 001c 024B     		ldr	r3, .L78+4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 54


 989 001e 9A72     		strb	r2, [r3, #10]
 990 0020 08BD     		pop	{r3, pc}
 991              	.L79:
 992 0022 00BF     		.align	2
 993              	.L78:
 994 0024 00000000 		.word	.LANCHOR2
 995 0028 00000000 		.word	.LANCHOR0
 996              		.cfi_endproc
 997              	.LFE2:
 998              		.size	Button_Start, .-Button_Start
 999              		.global	Button_widgetNumber
 1000              		.comm	Button_analogSwitchDivider,2,4
 1001              		.global	Button_widgetResolution
 1002              		.global	Button_idacSettings
 1003              		.global	Button_csTable
 1004              		.global	Button_maskTable
 1005              		.global	Button_portTable
 1006              		.global	Button_pcTable
 1007              		.global	Button_sensorEnableMask
 1008              		.comm	Button_sensorRaw,4,4
 1009              		.global	Button_lowLevelTuningDone
 1010              		.comm	Button_sensorIndex,1,1
 1011              		.comm	Button_csv,1,1
 1012              		.section	.rodata
 1013              		.align	2
 1014              		.set	.LANCHOR1,. + 0
 1015              		.type	Button_portTable, %object
 1016              		.size	Button_portTable, 2
 1017              	Button_portTable:
 1018 0000 03       		.byte	3
 1019 0001 03       		.byte	3
 1020 0002 0000     		.space	2
 1021              		.type	Button_maskTable, %object
 1022              		.size	Button_maskTable, 2
 1023              	Button_maskTable:
 1024 0004 04       		.byte	4
 1025 0005 10       		.byte	16
 1026 0006 0000     		.space	2
 1027              		.type	Button_pcTable, %object
 1028              		.size	Button_pcTable, 8
 1029              	Button_pcTable:
 1030 0008 1A500040 		.word	1073762330
 1031 000c 1C500040 		.word	1073762332
 1032              		.type	Button_csTable, %object
 1033              		.size	Button_csTable, 32
 1034              	Button_csTable:
 1035 0010 06520040 		.word	1073762822
 1036 0014 0E520040 		.word	1073762830
 1037 0018 16520040 		.word	1073762838
 1038 001c 1E520040 		.word	1073762846
 1039 0020 26520040 		.word	1073762854
 1040 0024 2E520040 		.word	1073762862
 1041 0028 36520040 		.word	1073762870
 1042 002c 7E520040 		.word	1073762942
 1043              		.type	Button_widgetNumber, %object
 1044              		.size	Button_widgetNumber, 2
 1045              	Button_widgetNumber:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 55


 1046 0030 00       		.byte	0
 1047 0031 01       		.byte	1
 1048              		.data
 1049              		.align	2
 1050              		.set	.LANCHOR0,. + 0
 1051              		.type	Button_sensorEnableMask, %object
 1052              		.size	Button_sensorEnableMask, 1
 1053              	Button_sensorEnableMask:
 1054 0000 03       		.byte	3
 1055 0001 000000   		.space	3
 1056              		.type	Button_idacSettings, %object
 1057              		.size	Button_idacSettings, 2
 1058              	Button_idacSettings:
 1059 0004 C8       		.byte	-56
 1060 0005 C8       		.byte	-56
 1061 0006 0000     		.space	2
 1062              		.type	Button_widgetResolution, %object
 1063              		.size	Button_widgetResolution, 2
 1064              	Button_widgetResolution:
 1065 0008 03       		.byte	3
 1066 0009 03       		.byte	3
 1067              		.type	Button_lowLevelTuningDone, %object
 1068              		.size	Button_lowLevelTuningDone, 1
 1069              	Button_lowLevelTuningDone:
 1070 000a 01       		.byte	1
 1071              		.bss
 1072              		.set	.LANCHOR2,. + 0
 1073              		.type	Button_initVar, %object
 1074              		.size	Button_initVar, 1
 1075              	Button_initVar:
 1076 0000 00       		.space	1
 1077              		.text
 1078              	.Letext0:
 1079              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1080              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1081              		.file 4 "Generated_Source\\PSoC5\\Button_IntClock.h"
 1082              		.file 5 "Generated_Source\\PSoC5\\Button_CompCH0.h"
 1083              		.file 6 "Generated_Source\\PSoC5\\Button_IdacCH0.h"
 1084              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1085              		.file 8 "Generated_Source\\PSoC5\\Button_AMuxCH0.h"
 1086              		.file 9 "Generated_Source\\PSoC5\\Button.h"
 1087              		.section	.debug_info,"",%progbits
 1088              	.Ldebug_info0:
 1089 0000 3C080000 		.4byte	0x83c
 1090 0004 0400     		.2byte	0x4
 1091 0006 00000000 		.4byte	.Ldebug_abbrev0
 1092 000a 04       		.byte	0x4
 1093 000b 01       		.uleb128 0x1
 1094 000c 18040000 		.4byte	.LASF81
 1095 0010 0C       		.byte	0xc
 1096 0011 58030000 		.4byte	.LASF82
 1097 0015 9A030000 		.4byte	.LASF83
 1098 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1099 001d 00000000 		.4byte	0
 1100 0021 00000000 		.4byte	.Ldebug_line0
 1101 0025 02       		.uleb128 0x2
 1102 0026 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 56


 1103 0027 06       		.byte	0x6
 1104 0028 ED000000 		.4byte	.LASF0
 1105 002c 02       		.uleb128 0x2
 1106 002d 01       		.byte	0x1
 1107 002e 08       		.byte	0x8
 1108 002f 8C030000 		.4byte	.LASF1
 1109 0033 02       		.uleb128 0x2
 1110 0034 02       		.byte	0x2
 1111 0035 05       		.byte	0x5
 1112 0036 E7030000 		.4byte	.LASF2
 1113 003a 02       		.uleb128 0x2
 1114 003b 02       		.byte	0x2
 1115 003c 07       		.byte	0x7
 1116 003d 4D020000 		.4byte	.LASF3
 1117 0041 02       		.uleb128 0x2
 1118 0042 04       		.byte	0x4
 1119 0043 05       		.byte	0x5
 1120 0044 1E010000 		.4byte	.LASF4
 1121 0048 02       		.uleb128 0x2
 1122 0049 04       		.byte	0x4
 1123 004a 07       		.byte	0x7
 1124 004b E8010000 		.4byte	.LASF5
 1125 004f 02       		.uleb128 0x2
 1126 0050 08       		.byte	0x8
 1127 0051 05       		.byte	0x5
 1128 0052 DF000000 		.4byte	.LASF6
 1129 0056 02       		.uleb128 0x2
 1130 0057 08       		.byte	0x8
 1131 0058 07       		.byte	0x7
 1132 0059 B7000000 		.4byte	.LASF7
 1133 005d 03       		.uleb128 0x3
 1134 005e 04       		.byte	0x4
 1135 005f 05       		.byte	0x5
 1136 0060 696E7400 		.ascii	"int\000"
 1137 0064 02       		.uleb128 0x2
 1138 0065 04       		.byte	0x4
 1139 0066 07       		.byte	0x7
 1140 0067 9B010000 		.4byte	.LASF8
 1141 006b 04       		.uleb128 0x4
 1142 006c 43010000 		.4byte	.LASF9
 1143 0070 02       		.byte	0x2
 1144 0071 9201     		.2byte	0x192
 1145 0073 2C000000 		.4byte	0x2c
 1146 0077 04       		.uleb128 0x4
 1147 0078 14000000 		.4byte	.LASF10
 1148 007c 02       		.byte	0x2
 1149 007d 9301     		.2byte	0x193
 1150 007f 3A000000 		.4byte	0x3a
 1151 0083 04       		.uleb128 0x4
 1152 0084 72010000 		.4byte	.LASF11
 1153 0088 02       		.byte	0x2
 1154 0089 9401     		.2byte	0x194
 1155 008b 48000000 		.4byte	0x48
 1156 008f 02       		.uleb128 0x2
 1157 0090 04       		.byte	0x4
 1158 0091 04       		.byte	0x4
 1159 0092 3D030000 		.4byte	.LASF12
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 57


 1160 0096 02       		.uleb128 0x2
 1161 0097 08       		.byte	0x8
 1162 0098 04       		.byte	0x4
 1163 0099 49010000 		.4byte	.LASF13
 1164 009d 02       		.uleb128 0x2
 1165 009e 01       		.byte	0x1
 1166 009f 08       		.byte	0x8
 1167 00a0 D3040000 		.4byte	.LASF14
 1168 00a4 04       		.uleb128 0x4
 1169 00a5 78030000 		.4byte	.LASF15
 1170 00a9 02       		.byte	0x2
 1171 00aa 3C02     		.2byte	0x23c
 1172 00ac B0000000 		.4byte	0xb0
 1173 00b0 05       		.uleb128 0x5
 1174 00b1 6B000000 		.4byte	0x6b
 1175 00b5 04       		.uleb128 0x4
 1176 00b6 3D010000 		.4byte	.LASF16
 1177 00ba 02       		.byte	0x2
 1178 00bb 3D02     		.2byte	0x23d
 1179 00bd C1000000 		.4byte	0xc1
 1180 00c1 05       		.uleb128 0x5
 1181 00c2 77000000 		.4byte	0x77
 1182 00c6 04       		.uleb128 0x4
 1183 00c7 00030000 		.4byte	.LASF17
 1184 00cb 02       		.byte	0x2
 1185 00cc 3E02     		.2byte	0x23e
 1186 00ce D2000000 		.4byte	0xd2
 1187 00d2 05       		.uleb128 0x5
 1188 00d3 83000000 		.4byte	0x83
 1189 00d7 02       		.uleb128 0x2
 1190 00d8 08       		.byte	0x8
 1191 00d9 04       		.byte	0x4
 1192 00da 0F030000 		.4byte	.LASF18
 1193 00de 02       		.uleb128 0x2
 1194 00df 04       		.byte	0x4
 1195 00e0 07       		.byte	0x7
 1196 00e1 06030000 		.4byte	.LASF19
 1197 00e5 06       		.uleb128 0x6
 1198 00e6 A9000000 		.4byte	.LASF26
 1199 00ea 01       		.byte	0x1
 1200 00eb 4601     		.2byte	0x146
 1201 00ed 00000000 		.4byte	.LFB1
 1202 00f1 68000000 		.4byte	.LFE1-.LFB1
 1203 00f5 01       		.uleb128 0x1
 1204 00f6 9C       		.byte	0x9c
 1205 00f7 40010000 		.4byte	0x140
 1206 00fb 07       		.uleb128 0x7
 1207 00fc 91050000 		.4byte	.LASF20
 1208 0100 01       		.byte	0x1
 1209 0101 4801     		.2byte	0x148
 1210 0103 6B000000 		.4byte	0x6b
 1211 0107 00000000 		.4byte	.LLST0
 1212 010b 08       		.uleb128 0x8
 1213 010c 06000000 		.4byte	.LVL0
 1214 0110 6D070000 		.4byte	0x76d
 1215 0114 08       		.uleb128 0x8
 1216 0115 16000000 		.4byte	.LVL2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 58


 1217 0119 78070000 		.4byte	0x778
 1218 011d 08       		.uleb128 0x8
 1219 011e 1A000000 		.4byte	.LVL3
 1220 0122 83070000 		.4byte	0x783
 1221 0126 08       		.uleb128 0x8
 1222 0127 1E000000 		.4byte	.LVL4
 1223 012b 8E070000 		.4byte	0x78e
 1224 012f 09       		.uleb128 0x9
 1225 0130 46000000 		.4byte	.LVL5
 1226 0134 99070000 		.4byte	0x799
 1227 0138 0A       		.uleb128 0xa
 1228 0139 01       		.uleb128 0x1
 1229 013a 50       		.byte	0x50
 1230 013b 02       		.uleb128 0x2
 1231 013c 74       		.byte	0x74
 1232 013d 00       		.sleb128 0
 1233 013e 00       		.byte	0
 1234 013f 00       		.byte	0
 1235 0140 0B       		.uleb128 0xb
 1236 0141 08010000 		.4byte	.LASF22
 1237 0145 01       		.byte	0x1
 1238 0146 8E02     		.2byte	0x28e
 1239 0148 6B000000 		.4byte	0x6b
 1240 014c 00000000 		.4byte	.LFB4
 1241 0150 20000000 		.4byte	.LFE4-.LFB4
 1242 0154 01       		.uleb128 0x1
 1243 0155 9C       		.byte	0x9c
 1244 0156 89010000 		.4byte	0x189
 1245 015a 0C       		.uleb128 0xc
 1246 015b 8C000000 		.4byte	.LASF24
 1247 015f 01       		.byte	0x1
 1248 0160 8E02     		.2byte	0x28e
 1249 0162 6B000000 		.4byte	0x6b
 1250 0166 13000000 		.4byte	.LLST1
 1251 016a 0D       		.uleb128 0xd
 1252 016b 706F7300 		.ascii	"pos\000"
 1253 016f 01       		.byte	0x1
 1254 0170 9002     		.2byte	0x290
 1255 0172 6B000000 		.4byte	0x6b
 1256 0176 01       		.uleb128 0x1
 1257 0177 52       		.byte	0x52
 1258 0178 07       		.uleb128 0x7
 1259 0179 25030000 		.4byte	.LASF21
 1260 017d 01       		.byte	0x1
 1261 017e 9102     		.2byte	0x291
 1262 0180 6B000000 		.4byte	0x6b
 1263 0184 3F000000 		.4byte	.LLST2
 1264 0188 00       		.byte	0
 1265 0189 0E       		.uleb128 0xe
 1266 018a 64010000 		.4byte	.LASF84
 1267 018e 01       		.byte	0x1
 1268 018f 1A04     		.2byte	0x41a
 1269 0191 6B000000 		.4byte	0x6b
 1270 0195 00000000 		.4byte	.LFB8
 1271 0199 10000000 		.4byte	.LFE8-.LFB8
 1272 019d 01       		.uleb128 0x1
 1273 019e 9C       		.byte	0x9c
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 59


 1274 019f 0B       		.uleb128 0xb
 1275 01a0 AE020000 		.4byte	.LASF23
 1276 01a4 01       		.byte	0x1
 1277 01a5 3304     		.2byte	0x433
 1278 01a7 77000000 		.4byte	0x77
 1279 01ab 00000000 		.4byte	.LFB9
 1280 01af 0C000000 		.4byte	.LFE9-.LFB9
 1281 01b3 01       		.uleb128 0x1
 1282 01b4 9C       		.byte	0x9c
 1283 01b5 CA010000 		.4byte	0x1ca
 1284 01b9 0C       		.uleb128 0xc
 1285 01ba A7020000 		.4byte	.LASF25
 1286 01be 01       		.byte	0x1
 1287 01bf 3304     		.2byte	0x433
 1288 01c1 6B000000 		.4byte	0x6b
 1289 01c5 52000000 		.4byte	.LLST3
 1290 01c9 00       		.byte	0
 1291 01ca 06       		.uleb128 0x6
 1292 01cb FA010000 		.4byte	.LASF27
 1293 01cf 01       		.byte	0x1
 1294 01d0 DE04     		.2byte	0x4de
 1295 01d2 00000000 		.4byte	.LFB11
 1296 01d6 34000000 		.4byte	.LFE11-.LFB11
 1297 01da 01       		.uleb128 0x1
 1298 01db 9C       		.byte	0x9c
 1299 01dc 1A020000 		.4byte	0x21a
 1300 01e0 0C       		.uleb128 0xc
 1301 01e1 A7020000 		.4byte	.LASF25
 1302 01e5 01       		.byte	0x1
 1303 01e6 DE04     		.2byte	0x4de
 1304 01e8 6B000000 		.4byte	0x6b
 1305 01ec 73000000 		.4byte	.LLST4
 1306 01f0 07       		.uleb128 0x7
 1307 01f1 7E010000 		.4byte	.LASF28
 1308 01f5 01       		.byte	0x1
 1309 01f6 E004     		.2byte	0x4e0
 1310 01f8 6B000000 		.4byte	0x6b
 1311 01fc 94000000 		.4byte	.LLST5
 1312 0200 07       		.uleb128 0x7
 1313 0201 79010000 		.4byte	.LASF29
 1314 0205 01       		.byte	0x1
 1315 0206 E104     		.2byte	0x4e1
 1316 0208 6B000000 		.4byte	0x6b
 1317 020c A7000000 		.4byte	.LLST6
 1318 0210 08       		.uleb128 0x8
 1319 0211 2C000000 		.4byte	.LVL17
 1320 0215 A4070000 		.4byte	0x7a4
 1321 0219 00       		.byte	0
 1322 021a 06       		.uleb128 0x6
 1323 021b 49000000 		.4byte	.LASF30
 1324 021f 01       		.byte	0x1
 1325 0220 3305     		.2byte	0x533
 1326 0222 00000000 		.4byte	.LFB12
 1327 0226 38000000 		.4byte	.LFE12-.LFB12
 1328 022a 01       		.uleb128 0x1
 1329 022b 9C       		.byte	0x9c
 1330 022c 71020000 		.4byte	0x271
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 60


 1331 0230 0C       		.uleb128 0xc
 1332 0231 A7020000 		.4byte	.LASF25
 1333 0235 01       		.byte	0x1
 1334 0236 3305     		.2byte	0x533
 1335 0238 6B000000 		.4byte	0x6b
 1336 023c BA000000 		.4byte	.LLST7
 1337 0240 07       		.uleb128 0x7
 1338 0241 7E010000 		.4byte	.LASF28
 1339 0245 01       		.byte	0x1
 1340 0246 3505     		.2byte	0x535
 1341 0248 6B000000 		.4byte	0x6b
 1342 024c DB000000 		.4byte	.LLST8
 1343 0250 07       		.uleb128 0x7
 1344 0251 79010000 		.4byte	.LASF29
 1345 0255 01       		.byte	0x1
 1346 0256 3605     		.2byte	0x536
 1347 0258 6B000000 		.4byte	0x6b
 1348 025c EE000000 		.4byte	.LLST9
 1349 0260 09       		.uleb128 0x9
 1350 0261 10000000 		.4byte	.LVL22
 1351 0265 AF070000 		.4byte	0x7af
 1352 0269 0A       		.uleb128 0xa
 1353 026a 01       		.uleb128 0x1
 1354 026b 50       		.byte	0x50
 1355 026c 02       		.uleb128 0x2
 1356 026d 75       		.byte	0x75
 1357 026e 00       		.sleb128 0
 1358 026f 00       		.byte	0
 1359 0270 00       		.byte	0
 1360 0271 06       		.uleb128 0x6
 1361 0272 EC020000 		.4byte	.LASF31
 1362 0276 01       		.byte	0x1
 1363 0277 4804     		.2byte	0x448
 1364 0279 00000000 		.4byte	.LFB10
 1365 027d 16000000 		.4byte	.LFE10-.LFB10
 1366 0281 01       		.uleb128 0x1
 1367 0282 9C       		.byte	0x9c
 1368 0283 A6020000 		.4byte	0x2a6
 1369 0287 0F       		.uleb128 0xf
 1370 0288 6900     		.ascii	"i\000"
 1371 028a 01       		.byte	0x1
 1372 028b 4A04     		.2byte	0x44a
 1373 028d 6B000000 		.4byte	0x6b
 1374 0291 01010000 		.4byte	.LLST10
 1375 0295 09       		.uleb128 0x9
 1376 0296 0C000000 		.4byte	.LVL28
 1377 029a 1A020000 		.4byte	0x21a
 1378 029e 0A       		.uleb128 0xa
 1379 029f 01       		.uleb128 0x1
 1380 02a0 50       		.byte	0x50
 1381 02a1 02       		.uleb128 0x2
 1382 02a2 74       		.byte	0x74
 1383 02a3 00       		.sleb128 0
 1384 02a4 00       		.byte	0
 1385 02a5 00       		.byte	0
 1386 02a6 06       		.uleb128 0x6
 1387 02a7 E0020000 		.4byte	.LASF32
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 61


 1388 02ab 01       		.byte	0x1
 1389 02ac 0402     		.2byte	0x204
 1390 02ae 00000000 		.4byte	.LFB3
 1391 02b2 68000000 		.4byte	.LFE3-.LFB3
 1392 02b6 01       		.uleb128 0x1
 1393 02b7 9C       		.byte	0x9c
 1394 02b8 E1020000 		.4byte	0x2e1
 1395 02bc 08       		.uleb128 0x8
 1396 02bd 16000000 		.4byte	.LVL31
 1397 02c1 71020000 		.4byte	0x271
 1398 02c5 08       		.uleb128 0x8
 1399 02c6 24000000 		.4byte	.LVL32
 1400 02ca BA070000 		.4byte	0x7ba
 1401 02ce 08       		.uleb128 0x8
 1402 02cf 28000000 		.4byte	.LVL33
 1403 02d3 C5070000 		.4byte	0x7c5
 1404 02d7 08       		.uleb128 0x8
 1405 02d8 2C000000 		.4byte	.LVL34
 1406 02dc D0070000 		.4byte	0x7d0
 1407 02e0 00       		.byte	0
 1408 02e1 06       		.uleb128 0x6
 1409 02e2 2B050000 		.4byte	.LASF33
 1410 02e6 01       		.byte	0x1
 1411 02e7 2F06     		.2byte	0x62f
 1412 02e9 00000000 		.4byte	.LFB14
 1413 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1414 02f1 01       		.uleb128 0x1
 1415 02f2 9C       		.byte	0x9c
 1416 02f3 20030000 		.4byte	0x320
 1417 02f7 0C       		.uleb128 0xc
 1418 02f8 A7020000 		.4byte	.LASF25
 1419 02fc 01       		.byte	0x1
 1420 02fd 2F06     		.2byte	0x62f
 1421 02ff 6B000000 		.4byte	0x6b
 1422 0303 2B010000 		.4byte	.LLST11
 1423 0307 08       		.uleb128 0x8
 1424 0308 28000000 		.4byte	.LVL36
 1425 030c 1A020000 		.4byte	0x21a
 1426 0310 09       		.uleb128 0x9
 1427 0311 2E000000 		.4byte	.LVL37
 1428 0315 DB070000 		.4byte	0x7db
 1429 0319 0A       		.uleb128 0xa
 1430 031a 01       		.uleb128 0x1
 1431 031b 50       		.byte	0x50
 1432 031c 01       		.uleb128 0x1
 1433 031d 30       		.byte	0x30
 1434 031e 00       		.byte	0
 1435 031f 00       		.byte	0
 1436 0320 06       		.uleb128 0x6
 1437 0321 50010000 		.4byte	.LASF34
 1438 0325 01       		.byte	0x1
 1439 0326 3D07     		.2byte	0x73d
 1440 0328 00000000 		.4byte	.LFB15
 1441 032c 10000000 		.4byte	.LFE15-.LFB15
 1442 0330 01       		.uleb128 0x1
 1443 0331 9C       		.byte	0x9c
 1444 0332 47030000 		.4byte	0x347
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 62


 1445 0336 0C       		.uleb128 0xc
 1446 0337 43030000 		.4byte	.LASF35
 1447 033b 01       		.byte	0x1
 1448 033c 3D07     		.2byte	0x73d
 1449 033e 6B000000 		.4byte	0x6b
 1450 0342 4C010000 		.4byte	.LLST12
 1451 0346 00       		.byte	0
 1452 0347 06       		.uleb128 0x6
 1453 0348 50050000 		.4byte	.LASF36
 1454 034c 01       		.byte	0x1
 1455 034d 2803     		.2byte	0x328
 1456 034f 00000000 		.4byte	.LFB5
 1457 0353 38000000 		.4byte	.LFE5-.LFB5
 1458 0357 01       		.uleb128 0x1
 1459 0358 9C       		.byte	0x9c
 1460 0359 90030000 		.4byte	0x390
 1461 035d 0C       		.uleb128 0xc
 1462 035e DB020000 		.4byte	.LASF37
 1463 0362 01       		.byte	0x1
 1464 0363 2803     		.2byte	0x328
 1465 0365 6B000000 		.4byte	0x6b
 1466 0369 88010000 		.4byte	.LLST13
 1467 036d 07       		.uleb128 0x7
 1468 036e F1030000 		.4byte	.LASF38
 1469 0372 01       		.byte	0x1
 1470 0373 2A03     		.2byte	0x32a
 1471 0375 6B000000 		.4byte	0x6b
 1472 0379 A9010000 		.4byte	.LLST14
 1473 037d 08       		.uleb128 0x8
 1474 037e 16000000 		.4byte	.LVL45
 1475 0382 DB070000 		.4byte	0x7db
 1476 0386 08       		.uleb128 0x8
 1477 0387 26000000 		.4byte	.LVL47
 1478 038b 20030000 		.4byte	0x320
 1479 038f 00       		.byte	0
 1480 0390 06       		.uleb128 0x6
 1481 0391 7D000000 		.4byte	.LASF39
 1482 0395 01       		.byte	0x1
 1483 0396 8705     		.2byte	0x587
 1484 0398 00000000 		.4byte	.LFB13
 1485 039c 34000000 		.4byte	.LFE13-.LFB13
 1486 03a0 01       		.uleb128 0x1
 1487 03a1 9C       		.byte	0x9c
 1488 03a2 DB030000 		.4byte	0x3db
 1489 03a6 0C       		.uleb128 0xc
 1490 03a7 A7020000 		.4byte	.LASF25
 1491 03ab 01       		.byte	0x1
 1492 03ac 8705     		.2byte	0x587
 1493 03ae 6B000000 		.4byte	0x6b
 1494 03b2 CF010000 		.4byte	.LLST15
 1495 03b6 10       		.uleb128 0x10
 1496 03b7 08000000 		.4byte	.LVL50
 1497 03bb 47030000 		.4byte	0x347
 1498 03bf CA030000 		.4byte	0x3ca
 1499 03c3 0A       		.uleb128 0xa
 1500 03c4 01       		.uleb128 0x1
 1501 03c5 50       		.byte	0x50
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 63


 1502 03c6 02       		.uleb128 0x2
 1503 03c7 75       		.byte	0x75
 1504 03c8 00       		.sleb128 0
 1505 03c9 00       		.byte	0
 1506 03ca 09       		.uleb128 0x9
 1507 03cb 22000000 		.4byte	.LVL51
 1508 03cf CA010000 		.4byte	0x1ca
 1509 03d3 0A       		.uleb128 0xa
 1510 03d4 01       		.uleb128 0x1
 1511 03d5 50       		.byte	0x50
 1512 03d6 02       		.uleb128 0x2
 1513 03d7 75       		.byte	0x75
 1514 03d8 00       		.sleb128 0
 1515 03d9 00       		.byte	0
 1516 03da 00       		.byte	0
 1517 03db 06       		.uleb128 0x6
 1518 03dc C1040000 		.4byte	.LASF40
 1519 03e0 01       		.byte	0x1
 1520 03e1 9803     		.2byte	0x398
 1521 03e3 00000000 		.4byte	.LFB6
 1522 03e7 20000000 		.4byte	.LFE6-.LFB6
 1523 03eb 01       		.uleb128 0x1
 1524 03ec 9C       		.byte	0x9c
 1525 03ed 0B040000 		.4byte	0x40b
 1526 03f1 0C       		.uleb128 0xc
 1527 03f2 A7020000 		.4byte	.LASF25
 1528 03f6 01       		.byte	0x1
 1529 03f7 9803     		.2byte	0x398
 1530 03f9 6B000000 		.4byte	0x6b
 1531 03fd F0010000 		.4byte	.LLST16
 1532 0401 08       		.uleb128 0x8
 1533 0402 14000000 		.4byte	.LVL53
 1534 0406 90030000 		.4byte	0x390
 1535 040a 00       		.byte	0
 1536 040b 06       		.uleb128 0x6
 1537 040c D8040000 		.4byte	.LASF41
 1538 0410 01       		.byte	0x1
 1539 0411 E503     		.2byte	0x3e5
 1540 0413 00000000 		.4byte	.LFB7
 1541 0417 38000000 		.4byte	.LFE7-.LFB7
 1542 041b 01       		.uleb128 0x1
 1543 041c 9C       		.byte	0x9c
 1544 041d 34040000 		.4byte	0x434
 1545 0421 08       		.uleb128 0x8
 1546 0422 14000000 		.4byte	.LVL54
 1547 0426 40010000 		.4byte	0x140
 1548 042a 08       		.uleb128 0x8
 1549 042b 2E000000 		.4byte	.LVL55
 1550 042f 90030000 		.4byte	0x390
 1551 0433 00       		.byte	0
 1552 0434 0B       		.uleb128 0xb
 1553 0435 C0010000 		.4byte	.LASF42
 1554 0439 01       		.byte	0x1
 1555 043a 5A07     		.2byte	0x75a
 1556 043c 6B000000 		.4byte	0x6b
 1557 0440 00000000 		.4byte	.LFB16
 1558 0444 0C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 64


 1559 0448 01       		.uleb128 0x1
 1560 0449 9C       		.byte	0x9c
 1561 044a 5F040000 		.4byte	0x45f
 1562 044e 07       		.uleb128 0x7
 1563 044f 43030000 		.4byte	.LASF35
 1564 0453 01       		.byte	0x1
 1565 0454 5C07     		.2byte	0x75c
 1566 0456 6B000000 		.4byte	0x6b
 1567 045a 11020000 		.4byte	.LLST17
 1568 045e 00       		.byte	0
 1569 045f 06       		.uleb128 0x6
 1570 0460 A2050000 		.4byte	.LASF43
 1571 0464 01       		.byte	0x1
 1572 0465 7C07     		.2byte	0x77c
 1573 0467 00000000 		.4byte	.LFB17
 1574 046b 0C000000 		.4byte	.LFE17-.LFB17
 1575 046f 01       		.uleb128 0x1
 1576 0470 9C       		.byte	0x9c
 1577 0471 84040000 		.4byte	0x484
 1578 0475 11       		.uleb128 0x11
 1579 0476 1B030000 		.4byte	.LASF44
 1580 047a 01       		.byte	0x1
 1581 047b 7C07     		.2byte	0x77c
 1582 047d 6B000000 		.4byte	0x6b
 1583 0481 01       		.uleb128 0x1
 1584 0482 50       		.byte	0x50
 1585 0483 00       		.byte	0
 1586 0484 06       		.uleb128 0x6
 1587 0485 5E000000 		.4byte	.LASF45
 1588 0489 01       		.byte	0x1
 1589 048a 9707     		.2byte	0x797
 1590 048c 00000000 		.4byte	.LFB18
 1591 0490 20000000 		.4byte	.LFE18-.LFB18
 1592 0494 01       		.uleb128 0x1
 1593 0495 9C       		.byte	0x9c
 1594 0496 A9040000 		.4byte	0x4a9
 1595 049a 12       		.uleb128 0x12
 1596 049b 73726300 		.ascii	"src\000"
 1597 049f 01       		.byte	0x1
 1598 04a0 9707     		.2byte	0x797
 1599 04a2 6B000000 		.4byte	0x6b
 1600 04a6 01       		.uleb128 0x1
 1601 04a7 50       		.byte	0x50
 1602 04a8 00       		.byte	0
 1603 04a9 13       		.uleb128 0x13
 1604 04aa 6B050000 		.4byte	.LASF46
 1605 04ae 01       		.byte	0x1
 1606 04af 65       		.byte	0x65
 1607 04b0 00000000 		.4byte	.LFB0
 1608 04b4 E4000000 		.4byte	.LFE0-.LFB0
 1609 04b8 01       		.uleb128 0x1
 1610 04b9 9C       		.byte	0x9c
 1611 04ba C4050000 		.4byte	0x5c4
 1612 04be 14       		.uleb128 0x14
 1613 04bf 91050000 		.4byte	.LASF20
 1614 04c3 01       		.byte	0x1
 1615 04c4 6C       		.byte	0x6c
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 65


 1616 04c5 6B000000 		.4byte	0x6b
 1617 04c9 30020000 		.4byte	.LLST18
 1618 04cd 08       		.uleb128 0x8
 1619 04ce 06000000 		.4byte	.LVL60
 1620 04d2 71020000 		.4byte	0x271
 1621 04d6 10       		.uleb128 0x10
 1622 04d7 0C000000 		.4byte	.LVL61
 1623 04db 84040000 		.4byte	0x484
 1624 04df E9040000 		.4byte	0x4e9
 1625 04e3 0A       		.uleb128 0xa
 1626 04e4 01       		.uleb128 0x1
 1627 04e5 50       		.byte	0x50
 1628 04e6 01       		.uleb128 0x1
 1629 04e7 32       		.byte	0x32
 1630 04e8 00       		.byte	0
 1631 04e9 08       		.uleb128 0x8
 1632 04ea 10000000 		.4byte	.LVL62
 1633 04ee 6D070000 		.4byte	0x76d
 1634 04f2 08       		.uleb128 0x8
 1635 04f3 28000000 		.4byte	.LVL63
 1636 04f7 99070000 		.4byte	0x799
 1637 04fb 08       		.uleb128 0x8
 1638 04fc 42000000 		.4byte	.LVL64
 1639 0500 6D070000 		.4byte	0x76d
 1640 0504 08       		.uleb128 0x8
 1641 0505 5A000000 		.4byte	.LVL65
 1642 0509 99070000 		.4byte	0x799
 1643 050d 10       		.uleb128 0x10
 1644 050e 86000000 		.4byte	.LVL66
 1645 0512 E6070000 		.4byte	0x7e6
 1646 0516 20050000 		.4byte	0x520
 1647 051a 0A       		.uleb128 0xa
 1648 051b 01       		.uleb128 0x1
 1649 051c 50       		.byte	0x50
 1650 051d 01       		.uleb128 0x1
 1651 051e 31       		.byte	0x31
 1652 051f 00       		.byte	0
 1653 0520 10       		.uleb128 0x10
 1654 0521 8E000000 		.4byte	.LVL67
 1655 0525 F1070000 		.4byte	0x7f1
 1656 0529 39050000 		.4byte	0x539
 1657 052d 0A       		.uleb128 0xa
 1658 052e 01       		.uleb128 0x1
 1659 052f 50       		.byte	0x50
 1660 0530 01       		.uleb128 0x1
 1661 0531 31       		.byte	0x31
 1662 0532 0A       		.uleb128 0xa
 1663 0533 01       		.uleb128 0x1
 1664 0534 51       		.byte	0x51
 1665 0535 02       		.uleb128 0x2
 1666 0536 75       		.byte	0x75
 1667 0537 00       		.sleb128 0
 1668 0538 00       		.byte	0
 1669 0539 08       		.uleb128 0x8
 1670 053a 92000000 		.4byte	.LVL68
 1671 053e FC070000 		.4byte	0x7fc
 1672 0542 10       		.uleb128 0x10
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 66


 1673 0543 98000000 		.4byte	.LVL69
 1674 0547 A4070000 		.4byte	0x7a4
 1675 054b 56050000 		.4byte	0x556
 1676 054f 0A       		.uleb128 0xa
 1677 0550 01       		.uleb128 0x1
 1678 0551 50       		.byte	0x50
 1679 0552 02       		.uleb128 0x2
 1680 0553 74       		.byte	0x74
 1681 0554 00       		.sleb128 0
 1682 0555 00       		.byte	0
 1683 0556 10       		.uleb128 0x10
 1684 0557 9E000000 		.4byte	.LVL70
 1685 055b A4070000 		.4byte	0x7a4
 1686 055f 69050000 		.4byte	0x569
 1687 0563 0A       		.uleb128 0xa
 1688 0564 01       		.uleb128 0x1
 1689 0565 50       		.byte	0x50
 1690 0566 01       		.uleb128 0x1
 1691 0567 33       		.byte	0x33
 1692 0568 00       		.byte	0
 1693 0569 10       		.uleb128 0x10
 1694 056a A4000000 		.4byte	.LVL71
 1695 056e A4070000 		.4byte	0x7a4
 1696 0572 7C050000 		.4byte	0x57c
 1697 0576 0A       		.uleb128 0xa
 1698 0577 01       		.uleb128 0x1
 1699 0578 50       		.byte	0x50
 1700 0579 01       		.uleb128 0x1
 1701 057a 34       		.byte	0x34
 1702 057b 00       		.byte	0
 1703 057c 08       		.uleb128 0x8
 1704 057d B2000000 		.4byte	.LVL72
 1705 0581 07080000 		.4byte	0x807
 1706 0585 08       		.uleb128 0x8
 1707 0586 B6000000 		.4byte	.LVL73
 1708 058a 12080000 		.4byte	0x812
 1709 058e 10       		.uleb128 0x10
 1710 058f BC000000 		.4byte	.LVL74
 1711 0593 1D080000 		.4byte	0x81d
 1712 0597 A1050000 		.4byte	0x5a1
 1713 059b 0A       		.uleb128 0xa
 1714 059c 01       		.uleb128 0x1
 1715 059d 50       		.byte	0x50
 1716 059e 01       		.uleb128 0x1
 1717 059f 30       		.byte	0x30
 1718 05a0 00       		.byte	0
 1719 05a1 10       		.uleb128 0x10
 1720 05a2 C2000000 		.4byte	.LVL75
 1721 05a6 28080000 		.4byte	0x828
 1722 05aa B4050000 		.4byte	0x5b4
 1723 05ae 0A       		.uleb128 0xa
 1724 05af 01       		.uleb128 0x1
 1725 05b0 50       		.byte	0x50
 1726 05b1 01       		.uleb128 0x1
 1727 05b2 34       		.byte	0x34
 1728 05b3 00       		.byte	0
 1729 05b4 09       		.uleb128 0x9
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 67


 1730 05b5 C8000000 		.4byte	.LVL76
 1731 05b9 DB070000 		.4byte	0x7db
 1732 05bd 0A       		.uleb128 0xa
 1733 05be 01       		.uleb128 0x1
 1734 05bf 50       		.byte	0x50
 1735 05c0 01       		.uleb128 0x1
 1736 05c1 30       		.byte	0x30
 1737 05c2 00       		.byte	0
 1738 05c3 00       		.byte	0
 1739 05c4 06       		.uleb128 0x6
 1740 05c5 10060000 		.4byte	.LASF47
 1741 05c9 01       		.byte	0x1
 1742 05ca DF01     		.2byte	0x1df
 1743 05cc 00000000 		.4byte	.LFB2
 1744 05d0 2C000000 		.4byte	.LFE2-.LFB2
 1745 05d4 01       		.uleb128 0x1
 1746 05d5 9C       		.byte	0x9c
 1747 05d6 F6050000 		.4byte	0x5f6
 1748 05da 08       		.uleb128 0x8
 1749 05db 0C000000 		.4byte	.LVL77
 1750 05df A9040000 		.4byte	0x4a9
 1751 05e3 08       		.uleb128 0x8
 1752 05e4 16000000 		.4byte	.LVL78
 1753 05e8 E5000000 		.4byte	0xe5
 1754 05ec 08       		.uleb128 0x8
 1755 05ed 1A000000 		.4byte	.LVL79
 1756 05f1 33080000 		.4byte	0x833
 1757 05f5 00       		.byte	0
 1758 05f6 15       		.uleb128 0x15
 1759 05f7 F8030000 		.4byte	.LASF48
 1760 05fb 01       		.byte	0x1
 1761 05fc 16       		.byte	0x16
 1762 05fd 6B000000 		.4byte	0x6b
 1763 0601 05       		.uleb128 0x5
 1764 0602 03       		.byte	0x3
 1765 0603 00000000 		.4byte	Button_initVar
 1766 0607 16       		.uleb128 0x16
 1767 0608 77050000 		.4byte	.LASF49
 1768 060c 01       		.byte	0x1
 1769 060d 1E       		.byte	0x1e
 1770 060e 6B000000 		.4byte	0x6b
 1771 0612 05       		.uleb128 0x5
 1772 0613 03       		.byte	0x3
 1773 0614 00000000 		.4byte	Button_lowLevelTuningDone
 1774 0618 16       		.uleb128 0x16
 1775 0619 4D030000 		.4byte	.LASF50
 1776 061d 01       		.byte	0x1
 1777 061e 19       		.byte	0x19
 1778 061f B0000000 		.4byte	0xb0
 1779 0623 05       		.uleb128 0x5
 1780 0624 03       		.byte	0x3
 1781 0625 00000000 		.4byte	Button_csv
 1782 0629 16       		.uleb128 0x16
 1783 062a 71020000 		.4byte	.LASF51
 1784 062e 01       		.byte	0x1
 1785 062f 1A       		.byte	0x1a
 1786 0630 B0000000 		.4byte	0xb0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 68


 1787 0634 05       		.uleb128 0x5
 1788 0635 03       		.byte	0x3
 1789 0636 00000000 		.4byte	Button_sensorIndex
 1790 063a 17       		.uleb128 0x17
 1791 063b 77000000 		.4byte	0x77
 1792 063f 4A060000 		.4byte	0x64a
 1793 0643 18       		.uleb128 0x18
 1794 0644 DE000000 		.4byte	0xde
 1795 0648 01       		.byte	0x1
 1796 0649 00       		.byte	0
 1797 064a 16       		.uleb128 0x16
 1798 064b 07040000 		.4byte	.LASF52
 1799 064f 01       		.byte	0x1
 1800 0650 29       		.byte	0x29
 1801 0651 3A060000 		.4byte	0x63a
 1802 0655 05       		.uleb128 0x5
 1803 0656 03       		.byte	0x3
 1804 0657 00000000 		.4byte	Button_sensorRaw
 1805 065b 17       		.uleb128 0x17
 1806 065c 6B000000 		.4byte	0x6b
 1807 0660 6B060000 		.4byte	0x66b
 1808 0664 18       		.uleb128 0x18
 1809 0665 DE000000 		.4byte	0xde
 1810 0669 00       		.byte	0
 1811 066a 00       		.byte	0
 1812 066b 16       		.uleb128 0x16
 1813 066c C3020000 		.4byte	.LASF53
 1814 0670 01       		.byte	0x1
 1815 0671 2B       		.byte	0x2b
 1816 0672 5B060000 		.4byte	0x65b
 1817 0676 05       		.uleb128 0x5
 1818 0677 03       		.byte	0x3
 1819 0678 00000000 		.4byte	Button_sensorEnableMask
 1820 067c 17       		.uleb128 0x17
 1821 067d 92060000 		.4byte	0x692
 1822 0681 8C060000 		.4byte	0x68c
 1823 0685 18       		.uleb128 0x18
 1824 0686 DE000000 		.4byte	0xde
 1825 068a 01       		.byte	0x1
 1826 068b 00       		.byte	0
 1827 068c 19       		.uleb128 0x19
 1828 068d 04       		.byte	0x4
 1829 068e 6B000000 		.4byte	0x6b
 1830 0692 1A       		.uleb128 0x1a
 1831 0693 8C060000 		.4byte	0x68c
 1832 0697 16       		.uleb128 0x16
 1833 0698 F9000000 		.4byte	.LASF54
 1834 069c 01       		.byte	0x1
 1835 069d 2E       		.byte	0x2e
 1836 069e A8060000 		.4byte	0x6a8
 1837 06a2 05       		.uleb128 0x5
 1838 06a3 03       		.byte	0x3
 1839 06a4 00000000 		.4byte	Button_pcTable
 1840 06a8 1A       		.uleb128 0x1a
 1841 06a9 7C060000 		.4byte	0x67c
 1842 06ad 17       		.uleb128 0x17
 1843 06ae BD060000 		.4byte	0x6bd
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 69


 1844 06b2 BD060000 		.4byte	0x6bd
 1845 06b6 18       		.uleb128 0x18
 1846 06b7 DE000000 		.4byte	0xde
 1847 06bb 01       		.byte	0x1
 1848 06bc 00       		.byte	0
 1849 06bd 1A       		.uleb128 0x1a
 1850 06be 6B000000 		.4byte	0x6b
 1851 06c2 16       		.uleb128 0x16
 1852 06c3 60020000 		.4byte	.LASF55
 1853 06c7 01       		.byte	0x1
 1854 06c8 33       		.byte	0x33
 1855 06c9 D3060000 		.4byte	0x6d3
 1856 06cd 05       		.uleb128 0x5
 1857 06ce 03       		.byte	0x3
 1858 06cf 00000000 		.4byte	Button_portTable
 1859 06d3 1A       		.uleb128 0x1a
 1860 06d4 AD060000 		.4byte	0x6ad
 1861 06d8 16       		.uleb128 0x16
 1862 06d9 CE000000 		.4byte	.LASF56
 1863 06dd 01       		.byte	0x1
 1864 06de 38       		.byte	0x38
 1865 06df E9060000 		.4byte	0x6e9
 1866 06e3 05       		.uleb128 0x5
 1867 06e4 03       		.byte	0x3
 1868 06e5 00000000 		.4byte	Button_maskTable
 1869 06e9 1A       		.uleb128 0x1a
 1870 06ea AD060000 		.4byte	0x6ad
 1871 06ee 17       		.uleb128 0x17
 1872 06ef 92060000 		.4byte	0x692
 1873 06f3 FE060000 		.4byte	0x6fe
 1874 06f7 18       		.uleb128 0x18
 1875 06f8 DE000000 		.4byte	0xde
 1876 06fc 07       		.byte	0x7
 1877 06fd 00       		.byte	0
 1878 06fe 16       		.uleb128 0x16
 1879 06ff 7D030000 		.4byte	.LASF57
 1880 0703 01       		.byte	0x1
 1881 0704 3D       		.byte	0x3d
 1882 0705 0F070000 		.4byte	0x70f
 1883 0709 05       		.uleb128 0x5
 1884 070a 03       		.byte	0x3
 1885 070b 00000000 		.4byte	Button_csTable
 1886 070f 1A       		.uleb128 0x1a
 1887 0710 EE060000 		.4byte	0x6ee
 1888 0714 17       		.uleb128 0x17
 1889 0715 6B000000 		.4byte	0x6b
 1890 0719 24070000 		.4byte	0x724
 1891 071d 18       		.uleb128 0x18
 1892 071e DE000000 		.4byte	0xde
 1893 0722 01       		.byte	0x1
 1894 0723 00       		.byte	0
 1895 0724 16       		.uleb128 0x16
 1896 0725 95000000 		.4byte	.LASF58
 1897 0729 01       		.byte	0x1
 1898 072a 43       		.byte	0x43
 1899 072b 14070000 		.4byte	0x714
 1900 072f 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 70


 1901 0730 03       		.byte	0x3
 1902 0731 00000000 		.4byte	Button_idacSettings
 1903 0735 16       		.uleb128 0x16
 1904 0736 A8010000 		.4byte	.LASF59
 1905 073a 01       		.byte	0x1
 1906 073b 47       		.byte	0x47
 1907 073c 14070000 		.4byte	0x714
 1908 0740 05       		.uleb128 0x5
 1909 0741 03       		.byte	0x3
 1910 0742 00000000 		.4byte	Button_widgetResolution
 1911 0746 16       		.uleb128 0x16
 1912 0747 C9050000 		.4byte	.LASF60
 1913 074b 01       		.byte	0x1
 1914 074c 4C       		.byte	0x4c
 1915 074d 14070000 		.4byte	0x714
 1916 0751 05       		.uleb128 0x5
 1917 0752 03       		.byte	0x3
 1918 0753 00000000 		.4byte	Button_analogSwitchDivider
 1919 0757 16       		.uleb128 0x16
 1920 0758 39020000 		.4byte	.LASF61
 1921 075c 01       		.byte	0x1
 1922 075d 4D       		.byte	0x4d
 1923 075e 68070000 		.4byte	0x768
 1924 0762 05       		.uleb128 0x5
 1925 0763 03       		.byte	0x3
 1926 0764 00000000 		.4byte	Button_widgetNumber
 1927 0768 1A       		.uleb128 0x1a
 1928 0769 AD060000 		.4byte	0x6ad
 1929 076d 1B       		.uleb128 0x1b
 1930 076e 0E020000 		.4byte	.LASF62
 1931 0772 0E020000 		.4byte	.LASF62
 1932 0776 03       		.byte	0x3
 1933 0777 7D       		.byte	0x7d
 1934 0778 1B       		.uleb128 0x1b
 1935 0779 27010000 		.4byte	.LASF63
 1936 077d 27010000 		.4byte	.LASF63
 1937 0781 04       		.byte	0x4
 1938 0782 27       		.byte	0x27
 1939 0783 1B       		.uleb128 0x1b
 1940 0784 E4050000 		.4byte	.LASF64
 1941 0788 E4050000 		.4byte	.LASF64
 1942 078c 05       		.byte	0x5
 1943 078d 46       		.byte	0x46
 1944 078e 1B       		.uleb128 0x1b
 1945 078f FA050000 		.4byte	.LASF65
 1946 0793 FA050000 		.4byte	.LASF65
 1947 0797 06       		.byte	0x6
 1948 0798 46       		.byte	0x46
 1949 0799 1B       		.uleb128 0x1b
 1950 079a 1B000000 		.4byte	.LASF66
 1951 079e 1B000000 		.4byte	.LASF66
 1952 07a2 03       		.byte	0x3
 1953 07a3 7E       		.byte	0x7e
 1954 07a4 1B       		.uleb128 0x1b
 1955 07a5 B6050000 		.4byte	.LASF67
 1956 07a9 B6050000 		.4byte	.LASF67
 1957 07ad 07       		.byte	0x7
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 71


 1958 07ae 1A       		.byte	0x1a
 1959 07af 1B       		.uleb128 0x1b
 1960 07b0 3B050000 		.4byte	.LASF68
 1961 07b4 3B050000 		.4byte	.LASF68
 1962 07b8 07       		.byte	0x7
 1963 07b9 1B       		.byte	0x1b
 1964 07ba 1B       		.uleb128 0x1b
 1965 07bb 06050000 		.4byte	.LASF69
 1966 07bf 06050000 		.4byte	.LASF69
 1967 07c3 04       		.byte	0x4
 1968 07c4 28       		.byte	0x28
 1969 07c5 1B       		.uleb128 0x1b
 1970 07c6 00000000 		.4byte	.LASF70
 1971 07ca 00000000 		.4byte	.LASF70
 1972 07ce 05       		.byte	0x5
 1973 07cf 40       		.byte	0x40
 1974 07d0 1B       		.uleb128 0x1b
 1975 07d1 25020000 		.4byte	.LASF71
 1976 07d5 25020000 		.4byte	.LASF71
 1977 07d9 06       		.byte	0x6
 1978 07da 3D       		.byte	0x3d
 1979 07db 1B       		.uleb128 0x1b
 1980 07dc 31000000 		.4byte	.LASF72
 1981 07e0 31000000 		.4byte	.LASF72
 1982 07e4 06       		.byte	0x6
 1983 07e5 41       		.byte	0x41
 1984 07e6 1B       		.uleb128 0x1b
 1985 07e7 84020000 		.4byte	.LASF73
 1986 07eb 84020000 		.4byte	.LASF73
 1987 07ef 03       		.byte	0x3
 1988 07f0 88       		.byte	0x88
 1989 07f1 1B       		.uleb128 0x1b
 1990 07f2 2C030000 		.4byte	.LASF74
 1991 07f6 2C030000 		.4byte	.LASF74
 1992 07fa 03       		.byte	0x3
 1993 07fb 8B       		.byte	0x8b
 1994 07fc 1B       		.uleb128 0x1b
 1995 07fd D4010000 		.4byte	.LASF75
 1996 0801 D4010000 		.4byte	.LASF75
 1997 0805 08       		.byte	0x8
 1998 0806 1F       		.byte	0x1f
 1999 0807 1B       		.uleb128 0x1b
 2000 0808 93020000 		.4byte	.LASF76
 2001 080c 93020000 		.4byte	.LASF76
 2002 0810 05       		.byte	0x5
 2003 0811 45       		.byte	0x45
 2004 0812 1B       		.uleb128 0x1b
 2005 0813 F2040000 		.4byte	.LASF77
 2006 0817 F2040000 		.4byte	.LASF77
 2007 081b 06       		.byte	0x6
 2008 081c 45       		.byte	0x45
 2009 081d 1B       		.uleb128 0x1b
 2010 081e A6040000 		.4byte	.LASF78
 2011 0822 A6040000 		.4byte	.LASF78
 2012 0826 06       		.byte	0x6
 2013 0827 3F       		.byte	0x3f
 2014 0828 1B       		.uleb128 0x1b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 72


 2015 0829 83010000 		.4byte	.LASF79
 2016 082d 83010000 		.4byte	.LASF79
 2017 0831 06       		.byte	0x6
 2018 0832 40       		.byte	0x40
 2019 0833 1C       		.uleb128 0x1c
 2020 0834 1B050000 		.4byte	.LASF80
 2021 0838 1B050000 		.4byte	.LASF80
 2022 083c 09       		.byte	0x9
 2023 083d AB02     		.2byte	0x2ab
 2024 083f 00       		.byte	0
 2025              		.section	.debug_abbrev,"",%progbits
 2026              	.Ldebug_abbrev0:
 2027 0000 01       		.uleb128 0x1
 2028 0001 11       		.uleb128 0x11
 2029 0002 01       		.byte	0x1
 2030 0003 25       		.uleb128 0x25
 2031 0004 0E       		.uleb128 0xe
 2032 0005 13       		.uleb128 0x13
 2033 0006 0B       		.uleb128 0xb
 2034 0007 03       		.uleb128 0x3
 2035 0008 0E       		.uleb128 0xe
 2036 0009 1B       		.uleb128 0x1b
 2037 000a 0E       		.uleb128 0xe
 2038 000b 55       		.uleb128 0x55
 2039 000c 17       		.uleb128 0x17
 2040 000d 11       		.uleb128 0x11
 2041 000e 01       		.uleb128 0x1
 2042 000f 10       		.uleb128 0x10
 2043 0010 17       		.uleb128 0x17
 2044 0011 00       		.byte	0
 2045 0012 00       		.byte	0
 2046 0013 02       		.uleb128 0x2
 2047 0014 24       		.uleb128 0x24
 2048 0015 00       		.byte	0
 2049 0016 0B       		.uleb128 0xb
 2050 0017 0B       		.uleb128 0xb
 2051 0018 3E       		.uleb128 0x3e
 2052 0019 0B       		.uleb128 0xb
 2053 001a 03       		.uleb128 0x3
 2054 001b 0E       		.uleb128 0xe
 2055 001c 00       		.byte	0
 2056 001d 00       		.byte	0
 2057 001e 03       		.uleb128 0x3
 2058 001f 24       		.uleb128 0x24
 2059 0020 00       		.byte	0
 2060 0021 0B       		.uleb128 0xb
 2061 0022 0B       		.uleb128 0xb
 2062 0023 3E       		.uleb128 0x3e
 2063 0024 0B       		.uleb128 0xb
 2064 0025 03       		.uleb128 0x3
 2065 0026 08       		.uleb128 0x8
 2066 0027 00       		.byte	0
 2067 0028 00       		.byte	0
 2068 0029 04       		.uleb128 0x4
 2069 002a 16       		.uleb128 0x16
 2070 002b 00       		.byte	0
 2071 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 73


 2072 002d 0E       		.uleb128 0xe
 2073 002e 3A       		.uleb128 0x3a
 2074 002f 0B       		.uleb128 0xb
 2075 0030 3B       		.uleb128 0x3b
 2076 0031 05       		.uleb128 0x5
 2077 0032 49       		.uleb128 0x49
 2078 0033 13       		.uleb128 0x13
 2079 0034 00       		.byte	0
 2080 0035 00       		.byte	0
 2081 0036 05       		.uleb128 0x5
 2082 0037 35       		.uleb128 0x35
 2083 0038 00       		.byte	0
 2084 0039 49       		.uleb128 0x49
 2085 003a 13       		.uleb128 0x13
 2086 003b 00       		.byte	0
 2087 003c 00       		.byte	0
 2088 003d 06       		.uleb128 0x6
 2089 003e 2E       		.uleb128 0x2e
 2090 003f 01       		.byte	0x1
 2091 0040 3F       		.uleb128 0x3f
 2092 0041 19       		.uleb128 0x19
 2093 0042 03       		.uleb128 0x3
 2094 0043 0E       		.uleb128 0xe
 2095 0044 3A       		.uleb128 0x3a
 2096 0045 0B       		.uleb128 0xb
 2097 0046 3B       		.uleb128 0x3b
 2098 0047 05       		.uleb128 0x5
 2099 0048 27       		.uleb128 0x27
 2100 0049 19       		.uleb128 0x19
 2101 004a 11       		.uleb128 0x11
 2102 004b 01       		.uleb128 0x1
 2103 004c 12       		.uleb128 0x12
 2104 004d 06       		.uleb128 0x6
 2105 004e 40       		.uleb128 0x40
 2106 004f 18       		.uleb128 0x18
 2107 0050 9742     		.uleb128 0x2117
 2108 0052 19       		.uleb128 0x19
 2109 0053 01       		.uleb128 0x1
 2110 0054 13       		.uleb128 0x13
 2111 0055 00       		.byte	0
 2112 0056 00       		.byte	0
 2113 0057 07       		.uleb128 0x7
 2114 0058 34       		.uleb128 0x34
 2115 0059 00       		.byte	0
 2116 005a 03       		.uleb128 0x3
 2117 005b 0E       		.uleb128 0xe
 2118 005c 3A       		.uleb128 0x3a
 2119 005d 0B       		.uleb128 0xb
 2120 005e 3B       		.uleb128 0x3b
 2121 005f 05       		.uleb128 0x5
 2122 0060 49       		.uleb128 0x49
 2123 0061 13       		.uleb128 0x13
 2124 0062 02       		.uleb128 0x2
 2125 0063 17       		.uleb128 0x17
 2126 0064 00       		.byte	0
 2127 0065 00       		.byte	0
 2128 0066 08       		.uleb128 0x8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 74


 2129 0067 898201   		.uleb128 0x4109
 2130 006a 00       		.byte	0
 2131 006b 11       		.uleb128 0x11
 2132 006c 01       		.uleb128 0x1
 2133 006d 31       		.uleb128 0x31
 2134 006e 13       		.uleb128 0x13
 2135 006f 00       		.byte	0
 2136 0070 00       		.byte	0
 2137 0071 09       		.uleb128 0x9
 2138 0072 898201   		.uleb128 0x4109
 2139 0075 01       		.byte	0x1
 2140 0076 11       		.uleb128 0x11
 2141 0077 01       		.uleb128 0x1
 2142 0078 31       		.uleb128 0x31
 2143 0079 13       		.uleb128 0x13
 2144 007a 00       		.byte	0
 2145 007b 00       		.byte	0
 2146 007c 0A       		.uleb128 0xa
 2147 007d 8A8201   		.uleb128 0x410a
 2148 0080 00       		.byte	0
 2149 0081 02       		.uleb128 0x2
 2150 0082 18       		.uleb128 0x18
 2151 0083 9142     		.uleb128 0x2111
 2152 0085 18       		.uleb128 0x18
 2153 0086 00       		.byte	0
 2154 0087 00       		.byte	0
 2155 0088 0B       		.uleb128 0xb
 2156 0089 2E       		.uleb128 0x2e
 2157 008a 01       		.byte	0x1
 2158 008b 3F       		.uleb128 0x3f
 2159 008c 19       		.uleb128 0x19
 2160 008d 03       		.uleb128 0x3
 2161 008e 0E       		.uleb128 0xe
 2162 008f 3A       		.uleb128 0x3a
 2163 0090 0B       		.uleb128 0xb
 2164 0091 3B       		.uleb128 0x3b
 2165 0092 05       		.uleb128 0x5
 2166 0093 27       		.uleb128 0x27
 2167 0094 19       		.uleb128 0x19
 2168 0095 49       		.uleb128 0x49
 2169 0096 13       		.uleb128 0x13
 2170 0097 11       		.uleb128 0x11
 2171 0098 01       		.uleb128 0x1
 2172 0099 12       		.uleb128 0x12
 2173 009a 06       		.uleb128 0x6
 2174 009b 40       		.uleb128 0x40
 2175 009c 18       		.uleb128 0x18
 2176 009d 9742     		.uleb128 0x2117
 2177 009f 19       		.uleb128 0x19
 2178 00a0 01       		.uleb128 0x1
 2179 00a1 13       		.uleb128 0x13
 2180 00a2 00       		.byte	0
 2181 00a3 00       		.byte	0
 2182 00a4 0C       		.uleb128 0xc
 2183 00a5 05       		.uleb128 0x5
 2184 00a6 00       		.byte	0
 2185 00a7 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 75


 2186 00a8 0E       		.uleb128 0xe
 2187 00a9 3A       		.uleb128 0x3a
 2188 00aa 0B       		.uleb128 0xb
 2189 00ab 3B       		.uleb128 0x3b
 2190 00ac 05       		.uleb128 0x5
 2191 00ad 49       		.uleb128 0x49
 2192 00ae 13       		.uleb128 0x13
 2193 00af 02       		.uleb128 0x2
 2194 00b0 17       		.uleb128 0x17
 2195 00b1 00       		.byte	0
 2196 00b2 00       		.byte	0
 2197 00b3 0D       		.uleb128 0xd
 2198 00b4 34       		.uleb128 0x34
 2199 00b5 00       		.byte	0
 2200 00b6 03       		.uleb128 0x3
 2201 00b7 08       		.uleb128 0x8
 2202 00b8 3A       		.uleb128 0x3a
 2203 00b9 0B       		.uleb128 0xb
 2204 00ba 3B       		.uleb128 0x3b
 2205 00bb 05       		.uleb128 0x5
 2206 00bc 49       		.uleb128 0x49
 2207 00bd 13       		.uleb128 0x13
 2208 00be 02       		.uleb128 0x2
 2209 00bf 18       		.uleb128 0x18
 2210 00c0 00       		.byte	0
 2211 00c1 00       		.byte	0
 2212 00c2 0E       		.uleb128 0xe
 2213 00c3 2E       		.uleb128 0x2e
 2214 00c4 00       		.byte	0
 2215 00c5 3F       		.uleb128 0x3f
 2216 00c6 19       		.uleb128 0x19
 2217 00c7 03       		.uleb128 0x3
 2218 00c8 0E       		.uleb128 0xe
 2219 00c9 3A       		.uleb128 0x3a
 2220 00ca 0B       		.uleb128 0xb
 2221 00cb 3B       		.uleb128 0x3b
 2222 00cc 05       		.uleb128 0x5
 2223 00cd 27       		.uleb128 0x27
 2224 00ce 19       		.uleb128 0x19
 2225 00cf 49       		.uleb128 0x49
 2226 00d0 13       		.uleb128 0x13
 2227 00d1 11       		.uleb128 0x11
 2228 00d2 01       		.uleb128 0x1
 2229 00d3 12       		.uleb128 0x12
 2230 00d4 06       		.uleb128 0x6
 2231 00d5 40       		.uleb128 0x40
 2232 00d6 18       		.uleb128 0x18
 2233 00d7 9742     		.uleb128 0x2117
 2234 00d9 19       		.uleb128 0x19
 2235 00da 00       		.byte	0
 2236 00db 00       		.byte	0
 2237 00dc 0F       		.uleb128 0xf
 2238 00dd 34       		.uleb128 0x34
 2239 00de 00       		.byte	0
 2240 00df 03       		.uleb128 0x3
 2241 00e0 08       		.uleb128 0x8
 2242 00e1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 76


 2243 00e2 0B       		.uleb128 0xb
 2244 00e3 3B       		.uleb128 0x3b
 2245 00e4 05       		.uleb128 0x5
 2246 00e5 49       		.uleb128 0x49
 2247 00e6 13       		.uleb128 0x13
 2248 00e7 02       		.uleb128 0x2
 2249 00e8 17       		.uleb128 0x17
 2250 00e9 00       		.byte	0
 2251 00ea 00       		.byte	0
 2252 00eb 10       		.uleb128 0x10
 2253 00ec 898201   		.uleb128 0x4109
 2254 00ef 01       		.byte	0x1
 2255 00f0 11       		.uleb128 0x11
 2256 00f1 01       		.uleb128 0x1
 2257 00f2 31       		.uleb128 0x31
 2258 00f3 13       		.uleb128 0x13
 2259 00f4 01       		.uleb128 0x1
 2260 00f5 13       		.uleb128 0x13
 2261 00f6 00       		.byte	0
 2262 00f7 00       		.byte	0
 2263 00f8 11       		.uleb128 0x11
 2264 00f9 05       		.uleb128 0x5
 2265 00fa 00       		.byte	0
 2266 00fb 03       		.uleb128 0x3
 2267 00fc 0E       		.uleb128 0xe
 2268 00fd 3A       		.uleb128 0x3a
 2269 00fe 0B       		.uleb128 0xb
 2270 00ff 3B       		.uleb128 0x3b
 2271 0100 05       		.uleb128 0x5
 2272 0101 49       		.uleb128 0x49
 2273 0102 13       		.uleb128 0x13
 2274 0103 02       		.uleb128 0x2
 2275 0104 18       		.uleb128 0x18
 2276 0105 00       		.byte	0
 2277 0106 00       		.byte	0
 2278 0107 12       		.uleb128 0x12
 2279 0108 05       		.uleb128 0x5
 2280 0109 00       		.byte	0
 2281 010a 03       		.uleb128 0x3
 2282 010b 08       		.uleb128 0x8
 2283 010c 3A       		.uleb128 0x3a
 2284 010d 0B       		.uleb128 0xb
 2285 010e 3B       		.uleb128 0x3b
 2286 010f 05       		.uleb128 0x5
 2287 0110 49       		.uleb128 0x49
 2288 0111 13       		.uleb128 0x13
 2289 0112 02       		.uleb128 0x2
 2290 0113 18       		.uleb128 0x18
 2291 0114 00       		.byte	0
 2292 0115 00       		.byte	0
 2293 0116 13       		.uleb128 0x13
 2294 0117 2E       		.uleb128 0x2e
 2295 0118 01       		.byte	0x1
 2296 0119 3F       		.uleb128 0x3f
 2297 011a 19       		.uleb128 0x19
 2298 011b 03       		.uleb128 0x3
 2299 011c 0E       		.uleb128 0xe
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 77


 2300 011d 3A       		.uleb128 0x3a
 2301 011e 0B       		.uleb128 0xb
 2302 011f 3B       		.uleb128 0x3b
 2303 0120 0B       		.uleb128 0xb
 2304 0121 27       		.uleb128 0x27
 2305 0122 19       		.uleb128 0x19
 2306 0123 11       		.uleb128 0x11
 2307 0124 01       		.uleb128 0x1
 2308 0125 12       		.uleb128 0x12
 2309 0126 06       		.uleb128 0x6
 2310 0127 40       		.uleb128 0x40
 2311 0128 18       		.uleb128 0x18
 2312 0129 9742     		.uleb128 0x2117
 2313 012b 19       		.uleb128 0x19
 2314 012c 01       		.uleb128 0x1
 2315 012d 13       		.uleb128 0x13
 2316 012e 00       		.byte	0
 2317 012f 00       		.byte	0
 2318 0130 14       		.uleb128 0x14
 2319 0131 34       		.uleb128 0x34
 2320 0132 00       		.byte	0
 2321 0133 03       		.uleb128 0x3
 2322 0134 0E       		.uleb128 0xe
 2323 0135 3A       		.uleb128 0x3a
 2324 0136 0B       		.uleb128 0xb
 2325 0137 3B       		.uleb128 0x3b
 2326 0138 0B       		.uleb128 0xb
 2327 0139 49       		.uleb128 0x49
 2328 013a 13       		.uleb128 0x13
 2329 013b 02       		.uleb128 0x2
 2330 013c 17       		.uleb128 0x17
 2331 013d 00       		.byte	0
 2332 013e 00       		.byte	0
 2333 013f 15       		.uleb128 0x15
 2334 0140 34       		.uleb128 0x34
 2335 0141 00       		.byte	0
 2336 0142 03       		.uleb128 0x3
 2337 0143 0E       		.uleb128 0xe
 2338 0144 3A       		.uleb128 0x3a
 2339 0145 0B       		.uleb128 0xb
 2340 0146 3B       		.uleb128 0x3b
 2341 0147 0B       		.uleb128 0xb
 2342 0148 49       		.uleb128 0x49
 2343 0149 13       		.uleb128 0x13
 2344 014a 02       		.uleb128 0x2
 2345 014b 18       		.uleb128 0x18
 2346 014c 00       		.byte	0
 2347 014d 00       		.byte	0
 2348 014e 16       		.uleb128 0x16
 2349 014f 34       		.uleb128 0x34
 2350 0150 00       		.byte	0
 2351 0151 03       		.uleb128 0x3
 2352 0152 0E       		.uleb128 0xe
 2353 0153 3A       		.uleb128 0x3a
 2354 0154 0B       		.uleb128 0xb
 2355 0155 3B       		.uleb128 0x3b
 2356 0156 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 78


 2357 0157 49       		.uleb128 0x49
 2358 0158 13       		.uleb128 0x13
 2359 0159 3F       		.uleb128 0x3f
 2360 015a 19       		.uleb128 0x19
 2361 015b 02       		.uleb128 0x2
 2362 015c 18       		.uleb128 0x18
 2363 015d 00       		.byte	0
 2364 015e 00       		.byte	0
 2365 015f 17       		.uleb128 0x17
 2366 0160 01       		.uleb128 0x1
 2367 0161 01       		.byte	0x1
 2368 0162 49       		.uleb128 0x49
 2369 0163 13       		.uleb128 0x13
 2370 0164 01       		.uleb128 0x1
 2371 0165 13       		.uleb128 0x13
 2372 0166 00       		.byte	0
 2373 0167 00       		.byte	0
 2374 0168 18       		.uleb128 0x18
 2375 0169 21       		.uleb128 0x21
 2376 016a 00       		.byte	0
 2377 016b 49       		.uleb128 0x49
 2378 016c 13       		.uleb128 0x13
 2379 016d 2F       		.uleb128 0x2f
 2380 016e 0B       		.uleb128 0xb
 2381 016f 00       		.byte	0
 2382 0170 00       		.byte	0
 2383 0171 19       		.uleb128 0x19
 2384 0172 0F       		.uleb128 0xf
 2385 0173 00       		.byte	0
 2386 0174 0B       		.uleb128 0xb
 2387 0175 0B       		.uleb128 0xb
 2388 0176 49       		.uleb128 0x49
 2389 0177 13       		.uleb128 0x13
 2390 0178 00       		.byte	0
 2391 0179 00       		.byte	0
 2392 017a 1A       		.uleb128 0x1a
 2393 017b 26       		.uleb128 0x26
 2394 017c 00       		.byte	0
 2395 017d 49       		.uleb128 0x49
 2396 017e 13       		.uleb128 0x13
 2397 017f 00       		.byte	0
 2398 0180 00       		.byte	0
 2399 0181 1B       		.uleb128 0x1b
 2400 0182 2E       		.uleb128 0x2e
 2401 0183 00       		.byte	0
 2402 0184 3F       		.uleb128 0x3f
 2403 0185 19       		.uleb128 0x19
 2404 0186 3C       		.uleb128 0x3c
 2405 0187 19       		.uleb128 0x19
 2406 0188 6E       		.uleb128 0x6e
 2407 0189 0E       		.uleb128 0xe
 2408 018a 03       		.uleb128 0x3
 2409 018b 0E       		.uleb128 0xe
 2410 018c 3A       		.uleb128 0x3a
 2411 018d 0B       		.uleb128 0xb
 2412 018e 3B       		.uleb128 0x3b
 2413 018f 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 79


 2414 0190 00       		.byte	0
 2415 0191 00       		.byte	0
 2416 0192 1C       		.uleb128 0x1c
 2417 0193 2E       		.uleb128 0x2e
 2418 0194 00       		.byte	0
 2419 0195 3F       		.uleb128 0x3f
 2420 0196 19       		.uleb128 0x19
 2421 0197 3C       		.uleb128 0x3c
 2422 0198 19       		.uleb128 0x19
 2423 0199 6E       		.uleb128 0x6e
 2424 019a 0E       		.uleb128 0xe
 2425 019b 03       		.uleb128 0x3
 2426 019c 0E       		.uleb128 0xe
 2427 019d 3A       		.uleb128 0x3a
 2428 019e 0B       		.uleb128 0xb
 2429 019f 3B       		.uleb128 0x3b
 2430 01a0 05       		.uleb128 0x5
 2431 01a1 00       		.byte	0
 2432 01a2 00       		.byte	0
 2433 01a3 00       		.byte	0
 2434              		.section	.debug_loc,"",%progbits
 2435              	.Ldebug_loc0:
 2436              	.LLST0:
 2437 0000 08000000 		.4byte	.LVL1
 2438 0004 58000000 		.4byte	.LVL6
 2439 0008 0100     		.2byte	0x1
 2440 000a 54       		.byte	0x54
 2441 000b 00000000 		.4byte	0
 2442 000f 00000000 		.4byte	0
 2443              	.LLST1:
 2444 0013 00000000 		.4byte	.LVL7
 2445 0017 00000000 		.4byte	.LVL7
 2446 001b 0100     		.2byte	0x1
 2447 001d 50       		.byte	0x50
 2448 001e 00000000 		.4byte	.LVL7
 2449 0022 04000000 		.4byte	.LVL8
 2450 0026 0400     		.2byte	0x4
 2451 0028 F3       		.byte	0xf3
 2452 0029 01       		.uleb128 0x1
 2453 002a 50       		.byte	0x50
 2454 002b 9F       		.byte	0x9f
 2455 002c 04000000 		.4byte	.LVL8
 2456 0030 20000000 		.4byte	.LFE4
 2457 0034 0100     		.2byte	0x1
 2458 0036 50       		.byte	0x50
 2459 0037 00000000 		.4byte	0
 2460 003b 00000000 		.4byte	0
 2461              	.LLST2:
 2462 003f 12000000 		.4byte	.LVL9
 2463 0043 1A000000 		.4byte	.LVL10
 2464 0047 0100     		.2byte	0x1
 2465 0049 53       		.byte	0x53
 2466 004a 00000000 		.4byte	0
 2467 004e 00000000 		.4byte	0
 2468              	.LLST3:
 2469 0052 00000000 		.4byte	.LVL11
 2470 0056 06000000 		.4byte	.LVL12
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 80


 2471 005a 0100     		.2byte	0x1
 2472 005c 50       		.byte	0x50
 2473 005d 06000000 		.4byte	.LVL12
 2474 0061 0C000000 		.4byte	.LFE9
 2475 0065 0400     		.2byte	0x4
 2476 0067 F3       		.byte	0xf3
 2477 0068 01       		.uleb128 0x1
 2478 0069 50       		.byte	0x50
 2479 006a 9F       		.byte	0x9f
 2480 006b 00000000 		.4byte	0
 2481 006f 00000000 		.4byte	0
 2482              	.LLST4:
 2483 0073 00000000 		.4byte	.LVL13
 2484 0077 2B000000 		.4byte	.LVL17-1
 2485 007b 0100     		.2byte	0x1
 2486 007d 50       		.byte	0x50
 2487 007e 2B000000 		.4byte	.LVL17-1
 2488 0082 34000000 		.4byte	.LFE11
 2489 0086 0400     		.2byte	0x4
 2490 0088 F3       		.byte	0xf3
 2491 0089 01       		.uleb128 0x1
 2492 008a 50       		.byte	0x50
 2493 008b 9F       		.byte	0x9f
 2494 008c 00000000 		.4byte	0
 2495 0090 00000000 		.4byte	0
 2496              	.LLST5:
 2497 0094 06000000 		.4byte	.LVL14
 2498 0098 2B000000 		.4byte	.LVL17-1
 2499 009c 0100     		.2byte	0x1
 2500 009e 51       		.byte	0x51
 2501 009f 00000000 		.4byte	0
 2502 00a3 00000000 		.4byte	0
 2503              	.LLST6:
 2504 00a7 0A000000 		.4byte	.LVL15
 2505 00ab 2E000000 		.4byte	.LVL18
 2506 00af 0100     		.2byte	0x1
 2507 00b1 54       		.byte	0x54
 2508 00b2 00000000 		.4byte	0
 2509 00b6 00000000 		.4byte	0
 2510              	.LLST7:
 2511 00ba 00000000 		.4byte	.LVL19
 2512 00be 0F000000 		.4byte	.LVL22-1
 2513 00c2 0100     		.2byte	0x1
 2514 00c4 50       		.byte	0x50
 2515 00c5 0F000000 		.4byte	.LVL22-1
 2516 00c9 38000000 		.4byte	.LFE12
 2517 00cd 0400     		.2byte	0x4
 2518 00cf F3       		.byte	0xf3
 2519 00d0 01       		.uleb128 0x1
 2520 00d1 50       		.byte	0x50
 2521 00d2 9F       		.byte	0x9f
 2522 00d3 00000000 		.4byte	0
 2523 00d7 00000000 		.4byte	0
 2524              	.LLST8:
 2525 00db 08000000 		.4byte	.LVL20
 2526 00df 1C000000 		.4byte	.LVL24
 2527 00e3 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 81


 2528 00e5 54       		.byte	0x54
 2529 00e6 00000000 		.4byte	0
 2530 00ea 00000000 		.4byte	0
 2531              	.LLST9:
 2532 00ee 0C000000 		.4byte	.LVL21
 2533 00f2 32000000 		.4byte	.LVL25
 2534 00f6 0100     		.2byte	0x1
 2535 00f8 56       		.byte	0x56
 2536 00f9 00000000 		.4byte	0
 2537 00fd 00000000 		.4byte	0
 2538              	.LLST10:
 2539 0101 02000000 		.4byte	.LVL26
 2540 0105 06000000 		.4byte	.LVL27
 2541 0109 0200     		.2byte	0x2
 2542 010b 30       		.byte	0x30
 2543 010c 9F       		.byte	0x9f
 2544 010d 06000000 		.4byte	.LVL27
 2545 0111 0E000000 		.4byte	.LVL29
 2546 0115 0100     		.2byte	0x1
 2547 0117 54       		.byte	0x54
 2548 0118 10000000 		.4byte	.LVL30
 2549 011c 16000000 		.4byte	.LFE10
 2550 0120 0100     		.2byte	0x1
 2551 0122 54       		.byte	0x54
 2552 0123 00000000 		.4byte	0
 2553 0127 00000000 		.4byte	0
 2554              	.LLST11:
 2555 012b 00000000 		.4byte	.LVL35
 2556 012f 27000000 		.4byte	.LVL36-1
 2557 0133 0100     		.2byte	0x1
 2558 0135 50       		.byte	0x50
 2559 0136 27000000 		.4byte	.LVL36-1
 2560 013a 4C000000 		.4byte	.LFE14
 2561 013e 0400     		.2byte	0x4
 2562 0140 F3       		.byte	0xf3
 2563 0141 01       		.uleb128 0x1
 2564 0142 50       		.byte	0x50
 2565 0143 9F       		.byte	0x9f
 2566 0144 00000000 		.4byte	0
 2567 0148 00000000 		.4byte	0
 2568              	.LLST12:
 2569 014c 00000000 		.4byte	.LVL38
 2570 0150 06000000 		.4byte	.LVL39
 2571 0154 0100     		.2byte	0x1
 2572 0156 50       		.byte	0x50
 2573 0157 06000000 		.4byte	.LVL39
 2574 015b 08000000 		.4byte	.LVL40
 2575 015f 0200     		.2byte	0x2
 2576 0161 73       		.byte	0x73
 2577 0162 00       		.sleb128 0
 2578 0163 08000000 		.4byte	.LVL40
 2579 0167 0A000000 		.4byte	.LVL41
 2580 016b 0500     		.2byte	0x5
 2581 016d 0C       		.byte	0xc
 2582 016e 2B640040 		.4byte	0x4000642b
 2583 0172 0A000000 		.4byte	.LVL41
 2584 0176 10000000 		.4byte	.LFE15
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 82


 2585 017a 0400     		.2byte	0x4
 2586 017c F3       		.byte	0xf3
 2587 017d 01       		.uleb128 0x1
 2588 017e 50       		.byte	0x50
 2589 017f 9F       		.byte	0x9f
 2590 0180 00000000 		.4byte	0
 2591 0184 00000000 		.4byte	0
 2592              	.LLST13:
 2593 0188 00000000 		.4byte	.LVL42
 2594 018c 12000000 		.4byte	.LVL44
 2595 0190 0100     		.2byte	0x1
 2596 0192 50       		.byte	0x50
 2597 0193 12000000 		.4byte	.LVL44
 2598 0197 38000000 		.4byte	.LFE5
 2599 019b 0400     		.2byte	0x4
 2600 019d F3       		.byte	0xf3
 2601 019e 01       		.uleb128 0x1
 2602 019f 50       		.byte	0x50
 2603 01a0 9F       		.byte	0x9f
 2604 01a1 00000000 		.4byte	0
 2605 01a5 00000000 		.4byte	0
 2606              	.LLST14:
 2607 01a9 0C000000 		.4byte	.LVL43
 2608 01ad 18000000 		.4byte	.LVL46
 2609 01b1 0100     		.2byte	0x1
 2610 01b3 55       		.byte	0x55
 2611 01b4 18000000 		.4byte	.LVL46
 2612 01b8 28000000 		.4byte	.LVL48
 2613 01bc 0900     		.2byte	0x9
 2614 01be 75       		.byte	0x75
 2615 01bf 00       		.sleb128 0
 2616 01c0 03       		.byte	0x3
 2617 01c1 00000000 		.4byte	.LANCHOR0
 2618 01c5 1C       		.byte	0x1c
 2619 01c6 9F       		.byte	0x9f
 2620 01c7 00000000 		.4byte	0
 2621 01cb 00000000 		.4byte	0
 2622              	.LLST15:
 2623 01cf 00000000 		.4byte	.LVL49
 2624 01d3 07000000 		.4byte	.LVL50-1
 2625 01d7 0100     		.2byte	0x1
 2626 01d9 50       		.byte	0x50
 2627 01da 07000000 		.4byte	.LVL50-1
 2628 01de 34000000 		.4byte	.LFE13
 2629 01e2 0400     		.2byte	0x4
 2630 01e4 F3       		.byte	0xf3
 2631 01e5 01       		.uleb128 0x1
 2632 01e6 50       		.byte	0x50
 2633 01e7 9F       		.byte	0x9f
 2634 01e8 00000000 		.4byte	0
 2635 01ec 00000000 		.4byte	0
 2636              	.LLST16:
 2637 01f0 00000000 		.4byte	.LVL52
 2638 01f4 13000000 		.4byte	.LVL53-1
 2639 01f8 0100     		.2byte	0x1
 2640 01fa 50       		.byte	0x50
 2641 01fb 13000000 		.4byte	.LVL53-1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 83


 2642 01ff 20000000 		.4byte	.LFE6
 2643 0203 0400     		.2byte	0x4
 2644 0205 F3       		.byte	0xf3
 2645 0206 01       		.uleb128 0x1
 2646 0207 50       		.byte	0x50
 2647 0208 9F       		.byte	0x9f
 2648 0209 00000000 		.4byte	0
 2649 020d 00000000 		.4byte	0
 2650              	.LLST17:
 2651 0211 00000000 		.4byte	.LVL56
 2652 0215 04000000 		.4byte	.LVL57
 2653 0219 0200     		.2byte	0x2
 2654 021b 30       		.byte	0x30
 2655 021c 9F       		.byte	0x9f
 2656 021d 04000000 		.4byte	.LVL57
 2657 0221 0C000000 		.4byte	.LFE16
 2658 0225 0100     		.2byte	0x1
 2659 0227 50       		.byte	0x50
 2660 0228 00000000 		.4byte	0
 2661 022c 00000000 		.4byte	0
 2662              	.LLST18:
 2663 0230 10000000 		.4byte	.LVL62
 2664 0234 27000000 		.4byte	.LVL63-1
 2665 0238 0100     		.2byte	0x1
 2666 023a 50       		.byte	0x50
 2667 023b 42000000 		.4byte	.LVL64
 2668 023f 59000000 		.4byte	.LVL65-1
 2669 0243 0100     		.2byte	0x1
 2670 0245 50       		.byte	0x50
 2671 0246 00000000 		.4byte	0
 2672 024a 00000000 		.4byte	0
 2673              		.section	.debug_aranges,"",%progbits
 2674 0000 AC000000 		.4byte	0xac
 2675 0004 0200     		.2byte	0x2
 2676 0006 00000000 		.4byte	.Ldebug_info0
 2677 000a 04       		.byte	0x4
 2678 000b 00       		.byte	0
 2679 000c 0000     		.2byte	0
 2680 000e 0000     		.2byte	0
 2681 0010 00000000 		.4byte	.LFB1
 2682 0014 68000000 		.4byte	.LFE1-.LFB1
 2683 0018 00000000 		.4byte	.LFB4
 2684 001c 20000000 		.4byte	.LFE4-.LFB4
 2685 0020 00000000 		.4byte	.LFB8
 2686 0024 10000000 		.4byte	.LFE8-.LFB8
 2687 0028 00000000 		.4byte	.LFB9
 2688 002c 0C000000 		.4byte	.LFE9-.LFB9
 2689 0030 00000000 		.4byte	.LFB11
 2690 0034 34000000 		.4byte	.LFE11-.LFB11
 2691 0038 00000000 		.4byte	.LFB12
 2692 003c 38000000 		.4byte	.LFE12-.LFB12
 2693 0040 00000000 		.4byte	.LFB10
 2694 0044 16000000 		.4byte	.LFE10-.LFB10
 2695 0048 00000000 		.4byte	.LFB3
 2696 004c 68000000 		.4byte	.LFE3-.LFB3
 2697 0050 00000000 		.4byte	.LFB14
 2698 0054 4C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 84


 2699 0058 00000000 		.4byte	.LFB15
 2700 005c 10000000 		.4byte	.LFE15-.LFB15
 2701 0060 00000000 		.4byte	.LFB5
 2702 0064 38000000 		.4byte	.LFE5-.LFB5
 2703 0068 00000000 		.4byte	.LFB13
 2704 006c 34000000 		.4byte	.LFE13-.LFB13
 2705 0070 00000000 		.4byte	.LFB6
 2706 0074 20000000 		.4byte	.LFE6-.LFB6
 2707 0078 00000000 		.4byte	.LFB7
 2708 007c 38000000 		.4byte	.LFE7-.LFB7
 2709 0080 00000000 		.4byte	.LFB16
 2710 0084 0C000000 		.4byte	.LFE16-.LFB16
 2711 0088 00000000 		.4byte	.LFB17
 2712 008c 0C000000 		.4byte	.LFE17-.LFB17
 2713 0090 00000000 		.4byte	.LFB18
 2714 0094 20000000 		.4byte	.LFE18-.LFB18
 2715 0098 00000000 		.4byte	.LFB0
 2716 009c E4000000 		.4byte	.LFE0-.LFB0
 2717 00a0 00000000 		.4byte	.LFB2
 2718 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2719 00a8 00000000 		.4byte	0
 2720 00ac 00000000 		.4byte	0
 2721              		.section	.debug_ranges,"",%progbits
 2722              	.Ldebug_ranges0:
 2723 0000 00000000 		.4byte	.LFB1
 2724 0004 68000000 		.4byte	.LFE1
 2725 0008 00000000 		.4byte	.LFB4
 2726 000c 20000000 		.4byte	.LFE4
 2727 0010 00000000 		.4byte	.LFB8
 2728 0014 10000000 		.4byte	.LFE8
 2729 0018 00000000 		.4byte	.LFB9
 2730 001c 0C000000 		.4byte	.LFE9
 2731 0020 00000000 		.4byte	.LFB11
 2732 0024 34000000 		.4byte	.LFE11
 2733 0028 00000000 		.4byte	.LFB12
 2734 002c 38000000 		.4byte	.LFE12
 2735 0030 00000000 		.4byte	.LFB10
 2736 0034 16000000 		.4byte	.LFE10
 2737 0038 00000000 		.4byte	.LFB3
 2738 003c 68000000 		.4byte	.LFE3
 2739 0040 00000000 		.4byte	.LFB14
 2740 0044 4C000000 		.4byte	.LFE14
 2741 0048 00000000 		.4byte	.LFB15
 2742 004c 10000000 		.4byte	.LFE15
 2743 0050 00000000 		.4byte	.LFB5
 2744 0054 38000000 		.4byte	.LFE5
 2745 0058 00000000 		.4byte	.LFB13
 2746 005c 34000000 		.4byte	.LFE13
 2747 0060 00000000 		.4byte	.LFB6
 2748 0064 20000000 		.4byte	.LFE6
 2749 0068 00000000 		.4byte	.LFB7
 2750 006c 38000000 		.4byte	.LFE7
 2751 0070 00000000 		.4byte	.LFB16
 2752 0074 0C000000 		.4byte	.LFE16
 2753 0078 00000000 		.4byte	.LFB17
 2754 007c 0C000000 		.4byte	.LFE17
 2755 0080 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 85


 2756 0084 20000000 		.4byte	.LFE18
 2757 0088 00000000 		.4byte	.LFB0
 2758 008c E4000000 		.4byte	.LFE0
 2759 0090 00000000 		.4byte	.LFB2
 2760 0094 2C000000 		.4byte	.LFE2
 2761 0098 00000000 		.4byte	0
 2762 009c 00000000 		.4byte	0
 2763              		.section	.debug_line,"",%progbits
 2764              	.Ldebug_line0:
 2765 0000 A9020000 		.section	.debug_str,"MS",%progbits,1
 2765      0200BD00 
 2765      00000201 
 2765      FB0E0D00 
 2765      01010101 
 2766              	.LASF70:
 2767 0000 42757474 		.ascii	"Button_CompCH0_Stop\000"
 2767      6F6E5F43 
 2767      6F6D7043 
 2767      48305F53 
 2767      746F7000 
 2768              	.LASF10:
 2769 0014 75696E74 		.ascii	"uint16\000"
 2769      313600
 2770              	.LASF66:
 2771 001b 43794578 		.ascii	"CyExitCriticalSection\000"
 2771      69744372 
 2771      69746963 
 2771      616C5365 
 2771      6374696F 
 2772              	.LASF72:
 2773 0031 42757474 		.ascii	"Button_IdacCH0_SetValue\000"
 2773      6F6E5F49 
 2773      64616343 
 2773      48305F53 
 2773      65745661 
 2774              	.LASF30:
 2775 0049 42757474 		.ascii	"Button_DisableSensor\000"
 2775      6F6E5F44 
 2775      69736162 
 2775      6C655365 
 2775      6E736F72 
 2776              	.LASF45:
 2777 005e 42757474 		.ascii	"Button_SetAnalogSwitchesSource\000"
 2777      6F6E5F53 
 2777      6574416E 
 2777      616C6F67 
 2777      53776974 
 2778              	.LASF39:
 2779 007d 42757474 		.ascii	"Button_PreScan\000"
 2779      6F6E5F50 
 2779      72655363 
 2779      616E00
 2780              	.LASF24:
 2781 008c 736E7349 		.ascii	"snsIndex\000"
 2781      6E646578 
 2781      00
 2782              	.LASF58:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 86


 2783 0095 42757474 		.ascii	"Button_idacSettings\000"
 2783      6F6E5F69 
 2783      64616353 
 2783      65747469 
 2783      6E677300 
 2784              	.LASF26:
 2785 00a9 42757474 		.ascii	"Button_Enable\000"
 2785      6F6E5F45 
 2785      6E61626C 
 2785      6500
 2786              	.LASF7:
 2787 00b7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2787      206C6F6E 
 2787      6720756E 
 2787      7369676E 
 2787      65642069 
 2788              	.LASF56:
 2789 00ce 42757474 		.ascii	"Button_maskTable\000"
 2789      6F6E5F6D 
 2789      61736B54 
 2789      61626C65 
 2789      00
 2790              	.LASF6:
 2791 00df 6C6F6E67 		.ascii	"long long int\000"
 2791      206C6F6E 
 2791      6720696E 
 2791      7400
 2792              	.LASF0:
 2793 00ed 7369676E 		.ascii	"signed char\000"
 2793      65642063 
 2793      68617200 
 2794              	.LASF54:
 2795 00f9 42757474 		.ascii	"Button_pcTable\000"
 2795      6F6E5F70 
 2795      63546162 
 2795      6C6500
 2796              	.LASF22:
 2797 0108 42757474 		.ascii	"Button_FindNextSensor\000"
 2797      6F6E5F46 
 2797      696E644E 
 2797      65787453 
 2797      656E736F 
 2798              	.LASF4:
 2799 011e 6C6F6E67 		.ascii	"long int\000"
 2799      20696E74 
 2799      00
 2800              	.LASF63:
 2801 0127 42757474 		.ascii	"Button_IntClock_Start\000"
 2801      6F6E5F49 
 2801      6E74436C 
 2801      6F636B5F 
 2801      53746172 
 2802              	.LASF16:
 2803 013d 72656731 		.ascii	"reg16\000"
 2803      3600
 2804              	.LASF9:
 2805 0143 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 87


 2805      3800
 2806              	.LASF13:
 2807 0149 646F7562 		.ascii	"double\000"
 2807      6C6500
 2808              	.LASF34:
 2809 0150 42757474 		.ascii	"Button_SetPrescaler\000"
 2809      6F6E5F53 
 2809      65745072 
 2809      65736361 
 2809      6C657200 
 2810              	.LASF84:
 2811 0164 42757474 		.ascii	"Button_IsBusy\000"
 2811      6F6E5F49 
 2811      73427573 
 2811      7900
 2812              	.LASF11:
 2813 0172 75696E74 		.ascii	"uint32\000"
 2813      333200
 2814              	.LASF29:
 2815 0179 6D61736B 		.ascii	"mask\000"
 2815      00
 2816              	.LASF28:
 2817 017e 706F7274 		.ascii	"port\000"
 2817      00
 2818              	.LASF79:
 2819 0183 42757474 		.ascii	"Button_IdacCH0_SetRange\000"
 2819      6F6E5F49 
 2819      64616343 
 2819      48305F53 
 2819      65745261 
 2820              	.LASF8:
 2821 019b 756E7369 		.ascii	"unsigned int\000"
 2821      676E6564 
 2821      20696E74 
 2821      00
 2822              	.LASF59:
 2823 01a8 42757474 		.ascii	"Button_widgetResolution\000"
 2823      6F6E5F77 
 2823      69646765 
 2823      74526573 
 2823      6F6C7574 
 2824              	.LASF42:
 2825 01c0 42757474 		.ascii	"Button_GetPrescaler\000"
 2825      6F6E5F47 
 2825      65745072 
 2825      65736361 
 2825      6C657200 
 2826              	.LASF75:
 2827 01d4 42757474 		.ascii	"Button_AMuxCH0_Init\000"
 2827      6F6E5F41 
 2827      4D757843 
 2827      48305F49 
 2827      6E697400 
 2828              	.LASF5:
 2829 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 2829      20756E73 
 2829      69676E65 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 88


 2829      6420696E 
 2829      7400
 2830              	.LASF27:
 2831 01fa 42757474 		.ascii	"Button_EnableSensor\000"
 2831      6F6E5F45 
 2831      6E61626C 
 2831      6553656E 
 2831      736F7200 
 2832              	.LASF62:
 2833 020e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2833      74657243 
 2833      72697469 
 2833      63616C53 
 2833      65637469 
 2834              	.LASF71:
 2835 0225 42757474 		.ascii	"Button_IdacCH0_Stop\000"
 2835      6F6E5F49 
 2835      64616343 
 2835      48305F53 
 2835      746F7000 
 2836              	.LASF61:
 2837 0239 42757474 		.ascii	"Button_widgetNumber\000"
 2837      6F6E5F77 
 2837      69646765 
 2837      744E756D 
 2837      62657200 
 2838              	.LASF3:
 2839 024d 73686F72 		.ascii	"short unsigned int\000"
 2839      7420756E 
 2839      7369676E 
 2839      65642069 
 2839      6E7400
 2840              	.LASF55:
 2841 0260 42757474 		.ascii	"Button_portTable\000"
 2841      6F6E5F70 
 2841      6F727454 
 2841      61626C65 
 2841      00
 2842              	.LASF51:
 2843 0271 42757474 		.ascii	"Button_sensorIndex\000"
 2843      6F6E5F73 
 2843      656E736F 
 2843      72496E64 
 2843      657800
 2844              	.LASF73:
 2845 0284 4379496E 		.ascii	"CyIntSetVector\000"
 2845      74536574 
 2845      56656374 
 2845      6F7200
 2846              	.LASF76:
 2847 0293 42757474 		.ascii	"Button_CompCH0_Init\000"
 2847      6F6E5F43 
 2847      6F6D7043 
 2847      48305F49 
 2847      6E697400 
 2848              	.LASF25:
 2849 02a7 73656E73 		.ascii	"sensor\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 89


 2849      6F7200
 2850              	.LASF23:
 2851 02ae 42757474 		.ascii	"Button_ReadSensorRaw\000"
 2851      6F6E5F52 
 2851      65616453 
 2851      656E736F 
 2851      72526177 
 2852              	.LASF53:
 2853 02c3 42757474 		.ascii	"Button_sensorEnableMask\000"
 2853      6F6E5F73 
 2853      656E736F 
 2853      72456E61 
 2853      626C654D 
 2854              	.LASF37:
 2855 02db 736C6F74 		.ascii	"slot\000"
 2855      00
 2856              	.LASF32:
 2857 02e0 42757474 		.ascii	"Button_Stop\000"
 2857      6F6E5F53 
 2857      746F7000 
 2858              	.LASF31:
 2859 02ec 42757474 		.ascii	"Button_ClearSensors\000"
 2859      6F6E5F43 
 2859      6C656172 
 2859      53656E73 
 2859      6F727300 
 2860              	.LASF17:
 2861 0300 72656733 		.ascii	"reg32\000"
 2861      3200
 2862              	.LASF19:
 2863 0306 73697A65 		.ascii	"sizetype\000"
 2863      74797065 
 2863      00
 2864              	.LASF18:
 2865 030f 6C6F6E67 		.ascii	"long double\000"
 2865      20646F75 
 2865      626C6500 
 2866              	.LASF44:
 2867 031b 7363616E 		.ascii	"scanSpeed\000"
 2867      53706565 
 2867      6400
 2868              	.LASF21:
 2869 0325 656E4D61 		.ascii	"enMask\000"
 2869      736B00
 2870              	.LASF74:
 2871 032c 4379496E 		.ascii	"CyIntSetPriority\000"
 2871      74536574 
 2871      5072696F 
 2871      72697479 
 2871      00
 2872              	.LASF12:
 2873 033d 666C6F61 		.ascii	"float\000"
 2873      7400
 2874              	.LASF35:
 2875 0343 70726573 		.ascii	"prescaler\000"
 2875      63616C65 
 2875      7200
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 90


 2876              	.LASF50:
 2877 034d 42757474 		.ascii	"Button_csv\000"
 2877      6F6E5F63 
 2877      737600
 2878              	.LASF82:
 2879 0358 47656E65 		.ascii	"Generated_Source\\PSoC5\\Button.c\000"
 2879      72617465 
 2879      645F536F 
 2879      75726365 
 2879      5C50536F 
 2880              	.LASF15:
 2881 0378 72656738 		.ascii	"reg8\000"
 2881      00
 2882              	.LASF57:
 2883 037d 42757474 		.ascii	"Button_csTable\000"
 2883      6F6E5F63 
 2883      73546162 
 2883      6C6500
 2884              	.LASF1:
 2885 038c 756E7369 		.ascii	"unsigned char\000"
 2885      676E6564 
 2885      20636861 
 2885      7200
 2886              	.LASF83:
 2887 039a 433A5C55 		.ascii	"C:\\Users\\henrichsc\\Desktop\\School\\Senior_year\\"
 2887      73657273 
 2887      5C68656E 
 2887      72696368 
 2887      73635C44 
 2888 03c8 66616C6C 		.ascii	"fall\\CE4920\\lab\\project1.cydsn\000"
 2888      5C434534 
 2888      3932305C 
 2888      6C61625C 
 2888      70726F6A 
 2889              	.LASF2:
 2890 03e7 73686F72 		.ascii	"short int\000"
 2890      7420696E 
 2890      7400
 2891              	.LASF38:
 2892 03f1 77696467 		.ascii	"widget\000"
 2892      657400
 2893              	.LASF48:
 2894 03f8 42757474 		.ascii	"Button_initVar\000"
 2894      6F6E5F69 
 2894      6E697456 
 2894      617200
 2895              	.LASF52:
 2896 0407 42757474 		.ascii	"Button_sensorRaw\000"
 2896      6F6E5F73 
 2896      656E736F 
 2896      72526177 
 2896      00
 2897              	.LASF81:
 2898 0418 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2898      43313120 
 2898      352E342E 
 2898      31203230 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 91


 2898      31363036 
 2899 044b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2899      20726576 
 2899      6973696F 
 2899      6E203233 
 2899      37373135 
 2900 047e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2900      66756E63 
 2900      74696F6E 
 2900      2D736563 
 2900      74696F6E 
 2901              	.LASF78:
 2902 04a6 42757474 		.ascii	"Button_IdacCH0_SetPolarity\000"
 2902      6F6E5F49 
 2902      64616343 
 2902      48305F53 
 2902      6574506F 
 2903              	.LASF40:
 2904 04c1 42757474 		.ascii	"Button_ScanSensor\000"
 2904      6F6E5F53 
 2904      63616E53 
 2904      656E736F 
 2904      7200
 2905              	.LASF14:
 2906 04d3 63686172 		.ascii	"char\000"
 2906      00
 2907              	.LASF41:
 2908 04d8 42757474 		.ascii	"Button_ScanEnabledWidgets\000"
 2908      6F6E5F53 
 2908      63616E45 
 2908      6E61626C 
 2908      65645769 
 2909              	.LASF77:
 2910 04f2 42757474 		.ascii	"Button_IdacCH0_Init\000"
 2910      6F6E5F49 
 2910      64616343 
 2910      48305F49 
 2910      6E697400 
 2911              	.LASF69:
 2912 0506 42757474 		.ascii	"Button_IntClock_Stop\000"
 2912      6F6E5F49 
 2912      6E74436C 
 2912      6F636B5F 
 2912      53746F70 
 2913              	.LASF80:
 2914 051b 42757474 		.ascii	"Button_AutoTune\000"
 2914      6F6E5F41 
 2914      75746F54 
 2914      756E6500 
 2915              	.LASF33:
 2916 052b 42757474 		.ascii	"Button_PostScan\000"
 2916      6F6E5F50 
 2916      6F737453 
 2916      63616E00 
 2917              	.LASF68:
 2918 053b 42757474 		.ascii	"Button_AMuxCH0_Unset\000"
 2918      6F6E5F41 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 92


 2918      4D757843 
 2918      48305F55 
 2918      6E736574 
 2919              	.LASF36:
 2920 0550 42757474 		.ascii	"Button_SetScanSlotSettings\000"
 2920      6F6E5F53 
 2920      65745363 
 2920      616E536C 
 2920      6F745365 
 2921              	.LASF46:
 2922 056b 42757474 		.ascii	"Button_Init\000"
 2922      6F6E5F49 
 2922      6E697400 
 2923              	.LASF49:
 2924 0577 42757474 		.ascii	"Button_lowLevelTuningDone\000"
 2924      6F6E5F6C 
 2924      6F774C65 
 2924      76656C54 
 2924      756E696E 
 2925              	.LASF20:
 2926 0591 656E6162 		.ascii	"enableInterrupts\000"
 2926      6C65496E 
 2926      74657272 
 2926      75707473 
 2926      00
 2927              	.LASF43:
 2928 05a2 42757474 		.ascii	"Button_SetScanSpeed\000"
 2928      6F6E5F53 
 2928      65745363 
 2928      616E5370 
 2928      65656400 
 2929              	.LASF67:
 2930 05b6 42757474 		.ascii	"Button_AMuxCH0_Set\000"
 2930      6F6E5F41 
 2930      4D757843 
 2930      48305F53 
 2930      657400
 2931              	.LASF60:
 2932 05c9 42757474 		.ascii	"Button_analogSwitchDivider\000"
 2932      6F6E5F61 
 2932      6E616C6F 
 2932      67537769 
 2932      74636844 
 2933              	.LASF64:
 2934 05e4 42757474 		.ascii	"Button_CompCH0_Enable\000"
 2934      6F6E5F43 
 2934      6F6D7043 
 2934      48305F45 
 2934      6E61626C 
 2935              	.LASF65:
 2936 05fa 42757474 		.ascii	"Button_IdacCH0_Enable\000"
 2936      6F6E5F49 
 2936      64616343 
 2936      48305F45 
 2936      6E61626C 
 2937              	.LASF47:
 2938 0610 42757474 		.ascii	"Button_Start\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccSQi7KK.s 			page 93


 2938      6F6E5F53 
 2938      74617274 
 2938      00
 2939              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
