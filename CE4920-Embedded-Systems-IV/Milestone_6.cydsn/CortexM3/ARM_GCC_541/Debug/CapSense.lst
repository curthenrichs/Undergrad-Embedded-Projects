ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x7Fu, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Right__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Left__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Slider_e0__LS__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Slider_e1__LS__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Slider_e2__LS__PC, 
  52:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Slider_e3__LS__PC, 
  53:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Slider_e4__LS__PC, 
  54:Generated_Source\PSoC5/CapSense.c **** };
  55:Generated_Source\PSoC5/CapSense.c **** 
  56:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  57:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Right__BTN__PORT, 
  58:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Left__BTN__PORT, 
  59:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e0__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e1__LS__PORT, 
  61:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e2__LS__PORT, 
  62:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e3__LS__PORT, 
  63:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e4__LS__PORT, 
  64:Generated_Source\PSoC5/CapSense.c **** };
  65:Generated_Source\PSoC5/CapSense.c **** 
  66:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  67:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Right__BTN__MASK,
  68:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Left__BTN__MASK,
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e0__LS__MASK,
  70:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e1__LS__MASK,
  71:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e2__LS__MASK,
  72:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e3__LS__MASK,
  73:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Slider_e4__LS__MASK,
  74:Generated_Source\PSoC5/CapSense.c **** };
  75:Generated_Source\PSoC5/CapSense.c **** 
  76:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  77:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  78:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  79:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  80:Generated_Source\PSoC5/CapSense.c **** };
  81:Generated_Source\PSoC5/CapSense.c **** 
  82:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  83:Generated_Source\PSoC5/CapSense.c ****     200u,200u,200u,200u,200u,200u,200u,
  84:Generated_Source\PSoC5/CapSense.c **** };
  85:Generated_Source\PSoC5/CapSense.c **** 
  86:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  87:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  89:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  90:Generated_Source\PSoC5/CapSense.c **** };
  91:Generated_Source\PSoC5/CapSense.c **** 
  92:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  93:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  94:Generated_Source\PSoC5/CapSense.c ****     1u, /* Right__BTN */
  95:Generated_Source\PSoC5/CapSense.c ****     2u, /* Left__BTN */
  96:Generated_Source\PSoC5/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* Slider__LS */
  97:Generated_Source\PSoC5/CapSense.c ****     
  98:Generated_Source\PSoC5/CapSense.c **** };
  99:Generated_Source\PSoC5/CapSense.c **** 
 100:Generated_Source\PSoC5/CapSense.c **** 
 101:Generated_Source\PSoC5/CapSense.c **** 
 102:Generated_Source\PSoC5/CapSense.c **** 
 103:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 104:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 105:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 106:Generated_Source\PSoC5/CapSense.c **** *
 107:Generated_Source\PSoC5/CapSense.c **** * Summary:
 108:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 109:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 110:Generated_Source\PSoC5/CapSense.c **** *
 111:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 112:Generated_Source\PSoC5/CapSense.c **** *  None
 113:Generated_Source\PSoC5/CapSense.c **** *
 114:Generated_Source\PSoC5/CapSense.c **** * Return:
 115:Generated_Source\PSoC5/CapSense.c **** *  None
 116:Generated_Source\PSoC5/CapSense.c **** *
 117:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 118:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 119:Generated_Source\PSoC5/CapSense.c **** {
 120:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 121:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 122:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 123:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 124:Generated_Source\PSoC5/CapSense.c ****         
 125:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 126:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 127:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 128:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 129:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 130:Generated_Source\PSoC5/CapSense.c ****            */
 131:Generated_Source\PSoC5/CapSense.c ****     
 132:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 133:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 134:Generated_Source\PSoC5/CapSense.c **** 
 135:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 136:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 137:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 138:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 139:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 140:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 141:Generated_Source\PSoC5/CapSense.c ****                                                
 142:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 143:Generated_Source\PSoC5/CapSense.c ****     #else
 144:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 146:Generated_Source\PSoC5/CapSense.c **** 
 147:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 148:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 149:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 150:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 151:Generated_Source\PSoC5/CapSense.c **** 
 152:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 153:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 154:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 155:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 156:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 157:Generated_Source\PSoC5/CapSense.c ****         
 158:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 159:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 160:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 161:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 162:Generated_Source\PSoC5/CapSense.c ****         
 163:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 164:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 165:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 166:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 167:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 168:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 169:Generated_Source\PSoC5/CapSense.c ****         
 170:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 171:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 172:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 173:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 174:Generated_Source\PSoC5/CapSense.c ****                 
 175:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 176:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 177:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 178:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 179:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 180:Generated_Source\PSoC5/CapSense.c ****         
 181:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 182:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 183:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 184:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 185:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 186:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 187:Generated_Source\PSoC5/CapSense.c ****         
 188:Generated_Source\PSoC5/CapSense.c ****     #else
 189:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 190:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 191:Generated_Source\PSoC5/CapSense.c ****     
 192:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 193:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 194:Generated_Source\PSoC5/CapSense.c ****     
 195:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 196:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 197:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 200:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 201:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 203:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 204:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 205:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 206:Generated_Source\PSoC5/CapSense.c ****     
 207:Generated_Source\PSoC5/CapSense.c ****     #else
 208:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 209:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 210:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 211:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 212:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 213:Generated_Source\PSoC5/CapSense.c ****         
 214:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 215:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 216:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 217:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 218:Generated_Source\PSoC5/CapSense.c ****         
 219:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 220:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 221:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 222:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 223:Generated_Source\PSoC5/CapSense.c ****         
 224:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 225:Generated_Source\PSoC5/CapSense.c ****     
 226:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 227:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 228:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 229:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 230:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 231:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 232:Generated_Source\PSoC5/CapSense.c ****             
 233:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 234:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 235:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 236:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 237:Generated_Source\PSoC5/CapSense.c ****            
 238:Generated_Source\PSoC5/CapSense.c ****         #else
 239:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 240:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 241:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 242:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 243:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 244:Generated_Source\PSoC5/CapSense.c ****             
 245:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 246:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 247:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 248:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 249:Generated_Source\PSoC5/CapSense.c ****             
 250:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 251:Generated_Source\PSoC5/CapSense.c ****             
 252:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 253:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 254:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 255:Generated_Source\PSoC5/CapSense.c ****             
 256:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 257:Generated_Source\PSoC5/CapSense.c ****     
 258:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****     
 260:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 261:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 262:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 263:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 264:Generated_Source\PSoC5/CapSense.c ****     
 265:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 266:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 267:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 268:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 269:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 270:Generated_Source\PSoC5/CapSense.c ****     
 271:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 272:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 273:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 274:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 275:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 276:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 277:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 278:Generated_Source\PSoC5/CapSense.c ****     
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 283:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 284:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 285:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 286:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 287:Generated_Source\PSoC5/CapSense.c ****     
 288:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 289:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 290:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 291:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 292:Generated_Source\PSoC5/CapSense.c ****     
 293:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 294:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 295:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 296:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 297:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 298:Generated_Source\PSoC5/CapSense.c ****     
 299:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 300:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 301:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 302:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 303:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 304:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 305:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 306:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 307:Generated_Source\PSoC5/CapSense.c ****     
 308:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 309:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 310:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 311:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 312:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 313:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 314:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 315:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 317:Generated_Source\PSoC5/CapSense.c ****     
 318:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 319:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 320:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 321:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 322:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 323:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 324:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 325:Generated_Source\PSoC5/CapSense.c **** }
 326:Generated_Source\PSoC5/CapSense.c **** 
 327:Generated_Source\PSoC5/CapSense.c **** 
 328:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 329:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 330:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 331:Generated_Source\PSoC5/CapSense.c **** *
 332:Generated_Source\PSoC5/CapSense.c **** * Summary:
 333:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 334:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 335:Generated_Source\PSoC5/CapSense.c **** *
 336:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 337:Generated_Source\PSoC5/CapSense.c **** *  None
 338:Generated_Source\PSoC5/CapSense.c **** *
 339:Generated_Source\PSoC5/CapSense.c **** * Return:
 340:Generated_Source\PSoC5/CapSense.c **** *  None
 341:Generated_Source\PSoC5/CapSense.c **** *
 342:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 343:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 344:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 344 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 345:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 346:Generated_Source\PSoC5/CapSense.c ****     
 347:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 347 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 348:Generated_Source\PSoC5/CapSense.c ****     
 349:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 350:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 351:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 352:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 353:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
  41              		.loc 1 353 0
  42 0008 194A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F00103 		orr	r3, r3, #1
  45 0010 1370     		strb	r3, [r2]
 354:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 8


  46              		.loc 1 354 0
  47 0012 1032     		adds	r2, r2, #16
  48 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  49 0016 43F00103 		orr	r3, r3, #1
  50 001a 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/CapSense.c ****         
 356:Generated_Source\PSoC5/CapSense.c ****     #else
 357:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 358:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 359:Generated_Source\PSoC5/CapSense.c ****     
 360:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 361:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  51              		.loc 1 361 0
  52 001c 02F50752 		add	r2, r2, #8640
  53 0020 2732     		adds	r2, r2, #39
  54 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  55 0024 43F02003 		orr	r3, r3, #32
  56 0028 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/CapSense.c ****     
 363:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 364:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 365:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 366:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 367:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 368:Generated_Source\PSoC5/CapSense.c ****         
 369:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 370:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 371:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 372:Generated_Source\PSoC5/CapSense.c ****         
 373:Generated_Source\PSoC5/CapSense.c ****     #else
 374:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 375:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 376:Generated_Source\PSoC5/CapSense.c ****         
 377:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 378:Generated_Source\PSoC5/CapSense.c ****     
 379:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 380:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 381:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 382:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 383:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 384:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 385:Generated_Source\PSoC5/CapSense.c ****             
 386:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 387:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 388:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 389:Generated_Source\PSoC5/CapSense.c ****            
 390:Generated_Source\PSoC5/CapSense.c ****         #else
 391:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 392:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 393:Generated_Source\PSoC5/CapSense.c ****         
 394:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 395:Generated_Source\PSoC5/CapSense.c ****     
 396:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 397:Generated_Source\PSoC5/CapSense.c ****     
 398:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 399:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 400:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 9


  57              		.loc 1 400 0
  58 002a FFF7FEFF 		bl	CapSense_IntClock_Start
  59              	.LVL2:
 401:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 402:Generated_Source\PSoC5/CapSense.c ****     
 403:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 404:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  60              		.loc 1 404 0
  61 002e FFF7FEFF 		bl	CapSense_CompCH0_Enable
  62              	.LVL3:
 405:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 406:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  63              		.loc 1 406 0
  64 0032 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  65              	.LVL4:
 407:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 408:Generated_Source\PSoC5/CapSense.c ****     
 409:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 410:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 411:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 412:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 413:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 414:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 415:Generated_Source\PSoC5/CapSense.c ****     
 416:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 417:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 418:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 419:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 420:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 421:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 422:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 423:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 424:Generated_Source\PSoC5/CapSense.c ****     #else
 425:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 426:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  66              		.loc 1 426 0
  67 0036 0F4A     		ldr	r2, .L3+4
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F01003 		orr	r3, r3, #16
  70 003e 1370     		strb	r3, [r2]
 427:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  71              		.loc 1 427 0
  72 0040 103A     		subs	r2, r2, #16
  73 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  74 0044 43F01003 		orr	r3, r3, #16
  75 0048 1370     		strb	r3, [r2]
 428:Generated_Source\PSoC5/CapSense.c ****         
 429:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 430:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 431:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 432:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 433:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 434:Generated_Source\PSoC5/CapSense.c ****     
 435:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 436:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 437:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 438:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 10


 439:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 440:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 441:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 442:Generated_Source\PSoC5/CapSense.c ****         
 443:Generated_Source\PSoC5/CapSense.c ****     #else
 444:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 445:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  76              		.loc 1 445 0
  77 004a 02F5A652 		add	r2, r2, #5312
  78 004e 0532     		adds	r2, r2, #5
  79 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  80 0052 43F00103 		orr	r3, r3, #1
  81 0056 1370     		strb	r3, [r2]
 446:Generated_Source\PSoC5/CapSense.c ****         
 447:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 448:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 449:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 450:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 451:Generated_Source\PSoC5/CapSense.c ****     
 452:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  82              		.loc 1 452 0
  83 0058 2046     		mov	r0, r4
  84 005a FFF7FEFF 		bl	CyExitCriticalSection
  85              	.LVL5:
 453:Generated_Source\PSoC5/CapSense.c ****     
 454:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 455:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  86              		.loc 1 455 0
  87 005e 1022     		movs	r2, #16
  88 0060 054B     		ldr	r3, .L3+8
  89 0062 1A60     		str	r2, [r3]
 456:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 457:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 458:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 459:Generated_Source\PSoC5/CapSense.c ****     
 460:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 461:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  90              		.loc 1 461 0
  91 0064 054A     		ldr	r2, .L3+12
  92 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 0068 43F08003 		orr	r3, r3, #128
  94 006c 1370     		strb	r3, [r2]
  95 006e 10BD     		pop	{r4, pc}
  96              	.LVL6:
  97              	.L4:
  98              		.align	2
  99              	.L3:
 100 0070 A3430040 		.word	1073759139
 101 0074 BB430040 		.word	1073759163
 102 0078 00E100E0 		.word	-536813312
 103 007c 79640040 		.word	1073767545
 104              		.cfi_endproc
 105              	.LFE1:
 106              		.size	CapSense_Enable, .-CapSense_Enable
 107              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 108              		.align	2
 109              		.global	CapSense_FindNextSensor
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 11


 110              		.thumb
 111              		.thumb_func
 112              		.type	CapSense_FindNextSensor, %function
 113              	CapSense_FindNextSensor:
 114              	.LFB4:
 462:Generated_Source\PSoC5/CapSense.c **** }
 463:Generated_Source\PSoC5/CapSense.c **** 
 464:Generated_Source\PSoC5/CapSense.c **** 
 465:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 466:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 467:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 468:Generated_Source\PSoC5/CapSense.c **** *
 469:Generated_Source\PSoC5/CapSense.c **** * Summary:
 470:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 471:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 472:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 473:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 474:Generated_Source\PSoC5/CapSense.c **** *
 475:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 476:Generated_Source\PSoC5/CapSense.c **** *  None
 477:Generated_Source\PSoC5/CapSense.c **** *
 478:Generated_Source\PSoC5/CapSense.c **** * Return:
 479:Generated_Source\PSoC5/CapSense.c **** *  None
 480:Generated_Source\PSoC5/CapSense.c **** *
 481:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 482:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 483:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 484:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 485:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 486:Generated_Source\PSoC5/CapSense.c **** *
 487:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 488:Generated_Source\PSoC5/CapSense.c **** *  No
 489:Generated_Source\PSoC5/CapSense.c **** *
 490:Generated_Source\PSoC5/CapSense.c **** * Note:
 491:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 492:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 493:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 494:Generated_Source\PSoC5/CapSense.c **** *
 495:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 496:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 497:Generated_Source\PSoC5/CapSense.c **** {
 498:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 499:Generated_Source\PSoC5/CapSense.c ****     {
 500:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 501:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 502:Generated_Source\PSoC5/CapSense.c ****     }
 503:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 504:Generated_Source\PSoC5/CapSense.c ****     
 505:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 506:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 507:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 508:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 509:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 510:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 511:Generated_Source\PSoC5/CapSense.c **** }
 512:Generated_Source\PSoC5/CapSense.c **** 
 513:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 12


 514:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 515:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 516:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 517:Generated_Source\PSoC5/CapSense.c **** *
 518:Generated_Source\PSoC5/CapSense.c **** * Summary:
 519:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 520:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 521:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 522:Generated_Source\PSoC5/CapSense.c **** *
 523:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 524:Generated_Source\PSoC5/CapSense.c **** *  None
 525:Generated_Source\PSoC5/CapSense.c **** *
 526:Generated_Source\PSoC5/CapSense.c **** * Return:
 527:Generated_Source\PSoC5/CapSense.c **** *  None
 528:Generated_Source\PSoC5/CapSense.c **** *
 529:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 530:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 531:Generated_Source\PSoC5/CapSense.c **** *
 532:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 533:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 534:Generated_Source\PSoC5/CapSense.c **** {
 535:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 536:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 537:Generated_Source\PSoC5/CapSense.c ****     
 538:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 539:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 541:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 542:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 543:Generated_Source\PSoC5/CapSense.c ****     
 544:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 545:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 546:Generated_Source\PSoC5/CapSense.c ****     
 547:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 548:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 549:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 550:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 551:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 552:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 553:Generated_Source\PSoC5/CapSense.c ****         
 554:Generated_Source\PSoC5/CapSense.c ****     #else
 555:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 556:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 557:Generated_Source\PSoC5/CapSense.c ****     
 558:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 559:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 560:Generated_Source\PSoC5/CapSense.c ****     
 561:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 562:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 563:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 564:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 565:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 566:Generated_Source\PSoC5/CapSense.c **** 
 567:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 568:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 569:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 570:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 13


 571:Generated_Source\PSoC5/CapSense.c ****     #else
 572:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 573:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 574:Generated_Source\PSoC5/CapSense.c ****         
 575:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 576:Generated_Source\PSoC5/CapSense.c ****     
 577:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 578:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 579:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 580:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 581:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 582:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 583:Generated_Source\PSoC5/CapSense.c ****     
 584:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 585:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 586:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 587:Generated_Source\PSoC5/CapSense.c ****            
 588:Generated_Source\PSoC5/CapSense.c ****         #else
 589:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 590:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 591:Generated_Source\PSoC5/CapSense.c ****         
 592:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 593:Generated_Source\PSoC5/CapSense.c ****     
 594:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 595:Generated_Source\PSoC5/CapSense.c ****     
 596:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 597:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 598:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 599:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 600:Generated_Source\PSoC5/CapSense.c ****     
 601:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 602:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 603:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 605:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 606:Generated_Source\PSoC5/CapSense.c ****     
 607:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 608:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 609:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 610:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 611:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 612:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 613:Generated_Source\PSoC5/CapSense.c ****     
 614:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 615:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 616:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 617:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 618:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 619:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 620:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 621:Generated_Source\PSoC5/CapSense.c **** 
 622:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 623:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 624:Generated_Source\PSoC5/CapSense.c ****     #else
 625:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 626:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 627:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 14


 628:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 629:Generated_Source\PSoC5/CapSense.c ****         
 630:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 631:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 632:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 633:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 634:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 635:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 636:Generated_Source\PSoC5/CapSense.c ****     
 637:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 638:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 639:Generated_Source\PSoC5/CapSense.c **** }
 640:Generated_Source\PSoC5/CapSense.c **** 
 641:Generated_Source\PSoC5/CapSense.c **** 
 642:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 643:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 644:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 645:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 646:Generated_Source\PSoC5/CapSense.c ****     *
 647:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 648:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 649:Generated_Source\PSoC5/CapSense.c ****     *
 650:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 651:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 652:Generated_Source\PSoC5/CapSense.c ****     *
 653:Generated_Source\PSoC5/CapSense.c ****     * Return:
 654:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 655:Generated_Source\PSoC5/CapSense.c ****     *
 656:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 657:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 658:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 659:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 660:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 661:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 662:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 663:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 664:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 665:Generated_Source\PSoC5/CapSense.c ****     *
 666:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 667:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 668:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 669:Generated_Source\PSoC5/CapSense.c ****     *
 670:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 671:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 672:Generated_Source\PSoC5/CapSense.c ****     {
 115              		.loc 1 672 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL7:
 121              	.L7:
 673:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 674:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 675:Generated_Source\PSoC5/CapSense.c ****         
 676:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 677:Generated_Source\PSoC5/CapSense.c ****         do
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 15


 678:Generated_Source\PSoC5/CapSense.c ****         {
 679:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 680:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 122              		.loc 1 680 0
 123 0000 0130     		adds	r0, r0, #1
 124 0002 C0B2     		uxtb	r0, r0
 125              	.LVL8:
 681:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 126              		.loc 1 681 0
 127 0004 0728     		cmp	r0, #7
 128 0006 08D0     		beq	.L6
 682:Generated_Source\PSoC5/CapSense.c ****             {
 683:Generated_Source\PSoC5/CapSense.c ****                 break;
 684:Generated_Source\PSoC5/CapSense.c ****             }
 685:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 129              		.loc 1 685 0
 130 0008 C208     		lsrs	r2, r0, #3
 686:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 131              		.loc 1 686 0
 132 000a 00F00701 		and	r1, r0, #7
 133 000e 0123     		movs	r3, #1
 134 0010 8B40     		lsls	r3, r3, r1
 135              	.LVL9:
 687:Generated_Source\PSoC5/CapSense.c ****         }    
 688:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 136              		.loc 1 688 0
 137 0012 0249     		ldr	r1, .L8
 138 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 139 0016 1342     		tst	r3, r2
 140 0018 F2D0     		beq	.L7
 141              	.LVL10:
 142              	.L6:
 689:Generated_Source\PSoC5/CapSense.c ****         
 690:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 691:Generated_Source\PSoC5/CapSense.c ****     }
 143              		.loc 1 691 0
 144 001a 7047     		bx	lr
 145              	.L9:
 146              		.align	2
 147              	.L8:
 148 001c 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE4:
 151              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 152              		.section	.text.CapSense_IsBusy,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_IsBusy
 155              		.thumb
 156              		.thumb_func
 157              		.type	CapSense_IsBusy, %function
 158              	CapSense_IsBusy:
 159              	.LFB8:
 692:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 693:Generated_Source\PSoC5/CapSense.c ****  
 694:Generated_Source\PSoC5/CapSense.c ****  
 695:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 696:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 16


 697:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 698:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 699:Generated_Source\PSoC5/CapSense.c ****     *
 700:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 701:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 702:Generated_Source\PSoC5/CapSense.c ****     *  
 703:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 704:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 705:Generated_Source\PSoC5/CapSense.c ****     *
 706:Generated_Source\PSoC5/CapSense.c ****     * Return:
 707:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 708:Generated_Source\PSoC5/CapSense.c ****     *
 709:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 710:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 711:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 712:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 713:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 714:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 715:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 716:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 717:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 718:Generated_Source\PSoC5/CapSense.c ****     *
 719:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 720:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 721:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 722:Generated_Source\PSoC5/CapSense.c ****     *
 723:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 724:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 725:Generated_Source\PSoC5/CapSense.c ****     {
 726:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 727:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 728:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 729:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 730:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 731:Generated_Source\PSoC5/CapSense.c ****         
 732:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 733:Generated_Source\PSoC5/CapSense.c ****         do
 734:Generated_Source\PSoC5/CapSense.c ****         {
 735:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 736:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 737:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 738:Generated_Source\PSoC5/CapSense.c ****             {
 739:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 740:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 741:Generated_Source\PSoC5/CapSense.c ****                 break;
 742:Generated_Source\PSoC5/CapSense.c ****             }
 743:Generated_Source\PSoC5/CapSense.c ****             
 744:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 745:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 746:Generated_Source\PSoC5/CapSense.c ****         }
 747:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 748:Generated_Source\PSoC5/CapSense.c ****         
 749:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 750:Generated_Source\PSoC5/CapSense.c ****         do
 751:Generated_Source\PSoC5/CapSense.c ****         {
 752:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 753:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 17


 754:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 755:Generated_Source\PSoC5/CapSense.c ****             {
 756:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 757:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 758:Generated_Source\PSoC5/CapSense.c ****                 break;
 759:Generated_Source\PSoC5/CapSense.c ****             }
 760:Generated_Source\PSoC5/CapSense.c ****             
 761:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 762:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 763:Generated_Source\PSoC5/CapSense.c ****         } 
 764:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 765:Generated_Source\PSoC5/CapSense.c ****         
 766:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 767:Generated_Source\PSoC5/CapSense.c ****         
 768:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 769:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 770:Generated_Source\PSoC5/CapSense.c ****         {
 771:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 772:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 773:Generated_Source\PSoC5/CapSense.c ****             
 774:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 775:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 776:Generated_Source\PSoC5/CapSense.c ****         }
 777:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 778:Generated_Source\PSoC5/CapSense.c ****         {
 779:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 780:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 781:Generated_Source\PSoC5/CapSense.c ****            
 782:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 783:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 784:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 785:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 786:Generated_Source\PSoC5/CapSense.c ****         }
 787:Generated_Source\PSoC5/CapSense.c ****         else
 788:Generated_Source\PSoC5/CapSense.c ****         {
 789:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 790:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 791:Generated_Source\PSoC5/CapSense.c ****             
 792:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 793:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 794:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 795:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 796:Generated_Source\PSoC5/CapSense.c ****         }
 797:Generated_Source\PSoC5/CapSense.c ****         
 798:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 799:Generated_Source\PSoC5/CapSense.c ****     }
 800:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 801:Generated_Source\PSoC5/CapSense.c **** 
 802:Generated_Source\PSoC5/CapSense.c **** 
 803:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 804:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 805:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 806:Generated_Source\PSoC5/CapSense.c **** *
 807:Generated_Source\PSoC5/CapSense.c **** * Summary:
 808:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 809:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 810:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 18


 811:Generated_Source\PSoC5/CapSense.c **** *  widget.
 812:Generated_Source\PSoC5/CapSense.c **** *
 813:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 814:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 815:Generated_Source\PSoC5/CapSense.c **** *
 816:Generated_Source\PSoC5/CapSense.c **** * Return:
 817:Generated_Source\PSoC5/CapSense.c **** *  None
 818:Generated_Source\PSoC5/CapSense.c **** *
 819:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 820:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 821:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 822:Generated_Source\PSoC5/CapSense.c **** *  widget.
 823:Generated_Source\PSoC5/CapSense.c **** *
 824:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 825:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 826:Generated_Source\PSoC5/CapSense.c **** {
 827:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 828:Generated_Source\PSoC5/CapSense.c ****     
 829:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 830:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 831:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 832:Generated_Source\PSoC5/CapSense.c ****         
 833:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 834:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 835:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 836:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 837:Generated_Source\PSoC5/CapSense.c ****         
 838:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 839:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 840:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 841:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 842:Generated_Source\PSoC5/CapSense.c ****         #else
 843:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 844:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 845:Generated_Source\PSoC5/CapSense.c **** 
 846:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 847:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 848:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 849:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 850:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 851:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 852:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 853:Generated_Source\PSoC5/CapSense.c ****                */
 854:Generated_Source\PSoC5/CapSense.c **** 
 855:Generated_Source\PSoC5/CapSense.c ****     #else
 856:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 857:Generated_Source\PSoC5/CapSense.c ****         {
 858:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 859:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 860:Generated_Source\PSoC5/CapSense.c ****             
 861:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 862:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 863:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 864:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 865:Generated_Source\PSoC5/CapSense.c ****             
 866:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 867:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 19


 868:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 869:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 870:Generated_Source\PSoC5/CapSense.c ****             #else
 871:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 872:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 873:Generated_Source\PSoC5/CapSense.c ****         }
 874:Generated_Source\PSoC5/CapSense.c ****         
 875:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 876:Generated_Source\PSoC5/CapSense.c ****         {
 877:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 878:Generated_Source\PSoC5/CapSense.c ****         
 879:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 880:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 881:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 882:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 883:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 884:Generated_Source\PSoC5/CapSense.c ****             
 885:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 886:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 887:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 888:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 889:Generated_Source\PSoC5/CapSense.c ****             #else
 890:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 891:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 892:Generated_Source\PSoC5/CapSense.c ****         }
 893:Generated_Source\PSoC5/CapSense.c **** 
 894:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 895:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 896:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 897:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 898:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 899:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 900:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 901:Generated_Source\PSoC5/CapSense.c ****                */
 902:Generated_Source\PSoC5/CapSense.c **** 
 903:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 904:Generated_Source\PSoC5/CapSense.c **** }
 905:Generated_Source\PSoC5/CapSense.c **** 
 906:Generated_Source\PSoC5/CapSense.c **** 
 907:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 908:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 909:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 910:Generated_Source\PSoC5/CapSense.c **** *
 911:Generated_Source\PSoC5/CapSense.c **** * Summary:
 912:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 913:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 914:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 915:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 916:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 917:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 918:Generated_Source\PSoC5/CapSense.c **** *
 919:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 920:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 921:Generated_Source\PSoC5/CapSense.c **** *
 922:Generated_Source\PSoC5/CapSense.c **** * Return:
 923:Generated_Source\PSoC5/CapSense.c **** *  None
 924:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 20


 925:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 926:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 927:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 928:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 929:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 930:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 931:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 932:Generated_Source\PSoC5/CapSense.c **** *
 933:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 934:Generated_Source\PSoC5/CapSense.c **** *  No
 935:Generated_Source\PSoC5/CapSense.c **** *
 936:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 937:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 938:Generated_Source\PSoC5/CapSense.c **** {
 939:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 940:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 941:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 942:Generated_Source\PSoC5/CapSense.c ****     
 943:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 944:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 945:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 946:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 947:Generated_Source\PSoC5/CapSense.c ****         
 948:Generated_Source\PSoC5/CapSense.c ****     #else
 949:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 950:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 951:Generated_Source\PSoC5/CapSense.c ****         {
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 953:Generated_Source\PSoC5/CapSense.c ****         }
 954:Generated_Source\PSoC5/CapSense.c ****         else
 955:Generated_Source\PSoC5/CapSense.c ****         {
 956:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 957:Generated_Source\PSoC5/CapSense.c ****         }
 958:Generated_Source\PSoC5/CapSense.c ****         
 959:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 960:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 961:Generated_Source\PSoC5/CapSense.c ****         {
 962:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 963:Generated_Source\PSoC5/CapSense.c ****         }
 964:Generated_Source\PSoC5/CapSense.c ****         else
 965:Generated_Source\PSoC5/CapSense.c ****         {
 966:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 967:Generated_Source\PSoC5/CapSense.c ****         }
 968:Generated_Source\PSoC5/CapSense.c ****         
 969:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 970:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 971:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 972:Generated_Source\PSoC5/CapSense.c ****         {
 973:Generated_Source\PSoC5/CapSense.c ****         
 974:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 975:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 976:Generated_Source\PSoC5/CapSense.c ****         }
 977:Generated_Source\PSoC5/CapSense.c ****         
 978:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 979:Generated_Source\PSoC5/CapSense.c **** }
 980:Generated_Source\PSoC5/CapSense.c **** 
 981:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 21


 982:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 983:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 984:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 985:Generated_Source\PSoC5/CapSense.c **** *
 986:Generated_Source\PSoC5/CapSense.c **** * Summary:
 987:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 988:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 989:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 990:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 991:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 992:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 993:Generated_Source\PSoC5/CapSense.c **** *
 994:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 995:Generated_Source\PSoC5/CapSense.c **** *  None
 996:Generated_Source\PSoC5/CapSense.c **** *
 997:Generated_Source\PSoC5/CapSense.c **** * Return:
 998:Generated_Source\PSoC5/CapSense.c **** *  None
 999:Generated_Source\PSoC5/CapSense.c **** *
1000:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1001:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1002:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1003:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1004:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1005:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1006:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1007:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1008:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1009:Generated_Source\PSoC5/CapSense.c **** *
1010:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1011:Generated_Source\PSoC5/CapSense.c **** *  No
1012:Generated_Source\PSoC5/CapSense.c **** *
1013:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1014:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1015:Generated_Source\PSoC5/CapSense.c **** {
1016:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1017:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1018:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1019:Generated_Source\PSoC5/CapSense.c ****     
1020:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1021:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1022:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1023:Generated_Source\PSoC5/CapSense.c **** 
1024:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1025:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1026:Generated_Source\PSoC5/CapSense.c ****         {
1027:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1028:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1029:Generated_Source\PSoC5/CapSense.c ****         }
1030:Generated_Source\PSoC5/CapSense.c ****         
1031:Generated_Source\PSoC5/CapSense.c ****     #else
1032:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1033:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1034:Generated_Source\PSoC5/CapSense.c ****         
1035:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1036:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1037:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1038:Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 22


1039:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1040:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1041:Generated_Source\PSoC5/CapSense.c ****         }
1042:Generated_Source\PSoC5/CapSense.c ****         
1043:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1044:Generated_Source\PSoC5/CapSense.c **** }
1045:Generated_Source\PSoC5/CapSense.c **** 
1046:Generated_Source\PSoC5/CapSense.c **** 
1047:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1048:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1049:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1050:Generated_Source\PSoC5/CapSense.c **** *
1051:Generated_Source\PSoC5/CapSense.c **** * Summary:
1052:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1053:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1054:Generated_Source\PSoC5/CapSense.c **** *
1055:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1056:Generated_Source\PSoC5/CapSense.c **** *  None
1057:Generated_Source\PSoC5/CapSense.c **** *
1058:Generated_Source\PSoC5/CapSense.c **** * Return:
1059:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1060:Generated_Source\PSoC5/CapSense.c **** *  completed.
1061:Generated_Source\PSoC5/CapSense.c **** *
1062:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1063:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1064:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1065:Generated_Source\PSoC5/CapSense.c **** *
1066:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1067:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1068:Generated_Source\PSoC5/CapSense.c **** {
 160              		.loc 1 1068 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
1069:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 165              		.loc 1 1069 0
 166 0000 024B     		ldr	r3, .L11
 167 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1070:Generated_Source\PSoC5/CapSense.c **** }
 168              		.loc 1 1070 0
 169 0004 00F00100 		and	r0, r0, #1
 170 0008 7047     		bx	lr
 171              	.L12:
 172 000a 00BF     		.align	2
 173              	.L11:
 174 000c 00000000 		.word	CapSense_csv
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 178              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 179              		.align	2
 180              		.global	CapSense_ReadSensorRaw
 181              		.thumb
 182              		.thumb_func
 183              		.type	CapSense_ReadSensorRaw, %function
 184              	CapSense_ReadSensorRaw:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 23


 185              	.LFB9:
1071:Generated_Source\PSoC5/CapSense.c **** 
1072:Generated_Source\PSoC5/CapSense.c **** 
1073:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1074:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1075:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1076:Generated_Source\PSoC5/CapSense.c **** *
1077:Generated_Source\PSoC5/CapSense.c **** * Summary:
1078:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1079:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1080:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1081:Generated_Source\PSoC5/CapSense.c **** *
1082:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1083:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1084:Generated_Source\PSoC5/CapSense.c **** *
1085:Generated_Source\PSoC5/CapSense.c **** * Return:
1086:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1087:Generated_Source\PSoC5/CapSense.c **** *
1088:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1089:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1090:Generated_Source\PSoC5/CapSense.c **** *
1091:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1092:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1093:Generated_Source\PSoC5/CapSense.c **** {
 186              		.loc 1 1093 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL11:
1094:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1095:Generated_Source\PSoC5/CapSense.c **** }
 192              		.loc 1 1095 0
 193 0000 014B     		ldr	r3, .L14
 194 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 195              	.LVL12:
 196 0006 7047     		bx	lr
 197              	.L15:
 198              		.align	2
 199              	.L14:
 200 0008 00000000 		.word	CapSense_sensorRaw
 201              		.cfi_endproc
 202              	.LFE9:
 203              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 204              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 205              		.align	2
 206              		.global	CapSense_EnableSensor
 207              		.thumb
 208              		.thumb_func
 209              		.type	CapSense_EnableSensor, %function
 210              	CapSense_EnableSensor:
 211              	.LFB11:
1096:Generated_Source\PSoC5/CapSense.c **** 
1097:Generated_Source\PSoC5/CapSense.c **** 
1098:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1099:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1100:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 24


1101:Generated_Source\PSoC5/CapSense.c **** *
1102:Generated_Source\PSoC5/CapSense.c **** * Summary:
1103:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1104:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1105:Generated_Source\PSoC5/CapSense.c **** *
1106:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1107:Generated_Source\PSoC5/CapSense.c **** *  None
1108:Generated_Source\PSoC5/CapSense.c **** *
1109:Generated_Source\PSoC5/CapSense.c **** * Return:
1110:Generated_Source\PSoC5/CapSense.c **** *  None
1111:Generated_Source\PSoC5/CapSense.c **** *
1112:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1113:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1114:Generated_Source\PSoC5/CapSense.c **** {
1115:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1116:Generated_Source\PSoC5/CapSense.c ****    
1117:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1118:Generated_Source\PSoC5/CapSense.c ****     {
1119:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1120:Generated_Source\PSoC5/CapSense.c ****     }
1121:Generated_Source\PSoC5/CapSense.c **** }
1122:Generated_Source\PSoC5/CapSense.c **** 
1123:Generated_Source\PSoC5/CapSense.c **** 
1124:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1125:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1126:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1127:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1128:Generated_Source\PSoC5/CapSense.c ****     *
1129:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1130:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1131:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1132:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1133:Generated_Source\PSoC5/CapSense.c ****     *
1134:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1135:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1136:Generated_Source\PSoC5/CapSense.c ****     *
1137:Generated_Source\PSoC5/CapSense.c ****     * Return:
1138:Generated_Source\PSoC5/CapSense.c ****     *  None
1139:Generated_Source\PSoC5/CapSense.c ****     *
1140:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1141:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1142:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1143:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1144:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1145:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1146:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1147:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1148:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1149:Generated_Source\PSoC5/CapSense.c ****     *
1150:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1151:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1152:Generated_Source\PSoC5/CapSense.c ****     {
1153:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1154:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1155:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1156:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1157:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 25


1158:Generated_Source\PSoC5/CapSense.c ****         
1159:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1160:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1161:Generated_Source\PSoC5/CapSense.c ****         {
1162:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1163:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1164:Generated_Source\PSoC5/CapSense.c ****         }
1165:Generated_Source\PSoC5/CapSense.c ****         else
1166:Generated_Source\PSoC5/CapSense.c ****         {
1167:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1168:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1169:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1170:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1171:Generated_Source\PSoC5/CapSense.c ****                         
1172:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1173:Generated_Source\PSoC5/CapSense.c ****             {
1174:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1175:Generated_Source\PSoC5/CapSense.c ****             }
1176:Generated_Source\PSoC5/CapSense.c ****         } 
1177:Generated_Source\PSoC5/CapSense.c ****     }
1178:Generated_Source\PSoC5/CapSense.c ****     
1179:Generated_Source\PSoC5/CapSense.c ****     
1180:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1181:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1182:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1183:Generated_Source\PSoC5/CapSense.c ****     *
1184:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1185:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1186:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1187:Generated_Source\PSoC5/CapSense.c ****     *
1188:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1189:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1190:Generated_Source\PSoC5/CapSense.c ****     *
1191:Generated_Source\PSoC5/CapSense.c ****     * Return:
1192:Generated_Source\PSoC5/CapSense.c ****     *  None
1193:Generated_Source\PSoC5/CapSense.c ****     *
1194:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1195:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1196:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1197:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1198:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1199:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1200:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1201:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1202:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1203:Generated_Source\PSoC5/CapSense.c ****     *
1204:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1205:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1206:Generated_Source\PSoC5/CapSense.c ****     {
1207:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1208:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1209:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1210:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1211:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1212:Generated_Source\PSoC5/CapSense.c ****         
1213:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1214:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 26


1215:Generated_Source\PSoC5/CapSense.c ****         {
1216:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1217:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1218:Generated_Source\PSoC5/CapSense.c ****         }
1219:Generated_Source\PSoC5/CapSense.c ****         else
1220:Generated_Source\PSoC5/CapSense.c ****         {
1221:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1222:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1223:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1224:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1225:Generated_Source\PSoC5/CapSense.c ****                         
1226:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1227:Generated_Source\PSoC5/CapSense.c ****             {
1228:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1229:Generated_Source\PSoC5/CapSense.c ****             }
1230:Generated_Source\PSoC5/CapSense.c ****         } 
1231:Generated_Source\PSoC5/CapSense.c ****     }
1232:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1233:Generated_Source\PSoC5/CapSense.c **** 
1234:Generated_Source\PSoC5/CapSense.c **** 
1235:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1236:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1237:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1238:Generated_Source\PSoC5/CapSense.c **** *
1239:Generated_Source\PSoC5/CapSense.c **** * Summary:
1240:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1241:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1242:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1243:Generated_Source\PSoC5/CapSense.c **** *
1244:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1245:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1246:Generated_Source\PSoC5/CapSense.c **** *
1247:Generated_Source\PSoC5/CapSense.c **** * Return:
1248:Generated_Source\PSoC5/CapSense.c **** *  None
1249:Generated_Source\PSoC5/CapSense.c **** *
1250:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1251:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1252:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1253:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1254:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1255:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1256:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1257:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1258:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1259:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1260:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1261:Generated_Source\PSoC5/CapSense.c **** *
1262:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1263:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1264:Generated_Source\PSoC5/CapSense.c **** {
 212              		.loc 1 1264 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL13:
 217 0000 10B5     		push	{r4, lr}
 218              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 27


 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
1265:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 221              		.loc 1 1265 0
 222 0002 0B4B     		ldr	r3, .L20
 223 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 224              	.LVL14:
1266:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 225              		.loc 1 1266 0
 226 0006 1A18     		adds	r2, r3, r0
 227 0008 147A     		ldrb	r4, [r2, #8]	@ zero_extendqisi2
 228              	.LVL15:
1267:Generated_Source\PSoC5/CapSense.c ****     
1268:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1269:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1270:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1271:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1272:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1273:Generated_Source\PSoC5/CapSense.c ****             */
1274:Generated_Source\PSoC5/CapSense.c ****     
1275:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1276:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 229              		.loc 1 1276 0
 230 000a 03EB8003 		add	r3, r3, r0, lsl #2
 231 000e 1B69     		ldr	r3, [r3, #16]
 232 0010 0922     		movs	r2, #9
 233 0012 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/CapSense.c ****     
1278:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1279:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 234              		.loc 1 1279 0
 235 0014 0F29     		cmp	r1, #15
 236 0016 00D1     		bne	.L17
1280:Generated_Source\PSoC5/CapSense.c **** 	{
1281:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 237              		.loc 1 1281 0
 238 0018 0721     		movs	r1, #7
 239              	.LVL16:
 240              	.L17:
1282:Generated_Source\PSoC5/CapSense.c **** 	}
1283:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 241              		.loc 1 1283 0
 242 001a 054A     		ldr	r2, .L20
 243 001c 02EB8102 		add	r2, r2, r1, lsl #2
 244 0020 D26A     		ldr	r2, [r2, #44]
 245 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 246 0024 2343     		orrs	r3, r3, r4
 247 0026 1370     		strb	r3, [r2]
1284:Generated_Source\PSoC5/CapSense.c ****     
1285:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1286:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1287:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1288:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1289:Generated_Source\PSoC5/CapSense.c ****         #else
1290:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 248              		.loc 1 1290 0
 249 0028 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 28


 250              	.LVL17:
 251 002c 10BD     		pop	{r4, pc}
 252              	.LVL18:
 253              	.L21:
 254 002e 00BF     		.align	2
 255              	.L20:
 256 0030 00000000 		.word	.LANCHOR1
 257              		.cfi_endproc
 258              	.LFE11:
 259              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 260              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 261              		.align	2
 262              		.global	CapSense_DisableSensor
 263              		.thumb
 264              		.thumb_func
 265              		.type	CapSense_DisableSensor, %function
 266              	CapSense_DisableSensor:
 267              	.LFB12:
1291:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1292:Generated_Source\PSoC5/CapSense.c ****                 
1293:Generated_Source\PSoC5/CapSense.c ****     #else
1294:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1295:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1296:Generated_Source\PSoC5/CapSense.c ****             {
1297:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1298:Generated_Source\PSoC5/CapSense.c ****             } 
1299:Generated_Source\PSoC5/CapSense.c ****             else
1300:Generated_Source\PSoC5/CapSense.c ****             {
1301:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1302:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1303:Generated_Source\PSoC5/CapSense.c ****             }
1304:Generated_Source\PSoC5/CapSense.c ****             
1305:Generated_Source\PSoC5/CapSense.c ****         #else
1306:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1307:Generated_Source\PSoC5/CapSense.c ****             {
1308:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1309:Generated_Source\PSoC5/CapSense.c ****             } 
1310:Generated_Source\PSoC5/CapSense.c ****             else
1311:Generated_Source\PSoC5/CapSense.c ****             {
1312:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1313:Generated_Source\PSoC5/CapSense.c ****             }
1314:Generated_Source\PSoC5/CapSense.c ****             
1315:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1316:Generated_Source\PSoC5/CapSense.c ****         
1317:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1318:Generated_Source\PSoC5/CapSense.c **** }
1319:Generated_Source\PSoC5/CapSense.c **** 
1320:Generated_Source\PSoC5/CapSense.c **** 
1321:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1322:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1323:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1324:Generated_Source\PSoC5/CapSense.c **** *
1325:Generated_Source\PSoC5/CapSense.c **** * Summary:
1326:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1327:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1328:Generated_Source\PSoC5/CapSense.c **** *
1329:Generated_Source\PSoC5/CapSense.c **** * Parameters:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 29


1330:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1331:Generated_Source\PSoC5/CapSense.c **** *
1332:Generated_Source\PSoC5/CapSense.c **** * Return:
1333:Generated_Source\PSoC5/CapSense.c **** *  None
1334:Generated_Source\PSoC5/CapSense.c **** *
1335:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1336:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1337:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1338:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1339:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1340:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1341:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1342:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1343:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1344:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1345:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1346:Generated_Source\PSoC5/CapSense.c **** *
1347:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1348:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1349:Generated_Source\PSoC5/CapSense.c **** {
 268              		.loc 1 1349 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL19:
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 4, -16
 276              		.cfi_offset 5, -12
 277              		.cfi_offset 6, -8
 278              		.cfi_offset 14, -4
 279 0002 0546     		mov	r5, r0
1350:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 280              		.loc 1 1350 0
 281 0004 0B4B     		ldr	r3, .L26
 282 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 283              	.LVL20:
1351:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 284              		.loc 1 1351 0
 285 0008 0344     		add	r3, r3, r0
 286 000a 1E7A     		ldrb	r6, [r3, #8]	@ zero_extendqisi2
 287              	.LVL21:
1352:Generated_Source\PSoC5/CapSense.c ****     
1353:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1354:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1355:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1356:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1357:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1358:Generated_Source\PSoC5/CapSense.c ****             */
1359:Generated_Source\PSoC5/CapSense.c ****     
1360:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1361:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1362:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1363:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1364:Generated_Source\PSoC5/CapSense.c ****         #else
1365:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 288              		.loc 1 1365 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 30


 289 000c FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 290              	.LVL22:
1366:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1367:Generated_Source\PSoC5/CapSense.c ****                 
1368:Generated_Source\PSoC5/CapSense.c ****     #else
1369:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1370:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1371:Generated_Source\PSoC5/CapSense.c ****             {
1372:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1373:Generated_Source\PSoC5/CapSense.c ****             } 
1374:Generated_Source\PSoC5/CapSense.c ****             else
1375:Generated_Source\PSoC5/CapSense.c ****             {
1376:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1377:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1378:Generated_Source\PSoC5/CapSense.c ****             }
1379:Generated_Source\PSoC5/CapSense.c ****             
1380:Generated_Source\PSoC5/CapSense.c ****         #else
1381:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1382:Generated_Source\PSoC5/CapSense.c ****             {
1383:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1384:Generated_Source\PSoC5/CapSense.c ****             } 
1385:Generated_Source\PSoC5/CapSense.c ****             else
1386:Generated_Source\PSoC5/CapSense.c ****             {
1387:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1388:Generated_Source\PSoC5/CapSense.c ****             }
1389:Generated_Source\PSoC5/CapSense.c ****             
1390:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1391:Generated_Source\PSoC5/CapSense.c ****         
1392:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1393:Generated_Source\PSoC5/CapSense.c ****     
1394:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1395:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 291              		.loc 1 1395 0
 292 0010 0F2C     		cmp	r4, #15
 293 0012 00D1     		bne	.L23
1396:Generated_Source\PSoC5/CapSense.c **** 	{
1397:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 294              		.loc 1 1397 0
 295 0014 0724     		movs	r4, #7
 296              	.LVL23:
 297              	.L23:
1398:Generated_Source\PSoC5/CapSense.c **** 	}
1399:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 298              		.loc 1 1399 0
 299 0016 0748     		ldr	r0, .L26
 300 0018 00EB8404 		add	r4, r0, r4, lsl #2
 301              	.LVL24:
 302 001c E26A     		ldr	r2, [r4, #44]
 303 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 304 0020 23EA0603 		bic	r3, r3, r6
 305 0024 1370     		strb	r3, [r2]
1400:Generated_Source\PSoC5/CapSense.c ****     
1401:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1402:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1403:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 306              		.loc 1 1403 0
 307 0026 00EB8500 		add	r0, r0, r5, lsl #2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 31


 308 002a 0369     		ldr	r3, [r0, #16]
 309 002c 0822     		movs	r2, #8
 310 002e 1A70     		strb	r2, [r3]
 311 0030 70BD     		pop	{r4, r5, r6, pc}
 312              	.LVL25:
 313              	.L27:
 314 0032 00BF     		.align	2
 315              	.L26:
 316 0034 00000000 		.word	.LANCHOR1
 317              		.cfi_endproc
 318              	.LFE12:
 319              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 320              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 321              		.align	2
 322              		.global	CapSense_ClearSensors
 323              		.thumb
 324              		.thumb_func
 325              		.type	CapSense_ClearSensors, %function
 326              	CapSense_ClearSensors:
 327              	.LFB10:
1114:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 328              		.loc 1 1114 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336              	.LVL26:
1117:Generated_Source\PSoC5/CapSense.c ****     {
 337              		.loc 1 1117 0
 338 0002 0024     		movs	r4, #0
 339 0004 04E0     		b	.L29
 340              	.LVL27:
 341              	.L30:
1119:Generated_Source\PSoC5/CapSense.c ****     }
 342              		.loc 1 1119 0 discriminator 3
 343 0006 2046     		mov	r0, r4
 344 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 345              	.LVL28:
1117:Generated_Source\PSoC5/CapSense.c ****     {
 346              		.loc 1 1117 0 discriminator 3
 347 000c 0134     		adds	r4, r4, #1
 348              	.LVL29:
 349 000e E4B2     		uxtb	r4, r4
 350              	.LVL30:
 351              	.L29:
1117:Generated_Source\PSoC5/CapSense.c ****     {
 352              		.loc 1 1117 0 is_stmt 0 discriminator 1
 353 0010 062C     		cmp	r4, #6
 354 0012 F8D9     		bls	.L30
1121:Generated_Source\PSoC5/CapSense.c **** 
 355              		.loc 1 1121 0 is_stmt 1
 356 0014 10BD     		pop	{r4, pc}
 357              		.cfi_endproc
 358              	.LFE10:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 32


 359              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 360 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 361              		.align	2
 362              		.global	CapSense_Stop
 363              		.thumb
 364              		.thumb_func
 365              		.type	CapSense_Stop, %function
 366              	CapSense_Stop:
 367              	.LFB3:
 534:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 368              		.loc 1 534 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
 375              		.cfi_offset 14, -4
 536:Generated_Source\PSoC5/CapSense.c ****     
 376              		.loc 1 536 0
 377 0002 1B4C     		ldr	r4, .L34
 378 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 379 0006 03F0FD03 		and	r3, r3, #253
 380 000a 2370     		strb	r3, [r4]
 539:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 381              		.loc 1 539 0
 382 000c 1022     		movs	r2, #16
 383 000e 194B     		ldr	r3, .L34+4
 384 0010 1A60     		str	r2, [r3]
 545:Generated_Source\PSoC5/CapSense.c ****     
 385              		.loc 1 545 0
 386 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 387              	.LVL31:
 551:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 388              		.loc 1 551 0
 389 0016 184A     		ldr	r2, .L34+8
 390 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 391 001a 03F0FE03 		and	r3, r3, #254
 392 001e 1370     		strb	r3, [r2]
 552:Generated_Source\PSoC5/CapSense.c ****         
 393              		.loc 1 552 0
 394 0020 1032     		adds	r2, r2, #16
 395 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 396 0024 03F0FE03 		and	r3, r3, #254
 397 0028 1370     		strb	r3, [r2]
 559:Generated_Source\PSoC5/CapSense.c ****     
 398              		.loc 1 559 0
 399 002a 02F50752 		add	r2, r2, #8640
 400 002e 2732     		adds	r2, r2, #39
 401 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 402 0032 03F0DF03 		and	r3, r3, #223
 403 0036 1370     		strb	r3, [r2]
 598:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 404              		.loc 1 598 0
 405 0038 FFF7FEFF 		bl	CapSense_IntClock_Stop
 406              	.LVL32:
 602:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 33


 407              		.loc 1 602 0
 408 003c FFF7FEFF 		bl	CapSense_CompCH0_Stop
 409              	.LVL33:
 604:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 410              		.loc 1 604 0
 411 0040 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 412              	.LVL34:
 626:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 413              		.loc 1 626 0
 414 0044 0D4A     		ldr	r2, .L34+12
 415 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 416 0048 03F0FE03 		and	r3, r3, #254
 417 004c 1370     		strb	r3, [r2]
 627:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 418              		.loc 1 627 0
 419 004e A2F5A652 		sub	r2, r2, #5312
 420 0052 053A     		subs	r2, r2, #5
 421 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 422 0056 03F0EF03 		and	r3, r3, #239
 423 005a 1370     		strb	r3, [r2]
 628:Generated_Source\PSoC5/CapSense.c ****         
 424              		.loc 1 628 0
 425 005c 1032     		adds	r2, r2, #16
 426 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 427 0060 03F0EF03 		and	r3, r3, #239
 428 0064 1370     		strb	r3, [r2]
 638:Generated_Source\PSoC5/CapSense.c **** }
 429              		.loc 1 638 0
 430 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 431 0068 03F07F03 		and	r3, r3, #127
 432 006c 2370     		strb	r3, [r4]
 433 006e 10BD     		pop	{r4, pc}
 434              	.L35:
 435              		.align	2
 436              	.L34:
 437 0070 79640040 		.word	1073767545
 438 0074 80E100E0 		.word	-536813184
 439 0078 A3430040 		.word	1073759139
 440 007c 70580040 		.word	1073764464
 441              		.cfi_endproc
 442              	.LFE3:
 443              		.size	CapSense_Stop, .-CapSense_Stop
 444              		.section	.text.CapSense_PostScan,"ax",%progbits
 445              		.align	2
 446              		.global	CapSense_PostScan
 447              		.thumb
 448              		.thumb_func
 449              		.type	CapSense_PostScan, %function
 450              	CapSense_PostScan:
 451              	.LFB14:
1404:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1405:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1406:Generated_Source\PSoC5/CapSense.c ****     #else
1407:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1408:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1409:Generated_Source\PSoC5/CapSense.c **** }
1410:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 34


1411:Generated_Source\PSoC5/CapSense.c **** 
1412:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1413:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1414:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1415:Generated_Source\PSoC5/CapSense.c **** *
1416:Generated_Source\PSoC5/CapSense.c **** * Summary:
1417:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1418:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1419:Generated_Source\PSoC5/CapSense.c **** *
1420:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1421:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1422:Generated_Source\PSoC5/CapSense.c **** *
1423:Generated_Source\PSoC5/CapSense.c **** * Return:
1424:Generated_Source\PSoC5/CapSense.c **** *  None
1425:Generated_Source\PSoC5/CapSense.c **** *
1426:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1427:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1428:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1429:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1430:Generated_Source\PSoC5/CapSense.c **** *
1431:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1432:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1433:Generated_Source\PSoC5/CapSense.c **** {
1434:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1435:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1436:Generated_Source\PSoC5/CapSense.c ****     
1437:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1438:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1439:Generated_Source\PSoC5/CapSense.c **** 
1440:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1441:Generated_Source\PSoC5/CapSense.c ****     
1442:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1443:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1444:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1445:Generated_Source\PSoC5/CapSense.c **** 
1446:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1447:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1448:Generated_Source\PSoC5/CapSense.c ****         
1449:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1450:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1451:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1452:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1453:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1454:Generated_Source\PSoC5/CapSense.c ****             #else
1455:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1456:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1457:Generated_Source\PSoC5/CapSense.c **** 
1458:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1459:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1460:Generated_Source\PSoC5/CapSense.c ****             
1461:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1462:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1463:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1464:Generated_Source\PSoC5/CapSense.c ****             
1465:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1466:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1467:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 35


1468:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1469:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1470:Generated_Source\PSoC5/CapSense.c ****             
1471:Generated_Source\PSoC5/CapSense.c ****         #else
1472:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1473:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1474:Generated_Source\PSoC5/CapSense.c ****             
1475:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1476:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1477:Generated_Source\PSoC5/CapSense.c ****              
1478:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1479:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1480:Generated_Source\PSoC5/CapSense.c ****         
1481:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1482:Generated_Source\PSoC5/CapSense.c ****         
1483:Generated_Source\PSoC5/CapSense.c ****     #else
1484:Generated_Source\PSoC5/CapSense.c **** 
1485:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1486:Generated_Source\PSoC5/CapSense.c ****         {
1487:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1488:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1489:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1490:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1491:Generated_Source\PSoC5/CapSense.c ****                 #else
1492:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1493:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1494:Generated_Source\PSoC5/CapSense.c ****                 
1495:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1496:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1497:Generated_Source\PSoC5/CapSense.c ****                 
1498:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1499:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1500:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1501:Generated_Source\PSoC5/CapSense.c ****                 
1502:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1503:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1504:Generated_Source\PSoC5/CapSense.c ****                     
1505:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1506:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1507:Generated_Source\PSoC5/CapSense.c ****                 
1508:Generated_Source\PSoC5/CapSense.c ****             #else
1509:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1510:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1511:Generated_Source\PSoC5/CapSense.c ****                 
1512:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1513:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1514:Generated_Source\PSoC5/CapSense.c ****                     
1515:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1516:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1517:Generated_Source\PSoC5/CapSense.c ****             
1518:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1519:Generated_Source\PSoC5/CapSense.c ****             
1520:Generated_Source\PSoC5/CapSense.c ****         }
1521:Generated_Source\PSoC5/CapSense.c ****         
1522:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1523:Generated_Source\PSoC5/CapSense.c ****         {
1524:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 36


1525:Generated_Source\PSoC5/CapSense.c ****             
1526:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1527:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1528:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1529:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1530:Generated_Source\PSoC5/CapSense.c ****                 #else 
1531:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1532:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1533:Generated_Source\PSoC5/CapSense.c ****                 
1534:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1535:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1536:Generated_Source\PSoC5/CapSense.c ****                 
1537:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1538:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1539:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1540:Generated_Source\PSoC5/CapSense.c ****                 
1541:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1542:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1543:Generated_Source\PSoC5/CapSense.c ****                     
1544:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1545:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1546:Generated_Source\PSoC5/CapSense.c ****                 
1547:Generated_Source\PSoC5/CapSense.c ****             #else
1548:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1549:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1550:Generated_Source\PSoC5/CapSense.c ****                 
1551:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1552:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1553:Generated_Source\PSoC5/CapSense.c ****                 
1554:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1555:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1556:Generated_Source\PSoC5/CapSense.c ****             
1557:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1558:Generated_Source\PSoC5/CapSense.c ****         }
1559:Generated_Source\PSoC5/CapSense.c ****     
1560:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1561:Generated_Source\PSoC5/CapSense.c ****     
1562:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1563:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1564:Generated_Source\PSoC5/CapSense.c ****     
1565:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1566:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1567:Generated_Source\PSoC5/CapSense.c **** 
1568:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1569:Generated_Source\PSoC5/CapSense.c **** 
1570:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1571:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1572:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1573:Generated_Source\PSoC5/CapSense.c **** }
1574:Generated_Source\PSoC5/CapSense.c **** 
1575:Generated_Source\PSoC5/CapSense.c **** 
1576:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1577:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1578:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1579:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1580:Generated_Source\PSoC5/CapSense.c ****     *
1581:Generated_Source\PSoC5/CapSense.c ****     * Summary:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 37


1582:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1583:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1584:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1585:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1586:Generated_Source\PSoC5/CapSense.c ****     *
1587:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1588:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1589:Generated_Source\PSoC5/CapSense.c ****     *
1590:Generated_Source\PSoC5/CapSense.c ****     * Return:
1591:Generated_Source\PSoC5/CapSense.c ****     *  None
1592:Generated_Source\PSoC5/CapSense.c ****     *
1593:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1594:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1595:Generated_Source\PSoC5/CapSense.c ****     *
1596:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1597:Generated_Source\PSoC5/CapSense.c ****     *  No
1598:Generated_Source\PSoC5/CapSense.c ****     *
1599:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1600:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1601:Generated_Source\PSoC5/CapSense.c ****     {
 452              		.loc 1 1601 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              	.LVL35:
 457 0000 10B5     		push	{r4, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 4, -8
 460              		.cfi_offset 14, -4
1602:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1603:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 461              		.loc 1 1603 0
 462 0002 0E4A     		ldr	r2, .L38
 463 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 464 0006 03F0FC03 		and	r3, r3, #252
 465 000a 1370     		strb	r3, [r2]
1604:Generated_Source\PSoC5/CapSense.c ****         
1605:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1606:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1607:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1608:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1609:Generated_Source\PSoC5/CapSense.c ****         #else
1610:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 466              		.loc 1 1610 0
 467 000c 0C4B     		ldr	r3, .L38+4
 468 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 0010 1B02     		lsls	r3, r3, #8
 470 0012 0C49     		ldr	r1, .L38+8
 471 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1611:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 472              		.loc 1 1611 0
 473 0018 6E3A     		subs	r2, r2, #110
 474 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 475 001c 1343     		orrs	r3, r3, r2
1612:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 476              		.loc 1 1612 0
 477 001e DB43     		mvns	r3, r3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 38


 478 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1613:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1614:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1615:Generated_Source\PSoC5/CapSense.c ****         
1616:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1617:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 479              		.loc 1 1617 0
 480 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 481              	.LVL36:
1618:Generated_Source\PSoC5/CapSense.c ****         
1619:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1620:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1621:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 482              		.loc 1 1621 0
 483 0028 0020     		movs	r0, #0
 484 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 485              	.LVL37:
1622:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1623:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1624:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1625:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1626:Generated_Source\PSoC5/CapSense.c ****         #else
1627:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1628:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1629:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1630:Generated_Source\PSoC5/CapSense.c ****             
1631:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1632:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1633:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1634:Generated_Source\PSoC5/CapSense.c ****         #else
1635:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 486              		.loc 1 1635 0
 487 002e 064A     		ldr	r2, .L38+12
 488 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 489 0032 43F00103 		orr	r3, r3, #1
 490 0036 1370     		strb	r3, [r2]
 491 0038 10BD     		pop	{r4, pc}
 492              	.L39:
 493 003a 00BF     		.align	2
 494              	.L38:
 495 003c 79640040 		.word	1073767545
 496 0040 1B640040 		.word	1073767451
 497 0044 00000000 		.word	CapSense_sensorRaw
 498 0048 70580040 		.word	1073764464
 499              		.cfi_endproc
 500              	.LFE14:
 501              		.size	CapSense_PostScan, .-CapSense_PostScan
 502              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 503              		.align	2
 504              		.global	CapSense_SetPrescaler
 505              		.thumb
 506              		.thumb_func
 507              		.type	CapSense_SetPrescaler, %function
 508              	CapSense_SetPrescaler:
 509              	.LFB15:
1636:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1637:Generated_Source\PSoC5/CapSense.c ****     }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 39


1638:Generated_Source\PSoC5/CapSense.c ****     
1639:Generated_Source\PSoC5/CapSense.c **** #else
1640:Generated_Source\PSoC5/CapSense.c **** 
1641:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1642:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1643:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1644:Generated_Source\PSoC5/CapSense.c ****     *
1645:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1646:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1647:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1648:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1649:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1650:Generated_Source\PSoC5/CapSense.c ****     *
1651:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1652:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1653:Generated_Source\PSoC5/CapSense.c ****     *
1654:Generated_Source\PSoC5/CapSense.c ****     * Return:
1655:Generated_Source\PSoC5/CapSense.c ****     *  None
1656:Generated_Source\PSoC5/CapSense.c ****     *
1657:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1658:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1659:Generated_Source\PSoC5/CapSense.c ****     *
1660:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1661:Generated_Source\PSoC5/CapSense.c ****     *  No
1662:Generated_Source\PSoC5/CapSense.c ****     *
1663:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1664:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1665:Generated_Source\PSoC5/CapSense.c ****     {
1666:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1667:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1668:Generated_Source\PSoC5/CapSense.c ****         {
1669:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1670:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1671:Generated_Source\PSoC5/CapSense.c ****         }
1672:Generated_Source\PSoC5/CapSense.c ****         
1673:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1674:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1675:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1676:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1677:Generated_Source\PSoC5/CapSense.c ****         #else
1678:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1679:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1680:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1681:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1682:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1683:Generated_Source\PSoC5/CapSense.c ****         
1684:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1685:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1686:Generated_Source\PSoC5/CapSense.c ****         
1687:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1688:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1689:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1690:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1691:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1692:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1693:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1694:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 40


1695:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1696:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1697:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1698:Generated_Source\PSoC5/CapSense.c ****         
1699:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1700:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1701:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1702:Generated_Source\PSoC5/CapSense.c ****         #else
1703:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1704:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1705:Generated_Source\PSoC5/CapSense.c ****     }
1706:Generated_Source\PSoC5/CapSense.c ****     
1707:Generated_Source\PSoC5/CapSense.c ****     
1708:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1709:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1710:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1711:Generated_Source\PSoC5/CapSense.c ****     *
1712:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1713:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1714:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1715:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1716:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1717:Generated_Source\PSoC5/CapSense.c ****     *
1718:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1719:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1720:Generated_Source\PSoC5/CapSense.c ****     *
1721:Generated_Source\PSoC5/CapSense.c ****     * Return:
1722:Generated_Source\PSoC5/CapSense.c ****     *  None
1723:Generated_Source\PSoC5/CapSense.c ****     *
1724:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1725:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1726:Generated_Source\PSoC5/CapSense.c ****     *
1727:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1728:Generated_Source\PSoC5/CapSense.c ****     *  No
1729:Generated_Source\PSoC5/CapSense.c ****     *
1730:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1731:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1732:Generated_Source\PSoC5/CapSense.c ****     {
1733:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1734:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1735:Generated_Source\PSoC5/CapSense.c ****         {
1736:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1737:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1738:Generated_Source\PSoC5/CapSense.c ****         }
1739:Generated_Source\PSoC5/CapSense.c ****         
1740:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1741:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1742:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1743:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1744:Generated_Source\PSoC5/CapSense.c ****         #else
1745:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1746:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1747:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1748:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1749:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1750:Generated_Source\PSoC5/CapSense.c ****         
1751:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 41


1752:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1753:Generated_Source\PSoC5/CapSense.c ****         
1754:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1755:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1756:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1757:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1758:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1759:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1760:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1761:Generated_Source\PSoC5/CapSense.c ****         #else
1762:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1763:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1764:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1765:Generated_Source\PSoC5/CapSense.c **** 
1766:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1767:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1768:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1769:Generated_Source\PSoC5/CapSense.c ****         #else
1770:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1771:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1772:Generated_Source\PSoC5/CapSense.c ****     }
1773:Generated_Source\PSoC5/CapSense.c ****     
1774:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1775:Generated_Source\PSoC5/CapSense.c **** 
1776:Generated_Source\PSoC5/CapSense.c **** 
1777:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1778:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1779:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1780:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1781:Generated_Source\PSoC5/CapSense.c ****     *
1782:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1783:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1784:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1785:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1786:Generated_Source\PSoC5/CapSense.c ****     *
1787:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1788:Generated_Source\PSoC5/CapSense.c ****     *  None
1789:Generated_Source\PSoC5/CapSense.c ****     *
1790:Generated_Source\PSoC5/CapSense.c ****     * Return:
1791:Generated_Source\PSoC5/CapSense.c ****     *  None
1792:Generated_Source\PSoC5/CapSense.c ****     *
1793:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1794:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1795:Generated_Source\PSoC5/CapSense.c ****     {
1796:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1797:Generated_Source\PSoC5/CapSense.c ****         
1798:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1799:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1800:Generated_Source\PSoC5/CapSense.c ****         {
1801:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1802:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1803:Generated_Source\PSoC5/CapSense.c ****         }
1804:Generated_Source\PSoC5/CapSense.c ****     }
1805:Generated_Source\PSoC5/CapSense.c ****     
1806:Generated_Source\PSoC5/CapSense.c ****     
1807:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1808:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 42


1809:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1810:Generated_Source\PSoC5/CapSense.c ****     *
1811:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1812:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1813:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1814:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1815:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1816:Generated_Source\PSoC5/CapSense.c ****     * 
1817:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1818:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1819:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1820:Generated_Source\PSoC5/CapSense.c ****     *
1821:Generated_Source\PSoC5/CapSense.c ****     * Return:
1822:Generated_Source\PSoC5/CapSense.c ****     *  None
1823:Generated_Source\PSoC5/CapSense.c ****     *
1824:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1825:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1826:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1827:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1828:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1829:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1830:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1831:Generated_Source\PSoC5/CapSense.c ****     *
1832:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1833:Generated_Source\PSoC5/CapSense.c ****     *  No
1834:Generated_Source\PSoC5/CapSense.c ****     *
1835:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1836:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1837:Generated_Source\PSoC5/CapSense.c ****     {
1838:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1839:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1840:Generated_Source\PSoC5/CapSense.c ****             
1841:Generated_Source\PSoC5/CapSense.c ****         #else
1842:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1843:Generated_Source\PSoC5/CapSense.c ****             {
1844:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1845:Generated_Source\PSoC5/CapSense.c ****             }
1846:Generated_Source\PSoC5/CapSense.c ****             else
1847:Generated_Source\PSoC5/CapSense.c ****             {
1848:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1849:Generated_Source\PSoC5/CapSense.c ****             }
1850:Generated_Source\PSoC5/CapSense.c ****     
1851:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1852:Generated_Source\PSoC5/CapSense.c ****     }
1853:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1854:Generated_Source\PSoC5/CapSense.c **** 
1855:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1856:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1857:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1858:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1859:Generated_Source\PSoC5/CapSense.c ****     *
1860:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1861:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1862:Generated_Source\PSoC5/CapSense.c ****     *
1863:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1864:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1865:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 43


1866:Generated_Source\PSoC5/CapSense.c ****     * Return:
1867:Generated_Source\PSoC5/CapSense.c ****     *  None
1868:Generated_Source\PSoC5/CapSense.c ****     *
1869:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1870:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1871:Generated_Source\PSoC5/CapSense.c ****     {
 510              		.loc 1 1871 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515              	.LVL38:
1872:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1873:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1874:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
1875:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
1876:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1877:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
 516              		.loc 1 1877 0
 517 0000 82B2     		uxth	r2, r0
 518 0002 034B     		ldr	r3, .L41
 519 0004 1A80     		strh	r2, [r3]	@ movhi
1878:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
 520              		.loc 1 1878 0
 521 0006 4008     		lsrs	r0, r0, #1
 522              	.LVL39:
 523 0008 0233     		adds	r3, r3, #2
 524 000a 1880     		strh	r0, [r3]	@ movhi
 525 000c 7047     		bx	lr
 526              	.L42:
 527 000e 00BF     		.align	2
 528              	.L41:
 529 0010 044F0040 		.word	1073762052
 530              		.cfi_endproc
 531              	.LFE15:
 532              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 533              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 534              		.align	2
 535              		.global	CapSense_SetScanSlotSettings
 536              		.thumb
 537              		.thumb_func
 538              		.type	CapSense_SetScanSlotSettings, %function
 539              	CapSense_SetScanSlotSettings:
 540              	.LFB5:
 826:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 541              		.loc 1 826 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL40:
 546 0000 70B5     		push	{r4, r5, r6, lr}
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 4, -16
 549              		.cfi_offset 5, -12
 550              		.cfi_offset 6, -8
 551              		.cfi_offset 14, -4
 552 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 44


 831:Generated_Source\PSoC5/CapSense.c ****         
 553              		.loc 1 831 0
 554 0004 084B     		ldr	r3, .L45
 555 0006 0344     		add	r3, r3, r0
 556 0008 93F84C50 		ldrb	r5, [r3, #76]	@ zero_extendqisi2
 557              	.LVL41:
 835:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 558              		.loc 1 835 0
 559 000c 074E     		ldr	r6, .L45+4
 560 000e 3318     		adds	r3, r6, r0
 561 0010 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 562              	.LVL42:
 563 0012 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 564              	.LVL43:
 843:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 565              		.loc 1 843 0
 566 0016 3544     		add	r5, r5, r6
 567              	.LVL44:
 568 0018 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 569 001a 054B     		ldr	r3, .L45+8
 570 001c 1A70     		strb	r2, [r3]
 848:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 571              		.loc 1 848 0
 572 001e 054B     		ldr	r3, .L45+12
 573 0020 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 574 0022 FFF7FEFF 		bl	CapSense_SetPrescaler
 575              	.LVL45:
 576 0026 70BD     		pop	{r4, r5, r6, pc}
 577              	.LVL46:
 578              	.L46:
 579              		.align	2
 580              	.L45:
 581 0028 00000000 		.word	.LANCHOR1
 582 002c 00000000 		.word	.LANCHOR0
 583 0030 5A640040 		.word	1073767514
 584 0034 00000000 		.word	CapSense_analogSwitchDivider
 585              		.cfi_endproc
 586              	.LFE5:
 587              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 588              		.section	.text.CapSense_PreScan,"ax",%progbits
 589              		.align	2
 590              		.global	CapSense_PreScan
 591              		.thumb
 592              		.thumb_func
 593              		.type	CapSense_PreScan, %function
 594              	CapSense_PreScan:
 595              	.LFB13:
1433:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 596              		.loc 1 1433 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL47:
 601 0000 38B5     		push	{r3, r4, r5, lr}
 602              		.cfi_def_cfa_offset 16
 603              		.cfi_offset 3, -16
 604              		.cfi_offset 4, -12
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 45


 605              		.cfi_offset 5, -8
 606              		.cfi_offset 14, -4
 607 0002 0546     		mov	r5, r0
1435:Generated_Source\PSoC5/CapSense.c ****     
 608              		.loc 1 1435 0
 609 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 610              	.LVL48:
1447:Generated_Source\PSoC5/CapSense.c ****         
 611              		.loc 1 1447 0
 612 0008 084C     		ldr	r4, .L49
 613 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 614 000c 43F00103 		orr	r3, r3, #1
 615 0010 2370     		strb	r3, [r4]
1455:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 616              		.loc 1 1455 0
 617 0012 074A     		ldr	r2, .L49+4
 618 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 619 0016 03F0FE03 		and	r3, r3, #254
 620 001a 1370     		strb	r3, [r2]
1459:Generated_Source\PSoC5/CapSense.c ****             
 621              		.loc 1 1459 0
 622 001c 2846     		mov	r0, r5
 623 001e FFF7FEFF 		bl	CapSense_EnableSensor
 624              	.LVL49:
1563:Generated_Source\PSoC5/CapSense.c ****     
 625              		.loc 1 1563 0
 626 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 627 0024 43F00203 		orr	r3, r3, #2
 628 0028 2370     		strb	r3, [r4]
 629 002a 38BD     		pop	{r3, r4, r5, pc}
 630              	.L50:
 631              		.align	2
 632              	.L49:
 633 002c 79640040 		.word	1073767545
 634 0030 70580040 		.word	1073764464
 635              		.cfi_endproc
 636              	.LFE13:
 637              		.size	CapSense_PreScan, .-CapSense_PreScan
 638              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 639              		.align	2
 640              		.global	CapSense_ScanSensor
 641              		.thumb
 642              		.thumb_func
 643              		.type	CapSense_ScanSensor, %function
 644              	CapSense_ScanSensor:
 645              	.LFB6:
 938:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 646              		.loc 1 938 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL50:
 651 0000 08B5     		push	{r3, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 3, -8
 654              		.cfi_offset 14, -4
 940:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 46


 655              		.loc 1 940 0
 656 0002 054B     		ldr	r3, .L53
 657 0004 0022     		movs	r2, #0
 658 0006 1A70     		strb	r2, [r3]
 941:Generated_Source\PSoC5/CapSense.c ****     
 659              		.loc 1 941 0
 660 0008 044A     		ldr	r2, .L53+4
 661 000a 1070     		strb	r0, [r2]
 945:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 662              		.loc 1 945 0
 663 000c 8122     		movs	r2, #129
 664 000e 1A70     		strb	r2, [r3]
 946:Generated_Source\PSoC5/CapSense.c ****         
 665              		.loc 1 946 0
 666 0010 FFF7FEFF 		bl	CapSense_PreScan
 667              	.LVL51:
 668 0014 08BD     		pop	{r3, pc}
 669              	.L54:
 670 0016 00BF     		.align	2
 671              	.L53:
 672 0018 00000000 		.word	CapSense_csv
 673 001c 00000000 		.word	CapSense_sensorIndex
 674              		.cfi_endproc
 675              	.LFE6:
 676              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 677              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 678              		.align	2
 679              		.global	CapSense_ScanEnabledWidgets
 680              		.thumb
 681              		.thumb_func
 682              		.type	CapSense_ScanEnabledWidgets, %function
 683              	CapSense_ScanEnabledWidgets:
 684              	.LFB7:
1015:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 685              		.loc 1 1015 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 10B5     		push	{r4, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 4, -8
 692              		.cfi_offset 14, -4
1017:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 693              		.loc 1 1017 0
 694 0002 0022     		movs	r2, #0
 695 0004 0A4B     		ldr	r3, .L58
 696 0006 1A70     		strb	r2, [r3]
1018:Generated_Source\PSoC5/CapSense.c ****     
 697              		.loc 1 1018 0
 698 0008 0A4C     		ldr	r4, .L58+4
 699 000a FF23     		movs	r3, #255
 700 000c 2370     		strb	r3, [r4]
1022:Generated_Source\PSoC5/CapSense.c **** 
 701              		.loc 1 1022 0
 702 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 703 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 704              	.LVL52:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 47


 705 0014 2070     		strb	r0, [r4]
1025:Generated_Source\PSoC5/CapSense.c ****         {
 706              		.loc 1 1025 0
 707 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 708 0018 DBB2     		uxtb	r3, r3
 709 001a 062B     		cmp	r3, #6
 710 001c 07D8     		bhi	.L55
1027:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 711              		.loc 1 1027 0
 712 001e 044A     		ldr	r2, .L58
 713 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 714 0022 43F00103 		orr	r3, r3, #1
 715 0026 1370     		strb	r3, [r2]
1028:Generated_Source\PSoC5/CapSense.c ****         }
 716              		.loc 1 1028 0
 717 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 718 002a FFF7FEFF 		bl	CapSense_PreScan
 719              	.LVL53:
 720              	.L55:
 721 002e 10BD     		pop	{r4, pc}
 722              	.L59:
 723              		.align	2
 724              	.L58:
 725 0030 00000000 		.word	CapSense_csv
 726 0034 00000000 		.word	CapSense_sensorIndex
 727              		.cfi_endproc
 728              	.LFE7:
 729              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 730              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 731              		.align	2
 732              		.global	CapSense_GetPrescaler
 733              		.thumb
 734              		.thumb_func
 735              		.type	CapSense_GetPrescaler, %function
 736              	CapSense_GetPrescaler:
 737              	.LFB16:
1879:Generated_Source\PSoC5/CapSense.c ****         #else
1880:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1881:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1882:Generated_Source\PSoC5/CapSense.c ****     }
1883:Generated_Source\PSoC5/CapSense.c **** 
1884:Generated_Source\PSoC5/CapSense.c **** 
1885:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1886:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1887:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1888:Generated_Source\PSoC5/CapSense.c ****     *
1889:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1890:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1891:Generated_Source\PSoC5/CapSense.c ****     *
1892:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1893:Generated_Source\PSoC5/CapSense.c ****     *  None
1894:Generated_Source\PSoC5/CapSense.c ****     *
1895:Generated_Source\PSoC5/CapSense.c ****     * Return:
1896:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1897:Generated_Source\PSoC5/CapSense.c ****     *
1898:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1899:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 48


1900:Generated_Source\PSoC5/CapSense.c ****     {
 738              		.loc 1 1900 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL54:
1901:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1902:Generated_Source\PSoC5/CapSense.c **** 
1903:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1904:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1905:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
1906:Generated_Source\PSoC5/CapSense.c ****             
1907:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1908:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
 744              		.loc 1 1908 0
 745 0000 014B     		ldr	r3, .L61
 746 0002 1888     		ldrh	r0, [r3]
 747              	.LVL55:
1909:Generated_Source\PSoC5/CapSense.c ****             
1910:Generated_Source\PSoC5/CapSense.c ****         #else
1911:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1912:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1913:Generated_Source\PSoC5/CapSense.c ****         
1914:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1915:Generated_Source\PSoC5/CapSense.c ****     }
 748              		.loc 1 1915 0
 749 0004 C0B2     		uxtb	r0, r0
 750 0006 7047     		bx	lr
 751              	.L62:
 752              		.align	2
 753              	.L61:
 754 0008 044F0040 		.word	1073762052
 755              		.cfi_endproc
 756              	.LFE16:
 757              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 758              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 759              		.align	2
 760              		.global	CapSense_SetScanSpeed
 761              		.thumb
 762              		.thumb_func
 763              		.type	CapSense_SetScanSpeed, %function
 764              	CapSense_SetScanSpeed:
 765              	.LFB17:
1916:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1917:Generated_Source\PSoC5/CapSense.c **** 
1918:Generated_Source\PSoC5/CapSense.c **** 
1919:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1920:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1921:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1922:Generated_Source\PSoC5/CapSense.c **** *
1923:Generated_Source\PSoC5/CapSense.c **** * Summary:
1924:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1925:Generated_Source\PSoC5/CapSense.c **** *
1926:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1927:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1928:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 49


1929:Generated_Source\PSoC5/CapSense.c **** * Return:
1930:Generated_Source\PSoC5/CapSense.c **** *  None
1931:Generated_Source\PSoC5/CapSense.c **** *
1932:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1933:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1934:Generated_Source\PSoC5/CapSense.c **** {
 766              		.loc 1 1934 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL56:
1935:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 772              		.loc 1 1935 0
 773 0000 014B     		ldr	r3, .L64
 774 0002 1870     		strb	r0, [r3]
 775 0004 7047     		bx	lr
 776              	.L65:
 777 0006 00BF     		.align	2
 778              	.L64:
 779 0008 8A650040 		.word	1073767818
 780              		.cfi_endproc
 781              	.LFE17:
 782              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 783              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 784              		.align	2
 785              		.global	CapSense_SetAnalogSwitchesSource
 786              		.thumb
 787              		.thumb_func
 788              		.type	CapSense_SetAnalogSwitchesSource, %function
 789              	CapSense_SetAnalogSwitchesSource:
 790              	.LFB18:
1936:Generated_Source\PSoC5/CapSense.c **** }
1937:Generated_Source\PSoC5/CapSense.c **** 
1938:Generated_Source\PSoC5/CapSense.c **** 
1939:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1940:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1941:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1942:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1943:Generated_Source\PSoC5/CapSense.c ****     *
1944:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1945:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1946:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1947:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1948:Generated_Source\PSoC5/CapSense.c ****     *
1949:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1950:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1951:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1952:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1953:Generated_Source\PSoC5/CapSense.c ****     *
1954:Generated_Source\PSoC5/CapSense.c ****     * Return:
1955:Generated_Source\PSoC5/CapSense.c ****     *  None
1956:Generated_Source\PSoC5/CapSense.c ****     *
1957:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1958:Generated_Source\PSoC5/CapSense.c ****     *  No
1959:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1960:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 50


1961:Generated_Source\PSoC5/CapSense.c ****                       
1962:Generated_Source\PSoC5/CapSense.c ****     {
 791              		.loc 1 1962 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              	.LVL57:
1963:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 797              		.loc 1 1963 0
 798 0000 0128     		cmp	r0, #1
 799 0002 05D1     		bne	.L67
1964:Generated_Source\PSoC5/CapSense.c ****         {
1965:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 800              		.loc 1 1965 0
 801 0004 054A     		ldr	r2, .L69
 802 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 803 0008 03F0EF03 		and	r3, r3, #239
 804 000c 1370     		strb	r3, [r2]
 805 000e 7047     		bx	lr
 806              	.L67:
1966:Generated_Source\PSoC5/CapSense.c ****         }
1967:Generated_Source\PSoC5/CapSense.c ****         else
1968:Generated_Source\PSoC5/CapSense.c ****         {
1969:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 807              		.loc 1 1969 0
 808 0010 024A     		ldr	r2, .L69
 809 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 810 0014 43F01003 		orr	r3, r3, #16
 811 0018 1370     		strb	r3, [r2]
 812 001a 7047     		bx	lr
 813              	.L70:
 814              		.align	2
 815              	.L69:
 816 001c 79640040 		.word	1073767545
 817              		.cfi_endproc
 818              	.LFE18:
 819              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 820              		.section	.text.CapSense_Init,"ax",%progbits
 821              		.align	2
 822              		.global	CapSense_Init
 823              		.thumb
 824              		.thumb_func
 825              		.type	CapSense_Init, %function
 826              	CapSense_Init:
 827              	.LFB0:
 119:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 828              		.loc 1 119 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832 0000 38B5     		push	{r3, r4, r5, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 3, -16
 835              		.cfi_offset 4, -12
 836              		.cfi_offset 5, -8
 837              		.cfi_offset 14, -4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 51


 133:Generated_Source\PSoC5/CapSense.c **** 
 838              		.loc 1 133 0
 839 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 840              	.LVL58:
 139:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 841              		.loc 1 139 0
 842 0006 0322     		movs	r2, #3
 843 0008 344B     		ldr	r3, .L73
 844 000a 1A70     		strb	r2, [r3]
 142:Generated_Source\PSoC5/CapSense.c ****     #else
 845              		.loc 1 142 0
 846 000c 344A     		ldr	r2, .L73+4
 847 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 848 0010 43F02003 		orr	r3, r3, #32
 849 0014 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 850              		.loc 1 149 0
 851 0016 0220     		movs	r0, #2
 852 0018 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 853              	.LVL59:
 165:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 854              		.loc 1 165 0
 855 001c FFF7FEFF 		bl	CyEnterCriticalSection
 856              	.LVL60:
 166:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 857              		.loc 1 166 0
 858 0020 304A     		ldr	r2, .L73+8
 859 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 860 0024 43F00303 		orr	r3, r3, #3
 861 0028 1370     		strb	r3, [r2]
 167:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 862              		.loc 1 167 0
 863 002a 0132     		adds	r2, r2, #1
 864 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 865 002e 43F00303 		orr	r3, r3, #3
 866 0032 1370     		strb	r3, [r2]
 168:Generated_Source\PSoC5/CapSense.c ****         
 867              		.loc 1 168 0
 868 0034 FFF7FEFF 		bl	CyExitCriticalSection
 869              	.LVL61:
 171:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 870              		.loc 1 171 0
 871 0038 4FF43442 		mov	r2, #46080
 872 003c 2A4B     		ldr	r3, .L73+12
 873 003e 1A80     		strh	r2, [r3]	@ movhi
 173:Generated_Source\PSoC5/CapSense.c ****                 
 874              		.loc 1 173 0
 875 0040 4FF6FF75 		movw	r5, #65535
 876 0044 2033     		adds	r3, r3, #32
 877 0046 1D80     		strh	r5, [r3]	@ movhi
 193:Generated_Source\PSoC5/CapSense.c ****     
 878              		.loc 1 193 0
 879 0048 0724     		movs	r4, #7
 880 004a 4033     		adds	r3, r3, #64
 881 004c 1C70     		strb	r4, [r3]
 209:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 882              		.loc 1 209 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 52


 883 004e FFF7FEFF 		bl	CyEnterCriticalSection
 884              	.LVL62:
 210:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 885              		.loc 1 210 0
 886 0052 264A     		ldr	r2, .L73+16
 887 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 888 0056 43F00303 		orr	r3, r3, #3
 889 005a 1370     		strb	r3, [r2]
 211:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 890              		.loc 1 211 0
 891 005c 0132     		adds	r2, r2, #1
 892 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 893 0060 43F00303 		orr	r3, r3, #3
 894 0064 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/CapSense.c ****         
 895              		.loc 1 212 0
 896 0066 FFF7FEFF 		bl	CyExitCriticalSection
 897              	.LVL63:
 215:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 898              		.loc 1 215 0
 899 006a FF23     		movs	r3, #255
 900 006c 204A     		ldr	r2, .L73+20
 901 006e 1570     		strb	r5, [r2]
 216:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 902              		.loc 1 216 0
 903 0070 2032     		adds	r2, r2, #32
 904 0072 1370     		strb	r3, [r2]
 217:Generated_Source\PSoC5/CapSense.c ****         
 905              		.loc 1 217 0
 906 0074 403A     		subs	r2, r2, #64
 907 0076 1370     		strb	r3, [r2]
 220:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 908              		.loc 1 220 0
 909 0078 2132     		adds	r2, r2, #33
 910 007a 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 911              		.loc 1 221 0
 912 007c 3032     		adds	r2, r2, #48
 913 007e 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/CapSense.c ****         
 914              		.loc 1 222 0
 915 0080 103A     		subs	r2, r2, #16
 916 0082 1370     		strb	r3, [r2]
 261:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 917              		.loc 1 261 0
 918 0084 1022     		movs	r2, #16
 919 0086 03F1E023 		add	r3, r3, #-536813568
 920 008a 8133     		adds	r3, r3, #129
 921 008c 1A60     		str	r2, [r3]
 262:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 922              		.loc 1 262 0
 923 008e 1949     		ldr	r1, .L73+24
 924 0090 0420     		movs	r0, #4
 925 0092 FFF7FEFF 		bl	CyIntSetVector
 926              	.LVL64:
 263:Generated_Source\PSoC5/CapSense.c ****     
 927              		.loc 1 263 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 53


 928 0096 2146     		mov	r1, r4
 929 0098 0420     		movs	r0, #4
 930 009a FFF7FEFF 		bl	CyIntSetPriority
 931              	.LVL65:
 272:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 932              		.loc 1 272 0
 933 009e FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 934              	.LVL66:
 273:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 935              		.loc 1 273 0
 936 00a2 2046     		mov	r0, r4
 937 00a4 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 938              	.LVL67:
 274:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 939              		.loc 1 274 0
 940 00a8 0820     		movs	r0, #8
 941 00aa FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 942              	.LVL68:
 276:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 943              		.loc 1 276 0
 944 00ae 0920     		movs	r0, #9
 945 00b0 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 946              	.LVL69:
 294:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 947              		.loc 1 294 0
 948 00b4 104A     		ldr	r2, .L73+28
 949 00b6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 950 00b8 43F00403 		orr	r3, r3, #4
 951 00bc 1370     		strb	r3, [r2]
 300:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 952              		.loc 1 300 0
 953 00be FFF7FEFF 		bl	CapSense_CompCH0_Init
 954              	.LVL70:
 302:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 955              		.loc 1 302 0
 956 00c2 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 957              	.LVL71:
 303:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 958              		.loc 1 303 0
 959 00c6 0020     		movs	r0, #0
 960 00c8 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 961              	.LVL72:
 304:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 962              		.loc 1 304 0
 963 00cc 0420     		movs	r0, #4
 964 00ce FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 965              	.LVL73:
 305:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 966              		.loc 1 305 0
 967 00d2 0020     		movs	r0, #0
 968 00d4 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 969              	.LVL74:
 970 00d8 38BD     		pop	{r3, r4, r5, pc}
 971              	.L74:
 972 00da 00BF     		.align	2
 973              	.L73:
 974 00dc 004F0040 		.word	1073762048
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 54


 975 00e0 024F0040 		.word	1073762050
 976 00e4 9A650040 		.word	1073767834
 977 00e8 2A650040 		.word	1073767722
 978 00ec 9A640040 		.word	1073767578
 979 00f0 2A640040 		.word	1073767466
 980 00f4 00000000 		.word	CapSense_IsrCH0_ISR
 981 00f8 79640040 		.word	1073767545
 982              		.cfi_endproc
 983              	.LFE0:
 984              		.size	CapSense_Init, .-CapSense_Init
 985              		.section	.text.CapSense_Start,"ax",%progbits
 986              		.align	2
 987              		.global	CapSense_Start
 988              		.thumb
 989              		.thumb_func
 990              		.type	CapSense_Start, %function
 991              	CapSense_Start:
 992              	.LFB2:
 497:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 993              		.loc 1 497 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 08B5     		push	{r3, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 3, -8
 1000              		.cfi_offset 14, -4
 498:Generated_Source\PSoC5/CapSense.c ****     {
 1001              		.loc 1 498 0
 1002 0002 084B     		ldr	r3, .L78
 1003 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 0006 23B9     		cbnz	r3, .L76
 500:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 1005              		.loc 1 500 0
 1006 0008 FFF7FEFF 		bl	CapSense_Init
 1007              	.LVL75:
 501:Generated_Source\PSoC5/CapSense.c ****     }
 1008              		.loc 1 501 0
 1009 000c 0122     		movs	r2, #1
 1010 000e 054B     		ldr	r3, .L78
 1011 0010 1A70     		strb	r2, [r3]
 1012              	.L76:
 503:Generated_Source\PSoC5/CapSense.c ****     
 1013              		.loc 1 503 0
 1014 0012 FFF7FEFF 		bl	CapSense_Enable
 1015              	.LVL76:
 508:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 1016              		.loc 1 508 0
 1017 0016 FFF7FEFF 		bl	CapSense_AutoTune
 1018              	.LVL77:
 509:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 1019              		.loc 1 509 0
 1020 001a 0122     		movs	r2, #1
 1021 001c 024B     		ldr	r3, .L78+4
 1022 001e DA73     		strb	r2, [r3, #15]
 1023 0020 08BD     		pop	{r3, pc}
 1024              	.L79:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 55


 1025 0022 00BF     		.align	2
 1026              	.L78:
 1027 0024 00000000 		.word	.LANCHOR2
 1028 0028 00000000 		.word	.LANCHOR0
 1029              		.cfi_endproc
 1030              	.LFE2:
 1031              		.size	CapSense_Start, .-CapSense_Start
 1032              		.global	CapSense_widgetNumber
 1033              		.comm	CapSense_analogSwitchDivider,7,4
 1034              		.global	CapSense_widgetResolution
 1035              		.global	CapSense_idacSettings
 1036              		.global	CapSense_csTable
 1037              		.global	CapSense_maskTable
 1038              		.global	CapSense_portTable
 1039              		.global	CapSense_pcTable
 1040              		.global	CapSense_sensorEnableMask
 1041              		.comm	CapSense_sensorRaw,14,4
 1042              		.global	CapSense_lowLevelTuningDone
 1043              		.comm	CapSense_sensorIndex,1,1
 1044              		.comm	CapSense_csv,1,1
 1045              		.section	.rodata
 1046              		.align	2
 1047              		.set	.LANCHOR1,. + 0
 1048              		.type	CapSense_portTable, %object
 1049              		.size	CapSense_portTable, 7
 1050              	CapSense_portTable:
 1051 0000 05       		.byte	5
 1052 0001 05       		.byte	5
 1053 0002 05       		.byte	5
 1054 0003 05       		.byte	5
 1055 0004 05       		.byte	5
 1056 0005 05       		.byte	5
 1057 0006 05       		.byte	5
 1058 0007 00       		.space	1
 1059              		.type	CapSense_maskTable, %object
 1060              		.size	CapSense_maskTable, 7
 1061              	CapSense_maskTable:
 1062 0008 20       		.byte	32
 1063 0009 40       		.byte	64
 1064 000a 01       		.byte	1
 1065 000b 02       		.byte	2
 1066 000c 04       		.byte	4
 1067 000d 08       		.byte	8
 1068 000e 10       		.byte	16
 1069 000f 00       		.space	1
 1070              		.type	CapSense_pcTable, %object
 1071              		.size	CapSense_pcTable, 28
 1072              	CapSense_pcTable:
 1073 0010 2D500040 		.word	1073762349
 1074 0014 2E500040 		.word	1073762350
 1075 0018 28500040 		.word	1073762344
 1076 001c 29500040 		.word	1073762345
 1077 0020 2A500040 		.word	1073762346
 1078 0024 2B500040 		.word	1073762347
 1079 0028 2C500040 		.word	1073762348
 1080              		.type	CapSense_csTable, %object
 1081              		.size	CapSense_csTable, 32
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 56


 1082              	CapSense_csTable:
 1083 002c 06520040 		.word	1073762822
 1084 0030 0E520040 		.word	1073762830
 1085 0034 16520040 		.word	1073762838
 1086 0038 1E520040 		.word	1073762846
 1087 003c 26520040 		.word	1073762854
 1088 0040 2E520040 		.word	1073762862
 1089 0044 36520040 		.word	1073762870
 1090 0048 7E520040 		.word	1073762942
 1091              		.type	CapSense_widgetNumber, %object
 1092              		.size	CapSense_widgetNumber, 7
 1093              	CapSense_widgetNumber:
 1094 004c 01       		.byte	1
 1095 004d 02       		.byte	2
 1096 004e 00       		.byte	0
 1097 004f 00       		.byte	0
 1098 0050 00       		.byte	0
 1099 0051 00       		.byte	0
 1100 0052 00       		.byte	0
 1101              		.data
 1102              		.align	2
 1103              		.set	.LANCHOR0,. + 0
 1104              		.type	CapSense_sensorEnableMask, %object
 1105              		.size	CapSense_sensorEnableMask, 1
 1106              	CapSense_sensorEnableMask:
 1107 0000 7F       		.byte	127
 1108 0001 000000   		.space	3
 1109              		.type	CapSense_idacSettings, %object
 1110              		.size	CapSense_idacSettings, 7
 1111              	CapSense_idacSettings:
 1112 0004 C8       		.byte	-56
 1113 0005 C8       		.byte	-56
 1114 0006 C8       		.byte	-56
 1115 0007 C8       		.byte	-56
 1116 0008 C8       		.byte	-56
 1117 0009 C8       		.byte	-56
 1118 000a C8       		.byte	-56
 1119 000b 00       		.space	1
 1120              		.type	CapSense_widgetResolution, %object
 1121              		.size	CapSense_widgetResolution, 3
 1122              	CapSense_widgetResolution:
 1123 000c 03       		.byte	3
 1124 000d 03       		.byte	3
 1125 000e 03       		.byte	3
 1126              		.type	CapSense_lowLevelTuningDone, %object
 1127              		.size	CapSense_lowLevelTuningDone, 1
 1128              	CapSense_lowLevelTuningDone:
 1129 000f 01       		.byte	1
 1130              		.bss
 1131              		.set	.LANCHOR2,. + 0
 1132              		.type	CapSense_initVar, %object
 1133              		.size	CapSense_initVar, 1
 1134              	CapSense_initVar:
 1135 0000 00       		.space	1
 1136              		.text
 1137              	.Letext0:
 1138              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 57


 1139              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1140              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1141              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1142              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1143              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1144              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1145              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1146              		.section	.debug_info,"",%progbits
 1147              	.Ldebug_info0:
 1148 0000 4C080000 		.4byte	0x84c
 1149 0004 0400     		.2byte	0x4
 1150 0006 00000000 		.4byte	.Ldebug_abbrev0
 1151 000a 04       		.byte	0x4
 1152 000b 01       		.uleb128 0x1
 1153 000c D8040000 		.4byte	.LASF81
 1154 0010 0C       		.byte	0xc
 1155 0011 2A000000 		.4byte	.LASF82
 1156 0015 DC000000 		.4byte	.LASF83
 1157 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1158 001d 00000000 		.4byte	0
 1159 0021 00000000 		.4byte	.Ldebug_line0
 1160 0025 02       		.uleb128 0x2
 1161 0026 01       		.byte	0x1
 1162 0027 06       		.byte	0x6
 1163 0028 60010000 		.4byte	.LASF0
 1164 002c 02       		.uleb128 0x2
 1165 002d 01       		.byte	0x1
 1166 002e 08       		.byte	0x8
 1167 002f 56040000 		.4byte	.LASF1
 1168 0033 02       		.uleb128 0x2
 1169 0034 02       		.byte	0x2
 1170 0035 05       		.byte	0x5
 1171 0036 94040000 		.4byte	.LASF2
 1172 003a 02       		.uleb128 0x2
 1173 003b 02       		.byte	0x2
 1174 003c 07       		.byte	0x7
 1175 003d 1B030000 		.4byte	.LASF3
 1176 0041 02       		.uleb128 0x2
 1177 0042 04       		.byte	0x4
 1178 0043 05       		.byte	0x5
 1179 0044 8D010000 		.4byte	.LASF4
 1180 0048 02       		.uleb128 0x2
 1181 0049 04       		.byte	0x4
 1182 004a 07       		.byte	0x7
 1183 004b B4020000 		.4byte	.LASF5
 1184 004f 02       		.uleb128 0x2
 1185 0050 08       		.byte	0x8
 1186 0051 05       		.byte	0x5
 1187 0052 52010000 		.4byte	.LASF6
 1188 0056 02       		.uleb128 0x2
 1189 0057 08       		.byte	0x8
 1190 0058 07       		.byte	0x7
 1191 0059 AD000000 		.4byte	.LASF7
 1192 005d 03       		.uleb128 0x3
 1193 005e 04       		.byte	0x4
 1194 005f 05       		.byte	0x5
 1195 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 58


 1196 0064 02       		.uleb128 0x2
 1197 0065 04       		.byte	0x4
 1198 0066 07       		.byte	0x7
 1199 0067 77020000 		.4byte	.LASF8
 1200 006b 04       		.uleb128 0x4
 1201 006c 9C010000 		.4byte	.LASF9
 1202 0070 02       		.byte	0x2
 1203 0071 9201     		.2byte	0x192
 1204 0073 2C000000 		.4byte	0x2c
 1205 0077 04       		.uleb128 0x4
 1206 0078 00000000 		.4byte	.LASF10
 1207 007c 02       		.byte	0x2
 1208 007d 9301     		.2byte	0x193
 1209 007f 3A000000 		.4byte	0x3a
 1210 0083 04       		.uleb128 0x4
 1211 0084 18020000 		.4byte	.LASF11
 1212 0088 02       		.byte	0x2
 1213 0089 9401     		.2byte	0x194
 1214 008b 48000000 		.4byte	0x48
 1215 008f 02       		.uleb128 0x2
 1216 0090 04       		.byte	0x4
 1217 0091 04       		.byte	0x4
 1218 0092 29040000 		.4byte	.LASF12
 1219 0096 02       		.uleb128 0x2
 1220 0097 08       		.byte	0x8
 1221 0098 04       		.byte	0x4
 1222 0099 B8010000 		.4byte	.LASF13
 1223 009d 02       		.uleb128 0x2
 1224 009e 01       		.byte	0x1
 1225 009f 08       		.byte	0x8
 1226 00a0 66050000 		.4byte	.LASF14
 1227 00a4 04       		.uleb128 0x4
 1228 00a5 39040000 		.4byte	.LASF15
 1229 00a9 02       		.byte	0x2
 1230 00aa 3C02     		.2byte	0x23c
 1231 00ac B0000000 		.4byte	0xb0
 1232 00b0 05       		.uleb128 0x5
 1233 00b1 6B000000 		.4byte	0x6b
 1234 00b5 04       		.uleb128 0x4
 1235 00b6 96010000 		.4byte	.LASF16
 1236 00ba 02       		.byte	0x2
 1237 00bb 3D02     		.2byte	0x23d
 1238 00bd C1000000 		.4byte	0xc1
 1239 00c1 05       		.uleb128 0x5
 1240 00c2 77000000 		.4byte	0x77
 1241 00c6 04       		.uleb128 0x4
 1242 00c7 7D030000 		.4byte	.LASF17
 1243 00cb 02       		.byte	0x2
 1244 00cc 3E02     		.2byte	0x23e
 1245 00ce D2000000 		.4byte	0xd2
 1246 00d2 05       		.uleb128 0x5
 1247 00d3 83000000 		.4byte	0x83
 1248 00d7 02       		.uleb128 0x2
 1249 00d8 08       		.byte	0x8
 1250 00d9 04       		.byte	0x4
 1251 00da BA030000 		.4byte	.LASF18
 1252 00de 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 59


 1253 00df 04       		.byte	0x4
 1254 00e0 07       		.byte	0x7
 1255 00e1 A0030000 		.4byte	.LASF19
 1256 00e5 06       		.uleb128 0x6
 1257 00e6 2C010000 		.4byte	.LASF26
 1258 00ea 01       		.byte	0x1
 1259 00eb 5701     		.2byte	0x157
 1260 00ed 00000000 		.4byte	.LFB1
 1261 00f1 80000000 		.4byte	.LFE1-.LFB1
 1262 00f5 01       		.uleb128 0x1
 1263 00f6 9C       		.byte	0x9c
 1264 00f7 40010000 		.4byte	0x140
 1265 00fb 07       		.uleb128 0x7
 1266 00fc CF050000 		.4byte	.LASF20
 1267 0100 01       		.byte	0x1
 1268 0101 5901     		.2byte	0x159
 1269 0103 6B000000 		.4byte	0x6b
 1270 0107 00000000 		.4byte	.LLST0
 1271 010b 08       		.uleb128 0x8
 1272 010c 06000000 		.4byte	.LVL0
 1273 0110 7D070000 		.4byte	0x77d
 1274 0114 08       		.uleb128 0x8
 1275 0115 2E000000 		.4byte	.LVL2
 1276 0119 88070000 		.4byte	0x788
 1277 011d 08       		.uleb128 0x8
 1278 011e 32000000 		.4byte	.LVL3
 1279 0122 93070000 		.4byte	0x793
 1280 0126 08       		.uleb128 0x8
 1281 0127 36000000 		.4byte	.LVL4
 1282 012b 9E070000 		.4byte	0x79e
 1283 012f 09       		.uleb128 0x9
 1284 0130 5E000000 		.4byte	.LVL5
 1285 0134 A9070000 		.4byte	0x7a9
 1286 0138 0A       		.uleb128 0xa
 1287 0139 01       		.uleb128 0x1
 1288 013a 50       		.byte	0x50
 1289 013b 02       		.uleb128 0x2
 1290 013c 74       		.byte	0x74
 1291 013d 00       		.sleb128 0
 1292 013e 00       		.byte	0
 1293 013f 00       		.byte	0
 1294 0140 0B       		.uleb128 0xb
 1295 0141 3E040000 		.4byte	.LASF22
 1296 0145 01       		.byte	0x1
 1297 0146 9F02     		.2byte	0x29f
 1298 0148 6B000000 		.4byte	0x6b
 1299 014c 00000000 		.4byte	.LFB4
 1300 0150 20000000 		.4byte	.LFE4-.LFB4
 1301 0154 01       		.uleb128 0x1
 1302 0155 9C       		.byte	0x9c
 1303 0156 89010000 		.4byte	0x189
 1304 015a 0C       		.uleb128 0xc
 1305 015b A4000000 		.4byte	.LASF24
 1306 015f 01       		.byte	0x1
 1307 0160 9F02     		.2byte	0x29f
 1308 0162 6B000000 		.4byte	0x6b
 1309 0166 13000000 		.4byte	.LLST1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 60


 1310 016a 0D       		.uleb128 0xd
 1311 016b 706F7300 		.ascii	"pos\000"
 1312 016f 01       		.byte	0x1
 1313 0170 A102     		.2byte	0x2a1
 1314 0172 6B000000 		.4byte	0x6b
 1315 0176 01       		.uleb128 0x1
 1316 0177 52       		.byte	0x52
 1317 0178 07       		.uleb128 0x7
 1318 0179 DE030000 		.4byte	.LASF21
 1319 017d 01       		.byte	0x1
 1320 017e A202     		.2byte	0x2a2
 1321 0180 6B000000 		.4byte	0x6b
 1322 0184 3F000000 		.4byte	.LLST2
 1323 0188 00       		.byte	0
 1324 0189 0E       		.uleb128 0xe
 1325 018a 72060000 		.4byte	.LASF84
 1326 018e 01       		.byte	0x1
 1327 018f 2B04     		.2byte	0x42b
 1328 0191 6B000000 		.4byte	0x6b
 1329 0195 00000000 		.4byte	.LFB8
 1330 0199 10000000 		.4byte	.LFE8-.LFB8
 1331 019d 01       		.uleb128 0x1
 1332 019e 9C       		.byte	0x9c
 1333 019f 0B       		.uleb128 0xb
 1334 01a0 01020000 		.4byte	.LASF23
 1335 01a4 01       		.byte	0x1
 1336 01a5 4404     		.2byte	0x444
 1337 01a7 77000000 		.4byte	0x77
 1338 01ab 00000000 		.4byte	.LFB9
 1339 01af 0C000000 		.4byte	.LFE9-.LFB9
 1340 01b3 01       		.uleb128 0x1
 1341 01b4 9C       		.byte	0x9c
 1342 01b5 CA010000 		.4byte	0x1ca
 1343 01b9 0C       		.uleb128 0xc
 1344 01ba 45030000 		.4byte	.LASF25
 1345 01be 01       		.byte	0x1
 1346 01bf 4404     		.2byte	0x444
 1347 01c1 6B000000 		.4byte	0x6b
 1348 01c5 52000000 		.4byte	.LLST3
 1349 01c9 00       		.byte	0
 1350 01ca 06       		.uleb128 0x6
 1351 01cb BF010000 		.4byte	.LASF27
 1352 01cf 01       		.byte	0x1
 1353 01d0 EF04     		.2byte	0x4ef
 1354 01d2 00000000 		.4byte	.LFB11
 1355 01d6 34000000 		.4byte	.LFE11-.LFB11
 1356 01da 01       		.uleb128 0x1
 1357 01db 9C       		.byte	0x9c
 1358 01dc 1A020000 		.4byte	0x21a
 1359 01e0 0C       		.uleb128 0xc
 1360 01e1 45030000 		.4byte	.LASF25
 1361 01e5 01       		.byte	0x1
 1362 01e6 EF04     		.2byte	0x4ef
 1363 01e8 6B000000 		.4byte	0x6b
 1364 01ec 73000000 		.4byte	.LLST4
 1365 01f0 07       		.uleb128 0x7
 1366 01f1 49020000 		.4byte	.LASF28
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 61


 1367 01f5 01       		.byte	0x1
 1368 01f6 F104     		.2byte	0x4f1
 1369 01f8 6B000000 		.4byte	0x6b
 1370 01fc 94000000 		.4byte	.LLST5
 1371 0200 07       		.uleb128 0x7
 1372 0201 2E020000 		.4byte	.LASF29
 1373 0205 01       		.byte	0x1
 1374 0206 F204     		.2byte	0x4f2
 1375 0208 6B000000 		.4byte	0x6b
 1376 020c A7000000 		.4byte	.LLST6
 1377 0210 08       		.uleb128 0x8
 1378 0211 2C000000 		.4byte	.LVL17
 1379 0215 B4070000 		.4byte	0x7b4
 1380 0219 00       		.byte	0
 1381 021a 06       		.uleb128 0x6
 1382 021b F6050000 		.4byte	.LASF30
 1383 021f 01       		.byte	0x1
 1384 0220 4405     		.2byte	0x544
 1385 0222 00000000 		.4byte	.LFB12
 1386 0226 38000000 		.4byte	.LFE12-.LFB12
 1387 022a 01       		.uleb128 0x1
 1388 022b 9C       		.byte	0x9c
 1389 022c 71020000 		.4byte	0x271
 1390 0230 0C       		.uleb128 0xc
 1391 0231 45030000 		.4byte	.LASF25
 1392 0235 01       		.byte	0x1
 1393 0236 4405     		.2byte	0x544
 1394 0238 6B000000 		.4byte	0x6b
 1395 023c BA000000 		.4byte	.LLST7
 1396 0240 07       		.uleb128 0x7
 1397 0241 49020000 		.4byte	.LASF28
 1398 0245 01       		.byte	0x1
 1399 0246 4605     		.2byte	0x546
 1400 0248 6B000000 		.4byte	0x6b
 1401 024c DB000000 		.4byte	.LLST8
 1402 0250 07       		.uleb128 0x7
 1403 0251 2E020000 		.4byte	.LASF29
 1404 0255 01       		.byte	0x1
 1405 0256 4705     		.2byte	0x547
 1406 0258 6B000000 		.4byte	0x6b
 1407 025c EE000000 		.4byte	.LLST9
 1408 0260 09       		.uleb128 0x9
 1409 0261 10000000 		.4byte	.LVL22
 1410 0265 BF070000 		.4byte	0x7bf
 1411 0269 0A       		.uleb128 0xa
 1412 026a 01       		.uleb128 0x1
 1413 026b 50       		.byte	0x50
 1414 026c 02       		.uleb128 0x2
 1415 026d 75       		.byte	0x75
 1416 026e 00       		.sleb128 0
 1417 026f 00       		.byte	0
 1418 0270 00       		.byte	0
 1419 0271 06       		.uleb128 0x6
 1420 0272 84020000 		.4byte	.LASF31
 1421 0276 01       		.byte	0x1
 1422 0277 5904     		.2byte	0x459
 1423 0279 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 62


 1424 027d 16000000 		.4byte	.LFE10-.LFB10
 1425 0281 01       		.uleb128 0x1
 1426 0282 9C       		.byte	0x9c
 1427 0283 A6020000 		.4byte	0x2a6
 1428 0287 0F       		.uleb128 0xf
 1429 0288 6900     		.ascii	"i\000"
 1430 028a 01       		.byte	0x1
 1431 028b 5B04     		.2byte	0x45b
 1432 028d 6B000000 		.4byte	0x6b
 1433 0291 01010000 		.4byte	.LLST10
 1434 0295 09       		.uleb128 0x9
 1435 0296 0C000000 		.4byte	.LVL28
 1436 029a 1A020000 		.4byte	0x21a
 1437 029e 0A       		.uleb128 0xa
 1438 029f 01       		.uleb128 0x1
 1439 02a0 50       		.byte	0x50
 1440 02a1 02       		.uleb128 0x2
 1441 02a2 74       		.byte	0x74
 1442 02a3 00       		.sleb128 0
 1443 02a4 00       		.byte	0
 1444 02a5 00       		.byte	0
 1445 02a6 06       		.uleb128 0x6
 1446 02a7 C6030000 		.4byte	.LASF32
 1447 02ab 01       		.byte	0x1
 1448 02ac 1502     		.2byte	0x215
 1449 02ae 00000000 		.4byte	.LFB3
 1450 02b2 80000000 		.4byte	.LFE3-.LFB3
 1451 02b6 01       		.uleb128 0x1
 1452 02b7 9C       		.byte	0x9c
 1453 02b8 E1020000 		.4byte	0x2e1
 1454 02bc 08       		.uleb128 0x8
 1455 02bd 16000000 		.4byte	.LVL31
 1456 02c1 71020000 		.4byte	0x271
 1457 02c5 08       		.uleb128 0x8
 1458 02c6 3C000000 		.4byte	.LVL32
 1459 02ca CA070000 		.4byte	0x7ca
 1460 02ce 08       		.uleb128 0x8
 1461 02cf 40000000 		.4byte	.LVL33
 1462 02d3 D5070000 		.4byte	0x7d5
 1463 02d7 08       		.uleb128 0x8
 1464 02d8 44000000 		.4byte	.LVL34
 1465 02dc E0070000 		.4byte	0x7e0
 1466 02e0 00       		.byte	0
 1467 02e1 06       		.uleb128 0x6
 1468 02e2 BD050000 		.4byte	.LASF33
 1469 02e6 01       		.byte	0x1
 1470 02e7 4006     		.2byte	0x640
 1471 02e9 00000000 		.4byte	.LFB14
 1472 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1473 02f1 01       		.uleb128 0x1
 1474 02f2 9C       		.byte	0x9c
 1475 02f3 20030000 		.4byte	0x320
 1476 02f7 0C       		.uleb128 0xc
 1477 02f8 45030000 		.4byte	.LASF25
 1478 02fc 01       		.byte	0x1
 1479 02fd 4006     		.2byte	0x640
 1480 02ff 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 63


 1481 0303 2B010000 		.4byte	.LLST11
 1482 0307 08       		.uleb128 0x8
 1483 0308 28000000 		.4byte	.LVL36
 1484 030c 1A020000 		.4byte	0x21a
 1485 0310 09       		.uleb128 0x9
 1486 0311 2E000000 		.4byte	.LVL37
 1487 0315 EB070000 		.4byte	0x7eb
 1488 0319 0A       		.uleb128 0xa
 1489 031a 01       		.uleb128 0x1
 1490 031b 50       		.byte	0x50
 1491 031c 01       		.uleb128 0x1
 1492 031d 30       		.byte	0x30
 1493 031e 00       		.byte	0
 1494 031f 00       		.byte	0
 1495 0320 06       		.uleb128 0x6
 1496 0321 3C010000 		.4byte	.LASF34
 1497 0325 01       		.byte	0x1
 1498 0326 4E07     		.2byte	0x74e
 1499 0328 00000000 		.4byte	.LFB15
 1500 032c 14000000 		.4byte	.LFE15-.LFB15
 1501 0330 01       		.uleb128 0x1
 1502 0331 9C       		.byte	0x9c
 1503 0332 47030000 		.4byte	0x347
 1504 0336 0C       		.uleb128 0xc
 1505 0337 2F040000 		.4byte	.LASF35
 1506 033b 01       		.byte	0x1
 1507 033c 4E07     		.2byte	0x74e
 1508 033e 6B000000 		.4byte	0x6b
 1509 0342 4C010000 		.4byte	.LLST12
 1510 0346 00       		.byte	0
 1511 0347 06       		.uleb128 0x6
 1512 0348 A5040000 		.4byte	.LASF36
 1513 034c 01       		.byte	0x1
 1514 034d 3903     		.2byte	0x339
 1515 034f 00000000 		.4byte	.LFB5
 1516 0353 38000000 		.4byte	.LFE5-.LFB5
 1517 0357 01       		.uleb128 0x1
 1518 0358 9C       		.byte	0x9c
 1519 0359 90030000 		.4byte	0x390
 1520 035d 0C       		.uleb128 0xc
 1521 035e 66030000 		.4byte	.LASF37
 1522 0362 01       		.byte	0x1
 1523 0363 3903     		.2byte	0x339
 1524 0365 6B000000 		.4byte	0x6b
 1525 0369 6D010000 		.4byte	.LLST13
 1526 036d 07       		.uleb128 0x7
 1527 036e 9E040000 		.4byte	.LASF38
 1528 0372 01       		.byte	0x1
 1529 0373 3B03     		.2byte	0x33b
 1530 0375 6B000000 		.4byte	0x6b
 1531 0379 8E010000 		.4byte	.LLST14
 1532 037d 08       		.uleb128 0x8
 1533 037e 16000000 		.4byte	.LVL43
 1534 0382 EB070000 		.4byte	0x7eb
 1535 0386 08       		.uleb128 0x8
 1536 0387 26000000 		.4byte	.LVL45
 1537 038b 20030000 		.4byte	0x320
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 64


 1538 038f 00       		.byte	0
 1539 0390 06       		.uleb128 0x6
 1540 0391 0D060000 		.4byte	.LASF39
 1541 0395 01       		.byte	0x1
 1542 0396 9805     		.2byte	0x598
 1543 0398 00000000 		.4byte	.LFB13
 1544 039c 34000000 		.4byte	.LFE13-.LFB13
 1545 03a0 01       		.uleb128 0x1
 1546 03a1 9C       		.byte	0x9c
 1547 03a2 DB030000 		.4byte	0x3db
 1548 03a6 0C       		.uleb128 0xc
 1549 03a7 45030000 		.4byte	.LASF25
 1550 03ab 01       		.byte	0x1
 1551 03ac 9805     		.2byte	0x598
 1552 03ae 6B000000 		.4byte	0x6b
 1553 03b2 B4010000 		.4byte	.LLST15
 1554 03b6 10       		.uleb128 0x10
 1555 03b7 08000000 		.4byte	.LVL48
 1556 03bb 47030000 		.4byte	0x347
 1557 03bf CA030000 		.4byte	0x3ca
 1558 03c3 0A       		.uleb128 0xa
 1559 03c4 01       		.uleb128 0x1
 1560 03c5 50       		.byte	0x50
 1561 03c6 02       		.uleb128 0x2
 1562 03c7 75       		.byte	0x75
 1563 03c8 00       		.sleb128 0
 1564 03c9 00       		.byte	0
 1565 03ca 09       		.uleb128 0x9
 1566 03cb 22000000 		.4byte	.LVL49
 1567 03cf CA010000 		.4byte	0x1ca
 1568 03d3 0A       		.uleb128 0xa
 1569 03d4 01       		.uleb128 0x1
 1570 03d5 50       		.byte	0x50
 1571 03d6 02       		.uleb128 0x2
 1572 03d7 75       		.byte	0x75
 1573 03d8 00       		.sleb128 0
 1574 03d9 00       		.byte	0
 1575 03da 00       		.byte	0
 1576 03db 06       		.uleb128 0x6
 1577 03dc 63020000 		.4byte	.LASF40
 1578 03e0 01       		.byte	0x1
 1579 03e1 A903     		.2byte	0x3a9
 1580 03e3 00000000 		.4byte	.LFB6
 1581 03e7 20000000 		.4byte	.LFE6-.LFB6
 1582 03eb 01       		.uleb128 0x1
 1583 03ec 9C       		.byte	0x9c
 1584 03ed 0B040000 		.4byte	0x40b
 1585 03f1 0C       		.uleb128 0xc
 1586 03f2 45030000 		.4byte	.LASF25
 1587 03f6 01       		.byte	0x1
 1588 03f7 A903     		.2byte	0x3a9
 1589 03f9 6B000000 		.4byte	0x6b
 1590 03fd D5010000 		.4byte	.LLST16
 1591 0401 08       		.uleb128 0x8
 1592 0402 14000000 		.4byte	.LVL51
 1593 0406 90030000 		.4byte	0x390
 1594 040a 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 65


 1595 040b 06       		.uleb128 0x6
 1596 040c 3F060000 		.4byte	.LASF41
 1597 0410 01       		.byte	0x1
 1598 0411 F603     		.2byte	0x3f6
 1599 0413 00000000 		.4byte	.LFB7
 1600 0417 38000000 		.4byte	.LFE7-.LFB7
 1601 041b 01       		.uleb128 0x1
 1602 041c 9C       		.byte	0x9c
 1603 041d 34040000 		.4byte	0x434
 1604 0421 08       		.uleb128 0x8
 1605 0422 14000000 		.4byte	.LVL52
 1606 0426 40010000 		.4byte	0x140
 1607 042a 08       		.uleb128 0x8
 1608 042b 2E000000 		.4byte	.LVL53
 1609 042f 90030000 		.4byte	0x390
 1610 0433 00       		.byte	0
 1611 0434 0B       		.uleb128 0xb
 1612 0435 C2040000 		.4byte	.LASF42
 1613 0439 01       		.byte	0x1
 1614 043a 6B07     		.2byte	0x76b
 1615 043c 6B000000 		.4byte	0x6b
 1616 0440 00000000 		.4byte	.LFB16
 1617 0444 0C000000 		.4byte	.LFE16-.LFB16
 1618 0448 01       		.uleb128 0x1
 1619 0449 9C       		.byte	0x9c
 1620 044a 5F040000 		.4byte	0x45f
 1621 044e 07       		.uleb128 0x7
 1622 044f 2F040000 		.4byte	.LASF35
 1623 0453 01       		.byte	0x1
 1624 0454 6D07     		.2byte	0x76d
 1625 0456 6B000000 		.4byte	0x6b
 1626 045a F6010000 		.4byte	.LLST17
 1627 045e 00       		.byte	0
 1628 045f 06       		.uleb128 0x6
 1629 0460 83050000 		.4byte	.LASF43
 1630 0464 01       		.byte	0x1
 1631 0465 8D07     		.2byte	0x78d
 1632 0467 00000000 		.4byte	.LFB17
 1633 046b 0C000000 		.4byte	.LFE17-.LFB17
 1634 046f 01       		.uleb128 0x1
 1635 0470 9C       		.byte	0x9c
 1636 0471 84040000 		.4byte	0x484
 1637 0475 11       		.uleb128 0x11
 1638 0476 D4030000 		.4byte	.LASF44
 1639 047a 01       		.byte	0x1
 1640 047b 8D07     		.2byte	0x78d
 1641 047d 6B000000 		.4byte	0x6b
 1642 0481 01       		.uleb128 0x1
 1643 0482 50       		.byte	0x50
 1644 0483 00       		.byte	0
 1645 0484 06       		.uleb128 0x6
 1646 0485 6C010000 		.4byte	.LASF45
 1647 0489 01       		.byte	0x1
 1648 048a A807     		.2byte	0x7a8
 1649 048c 00000000 		.4byte	.LFB18
 1650 0490 20000000 		.4byte	.LFE18-.LFB18
 1651 0494 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 66


 1652 0495 9C       		.byte	0x9c
 1653 0496 A9040000 		.4byte	0x4a9
 1654 049a 12       		.uleb128 0x12
 1655 049b 73726300 		.ascii	"src\000"
 1656 049f 01       		.byte	0x1
 1657 04a0 A807     		.2byte	0x7a8
 1658 04a2 6B000000 		.4byte	0x6b
 1659 04a6 01       		.uleb128 0x1
 1660 04a7 50       		.byte	0x50
 1661 04a8 00       		.byte	0
 1662 04a9 13       		.uleb128 0x13
 1663 04aa 1E060000 		.4byte	.LASF46
 1664 04ae 01       		.byte	0x1
 1665 04af 76       		.byte	0x76
 1666 04b0 00000000 		.4byte	.LFB0
 1667 04b4 FC000000 		.4byte	.LFE0-.LFB0
 1668 04b8 01       		.uleb128 0x1
 1669 04b9 9C       		.byte	0x9c
 1670 04ba C4050000 		.4byte	0x5c4
 1671 04be 14       		.uleb128 0x14
 1672 04bf CF050000 		.4byte	.LASF20
 1673 04c3 01       		.byte	0x1
 1674 04c4 7D       		.byte	0x7d
 1675 04c5 6B000000 		.4byte	0x6b
 1676 04c9 15020000 		.4byte	.LLST18
 1677 04cd 08       		.uleb128 0x8
 1678 04ce 06000000 		.4byte	.LVL58
 1679 04d2 71020000 		.4byte	0x271
 1680 04d6 10       		.uleb128 0x10
 1681 04d7 1C000000 		.4byte	.LVL59
 1682 04db 84040000 		.4byte	0x484
 1683 04df E9040000 		.4byte	0x4e9
 1684 04e3 0A       		.uleb128 0xa
 1685 04e4 01       		.uleb128 0x1
 1686 04e5 50       		.byte	0x50
 1687 04e6 01       		.uleb128 0x1
 1688 04e7 32       		.byte	0x32
 1689 04e8 00       		.byte	0
 1690 04e9 08       		.uleb128 0x8
 1691 04ea 20000000 		.4byte	.LVL60
 1692 04ee 7D070000 		.4byte	0x77d
 1693 04f2 08       		.uleb128 0x8
 1694 04f3 38000000 		.4byte	.LVL61
 1695 04f7 A9070000 		.4byte	0x7a9
 1696 04fb 08       		.uleb128 0x8
 1697 04fc 52000000 		.4byte	.LVL62
 1698 0500 7D070000 		.4byte	0x77d
 1699 0504 08       		.uleb128 0x8
 1700 0505 6A000000 		.4byte	.LVL63
 1701 0509 A9070000 		.4byte	0x7a9
 1702 050d 10       		.uleb128 0x10
 1703 050e 96000000 		.4byte	.LVL64
 1704 0512 F6070000 		.4byte	0x7f6
 1705 0516 20050000 		.4byte	0x520
 1706 051a 0A       		.uleb128 0xa
 1707 051b 01       		.uleb128 0x1
 1708 051c 50       		.byte	0x50
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 67


 1709 051d 01       		.uleb128 0x1
 1710 051e 34       		.byte	0x34
 1711 051f 00       		.byte	0
 1712 0520 10       		.uleb128 0x10
 1713 0521 9E000000 		.4byte	.LVL65
 1714 0525 01080000 		.4byte	0x801
 1715 0529 39050000 		.4byte	0x539
 1716 052d 0A       		.uleb128 0xa
 1717 052e 01       		.uleb128 0x1
 1718 052f 50       		.byte	0x50
 1719 0530 01       		.uleb128 0x1
 1720 0531 34       		.byte	0x34
 1721 0532 0A       		.uleb128 0xa
 1722 0533 01       		.uleb128 0x1
 1723 0534 51       		.byte	0x51
 1724 0535 02       		.uleb128 0x2
 1725 0536 74       		.byte	0x74
 1726 0537 00       		.sleb128 0
 1727 0538 00       		.byte	0
 1728 0539 08       		.uleb128 0x8
 1729 053a A2000000 		.4byte	.LVL66
 1730 053e 0C080000 		.4byte	0x80c
 1731 0542 10       		.uleb128 0x10
 1732 0543 A8000000 		.4byte	.LVL67
 1733 0547 B4070000 		.4byte	0x7b4
 1734 054b 56050000 		.4byte	0x556
 1735 054f 0A       		.uleb128 0xa
 1736 0550 01       		.uleb128 0x1
 1737 0551 50       		.byte	0x50
 1738 0552 02       		.uleb128 0x2
 1739 0553 74       		.byte	0x74
 1740 0554 00       		.sleb128 0
 1741 0555 00       		.byte	0
 1742 0556 10       		.uleb128 0x10
 1743 0557 AE000000 		.4byte	.LVL68
 1744 055b B4070000 		.4byte	0x7b4
 1745 055f 69050000 		.4byte	0x569
 1746 0563 0A       		.uleb128 0xa
 1747 0564 01       		.uleb128 0x1
 1748 0565 50       		.byte	0x50
 1749 0566 01       		.uleb128 0x1
 1750 0567 38       		.byte	0x38
 1751 0568 00       		.byte	0
 1752 0569 10       		.uleb128 0x10
 1753 056a B4000000 		.4byte	.LVL69
 1754 056e B4070000 		.4byte	0x7b4
 1755 0572 7C050000 		.4byte	0x57c
 1756 0576 0A       		.uleb128 0xa
 1757 0577 01       		.uleb128 0x1
 1758 0578 50       		.byte	0x50
 1759 0579 01       		.uleb128 0x1
 1760 057a 39       		.byte	0x39
 1761 057b 00       		.byte	0
 1762 057c 08       		.uleb128 0x8
 1763 057d C2000000 		.4byte	.LVL70
 1764 0581 17080000 		.4byte	0x817
 1765 0585 08       		.uleb128 0x8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 68


 1766 0586 C6000000 		.4byte	.LVL71
 1767 058a 22080000 		.4byte	0x822
 1768 058e 10       		.uleb128 0x10
 1769 058f CC000000 		.4byte	.LVL72
 1770 0593 2D080000 		.4byte	0x82d
 1771 0597 A1050000 		.4byte	0x5a1
 1772 059b 0A       		.uleb128 0xa
 1773 059c 01       		.uleb128 0x1
 1774 059d 50       		.byte	0x50
 1775 059e 01       		.uleb128 0x1
 1776 059f 30       		.byte	0x30
 1777 05a0 00       		.byte	0
 1778 05a1 10       		.uleb128 0x10
 1779 05a2 D2000000 		.4byte	.LVL73
 1780 05a6 38080000 		.4byte	0x838
 1781 05aa B4050000 		.4byte	0x5b4
 1782 05ae 0A       		.uleb128 0xa
 1783 05af 01       		.uleb128 0x1
 1784 05b0 50       		.byte	0x50
 1785 05b1 01       		.uleb128 0x1
 1786 05b2 34       		.byte	0x34
 1787 05b3 00       		.byte	0
 1788 05b4 09       		.uleb128 0x9
 1789 05b5 D8000000 		.4byte	.LVL74
 1790 05b9 EB070000 		.4byte	0x7eb
 1791 05bd 0A       		.uleb128 0xa
 1792 05be 01       		.uleb128 0x1
 1793 05bf 50       		.byte	0x50
 1794 05c0 01       		.uleb128 0x1
 1795 05c1 30       		.byte	0x30
 1796 05c2 00       		.byte	0
 1797 05c3 00       		.byte	0
 1798 05c4 06       		.uleb128 0x6
 1799 05c5 AE050000 		.4byte	.LASF47
 1800 05c9 01       		.byte	0x1
 1801 05ca F001     		.2byte	0x1f0
 1802 05cc 00000000 		.4byte	.LFB2
 1803 05d0 2C000000 		.4byte	.LFE2-.LFB2
 1804 05d4 01       		.uleb128 0x1
 1805 05d5 9C       		.byte	0x9c
 1806 05d6 F6050000 		.4byte	0x5f6
 1807 05da 08       		.uleb128 0x8
 1808 05db 0C000000 		.4byte	.LVL75
 1809 05df A9040000 		.4byte	0x4a9
 1810 05e3 08       		.uleb128 0x8
 1811 05e4 16000000 		.4byte	.LVL76
 1812 05e8 E5000000 		.4byte	0xe5
 1813 05ec 08       		.uleb128 0x8
 1814 05ed 1A000000 		.4byte	.LVL77
 1815 05f1 43080000 		.4byte	0x843
 1816 05f5 00       		.byte	0
 1817 05f6 15       		.uleb128 0x15
 1818 05f7 4C000000 		.4byte	.LASF48
 1819 05fb 01       		.byte	0x1
 1820 05fc 16       		.byte	0x16
 1821 05fd 6B000000 		.4byte	0x6b
 1822 0601 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 69


 1823 0602 03       		.byte	0x3
 1824 0603 00000000 		.4byte	CapSense_initVar
 1825 0607 16       		.uleb128 0x16
 1826 0608 6E000000 		.4byte	.LASF49
 1827 060c 01       		.byte	0x1
 1828 060d 1E       		.byte	0x1e
 1829 060e 6B000000 		.4byte	0x6b
 1830 0612 05       		.uleb128 0x5
 1831 0613 03       		.byte	0x3
 1832 0614 00000000 		.4byte	CapSense_lowLevelTuningDone
 1833 0618 16       		.uleb128 0x16
 1834 0619 07000000 		.4byte	.LASF50
 1835 061d 01       		.byte	0x1
 1836 061e 19       		.byte	0x19
 1837 061f B0000000 		.4byte	0xb0
 1838 0623 05       		.uleb128 0x5
 1839 0624 03       		.byte	0x3
 1840 0625 00000000 		.4byte	CapSense_csv
 1841 0629 16       		.uleb128 0x16
 1842 062a 4E020000 		.4byte	.LASF51
 1843 062e 01       		.byte	0x1
 1844 062f 1A       		.byte	0x1a
 1845 0630 B0000000 		.4byte	0xb0
 1846 0634 05       		.uleb128 0x5
 1847 0635 03       		.byte	0x3
 1848 0636 00000000 		.4byte	CapSense_sensorIndex
 1849 063a 17       		.uleb128 0x17
 1850 063b 77000000 		.4byte	0x77
 1851 063f 4A060000 		.4byte	0x64a
 1852 0643 18       		.uleb128 0x18
 1853 0644 DE000000 		.4byte	0xde
 1854 0648 06       		.byte	0x6
 1855 0649 00       		.byte	0
 1856 064a 16       		.uleb128 0x16
 1857 064b 2C060000 		.4byte	.LASF52
 1858 064f 01       		.byte	0x1
 1859 0650 29       		.byte	0x29
 1860 0651 3A060000 		.4byte	0x63a
 1861 0655 05       		.uleb128 0x5
 1862 0656 03       		.byte	0x3
 1863 0657 00000000 		.4byte	CapSense_sensorRaw
 1864 065b 17       		.uleb128 0x17
 1865 065c 6B000000 		.4byte	0x6b
 1866 0660 6B060000 		.4byte	0x66b
 1867 0664 18       		.uleb128 0x18
 1868 0665 DE000000 		.4byte	0xde
 1869 0669 00       		.byte	0
 1870 066a 00       		.byte	0
 1871 066b 16       		.uleb128 0x16
 1872 066c 4C030000 		.4byte	.LASF53
 1873 0670 01       		.byte	0x1
 1874 0671 2B       		.byte	0x2b
 1875 0672 5B060000 		.4byte	0x65b
 1876 0676 05       		.uleb128 0x5
 1877 0677 03       		.byte	0x3
 1878 0678 00000000 		.4byte	CapSense_sensorEnableMask
 1879 067c 17       		.uleb128 0x17
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 70


 1880 067d 92060000 		.4byte	0x692
 1881 0681 8C060000 		.4byte	0x68c
 1882 0685 18       		.uleb128 0x18
 1883 0686 DE000000 		.4byte	0xde
 1884 068a 06       		.byte	0x6
 1885 068b 00       		.byte	0
 1886 068c 19       		.uleb128 0x19
 1887 068d 04       		.byte	0x4
 1888 068e 6B000000 		.4byte	0x6b
 1889 0692 1A       		.uleb128 0x1a
 1890 0693 8C060000 		.4byte	0x68c
 1891 0697 16       		.uleb128 0x16
 1892 0698 5D000000 		.4byte	.LASF54
 1893 069c 01       		.byte	0x1
 1894 069d 2E       		.byte	0x2e
 1895 069e A8060000 		.4byte	0x6a8
 1896 06a2 05       		.uleb128 0x5
 1897 06a3 03       		.byte	0x3
 1898 06a4 00000000 		.4byte	CapSense_pcTable
 1899 06a8 1A       		.uleb128 0x1a
 1900 06a9 7C060000 		.4byte	0x67c
 1901 06ad 17       		.uleb128 0x17
 1902 06ae BD060000 		.4byte	0x6bd
 1903 06b2 BD060000 		.4byte	0x6bd
 1904 06b6 18       		.uleb128 0x18
 1905 06b7 DE000000 		.4byte	0xde
 1906 06bb 06       		.byte	0x6
 1907 06bc 00       		.byte	0
 1908 06bd 1A       		.uleb128 0x1a
 1909 06be 6B000000 		.4byte	0x6b
 1910 06c2 16       		.uleb128 0x16
 1911 06c3 D9020000 		.4byte	.LASF55
 1912 06c7 01       		.byte	0x1
 1913 06c8 38       		.byte	0x38
 1914 06c9 D3060000 		.4byte	0x6d3
 1915 06cd 05       		.uleb128 0x5
 1916 06ce 03       		.byte	0x3
 1917 06cf 00000000 		.4byte	CapSense_portTable
 1918 06d3 1A       		.uleb128 0x1a
 1919 06d4 AD060000 		.4byte	0x6ad
 1920 06d8 16       		.uleb128 0x16
 1921 06d9 C6020000 		.4byte	.LASF56
 1922 06dd 01       		.byte	0x1
 1923 06de 42       		.byte	0x42
 1924 06df E9060000 		.4byte	0x6e9
 1925 06e3 05       		.uleb128 0x5
 1926 06e4 03       		.byte	0x3
 1927 06e5 00000000 		.4byte	CapSense_maskTable
 1928 06e9 1A       		.uleb128 0x1a
 1929 06ea AD060000 		.4byte	0x6ad
 1930 06ee 17       		.uleb128 0x17
 1931 06ef 92060000 		.4byte	0x692
 1932 06f3 FE060000 		.4byte	0x6fe
 1933 06f7 18       		.uleb128 0x18
 1934 06f8 DE000000 		.4byte	0xde
 1935 06fc 07       		.byte	0x7
 1936 06fd 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 71


 1937 06fe 16       		.uleb128 0x16
 1938 06ff A9030000 		.4byte	.LASF57
 1939 0703 01       		.byte	0x1
 1940 0704 4C       		.byte	0x4c
 1941 0705 0F070000 		.4byte	0x70f
 1942 0709 05       		.uleb128 0x5
 1943 070a 03       		.byte	0x3
 1944 070b 00000000 		.4byte	CapSense_csTable
 1945 070f 1A       		.uleb128 0x1a
 1946 0710 EE060000 		.4byte	0x6ee
 1947 0714 17       		.uleb128 0x17
 1948 0715 6B000000 		.4byte	0x6b
 1949 0719 24070000 		.4byte	0x724
 1950 071d 18       		.uleb128 0x18
 1951 071e DE000000 		.4byte	0xde
 1952 0722 06       		.byte	0x6
 1953 0723 00       		.byte	0
 1954 0724 16       		.uleb128 0x16
 1955 0725 13040000 		.4byte	.LASF58
 1956 0729 01       		.byte	0x1
 1957 072a 52       		.byte	0x52
 1958 072b 14070000 		.4byte	0x714
 1959 072f 05       		.uleb128 0x5
 1960 0730 03       		.byte	0x3
 1961 0731 00000000 		.4byte	CapSense_idacSettings
 1962 0735 17       		.uleb128 0x17
 1963 0736 6B000000 		.4byte	0x6b
 1964 073a 45070000 		.4byte	0x745
 1965 073e 18       		.uleb128 0x18
 1966 073f DE000000 		.4byte	0xde
 1967 0743 02       		.byte	0x2
 1968 0744 00       		.byte	0
 1969 0745 16       		.uleb128 0x16
 1970 0746 7A040000 		.4byte	.LASF59
 1971 074a 01       		.byte	0x1
 1972 074b 56       		.byte	0x56
 1973 074c 35070000 		.4byte	0x735
 1974 0750 05       		.uleb128 0x5
 1975 0751 03       		.byte	0x3
 1976 0752 00000000 		.4byte	CapSense_widgetResolution
 1977 0756 16       		.uleb128 0x16
 1978 0757 83030000 		.4byte	.LASF60
 1979 075b 01       		.byte	0x1
 1980 075c 5C       		.byte	0x5c
 1981 075d 14070000 		.4byte	0x714
 1982 0761 05       		.uleb128 0x5
 1983 0762 03       		.byte	0x3
 1984 0763 00000000 		.4byte	CapSense_analogSwitchDivider
 1985 0767 16       		.uleb128 0x16
 1986 0768 EB010000 		.4byte	.LASF61
 1987 076c 01       		.byte	0x1
 1988 076d 5D       		.byte	0x5d
 1989 076e 78070000 		.4byte	0x778
 1990 0772 05       		.uleb128 0x5
 1991 0773 03       		.byte	0x3
 1992 0774 00000000 		.4byte	CapSense_widgetNumber
 1993 0778 1A       		.uleb128 0x1a
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 72


 1994 0779 AD060000 		.4byte	0x6ad
 1995 077d 1B       		.uleb128 0x1b
 1996 077e 04030000 		.4byte	.LASF62
 1997 0782 04030000 		.4byte	.LASF62
 1998 0786 03       		.byte	0x3
 1999 0787 7D       		.byte	0x7d
 2000 0788 1B       		.uleb128 0x1b
 2001 0789 EC020000 		.4byte	.LASF63
 2002 078d EC020000 		.4byte	.LASF63
 2003 0791 04       		.byte	0x4
 2004 0792 27       		.byte	0x27
 2005 0793 1B       		.uleb128 0x1b
 2006 0794 C4000000 		.4byte	.LASF64
 2007 0798 C4000000 		.4byte	.LASF64
 2008 079c 05       		.byte	0x5
 2009 079d 46       		.byte	0x46
 2010 079e 1B       		.uleb128 0x1b
 2011 079f 6B050000 		.4byte	.LASF65
 2012 07a3 6B050000 		.4byte	.LASF65
 2013 07a7 06       		.byte	0x6
 2014 07a8 46       		.byte	0x46
 2015 07a9 1B       		.uleb128 0x1b
 2016 07aa 14000000 		.4byte	.LASF66
 2017 07ae 14000000 		.4byte	.LASF66
 2018 07b2 03       		.byte	0x3
 2019 07b3 7E       		.byte	0x7e
 2020 07b4 1B       		.uleb128 0x1b
 2021 07b5 99050000 		.4byte	.LASF67
 2022 07b9 99050000 		.4byte	.LASF67
 2023 07bd 07       		.byte	0x7
 2024 07be 1C       		.byte	0x1c
 2025 07bf 1B       		.uleb128 0x1b
 2026 07c0 5B060000 		.4byte	.LASF68
 2027 07c4 5B060000 		.4byte	.LASF68
 2028 07c8 07       		.byte	0x7
 2029 07c9 1D       		.byte	0x1d
 2030 07ca 1B       		.uleb128 0x1b
 2031 07cb 2E030000 		.4byte	.LASF69
 2032 07cf 2E030000 		.4byte	.LASF69
 2033 07d3 04       		.byte	0x4
 2034 07d4 28       		.byte	0x28
 2035 07d5 1B       		.uleb128 0x1b
 2036 07d6 E0050000 		.4byte	.LASF70
 2037 07da E0050000 		.4byte	.LASF70
 2038 07de 05       		.byte	0x5
 2039 07df 40       		.byte	0x40
 2040 07e0 1B       		.uleb128 0x1b
 2041 07e1 D5010000 		.4byte	.LASF71
 2042 07e5 D5010000 		.4byte	.LASF71
 2043 07e9 06       		.byte	0x6
 2044 07ea 3D       		.byte	0x3d
 2045 07eb 1B       		.uleb128 0x1b
 2046 07ec 8A000000 		.4byte	.LASF72
 2047 07f0 8A000000 		.4byte	.LASF72
 2048 07f4 06       		.byte	0x6
 2049 07f5 41       		.byte	0x41
 2050 07f6 1B       		.uleb128 0x1b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 73


 2051 07f7 1F020000 		.4byte	.LASF73
 2052 07fb 1F020000 		.4byte	.LASF73
 2053 07ff 03       		.byte	0x3
 2054 0800 88       		.byte	0x88
 2055 0801 1B       		.uleb128 0x1b
 2056 0802 02040000 		.4byte	.LASF74
 2057 0806 02040000 		.4byte	.LASF74
 2058 080a 03       		.byte	0x3
 2059 080b 8B       		.byte	0x8b
 2060 080c 1B       		.uleb128 0x1b
 2061 080d A2010000 		.4byte	.LASF75
 2062 0811 A2010000 		.4byte	.LASF75
 2063 0815 08       		.byte	0x8
 2064 0816 1F       		.byte	0x1f
 2065 0817 1B       		.uleb128 0x1b
 2066 0818 33020000 		.4byte	.LASF76
 2067 081c 33020000 		.4byte	.LASF76
 2068 0820 05       		.byte	0x5
 2069 0821 45       		.byte	0x45
 2070 0822 1B       		.uleb128 0x1b
 2071 0823 64040000 		.4byte	.LASF77
 2072 0827 64040000 		.4byte	.LASF77
 2073 082b 06       		.byte	0x6
 2074 082c 45       		.byte	0x45
 2075 082d 1B       		.uleb128 0x1b
 2076 082e E5030000 		.4byte	.LASF78
 2077 0832 E5030000 		.4byte	.LASF78
 2078 0836 06       		.byte	0x6
 2079 0837 3F       		.byte	0x3f
 2080 0838 1B       		.uleb128 0x1b
 2081 0839 9A020000 		.4byte	.LASF79
 2082 083d 9A020000 		.4byte	.LASF79
 2083 0841 06       		.byte	0x6
 2084 0842 40       		.byte	0x40
 2085 0843 1C       		.uleb128 0x1c
 2086 0844 6B030000 		.4byte	.LASF80
 2087 0848 6B030000 		.4byte	.LASF80
 2088 084c 09       		.byte	0x9
 2089 084d B002     		.2byte	0x2b0
 2090 084f 00       		.byte	0
 2091              		.section	.debug_abbrev,"",%progbits
 2092              	.Ldebug_abbrev0:
 2093 0000 01       		.uleb128 0x1
 2094 0001 11       		.uleb128 0x11
 2095 0002 01       		.byte	0x1
 2096 0003 25       		.uleb128 0x25
 2097 0004 0E       		.uleb128 0xe
 2098 0005 13       		.uleb128 0x13
 2099 0006 0B       		.uleb128 0xb
 2100 0007 03       		.uleb128 0x3
 2101 0008 0E       		.uleb128 0xe
 2102 0009 1B       		.uleb128 0x1b
 2103 000a 0E       		.uleb128 0xe
 2104 000b 55       		.uleb128 0x55
 2105 000c 17       		.uleb128 0x17
 2106 000d 11       		.uleb128 0x11
 2107 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 74


 2108 000f 10       		.uleb128 0x10
 2109 0010 17       		.uleb128 0x17
 2110 0011 00       		.byte	0
 2111 0012 00       		.byte	0
 2112 0013 02       		.uleb128 0x2
 2113 0014 24       		.uleb128 0x24
 2114 0015 00       		.byte	0
 2115 0016 0B       		.uleb128 0xb
 2116 0017 0B       		.uleb128 0xb
 2117 0018 3E       		.uleb128 0x3e
 2118 0019 0B       		.uleb128 0xb
 2119 001a 03       		.uleb128 0x3
 2120 001b 0E       		.uleb128 0xe
 2121 001c 00       		.byte	0
 2122 001d 00       		.byte	0
 2123 001e 03       		.uleb128 0x3
 2124 001f 24       		.uleb128 0x24
 2125 0020 00       		.byte	0
 2126 0021 0B       		.uleb128 0xb
 2127 0022 0B       		.uleb128 0xb
 2128 0023 3E       		.uleb128 0x3e
 2129 0024 0B       		.uleb128 0xb
 2130 0025 03       		.uleb128 0x3
 2131 0026 08       		.uleb128 0x8
 2132 0027 00       		.byte	0
 2133 0028 00       		.byte	0
 2134 0029 04       		.uleb128 0x4
 2135 002a 16       		.uleb128 0x16
 2136 002b 00       		.byte	0
 2137 002c 03       		.uleb128 0x3
 2138 002d 0E       		.uleb128 0xe
 2139 002e 3A       		.uleb128 0x3a
 2140 002f 0B       		.uleb128 0xb
 2141 0030 3B       		.uleb128 0x3b
 2142 0031 05       		.uleb128 0x5
 2143 0032 49       		.uleb128 0x49
 2144 0033 13       		.uleb128 0x13
 2145 0034 00       		.byte	0
 2146 0035 00       		.byte	0
 2147 0036 05       		.uleb128 0x5
 2148 0037 35       		.uleb128 0x35
 2149 0038 00       		.byte	0
 2150 0039 49       		.uleb128 0x49
 2151 003a 13       		.uleb128 0x13
 2152 003b 00       		.byte	0
 2153 003c 00       		.byte	0
 2154 003d 06       		.uleb128 0x6
 2155 003e 2E       		.uleb128 0x2e
 2156 003f 01       		.byte	0x1
 2157 0040 3F       		.uleb128 0x3f
 2158 0041 19       		.uleb128 0x19
 2159 0042 03       		.uleb128 0x3
 2160 0043 0E       		.uleb128 0xe
 2161 0044 3A       		.uleb128 0x3a
 2162 0045 0B       		.uleb128 0xb
 2163 0046 3B       		.uleb128 0x3b
 2164 0047 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 75


 2165 0048 27       		.uleb128 0x27
 2166 0049 19       		.uleb128 0x19
 2167 004a 11       		.uleb128 0x11
 2168 004b 01       		.uleb128 0x1
 2169 004c 12       		.uleb128 0x12
 2170 004d 06       		.uleb128 0x6
 2171 004e 40       		.uleb128 0x40
 2172 004f 18       		.uleb128 0x18
 2173 0050 9742     		.uleb128 0x2117
 2174 0052 19       		.uleb128 0x19
 2175 0053 01       		.uleb128 0x1
 2176 0054 13       		.uleb128 0x13
 2177 0055 00       		.byte	0
 2178 0056 00       		.byte	0
 2179 0057 07       		.uleb128 0x7
 2180 0058 34       		.uleb128 0x34
 2181 0059 00       		.byte	0
 2182 005a 03       		.uleb128 0x3
 2183 005b 0E       		.uleb128 0xe
 2184 005c 3A       		.uleb128 0x3a
 2185 005d 0B       		.uleb128 0xb
 2186 005e 3B       		.uleb128 0x3b
 2187 005f 05       		.uleb128 0x5
 2188 0060 49       		.uleb128 0x49
 2189 0061 13       		.uleb128 0x13
 2190 0062 02       		.uleb128 0x2
 2191 0063 17       		.uleb128 0x17
 2192 0064 00       		.byte	0
 2193 0065 00       		.byte	0
 2194 0066 08       		.uleb128 0x8
 2195 0067 898201   		.uleb128 0x4109
 2196 006a 00       		.byte	0
 2197 006b 11       		.uleb128 0x11
 2198 006c 01       		.uleb128 0x1
 2199 006d 31       		.uleb128 0x31
 2200 006e 13       		.uleb128 0x13
 2201 006f 00       		.byte	0
 2202 0070 00       		.byte	0
 2203 0071 09       		.uleb128 0x9
 2204 0072 898201   		.uleb128 0x4109
 2205 0075 01       		.byte	0x1
 2206 0076 11       		.uleb128 0x11
 2207 0077 01       		.uleb128 0x1
 2208 0078 31       		.uleb128 0x31
 2209 0079 13       		.uleb128 0x13
 2210 007a 00       		.byte	0
 2211 007b 00       		.byte	0
 2212 007c 0A       		.uleb128 0xa
 2213 007d 8A8201   		.uleb128 0x410a
 2214 0080 00       		.byte	0
 2215 0081 02       		.uleb128 0x2
 2216 0082 18       		.uleb128 0x18
 2217 0083 9142     		.uleb128 0x2111
 2218 0085 18       		.uleb128 0x18
 2219 0086 00       		.byte	0
 2220 0087 00       		.byte	0
 2221 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 76


 2222 0089 2E       		.uleb128 0x2e
 2223 008a 01       		.byte	0x1
 2224 008b 3F       		.uleb128 0x3f
 2225 008c 19       		.uleb128 0x19
 2226 008d 03       		.uleb128 0x3
 2227 008e 0E       		.uleb128 0xe
 2228 008f 3A       		.uleb128 0x3a
 2229 0090 0B       		.uleb128 0xb
 2230 0091 3B       		.uleb128 0x3b
 2231 0092 05       		.uleb128 0x5
 2232 0093 27       		.uleb128 0x27
 2233 0094 19       		.uleb128 0x19
 2234 0095 49       		.uleb128 0x49
 2235 0096 13       		.uleb128 0x13
 2236 0097 11       		.uleb128 0x11
 2237 0098 01       		.uleb128 0x1
 2238 0099 12       		.uleb128 0x12
 2239 009a 06       		.uleb128 0x6
 2240 009b 40       		.uleb128 0x40
 2241 009c 18       		.uleb128 0x18
 2242 009d 9742     		.uleb128 0x2117
 2243 009f 19       		.uleb128 0x19
 2244 00a0 01       		.uleb128 0x1
 2245 00a1 13       		.uleb128 0x13
 2246 00a2 00       		.byte	0
 2247 00a3 00       		.byte	0
 2248 00a4 0C       		.uleb128 0xc
 2249 00a5 05       		.uleb128 0x5
 2250 00a6 00       		.byte	0
 2251 00a7 03       		.uleb128 0x3
 2252 00a8 0E       		.uleb128 0xe
 2253 00a9 3A       		.uleb128 0x3a
 2254 00aa 0B       		.uleb128 0xb
 2255 00ab 3B       		.uleb128 0x3b
 2256 00ac 05       		.uleb128 0x5
 2257 00ad 49       		.uleb128 0x49
 2258 00ae 13       		.uleb128 0x13
 2259 00af 02       		.uleb128 0x2
 2260 00b0 17       		.uleb128 0x17
 2261 00b1 00       		.byte	0
 2262 00b2 00       		.byte	0
 2263 00b3 0D       		.uleb128 0xd
 2264 00b4 34       		.uleb128 0x34
 2265 00b5 00       		.byte	0
 2266 00b6 03       		.uleb128 0x3
 2267 00b7 08       		.uleb128 0x8
 2268 00b8 3A       		.uleb128 0x3a
 2269 00b9 0B       		.uleb128 0xb
 2270 00ba 3B       		.uleb128 0x3b
 2271 00bb 05       		.uleb128 0x5
 2272 00bc 49       		.uleb128 0x49
 2273 00bd 13       		.uleb128 0x13
 2274 00be 02       		.uleb128 0x2
 2275 00bf 18       		.uleb128 0x18
 2276 00c0 00       		.byte	0
 2277 00c1 00       		.byte	0
 2278 00c2 0E       		.uleb128 0xe
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 77


 2279 00c3 2E       		.uleb128 0x2e
 2280 00c4 00       		.byte	0
 2281 00c5 3F       		.uleb128 0x3f
 2282 00c6 19       		.uleb128 0x19
 2283 00c7 03       		.uleb128 0x3
 2284 00c8 0E       		.uleb128 0xe
 2285 00c9 3A       		.uleb128 0x3a
 2286 00ca 0B       		.uleb128 0xb
 2287 00cb 3B       		.uleb128 0x3b
 2288 00cc 05       		.uleb128 0x5
 2289 00cd 27       		.uleb128 0x27
 2290 00ce 19       		.uleb128 0x19
 2291 00cf 49       		.uleb128 0x49
 2292 00d0 13       		.uleb128 0x13
 2293 00d1 11       		.uleb128 0x11
 2294 00d2 01       		.uleb128 0x1
 2295 00d3 12       		.uleb128 0x12
 2296 00d4 06       		.uleb128 0x6
 2297 00d5 40       		.uleb128 0x40
 2298 00d6 18       		.uleb128 0x18
 2299 00d7 9742     		.uleb128 0x2117
 2300 00d9 19       		.uleb128 0x19
 2301 00da 00       		.byte	0
 2302 00db 00       		.byte	0
 2303 00dc 0F       		.uleb128 0xf
 2304 00dd 34       		.uleb128 0x34
 2305 00de 00       		.byte	0
 2306 00df 03       		.uleb128 0x3
 2307 00e0 08       		.uleb128 0x8
 2308 00e1 3A       		.uleb128 0x3a
 2309 00e2 0B       		.uleb128 0xb
 2310 00e3 3B       		.uleb128 0x3b
 2311 00e4 05       		.uleb128 0x5
 2312 00e5 49       		.uleb128 0x49
 2313 00e6 13       		.uleb128 0x13
 2314 00e7 02       		.uleb128 0x2
 2315 00e8 17       		.uleb128 0x17
 2316 00e9 00       		.byte	0
 2317 00ea 00       		.byte	0
 2318 00eb 10       		.uleb128 0x10
 2319 00ec 898201   		.uleb128 0x4109
 2320 00ef 01       		.byte	0x1
 2321 00f0 11       		.uleb128 0x11
 2322 00f1 01       		.uleb128 0x1
 2323 00f2 31       		.uleb128 0x31
 2324 00f3 13       		.uleb128 0x13
 2325 00f4 01       		.uleb128 0x1
 2326 00f5 13       		.uleb128 0x13
 2327 00f6 00       		.byte	0
 2328 00f7 00       		.byte	0
 2329 00f8 11       		.uleb128 0x11
 2330 00f9 05       		.uleb128 0x5
 2331 00fa 00       		.byte	0
 2332 00fb 03       		.uleb128 0x3
 2333 00fc 0E       		.uleb128 0xe
 2334 00fd 3A       		.uleb128 0x3a
 2335 00fe 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 78


 2336 00ff 3B       		.uleb128 0x3b
 2337 0100 05       		.uleb128 0x5
 2338 0101 49       		.uleb128 0x49
 2339 0102 13       		.uleb128 0x13
 2340 0103 02       		.uleb128 0x2
 2341 0104 18       		.uleb128 0x18
 2342 0105 00       		.byte	0
 2343 0106 00       		.byte	0
 2344 0107 12       		.uleb128 0x12
 2345 0108 05       		.uleb128 0x5
 2346 0109 00       		.byte	0
 2347 010a 03       		.uleb128 0x3
 2348 010b 08       		.uleb128 0x8
 2349 010c 3A       		.uleb128 0x3a
 2350 010d 0B       		.uleb128 0xb
 2351 010e 3B       		.uleb128 0x3b
 2352 010f 05       		.uleb128 0x5
 2353 0110 49       		.uleb128 0x49
 2354 0111 13       		.uleb128 0x13
 2355 0112 02       		.uleb128 0x2
 2356 0113 18       		.uleb128 0x18
 2357 0114 00       		.byte	0
 2358 0115 00       		.byte	0
 2359 0116 13       		.uleb128 0x13
 2360 0117 2E       		.uleb128 0x2e
 2361 0118 01       		.byte	0x1
 2362 0119 3F       		.uleb128 0x3f
 2363 011a 19       		.uleb128 0x19
 2364 011b 03       		.uleb128 0x3
 2365 011c 0E       		.uleb128 0xe
 2366 011d 3A       		.uleb128 0x3a
 2367 011e 0B       		.uleb128 0xb
 2368 011f 3B       		.uleb128 0x3b
 2369 0120 0B       		.uleb128 0xb
 2370 0121 27       		.uleb128 0x27
 2371 0122 19       		.uleb128 0x19
 2372 0123 11       		.uleb128 0x11
 2373 0124 01       		.uleb128 0x1
 2374 0125 12       		.uleb128 0x12
 2375 0126 06       		.uleb128 0x6
 2376 0127 40       		.uleb128 0x40
 2377 0128 18       		.uleb128 0x18
 2378 0129 9742     		.uleb128 0x2117
 2379 012b 19       		.uleb128 0x19
 2380 012c 01       		.uleb128 0x1
 2381 012d 13       		.uleb128 0x13
 2382 012e 00       		.byte	0
 2383 012f 00       		.byte	0
 2384 0130 14       		.uleb128 0x14
 2385 0131 34       		.uleb128 0x34
 2386 0132 00       		.byte	0
 2387 0133 03       		.uleb128 0x3
 2388 0134 0E       		.uleb128 0xe
 2389 0135 3A       		.uleb128 0x3a
 2390 0136 0B       		.uleb128 0xb
 2391 0137 3B       		.uleb128 0x3b
 2392 0138 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 79


 2393 0139 49       		.uleb128 0x49
 2394 013a 13       		.uleb128 0x13
 2395 013b 02       		.uleb128 0x2
 2396 013c 17       		.uleb128 0x17
 2397 013d 00       		.byte	0
 2398 013e 00       		.byte	0
 2399 013f 15       		.uleb128 0x15
 2400 0140 34       		.uleb128 0x34
 2401 0141 00       		.byte	0
 2402 0142 03       		.uleb128 0x3
 2403 0143 0E       		.uleb128 0xe
 2404 0144 3A       		.uleb128 0x3a
 2405 0145 0B       		.uleb128 0xb
 2406 0146 3B       		.uleb128 0x3b
 2407 0147 0B       		.uleb128 0xb
 2408 0148 49       		.uleb128 0x49
 2409 0149 13       		.uleb128 0x13
 2410 014a 02       		.uleb128 0x2
 2411 014b 18       		.uleb128 0x18
 2412 014c 00       		.byte	0
 2413 014d 00       		.byte	0
 2414 014e 16       		.uleb128 0x16
 2415 014f 34       		.uleb128 0x34
 2416 0150 00       		.byte	0
 2417 0151 03       		.uleb128 0x3
 2418 0152 0E       		.uleb128 0xe
 2419 0153 3A       		.uleb128 0x3a
 2420 0154 0B       		.uleb128 0xb
 2421 0155 3B       		.uleb128 0x3b
 2422 0156 0B       		.uleb128 0xb
 2423 0157 49       		.uleb128 0x49
 2424 0158 13       		.uleb128 0x13
 2425 0159 3F       		.uleb128 0x3f
 2426 015a 19       		.uleb128 0x19
 2427 015b 02       		.uleb128 0x2
 2428 015c 18       		.uleb128 0x18
 2429 015d 00       		.byte	0
 2430 015e 00       		.byte	0
 2431 015f 17       		.uleb128 0x17
 2432 0160 01       		.uleb128 0x1
 2433 0161 01       		.byte	0x1
 2434 0162 49       		.uleb128 0x49
 2435 0163 13       		.uleb128 0x13
 2436 0164 01       		.uleb128 0x1
 2437 0165 13       		.uleb128 0x13
 2438 0166 00       		.byte	0
 2439 0167 00       		.byte	0
 2440 0168 18       		.uleb128 0x18
 2441 0169 21       		.uleb128 0x21
 2442 016a 00       		.byte	0
 2443 016b 49       		.uleb128 0x49
 2444 016c 13       		.uleb128 0x13
 2445 016d 2F       		.uleb128 0x2f
 2446 016e 0B       		.uleb128 0xb
 2447 016f 00       		.byte	0
 2448 0170 00       		.byte	0
 2449 0171 19       		.uleb128 0x19
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 80


 2450 0172 0F       		.uleb128 0xf
 2451 0173 00       		.byte	0
 2452 0174 0B       		.uleb128 0xb
 2453 0175 0B       		.uleb128 0xb
 2454 0176 49       		.uleb128 0x49
 2455 0177 13       		.uleb128 0x13
 2456 0178 00       		.byte	0
 2457 0179 00       		.byte	0
 2458 017a 1A       		.uleb128 0x1a
 2459 017b 26       		.uleb128 0x26
 2460 017c 00       		.byte	0
 2461 017d 49       		.uleb128 0x49
 2462 017e 13       		.uleb128 0x13
 2463 017f 00       		.byte	0
 2464 0180 00       		.byte	0
 2465 0181 1B       		.uleb128 0x1b
 2466 0182 2E       		.uleb128 0x2e
 2467 0183 00       		.byte	0
 2468 0184 3F       		.uleb128 0x3f
 2469 0185 19       		.uleb128 0x19
 2470 0186 3C       		.uleb128 0x3c
 2471 0187 19       		.uleb128 0x19
 2472 0188 6E       		.uleb128 0x6e
 2473 0189 0E       		.uleb128 0xe
 2474 018a 03       		.uleb128 0x3
 2475 018b 0E       		.uleb128 0xe
 2476 018c 3A       		.uleb128 0x3a
 2477 018d 0B       		.uleb128 0xb
 2478 018e 3B       		.uleb128 0x3b
 2479 018f 0B       		.uleb128 0xb
 2480 0190 00       		.byte	0
 2481 0191 00       		.byte	0
 2482 0192 1C       		.uleb128 0x1c
 2483 0193 2E       		.uleb128 0x2e
 2484 0194 00       		.byte	0
 2485 0195 3F       		.uleb128 0x3f
 2486 0196 19       		.uleb128 0x19
 2487 0197 3C       		.uleb128 0x3c
 2488 0198 19       		.uleb128 0x19
 2489 0199 6E       		.uleb128 0x6e
 2490 019a 0E       		.uleb128 0xe
 2491 019b 03       		.uleb128 0x3
 2492 019c 0E       		.uleb128 0xe
 2493 019d 3A       		.uleb128 0x3a
 2494 019e 0B       		.uleb128 0xb
 2495 019f 3B       		.uleb128 0x3b
 2496 01a0 05       		.uleb128 0x5
 2497 01a1 00       		.byte	0
 2498 01a2 00       		.byte	0
 2499 01a3 00       		.byte	0
 2500              		.section	.debug_loc,"",%progbits
 2501              	.Ldebug_loc0:
 2502              	.LLST0:
 2503 0000 08000000 		.4byte	.LVL1
 2504 0004 70000000 		.4byte	.LVL6
 2505 0008 0100     		.2byte	0x1
 2506 000a 54       		.byte	0x54
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 81


 2507 000b 00000000 		.4byte	0
 2508 000f 00000000 		.4byte	0
 2509              	.LLST1:
 2510 0013 00000000 		.4byte	.LVL7
 2511 0017 00000000 		.4byte	.LVL7
 2512 001b 0100     		.2byte	0x1
 2513 001d 50       		.byte	0x50
 2514 001e 00000000 		.4byte	.LVL7
 2515 0022 04000000 		.4byte	.LVL8
 2516 0026 0400     		.2byte	0x4
 2517 0028 F3       		.byte	0xf3
 2518 0029 01       		.uleb128 0x1
 2519 002a 50       		.byte	0x50
 2520 002b 9F       		.byte	0x9f
 2521 002c 04000000 		.4byte	.LVL8
 2522 0030 20000000 		.4byte	.LFE4
 2523 0034 0100     		.2byte	0x1
 2524 0036 50       		.byte	0x50
 2525 0037 00000000 		.4byte	0
 2526 003b 00000000 		.4byte	0
 2527              	.LLST2:
 2528 003f 12000000 		.4byte	.LVL9
 2529 0043 1A000000 		.4byte	.LVL10
 2530 0047 0100     		.2byte	0x1
 2531 0049 53       		.byte	0x53
 2532 004a 00000000 		.4byte	0
 2533 004e 00000000 		.4byte	0
 2534              	.LLST3:
 2535 0052 00000000 		.4byte	.LVL11
 2536 0056 06000000 		.4byte	.LVL12
 2537 005a 0100     		.2byte	0x1
 2538 005c 50       		.byte	0x50
 2539 005d 06000000 		.4byte	.LVL12
 2540 0061 0C000000 		.4byte	.LFE9
 2541 0065 0400     		.2byte	0x4
 2542 0067 F3       		.byte	0xf3
 2543 0068 01       		.uleb128 0x1
 2544 0069 50       		.byte	0x50
 2545 006a 9F       		.byte	0x9f
 2546 006b 00000000 		.4byte	0
 2547 006f 00000000 		.4byte	0
 2548              	.LLST4:
 2549 0073 00000000 		.4byte	.LVL13
 2550 0077 2B000000 		.4byte	.LVL17-1
 2551 007b 0100     		.2byte	0x1
 2552 007d 50       		.byte	0x50
 2553 007e 2B000000 		.4byte	.LVL17-1
 2554 0082 34000000 		.4byte	.LFE11
 2555 0086 0400     		.2byte	0x4
 2556 0088 F3       		.byte	0xf3
 2557 0089 01       		.uleb128 0x1
 2558 008a 50       		.byte	0x50
 2559 008b 9F       		.byte	0x9f
 2560 008c 00000000 		.4byte	0
 2561 0090 00000000 		.4byte	0
 2562              	.LLST5:
 2563 0094 06000000 		.4byte	.LVL14
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 82


 2564 0098 2B000000 		.4byte	.LVL17-1
 2565 009c 0100     		.2byte	0x1
 2566 009e 51       		.byte	0x51
 2567 009f 00000000 		.4byte	0
 2568 00a3 00000000 		.4byte	0
 2569              	.LLST6:
 2570 00a7 0A000000 		.4byte	.LVL15
 2571 00ab 2E000000 		.4byte	.LVL18
 2572 00af 0100     		.2byte	0x1
 2573 00b1 54       		.byte	0x54
 2574 00b2 00000000 		.4byte	0
 2575 00b6 00000000 		.4byte	0
 2576              	.LLST7:
 2577 00ba 00000000 		.4byte	.LVL19
 2578 00be 0F000000 		.4byte	.LVL22-1
 2579 00c2 0100     		.2byte	0x1
 2580 00c4 50       		.byte	0x50
 2581 00c5 0F000000 		.4byte	.LVL22-1
 2582 00c9 38000000 		.4byte	.LFE12
 2583 00cd 0400     		.2byte	0x4
 2584 00cf F3       		.byte	0xf3
 2585 00d0 01       		.uleb128 0x1
 2586 00d1 50       		.byte	0x50
 2587 00d2 9F       		.byte	0x9f
 2588 00d3 00000000 		.4byte	0
 2589 00d7 00000000 		.4byte	0
 2590              	.LLST8:
 2591 00db 08000000 		.4byte	.LVL20
 2592 00df 1C000000 		.4byte	.LVL24
 2593 00e3 0100     		.2byte	0x1
 2594 00e5 54       		.byte	0x54
 2595 00e6 00000000 		.4byte	0
 2596 00ea 00000000 		.4byte	0
 2597              	.LLST9:
 2598 00ee 0C000000 		.4byte	.LVL21
 2599 00f2 32000000 		.4byte	.LVL25
 2600 00f6 0100     		.2byte	0x1
 2601 00f8 56       		.byte	0x56
 2602 00f9 00000000 		.4byte	0
 2603 00fd 00000000 		.4byte	0
 2604              	.LLST10:
 2605 0101 02000000 		.4byte	.LVL26
 2606 0105 06000000 		.4byte	.LVL27
 2607 0109 0200     		.2byte	0x2
 2608 010b 30       		.byte	0x30
 2609 010c 9F       		.byte	0x9f
 2610 010d 06000000 		.4byte	.LVL27
 2611 0111 0E000000 		.4byte	.LVL29
 2612 0115 0100     		.2byte	0x1
 2613 0117 54       		.byte	0x54
 2614 0118 10000000 		.4byte	.LVL30
 2615 011c 16000000 		.4byte	.LFE10
 2616 0120 0100     		.2byte	0x1
 2617 0122 54       		.byte	0x54
 2618 0123 00000000 		.4byte	0
 2619 0127 00000000 		.4byte	0
 2620              	.LLST11:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 83


 2621 012b 00000000 		.4byte	.LVL35
 2622 012f 27000000 		.4byte	.LVL36-1
 2623 0133 0100     		.2byte	0x1
 2624 0135 50       		.byte	0x50
 2625 0136 27000000 		.4byte	.LVL36-1
 2626 013a 4C000000 		.4byte	.LFE14
 2627 013e 0400     		.2byte	0x4
 2628 0140 F3       		.byte	0xf3
 2629 0141 01       		.uleb128 0x1
 2630 0142 50       		.byte	0x50
 2631 0143 9F       		.byte	0x9f
 2632 0144 00000000 		.4byte	0
 2633 0148 00000000 		.4byte	0
 2634              	.LLST12:
 2635 014c 00000000 		.4byte	.LVL38
 2636 0150 08000000 		.4byte	.LVL39
 2637 0154 0100     		.2byte	0x1
 2638 0156 50       		.byte	0x50
 2639 0157 08000000 		.4byte	.LVL39
 2640 015b 14000000 		.4byte	.LFE15
 2641 015f 0400     		.2byte	0x4
 2642 0161 F3       		.byte	0xf3
 2643 0162 01       		.uleb128 0x1
 2644 0163 50       		.byte	0x50
 2645 0164 9F       		.byte	0x9f
 2646 0165 00000000 		.4byte	0
 2647 0169 00000000 		.4byte	0
 2648              	.LLST13:
 2649 016d 00000000 		.4byte	.LVL40
 2650 0171 12000000 		.4byte	.LVL42
 2651 0175 0100     		.2byte	0x1
 2652 0177 50       		.byte	0x50
 2653 0178 12000000 		.4byte	.LVL42
 2654 017c 38000000 		.4byte	.LFE5
 2655 0180 0400     		.2byte	0x4
 2656 0182 F3       		.byte	0xf3
 2657 0183 01       		.uleb128 0x1
 2658 0184 50       		.byte	0x50
 2659 0185 9F       		.byte	0x9f
 2660 0186 00000000 		.4byte	0
 2661 018a 00000000 		.4byte	0
 2662              	.LLST14:
 2663 018e 0C000000 		.4byte	.LVL41
 2664 0192 18000000 		.4byte	.LVL44
 2665 0196 0100     		.2byte	0x1
 2666 0198 55       		.byte	0x55
 2667 0199 18000000 		.4byte	.LVL44
 2668 019d 28000000 		.4byte	.LVL46
 2669 01a1 0900     		.2byte	0x9
 2670 01a3 75       		.byte	0x75
 2671 01a4 00       		.sleb128 0
 2672 01a5 03       		.byte	0x3
 2673 01a6 00000000 		.4byte	.LANCHOR0
 2674 01aa 1C       		.byte	0x1c
 2675 01ab 9F       		.byte	0x9f
 2676 01ac 00000000 		.4byte	0
 2677 01b0 00000000 		.4byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 84


 2678              	.LLST15:
 2679 01b4 00000000 		.4byte	.LVL47
 2680 01b8 07000000 		.4byte	.LVL48-1
 2681 01bc 0100     		.2byte	0x1
 2682 01be 50       		.byte	0x50
 2683 01bf 07000000 		.4byte	.LVL48-1
 2684 01c3 34000000 		.4byte	.LFE13
 2685 01c7 0400     		.2byte	0x4
 2686 01c9 F3       		.byte	0xf3
 2687 01ca 01       		.uleb128 0x1
 2688 01cb 50       		.byte	0x50
 2689 01cc 9F       		.byte	0x9f
 2690 01cd 00000000 		.4byte	0
 2691 01d1 00000000 		.4byte	0
 2692              	.LLST16:
 2693 01d5 00000000 		.4byte	.LVL50
 2694 01d9 13000000 		.4byte	.LVL51-1
 2695 01dd 0100     		.2byte	0x1
 2696 01df 50       		.byte	0x50
 2697 01e0 13000000 		.4byte	.LVL51-1
 2698 01e4 20000000 		.4byte	.LFE6
 2699 01e8 0400     		.2byte	0x4
 2700 01ea F3       		.byte	0xf3
 2701 01eb 01       		.uleb128 0x1
 2702 01ec 50       		.byte	0x50
 2703 01ed 9F       		.byte	0x9f
 2704 01ee 00000000 		.4byte	0
 2705 01f2 00000000 		.4byte	0
 2706              	.LLST17:
 2707 01f6 00000000 		.4byte	.LVL54
 2708 01fa 04000000 		.4byte	.LVL55
 2709 01fe 0200     		.2byte	0x2
 2710 0200 30       		.byte	0x30
 2711 0201 9F       		.byte	0x9f
 2712 0202 04000000 		.4byte	.LVL55
 2713 0206 0C000000 		.4byte	.LFE16
 2714 020a 0100     		.2byte	0x1
 2715 020c 50       		.byte	0x50
 2716 020d 00000000 		.4byte	0
 2717 0211 00000000 		.4byte	0
 2718              	.LLST18:
 2719 0215 20000000 		.4byte	.LVL60
 2720 0219 37000000 		.4byte	.LVL61-1
 2721 021d 0100     		.2byte	0x1
 2722 021f 50       		.byte	0x50
 2723 0220 52000000 		.4byte	.LVL62
 2724 0224 69000000 		.4byte	.LVL63-1
 2725 0228 0100     		.2byte	0x1
 2726 022a 50       		.byte	0x50
 2727 022b 00000000 		.4byte	0
 2728 022f 00000000 		.4byte	0
 2729              		.section	.debug_aranges,"",%progbits
 2730 0000 AC000000 		.4byte	0xac
 2731 0004 0200     		.2byte	0x2
 2732 0006 00000000 		.4byte	.Ldebug_info0
 2733 000a 04       		.byte	0x4
 2734 000b 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 85


 2735 000c 0000     		.2byte	0
 2736 000e 0000     		.2byte	0
 2737 0010 00000000 		.4byte	.LFB1
 2738 0014 80000000 		.4byte	.LFE1-.LFB1
 2739 0018 00000000 		.4byte	.LFB4
 2740 001c 20000000 		.4byte	.LFE4-.LFB4
 2741 0020 00000000 		.4byte	.LFB8
 2742 0024 10000000 		.4byte	.LFE8-.LFB8
 2743 0028 00000000 		.4byte	.LFB9
 2744 002c 0C000000 		.4byte	.LFE9-.LFB9
 2745 0030 00000000 		.4byte	.LFB11
 2746 0034 34000000 		.4byte	.LFE11-.LFB11
 2747 0038 00000000 		.4byte	.LFB12
 2748 003c 38000000 		.4byte	.LFE12-.LFB12
 2749 0040 00000000 		.4byte	.LFB10
 2750 0044 16000000 		.4byte	.LFE10-.LFB10
 2751 0048 00000000 		.4byte	.LFB3
 2752 004c 80000000 		.4byte	.LFE3-.LFB3
 2753 0050 00000000 		.4byte	.LFB14
 2754 0054 4C000000 		.4byte	.LFE14-.LFB14
 2755 0058 00000000 		.4byte	.LFB15
 2756 005c 14000000 		.4byte	.LFE15-.LFB15
 2757 0060 00000000 		.4byte	.LFB5
 2758 0064 38000000 		.4byte	.LFE5-.LFB5
 2759 0068 00000000 		.4byte	.LFB13
 2760 006c 34000000 		.4byte	.LFE13-.LFB13
 2761 0070 00000000 		.4byte	.LFB6
 2762 0074 20000000 		.4byte	.LFE6-.LFB6
 2763 0078 00000000 		.4byte	.LFB7
 2764 007c 38000000 		.4byte	.LFE7-.LFB7
 2765 0080 00000000 		.4byte	.LFB16
 2766 0084 0C000000 		.4byte	.LFE16-.LFB16
 2767 0088 00000000 		.4byte	.LFB17
 2768 008c 0C000000 		.4byte	.LFE17-.LFB17
 2769 0090 00000000 		.4byte	.LFB18
 2770 0094 20000000 		.4byte	.LFE18-.LFB18
 2771 0098 00000000 		.4byte	.LFB0
 2772 009c FC000000 		.4byte	.LFE0-.LFB0
 2773 00a0 00000000 		.4byte	.LFB2
 2774 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2775 00a8 00000000 		.4byte	0
 2776 00ac 00000000 		.4byte	0
 2777              		.section	.debug_ranges,"",%progbits
 2778              	.Ldebug_ranges0:
 2779 0000 00000000 		.4byte	.LFB1
 2780 0004 80000000 		.4byte	.LFE1
 2781 0008 00000000 		.4byte	.LFB4
 2782 000c 20000000 		.4byte	.LFE4
 2783 0010 00000000 		.4byte	.LFB8
 2784 0014 10000000 		.4byte	.LFE8
 2785 0018 00000000 		.4byte	.LFB9
 2786 001c 0C000000 		.4byte	.LFE9
 2787 0020 00000000 		.4byte	.LFB11
 2788 0024 34000000 		.4byte	.LFE11
 2789 0028 00000000 		.4byte	.LFB12
 2790 002c 38000000 		.4byte	.LFE12
 2791 0030 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 86


 2792 0034 16000000 		.4byte	.LFE10
 2793 0038 00000000 		.4byte	.LFB3
 2794 003c 80000000 		.4byte	.LFE3
 2795 0040 00000000 		.4byte	.LFB14
 2796 0044 4C000000 		.4byte	.LFE14
 2797 0048 00000000 		.4byte	.LFB15
 2798 004c 14000000 		.4byte	.LFE15
 2799 0050 00000000 		.4byte	.LFB5
 2800 0054 38000000 		.4byte	.LFE5
 2801 0058 00000000 		.4byte	.LFB13
 2802 005c 34000000 		.4byte	.LFE13
 2803 0060 00000000 		.4byte	.LFB6
 2804 0064 20000000 		.4byte	.LFE6
 2805 0068 00000000 		.4byte	.LFB7
 2806 006c 38000000 		.4byte	.LFE7
 2807 0070 00000000 		.4byte	.LFB16
 2808 0074 0C000000 		.4byte	.LFE16
 2809 0078 00000000 		.4byte	.LFB17
 2810 007c 0C000000 		.4byte	.LFE17
 2811 0080 00000000 		.4byte	.LFB18
 2812 0084 20000000 		.4byte	.LFE18
 2813 0088 00000000 		.4byte	.LFB0
 2814 008c FC000000 		.4byte	.LFE0
 2815 0090 00000000 		.4byte	.LFB2
 2816 0094 2C000000 		.4byte	.LFE2
 2817 0098 00000000 		.4byte	0
 2818 009c 00000000 		.4byte	0
 2819              		.section	.debug_line,"",%progbits
 2820              	.Ldebug_line0:
 2821 0000 B4020000 		.section	.debug_str,"MS",%progbits,1
 2821      0200C900 
 2821      00000201 
 2821      FB0E0D00 
 2821      01010101 
 2822              	.LASF10:
 2823 0000 75696E74 		.ascii	"uint16\000"
 2823      313600
 2824              	.LASF50:
 2825 0007 43617053 		.ascii	"CapSense_csv\000"
 2825      656E7365 
 2825      5F637376 
 2825      00
 2826              	.LASF66:
 2827 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2827      69744372 
 2827      69746963 
 2827      616C5365 
 2827      6374696F 
 2828              	.LASF82:
 2829 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2829      72617465 
 2829      645F536F 
 2829      75726365 
 2829      5C50536F 
 2830              	.LASF48:
 2831 004c 43617053 		.ascii	"CapSense_initVar\000"
 2831      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 87


 2831      5F696E69 
 2831      74566172 
 2831      00
 2832              	.LASF54:
 2833 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2833      656E7365 
 2833      5F706354 
 2833      61626C65 
 2833      00
 2834              	.LASF49:
 2835 006e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2835      656E7365 
 2835      5F6C6F77 
 2835      4C657665 
 2835      6C54756E 
 2836              	.LASF72:
 2837 008a 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2837      656E7365 
 2837      5F496461 
 2837      63434830 
 2837      5F536574 
 2838              	.LASF24:
 2839 00a4 736E7349 		.ascii	"snsIndex\000"
 2839      6E646578 
 2839      00
 2840              	.LASF7:
 2841 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 2841      206C6F6E 
 2841      6720756E 
 2841      7369676E 
 2841      65642069 
 2842              	.LASF64:
 2843 00c4 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2843      656E7365 
 2843      5F436F6D 
 2843      70434830 
 2843      5F456E61 
 2844              	.LASF83:
 2845 00dc 433A5C55 		.ascii	"C:\\Users\\henrichsc\\Desktop\\School\\Senior_year\\"
 2845      73657273 
 2845      5C68656E 
 2845      72696368 
 2845      73635C44 
 2846 010a 66616C6C 		.ascii	"fall\\CE4920\\lab\\Milestone_6.cydsn\000"
 2846      5C434534 
 2846      3932305C 
 2846      6C61625C 
 2846      4D696C65 
 2847              	.LASF26:
 2848 012c 43617053 		.ascii	"CapSense_Enable\000"
 2848      656E7365 
 2848      5F456E61 
 2848      626C6500 
 2849              	.LASF34:
 2850 013c 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2850      656E7365 
 2850      5F536574 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 88


 2850      50726573 
 2850      63616C65 
 2851              	.LASF6:
 2852 0152 6C6F6E67 		.ascii	"long long int\000"
 2852      206C6F6E 
 2852      6720696E 
 2852      7400
 2853              	.LASF0:
 2854 0160 7369676E 		.ascii	"signed char\000"
 2854      65642063 
 2854      68617200 
 2855              	.LASF45:
 2856 016c 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2856      656E7365 
 2856      5F536574 
 2856      416E616C 
 2856      6F675377 
 2857              	.LASF4:
 2858 018d 6C6F6E67 		.ascii	"long int\000"
 2858      20696E74 
 2858      00
 2859              	.LASF16:
 2860 0196 72656731 		.ascii	"reg16\000"
 2860      3600
 2861              	.LASF9:
 2862 019c 75696E74 		.ascii	"uint8\000"
 2862      3800
 2863              	.LASF75:
 2864 01a2 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2864      656E7365 
 2864      5F414D75 
 2864      78434830 
 2864      5F496E69 
 2865              	.LASF13:
 2866 01b8 646F7562 		.ascii	"double\000"
 2866      6C6500
 2867              	.LASF27:
 2868 01bf 43617053 		.ascii	"CapSense_EnableSensor\000"
 2868      656E7365 
 2868      5F456E61 
 2868      626C6553 
 2868      656E736F 
 2869              	.LASF71:
 2870 01d5 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2870      656E7365 
 2870      5F496461 
 2870      63434830 
 2870      5F53746F 
 2871              	.LASF61:
 2872 01eb 43617053 		.ascii	"CapSense_widgetNumber\000"
 2872      656E7365 
 2872      5F776964 
 2872      6765744E 
 2872      756D6265 
 2873              	.LASF23:
 2874 0201 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2874      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 89


 2874      5F526561 
 2874      6453656E 
 2874      736F7252 
 2875              	.LASF11:
 2876 0218 75696E74 		.ascii	"uint32\000"
 2876      333200
 2877              	.LASF73:
 2878 021f 4379496E 		.ascii	"CyIntSetVector\000"
 2878      74536574 
 2878      56656374 
 2878      6F7200
 2879              	.LASF29:
 2880 022e 6D61736B 		.ascii	"mask\000"
 2880      00
 2881              	.LASF76:
 2882 0233 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2882      656E7365 
 2882      5F436F6D 
 2882      70434830 
 2882      5F496E69 
 2883              	.LASF28:
 2884 0249 706F7274 		.ascii	"port\000"
 2884      00
 2885              	.LASF51:
 2886 024e 43617053 		.ascii	"CapSense_sensorIndex\000"
 2886      656E7365 
 2886      5F73656E 
 2886      736F7249 
 2886      6E646578 
 2887              	.LASF40:
 2888 0263 43617053 		.ascii	"CapSense_ScanSensor\000"
 2888      656E7365 
 2888      5F536361 
 2888      6E53656E 
 2888      736F7200 
 2889              	.LASF8:
 2890 0277 756E7369 		.ascii	"unsigned int\000"
 2890      676E6564 
 2890      20696E74 
 2890      00
 2891              	.LASF31:
 2892 0284 43617053 		.ascii	"CapSense_ClearSensors\000"
 2892      656E7365 
 2892      5F436C65 
 2892      61725365 
 2892      6E736F72 
 2893              	.LASF79:
 2894 029a 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2894      656E7365 
 2894      5F496461 
 2894      63434830 
 2894      5F536574 
 2895              	.LASF5:
 2896 02b4 6C6F6E67 		.ascii	"long unsigned int\000"
 2896      20756E73 
 2896      69676E65 
 2896      6420696E 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 90


 2896      7400
 2897              	.LASF56:
 2898 02c6 43617053 		.ascii	"CapSense_maskTable\000"
 2898      656E7365 
 2898      5F6D6173 
 2898      6B546162 
 2898      6C6500
 2899              	.LASF55:
 2900 02d9 43617053 		.ascii	"CapSense_portTable\000"
 2900      656E7365 
 2900      5F706F72 
 2900      74546162 
 2900      6C6500
 2901              	.LASF63:
 2902 02ec 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2902      656E7365 
 2902      5F496E74 
 2902      436C6F63 
 2902      6B5F5374 
 2903              	.LASF62:
 2904 0304 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2904      74657243 
 2904      72697469 
 2904      63616C53 
 2904      65637469 
 2905              	.LASF3:
 2906 031b 73686F72 		.ascii	"short unsigned int\000"
 2906      7420756E 
 2906      7369676E 
 2906      65642069 
 2906      6E7400
 2907              	.LASF69:
 2908 032e 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2908      656E7365 
 2908      5F496E74 
 2908      436C6F63 
 2908      6B5F5374 
 2909              	.LASF25:
 2910 0345 73656E73 		.ascii	"sensor\000"
 2910      6F7200
 2911              	.LASF53:
 2912 034c 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2912      656E7365 
 2912      5F73656E 
 2912      736F7245 
 2912      6E61626C 
 2913              	.LASF37:
 2914 0366 736C6F74 		.ascii	"slot\000"
 2914      00
 2915              	.LASF80:
 2916 036b 43617053 		.ascii	"CapSense_AutoTune\000"
 2916      656E7365 
 2916      5F417574 
 2916      6F54756E 
 2916      6500
 2917              	.LASF17:
 2918 037d 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 91


 2918      3200
 2919              	.LASF60:
 2920 0383 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2920      656E7365 
 2920      5F616E61 
 2920      6C6F6753 
 2920      77697463 
 2921              	.LASF19:
 2922 03a0 73697A65 		.ascii	"sizetype\000"
 2922      74797065 
 2922      00
 2923              	.LASF57:
 2924 03a9 43617053 		.ascii	"CapSense_csTable\000"
 2924      656E7365 
 2924      5F637354 
 2924      61626C65 
 2924      00
 2925              	.LASF18:
 2926 03ba 6C6F6E67 		.ascii	"long double\000"
 2926      20646F75 
 2926      626C6500 
 2927              	.LASF32:
 2928 03c6 43617053 		.ascii	"CapSense_Stop\000"
 2928      656E7365 
 2928      5F53746F 
 2928      7000
 2929              	.LASF44:
 2930 03d4 7363616E 		.ascii	"scanSpeed\000"
 2930      53706565 
 2930      6400
 2931              	.LASF21:
 2932 03de 656E4D61 		.ascii	"enMask\000"
 2932      736B00
 2933              	.LASF78:
 2934 03e5 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2934      656E7365 
 2934      5F496461 
 2934      63434830 
 2934      5F536574 
 2935              	.LASF74:
 2936 0402 4379496E 		.ascii	"CyIntSetPriority\000"
 2936      74536574 
 2936      5072696F 
 2936      72697479 
 2936      00
 2937              	.LASF58:
 2938 0413 43617053 		.ascii	"CapSense_idacSettings\000"
 2938      656E7365 
 2938      5F696461 
 2938      63536574 
 2938      74696E67 
 2939              	.LASF12:
 2940 0429 666C6F61 		.ascii	"float\000"
 2940      7400
 2941              	.LASF35:
 2942 042f 70726573 		.ascii	"prescaler\000"
 2942      63616C65 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 92


 2942      7200
 2943              	.LASF15:
 2944 0439 72656738 		.ascii	"reg8\000"
 2944      00
 2945              	.LASF22:
 2946 043e 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2946      656E7365 
 2946      5F46696E 
 2946      644E6578 
 2946      7453656E 
 2947              	.LASF1:
 2948 0456 756E7369 		.ascii	"unsigned char\000"
 2948      676E6564 
 2948      20636861 
 2948      7200
 2949              	.LASF77:
 2950 0464 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2950      656E7365 
 2950      5F496461 
 2950      63434830 
 2950      5F496E69 
 2951              	.LASF59:
 2952 047a 43617053 		.ascii	"CapSense_widgetResolution\000"
 2952      656E7365 
 2952      5F776964 
 2952      67657452 
 2952      65736F6C 
 2953              	.LASF2:
 2954 0494 73686F72 		.ascii	"short int\000"
 2954      7420696E 
 2954      7400
 2955              	.LASF38:
 2956 049e 77696467 		.ascii	"widget\000"
 2956      657400
 2957              	.LASF36:
 2958 04a5 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2958      656E7365 
 2958      5F536574 
 2958      5363616E 
 2958      536C6F74 
 2959              	.LASF42:
 2960 04c2 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2960      656E7365 
 2960      5F476574 
 2960      50726573 
 2960      63616C65 
 2961              	.LASF81:
 2962 04d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2962      43313120 
 2962      352E342E 
 2962      31203230 
 2962      31363036 
 2963 050b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2963      20726576 
 2963      6973696F 
 2963      6E203233 
 2963      37373135 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 93


 2964 053e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2964      66756E63 
 2964      74696F6E 
 2964      2D736563 
 2964      74696F6E 
 2965              	.LASF14:
 2966 0566 63686172 		.ascii	"char\000"
 2966      00
 2967              	.LASF65:
 2968 056b 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2968      656E7365 
 2968      5F496461 
 2968      63434830 
 2968      5F456E61 
 2969              	.LASF43:
 2970 0583 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2970      656E7365 
 2970      5F536574 
 2970      5363616E 
 2970      53706565 
 2971              	.LASF67:
 2972 0599 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2972      656E7365 
 2972      5F414D75 
 2972      78434830 
 2972      5F536574 
 2973              	.LASF47:
 2974 05ae 43617053 		.ascii	"CapSense_Start\000"
 2974      656E7365 
 2974      5F537461 
 2974      727400
 2975              	.LASF33:
 2976 05bd 43617053 		.ascii	"CapSense_PostScan\000"
 2976      656E7365 
 2976      5F506F73 
 2976      74536361 
 2976      6E00
 2977              	.LASF20:
 2978 05cf 656E6162 		.ascii	"enableInterrupts\000"
 2978      6C65496E 
 2978      74657272 
 2978      75707473 
 2978      00
 2979              	.LASF70:
 2980 05e0 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2980      656E7365 
 2980      5F436F6D 
 2980      70434830 
 2980      5F53746F 
 2981              	.LASF30:
 2982 05f6 43617053 		.ascii	"CapSense_DisableSensor\000"
 2982      656E7365 
 2982      5F446973 
 2982      61626C65 
 2982      53656E73 
 2983              	.LASF39:
 2984 060d 43617053 		.ascii	"CapSense_PreScan\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccQr8oXb.s 			page 94


 2984      656E7365 
 2984      5F507265 
 2984      5363616E 
 2984      00
 2985              	.LASF46:
 2986 061e 43617053 		.ascii	"CapSense_Init\000"
 2986      656E7365 
 2986      5F496E69 
 2986      7400
 2987              	.LASF52:
 2988 062c 43617053 		.ascii	"CapSense_sensorRaw\000"
 2988      656E7365 
 2988      5F73656E 
 2988      736F7252 
 2988      617700
 2989              	.LASF41:
 2990 063f 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2990      656E7365 
 2990      5F536361 
 2990      6E456E61 
 2990      626C6564 
 2991              	.LASF68:
 2992 065b 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2992      656E7365 
 2992      5F414D75 
 2992      78434830 
 2992      5F556E73 
 2993              	.LASF84:
 2994 0672 43617053 		.ascii	"CapSense_IsBusy\000"
 2994      656E7365 
 2994      5F497342 
 2994      75737900 
 2995              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
