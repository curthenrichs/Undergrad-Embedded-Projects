ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x3u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Right__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Left__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c **** };
  50:Generated_Source\PSoC5/CapSense.c **** 
  51:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  52:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Right__BTN__PORT, 
  53:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Left__BTN__PORT, 
  54:Generated_Source\PSoC5/CapSense.c **** };
  55:Generated_Source\PSoC5/CapSense.c **** 
  56:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  57:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Right__BTN__MASK,
  58:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Left__BTN__MASK,
  59:Generated_Source\PSoC5/CapSense.c **** };
  60:Generated_Source\PSoC5/CapSense.c **** 
  61:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  62:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  63:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  64:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  65:Generated_Source\PSoC5/CapSense.c **** };
  66:Generated_Source\PSoC5/CapSense.c **** 
  67:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  68:Generated_Source\PSoC5/CapSense.c ****     200u,200u,
  69:Generated_Source\PSoC5/CapSense.c **** };
  70:Generated_Source\PSoC5/CapSense.c **** 
  71:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  72:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  73:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  74:Generated_Source\PSoC5/CapSense.c **** };
  75:Generated_Source\PSoC5/CapSense.c **** 
  76:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  77:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  78:Generated_Source\PSoC5/CapSense.c ****     0u, /* Right__BTN */
  79:Generated_Source\PSoC5/CapSense.c ****     1u, /* Left__BTN */
  80:Generated_Source\PSoC5/CapSense.c ****     
  81:Generated_Source\PSoC5/CapSense.c **** };
  82:Generated_Source\PSoC5/CapSense.c **** 
  83:Generated_Source\PSoC5/CapSense.c **** 
  84:Generated_Source\PSoC5/CapSense.c **** 
  85:Generated_Source\PSoC5/CapSense.c **** 
  86:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  87:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  89:Generated_Source\PSoC5/CapSense.c **** *
  90:Generated_Source\PSoC5/CapSense.c **** * Summary:
  91:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  92:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
  93:Generated_Source\PSoC5/CapSense.c **** *
  94:Generated_Source\PSoC5/CapSense.c **** * Parameters:
  95:Generated_Source\PSoC5/CapSense.c **** *  None
  96:Generated_Source\PSoC5/CapSense.c **** *
  97:Generated_Source\PSoC5/CapSense.c **** * Return:
  98:Generated_Source\PSoC5/CapSense.c **** *  None
  99:Generated_Source\PSoC5/CapSense.c **** *
 100:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 101:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 102:Generated_Source\PSoC5/CapSense.c **** {
 103:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 104:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 105:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 106:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 107:Generated_Source\PSoC5/CapSense.c ****         
 108:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 109:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 110:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 111:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 112:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 113:Generated_Source\PSoC5/CapSense.c ****            */
 114:Generated_Source\PSoC5/CapSense.c ****     
 115:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 116:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 117:Generated_Source\PSoC5/CapSense.c **** 
 118:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 119:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 120:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 121:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 122:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 123:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 124:Generated_Source\PSoC5/CapSense.c ****                                                
 125:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 126:Generated_Source\PSoC5/CapSense.c ****     #else
 127:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 128:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 129:Generated_Source\PSoC5/CapSense.c **** 
 130:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 131:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 132:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 133:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 134:Generated_Source\PSoC5/CapSense.c **** 
 135:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 136:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 137:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 138:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 139:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 140:Generated_Source\PSoC5/CapSense.c ****         
 141:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 142:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 143:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         
 146:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 147:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 148:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 149:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 150:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 151:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 152:Generated_Source\PSoC5/CapSense.c ****         
 153:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 154:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 155:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 156:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 157:Generated_Source\PSoC5/CapSense.c ****                 
 158:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 159:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 160:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 161:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 162:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 163:Generated_Source\PSoC5/CapSense.c ****         
 164:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 165:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 166:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 167:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 168:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 169:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 170:Generated_Source\PSoC5/CapSense.c ****         
 171:Generated_Source\PSoC5/CapSense.c ****     #else
 172:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 173:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 174:Generated_Source\PSoC5/CapSense.c ****     
 175:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 176:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 177:Generated_Source\PSoC5/CapSense.c ****     
 178:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 179:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 180:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 181:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 182:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 183:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 184:Generated_Source\PSoC5/CapSense.c ****         
 185:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 186:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 187:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 188:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 189:Generated_Source\PSoC5/CapSense.c ****     
 190:Generated_Source\PSoC5/CapSense.c ****     #else
 191:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 192:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 195:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 196:Generated_Source\PSoC5/CapSense.c ****         
 197:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 201:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 203:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 204:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 205:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 206:Generated_Source\PSoC5/CapSense.c ****         
 207:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 208:Generated_Source\PSoC5/CapSense.c ****     
 209:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 210:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 211:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 212:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/CapSense.c ****             
 216:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 217:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 218:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 219:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 220:Generated_Source\PSoC5/CapSense.c ****            
 221:Generated_Source\PSoC5/CapSense.c ****         #else
 222:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 223:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 224:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 225:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 226:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 227:Generated_Source\PSoC5/CapSense.c ****             
 228:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 229:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 230:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 231:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 232:Generated_Source\PSoC5/CapSense.c ****             
 233:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 234:Generated_Source\PSoC5/CapSense.c ****             
 235:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 236:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 237:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 238:Generated_Source\PSoC5/CapSense.c ****             
 239:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 240:Generated_Source\PSoC5/CapSense.c ****     
 241:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 242:Generated_Source\PSoC5/CapSense.c ****     
 243:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 244:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 245:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 246:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 247:Generated_Source\PSoC5/CapSense.c ****     
 248:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 249:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 250:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 251:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 252:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 253:Generated_Source\PSoC5/CapSense.c ****     
 254:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 255:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 256:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 257:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 258:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 260:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 261:Generated_Source\PSoC5/CapSense.c ****     
 262:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 263:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 264:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 265:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 266:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 267:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 268:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 269:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 270:Generated_Source\PSoC5/CapSense.c ****     
 271:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 272:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 273:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 274:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 275:Generated_Source\PSoC5/CapSense.c ****     
 276:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 277:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 278:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 279:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 280:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 281:Generated_Source\PSoC5/CapSense.c ****     
 282:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 283:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 284:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 285:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 286:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 288:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 289:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 290:Generated_Source\PSoC5/CapSense.c ****     
 291:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 292:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 293:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 294:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 295:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 296:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 297:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 298:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 299:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 300:Generated_Source\PSoC5/CapSense.c ****     
 301:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 302:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 303:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 304:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 305:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 306:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 307:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 308:Generated_Source\PSoC5/CapSense.c **** }
 309:Generated_Source\PSoC5/CapSense.c **** 
 310:Generated_Source\PSoC5/CapSense.c **** 
 311:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 313:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 314:Generated_Source\PSoC5/CapSense.c **** *
 315:Generated_Source\PSoC5/CapSense.c **** * Summary:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 317:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 318:Generated_Source\PSoC5/CapSense.c **** *
 319:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 320:Generated_Source\PSoC5/CapSense.c **** *  None
 321:Generated_Source\PSoC5/CapSense.c **** *
 322:Generated_Source\PSoC5/CapSense.c **** * Return:
 323:Generated_Source\PSoC5/CapSense.c **** *  None
 324:Generated_Source\PSoC5/CapSense.c **** *
 325:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 327:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 327 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 328:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC5/CapSense.c ****     
 330:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 330 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 331:Generated_Source\PSoC5/CapSense.c ****     
 332:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 333:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 334:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 335:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 336:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
  41              		.loc 1 336 0
  42 0008 194A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F00203 		orr	r3, r3, #2
  45 0010 1370     		strb	r3, [r2]
 337:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
  46              		.loc 1 337 0
  47 0012 1032     		adds	r2, r2, #16
  48 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  49 0016 43F00203 		orr	r3, r3, #2
  50 001a 1370     		strb	r3, [r2]
 338:Generated_Source\PSoC5/CapSense.c ****         
 339:Generated_Source\PSoC5/CapSense.c ****     #else
 340:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 341:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 342:Generated_Source\PSoC5/CapSense.c ****     
 343:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 344:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  51              		.loc 1 344 0
  52 001c 02F50352 		add	r2, r2, #8384
  53 0020 2B32     		adds	r2, r2, #43
  54 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  55 0024 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 8


  56 0028 1370     		strb	r3, [r2]
 345:Generated_Source\PSoC5/CapSense.c ****     
 346:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 347:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 348:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 349:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 350:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 351:Generated_Source\PSoC5/CapSense.c ****         
 352:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 353:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 354:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 355:Generated_Source\PSoC5/CapSense.c ****         
 356:Generated_Source\PSoC5/CapSense.c ****     #else
 357:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 358:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 359:Generated_Source\PSoC5/CapSense.c ****         
 360:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 361:Generated_Source\PSoC5/CapSense.c ****     
 362:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 363:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 364:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 365:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 366:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 367:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 368:Generated_Source\PSoC5/CapSense.c ****             
 369:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 370:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 371:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 372:Generated_Source\PSoC5/CapSense.c ****            
 373:Generated_Source\PSoC5/CapSense.c ****         #else
 374:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 375:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 376:Generated_Source\PSoC5/CapSense.c ****         
 377:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 378:Generated_Source\PSoC5/CapSense.c ****     
 379:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 380:Generated_Source\PSoC5/CapSense.c ****     
 381:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 382:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 383:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  57              		.loc 1 383 0
  58 002a FFF7FEFF 		bl	CapSense_IntClock_Start
  59              	.LVL2:
 384:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 385:Generated_Source\PSoC5/CapSense.c ****     
 386:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 387:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  60              		.loc 1 387 0
  61 002e FFF7FEFF 		bl	CapSense_CompCH0_Enable
  62              	.LVL3:
 388:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 389:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  63              		.loc 1 389 0
  64 0032 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  65              	.LVL4:
 390:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 391:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 9


 392:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 393:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 394:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 395:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 396:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 397:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 398:Generated_Source\PSoC5/CapSense.c ****     
 399:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 400:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 401:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 402:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 403:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 404:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 405:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 406:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 407:Generated_Source\PSoC5/CapSense.c ****     #else
 408:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 409:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  66              		.loc 1 409 0
  67 0036 0F4A     		ldr	r2, .L3+4
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F01003 		orr	r3, r3, #16
  70 003e 1370     		strb	r3, [r2]
 410:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  71              		.loc 1 410 0
  72 0040 103A     		subs	r2, r2, #16
  73 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  74 0044 43F01003 		orr	r3, r3, #16
  75 0048 1370     		strb	r3, [r2]
 411:Generated_Source\PSoC5/CapSense.c ****         
 412:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 413:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 414:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 415:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 416:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 417:Generated_Source\PSoC5/CapSense.c ****     
 418:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 419:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 420:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 421:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 422:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 423:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 424:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 425:Generated_Source\PSoC5/CapSense.c ****         
 426:Generated_Source\PSoC5/CapSense.c ****     #else
 427:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 428:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  76              		.loc 1 428 0
  77 004a 02F5A652 		add	r2, r2, #5312
  78 004e 0532     		adds	r2, r2, #5
  79 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  80 0052 43F00103 		orr	r3, r3, #1
  81 0056 1370     		strb	r3, [r2]
 429:Generated_Source\PSoC5/CapSense.c ****         
 430:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 431:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 432:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 10


 433:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 434:Generated_Source\PSoC5/CapSense.c ****     
 435:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  82              		.loc 1 435 0
  83 0058 2046     		mov	r0, r4
  84 005a FFF7FEFF 		bl	CyExitCriticalSection
  85              	.LVL5:
 436:Generated_Source\PSoC5/CapSense.c ****     
 437:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 438:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  86              		.loc 1 438 0
  87 005e 2022     		movs	r2, #32
  88 0060 054B     		ldr	r3, .L3+8
  89 0062 1A60     		str	r2, [r3]
 439:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 440:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 441:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 442:Generated_Source\PSoC5/CapSense.c ****     
 443:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 444:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  90              		.loc 1 444 0
  91 0064 054A     		ldr	r2, .L3+12
  92 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 0068 43F08003 		orr	r3, r3, #128
  94 006c 1370     		strb	r3, [r2]
  95 006e 10BD     		pop	{r4, pc}
  96              	.LVL6:
  97              	.L4:
  98              		.align	2
  99              	.L3:
 100 0070 A3430040 		.word	1073759139
 101 0074 BB430040 		.word	1073759163
 102 0078 00E100E0 		.word	-536813312
 103 007c 7F640040 		.word	1073767551
 104              		.cfi_endproc
 105              	.LFE1:
 106              		.size	CapSense_Enable, .-CapSense_Enable
 107              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 108              		.align	2
 109              		.global	CapSense_FindNextSensor
 110              		.thumb
 111              		.thumb_func
 112              		.type	CapSense_FindNextSensor, %function
 113              	CapSense_FindNextSensor:
 114              	.LFB4:
 445:Generated_Source\PSoC5/CapSense.c **** }
 446:Generated_Source\PSoC5/CapSense.c **** 
 447:Generated_Source\PSoC5/CapSense.c **** 
 448:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 449:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 450:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 451:Generated_Source\PSoC5/CapSense.c **** *
 452:Generated_Source\PSoC5/CapSense.c **** * Summary:
 453:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 454:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 455:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 456:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 11


 457:Generated_Source\PSoC5/CapSense.c **** *
 458:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 459:Generated_Source\PSoC5/CapSense.c **** *  None
 460:Generated_Source\PSoC5/CapSense.c **** *
 461:Generated_Source\PSoC5/CapSense.c **** * Return:
 462:Generated_Source\PSoC5/CapSense.c **** *  None
 463:Generated_Source\PSoC5/CapSense.c **** *
 464:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 465:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 466:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 467:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 468:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 469:Generated_Source\PSoC5/CapSense.c **** *
 470:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 471:Generated_Source\PSoC5/CapSense.c **** *  No
 472:Generated_Source\PSoC5/CapSense.c **** *
 473:Generated_Source\PSoC5/CapSense.c **** * Note:
 474:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 475:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 476:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 477:Generated_Source\PSoC5/CapSense.c **** *
 478:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 479:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 480:Generated_Source\PSoC5/CapSense.c **** {
 481:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 482:Generated_Source\PSoC5/CapSense.c ****     {
 483:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 484:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 485:Generated_Source\PSoC5/CapSense.c ****     }
 486:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 487:Generated_Source\PSoC5/CapSense.c ****     
 488:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 489:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 490:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 491:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 492:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 493:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 494:Generated_Source\PSoC5/CapSense.c **** }
 495:Generated_Source\PSoC5/CapSense.c **** 
 496:Generated_Source\PSoC5/CapSense.c **** 
 497:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 498:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 499:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 500:Generated_Source\PSoC5/CapSense.c **** *
 501:Generated_Source\PSoC5/CapSense.c **** * Summary:
 502:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 503:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 504:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 505:Generated_Source\PSoC5/CapSense.c **** *
 506:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 507:Generated_Source\PSoC5/CapSense.c **** *  None
 508:Generated_Source\PSoC5/CapSense.c **** *
 509:Generated_Source\PSoC5/CapSense.c **** * Return:
 510:Generated_Source\PSoC5/CapSense.c **** *  None
 511:Generated_Source\PSoC5/CapSense.c **** *
 512:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 513:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 12


 514:Generated_Source\PSoC5/CapSense.c **** *
 515:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 516:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 517:Generated_Source\PSoC5/CapSense.c **** {
 518:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 519:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 520:Generated_Source\PSoC5/CapSense.c ****     
 521:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 522:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 523:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 524:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 525:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 526:Generated_Source\PSoC5/CapSense.c ****     
 527:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 528:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 529:Generated_Source\PSoC5/CapSense.c ****     
 530:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 531:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 532:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 533:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 534:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 535:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 536:Generated_Source\PSoC5/CapSense.c ****         
 537:Generated_Source\PSoC5/CapSense.c ****     #else
 538:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 539:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 540:Generated_Source\PSoC5/CapSense.c ****     
 541:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 542:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 543:Generated_Source\PSoC5/CapSense.c ****     
 544:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 545:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 546:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 547:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 548:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 549:Generated_Source\PSoC5/CapSense.c **** 
 550:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 551:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 552:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 553:Generated_Source\PSoC5/CapSense.c **** 
 554:Generated_Source\PSoC5/CapSense.c ****     #else
 555:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 556:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 557:Generated_Source\PSoC5/CapSense.c ****         
 558:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 559:Generated_Source\PSoC5/CapSense.c ****     
 560:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 561:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 562:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 563:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 564:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 565:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 566:Generated_Source\PSoC5/CapSense.c ****     
 567:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 568:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 569:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 570:Generated_Source\PSoC5/CapSense.c ****            
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 13


 571:Generated_Source\PSoC5/CapSense.c ****         #else
 572:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 573:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 574:Generated_Source\PSoC5/CapSense.c ****         
 575:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 576:Generated_Source\PSoC5/CapSense.c ****     
 577:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 578:Generated_Source\PSoC5/CapSense.c ****     
 579:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 580:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 581:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 582:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 583:Generated_Source\PSoC5/CapSense.c ****     
 584:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 585:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 586:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 587:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 588:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 589:Generated_Source\PSoC5/CapSense.c ****     
 590:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 591:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 592:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 593:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 594:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 595:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 596:Generated_Source\PSoC5/CapSense.c ****     
 597:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 598:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 599:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 600:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 601:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 602:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 603:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 604:Generated_Source\PSoC5/CapSense.c **** 
 605:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 606:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 607:Generated_Source\PSoC5/CapSense.c ****     #else
 608:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 609:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 610:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 611:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 612:Generated_Source\PSoC5/CapSense.c ****         
 613:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 614:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 615:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 616:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 617:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 618:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 619:Generated_Source\PSoC5/CapSense.c ****     
 620:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 621:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 622:Generated_Source\PSoC5/CapSense.c **** }
 623:Generated_Source\PSoC5/CapSense.c **** 
 624:Generated_Source\PSoC5/CapSense.c **** 
 625:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 626:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 627:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 14


 628:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 629:Generated_Source\PSoC5/CapSense.c ****     *
 630:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 631:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 632:Generated_Source\PSoC5/CapSense.c ****     *
 633:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 634:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 635:Generated_Source\PSoC5/CapSense.c ****     *
 636:Generated_Source\PSoC5/CapSense.c ****     * Return:
 637:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 638:Generated_Source\PSoC5/CapSense.c ****     *
 639:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 640:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 641:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 642:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 643:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 644:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 645:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 646:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 647:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 648:Generated_Source\PSoC5/CapSense.c ****     *
 649:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 650:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 651:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 652:Generated_Source\PSoC5/CapSense.c ****     *
 653:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 654:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 655:Generated_Source\PSoC5/CapSense.c ****     {
 115              		.loc 1 655 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL7:
 121              	.L7:
 656:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 657:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 658:Generated_Source\PSoC5/CapSense.c ****         
 659:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 660:Generated_Source\PSoC5/CapSense.c ****         do
 661:Generated_Source\PSoC5/CapSense.c ****         {
 662:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 663:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 122              		.loc 1 663 0
 123 0000 0130     		adds	r0, r0, #1
 124 0002 C0B2     		uxtb	r0, r0
 125              	.LVL8:
 664:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 126              		.loc 1 664 0
 127 0004 0228     		cmp	r0, #2
 128 0006 08D0     		beq	.L6
 665:Generated_Source\PSoC5/CapSense.c ****             {
 666:Generated_Source\PSoC5/CapSense.c ****                 break;
 667:Generated_Source\PSoC5/CapSense.c ****             }
 668:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 129              		.loc 1 668 0
 130 0008 C208     		lsrs	r2, r0, #3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 15


 669:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 131              		.loc 1 669 0
 132 000a 00F00701 		and	r1, r0, #7
 133 000e 0123     		movs	r3, #1
 134 0010 8B40     		lsls	r3, r3, r1
 135              	.LVL9:
 670:Generated_Source\PSoC5/CapSense.c ****         }    
 671:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 136              		.loc 1 671 0
 137 0012 0249     		ldr	r1, .L8
 138 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 139 0016 1342     		tst	r3, r2
 140 0018 F2D0     		beq	.L7
 141              	.LVL10:
 142              	.L6:
 672:Generated_Source\PSoC5/CapSense.c ****         
 673:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 674:Generated_Source\PSoC5/CapSense.c ****     }
 143              		.loc 1 674 0
 144 001a 7047     		bx	lr
 145              	.L9:
 146              		.align	2
 147              	.L8:
 148 001c 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE4:
 151              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 152              		.section	.text.CapSense_IsBusy,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_IsBusy
 155              		.thumb
 156              		.thumb_func
 157              		.type	CapSense_IsBusy, %function
 158              	CapSense_IsBusy:
 159              	.LFB8:
 675:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 676:Generated_Source\PSoC5/CapSense.c ****  
 677:Generated_Source\PSoC5/CapSense.c ****  
 678:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 679:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 680:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 681:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 682:Generated_Source\PSoC5/CapSense.c ****     *
 683:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 684:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 685:Generated_Source\PSoC5/CapSense.c ****     *  
 686:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 687:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 688:Generated_Source\PSoC5/CapSense.c ****     *
 689:Generated_Source\PSoC5/CapSense.c ****     * Return:
 690:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 691:Generated_Source\PSoC5/CapSense.c ****     *
 692:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 693:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 694:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 695:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 696:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 16


 697:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 698:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 699:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 700:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 701:Generated_Source\PSoC5/CapSense.c ****     *
 702:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 703:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 704:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 705:Generated_Source\PSoC5/CapSense.c ****     *
 706:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 707:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 708:Generated_Source\PSoC5/CapSense.c ****     {
 709:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 710:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 711:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 712:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 713:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 714:Generated_Source\PSoC5/CapSense.c ****         
 715:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 716:Generated_Source\PSoC5/CapSense.c ****         do
 717:Generated_Source\PSoC5/CapSense.c ****         {
 718:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 719:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 720:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 721:Generated_Source\PSoC5/CapSense.c ****             {
 722:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 723:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 724:Generated_Source\PSoC5/CapSense.c ****                 break;
 725:Generated_Source\PSoC5/CapSense.c ****             }
 726:Generated_Source\PSoC5/CapSense.c ****             
 727:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 728:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 729:Generated_Source\PSoC5/CapSense.c ****         }
 730:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 731:Generated_Source\PSoC5/CapSense.c ****         
 732:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 733:Generated_Source\PSoC5/CapSense.c ****         do
 734:Generated_Source\PSoC5/CapSense.c ****         {
 735:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 736:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 737:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 738:Generated_Source\PSoC5/CapSense.c ****             {
 739:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 740:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 741:Generated_Source\PSoC5/CapSense.c ****                 break;
 742:Generated_Source\PSoC5/CapSense.c ****             }
 743:Generated_Source\PSoC5/CapSense.c ****             
 744:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 745:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 746:Generated_Source\PSoC5/CapSense.c ****         } 
 747:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 748:Generated_Source\PSoC5/CapSense.c ****         
 749:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 750:Generated_Source\PSoC5/CapSense.c ****         
 751:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 752:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 753:Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 17


 754:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 755:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 756:Generated_Source\PSoC5/CapSense.c ****             
 757:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 758:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 759:Generated_Source\PSoC5/CapSense.c ****         }
 760:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 761:Generated_Source\PSoC5/CapSense.c ****         {
 762:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 763:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 764:Generated_Source\PSoC5/CapSense.c ****            
 765:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 766:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 767:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 768:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 769:Generated_Source\PSoC5/CapSense.c ****         }
 770:Generated_Source\PSoC5/CapSense.c ****         else
 771:Generated_Source\PSoC5/CapSense.c ****         {
 772:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 773:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 774:Generated_Source\PSoC5/CapSense.c ****             
 775:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 776:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 777:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 778:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 779:Generated_Source\PSoC5/CapSense.c ****         }
 780:Generated_Source\PSoC5/CapSense.c ****         
 781:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 782:Generated_Source\PSoC5/CapSense.c ****     }
 783:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 784:Generated_Source\PSoC5/CapSense.c **** 
 785:Generated_Source\PSoC5/CapSense.c **** 
 786:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 787:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 788:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 789:Generated_Source\PSoC5/CapSense.c **** *
 790:Generated_Source\PSoC5/CapSense.c **** * Summary:
 791:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 792:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 793:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 794:Generated_Source\PSoC5/CapSense.c **** *  widget.
 795:Generated_Source\PSoC5/CapSense.c **** *
 796:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 797:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 798:Generated_Source\PSoC5/CapSense.c **** *
 799:Generated_Source\PSoC5/CapSense.c **** * Return:
 800:Generated_Source\PSoC5/CapSense.c **** *  None
 801:Generated_Source\PSoC5/CapSense.c **** *
 802:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 803:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 804:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 805:Generated_Source\PSoC5/CapSense.c **** *  widget.
 806:Generated_Source\PSoC5/CapSense.c **** *
 807:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 808:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 809:Generated_Source\PSoC5/CapSense.c **** {
 810:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 18


 811:Generated_Source\PSoC5/CapSense.c ****     
 812:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 813:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 814:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 815:Generated_Source\PSoC5/CapSense.c ****         
 816:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 817:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 818:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 819:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 820:Generated_Source\PSoC5/CapSense.c ****         
 821:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 822:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 823:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 824:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 825:Generated_Source\PSoC5/CapSense.c ****         #else
 826:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 827:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 828:Generated_Source\PSoC5/CapSense.c **** 
 829:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 830:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 831:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 832:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 833:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 834:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 835:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 836:Generated_Source\PSoC5/CapSense.c ****                */
 837:Generated_Source\PSoC5/CapSense.c **** 
 838:Generated_Source\PSoC5/CapSense.c ****     #else
 839:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 840:Generated_Source\PSoC5/CapSense.c ****         {
 841:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 842:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 843:Generated_Source\PSoC5/CapSense.c ****             
 844:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 845:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 846:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 847:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 848:Generated_Source\PSoC5/CapSense.c ****             
 849:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 850:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 851:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 852:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 853:Generated_Source\PSoC5/CapSense.c ****             #else
 854:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 855:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 856:Generated_Source\PSoC5/CapSense.c ****         }
 857:Generated_Source\PSoC5/CapSense.c ****         
 858:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 859:Generated_Source\PSoC5/CapSense.c ****         {
 860:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 861:Generated_Source\PSoC5/CapSense.c ****         
 862:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 863:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 864:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 865:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 866:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 867:Generated_Source\PSoC5/CapSense.c ****             
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 19


 868:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 869:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 870:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 871:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 872:Generated_Source\PSoC5/CapSense.c ****             #else
 873:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 874:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 875:Generated_Source\PSoC5/CapSense.c ****         }
 876:Generated_Source\PSoC5/CapSense.c **** 
 877:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 878:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 879:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 880:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 881:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 882:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 883:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 884:Generated_Source\PSoC5/CapSense.c ****                */
 885:Generated_Source\PSoC5/CapSense.c **** 
 886:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 887:Generated_Source\PSoC5/CapSense.c **** }
 888:Generated_Source\PSoC5/CapSense.c **** 
 889:Generated_Source\PSoC5/CapSense.c **** 
 890:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 891:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 892:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 893:Generated_Source\PSoC5/CapSense.c **** *
 894:Generated_Source\PSoC5/CapSense.c **** * Summary:
 895:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 896:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 897:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 898:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 899:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 900:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 901:Generated_Source\PSoC5/CapSense.c **** *
 902:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 903:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 904:Generated_Source\PSoC5/CapSense.c **** *
 905:Generated_Source\PSoC5/CapSense.c **** * Return:
 906:Generated_Source\PSoC5/CapSense.c **** *  None
 907:Generated_Source\PSoC5/CapSense.c **** *
 908:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 909:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 910:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 911:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 912:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 913:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 914:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 915:Generated_Source\PSoC5/CapSense.c **** *
 916:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 917:Generated_Source\PSoC5/CapSense.c **** *  No
 918:Generated_Source\PSoC5/CapSense.c **** *
 919:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 920:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 921:Generated_Source\PSoC5/CapSense.c **** {
 922:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 923:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 924:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 20


 925:Generated_Source\PSoC5/CapSense.c ****     
 926:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 927:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 928:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 929:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 930:Generated_Source\PSoC5/CapSense.c ****         
 931:Generated_Source\PSoC5/CapSense.c ****     #else
 932:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 933:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 934:Generated_Source\PSoC5/CapSense.c ****         {
 935:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 936:Generated_Source\PSoC5/CapSense.c ****         }
 937:Generated_Source\PSoC5/CapSense.c ****         else
 938:Generated_Source\PSoC5/CapSense.c ****         {
 939:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 940:Generated_Source\PSoC5/CapSense.c ****         }
 941:Generated_Source\PSoC5/CapSense.c ****         
 942:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 943:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 944:Generated_Source\PSoC5/CapSense.c ****         {
 945:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 946:Generated_Source\PSoC5/CapSense.c ****         }
 947:Generated_Source\PSoC5/CapSense.c ****         else
 948:Generated_Source\PSoC5/CapSense.c ****         {
 949:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 950:Generated_Source\PSoC5/CapSense.c ****         }
 951:Generated_Source\PSoC5/CapSense.c ****         
 952:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 953:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 954:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 955:Generated_Source\PSoC5/CapSense.c ****         {
 956:Generated_Source\PSoC5/CapSense.c ****         
 957:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 958:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 959:Generated_Source\PSoC5/CapSense.c ****         }
 960:Generated_Source\PSoC5/CapSense.c ****         
 961:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 962:Generated_Source\PSoC5/CapSense.c **** }
 963:Generated_Source\PSoC5/CapSense.c **** 
 964:Generated_Source\PSoC5/CapSense.c **** 
 965:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 967:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 968:Generated_Source\PSoC5/CapSense.c **** *
 969:Generated_Source\PSoC5/CapSense.c **** * Summary:
 970:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 971:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 972:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 973:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 974:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 975:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 976:Generated_Source\PSoC5/CapSense.c **** *
 977:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 978:Generated_Source\PSoC5/CapSense.c **** *  None
 979:Generated_Source\PSoC5/CapSense.c **** *
 980:Generated_Source\PSoC5/CapSense.c **** * Return:
 981:Generated_Source\PSoC5/CapSense.c **** *  None
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 21


 982:Generated_Source\PSoC5/CapSense.c **** *
 983:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 984:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 985:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 986:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 987:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 988:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 989:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 990:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 991:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 992:Generated_Source\PSoC5/CapSense.c **** *
 993:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 994:Generated_Source\PSoC5/CapSense.c **** *  No
 995:Generated_Source\PSoC5/CapSense.c **** *
 996:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 997:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
 998:Generated_Source\PSoC5/CapSense.c **** {
 999:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1000:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1001:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1002:Generated_Source\PSoC5/CapSense.c ****     
1003:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1004:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1005:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1006:Generated_Source\PSoC5/CapSense.c **** 
1007:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1008:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1009:Generated_Source\PSoC5/CapSense.c ****         {
1010:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1011:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1012:Generated_Source\PSoC5/CapSense.c ****         }
1013:Generated_Source\PSoC5/CapSense.c ****         
1014:Generated_Source\PSoC5/CapSense.c ****     #else
1015:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1016:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1017:Generated_Source\PSoC5/CapSense.c ****         
1018:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1019:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1020:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1021:Generated_Source\PSoC5/CapSense.c ****         {
1022:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1023:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1024:Generated_Source\PSoC5/CapSense.c ****         }
1025:Generated_Source\PSoC5/CapSense.c ****         
1026:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1027:Generated_Source\PSoC5/CapSense.c **** }
1028:Generated_Source\PSoC5/CapSense.c **** 
1029:Generated_Source\PSoC5/CapSense.c **** 
1030:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1031:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1032:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1033:Generated_Source\PSoC5/CapSense.c **** *
1034:Generated_Source\PSoC5/CapSense.c **** * Summary:
1035:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1036:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1037:Generated_Source\PSoC5/CapSense.c **** *
1038:Generated_Source\PSoC5/CapSense.c **** * Parameters:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 22


1039:Generated_Source\PSoC5/CapSense.c **** *  None
1040:Generated_Source\PSoC5/CapSense.c **** *
1041:Generated_Source\PSoC5/CapSense.c **** * Return:
1042:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1043:Generated_Source\PSoC5/CapSense.c **** *  completed.
1044:Generated_Source\PSoC5/CapSense.c **** *
1045:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1046:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1047:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1048:Generated_Source\PSoC5/CapSense.c **** *
1049:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1050:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1051:Generated_Source\PSoC5/CapSense.c **** {
 160              		.loc 1 1051 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
1052:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 165              		.loc 1 1052 0
 166 0000 024B     		ldr	r3, .L11
 167 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1053:Generated_Source\PSoC5/CapSense.c **** }
 168              		.loc 1 1053 0
 169 0004 00F00100 		and	r0, r0, #1
 170 0008 7047     		bx	lr
 171              	.L12:
 172 000a 00BF     		.align	2
 173              	.L11:
 174 000c 00000000 		.word	CapSense_csv
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 178              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 179              		.align	2
 180              		.global	CapSense_ReadSensorRaw
 181              		.thumb
 182              		.thumb_func
 183              		.type	CapSense_ReadSensorRaw, %function
 184              	CapSense_ReadSensorRaw:
 185              	.LFB9:
1054:Generated_Source\PSoC5/CapSense.c **** 
1055:Generated_Source\PSoC5/CapSense.c **** 
1056:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1057:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1058:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1059:Generated_Source\PSoC5/CapSense.c **** *
1060:Generated_Source\PSoC5/CapSense.c **** * Summary:
1061:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1062:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1063:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1064:Generated_Source\PSoC5/CapSense.c **** *
1065:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1066:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1067:Generated_Source\PSoC5/CapSense.c **** *
1068:Generated_Source\PSoC5/CapSense.c **** * Return:
1069:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 23


1070:Generated_Source\PSoC5/CapSense.c **** *
1071:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1072:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1073:Generated_Source\PSoC5/CapSense.c **** *
1074:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1075:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1076:Generated_Source\PSoC5/CapSense.c **** {
 186              		.loc 1 1076 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL11:
1077:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1078:Generated_Source\PSoC5/CapSense.c **** }
 192              		.loc 1 1078 0
 193 0000 014B     		ldr	r3, .L14
 194 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 195              	.LVL12:
 196 0006 7047     		bx	lr
 197              	.L15:
 198              		.align	2
 199              	.L14:
 200 0008 00000000 		.word	CapSense_sensorRaw
 201              		.cfi_endproc
 202              	.LFE9:
 203              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 204              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 205              		.align	2
 206              		.global	CapSense_EnableSensor
 207              		.thumb
 208              		.thumb_func
 209              		.type	CapSense_EnableSensor, %function
 210              	CapSense_EnableSensor:
 211              	.LFB11:
1079:Generated_Source\PSoC5/CapSense.c **** 
1080:Generated_Source\PSoC5/CapSense.c **** 
1081:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1082:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1083:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1084:Generated_Source\PSoC5/CapSense.c **** *
1085:Generated_Source\PSoC5/CapSense.c **** * Summary:
1086:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1087:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1088:Generated_Source\PSoC5/CapSense.c **** *
1089:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1090:Generated_Source\PSoC5/CapSense.c **** *  None
1091:Generated_Source\PSoC5/CapSense.c **** *
1092:Generated_Source\PSoC5/CapSense.c **** * Return:
1093:Generated_Source\PSoC5/CapSense.c **** *  None
1094:Generated_Source\PSoC5/CapSense.c **** *
1095:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1096:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1097:Generated_Source\PSoC5/CapSense.c **** {
1098:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1099:Generated_Source\PSoC5/CapSense.c ****    
1100:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 24


1101:Generated_Source\PSoC5/CapSense.c ****     {
1102:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1103:Generated_Source\PSoC5/CapSense.c ****     }
1104:Generated_Source\PSoC5/CapSense.c **** }
1105:Generated_Source\PSoC5/CapSense.c **** 
1106:Generated_Source\PSoC5/CapSense.c **** 
1107:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1108:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1109:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1110:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1111:Generated_Source\PSoC5/CapSense.c ****     *
1112:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1113:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1114:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1115:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1116:Generated_Source\PSoC5/CapSense.c ****     *
1117:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1118:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1119:Generated_Source\PSoC5/CapSense.c ****     *
1120:Generated_Source\PSoC5/CapSense.c ****     * Return:
1121:Generated_Source\PSoC5/CapSense.c ****     *  None
1122:Generated_Source\PSoC5/CapSense.c ****     *
1123:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1124:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1125:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1126:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1127:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1128:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1129:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1130:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1131:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1132:Generated_Source\PSoC5/CapSense.c ****     *
1133:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1134:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1135:Generated_Source\PSoC5/CapSense.c ****     {
1136:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1137:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1138:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1139:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1140:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1141:Generated_Source\PSoC5/CapSense.c ****         
1142:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1143:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1144:Generated_Source\PSoC5/CapSense.c ****         {
1145:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1146:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1147:Generated_Source\PSoC5/CapSense.c ****         }
1148:Generated_Source\PSoC5/CapSense.c ****         else
1149:Generated_Source\PSoC5/CapSense.c ****         {
1150:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1151:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1152:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1153:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1154:Generated_Source\PSoC5/CapSense.c ****                         
1155:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1156:Generated_Source\PSoC5/CapSense.c ****             {
1157:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 25


1158:Generated_Source\PSoC5/CapSense.c ****             }
1159:Generated_Source\PSoC5/CapSense.c ****         } 
1160:Generated_Source\PSoC5/CapSense.c ****     }
1161:Generated_Source\PSoC5/CapSense.c ****     
1162:Generated_Source\PSoC5/CapSense.c ****     
1163:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1164:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1165:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1166:Generated_Source\PSoC5/CapSense.c ****     *
1167:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1168:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1169:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1170:Generated_Source\PSoC5/CapSense.c ****     *
1171:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1172:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1173:Generated_Source\PSoC5/CapSense.c ****     *
1174:Generated_Source\PSoC5/CapSense.c ****     * Return:
1175:Generated_Source\PSoC5/CapSense.c ****     *  None
1176:Generated_Source\PSoC5/CapSense.c ****     *
1177:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1178:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1179:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1180:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1181:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1182:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1183:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1184:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1185:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1186:Generated_Source\PSoC5/CapSense.c ****     *
1187:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1188:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1189:Generated_Source\PSoC5/CapSense.c ****     {
1190:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1191:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1192:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1193:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1194:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1195:Generated_Source\PSoC5/CapSense.c ****         
1196:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1197:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1198:Generated_Source\PSoC5/CapSense.c ****         {
1199:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1200:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1201:Generated_Source\PSoC5/CapSense.c ****         }
1202:Generated_Source\PSoC5/CapSense.c ****         else
1203:Generated_Source\PSoC5/CapSense.c ****         {
1204:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1205:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1206:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1207:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1208:Generated_Source\PSoC5/CapSense.c ****                         
1209:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1210:Generated_Source\PSoC5/CapSense.c ****             {
1211:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1212:Generated_Source\PSoC5/CapSense.c ****             }
1213:Generated_Source\PSoC5/CapSense.c ****         } 
1214:Generated_Source\PSoC5/CapSense.c ****     }
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 26


1215:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1216:Generated_Source\PSoC5/CapSense.c **** 
1217:Generated_Source\PSoC5/CapSense.c **** 
1218:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1219:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1220:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1221:Generated_Source\PSoC5/CapSense.c **** *
1222:Generated_Source\PSoC5/CapSense.c **** * Summary:
1223:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1224:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1225:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1226:Generated_Source\PSoC5/CapSense.c **** *
1227:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1228:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1229:Generated_Source\PSoC5/CapSense.c **** *
1230:Generated_Source\PSoC5/CapSense.c **** * Return:
1231:Generated_Source\PSoC5/CapSense.c **** *  None
1232:Generated_Source\PSoC5/CapSense.c **** *
1233:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1234:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1235:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1236:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1237:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1238:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1239:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1240:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1241:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1242:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1243:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1244:Generated_Source\PSoC5/CapSense.c **** *
1245:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1246:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1247:Generated_Source\PSoC5/CapSense.c **** {
 212              		.loc 1 1247 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL13:
 217 0000 10B5     		push	{r4, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
1248:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 221              		.loc 1 1248 0
 222 0002 0B4B     		ldr	r3, .L20
 223 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 224              	.LVL14:
1249:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 225              		.loc 1 1249 0
 226 0006 1A18     		adds	r2, r3, r0
 227 0008 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 228              	.LVL15:
1250:Generated_Source\PSoC5/CapSense.c ****     
1251:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1252:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1253:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1254:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 27


1255:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1256:Generated_Source\PSoC5/CapSense.c ****             */
1257:Generated_Source\PSoC5/CapSense.c ****     
1258:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1259:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 229              		.loc 1 1259 0
 230 000a 03EB8003 		add	r3, r3, r0, lsl #2
 231 000e 9B68     		ldr	r3, [r3, #8]
 232 0010 0922     		movs	r2, #9
 233 0012 1A70     		strb	r2, [r3]
1260:Generated_Source\PSoC5/CapSense.c ****     
1261:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1262:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 234              		.loc 1 1262 0
 235 0014 0F29     		cmp	r1, #15
 236 0016 00D1     		bne	.L17
1263:Generated_Source\PSoC5/CapSense.c **** 	{
1264:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 237              		.loc 1 1264 0
 238 0018 0721     		movs	r1, #7
 239              	.LVL16:
 240              	.L17:
1265:Generated_Source\PSoC5/CapSense.c **** 	}
1266:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 241              		.loc 1 1266 0
 242 001a 054A     		ldr	r2, .L20
 243 001c 02EB8102 		add	r2, r2, r1, lsl #2
 244 0020 1269     		ldr	r2, [r2, #16]
 245 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 246 0024 2343     		orrs	r3, r3, r4
 247 0026 1370     		strb	r3, [r2]
1267:Generated_Source\PSoC5/CapSense.c ****     
1268:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1269:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1270:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1271:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1272:Generated_Source\PSoC5/CapSense.c ****         #else
1273:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 248              		.loc 1 1273 0
 249 0028 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 250              	.LVL17:
 251 002c 10BD     		pop	{r4, pc}
 252              	.LVL18:
 253              	.L21:
 254 002e 00BF     		.align	2
 255              	.L20:
 256 0030 00000000 		.word	.LANCHOR1
 257              		.cfi_endproc
 258              	.LFE11:
 259              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 260              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 261              		.align	2
 262              		.global	CapSense_DisableSensor
 263              		.thumb
 264              		.thumb_func
 265              		.type	CapSense_DisableSensor, %function
 266              	CapSense_DisableSensor:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 28


 267              	.LFB12:
1274:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1275:Generated_Source\PSoC5/CapSense.c ****                 
1276:Generated_Source\PSoC5/CapSense.c ****     #else
1277:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1278:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1279:Generated_Source\PSoC5/CapSense.c ****             {
1280:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1281:Generated_Source\PSoC5/CapSense.c ****             } 
1282:Generated_Source\PSoC5/CapSense.c ****             else
1283:Generated_Source\PSoC5/CapSense.c ****             {
1284:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1285:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1286:Generated_Source\PSoC5/CapSense.c ****             }
1287:Generated_Source\PSoC5/CapSense.c ****             
1288:Generated_Source\PSoC5/CapSense.c ****         #else
1289:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1290:Generated_Source\PSoC5/CapSense.c ****             {
1291:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1292:Generated_Source\PSoC5/CapSense.c ****             } 
1293:Generated_Source\PSoC5/CapSense.c ****             else
1294:Generated_Source\PSoC5/CapSense.c ****             {
1295:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1296:Generated_Source\PSoC5/CapSense.c ****             }
1297:Generated_Source\PSoC5/CapSense.c ****             
1298:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1299:Generated_Source\PSoC5/CapSense.c ****         
1300:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1301:Generated_Source\PSoC5/CapSense.c **** }
1302:Generated_Source\PSoC5/CapSense.c **** 
1303:Generated_Source\PSoC5/CapSense.c **** 
1304:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1305:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1306:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1307:Generated_Source\PSoC5/CapSense.c **** *
1308:Generated_Source\PSoC5/CapSense.c **** * Summary:
1309:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1310:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1311:Generated_Source\PSoC5/CapSense.c **** *
1312:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1313:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1314:Generated_Source\PSoC5/CapSense.c **** *
1315:Generated_Source\PSoC5/CapSense.c **** * Return:
1316:Generated_Source\PSoC5/CapSense.c **** *  None
1317:Generated_Source\PSoC5/CapSense.c **** *
1318:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1319:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1320:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1321:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1322:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1323:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1324:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1325:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1326:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1327:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1328:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1329:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 29


1330:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1331:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1332:Generated_Source\PSoC5/CapSense.c **** {
 268              		.loc 1 1332 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL19:
 273 0000 70B5     		push	{r4, r5, r6, lr}
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 4, -16
 276              		.cfi_offset 5, -12
 277              		.cfi_offset 6, -8
 278              		.cfi_offset 14, -4
 279 0002 0546     		mov	r5, r0
1333:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 280              		.loc 1 1333 0
 281 0004 0B4B     		ldr	r3, .L26
 282 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 283              	.LVL20:
1334:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 284              		.loc 1 1334 0
 285 0008 0344     		add	r3, r3, r0
 286 000a 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 287              	.LVL21:
1335:Generated_Source\PSoC5/CapSense.c ****     
1336:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1337:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1338:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1339:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1340:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1341:Generated_Source\PSoC5/CapSense.c ****             */
1342:Generated_Source\PSoC5/CapSense.c ****     
1343:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1344:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1345:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1346:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1347:Generated_Source\PSoC5/CapSense.c ****         #else
1348:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 288              		.loc 1 1348 0
 289 000c FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 290              	.LVL22:
1349:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1350:Generated_Source\PSoC5/CapSense.c ****                 
1351:Generated_Source\PSoC5/CapSense.c ****     #else
1352:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1353:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1354:Generated_Source\PSoC5/CapSense.c ****             {
1355:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1356:Generated_Source\PSoC5/CapSense.c ****             } 
1357:Generated_Source\PSoC5/CapSense.c ****             else
1358:Generated_Source\PSoC5/CapSense.c ****             {
1359:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1360:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1361:Generated_Source\PSoC5/CapSense.c ****             }
1362:Generated_Source\PSoC5/CapSense.c ****             
1363:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 30


1364:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1365:Generated_Source\PSoC5/CapSense.c ****             {
1366:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1367:Generated_Source\PSoC5/CapSense.c ****             } 
1368:Generated_Source\PSoC5/CapSense.c ****             else
1369:Generated_Source\PSoC5/CapSense.c ****             {
1370:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1371:Generated_Source\PSoC5/CapSense.c ****             }
1372:Generated_Source\PSoC5/CapSense.c ****             
1373:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1374:Generated_Source\PSoC5/CapSense.c ****         
1375:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1376:Generated_Source\PSoC5/CapSense.c ****     
1377:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1378:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 291              		.loc 1 1378 0
 292 0010 0F2C     		cmp	r4, #15
 293 0012 00D1     		bne	.L23
1379:Generated_Source\PSoC5/CapSense.c **** 	{
1380:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 294              		.loc 1 1380 0
 295 0014 0724     		movs	r4, #7
 296              	.LVL23:
 297              	.L23:
1381:Generated_Source\PSoC5/CapSense.c **** 	}
1382:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 298              		.loc 1 1382 0
 299 0016 0748     		ldr	r0, .L26
 300 0018 00EB8404 		add	r4, r0, r4, lsl #2
 301              	.LVL24:
 302 001c 2269     		ldr	r2, [r4, #16]
 303 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 304 0020 23EA0603 		bic	r3, r3, r6
 305 0024 1370     		strb	r3, [r2]
1383:Generated_Source\PSoC5/CapSense.c ****     
1384:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1385:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1386:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 306              		.loc 1 1386 0
 307 0026 00EB8500 		add	r0, r0, r5, lsl #2
 308 002a 8368     		ldr	r3, [r0, #8]
 309 002c 0822     		movs	r2, #8
 310 002e 1A70     		strb	r2, [r3]
 311 0030 70BD     		pop	{r4, r5, r6, pc}
 312              	.LVL25:
 313              	.L27:
 314 0032 00BF     		.align	2
 315              	.L26:
 316 0034 00000000 		.word	.LANCHOR1
 317              		.cfi_endproc
 318              	.LFE12:
 319              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 320              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 321              		.align	2
 322              		.global	CapSense_ClearSensors
 323              		.thumb
 324              		.thumb_func
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 31


 325              		.type	CapSense_ClearSensors, %function
 326              	CapSense_ClearSensors:
 327              	.LFB10:
1097:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 328              		.loc 1 1097 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336              	.LVL26:
1100:Generated_Source\PSoC5/CapSense.c ****     {
 337              		.loc 1 1100 0
 338 0002 0024     		movs	r4, #0
 339 0004 04E0     		b	.L29
 340              	.LVL27:
 341              	.L30:
1102:Generated_Source\PSoC5/CapSense.c ****     }
 342              		.loc 1 1102 0 discriminator 3
 343 0006 2046     		mov	r0, r4
 344 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 345              	.LVL28:
1100:Generated_Source\PSoC5/CapSense.c ****     {
 346              		.loc 1 1100 0 discriminator 3
 347 000c 0134     		adds	r4, r4, #1
 348              	.LVL29:
 349 000e E4B2     		uxtb	r4, r4
 350              	.LVL30:
 351              	.L29:
1100:Generated_Source\PSoC5/CapSense.c ****     {
 352              		.loc 1 1100 0 is_stmt 0 discriminator 1
 353 0010 012C     		cmp	r4, #1
 354 0012 F8D9     		bls	.L30
1104:Generated_Source\PSoC5/CapSense.c **** 
 355              		.loc 1 1104 0 is_stmt 1
 356 0014 10BD     		pop	{r4, pc}
 357              		.cfi_endproc
 358              	.LFE10:
 359              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 360 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 361              		.align	2
 362              		.global	CapSense_Stop
 363              		.thumb
 364              		.thumb_func
 365              		.type	CapSense_Stop, %function
 366              	CapSense_Stop:
 367              	.LFB3:
 517:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 368              		.loc 1 517 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 32


 375              		.cfi_offset 14, -4
 519:Generated_Source\PSoC5/CapSense.c ****     
 376              		.loc 1 519 0
 377 0002 1B4C     		ldr	r4, .L34
 378 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 379 0006 03F0FD03 		and	r3, r3, #253
 380 000a 2370     		strb	r3, [r4]
 522:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 381              		.loc 1 522 0
 382 000c 2022     		movs	r2, #32
 383 000e 194B     		ldr	r3, .L34+4
 384 0010 1A60     		str	r2, [r3]
 528:Generated_Source\PSoC5/CapSense.c ****     
 385              		.loc 1 528 0
 386 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 387              	.LVL31:
 534:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 388              		.loc 1 534 0
 389 0016 184A     		ldr	r2, .L34+8
 390 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 391 001a 03F0FD03 		and	r3, r3, #253
 392 001e 1370     		strb	r3, [r2]
 535:Generated_Source\PSoC5/CapSense.c ****         
 393              		.loc 1 535 0
 394 0020 1032     		adds	r2, r2, #16
 395 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 396 0024 03F0FD03 		and	r3, r3, #253
 397 0028 1370     		strb	r3, [r2]
 542:Generated_Source\PSoC5/CapSense.c ****     
 398              		.loc 1 542 0
 399 002a 02F50352 		add	r2, r2, #8384
 400 002e 2B32     		adds	r2, r2, #43
 401 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 402 0032 03F0DF03 		and	r3, r3, #223
 403 0036 1370     		strb	r3, [r2]
 581:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 404              		.loc 1 581 0
 405 0038 FFF7FEFF 		bl	CapSense_IntClock_Stop
 406              	.LVL32:
 585:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 407              		.loc 1 585 0
 408 003c FFF7FEFF 		bl	CapSense_CompCH0_Stop
 409              	.LVL33:
 587:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 410              		.loc 1 587 0
 411 0040 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 412              	.LVL34:
 609:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 413              		.loc 1 609 0
 414 0044 0D4A     		ldr	r2, .L34+12
 415 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 416 0048 03F0FE03 		and	r3, r3, #254
 417 004c 1370     		strb	r3, [r2]
 610:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 418              		.loc 1 610 0
 419 004e A2F5A652 		sub	r2, r2, #5312
 420 0052 053A     		subs	r2, r2, #5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 33


 421 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 422 0056 03F0EF03 		and	r3, r3, #239
 423 005a 1370     		strb	r3, [r2]
 611:Generated_Source\PSoC5/CapSense.c ****         
 424              		.loc 1 611 0
 425 005c 1032     		adds	r2, r2, #16
 426 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 427 0060 03F0EF03 		and	r3, r3, #239
 428 0064 1370     		strb	r3, [r2]
 621:Generated_Source\PSoC5/CapSense.c **** }
 429              		.loc 1 621 0
 430 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 431 0068 03F07F03 		and	r3, r3, #127
 432 006c 2370     		strb	r3, [r4]
 433 006e 10BD     		pop	{r4, pc}
 434              	.L35:
 435              		.align	2
 436              	.L34:
 437 0070 7F640040 		.word	1073767551
 438 0074 80E100E0 		.word	-536813184
 439 0078 A3430040 		.word	1073759139
 440 007c 70580040 		.word	1073764464
 441              		.cfi_endproc
 442              	.LFE3:
 443              		.size	CapSense_Stop, .-CapSense_Stop
 444              		.section	.text.CapSense_PostScan,"ax",%progbits
 445              		.align	2
 446              		.global	CapSense_PostScan
 447              		.thumb
 448              		.thumb_func
 449              		.type	CapSense_PostScan, %function
 450              	CapSense_PostScan:
 451              	.LFB14:
1387:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1388:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1389:Generated_Source\PSoC5/CapSense.c ****     #else
1390:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1391:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1392:Generated_Source\PSoC5/CapSense.c **** }
1393:Generated_Source\PSoC5/CapSense.c **** 
1394:Generated_Source\PSoC5/CapSense.c **** 
1395:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1396:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1397:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1398:Generated_Source\PSoC5/CapSense.c **** *
1399:Generated_Source\PSoC5/CapSense.c **** * Summary:
1400:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1401:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1402:Generated_Source\PSoC5/CapSense.c **** *
1403:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1404:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1405:Generated_Source\PSoC5/CapSense.c **** *
1406:Generated_Source\PSoC5/CapSense.c **** * Return:
1407:Generated_Source\PSoC5/CapSense.c **** *  None
1408:Generated_Source\PSoC5/CapSense.c **** *
1409:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1410:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 34


1411:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1412:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1413:Generated_Source\PSoC5/CapSense.c **** *
1414:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1415:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1416:Generated_Source\PSoC5/CapSense.c **** {
1417:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1418:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1419:Generated_Source\PSoC5/CapSense.c ****     
1420:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1421:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1422:Generated_Source\PSoC5/CapSense.c **** 
1423:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1424:Generated_Source\PSoC5/CapSense.c ****     
1425:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1426:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1427:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1428:Generated_Source\PSoC5/CapSense.c **** 
1429:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1430:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1431:Generated_Source\PSoC5/CapSense.c ****         
1432:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1433:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1434:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1435:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1436:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1437:Generated_Source\PSoC5/CapSense.c ****             #else
1438:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1439:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1440:Generated_Source\PSoC5/CapSense.c **** 
1441:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1442:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1443:Generated_Source\PSoC5/CapSense.c ****             
1444:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1445:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1446:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1447:Generated_Source\PSoC5/CapSense.c ****             
1448:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1449:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1450:Generated_Source\PSoC5/CapSense.c ****                 
1451:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1452:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1453:Generated_Source\PSoC5/CapSense.c ****             
1454:Generated_Source\PSoC5/CapSense.c ****         #else
1455:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1456:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1457:Generated_Source\PSoC5/CapSense.c ****             
1458:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1459:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1460:Generated_Source\PSoC5/CapSense.c ****              
1461:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1462:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1463:Generated_Source\PSoC5/CapSense.c ****         
1464:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1465:Generated_Source\PSoC5/CapSense.c ****         
1466:Generated_Source\PSoC5/CapSense.c ****     #else
1467:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 35


1468:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1469:Generated_Source\PSoC5/CapSense.c ****         {
1470:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1471:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1472:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1473:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1474:Generated_Source\PSoC5/CapSense.c ****                 #else
1475:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1476:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1477:Generated_Source\PSoC5/CapSense.c ****                 
1478:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1479:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1480:Generated_Source\PSoC5/CapSense.c ****                 
1481:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1482:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1483:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1484:Generated_Source\PSoC5/CapSense.c ****                 
1485:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1486:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1487:Generated_Source\PSoC5/CapSense.c ****                     
1488:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1489:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1490:Generated_Source\PSoC5/CapSense.c ****                 
1491:Generated_Source\PSoC5/CapSense.c ****             #else
1492:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1493:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1494:Generated_Source\PSoC5/CapSense.c ****                 
1495:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1496:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1497:Generated_Source\PSoC5/CapSense.c ****                     
1498:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1499:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1500:Generated_Source\PSoC5/CapSense.c ****             
1501:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1502:Generated_Source\PSoC5/CapSense.c ****             
1503:Generated_Source\PSoC5/CapSense.c ****         }
1504:Generated_Source\PSoC5/CapSense.c ****         
1505:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1506:Generated_Source\PSoC5/CapSense.c ****         {
1507:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1508:Generated_Source\PSoC5/CapSense.c ****             
1509:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1510:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1511:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1512:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1513:Generated_Source\PSoC5/CapSense.c ****                 #else 
1514:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1515:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1516:Generated_Source\PSoC5/CapSense.c ****                 
1517:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1518:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1519:Generated_Source\PSoC5/CapSense.c ****                 
1520:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1521:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1522:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1523:Generated_Source\PSoC5/CapSense.c ****                 
1524:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 36


1525:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1526:Generated_Source\PSoC5/CapSense.c ****                     
1527:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1528:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1529:Generated_Source\PSoC5/CapSense.c ****                 
1530:Generated_Source\PSoC5/CapSense.c ****             #else
1531:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1532:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1533:Generated_Source\PSoC5/CapSense.c ****                 
1534:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1535:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1536:Generated_Source\PSoC5/CapSense.c ****                 
1537:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1538:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1539:Generated_Source\PSoC5/CapSense.c ****             
1540:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1541:Generated_Source\PSoC5/CapSense.c ****         }
1542:Generated_Source\PSoC5/CapSense.c ****     
1543:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1544:Generated_Source\PSoC5/CapSense.c ****     
1545:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1546:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1547:Generated_Source\PSoC5/CapSense.c ****     
1548:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1549:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1550:Generated_Source\PSoC5/CapSense.c **** 
1551:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1552:Generated_Source\PSoC5/CapSense.c **** 
1553:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1554:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1555:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1556:Generated_Source\PSoC5/CapSense.c **** }
1557:Generated_Source\PSoC5/CapSense.c **** 
1558:Generated_Source\PSoC5/CapSense.c **** 
1559:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1560:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1561:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1562:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1563:Generated_Source\PSoC5/CapSense.c ****     *
1564:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1565:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1566:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1567:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1568:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1569:Generated_Source\PSoC5/CapSense.c ****     *
1570:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1571:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1572:Generated_Source\PSoC5/CapSense.c ****     *
1573:Generated_Source\PSoC5/CapSense.c ****     * Return:
1574:Generated_Source\PSoC5/CapSense.c ****     *  None
1575:Generated_Source\PSoC5/CapSense.c ****     *
1576:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1577:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1578:Generated_Source\PSoC5/CapSense.c ****     *
1579:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1580:Generated_Source\PSoC5/CapSense.c ****     *  No
1581:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 37


1582:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1583:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1584:Generated_Source\PSoC5/CapSense.c ****     {
 452              		.loc 1 1584 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              	.LVL35:
 457 0000 10B5     		push	{r4, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 4, -8
 460              		.cfi_offset 14, -4
1585:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1586:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 461              		.loc 1 1586 0
 462 0002 0E4A     		ldr	r2, .L38
 463 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 464 0006 03F0FC03 		and	r3, r3, #252
 465 000a 1370     		strb	r3, [r2]
1587:Generated_Source\PSoC5/CapSense.c ****         
1588:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1589:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1590:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1591:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1592:Generated_Source\PSoC5/CapSense.c ****         #else
1593:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 466              		.loc 1 1593 0
 467 000c 0C4B     		ldr	r3, .L38+4
 468 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 0010 1B02     		lsls	r3, r3, #8
 470 0012 0C49     		ldr	r1, .L38+8
 471 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1594:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 472              		.loc 1 1594 0
 473 0018 743A     		subs	r2, r2, #116
 474 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 475 001c 1343     		orrs	r3, r3, r2
1595:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 476              		.loc 1 1595 0
 477 001e DB43     		mvns	r3, r3
 478 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1596:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1597:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1598:Generated_Source\PSoC5/CapSense.c ****         
1599:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1600:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 479              		.loc 1 1600 0
 480 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 481              	.LVL36:
1601:Generated_Source\PSoC5/CapSense.c ****         
1602:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1603:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1604:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 482              		.loc 1 1604 0
 483 0028 0020     		movs	r0, #0
 484 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 485              	.LVL37:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 38


1605:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1606:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1607:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1608:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1609:Generated_Source\PSoC5/CapSense.c ****         #else
1610:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1611:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1612:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1613:Generated_Source\PSoC5/CapSense.c ****             
1614:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1615:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1616:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1617:Generated_Source\PSoC5/CapSense.c ****         #else
1618:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 486              		.loc 1 1618 0
 487 002e 064A     		ldr	r2, .L38+12
 488 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 489 0032 43F00103 		orr	r3, r3, #1
 490 0036 1370     		strb	r3, [r2]
 491 0038 10BD     		pop	{r4, pc}
 492              	.L39:
 493 003a 00BF     		.align	2
 494              	.L38:
 495 003c 7F640040 		.word	1073767551
 496 0040 1B640040 		.word	1073767451
 497 0044 00000000 		.word	CapSense_sensorRaw
 498 0048 70580040 		.word	1073764464
 499              		.cfi_endproc
 500              	.LFE14:
 501              		.size	CapSense_PostScan, .-CapSense_PostScan
 502              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 503              		.align	2
 504              		.global	CapSense_SetPrescaler
 505              		.thumb
 506              		.thumb_func
 507              		.type	CapSense_SetPrescaler, %function
 508              	CapSense_SetPrescaler:
 509              	.LFB15:
1619:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1620:Generated_Source\PSoC5/CapSense.c ****     }
1621:Generated_Source\PSoC5/CapSense.c ****     
1622:Generated_Source\PSoC5/CapSense.c **** #else
1623:Generated_Source\PSoC5/CapSense.c **** 
1624:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1625:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1626:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1627:Generated_Source\PSoC5/CapSense.c ****     *
1628:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1629:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1630:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1631:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1632:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1633:Generated_Source\PSoC5/CapSense.c ****     *
1634:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1635:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1636:Generated_Source\PSoC5/CapSense.c ****     *
1637:Generated_Source\PSoC5/CapSense.c ****     * Return:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 39


1638:Generated_Source\PSoC5/CapSense.c ****     *  None
1639:Generated_Source\PSoC5/CapSense.c ****     *
1640:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1641:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1642:Generated_Source\PSoC5/CapSense.c ****     *
1643:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1644:Generated_Source\PSoC5/CapSense.c ****     *  No
1645:Generated_Source\PSoC5/CapSense.c ****     *
1646:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1647:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1648:Generated_Source\PSoC5/CapSense.c ****     {
1649:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1650:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1651:Generated_Source\PSoC5/CapSense.c ****         {
1652:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1653:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1654:Generated_Source\PSoC5/CapSense.c ****         }
1655:Generated_Source\PSoC5/CapSense.c ****         
1656:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1657:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1658:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1659:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1660:Generated_Source\PSoC5/CapSense.c ****         #else
1661:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1662:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1663:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1664:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1665:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1666:Generated_Source\PSoC5/CapSense.c ****         
1667:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1668:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1669:Generated_Source\PSoC5/CapSense.c ****         
1670:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1671:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1672:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1673:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1674:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1675:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1676:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1677:Generated_Source\PSoC5/CapSense.c ****         #else
1678:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1679:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1680:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1681:Generated_Source\PSoC5/CapSense.c ****         
1682:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1683:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1684:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1685:Generated_Source\PSoC5/CapSense.c ****         #else
1686:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1687:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1688:Generated_Source\PSoC5/CapSense.c ****     }
1689:Generated_Source\PSoC5/CapSense.c ****     
1690:Generated_Source\PSoC5/CapSense.c ****     
1691:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1692:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1693:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1694:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 40


1695:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1696:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1697:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1698:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1699:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1700:Generated_Source\PSoC5/CapSense.c ****     *
1701:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1702:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1703:Generated_Source\PSoC5/CapSense.c ****     *
1704:Generated_Source\PSoC5/CapSense.c ****     * Return:
1705:Generated_Source\PSoC5/CapSense.c ****     *  None
1706:Generated_Source\PSoC5/CapSense.c ****     *
1707:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1708:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1709:Generated_Source\PSoC5/CapSense.c ****     *
1710:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1711:Generated_Source\PSoC5/CapSense.c ****     *  No
1712:Generated_Source\PSoC5/CapSense.c ****     *
1713:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1714:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1715:Generated_Source\PSoC5/CapSense.c ****     {
1716:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1717:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1718:Generated_Source\PSoC5/CapSense.c ****         {
1719:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1720:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1721:Generated_Source\PSoC5/CapSense.c ****         }
1722:Generated_Source\PSoC5/CapSense.c ****         
1723:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1724:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1726:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1727:Generated_Source\PSoC5/CapSense.c ****         #else
1728:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1729:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1730:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1731:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1732:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1733:Generated_Source\PSoC5/CapSense.c ****         
1734:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1735:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1736:Generated_Source\PSoC5/CapSense.c ****         
1737:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1738:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1739:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1740:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1741:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1742:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1743:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1744:Generated_Source\PSoC5/CapSense.c ****         #else
1745:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1746:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1747:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1748:Generated_Source\PSoC5/CapSense.c **** 
1749:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1750:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1751:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 41


1752:Generated_Source\PSoC5/CapSense.c ****         #else
1753:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1754:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1755:Generated_Source\PSoC5/CapSense.c ****     }
1756:Generated_Source\PSoC5/CapSense.c ****     
1757:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1758:Generated_Source\PSoC5/CapSense.c **** 
1759:Generated_Source\PSoC5/CapSense.c **** 
1760:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1761:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1762:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1763:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1764:Generated_Source\PSoC5/CapSense.c ****     *
1765:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1766:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1767:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1768:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1769:Generated_Source\PSoC5/CapSense.c ****     *
1770:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1771:Generated_Source\PSoC5/CapSense.c ****     *  None
1772:Generated_Source\PSoC5/CapSense.c ****     *
1773:Generated_Source\PSoC5/CapSense.c ****     * Return:
1774:Generated_Source\PSoC5/CapSense.c ****     *  None
1775:Generated_Source\PSoC5/CapSense.c ****     *
1776:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1777:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1778:Generated_Source\PSoC5/CapSense.c ****     {
1779:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1780:Generated_Source\PSoC5/CapSense.c ****         
1781:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1782:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1783:Generated_Source\PSoC5/CapSense.c ****         {
1784:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1785:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1786:Generated_Source\PSoC5/CapSense.c ****         }
1787:Generated_Source\PSoC5/CapSense.c ****     }
1788:Generated_Source\PSoC5/CapSense.c ****     
1789:Generated_Source\PSoC5/CapSense.c ****     
1790:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1791:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1792:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1793:Generated_Source\PSoC5/CapSense.c ****     *
1794:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1795:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1796:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1797:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1798:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1799:Generated_Source\PSoC5/CapSense.c ****     * 
1800:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1801:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1802:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1803:Generated_Source\PSoC5/CapSense.c ****     *
1804:Generated_Source\PSoC5/CapSense.c ****     * Return:
1805:Generated_Source\PSoC5/CapSense.c ****     *  None
1806:Generated_Source\PSoC5/CapSense.c ****     *
1807:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1808:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 42


1809:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1810:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1811:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1812:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1813:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1814:Generated_Source\PSoC5/CapSense.c ****     *
1815:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1816:Generated_Source\PSoC5/CapSense.c ****     *  No
1817:Generated_Source\PSoC5/CapSense.c ****     *
1818:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1819:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1820:Generated_Source\PSoC5/CapSense.c ****     {
1821:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1822:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1823:Generated_Source\PSoC5/CapSense.c ****             
1824:Generated_Source\PSoC5/CapSense.c ****         #else
1825:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1826:Generated_Source\PSoC5/CapSense.c ****             {
1827:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1828:Generated_Source\PSoC5/CapSense.c ****             }
1829:Generated_Source\PSoC5/CapSense.c ****             else
1830:Generated_Source\PSoC5/CapSense.c ****             {
1831:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1832:Generated_Source\PSoC5/CapSense.c ****             }
1833:Generated_Source\PSoC5/CapSense.c ****     
1834:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1835:Generated_Source\PSoC5/CapSense.c ****     }
1836:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1837:Generated_Source\PSoC5/CapSense.c **** 
1838:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1839:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1840:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1841:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1842:Generated_Source\PSoC5/CapSense.c ****     *
1843:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1844:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1845:Generated_Source\PSoC5/CapSense.c ****     *
1846:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1847:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1848:Generated_Source\PSoC5/CapSense.c ****     *
1849:Generated_Source\PSoC5/CapSense.c ****     * Return:
1850:Generated_Source\PSoC5/CapSense.c ****     *  None
1851:Generated_Source\PSoC5/CapSense.c ****     *
1852:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1853:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1854:Generated_Source\PSoC5/CapSense.c ****     {
 510              		.loc 1 1854 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515              	.LVL38:
1855:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1856:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1857:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
1858:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
1859:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 43


1860:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
 516              		.loc 1 1860 0
 517 0000 82B2     		uxth	r2, r0
 518 0002 034B     		ldr	r3, .L41
 519 0004 1A80     		strh	r2, [r3]	@ movhi
1861:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
 520              		.loc 1 1861 0
 521 0006 4008     		lsrs	r0, r0, #1
 522              	.LVL39:
 523 0008 0233     		adds	r3, r3, #2
 524 000a 1880     		strh	r0, [r3]	@ movhi
 525 000c 7047     		bx	lr
 526              	.L42:
 527 000e 00BF     		.align	2
 528              	.L41:
 529 0010 104F0040 		.word	1073762064
 530              		.cfi_endproc
 531              	.LFE15:
 532              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 533              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 534              		.align	2
 535              		.global	CapSense_SetScanSlotSettings
 536              		.thumb
 537              		.thumb_func
 538              		.type	CapSense_SetScanSlotSettings, %function
 539              	CapSense_SetScanSlotSettings:
 540              	.LFB5:
 809:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 541              		.loc 1 809 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL40:
 546 0000 70B5     		push	{r4, r5, r6, lr}
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 4, -16
 549              		.cfi_offset 5, -12
 550              		.cfi_offset 6, -8
 551              		.cfi_offset 14, -4
 552 0002 0446     		mov	r4, r0
 814:Generated_Source\PSoC5/CapSense.c ****         
 553              		.loc 1 814 0
 554 0004 084B     		ldr	r3, .L45
 555 0006 0344     		add	r3, r3, r0
 556 0008 93F83050 		ldrb	r5, [r3, #48]	@ zero_extendqisi2
 557              	.LVL41:
 818:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 558              		.loc 1 818 0
 559 000c 074E     		ldr	r6, .L45+4
 560 000e 3318     		adds	r3, r6, r0
 561 0010 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 562              	.LVL42:
 563 0012 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 564              	.LVL43:
 826:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 565              		.loc 1 826 0
 566 0016 3544     		add	r5, r5, r6
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 44


 567              	.LVL44:
 568 0018 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 569 001a 054B     		ldr	r3, .L45+8
 570 001c 1A70     		strb	r2, [r3]
 831:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 571              		.loc 1 831 0
 572 001e 054B     		ldr	r3, .L45+12
 573 0020 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 574 0022 FFF7FEFF 		bl	CapSense_SetPrescaler
 575              	.LVL45:
 576 0026 70BD     		pop	{r4, r5, r6, pc}
 577              	.LVL46:
 578              	.L46:
 579              		.align	2
 580              	.L45:
 581 0028 00000000 		.word	.LANCHOR1
 582 002c 00000000 		.word	.LANCHOR0
 583 0030 5D640040 		.word	1073767517
 584 0034 00000000 		.word	CapSense_analogSwitchDivider
 585              		.cfi_endproc
 586              	.LFE5:
 587              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 588              		.section	.text.CapSense_PreScan,"ax",%progbits
 589              		.align	2
 590              		.global	CapSense_PreScan
 591              		.thumb
 592              		.thumb_func
 593              		.type	CapSense_PreScan, %function
 594              	CapSense_PreScan:
 595              	.LFB13:
1416:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 596              		.loc 1 1416 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL47:
 601 0000 38B5     		push	{r3, r4, r5, lr}
 602              		.cfi_def_cfa_offset 16
 603              		.cfi_offset 3, -16
 604              		.cfi_offset 4, -12
 605              		.cfi_offset 5, -8
 606              		.cfi_offset 14, -4
 607 0002 0546     		mov	r5, r0
1418:Generated_Source\PSoC5/CapSense.c ****     
 608              		.loc 1 1418 0
 609 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 610              	.LVL48:
1430:Generated_Source\PSoC5/CapSense.c ****         
 611              		.loc 1 1430 0
 612 0008 084C     		ldr	r4, .L49
 613 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 614 000c 43F00103 		orr	r3, r3, #1
 615 0010 2370     		strb	r3, [r4]
1438:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 616              		.loc 1 1438 0
 617 0012 074A     		ldr	r2, .L49+4
 618 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 45


 619 0016 03F0FE03 		and	r3, r3, #254
 620 001a 1370     		strb	r3, [r2]
1442:Generated_Source\PSoC5/CapSense.c ****             
 621              		.loc 1 1442 0
 622 001c 2846     		mov	r0, r5
 623 001e FFF7FEFF 		bl	CapSense_EnableSensor
 624              	.LVL49:
1546:Generated_Source\PSoC5/CapSense.c ****     
 625              		.loc 1 1546 0
 626 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 627 0024 43F00203 		orr	r3, r3, #2
 628 0028 2370     		strb	r3, [r4]
 629 002a 38BD     		pop	{r3, r4, r5, pc}
 630              	.L50:
 631              		.align	2
 632              	.L49:
 633 002c 7F640040 		.word	1073767551
 634 0030 70580040 		.word	1073764464
 635              		.cfi_endproc
 636              	.LFE13:
 637              		.size	CapSense_PreScan, .-CapSense_PreScan
 638              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 639              		.align	2
 640              		.global	CapSense_ScanSensor
 641              		.thumb
 642              		.thumb_func
 643              		.type	CapSense_ScanSensor, %function
 644              	CapSense_ScanSensor:
 645              	.LFB6:
 921:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 646              		.loc 1 921 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL50:
 651 0000 08B5     		push	{r3, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 3, -8
 654              		.cfi_offset 14, -4
 923:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 655              		.loc 1 923 0
 656 0002 054B     		ldr	r3, .L53
 657 0004 0022     		movs	r2, #0
 658 0006 1A70     		strb	r2, [r3]
 924:Generated_Source\PSoC5/CapSense.c ****     
 659              		.loc 1 924 0
 660 0008 044A     		ldr	r2, .L53+4
 661 000a 1070     		strb	r0, [r2]
 928:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 662              		.loc 1 928 0
 663 000c 8122     		movs	r2, #129
 664 000e 1A70     		strb	r2, [r3]
 929:Generated_Source\PSoC5/CapSense.c ****         
 665              		.loc 1 929 0
 666 0010 FFF7FEFF 		bl	CapSense_PreScan
 667              	.LVL51:
 668 0014 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 46


 669              	.L54:
 670 0016 00BF     		.align	2
 671              	.L53:
 672 0018 00000000 		.word	CapSense_csv
 673 001c 00000000 		.word	CapSense_sensorIndex
 674              		.cfi_endproc
 675              	.LFE6:
 676              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 677              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 678              		.align	2
 679              		.global	CapSense_ScanEnabledWidgets
 680              		.thumb
 681              		.thumb_func
 682              		.type	CapSense_ScanEnabledWidgets, %function
 683              	CapSense_ScanEnabledWidgets:
 684              	.LFB7:
 998:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 685              		.loc 1 998 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 10B5     		push	{r4, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 4, -8
 692              		.cfi_offset 14, -4
1000:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 693              		.loc 1 1000 0
 694 0002 0022     		movs	r2, #0
 695 0004 0A4B     		ldr	r3, .L58
 696 0006 1A70     		strb	r2, [r3]
1001:Generated_Source\PSoC5/CapSense.c ****     
 697              		.loc 1 1001 0
 698 0008 0A4C     		ldr	r4, .L58+4
 699 000a FF23     		movs	r3, #255
 700 000c 2370     		strb	r3, [r4]
1005:Generated_Source\PSoC5/CapSense.c **** 
 701              		.loc 1 1005 0
 702 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 703 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 704              	.LVL52:
 705 0014 2070     		strb	r0, [r4]
1008:Generated_Source\PSoC5/CapSense.c ****         {
 706              		.loc 1 1008 0
 707 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 708 0018 DBB2     		uxtb	r3, r3
 709 001a 012B     		cmp	r3, #1
 710 001c 07D8     		bhi	.L55
1010:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 711              		.loc 1 1010 0
 712 001e 044A     		ldr	r2, .L58
 713 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 714 0022 43F00103 		orr	r3, r3, #1
 715 0026 1370     		strb	r3, [r2]
1011:Generated_Source\PSoC5/CapSense.c ****         }
 716              		.loc 1 1011 0
 717 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 718 002a FFF7FEFF 		bl	CapSense_PreScan
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 47


 719              	.LVL53:
 720              	.L55:
 721 002e 10BD     		pop	{r4, pc}
 722              	.L59:
 723              		.align	2
 724              	.L58:
 725 0030 00000000 		.word	CapSense_csv
 726 0034 00000000 		.word	CapSense_sensorIndex
 727              		.cfi_endproc
 728              	.LFE7:
 729              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 730              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 731              		.align	2
 732              		.global	CapSense_GetPrescaler
 733              		.thumb
 734              		.thumb_func
 735              		.type	CapSense_GetPrescaler, %function
 736              	CapSense_GetPrescaler:
 737              	.LFB16:
1862:Generated_Source\PSoC5/CapSense.c ****         #else
1863:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1864:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1865:Generated_Source\PSoC5/CapSense.c ****     }
1866:Generated_Source\PSoC5/CapSense.c **** 
1867:Generated_Source\PSoC5/CapSense.c **** 
1868:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1869:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1870:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1871:Generated_Source\PSoC5/CapSense.c ****     *
1872:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1873:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1874:Generated_Source\PSoC5/CapSense.c ****     *
1875:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1876:Generated_Source\PSoC5/CapSense.c ****     *  None
1877:Generated_Source\PSoC5/CapSense.c ****     *
1878:Generated_Source\PSoC5/CapSense.c ****     * Return:
1879:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1880:Generated_Source\PSoC5/CapSense.c ****     *
1881:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1882:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1883:Generated_Source\PSoC5/CapSense.c ****     {
 738              		.loc 1 1883 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL54:
1884:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1885:Generated_Source\PSoC5/CapSense.c **** 
1886:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1887:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1888:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
1889:Generated_Source\PSoC5/CapSense.c ****             
1890:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1891:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
 744              		.loc 1 1891 0
 745 0000 014B     		ldr	r3, .L61
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 48


 746 0002 1888     		ldrh	r0, [r3]
 747              	.LVL55:
1892:Generated_Source\PSoC5/CapSense.c ****             
1893:Generated_Source\PSoC5/CapSense.c ****         #else
1894:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1895:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1896:Generated_Source\PSoC5/CapSense.c ****         
1897:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1898:Generated_Source\PSoC5/CapSense.c ****     }
 748              		.loc 1 1898 0
 749 0004 C0B2     		uxtb	r0, r0
 750 0006 7047     		bx	lr
 751              	.L62:
 752              		.align	2
 753              	.L61:
 754 0008 104F0040 		.word	1073762064
 755              		.cfi_endproc
 756              	.LFE16:
 757              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 758              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 759              		.align	2
 760              		.global	CapSense_SetScanSpeed
 761              		.thumb
 762              		.thumb_func
 763              		.type	CapSense_SetScanSpeed, %function
 764              	CapSense_SetScanSpeed:
 765              	.LFB17:
1899:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1900:Generated_Source\PSoC5/CapSense.c **** 
1901:Generated_Source\PSoC5/CapSense.c **** 
1902:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1903:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1904:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1905:Generated_Source\PSoC5/CapSense.c **** *
1906:Generated_Source\PSoC5/CapSense.c **** * Summary:
1907:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1908:Generated_Source\PSoC5/CapSense.c **** *
1909:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1910:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1911:Generated_Source\PSoC5/CapSense.c **** *
1912:Generated_Source\PSoC5/CapSense.c **** * Return:
1913:Generated_Source\PSoC5/CapSense.c **** *  None
1914:Generated_Source\PSoC5/CapSense.c **** *
1915:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1916:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1917:Generated_Source\PSoC5/CapSense.c **** {
 766              		.loc 1 1917 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL56:
1918:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 772              		.loc 1 1918 0
 773 0000 014B     		ldr	r3, .L64
 774 0002 1870     		strb	r0, [r3]
 775 0004 7047     		bx	lr
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 49


 776              	.L65:
 777 0006 00BF     		.align	2
 778              	.L64:
 779 0008 8E640040 		.word	1073767566
 780              		.cfi_endproc
 781              	.LFE17:
 782              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 783              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 784              		.align	2
 785              		.global	CapSense_SetAnalogSwitchesSource
 786              		.thumb
 787              		.thumb_func
 788              		.type	CapSense_SetAnalogSwitchesSource, %function
 789              	CapSense_SetAnalogSwitchesSource:
 790              	.LFB18:
1919:Generated_Source\PSoC5/CapSense.c **** }
1920:Generated_Source\PSoC5/CapSense.c **** 
1921:Generated_Source\PSoC5/CapSense.c **** 
1922:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1923:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1924:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1925:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1926:Generated_Source\PSoC5/CapSense.c ****     *
1927:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1928:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1929:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1930:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1931:Generated_Source\PSoC5/CapSense.c ****     *
1932:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1933:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1934:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1935:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1936:Generated_Source\PSoC5/CapSense.c ****     *
1937:Generated_Source\PSoC5/CapSense.c ****     * Return:
1938:Generated_Source\PSoC5/CapSense.c ****     *  None
1939:Generated_Source\PSoC5/CapSense.c ****     *
1940:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1941:Generated_Source\PSoC5/CapSense.c ****     *  No
1942:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1943:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1944:Generated_Source\PSoC5/CapSense.c ****                       
1945:Generated_Source\PSoC5/CapSense.c ****     {
 791              		.loc 1 1945 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796              	.LVL57:
1946:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 797              		.loc 1 1946 0
 798 0000 0128     		cmp	r0, #1
 799 0002 05D1     		bne	.L67
1947:Generated_Source\PSoC5/CapSense.c ****         {
1948:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 800              		.loc 1 1948 0
 801 0004 054A     		ldr	r2, .L69
 802 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 50


 803 0008 03F0EF03 		and	r3, r3, #239
 804 000c 1370     		strb	r3, [r2]
 805 000e 7047     		bx	lr
 806              	.L67:
1949:Generated_Source\PSoC5/CapSense.c ****         }
1950:Generated_Source\PSoC5/CapSense.c ****         else
1951:Generated_Source\PSoC5/CapSense.c ****         {
1952:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 807              		.loc 1 1952 0
 808 0010 024A     		ldr	r2, .L69
 809 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 810 0014 43F01003 		orr	r3, r3, #16
 811 0018 1370     		strb	r3, [r2]
 812 001a 7047     		bx	lr
 813              	.L70:
 814              		.align	2
 815              	.L69:
 816 001c 7F640040 		.word	1073767551
 817              		.cfi_endproc
 818              	.LFE18:
 819              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 820              		.section	.text.CapSense_Init,"ax",%progbits
 821              		.align	2
 822              		.global	CapSense_Init
 823              		.thumb
 824              		.thumb_func
 825              		.type	CapSense_Init, %function
 826              	CapSense_Init:
 827              	.LFB0:
 102:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 828              		.loc 1 102 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
 116:Generated_Source\PSoC5/CapSense.c **** 
 838              		.loc 1 116 0
 839 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 840              	.LVL58:
 122:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 841              		.loc 1 122 0
 842 0006 0324     		movs	r4, #3
 843 0008 324B     		ldr	r3, .L73
 844 000a 1C70     		strb	r4, [r3]
 125:Generated_Source\PSoC5/CapSense.c ****     #else
 845              		.loc 1 125 0
 846 000c 324A     		ldr	r2, .L73+4
 847 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 848 0010 43F02003 		orr	r3, r3, #32
 849 0014 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 850              		.loc 1 132 0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 51


 851 0016 0220     		movs	r0, #2
 852 0018 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 853              	.LVL59:
 148:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 854              		.loc 1 148 0
 855 001c FFF7FEFF 		bl	CyEnterCriticalSection
 856              	.LVL60:
 149:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 857              		.loc 1 149 0
 858 0020 2E4A     		ldr	r2, .L73+8
 859 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 860 0024 2343     		orrs	r3, r3, r4
 861 0026 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 862              		.loc 1 150 0
 863 0028 0132     		adds	r2, r2, #1
 864 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 865 002c 2343     		orrs	r3, r3, r4
 866 002e 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/CapSense.c ****         
 867              		.loc 1 151 0
 868 0030 FFF7FEFF 		bl	CyExitCriticalSection
 869              	.LVL61:
 154:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 870              		.loc 1 154 0
 871 0034 4FF43442 		mov	r2, #46080
 872 0038 294B     		ldr	r3, .L73+12
 873 003a 1A80     		strh	r2, [r3]	@ movhi
 156:Generated_Source\PSoC5/CapSense.c ****                 
 874              		.loc 1 156 0
 875 003c 4FF6FF76 		movw	r6, #65535
 876 0040 2033     		adds	r3, r3, #32
 877 0042 1E80     		strh	r6, [r3]	@ movhi
 176:Generated_Source\PSoC5/CapSense.c ****     
 878              		.loc 1 176 0
 879 0044 0725     		movs	r5, #7
 880 0046 4033     		adds	r3, r3, #64
 881 0048 1D70     		strb	r5, [r3]
 192:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 882              		.loc 1 192 0
 883 004a FFF7FEFF 		bl	CyEnterCriticalSection
 884              	.LVL62:
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 885              		.loc 1 193 0
 886 004e 254A     		ldr	r2, .L73+16
 887 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 888 0052 2343     		orrs	r3, r3, r4
 889 0054 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 890              		.loc 1 194 0
 891 0056 023A     		subs	r2, r2, #2
 892 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 893 005a 2343     		orrs	r3, r3, r4
 894 005c 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/CapSense.c ****         
 895              		.loc 1 195 0
 896 005e FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 52


 897              	.LVL63:
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 898              		.loc 1 198 0
 899 0062 FF23     		movs	r3, #255
 900 0064 204A     		ldr	r2, .L73+20
 901 0066 1670     		strb	r6, [r2]
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 902              		.loc 1 199 0
 903 0068 2032     		adds	r2, r2, #32
 904 006a 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/CapSense.c ****         
 905              		.loc 1 200 0
 906 006c 403A     		subs	r2, r2, #64
 907 006e 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 908              		.loc 1 203 0
 909 0070 1E32     		adds	r2, r2, #30
 910 0072 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 911              		.loc 1 204 0
 912 0074 3032     		adds	r2, r2, #48
 913 0076 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/CapSense.c ****         
 914              		.loc 1 205 0
 915 0078 103A     		subs	r2, r2, #16
 916 007a 1370     		strb	r3, [r2]
 244:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 917              		.loc 1 244 0
 918 007c 2022     		movs	r2, #32
 919 007e 03F1E023 		add	r3, r3, #-536813568
 920 0082 8133     		adds	r3, r3, #129
 921 0084 1A60     		str	r2, [r3]
 245:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 922              		.loc 1 245 0
 923 0086 1949     		ldr	r1, .L73+24
 924 0088 0520     		movs	r0, #5
 925 008a FFF7FEFF 		bl	CyIntSetVector
 926              	.LVL64:
 246:Generated_Source\PSoC5/CapSense.c ****     
 927              		.loc 1 246 0
 928 008e 2946     		mov	r1, r5
 929 0090 0520     		movs	r0, #5
 930 0092 FFF7FEFF 		bl	CyIntSetPriority
 931              	.LVL65:
 255:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 932              		.loc 1 255 0
 933 0096 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 934              	.LVL66:
 256:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 935              		.loc 1 256 0
 936 009a 0220     		movs	r0, #2
 937 009c FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 938              	.LVL67:
 257:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 939              		.loc 1 257 0
 940 00a0 2046     		mov	r0, r4
 941 00a2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 53


 942              	.LVL68:
 259:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 943              		.loc 1 259 0
 944 00a6 0420     		movs	r0, #4
 945 00a8 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 946              	.LVL69:
 277:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 947              		.loc 1 277 0
 948 00ac 104A     		ldr	r2, .L73+28
 949 00ae 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 950 00b0 43F00403 		orr	r3, r3, #4
 951 00b4 1370     		strb	r3, [r2]
 283:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 952              		.loc 1 283 0
 953 00b6 FFF7FEFF 		bl	CapSense_CompCH0_Init
 954              	.LVL70:
 285:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 955              		.loc 1 285 0
 956 00ba FFF7FEFF 		bl	CapSense_IdacCH0_Init
 957              	.LVL71:
 286:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 958              		.loc 1 286 0
 959 00be 0020     		movs	r0, #0
 960 00c0 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 961              	.LVL72:
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 962              		.loc 1 287 0
 963 00c4 0420     		movs	r0, #4
 964 00c6 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 965              	.LVL73:
 288:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 966              		.loc 1 288 0
 967 00ca 0020     		movs	r0, #0
 968 00cc FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 969              	.LVL74:
 970 00d0 70BD     		pop	{r4, r5, r6, pc}
 971              	.L74:
 972 00d2 00BF     		.align	2
 973              	.L73:
 974 00d4 0C4F0040 		.word	1073762060
 975 00d8 0E4F0040 		.word	1073762062
 976 00dc 9E640040 		.word	1073767582
 977 00e0 2E640040 		.word	1073767470
 978 00e4 9D640040 		.word	1073767581
 979 00e8 2D640040 		.word	1073767469
 980 00ec 00000000 		.word	CapSense_IsrCH0_ISR
 981 00f0 7F640040 		.word	1073767551
 982              		.cfi_endproc
 983              	.LFE0:
 984              		.size	CapSense_Init, .-CapSense_Init
 985              		.section	.text.CapSense_Start,"ax",%progbits
 986              		.align	2
 987              		.global	CapSense_Start
 988              		.thumb
 989              		.thumb_func
 990              		.type	CapSense_Start, %function
 991              	CapSense_Start:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 54


 992              	.LFB2:
 480:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 993              		.loc 1 480 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 08B5     		push	{r3, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 3, -8
 1000              		.cfi_offset 14, -4
 481:Generated_Source\PSoC5/CapSense.c ****     {
 1001              		.loc 1 481 0
 1002 0002 084B     		ldr	r3, .L78
 1003 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 0006 23B9     		cbnz	r3, .L76
 483:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 1005              		.loc 1 483 0
 1006 0008 FFF7FEFF 		bl	CapSense_Init
 1007              	.LVL75:
 484:Generated_Source\PSoC5/CapSense.c ****     }
 1008              		.loc 1 484 0
 1009 000c 0122     		movs	r2, #1
 1010 000e 054B     		ldr	r3, .L78
 1011 0010 1A70     		strb	r2, [r3]
 1012              	.L76:
 486:Generated_Source\PSoC5/CapSense.c ****     
 1013              		.loc 1 486 0
 1014 0012 FFF7FEFF 		bl	CapSense_Enable
 1015              	.LVL76:
 491:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 1016              		.loc 1 491 0
 1017 0016 FFF7FEFF 		bl	CapSense_AutoTune
 1018              	.LVL77:
 492:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 1019              		.loc 1 492 0
 1020 001a 0122     		movs	r2, #1
 1021 001c 024B     		ldr	r3, .L78+4
 1022 001e 9A72     		strb	r2, [r3, #10]
 1023 0020 08BD     		pop	{r3, pc}
 1024              	.L79:
 1025 0022 00BF     		.align	2
 1026              	.L78:
 1027 0024 00000000 		.word	.LANCHOR2
 1028 0028 00000000 		.word	.LANCHOR0
 1029              		.cfi_endproc
 1030              	.LFE2:
 1031              		.size	CapSense_Start, .-CapSense_Start
 1032              		.global	CapSense_widgetNumber
 1033              		.comm	CapSense_analogSwitchDivider,2,4
 1034              		.global	CapSense_widgetResolution
 1035              		.global	CapSense_idacSettings
 1036              		.global	CapSense_csTable
 1037              		.global	CapSense_maskTable
 1038              		.global	CapSense_portTable
 1039              		.global	CapSense_pcTable
 1040              		.global	CapSense_sensorEnableMask
 1041              		.comm	CapSense_sensorRaw,4,4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 55


 1042              		.global	CapSense_lowLevelTuningDone
 1043              		.comm	CapSense_sensorIndex,1,1
 1044              		.comm	CapSense_csv,1,1
 1045              		.section	.rodata
 1046              		.align	2
 1047              		.set	.LANCHOR1,. + 0
 1048              		.type	CapSense_portTable, %object
 1049              		.size	CapSense_portTable, 2
 1050              	CapSense_portTable:
 1051 0000 05       		.byte	5
 1052 0001 05       		.byte	5
 1053 0002 0000     		.space	2
 1054              		.type	CapSense_maskTable, %object
 1055              		.size	CapSense_maskTable, 2
 1056              	CapSense_maskTable:
 1057 0004 20       		.byte	32
 1058 0005 40       		.byte	64
 1059 0006 0000     		.space	2
 1060              		.type	CapSense_pcTable, %object
 1061              		.size	CapSense_pcTable, 8
 1062              	CapSense_pcTable:
 1063 0008 2D500040 		.word	1073762349
 1064 000c 2E500040 		.word	1073762350
 1065              		.type	CapSense_csTable, %object
 1066              		.size	CapSense_csTable, 32
 1067              	CapSense_csTable:
 1068 0010 06520040 		.word	1073762822
 1069 0014 0E520040 		.word	1073762830
 1070 0018 16520040 		.word	1073762838
 1071 001c 1E520040 		.word	1073762846
 1072 0020 26520040 		.word	1073762854
 1073 0024 2E520040 		.word	1073762862
 1074 0028 36520040 		.word	1073762870
 1075 002c 7E520040 		.word	1073762942
 1076              		.type	CapSense_widgetNumber, %object
 1077              		.size	CapSense_widgetNumber, 2
 1078              	CapSense_widgetNumber:
 1079 0030 00       		.byte	0
 1080 0031 01       		.byte	1
 1081              		.data
 1082              		.align	2
 1083              		.set	.LANCHOR0,. + 0
 1084              		.type	CapSense_sensorEnableMask, %object
 1085              		.size	CapSense_sensorEnableMask, 1
 1086              	CapSense_sensorEnableMask:
 1087 0000 03       		.byte	3
 1088 0001 000000   		.space	3
 1089              		.type	CapSense_idacSettings, %object
 1090              		.size	CapSense_idacSettings, 2
 1091              	CapSense_idacSettings:
 1092 0004 C8       		.byte	-56
 1093 0005 C8       		.byte	-56
 1094 0006 0000     		.space	2
 1095              		.type	CapSense_widgetResolution, %object
 1096              		.size	CapSense_widgetResolution, 2
 1097              	CapSense_widgetResolution:
 1098 0008 03       		.byte	3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 56


 1099 0009 03       		.byte	3
 1100              		.type	CapSense_lowLevelTuningDone, %object
 1101              		.size	CapSense_lowLevelTuningDone, 1
 1102              	CapSense_lowLevelTuningDone:
 1103 000a 01       		.byte	1
 1104              		.bss
 1105              		.set	.LANCHOR2,. + 0
 1106              		.type	CapSense_initVar, %object
 1107              		.size	CapSense_initVar, 1
 1108              	CapSense_initVar:
 1109 0000 00       		.space	1
 1110              		.text
 1111              	.Letext0:
 1112              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1113              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1114              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1115              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1116              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1117              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1118              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1119              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1120              		.section	.debug_info,"",%progbits
 1121              	.Ldebug_info0:
 1122 0000 3C080000 		.4byte	0x83c
 1123 0004 0400     		.2byte	0x4
 1124 0006 00000000 		.4byte	.Ldebug_abbrev0
 1125 000a 04       		.byte	0x4
 1126 000b 01       		.uleb128 0x1
 1127 000c 88040000 		.4byte	.LASF81
 1128 0010 0C       		.byte	0xc
 1129 0011 2A000000 		.4byte	.LASF82
 1130 0015 16050000 		.4byte	.LASF83
 1131 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1132 001d 00000000 		.4byte	0
 1133 0021 00000000 		.4byte	.Ldebug_line0
 1134 0025 02       		.uleb128 0x2
 1135 0026 01       		.byte	0x1
 1136 0027 06       		.byte	0x6
 1137 0028 10010000 		.4byte	.LASF0
 1138 002c 02       		.uleb128 0x2
 1139 002d 01       		.byte	0x1
 1140 002e 08       		.byte	0x8
 1141 002f 06040000 		.4byte	.LASF1
 1142 0033 02       		.uleb128 0x2
 1143 0034 02       		.byte	0x2
 1144 0035 05       		.byte	0x5
 1145 0036 44040000 		.4byte	.LASF2
 1146 003a 02       		.uleb128 0x2
 1147 003b 02       		.byte	0x2
 1148 003c 07       		.byte	0x7
 1149 003d CB020000 		.4byte	.LASF3
 1150 0041 02       		.uleb128 0x2
 1151 0042 04       		.byte	0x4
 1152 0043 05       		.byte	0x5
 1153 0044 3D010000 		.4byte	.LASF4
 1154 0048 02       		.uleb128 0x2
 1155 0049 04       		.byte	0x4
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 57


 1156 004a 07       		.byte	0x7
 1157 004b 64020000 		.4byte	.LASF5
 1158 004f 02       		.uleb128 0x2
 1159 0050 08       		.byte	0x8
 1160 0051 05       		.byte	0x5
 1161 0052 02010000 		.4byte	.LASF6
 1162 0056 02       		.uleb128 0x2
 1163 0057 08       		.byte	0x8
 1164 0058 07       		.byte	0x7
 1165 0059 AD000000 		.4byte	.LASF7
 1166 005d 03       		.uleb128 0x3
 1167 005e 04       		.byte	0x4
 1168 005f 05       		.byte	0x5
 1169 0060 696E7400 		.ascii	"int\000"
 1170 0064 02       		.uleb128 0x2
 1171 0065 04       		.byte	0x4
 1172 0066 07       		.byte	0x7
 1173 0067 27020000 		.4byte	.LASF8
 1174 006b 04       		.uleb128 0x4
 1175 006c 4C010000 		.4byte	.LASF9
 1176 0070 02       		.byte	0x2
 1177 0071 9201     		.2byte	0x192
 1178 0073 2C000000 		.4byte	0x2c
 1179 0077 04       		.uleb128 0x4
 1180 0078 00000000 		.4byte	.LASF10
 1181 007c 02       		.byte	0x2
 1182 007d 9301     		.2byte	0x193
 1183 007f 3A000000 		.4byte	0x3a
 1184 0083 04       		.uleb128 0x4
 1185 0084 C8010000 		.4byte	.LASF11
 1186 0088 02       		.byte	0x2
 1187 0089 9401     		.2byte	0x194
 1188 008b 48000000 		.4byte	0x48
 1189 008f 02       		.uleb128 0x2
 1190 0090 04       		.byte	0x4
 1191 0091 04       		.byte	0x4
 1192 0092 D9030000 		.4byte	.LASF12
 1193 0096 02       		.uleb128 0x2
 1194 0097 08       		.byte	0x8
 1195 0098 04       		.byte	0x4
 1196 0099 68010000 		.4byte	.LASF13
 1197 009d 02       		.uleb128 0x2
 1198 009e 01       		.byte	0x1
 1199 009f 08       		.byte	0x8
 1200 00a0 8B050000 		.4byte	.LASF14
 1201 00a4 04       		.uleb128 0x4
 1202 00a5 E9030000 		.4byte	.LASF15
 1203 00a9 02       		.byte	0x2
 1204 00aa 3C02     		.2byte	0x23c
 1205 00ac B0000000 		.4byte	0xb0
 1206 00b0 05       		.uleb128 0x5
 1207 00b1 6B000000 		.4byte	0x6b
 1208 00b5 04       		.uleb128 0x4
 1209 00b6 46010000 		.4byte	.LASF16
 1210 00ba 02       		.byte	0x2
 1211 00bb 3D02     		.2byte	0x23d
 1212 00bd C1000000 		.4byte	0xc1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 58


 1213 00c1 05       		.uleb128 0x5
 1214 00c2 77000000 		.4byte	0x77
 1215 00c6 04       		.uleb128 0x4
 1216 00c7 2D030000 		.4byte	.LASF17
 1217 00cb 02       		.byte	0x2
 1218 00cc 3E02     		.2byte	0x23e
 1219 00ce D2000000 		.4byte	0xd2
 1220 00d2 05       		.uleb128 0x5
 1221 00d3 83000000 		.4byte	0x83
 1222 00d7 02       		.uleb128 0x2
 1223 00d8 08       		.byte	0x8
 1224 00d9 04       		.byte	0x4
 1225 00da 6A030000 		.4byte	.LASF18
 1226 00de 02       		.uleb128 0x2
 1227 00df 04       		.byte	0x4
 1228 00e0 07       		.byte	0x7
 1229 00e1 50030000 		.4byte	.LASF19
 1230 00e5 06       		.uleb128 0x6
 1231 00e6 DC000000 		.4byte	.LASF26
 1232 00ea 01       		.byte	0x1
 1233 00eb 4601     		.2byte	0x146
 1234 00ed 00000000 		.4byte	.LFB1
 1235 00f1 80000000 		.4byte	.LFE1-.LFB1
 1236 00f5 01       		.uleb128 0x1
 1237 00f6 9C       		.byte	0x9c
 1238 00f7 40010000 		.4byte	0x140
 1239 00fb 07       		.uleb128 0x7
 1240 00fc F4050000 		.4byte	.LASF20
 1241 0100 01       		.byte	0x1
 1242 0101 4801     		.2byte	0x148
 1243 0103 6B000000 		.4byte	0x6b
 1244 0107 00000000 		.4byte	.LLST0
 1245 010b 08       		.uleb128 0x8
 1246 010c 06000000 		.4byte	.LVL0
 1247 0110 6D070000 		.4byte	0x76d
 1248 0114 08       		.uleb128 0x8
 1249 0115 2E000000 		.4byte	.LVL2
 1250 0119 78070000 		.4byte	0x778
 1251 011d 08       		.uleb128 0x8
 1252 011e 32000000 		.4byte	.LVL3
 1253 0122 83070000 		.4byte	0x783
 1254 0126 08       		.uleb128 0x8
 1255 0127 36000000 		.4byte	.LVL4
 1256 012b 8E070000 		.4byte	0x78e
 1257 012f 09       		.uleb128 0x9
 1258 0130 5E000000 		.4byte	.LVL5
 1259 0134 99070000 		.4byte	0x799
 1260 0138 0A       		.uleb128 0xa
 1261 0139 01       		.uleb128 0x1
 1262 013a 50       		.byte	0x50
 1263 013b 02       		.uleb128 0x2
 1264 013c 74       		.byte	0x74
 1265 013d 00       		.sleb128 0
 1266 013e 00       		.byte	0
 1267 013f 00       		.byte	0
 1268 0140 0B       		.uleb128 0xb
 1269 0141 EE030000 		.4byte	.LASF22
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 59


 1270 0145 01       		.byte	0x1
 1271 0146 8E02     		.2byte	0x28e
 1272 0148 6B000000 		.4byte	0x6b
 1273 014c 00000000 		.4byte	.LFB4
 1274 0150 20000000 		.4byte	.LFE4-.LFB4
 1275 0154 01       		.uleb128 0x1
 1276 0155 9C       		.byte	0x9c
 1277 0156 89010000 		.4byte	0x189
 1278 015a 0C       		.uleb128 0xc
 1279 015b A4000000 		.4byte	.LASF24
 1280 015f 01       		.byte	0x1
 1281 0160 8E02     		.2byte	0x28e
 1282 0162 6B000000 		.4byte	0x6b
 1283 0166 13000000 		.4byte	.LLST1
 1284 016a 0D       		.uleb128 0xd
 1285 016b 706F7300 		.ascii	"pos\000"
 1286 016f 01       		.byte	0x1
 1287 0170 9002     		.2byte	0x290
 1288 0172 6B000000 		.4byte	0x6b
 1289 0176 01       		.uleb128 0x1
 1290 0177 52       		.byte	0x52
 1291 0178 07       		.uleb128 0x7
 1292 0179 8E030000 		.4byte	.LASF21
 1293 017d 01       		.byte	0x1
 1294 017e 9102     		.2byte	0x291
 1295 0180 6B000000 		.4byte	0x6b
 1296 0184 3F000000 		.4byte	.LLST2
 1297 0188 00       		.byte	0
 1298 0189 0E       		.uleb128 0xe
 1299 018a 97060000 		.4byte	.LASF84
 1300 018e 01       		.byte	0x1
 1301 018f 1A04     		.2byte	0x41a
 1302 0191 6B000000 		.4byte	0x6b
 1303 0195 00000000 		.4byte	.LFB8
 1304 0199 10000000 		.4byte	.LFE8-.LFB8
 1305 019d 01       		.uleb128 0x1
 1306 019e 9C       		.byte	0x9c
 1307 019f 0B       		.uleb128 0xb
 1308 01a0 B1010000 		.4byte	.LASF23
 1309 01a4 01       		.byte	0x1
 1310 01a5 3304     		.2byte	0x433
 1311 01a7 77000000 		.4byte	0x77
 1312 01ab 00000000 		.4byte	.LFB9
 1313 01af 0C000000 		.4byte	.LFE9-.LFB9
 1314 01b3 01       		.uleb128 0x1
 1315 01b4 9C       		.byte	0x9c
 1316 01b5 CA010000 		.4byte	0x1ca
 1317 01b9 0C       		.uleb128 0xc
 1318 01ba F5020000 		.4byte	.LASF25
 1319 01be 01       		.byte	0x1
 1320 01bf 3304     		.2byte	0x433
 1321 01c1 6B000000 		.4byte	0x6b
 1322 01c5 52000000 		.4byte	.LLST3
 1323 01c9 00       		.byte	0
 1324 01ca 06       		.uleb128 0x6
 1325 01cb 6F010000 		.4byte	.LASF27
 1326 01cf 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 60


 1327 01d0 DE04     		.2byte	0x4de
 1328 01d2 00000000 		.4byte	.LFB11
 1329 01d6 34000000 		.4byte	.LFE11-.LFB11
 1330 01da 01       		.uleb128 0x1
 1331 01db 9C       		.byte	0x9c
 1332 01dc 1A020000 		.4byte	0x21a
 1333 01e0 0C       		.uleb128 0xc
 1334 01e1 F5020000 		.4byte	.LASF25
 1335 01e5 01       		.byte	0x1
 1336 01e6 DE04     		.2byte	0x4de
 1337 01e8 6B000000 		.4byte	0x6b
 1338 01ec 73000000 		.4byte	.LLST4
 1339 01f0 07       		.uleb128 0x7
 1340 01f1 F9010000 		.4byte	.LASF28
 1341 01f5 01       		.byte	0x1
 1342 01f6 E004     		.2byte	0x4e0
 1343 01f8 6B000000 		.4byte	0x6b
 1344 01fc 94000000 		.4byte	.LLST5
 1345 0200 07       		.uleb128 0x7
 1346 0201 DE010000 		.4byte	.LASF29
 1347 0205 01       		.byte	0x1
 1348 0206 E104     		.2byte	0x4e1
 1349 0208 6B000000 		.4byte	0x6b
 1350 020c A7000000 		.4byte	.LLST6
 1351 0210 08       		.uleb128 0x8
 1352 0211 2C000000 		.4byte	.LVL17
 1353 0215 A4070000 		.4byte	0x7a4
 1354 0219 00       		.byte	0
 1355 021a 06       		.uleb128 0x6
 1356 021b 1B060000 		.4byte	.LASF30
 1357 021f 01       		.byte	0x1
 1358 0220 3305     		.2byte	0x533
 1359 0222 00000000 		.4byte	.LFB12
 1360 0226 38000000 		.4byte	.LFE12-.LFB12
 1361 022a 01       		.uleb128 0x1
 1362 022b 9C       		.byte	0x9c
 1363 022c 71020000 		.4byte	0x271
 1364 0230 0C       		.uleb128 0xc
 1365 0231 F5020000 		.4byte	.LASF25
 1366 0235 01       		.byte	0x1
 1367 0236 3305     		.2byte	0x533
 1368 0238 6B000000 		.4byte	0x6b
 1369 023c BA000000 		.4byte	.LLST7
 1370 0240 07       		.uleb128 0x7
 1371 0241 F9010000 		.4byte	.LASF28
 1372 0245 01       		.byte	0x1
 1373 0246 3505     		.2byte	0x535
 1374 0248 6B000000 		.4byte	0x6b
 1375 024c DB000000 		.4byte	.LLST8
 1376 0250 07       		.uleb128 0x7
 1377 0251 DE010000 		.4byte	.LASF29
 1378 0255 01       		.byte	0x1
 1379 0256 3605     		.2byte	0x536
 1380 0258 6B000000 		.4byte	0x6b
 1381 025c EE000000 		.4byte	.LLST9
 1382 0260 09       		.uleb128 0x9
 1383 0261 10000000 		.4byte	.LVL22
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 61


 1384 0265 AF070000 		.4byte	0x7af
 1385 0269 0A       		.uleb128 0xa
 1386 026a 01       		.uleb128 0x1
 1387 026b 50       		.byte	0x50
 1388 026c 02       		.uleb128 0x2
 1389 026d 75       		.byte	0x75
 1390 026e 00       		.sleb128 0
 1391 026f 00       		.byte	0
 1392 0270 00       		.byte	0
 1393 0271 06       		.uleb128 0x6
 1394 0272 34020000 		.4byte	.LASF31
 1395 0276 01       		.byte	0x1
 1396 0277 4804     		.2byte	0x448
 1397 0279 00000000 		.4byte	.LFB10
 1398 027d 16000000 		.4byte	.LFE10-.LFB10
 1399 0281 01       		.uleb128 0x1
 1400 0282 9C       		.byte	0x9c
 1401 0283 A6020000 		.4byte	0x2a6
 1402 0287 0F       		.uleb128 0xf
 1403 0288 6900     		.ascii	"i\000"
 1404 028a 01       		.byte	0x1
 1405 028b 4A04     		.2byte	0x44a
 1406 028d 6B000000 		.4byte	0x6b
 1407 0291 01010000 		.4byte	.LLST10
 1408 0295 09       		.uleb128 0x9
 1409 0296 0C000000 		.4byte	.LVL28
 1410 029a 1A020000 		.4byte	0x21a
 1411 029e 0A       		.uleb128 0xa
 1412 029f 01       		.uleb128 0x1
 1413 02a0 50       		.byte	0x50
 1414 02a1 02       		.uleb128 0x2
 1415 02a2 74       		.byte	0x74
 1416 02a3 00       		.sleb128 0
 1417 02a4 00       		.byte	0
 1418 02a5 00       		.byte	0
 1419 02a6 06       		.uleb128 0x6
 1420 02a7 76030000 		.4byte	.LASF32
 1421 02ab 01       		.byte	0x1
 1422 02ac 0402     		.2byte	0x204
 1423 02ae 00000000 		.4byte	.LFB3
 1424 02b2 80000000 		.4byte	.LFE3-.LFB3
 1425 02b6 01       		.uleb128 0x1
 1426 02b7 9C       		.byte	0x9c
 1427 02b8 E1020000 		.4byte	0x2e1
 1428 02bc 08       		.uleb128 0x8
 1429 02bd 16000000 		.4byte	.LVL31
 1430 02c1 71020000 		.4byte	0x271
 1431 02c5 08       		.uleb128 0x8
 1432 02c6 3C000000 		.4byte	.LVL32
 1433 02ca BA070000 		.4byte	0x7ba
 1434 02ce 08       		.uleb128 0x8
 1435 02cf 40000000 		.4byte	.LVL33
 1436 02d3 C5070000 		.4byte	0x7c5
 1437 02d7 08       		.uleb128 0x8
 1438 02d8 44000000 		.4byte	.LVL34
 1439 02dc D0070000 		.4byte	0x7d0
 1440 02e0 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 62


 1441 02e1 06       		.uleb128 0x6
 1442 02e2 E2050000 		.4byte	.LASF33
 1443 02e6 01       		.byte	0x1
 1444 02e7 2F06     		.2byte	0x62f
 1445 02e9 00000000 		.4byte	.LFB14
 1446 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1447 02f1 01       		.uleb128 0x1
 1448 02f2 9C       		.byte	0x9c
 1449 02f3 20030000 		.4byte	0x320
 1450 02f7 0C       		.uleb128 0xc
 1451 02f8 F5020000 		.4byte	.LASF25
 1452 02fc 01       		.byte	0x1
 1453 02fd 2F06     		.2byte	0x62f
 1454 02ff 6B000000 		.4byte	0x6b
 1455 0303 2B010000 		.4byte	.LLST11
 1456 0307 08       		.uleb128 0x8
 1457 0308 28000000 		.4byte	.LVL36
 1458 030c 1A020000 		.4byte	0x21a
 1459 0310 09       		.uleb128 0x9
 1460 0311 2E000000 		.4byte	.LVL37
 1461 0315 DB070000 		.4byte	0x7db
 1462 0319 0A       		.uleb128 0xa
 1463 031a 01       		.uleb128 0x1
 1464 031b 50       		.byte	0x50
 1465 031c 01       		.uleb128 0x1
 1466 031d 30       		.byte	0x30
 1467 031e 00       		.byte	0
 1468 031f 00       		.byte	0
 1469 0320 06       		.uleb128 0x6
 1470 0321 EC000000 		.4byte	.LASF34
 1471 0325 01       		.byte	0x1
 1472 0326 3D07     		.2byte	0x73d
 1473 0328 00000000 		.4byte	.LFB15
 1474 032c 14000000 		.4byte	.LFE15-.LFB15
 1475 0330 01       		.uleb128 0x1
 1476 0331 9C       		.byte	0x9c
 1477 0332 47030000 		.4byte	0x347
 1478 0336 0C       		.uleb128 0xc
 1479 0337 DF030000 		.4byte	.LASF35
 1480 033b 01       		.byte	0x1
 1481 033c 3D07     		.2byte	0x73d
 1482 033e 6B000000 		.4byte	0x6b
 1483 0342 4C010000 		.4byte	.LLST12
 1484 0346 00       		.byte	0
 1485 0347 06       		.uleb128 0x6
 1486 0348 55040000 		.4byte	.LASF36
 1487 034c 01       		.byte	0x1
 1488 034d 2803     		.2byte	0x328
 1489 034f 00000000 		.4byte	.LFB5
 1490 0353 38000000 		.4byte	.LFE5-.LFB5
 1491 0357 01       		.uleb128 0x1
 1492 0358 9C       		.byte	0x9c
 1493 0359 90030000 		.4byte	0x390
 1494 035d 0C       		.uleb128 0xc
 1495 035e 16030000 		.4byte	.LASF37
 1496 0362 01       		.byte	0x1
 1497 0363 2803     		.2byte	0x328
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 63


 1498 0365 6B000000 		.4byte	0x6b
 1499 0369 6D010000 		.4byte	.LLST13
 1500 036d 07       		.uleb128 0x7
 1501 036e 4E040000 		.4byte	.LASF38
 1502 0372 01       		.byte	0x1
 1503 0373 2A03     		.2byte	0x32a
 1504 0375 6B000000 		.4byte	0x6b
 1505 0379 8E010000 		.4byte	.LLST14
 1506 037d 08       		.uleb128 0x8
 1507 037e 16000000 		.4byte	.LVL43
 1508 0382 DB070000 		.4byte	0x7db
 1509 0386 08       		.uleb128 0x8
 1510 0387 26000000 		.4byte	.LVL45
 1511 038b 20030000 		.4byte	0x320
 1512 038f 00       		.byte	0
 1513 0390 06       		.uleb128 0x6
 1514 0391 32060000 		.4byte	.LASF39
 1515 0395 01       		.byte	0x1
 1516 0396 8705     		.2byte	0x587
 1517 0398 00000000 		.4byte	.LFB13
 1518 039c 34000000 		.4byte	.LFE13-.LFB13
 1519 03a0 01       		.uleb128 0x1
 1520 03a1 9C       		.byte	0x9c
 1521 03a2 DB030000 		.4byte	0x3db
 1522 03a6 0C       		.uleb128 0xc
 1523 03a7 F5020000 		.4byte	.LASF25
 1524 03ab 01       		.byte	0x1
 1525 03ac 8705     		.2byte	0x587
 1526 03ae 6B000000 		.4byte	0x6b
 1527 03b2 B4010000 		.4byte	.LLST15
 1528 03b6 10       		.uleb128 0x10
 1529 03b7 08000000 		.4byte	.LVL48
 1530 03bb 47030000 		.4byte	0x347
 1531 03bf CA030000 		.4byte	0x3ca
 1532 03c3 0A       		.uleb128 0xa
 1533 03c4 01       		.uleb128 0x1
 1534 03c5 50       		.byte	0x50
 1535 03c6 02       		.uleb128 0x2
 1536 03c7 75       		.byte	0x75
 1537 03c8 00       		.sleb128 0
 1538 03c9 00       		.byte	0
 1539 03ca 09       		.uleb128 0x9
 1540 03cb 22000000 		.4byte	.LVL49
 1541 03cf CA010000 		.4byte	0x1ca
 1542 03d3 0A       		.uleb128 0xa
 1543 03d4 01       		.uleb128 0x1
 1544 03d5 50       		.byte	0x50
 1545 03d6 02       		.uleb128 0x2
 1546 03d7 75       		.byte	0x75
 1547 03d8 00       		.sleb128 0
 1548 03d9 00       		.byte	0
 1549 03da 00       		.byte	0
 1550 03db 06       		.uleb128 0x6
 1551 03dc 13020000 		.4byte	.LASF40
 1552 03e0 01       		.byte	0x1
 1553 03e1 9803     		.2byte	0x398
 1554 03e3 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 64


 1555 03e7 20000000 		.4byte	.LFE6-.LFB6
 1556 03eb 01       		.uleb128 0x1
 1557 03ec 9C       		.byte	0x9c
 1558 03ed 0B040000 		.4byte	0x40b
 1559 03f1 0C       		.uleb128 0xc
 1560 03f2 F5020000 		.4byte	.LASF25
 1561 03f6 01       		.byte	0x1
 1562 03f7 9803     		.2byte	0x398
 1563 03f9 6B000000 		.4byte	0x6b
 1564 03fd D5010000 		.4byte	.LLST16
 1565 0401 08       		.uleb128 0x8
 1566 0402 14000000 		.4byte	.LVL51
 1567 0406 90030000 		.4byte	0x390
 1568 040a 00       		.byte	0
 1569 040b 06       		.uleb128 0x6
 1570 040c 64060000 		.4byte	.LASF41
 1571 0410 01       		.byte	0x1
 1572 0411 E503     		.2byte	0x3e5
 1573 0413 00000000 		.4byte	.LFB7
 1574 0417 38000000 		.4byte	.LFE7-.LFB7
 1575 041b 01       		.uleb128 0x1
 1576 041c 9C       		.byte	0x9c
 1577 041d 34040000 		.4byte	0x434
 1578 0421 08       		.uleb128 0x8
 1579 0422 14000000 		.4byte	.LVL52
 1580 0426 40010000 		.4byte	0x140
 1581 042a 08       		.uleb128 0x8
 1582 042b 2E000000 		.4byte	.LVL53
 1583 042f 90030000 		.4byte	0x390
 1584 0433 00       		.byte	0
 1585 0434 0B       		.uleb128 0xb
 1586 0435 72040000 		.4byte	.LASF42
 1587 0439 01       		.byte	0x1
 1588 043a 5A07     		.2byte	0x75a
 1589 043c 6B000000 		.4byte	0x6b
 1590 0440 00000000 		.4byte	.LFB16
 1591 0444 0C000000 		.4byte	.LFE16-.LFB16
 1592 0448 01       		.uleb128 0x1
 1593 0449 9C       		.byte	0x9c
 1594 044a 5F040000 		.4byte	0x45f
 1595 044e 07       		.uleb128 0x7
 1596 044f DF030000 		.4byte	.LASF35
 1597 0453 01       		.byte	0x1
 1598 0454 5C07     		.2byte	0x75c
 1599 0456 6B000000 		.4byte	0x6b
 1600 045a F6010000 		.4byte	.LLST17
 1601 045e 00       		.byte	0
 1602 045f 06       		.uleb128 0x6
 1603 0460 A8050000 		.4byte	.LASF43
 1604 0464 01       		.byte	0x1
 1605 0465 7C07     		.2byte	0x77c
 1606 0467 00000000 		.4byte	.LFB17
 1607 046b 0C000000 		.4byte	.LFE17-.LFB17
 1608 046f 01       		.uleb128 0x1
 1609 0470 9C       		.byte	0x9c
 1610 0471 84040000 		.4byte	0x484
 1611 0475 11       		.uleb128 0x11
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 65


 1612 0476 84030000 		.4byte	.LASF44
 1613 047a 01       		.byte	0x1
 1614 047b 7C07     		.2byte	0x77c
 1615 047d 6B000000 		.4byte	0x6b
 1616 0481 01       		.uleb128 0x1
 1617 0482 50       		.byte	0x50
 1618 0483 00       		.byte	0
 1619 0484 06       		.uleb128 0x6
 1620 0485 1C010000 		.4byte	.LASF45
 1621 0489 01       		.byte	0x1
 1622 048a 9707     		.2byte	0x797
 1623 048c 00000000 		.4byte	.LFB18
 1624 0490 20000000 		.4byte	.LFE18-.LFB18
 1625 0494 01       		.uleb128 0x1
 1626 0495 9C       		.byte	0x9c
 1627 0496 A9040000 		.4byte	0x4a9
 1628 049a 12       		.uleb128 0x12
 1629 049b 73726300 		.ascii	"src\000"
 1630 049f 01       		.byte	0x1
 1631 04a0 9707     		.2byte	0x797
 1632 04a2 6B000000 		.4byte	0x6b
 1633 04a6 01       		.uleb128 0x1
 1634 04a7 50       		.byte	0x50
 1635 04a8 00       		.byte	0
 1636 04a9 13       		.uleb128 0x13
 1637 04aa 43060000 		.4byte	.LASF46
 1638 04ae 01       		.byte	0x1
 1639 04af 65       		.byte	0x65
 1640 04b0 00000000 		.4byte	.LFB0
 1641 04b4 F4000000 		.4byte	.LFE0-.LFB0
 1642 04b8 01       		.uleb128 0x1
 1643 04b9 9C       		.byte	0x9c
 1644 04ba C4050000 		.4byte	0x5c4
 1645 04be 14       		.uleb128 0x14
 1646 04bf F4050000 		.4byte	.LASF20
 1647 04c3 01       		.byte	0x1
 1648 04c4 6C       		.byte	0x6c
 1649 04c5 6B000000 		.4byte	0x6b
 1650 04c9 15020000 		.4byte	.LLST18
 1651 04cd 08       		.uleb128 0x8
 1652 04ce 06000000 		.4byte	.LVL58
 1653 04d2 71020000 		.4byte	0x271
 1654 04d6 10       		.uleb128 0x10
 1655 04d7 1C000000 		.4byte	.LVL59
 1656 04db 84040000 		.4byte	0x484
 1657 04df E9040000 		.4byte	0x4e9
 1658 04e3 0A       		.uleb128 0xa
 1659 04e4 01       		.uleb128 0x1
 1660 04e5 50       		.byte	0x50
 1661 04e6 01       		.uleb128 0x1
 1662 04e7 32       		.byte	0x32
 1663 04e8 00       		.byte	0
 1664 04e9 08       		.uleb128 0x8
 1665 04ea 20000000 		.4byte	.LVL60
 1666 04ee 6D070000 		.4byte	0x76d
 1667 04f2 08       		.uleb128 0x8
 1668 04f3 34000000 		.4byte	.LVL61
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 66


 1669 04f7 99070000 		.4byte	0x799
 1670 04fb 08       		.uleb128 0x8
 1671 04fc 4E000000 		.4byte	.LVL62
 1672 0500 6D070000 		.4byte	0x76d
 1673 0504 08       		.uleb128 0x8
 1674 0505 62000000 		.4byte	.LVL63
 1675 0509 99070000 		.4byte	0x799
 1676 050d 10       		.uleb128 0x10
 1677 050e 8E000000 		.4byte	.LVL64
 1678 0512 E6070000 		.4byte	0x7e6
 1679 0516 20050000 		.4byte	0x520
 1680 051a 0A       		.uleb128 0xa
 1681 051b 01       		.uleb128 0x1
 1682 051c 50       		.byte	0x50
 1683 051d 01       		.uleb128 0x1
 1684 051e 35       		.byte	0x35
 1685 051f 00       		.byte	0
 1686 0520 10       		.uleb128 0x10
 1687 0521 96000000 		.4byte	.LVL65
 1688 0525 F1070000 		.4byte	0x7f1
 1689 0529 39050000 		.4byte	0x539
 1690 052d 0A       		.uleb128 0xa
 1691 052e 01       		.uleb128 0x1
 1692 052f 50       		.byte	0x50
 1693 0530 01       		.uleb128 0x1
 1694 0531 35       		.byte	0x35
 1695 0532 0A       		.uleb128 0xa
 1696 0533 01       		.uleb128 0x1
 1697 0534 51       		.byte	0x51
 1698 0535 02       		.uleb128 0x2
 1699 0536 75       		.byte	0x75
 1700 0537 00       		.sleb128 0
 1701 0538 00       		.byte	0
 1702 0539 08       		.uleb128 0x8
 1703 053a 9A000000 		.4byte	.LVL66
 1704 053e FC070000 		.4byte	0x7fc
 1705 0542 10       		.uleb128 0x10
 1706 0543 A0000000 		.4byte	.LVL67
 1707 0547 A4070000 		.4byte	0x7a4
 1708 054b 55050000 		.4byte	0x555
 1709 054f 0A       		.uleb128 0xa
 1710 0550 01       		.uleb128 0x1
 1711 0551 50       		.byte	0x50
 1712 0552 01       		.uleb128 0x1
 1713 0553 32       		.byte	0x32
 1714 0554 00       		.byte	0
 1715 0555 10       		.uleb128 0x10
 1716 0556 A6000000 		.4byte	.LVL68
 1717 055a A4070000 		.4byte	0x7a4
 1718 055e 69050000 		.4byte	0x569
 1719 0562 0A       		.uleb128 0xa
 1720 0563 01       		.uleb128 0x1
 1721 0564 50       		.byte	0x50
 1722 0565 02       		.uleb128 0x2
 1723 0566 74       		.byte	0x74
 1724 0567 00       		.sleb128 0
 1725 0568 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 67


 1726 0569 10       		.uleb128 0x10
 1727 056a AC000000 		.4byte	.LVL69
 1728 056e A4070000 		.4byte	0x7a4
 1729 0572 7C050000 		.4byte	0x57c
 1730 0576 0A       		.uleb128 0xa
 1731 0577 01       		.uleb128 0x1
 1732 0578 50       		.byte	0x50
 1733 0579 01       		.uleb128 0x1
 1734 057a 34       		.byte	0x34
 1735 057b 00       		.byte	0
 1736 057c 08       		.uleb128 0x8
 1737 057d BA000000 		.4byte	.LVL70
 1738 0581 07080000 		.4byte	0x807
 1739 0585 08       		.uleb128 0x8
 1740 0586 BE000000 		.4byte	.LVL71
 1741 058a 12080000 		.4byte	0x812
 1742 058e 10       		.uleb128 0x10
 1743 058f C4000000 		.4byte	.LVL72
 1744 0593 1D080000 		.4byte	0x81d
 1745 0597 A1050000 		.4byte	0x5a1
 1746 059b 0A       		.uleb128 0xa
 1747 059c 01       		.uleb128 0x1
 1748 059d 50       		.byte	0x50
 1749 059e 01       		.uleb128 0x1
 1750 059f 30       		.byte	0x30
 1751 05a0 00       		.byte	0
 1752 05a1 10       		.uleb128 0x10
 1753 05a2 CA000000 		.4byte	.LVL73
 1754 05a6 28080000 		.4byte	0x828
 1755 05aa B4050000 		.4byte	0x5b4
 1756 05ae 0A       		.uleb128 0xa
 1757 05af 01       		.uleb128 0x1
 1758 05b0 50       		.byte	0x50
 1759 05b1 01       		.uleb128 0x1
 1760 05b2 34       		.byte	0x34
 1761 05b3 00       		.byte	0
 1762 05b4 09       		.uleb128 0x9
 1763 05b5 D0000000 		.4byte	.LVL74
 1764 05b9 DB070000 		.4byte	0x7db
 1765 05bd 0A       		.uleb128 0xa
 1766 05be 01       		.uleb128 0x1
 1767 05bf 50       		.byte	0x50
 1768 05c0 01       		.uleb128 0x1
 1769 05c1 30       		.byte	0x30
 1770 05c2 00       		.byte	0
 1771 05c3 00       		.byte	0
 1772 05c4 06       		.uleb128 0x6
 1773 05c5 D3050000 		.4byte	.LASF47
 1774 05c9 01       		.byte	0x1
 1775 05ca DF01     		.2byte	0x1df
 1776 05cc 00000000 		.4byte	.LFB2
 1777 05d0 2C000000 		.4byte	.LFE2-.LFB2
 1778 05d4 01       		.uleb128 0x1
 1779 05d5 9C       		.byte	0x9c
 1780 05d6 F6050000 		.4byte	0x5f6
 1781 05da 08       		.uleb128 0x8
 1782 05db 0C000000 		.4byte	.LVL75
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 68


 1783 05df A9040000 		.4byte	0x4a9
 1784 05e3 08       		.uleb128 0x8
 1785 05e4 16000000 		.4byte	.LVL76
 1786 05e8 E5000000 		.4byte	0xe5
 1787 05ec 08       		.uleb128 0x8
 1788 05ed 1A000000 		.4byte	.LVL77
 1789 05f1 33080000 		.4byte	0x833
 1790 05f5 00       		.byte	0
 1791 05f6 15       		.uleb128 0x15
 1792 05f7 4C000000 		.4byte	.LASF48
 1793 05fb 01       		.byte	0x1
 1794 05fc 16       		.byte	0x16
 1795 05fd 6B000000 		.4byte	0x6b
 1796 0601 05       		.uleb128 0x5
 1797 0602 03       		.byte	0x3
 1798 0603 00000000 		.4byte	CapSense_initVar
 1799 0607 16       		.uleb128 0x16
 1800 0608 6E000000 		.4byte	.LASF49
 1801 060c 01       		.byte	0x1
 1802 060d 1E       		.byte	0x1e
 1803 060e 6B000000 		.4byte	0x6b
 1804 0612 05       		.uleb128 0x5
 1805 0613 03       		.byte	0x3
 1806 0614 00000000 		.4byte	CapSense_lowLevelTuningDone
 1807 0618 16       		.uleb128 0x16
 1808 0619 07000000 		.4byte	.LASF50
 1809 061d 01       		.byte	0x1
 1810 061e 19       		.byte	0x19
 1811 061f B0000000 		.4byte	0xb0
 1812 0623 05       		.uleb128 0x5
 1813 0624 03       		.byte	0x3
 1814 0625 00000000 		.4byte	CapSense_csv
 1815 0629 16       		.uleb128 0x16
 1816 062a FE010000 		.4byte	.LASF51
 1817 062e 01       		.byte	0x1
 1818 062f 1A       		.byte	0x1a
 1819 0630 B0000000 		.4byte	0xb0
 1820 0634 05       		.uleb128 0x5
 1821 0635 03       		.byte	0x3
 1822 0636 00000000 		.4byte	CapSense_sensorIndex
 1823 063a 17       		.uleb128 0x17
 1824 063b 77000000 		.4byte	0x77
 1825 063f 4A060000 		.4byte	0x64a
 1826 0643 18       		.uleb128 0x18
 1827 0644 DE000000 		.4byte	0xde
 1828 0648 01       		.byte	0x1
 1829 0649 00       		.byte	0
 1830 064a 16       		.uleb128 0x16
 1831 064b 51060000 		.4byte	.LASF52
 1832 064f 01       		.byte	0x1
 1833 0650 29       		.byte	0x29
 1834 0651 3A060000 		.4byte	0x63a
 1835 0655 05       		.uleb128 0x5
 1836 0656 03       		.byte	0x3
 1837 0657 00000000 		.4byte	CapSense_sensorRaw
 1838 065b 17       		.uleb128 0x17
 1839 065c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 69


 1840 0660 6B060000 		.4byte	0x66b
 1841 0664 18       		.uleb128 0x18
 1842 0665 DE000000 		.4byte	0xde
 1843 0669 00       		.byte	0
 1844 066a 00       		.byte	0
 1845 066b 16       		.uleb128 0x16
 1846 066c FC020000 		.4byte	.LASF53
 1847 0670 01       		.byte	0x1
 1848 0671 2B       		.byte	0x2b
 1849 0672 5B060000 		.4byte	0x65b
 1850 0676 05       		.uleb128 0x5
 1851 0677 03       		.byte	0x3
 1852 0678 00000000 		.4byte	CapSense_sensorEnableMask
 1853 067c 17       		.uleb128 0x17
 1854 067d 92060000 		.4byte	0x692
 1855 0681 8C060000 		.4byte	0x68c
 1856 0685 18       		.uleb128 0x18
 1857 0686 DE000000 		.4byte	0xde
 1858 068a 01       		.byte	0x1
 1859 068b 00       		.byte	0
 1860 068c 19       		.uleb128 0x19
 1861 068d 04       		.byte	0x4
 1862 068e 6B000000 		.4byte	0x6b
 1863 0692 1A       		.uleb128 0x1a
 1864 0693 8C060000 		.4byte	0x68c
 1865 0697 16       		.uleb128 0x16
 1866 0698 5D000000 		.4byte	.LASF54
 1867 069c 01       		.byte	0x1
 1868 069d 2E       		.byte	0x2e
 1869 069e A8060000 		.4byte	0x6a8
 1870 06a2 05       		.uleb128 0x5
 1871 06a3 03       		.byte	0x3
 1872 06a4 00000000 		.4byte	CapSense_pcTable
 1873 06a8 1A       		.uleb128 0x1a
 1874 06a9 7C060000 		.4byte	0x67c
 1875 06ad 17       		.uleb128 0x17
 1876 06ae BD060000 		.4byte	0x6bd
 1877 06b2 BD060000 		.4byte	0x6bd
 1878 06b6 18       		.uleb128 0x18
 1879 06b7 DE000000 		.4byte	0xde
 1880 06bb 01       		.byte	0x1
 1881 06bc 00       		.byte	0
 1882 06bd 1A       		.uleb128 0x1a
 1883 06be 6B000000 		.4byte	0x6b
 1884 06c2 16       		.uleb128 0x16
 1885 06c3 89020000 		.4byte	.LASF55
 1886 06c7 01       		.byte	0x1
 1887 06c8 33       		.byte	0x33
 1888 06c9 D3060000 		.4byte	0x6d3
 1889 06cd 05       		.uleb128 0x5
 1890 06ce 03       		.byte	0x3
 1891 06cf 00000000 		.4byte	CapSense_portTable
 1892 06d3 1A       		.uleb128 0x1a
 1893 06d4 AD060000 		.4byte	0x6ad
 1894 06d8 16       		.uleb128 0x16
 1895 06d9 76020000 		.4byte	.LASF56
 1896 06dd 01       		.byte	0x1
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 70


 1897 06de 38       		.byte	0x38
 1898 06df E9060000 		.4byte	0x6e9
 1899 06e3 05       		.uleb128 0x5
 1900 06e4 03       		.byte	0x3
 1901 06e5 00000000 		.4byte	CapSense_maskTable
 1902 06e9 1A       		.uleb128 0x1a
 1903 06ea AD060000 		.4byte	0x6ad
 1904 06ee 17       		.uleb128 0x17
 1905 06ef 92060000 		.4byte	0x692
 1906 06f3 FE060000 		.4byte	0x6fe
 1907 06f7 18       		.uleb128 0x18
 1908 06f8 DE000000 		.4byte	0xde
 1909 06fc 07       		.byte	0x7
 1910 06fd 00       		.byte	0
 1911 06fe 16       		.uleb128 0x16
 1912 06ff 59030000 		.4byte	.LASF57
 1913 0703 01       		.byte	0x1
 1914 0704 3D       		.byte	0x3d
 1915 0705 0F070000 		.4byte	0x70f
 1916 0709 05       		.uleb128 0x5
 1917 070a 03       		.byte	0x3
 1918 070b 00000000 		.4byte	CapSense_csTable
 1919 070f 1A       		.uleb128 0x1a
 1920 0710 EE060000 		.4byte	0x6ee
 1921 0714 17       		.uleb128 0x17
 1922 0715 6B000000 		.4byte	0x6b
 1923 0719 24070000 		.4byte	0x724
 1924 071d 18       		.uleb128 0x18
 1925 071e DE000000 		.4byte	0xde
 1926 0722 01       		.byte	0x1
 1927 0723 00       		.byte	0
 1928 0724 16       		.uleb128 0x16
 1929 0725 C3030000 		.4byte	.LASF58
 1930 0729 01       		.byte	0x1
 1931 072a 43       		.byte	0x43
 1932 072b 14070000 		.4byte	0x714
 1933 072f 05       		.uleb128 0x5
 1934 0730 03       		.byte	0x3
 1935 0731 00000000 		.4byte	CapSense_idacSettings
 1936 0735 16       		.uleb128 0x16
 1937 0736 2A040000 		.4byte	.LASF59
 1938 073a 01       		.byte	0x1
 1939 073b 47       		.byte	0x47
 1940 073c 14070000 		.4byte	0x714
 1941 0740 05       		.uleb128 0x5
 1942 0741 03       		.byte	0x3
 1943 0742 00000000 		.4byte	CapSense_widgetResolution
 1944 0746 16       		.uleb128 0x16
 1945 0747 33030000 		.4byte	.LASF60
 1946 074b 01       		.byte	0x1
 1947 074c 4C       		.byte	0x4c
 1948 074d 14070000 		.4byte	0x714
 1949 0751 05       		.uleb128 0x5
 1950 0752 03       		.byte	0x3
 1951 0753 00000000 		.4byte	CapSense_analogSwitchDivider
 1952 0757 16       		.uleb128 0x16
 1953 0758 9B010000 		.4byte	.LASF61
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 71


 1954 075c 01       		.byte	0x1
 1955 075d 4D       		.byte	0x4d
 1956 075e 68070000 		.4byte	0x768
 1957 0762 05       		.uleb128 0x5
 1958 0763 03       		.byte	0x3
 1959 0764 00000000 		.4byte	CapSense_widgetNumber
 1960 0768 1A       		.uleb128 0x1a
 1961 0769 AD060000 		.4byte	0x6ad
 1962 076d 1B       		.uleb128 0x1b
 1963 076e B4020000 		.4byte	.LASF62
 1964 0772 B4020000 		.4byte	.LASF62
 1965 0776 03       		.byte	0x3
 1966 0777 7D       		.byte	0x7d
 1967 0778 1B       		.uleb128 0x1b
 1968 0779 9C020000 		.4byte	.LASF63
 1969 077d 9C020000 		.4byte	.LASF63
 1970 0781 04       		.byte	0x4
 1971 0782 27       		.byte	0x27
 1972 0783 1B       		.uleb128 0x1b
 1973 0784 C4000000 		.4byte	.LASF64
 1974 0788 C4000000 		.4byte	.LASF64
 1975 078c 05       		.byte	0x5
 1976 078d 46       		.byte	0x46
 1977 078e 1B       		.uleb128 0x1b
 1978 078f 90050000 		.4byte	.LASF65
 1979 0793 90050000 		.4byte	.LASF65
 1980 0797 06       		.byte	0x6
 1981 0798 46       		.byte	0x46
 1982 0799 1B       		.uleb128 0x1b
 1983 079a 14000000 		.4byte	.LASF66
 1984 079e 14000000 		.4byte	.LASF66
 1985 07a2 03       		.byte	0x3
 1986 07a3 7E       		.byte	0x7e
 1987 07a4 1B       		.uleb128 0x1b
 1988 07a5 BE050000 		.4byte	.LASF67
 1989 07a9 BE050000 		.4byte	.LASF67
 1990 07ad 07       		.byte	0x7
 1991 07ae 1A       		.byte	0x1a
 1992 07af 1B       		.uleb128 0x1b
 1993 07b0 80060000 		.4byte	.LASF68
 1994 07b4 80060000 		.4byte	.LASF68
 1995 07b8 07       		.byte	0x7
 1996 07b9 1B       		.byte	0x1b
 1997 07ba 1B       		.uleb128 0x1b
 1998 07bb DE020000 		.4byte	.LASF69
 1999 07bf DE020000 		.4byte	.LASF69
 2000 07c3 04       		.byte	0x4
 2001 07c4 28       		.byte	0x28
 2002 07c5 1B       		.uleb128 0x1b
 2003 07c6 05060000 		.4byte	.LASF70
 2004 07ca 05060000 		.4byte	.LASF70
 2005 07ce 05       		.byte	0x5
 2006 07cf 40       		.byte	0x40
 2007 07d0 1B       		.uleb128 0x1b
 2008 07d1 85010000 		.4byte	.LASF71
 2009 07d5 85010000 		.4byte	.LASF71
 2010 07d9 06       		.byte	0x6
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 72


 2011 07da 3D       		.byte	0x3d
 2012 07db 1B       		.uleb128 0x1b
 2013 07dc 8A000000 		.4byte	.LASF72
 2014 07e0 8A000000 		.4byte	.LASF72
 2015 07e4 06       		.byte	0x6
 2016 07e5 41       		.byte	0x41
 2017 07e6 1B       		.uleb128 0x1b
 2018 07e7 CF010000 		.4byte	.LASF73
 2019 07eb CF010000 		.4byte	.LASF73
 2020 07ef 03       		.byte	0x3
 2021 07f0 88       		.byte	0x88
 2022 07f1 1B       		.uleb128 0x1b
 2023 07f2 B2030000 		.4byte	.LASF74
 2024 07f6 B2030000 		.4byte	.LASF74
 2025 07fa 03       		.byte	0x3
 2026 07fb 8B       		.byte	0x8b
 2027 07fc 1B       		.uleb128 0x1b
 2028 07fd 52010000 		.4byte	.LASF75
 2029 0801 52010000 		.4byte	.LASF75
 2030 0805 08       		.byte	0x8
 2031 0806 1F       		.byte	0x1f
 2032 0807 1B       		.uleb128 0x1b
 2033 0808 E3010000 		.4byte	.LASF76
 2034 080c E3010000 		.4byte	.LASF76
 2035 0810 05       		.byte	0x5
 2036 0811 45       		.byte	0x45
 2037 0812 1B       		.uleb128 0x1b
 2038 0813 14040000 		.4byte	.LASF77
 2039 0817 14040000 		.4byte	.LASF77
 2040 081b 06       		.byte	0x6
 2041 081c 45       		.byte	0x45
 2042 081d 1B       		.uleb128 0x1b
 2043 081e 95030000 		.4byte	.LASF78
 2044 0822 95030000 		.4byte	.LASF78
 2045 0826 06       		.byte	0x6
 2046 0827 3F       		.byte	0x3f
 2047 0828 1B       		.uleb128 0x1b
 2048 0829 4A020000 		.4byte	.LASF79
 2049 082d 4A020000 		.4byte	.LASF79
 2050 0831 06       		.byte	0x6
 2051 0832 40       		.byte	0x40
 2052 0833 1C       		.uleb128 0x1c
 2053 0834 1B030000 		.4byte	.LASF80
 2054 0838 1B030000 		.4byte	.LASF80
 2055 083c 09       		.byte	0x9
 2056 083d AB02     		.2byte	0x2ab
 2057 083f 00       		.byte	0
 2058              		.section	.debug_abbrev,"",%progbits
 2059              	.Ldebug_abbrev0:
 2060 0000 01       		.uleb128 0x1
 2061 0001 11       		.uleb128 0x11
 2062 0002 01       		.byte	0x1
 2063 0003 25       		.uleb128 0x25
 2064 0004 0E       		.uleb128 0xe
 2065 0005 13       		.uleb128 0x13
 2066 0006 0B       		.uleb128 0xb
 2067 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 73


 2068 0008 0E       		.uleb128 0xe
 2069 0009 1B       		.uleb128 0x1b
 2070 000a 0E       		.uleb128 0xe
 2071 000b 55       		.uleb128 0x55
 2072 000c 17       		.uleb128 0x17
 2073 000d 11       		.uleb128 0x11
 2074 000e 01       		.uleb128 0x1
 2075 000f 10       		.uleb128 0x10
 2076 0010 17       		.uleb128 0x17
 2077 0011 00       		.byte	0
 2078 0012 00       		.byte	0
 2079 0013 02       		.uleb128 0x2
 2080 0014 24       		.uleb128 0x24
 2081 0015 00       		.byte	0
 2082 0016 0B       		.uleb128 0xb
 2083 0017 0B       		.uleb128 0xb
 2084 0018 3E       		.uleb128 0x3e
 2085 0019 0B       		.uleb128 0xb
 2086 001a 03       		.uleb128 0x3
 2087 001b 0E       		.uleb128 0xe
 2088 001c 00       		.byte	0
 2089 001d 00       		.byte	0
 2090 001e 03       		.uleb128 0x3
 2091 001f 24       		.uleb128 0x24
 2092 0020 00       		.byte	0
 2093 0021 0B       		.uleb128 0xb
 2094 0022 0B       		.uleb128 0xb
 2095 0023 3E       		.uleb128 0x3e
 2096 0024 0B       		.uleb128 0xb
 2097 0025 03       		.uleb128 0x3
 2098 0026 08       		.uleb128 0x8
 2099 0027 00       		.byte	0
 2100 0028 00       		.byte	0
 2101 0029 04       		.uleb128 0x4
 2102 002a 16       		.uleb128 0x16
 2103 002b 00       		.byte	0
 2104 002c 03       		.uleb128 0x3
 2105 002d 0E       		.uleb128 0xe
 2106 002e 3A       		.uleb128 0x3a
 2107 002f 0B       		.uleb128 0xb
 2108 0030 3B       		.uleb128 0x3b
 2109 0031 05       		.uleb128 0x5
 2110 0032 49       		.uleb128 0x49
 2111 0033 13       		.uleb128 0x13
 2112 0034 00       		.byte	0
 2113 0035 00       		.byte	0
 2114 0036 05       		.uleb128 0x5
 2115 0037 35       		.uleb128 0x35
 2116 0038 00       		.byte	0
 2117 0039 49       		.uleb128 0x49
 2118 003a 13       		.uleb128 0x13
 2119 003b 00       		.byte	0
 2120 003c 00       		.byte	0
 2121 003d 06       		.uleb128 0x6
 2122 003e 2E       		.uleb128 0x2e
 2123 003f 01       		.byte	0x1
 2124 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 74


 2125 0041 19       		.uleb128 0x19
 2126 0042 03       		.uleb128 0x3
 2127 0043 0E       		.uleb128 0xe
 2128 0044 3A       		.uleb128 0x3a
 2129 0045 0B       		.uleb128 0xb
 2130 0046 3B       		.uleb128 0x3b
 2131 0047 05       		.uleb128 0x5
 2132 0048 27       		.uleb128 0x27
 2133 0049 19       		.uleb128 0x19
 2134 004a 11       		.uleb128 0x11
 2135 004b 01       		.uleb128 0x1
 2136 004c 12       		.uleb128 0x12
 2137 004d 06       		.uleb128 0x6
 2138 004e 40       		.uleb128 0x40
 2139 004f 18       		.uleb128 0x18
 2140 0050 9742     		.uleb128 0x2117
 2141 0052 19       		.uleb128 0x19
 2142 0053 01       		.uleb128 0x1
 2143 0054 13       		.uleb128 0x13
 2144 0055 00       		.byte	0
 2145 0056 00       		.byte	0
 2146 0057 07       		.uleb128 0x7
 2147 0058 34       		.uleb128 0x34
 2148 0059 00       		.byte	0
 2149 005a 03       		.uleb128 0x3
 2150 005b 0E       		.uleb128 0xe
 2151 005c 3A       		.uleb128 0x3a
 2152 005d 0B       		.uleb128 0xb
 2153 005e 3B       		.uleb128 0x3b
 2154 005f 05       		.uleb128 0x5
 2155 0060 49       		.uleb128 0x49
 2156 0061 13       		.uleb128 0x13
 2157 0062 02       		.uleb128 0x2
 2158 0063 17       		.uleb128 0x17
 2159 0064 00       		.byte	0
 2160 0065 00       		.byte	0
 2161 0066 08       		.uleb128 0x8
 2162 0067 898201   		.uleb128 0x4109
 2163 006a 00       		.byte	0
 2164 006b 11       		.uleb128 0x11
 2165 006c 01       		.uleb128 0x1
 2166 006d 31       		.uleb128 0x31
 2167 006e 13       		.uleb128 0x13
 2168 006f 00       		.byte	0
 2169 0070 00       		.byte	0
 2170 0071 09       		.uleb128 0x9
 2171 0072 898201   		.uleb128 0x4109
 2172 0075 01       		.byte	0x1
 2173 0076 11       		.uleb128 0x11
 2174 0077 01       		.uleb128 0x1
 2175 0078 31       		.uleb128 0x31
 2176 0079 13       		.uleb128 0x13
 2177 007a 00       		.byte	0
 2178 007b 00       		.byte	0
 2179 007c 0A       		.uleb128 0xa
 2180 007d 8A8201   		.uleb128 0x410a
 2181 0080 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 75


 2182 0081 02       		.uleb128 0x2
 2183 0082 18       		.uleb128 0x18
 2184 0083 9142     		.uleb128 0x2111
 2185 0085 18       		.uleb128 0x18
 2186 0086 00       		.byte	0
 2187 0087 00       		.byte	0
 2188 0088 0B       		.uleb128 0xb
 2189 0089 2E       		.uleb128 0x2e
 2190 008a 01       		.byte	0x1
 2191 008b 3F       		.uleb128 0x3f
 2192 008c 19       		.uleb128 0x19
 2193 008d 03       		.uleb128 0x3
 2194 008e 0E       		.uleb128 0xe
 2195 008f 3A       		.uleb128 0x3a
 2196 0090 0B       		.uleb128 0xb
 2197 0091 3B       		.uleb128 0x3b
 2198 0092 05       		.uleb128 0x5
 2199 0093 27       		.uleb128 0x27
 2200 0094 19       		.uleb128 0x19
 2201 0095 49       		.uleb128 0x49
 2202 0096 13       		.uleb128 0x13
 2203 0097 11       		.uleb128 0x11
 2204 0098 01       		.uleb128 0x1
 2205 0099 12       		.uleb128 0x12
 2206 009a 06       		.uleb128 0x6
 2207 009b 40       		.uleb128 0x40
 2208 009c 18       		.uleb128 0x18
 2209 009d 9742     		.uleb128 0x2117
 2210 009f 19       		.uleb128 0x19
 2211 00a0 01       		.uleb128 0x1
 2212 00a1 13       		.uleb128 0x13
 2213 00a2 00       		.byte	0
 2214 00a3 00       		.byte	0
 2215 00a4 0C       		.uleb128 0xc
 2216 00a5 05       		.uleb128 0x5
 2217 00a6 00       		.byte	0
 2218 00a7 03       		.uleb128 0x3
 2219 00a8 0E       		.uleb128 0xe
 2220 00a9 3A       		.uleb128 0x3a
 2221 00aa 0B       		.uleb128 0xb
 2222 00ab 3B       		.uleb128 0x3b
 2223 00ac 05       		.uleb128 0x5
 2224 00ad 49       		.uleb128 0x49
 2225 00ae 13       		.uleb128 0x13
 2226 00af 02       		.uleb128 0x2
 2227 00b0 17       		.uleb128 0x17
 2228 00b1 00       		.byte	0
 2229 00b2 00       		.byte	0
 2230 00b3 0D       		.uleb128 0xd
 2231 00b4 34       		.uleb128 0x34
 2232 00b5 00       		.byte	0
 2233 00b6 03       		.uleb128 0x3
 2234 00b7 08       		.uleb128 0x8
 2235 00b8 3A       		.uleb128 0x3a
 2236 00b9 0B       		.uleb128 0xb
 2237 00ba 3B       		.uleb128 0x3b
 2238 00bb 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 76


 2239 00bc 49       		.uleb128 0x49
 2240 00bd 13       		.uleb128 0x13
 2241 00be 02       		.uleb128 0x2
 2242 00bf 18       		.uleb128 0x18
 2243 00c0 00       		.byte	0
 2244 00c1 00       		.byte	0
 2245 00c2 0E       		.uleb128 0xe
 2246 00c3 2E       		.uleb128 0x2e
 2247 00c4 00       		.byte	0
 2248 00c5 3F       		.uleb128 0x3f
 2249 00c6 19       		.uleb128 0x19
 2250 00c7 03       		.uleb128 0x3
 2251 00c8 0E       		.uleb128 0xe
 2252 00c9 3A       		.uleb128 0x3a
 2253 00ca 0B       		.uleb128 0xb
 2254 00cb 3B       		.uleb128 0x3b
 2255 00cc 05       		.uleb128 0x5
 2256 00cd 27       		.uleb128 0x27
 2257 00ce 19       		.uleb128 0x19
 2258 00cf 49       		.uleb128 0x49
 2259 00d0 13       		.uleb128 0x13
 2260 00d1 11       		.uleb128 0x11
 2261 00d2 01       		.uleb128 0x1
 2262 00d3 12       		.uleb128 0x12
 2263 00d4 06       		.uleb128 0x6
 2264 00d5 40       		.uleb128 0x40
 2265 00d6 18       		.uleb128 0x18
 2266 00d7 9742     		.uleb128 0x2117
 2267 00d9 19       		.uleb128 0x19
 2268 00da 00       		.byte	0
 2269 00db 00       		.byte	0
 2270 00dc 0F       		.uleb128 0xf
 2271 00dd 34       		.uleb128 0x34
 2272 00de 00       		.byte	0
 2273 00df 03       		.uleb128 0x3
 2274 00e0 08       		.uleb128 0x8
 2275 00e1 3A       		.uleb128 0x3a
 2276 00e2 0B       		.uleb128 0xb
 2277 00e3 3B       		.uleb128 0x3b
 2278 00e4 05       		.uleb128 0x5
 2279 00e5 49       		.uleb128 0x49
 2280 00e6 13       		.uleb128 0x13
 2281 00e7 02       		.uleb128 0x2
 2282 00e8 17       		.uleb128 0x17
 2283 00e9 00       		.byte	0
 2284 00ea 00       		.byte	0
 2285 00eb 10       		.uleb128 0x10
 2286 00ec 898201   		.uleb128 0x4109
 2287 00ef 01       		.byte	0x1
 2288 00f0 11       		.uleb128 0x11
 2289 00f1 01       		.uleb128 0x1
 2290 00f2 31       		.uleb128 0x31
 2291 00f3 13       		.uleb128 0x13
 2292 00f4 01       		.uleb128 0x1
 2293 00f5 13       		.uleb128 0x13
 2294 00f6 00       		.byte	0
 2295 00f7 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 77


 2296 00f8 11       		.uleb128 0x11
 2297 00f9 05       		.uleb128 0x5
 2298 00fa 00       		.byte	0
 2299 00fb 03       		.uleb128 0x3
 2300 00fc 0E       		.uleb128 0xe
 2301 00fd 3A       		.uleb128 0x3a
 2302 00fe 0B       		.uleb128 0xb
 2303 00ff 3B       		.uleb128 0x3b
 2304 0100 05       		.uleb128 0x5
 2305 0101 49       		.uleb128 0x49
 2306 0102 13       		.uleb128 0x13
 2307 0103 02       		.uleb128 0x2
 2308 0104 18       		.uleb128 0x18
 2309 0105 00       		.byte	0
 2310 0106 00       		.byte	0
 2311 0107 12       		.uleb128 0x12
 2312 0108 05       		.uleb128 0x5
 2313 0109 00       		.byte	0
 2314 010a 03       		.uleb128 0x3
 2315 010b 08       		.uleb128 0x8
 2316 010c 3A       		.uleb128 0x3a
 2317 010d 0B       		.uleb128 0xb
 2318 010e 3B       		.uleb128 0x3b
 2319 010f 05       		.uleb128 0x5
 2320 0110 49       		.uleb128 0x49
 2321 0111 13       		.uleb128 0x13
 2322 0112 02       		.uleb128 0x2
 2323 0113 18       		.uleb128 0x18
 2324 0114 00       		.byte	0
 2325 0115 00       		.byte	0
 2326 0116 13       		.uleb128 0x13
 2327 0117 2E       		.uleb128 0x2e
 2328 0118 01       		.byte	0x1
 2329 0119 3F       		.uleb128 0x3f
 2330 011a 19       		.uleb128 0x19
 2331 011b 03       		.uleb128 0x3
 2332 011c 0E       		.uleb128 0xe
 2333 011d 3A       		.uleb128 0x3a
 2334 011e 0B       		.uleb128 0xb
 2335 011f 3B       		.uleb128 0x3b
 2336 0120 0B       		.uleb128 0xb
 2337 0121 27       		.uleb128 0x27
 2338 0122 19       		.uleb128 0x19
 2339 0123 11       		.uleb128 0x11
 2340 0124 01       		.uleb128 0x1
 2341 0125 12       		.uleb128 0x12
 2342 0126 06       		.uleb128 0x6
 2343 0127 40       		.uleb128 0x40
 2344 0128 18       		.uleb128 0x18
 2345 0129 9742     		.uleb128 0x2117
 2346 012b 19       		.uleb128 0x19
 2347 012c 01       		.uleb128 0x1
 2348 012d 13       		.uleb128 0x13
 2349 012e 00       		.byte	0
 2350 012f 00       		.byte	0
 2351 0130 14       		.uleb128 0x14
 2352 0131 34       		.uleb128 0x34
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 78


 2353 0132 00       		.byte	0
 2354 0133 03       		.uleb128 0x3
 2355 0134 0E       		.uleb128 0xe
 2356 0135 3A       		.uleb128 0x3a
 2357 0136 0B       		.uleb128 0xb
 2358 0137 3B       		.uleb128 0x3b
 2359 0138 0B       		.uleb128 0xb
 2360 0139 49       		.uleb128 0x49
 2361 013a 13       		.uleb128 0x13
 2362 013b 02       		.uleb128 0x2
 2363 013c 17       		.uleb128 0x17
 2364 013d 00       		.byte	0
 2365 013e 00       		.byte	0
 2366 013f 15       		.uleb128 0x15
 2367 0140 34       		.uleb128 0x34
 2368 0141 00       		.byte	0
 2369 0142 03       		.uleb128 0x3
 2370 0143 0E       		.uleb128 0xe
 2371 0144 3A       		.uleb128 0x3a
 2372 0145 0B       		.uleb128 0xb
 2373 0146 3B       		.uleb128 0x3b
 2374 0147 0B       		.uleb128 0xb
 2375 0148 49       		.uleb128 0x49
 2376 0149 13       		.uleb128 0x13
 2377 014a 02       		.uleb128 0x2
 2378 014b 18       		.uleb128 0x18
 2379 014c 00       		.byte	0
 2380 014d 00       		.byte	0
 2381 014e 16       		.uleb128 0x16
 2382 014f 34       		.uleb128 0x34
 2383 0150 00       		.byte	0
 2384 0151 03       		.uleb128 0x3
 2385 0152 0E       		.uleb128 0xe
 2386 0153 3A       		.uleb128 0x3a
 2387 0154 0B       		.uleb128 0xb
 2388 0155 3B       		.uleb128 0x3b
 2389 0156 0B       		.uleb128 0xb
 2390 0157 49       		.uleb128 0x49
 2391 0158 13       		.uleb128 0x13
 2392 0159 3F       		.uleb128 0x3f
 2393 015a 19       		.uleb128 0x19
 2394 015b 02       		.uleb128 0x2
 2395 015c 18       		.uleb128 0x18
 2396 015d 00       		.byte	0
 2397 015e 00       		.byte	0
 2398 015f 17       		.uleb128 0x17
 2399 0160 01       		.uleb128 0x1
 2400 0161 01       		.byte	0x1
 2401 0162 49       		.uleb128 0x49
 2402 0163 13       		.uleb128 0x13
 2403 0164 01       		.uleb128 0x1
 2404 0165 13       		.uleb128 0x13
 2405 0166 00       		.byte	0
 2406 0167 00       		.byte	0
 2407 0168 18       		.uleb128 0x18
 2408 0169 21       		.uleb128 0x21
 2409 016a 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 79


 2410 016b 49       		.uleb128 0x49
 2411 016c 13       		.uleb128 0x13
 2412 016d 2F       		.uleb128 0x2f
 2413 016e 0B       		.uleb128 0xb
 2414 016f 00       		.byte	0
 2415 0170 00       		.byte	0
 2416 0171 19       		.uleb128 0x19
 2417 0172 0F       		.uleb128 0xf
 2418 0173 00       		.byte	0
 2419 0174 0B       		.uleb128 0xb
 2420 0175 0B       		.uleb128 0xb
 2421 0176 49       		.uleb128 0x49
 2422 0177 13       		.uleb128 0x13
 2423 0178 00       		.byte	0
 2424 0179 00       		.byte	0
 2425 017a 1A       		.uleb128 0x1a
 2426 017b 26       		.uleb128 0x26
 2427 017c 00       		.byte	0
 2428 017d 49       		.uleb128 0x49
 2429 017e 13       		.uleb128 0x13
 2430 017f 00       		.byte	0
 2431 0180 00       		.byte	0
 2432 0181 1B       		.uleb128 0x1b
 2433 0182 2E       		.uleb128 0x2e
 2434 0183 00       		.byte	0
 2435 0184 3F       		.uleb128 0x3f
 2436 0185 19       		.uleb128 0x19
 2437 0186 3C       		.uleb128 0x3c
 2438 0187 19       		.uleb128 0x19
 2439 0188 6E       		.uleb128 0x6e
 2440 0189 0E       		.uleb128 0xe
 2441 018a 03       		.uleb128 0x3
 2442 018b 0E       		.uleb128 0xe
 2443 018c 3A       		.uleb128 0x3a
 2444 018d 0B       		.uleb128 0xb
 2445 018e 3B       		.uleb128 0x3b
 2446 018f 0B       		.uleb128 0xb
 2447 0190 00       		.byte	0
 2448 0191 00       		.byte	0
 2449 0192 1C       		.uleb128 0x1c
 2450 0193 2E       		.uleb128 0x2e
 2451 0194 00       		.byte	0
 2452 0195 3F       		.uleb128 0x3f
 2453 0196 19       		.uleb128 0x19
 2454 0197 3C       		.uleb128 0x3c
 2455 0198 19       		.uleb128 0x19
 2456 0199 6E       		.uleb128 0x6e
 2457 019a 0E       		.uleb128 0xe
 2458 019b 03       		.uleb128 0x3
 2459 019c 0E       		.uleb128 0xe
 2460 019d 3A       		.uleb128 0x3a
 2461 019e 0B       		.uleb128 0xb
 2462 019f 3B       		.uleb128 0x3b
 2463 01a0 05       		.uleb128 0x5
 2464 01a1 00       		.byte	0
 2465 01a2 00       		.byte	0
 2466 01a3 00       		.byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 80


 2467              		.section	.debug_loc,"",%progbits
 2468              	.Ldebug_loc0:
 2469              	.LLST0:
 2470 0000 08000000 		.4byte	.LVL1
 2471 0004 70000000 		.4byte	.LVL6
 2472 0008 0100     		.2byte	0x1
 2473 000a 54       		.byte	0x54
 2474 000b 00000000 		.4byte	0
 2475 000f 00000000 		.4byte	0
 2476              	.LLST1:
 2477 0013 00000000 		.4byte	.LVL7
 2478 0017 00000000 		.4byte	.LVL7
 2479 001b 0100     		.2byte	0x1
 2480 001d 50       		.byte	0x50
 2481 001e 00000000 		.4byte	.LVL7
 2482 0022 04000000 		.4byte	.LVL8
 2483 0026 0400     		.2byte	0x4
 2484 0028 F3       		.byte	0xf3
 2485 0029 01       		.uleb128 0x1
 2486 002a 50       		.byte	0x50
 2487 002b 9F       		.byte	0x9f
 2488 002c 04000000 		.4byte	.LVL8
 2489 0030 20000000 		.4byte	.LFE4
 2490 0034 0100     		.2byte	0x1
 2491 0036 50       		.byte	0x50
 2492 0037 00000000 		.4byte	0
 2493 003b 00000000 		.4byte	0
 2494              	.LLST2:
 2495 003f 12000000 		.4byte	.LVL9
 2496 0043 1A000000 		.4byte	.LVL10
 2497 0047 0100     		.2byte	0x1
 2498 0049 53       		.byte	0x53
 2499 004a 00000000 		.4byte	0
 2500 004e 00000000 		.4byte	0
 2501              	.LLST3:
 2502 0052 00000000 		.4byte	.LVL11
 2503 0056 06000000 		.4byte	.LVL12
 2504 005a 0100     		.2byte	0x1
 2505 005c 50       		.byte	0x50
 2506 005d 06000000 		.4byte	.LVL12
 2507 0061 0C000000 		.4byte	.LFE9
 2508 0065 0400     		.2byte	0x4
 2509 0067 F3       		.byte	0xf3
 2510 0068 01       		.uleb128 0x1
 2511 0069 50       		.byte	0x50
 2512 006a 9F       		.byte	0x9f
 2513 006b 00000000 		.4byte	0
 2514 006f 00000000 		.4byte	0
 2515              	.LLST4:
 2516 0073 00000000 		.4byte	.LVL13
 2517 0077 2B000000 		.4byte	.LVL17-1
 2518 007b 0100     		.2byte	0x1
 2519 007d 50       		.byte	0x50
 2520 007e 2B000000 		.4byte	.LVL17-1
 2521 0082 34000000 		.4byte	.LFE11
 2522 0086 0400     		.2byte	0x4
 2523 0088 F3       		.byte	0xf3
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 81


 2524 0089 01       		.uleb128 0x1
 2525 008a 50       		.byte	0x50
 2526 008b 9F       		.byte	0x9f
 2527 008c 00000000 		.4byte	0
 2528 0090 00000000 		.4byte	0
 2529              	.LLST5:
 2530 0094 06000000 		.4byte	.LVL14
 2531 0098 2B000000 		.4byte	.LVL17-1
 2532 009c 0100     		.2byte	0x1
 2533 009e 51       		.byte	0x51
 2534 009f 00000000 		.4byte	0
 2535 00a3 00000000 		.4byte	0
 2536              	.LLST6:
 2537 00a7 0A000000 		.4byte	.LVL15
 2538 00ab 2E000000 		.4byte	.LVL18
 2539 00af 0100     		.2byte	0x1
 2540 00b1 54       		.byte	0x54
 2541 00b2 00000000 		.4byte	0
 2542 00b6 00000000 		.4byte	0
 2543              	.LLST7:
 2544 00ba 00000000 		.4byte	.LVL19
 2545 00be 0F000000 		.4byte	.LVL22-1
 2546 00c2 0100     		.2byte	0x1
 2547 00c4 50       		.byte	0x50
 2548 00c5 0F000000 		.4byte	.LVL22-1
 2549 00c9 38000000 		.4byte	.LFE12
 2550 00cd 0400     		.2byte	0x4
 2551 00cf F3       		.byte	0xf3
 2552 00d0 01       		.uleb128 0x1
 2553 00d1 50       		.byte	0x50
 2554 00d2 9F       		.byte	0x9f
 2555 00d3 00000000 		.4byte	0
 2556 00d7 00000000 		.4byte	0
 2557              	.LLST8:
 2558 00db 08000000 		.4byte	.LVL20
 2559 00df 1C000000 		.4byte	.LVL24
 2560 00e3 0100     		.2byte	0x1
 2561 00e5 54       		.byte	0x54
 2562 00e6 00000000 		.4byte	0
 2563 00ea 00000000 		.4byte	0
 2564              	.LLST9:
 2565 00ee 0C000000 		.4byte	.LVL21
 2566 00f2 32000000 		.4byte	.LVL25
 2567 00f6 0100     		.2byte	0x1
 2568 00f8 56       		.byte	0x56
 2569 00f9 00000000 		.4byte	0
 2570 00fd 00000000 		.4byte	0
 2571              	.LLST10:
 2572 0101 02000000 		.4byte	.LVL26
 2573 0105 06000000 		.4byte	.LVL27
 2574 0109 0200     		.2byte	0x2
 2575 010b 30       		.byte	0x30
 2576 010c 9F       		.byte	0x9f
 2577 010d 06000000 		.4byte	.LVL27
 2578 0111 0E000000 		.4byte	.LVL29
 2579 0115 0100     		.2byte	0x1
 2580 0117 54       		.byte	0x54
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 82


 2581 0118 10000000 		.4byte	.LVL30
 2582 011c 16000000 		.4byte	.LFE10
 2583 0120 0100     		.2byte	0x1
 2584 0122 54       		.byte	0x54
 2585 0123 00000000 		.4byte	0
 2586 0127 00000000 		.4byte	0
 2587              	.LLST11:
 2588 012b 00000000 		.4byte	.LVL35
 2589 012f 27000000 		.4byte	.LVL36-1
 2590 0133 0100     		.2byte	0x1
 2591 0135 50       		.byte	0x50
 2592 0136 27000000 		.4byte	.LVL36-1
 2593 013a 4C000000 		.4byte	.LFE14
 2594 013e 0400     		.2byte	0x4
 2595 0140 F3       		.byte	0xf3
 2596 0141 01       		.uleb128 0x1
 2597 0142 50       		.byte	0x50
 2598 0143 9F       		.byte	0x9f
 2599 0144 00000000 		.4byte	0
 2600 0148 00000000 		.4byte	0
 2601              	.LLST12:
 2602 014c 00000000 		.4byte	.LVL38
 2603 0150 08000000 		.4byte	.LVL39
 2604 0154 0100     		.2byte	0x1
 2605 0156 50       		.byte	0x50
 2606 0157 08000000 		.4byte	.LVL39
 2607 015b 14000000 		.4byte	.LFE15
 2608 015f 0400     		.2byte	0x4
 2609 0161 F3       		.byte	0xf3
 2610 0162 01       		.uleb128 0x1
 2611 0163 50       		.byte	0x50
 2612 0164 9F       		.byte	0x9f
 2613 0165 00000000 		.4byte	0
 2614 0169 00000000 		.4byte	0
 2615              	.LLST13:
 2616 016d 00000000 		.4byte	.LVL40
 2617 0171 12000000 		.4byte	.LVL42
 2618 0175 0100     		.2byte	0x1
 2619 0177 50       		.byte	0x50
 2620 0178 12000000 		.4byte	.LVL42
 2621 017c 38000000 		.4byte	.LFE5
 2622 0180 0400     		.2byte	0x4
 2623 0182 F3       		.byte	0xf3
 2624 0183 01       		.uleb128 0x1
 2625 0184 50       		.byte	0x50
 2626 0185 9F       		.byte	0x9f
 2627 0186 00000000 		.4byte	0
 2628 018a 00000000 		.4byte	0
 2629              	.LLST14:
 2630 018e 0C000000 		.4byte	.LVL41
 2631 0192 18000000 		.4byte	.LVL44
 2632 0196 0100     		.2byte	0x1
 2633 0198 55       		.byte	0x55
 2634 0199 18000000 		.4byte	.LVL44
 2635 019d 28000000 		.4byte	.LVL46
 2636 01a1 0900     		.2byte	0x9
 2637 01a3 75       		.byte	0x75
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 83


 2638 01a4 00       		.sleb128 0
 2639 01a5 03       		.byte	0x3
 2640 01a6 00000000 		.4byte	.LANCHOR0
 2641 01aa 1C       		.byte	0x1c
 2642 01ab 9F       		.byte	0x9f
 2643 01ac 00000000 		.4byte	0
 2644 01b0 00000000 		.4byte	0
 2645              	.LLST15:
 2646 01b4 00000000 		.4byte	.LVL47
 2647 01b8 07000000 		.4byte	.LVL48-1
 2648 01bc 0100     		.2byte	0x1
 2649 01be 50       		.byte	0x50
 2650 01bf 07000000 		.4byte	.LVL48-1
 2651 01c3 34000000 		.4byte	.LFE13
 2652 01c7 0400     		.2byte	0x4
 2653 01c9 F3       		.byte	0xf3
 2654 01ca 01       		.uleb128 0x1
 2655 01cb 50       		.byte	0x50
 2656 01cc 9F       		.byte	0x9f
 2657 01cd 00000000 		.4byte	0
 2658 01d1 00000000 		.4byte	0
 2659              	.LLST16:
 2660 01d5 00000000 		.4byte	.LVL50
 2661 01d9 13000000 		.4byte	.LVL51-1
 2662 01dd 0100     		.2byte	0x1
 2663 01df 50       		.byte	0x50
 2664 01e0 13000000 		.4byte	.LVL51-1
 2665 01e4 20000000 		.4byte	.LFE6
 2666 01e8 0400     		.2byte	0x4
 2667 01ea F3       		.byte	0xf3
 2668 01eb 01       		.uleb128 0x1
 2669 01ec 50       		.byte	0x50
 2670 01ed 9F       		.byte	0x9f
 2671 01ee 00000000 		.4byte	0
 2672 01f2 00000000 		.4byte	0
 2673              	.LLST17:
 2674 01f6 00000000 		.4byte	.LVL54
 2675 01fa 04000000 		.4byte	.LVL55
 2676 01fe 0200     		.2byte	0x2
 2677 0200 30       		.byte	0x30
 2678 0201 9F       		.byte	0x9f
 2679 0202 04000000 		.4byte	.LVL55
 2680 0206 0C000000 		.4byte	.LFE16
 2681 020a 0100     		.2byte	0x1
 2682 020c 50       		.byte	0x50
 2683 020d 00000000 		.4byte	0
 2684 0211 00000000 		.4byte	0
 2685              	.LLST18:
 2686 0215 20000000 		.4byte	.LVL60
 2687 0219 33000000 		.4byte	.LVL61-1
 2688 021d 0100     		.2byte	0x1
 2689 021f 50       		.byte	0x50
 2690 0220 4E000000 		.4byte	.LVL62
 2691 0224 61000000 		.4byte	.LVL63-1
 2692 0228 0100     		.2byte	0x1
 2693 022a 50       		.byte	0x50
 2694 022b 00000000 		.4byte	0
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 84


 2695 022f 00000000 		.4byte	0
 2696              		.section	.debug_aranges,"",%progbits
 2697 0000 AC000000 		.4byte	0xac
 2698 0004 0200     		.2byte	0x2
 2699 0006 00000000 		.4byte	.Ldebug_info0
 2700 000a 04       		.byte	0x4
 2701 000b 00       		.byte	0
 2702 000c 0000     		.2byte	0
 2703 000e 0000     		.2byte	0
 2704 0010 00000000 		.4byte	.LFB1
 2705 0014 80000000 		.4byte	.LFE1-.LFB1
 2706 0018 00000000 		.4byte	.LFB4
 2707 001c 20000000 		.4byte	.LFE4-.LFB4
 2708 0020 00000000 		.4byte	.LFB8
 2709 0024 10000000 		.4byte	.LFE8-.LFB8
 2710 0028 00000000 		.4byte	.LFB9
 2711 002c 0C000000 		.4byte	.LFE9-.LFB9
 2712 0030 00000000 		.4byte	.LFB11
 2713 0034 34000000 		.4byte	.LFE11-.LFB11
 2714 0038 00000000 		.4byte	.LFB12
 2715 003c 38000000 		.4byte	.LFE12-.LFB12
 2716 0040 00000000 		.4byte	.LFB10
 2717 0044 16000000 		.4byte	.LFE10-.LFB10
 2718 0048 00000000 		.4byte	.LFB3
 2719 004c 80000000 		.4byte	.LFE3-.LFB3
 2720 0050 00000000 		.4byte	.LFB14
 2721 0054 4C000000 		.4byte	.LFE14-.LFB14
 2722 0058 00000000 		.4byte	.LFB15
 2723 005c 14000000 		.4byte	.LFE15-.LFB15
 2724 0060 00000000 		.4byte	.LFB5
 2725 0064 38000000 		.4byte	.LFE5-.LFB5
 2726 0068 00000000 		.4byte	.LFB13
 2727 006c 34000000 		.4byte	.LFE13-.LFB13
 2728 0070 00000000 		.4byte	.LFB6
 2729 0074 20000000 		.4byte	.LFE6-.LFB6
 2730 0078 00000000 		.4byte	.LFB7
 2731 007c 38000000 		.4byte	.LFE7-.LFB7
 2732 0080 00000000 		.4byte	.LFB16
 2733 0084 0C000000 		.4byte	.LFE16-.LFB16
 2734 0088 00000000 		.4byte	.LFB17
 2735 008c 0C000000 		.4byte	.LFE17-.LFB17
 2736 0090 00000000 		.4byte	.LFB18
 2737 0094 20000000 		.4byte	.LFE18-.LFB18
 2738 0098 00000000 		.4byte	.LFB0
 2739 009c F4000000 		.4byte	.LFE0-.LFB0
 2740 00a0 00000000 		.4byte	.LFB2
 2741 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2742 00a8 00000000 		.4byte	0
 2743 00ac 00000000 		.4byte	0
 2744              		.section	.debug_ranges,"",%progbits
 2745              	.Ldebug_ranges0:
 2746 0000 00000000 		.4byte	.LFB1
 2747 0004 80000000 		.4byte	.LFE1
 2748 0008 00000000 		.4byte	.LFB4
 2749 000c 20000000 		.4byte	.LFE4
 2750 0010 00000000 		.4byte	.LFB8
 2751 0014 10000000 		.4byte	.LFE8
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 85


 2752 0018 00000000 		.4byte	.LFB9
 2753 001c 0C000000 		.4byte	.LFE9
 2754 0020 00000000 		.4byte	.LFB11
 2755 0024 34000000 		.4byte	.LFE11
 2756 0028 00000000 		.4byte	.LFB12
 2757 002c 38000000 		.4byte	.LFE12
 2758 0030 00000000 		.4byte	.LFB10
 2759 0034 16000000 		.4byte	.LFE10
 2760 0038 00000000 		.4byte	.LFB3
 2761 003c 80000000 		.4byte	.LFE3
 2762 0040 00000000 		.4byte	.LFB14
 2763 0044 4C000000 		.4byte	.LFE14
 2764 0048 00000000 		.4byte	.LFB15
 2765 004c 14000000 		.4byte	.LFE15
 2766 0050 00000000 		.4byte	.LFB5
 2767 0054 38000000 		.4byte	.LFE5
 2768 0058 00000000 		.4byte	.LFB13
 2769 005c 34000000 		.4byte	.LFE13
 2770 0060 00000000 		.4byte	.LFB6
 2771 0064 20000000 		.4byte	.LFE6
 2772 0068 00000000 		.4byte	.LFB7
 2773 006c 38000000 		.4byte	.LFE7
 2774 0070 00000000 		.4byte	.LFB16
 2775 0074 0C000000 		.4byte	.LFE16
 2776 0078 00000000 		.4byte	.LFB17
 2777 007c 0C000000 		.4byte	.LFE17
 2778 0080 00000000 		.4byte	.LFB18
 2779 0084 20000000 		.4byte	.LFE18
 2780 0088 00000000 		.4byte	.LFB0
 2781 008c F4000000 		.4byte	.LFE0
 2782 0090 00000000 		.4byte	.LFB2
 2783 0094 2C000000 		.4byte	.LFE2
 2784 0098 00000000 		.4byte	0
 2785 009c 00000000 		.4byte	0
 2786              		.section	.debug_line,"",%progbits
 2787              	.Ldebug_line0:
 2788 0000 B4020000 		.section	.debug_str,"MS",%progbits,1
 2788      0200C900 
 2788      00000201 
 2788      FB0E0D00 
 2788      01010101 
 2789              	.LASF10:
 2790 0000 75696E74 		.ascii	"uint16\000"
 2790      313600
 2791              	.LASF50:
 2792 0007 43617053 		.ascii	"CapSense_csv\000"
 2792      656E7365 
 2792      5F637376 
 2792      00
 2793              	.LASF66:
 2794 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2794      69744372 
 2794      69746963 
 2794      616C5365 
 2794      6374696F 
 2795              	.LASF82:
 2796 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 86


 2796      72617465 
 2796      645F536F 
 2796      75726365 
 2796      5C50536F 
 2797              	.LASF48:
 2798 004c 43617053 		.ascii	"CapSense_initVar\000"
 2798      656E7365 
 2798      5F696E69 
 2798      74566172 
 2798      00
 2799              	.LASF54:
 2800 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2800      656E7365 
 2800      5F706354 
 2800      61626C65 
 2800      00
 2801              	.LASF49:
 2802 006e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2802      656E7365 
 2802      5F6C6F77 
 2802      4C657665 
 2802      6C54756E 
 2803              	.LASF72:
 2804 008a 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2804      656E7365 
 2804      5F496461 
 2804      63434830 
 2804      5F536574 
 2805              	.LASF24:
 2806 00a4 736E7349 		.ascii	"snsIndex\000"
 2806      6E646578 
 2806      00
 2807              	.LASF7:
 2808 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 2808      206C6F6E 
 2808      6720756E 
 2808      7369676E 
 2808      65642069 
 2809              	.LASF64:
 2810 00c4 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2810      656E7365 
 2810      5F436F6D 
 2810      70434830 
 2810      5F456E61 
 2811              	.LASF26:
 2812 00dc 43617053 		.ascii	"CapSense_Enable\000"
 2812      656E7365 
 2812      5F456E61 
 2812      626C6500 
 2813              	.LASF34:
 2814 00ec 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2814      656E7365 
 2814      5F536574 
 2814      50726573 
 2814      63616C65 
 2815              	.LASF6:
 2816 0102 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 87


 2816      206C6F6E 
 2816      6720696E 
 2816      7400
 2817              	.LASF0:
 2818 0110 7369676E 		.ascii	"signed char\000"
 2818      65642063 
 2818      68617200 
 2819              	.LASF45:
 2820 011c 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2820      656E7365 
 2820      5F536574 
 2820      416E616C 
 2820      6F675377 
 2821              	.LASF4:
 2822 013d 6C6F6E67 		.ascii	"long int\000"
 2822      20696E74 
 2822      00
 2823              	.LASF16:
 2824 0146 72656731 		.ascii	"reg16\000"
 2824      3600
 2825              	.LASF9:
 2826 014c 75696E74 		.ascii	"uint8\000"
 2826      3800
 2827              	.LASF75:
 2828 0152 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2828      656E7365 
 2828      5F414D75 
 2828      78434830 
 2828      5F496E69 
 2829              	.LASF13:
 2830 0168 646F7562 		.ascii	"double\000"
 2830      6C6500
 2831              	.LASF27:
 2832 016f 43617053 		.ascii	"CapSense_EnableSensor\000"
 2832      656E7365 
 2832      5F456E61 
 2832      626C6553 
 2832      656E736F 
 2833              	.LASF71:
 2834 0185 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2834      656E7365 
 2834      5F496461 
 2834      63434830 
 2834      5F53746F 
 2835              	.LASF61:
 2836 019b 43617053 		.ascii	"CapSense_widgetNumber\000"
 2836      656E7365 
 2836      5F776964 
 2836      6765744E 
 2836      756D6265 
 2837              	.LASF23:
 2838 01b1 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2838      656E7365 
 2838      5F526561 
 2838      6453656E 
 2838      736F7252 
 2839              	.LASF11:
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 88


 2840 01c8 75696E74 		.ascii	"uint32\000"
 2840      333200
 2841              	.LASF73:
 2842 01cf 4379496E 		.ascii	"CyIntSetVector\000"
 2842      74536574 
 2842      56656374 
 2842      6F7200
 2843              	.LASF29:
 2844 01de 6D61736B 		.ascii	"mask\000"
 2844      00
 2845              	.LASF76:
 2846 01e3 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2846      656E7365 
 2846      5F436F6D 
 2846      70434830 
 2846      5F496E69 
 2847              	.LASF28:
 2848 01f9 706F7274 		.ascii	"port\000"
 2848      00
 2849              	.LASF51:
 2850 01fe 43617053 		.ascii	"CapSense_sensorIndex\000"
 2850      656E7365 
 2850      5F73656E 
 2850      736F7249 
 2850      6E646578 
 2851              	.LASF40:
 2852 0213 43617053 		.ascii	"CapSense_ScanSensor\000"
 2852      656E7365 
 2852      5F536361 
 2852      6E53656E 
 2852      736F7200 
 2853              	.LASF8:
 2854 0227 756E7369 		.ascii	"unsigned int\000"
 2854      676E6564 
 2854      20696E74 
 2854      00
 2855              	.LASF31:
 2856 0234 43617053 		.ascii	"CapSense_ClearSensors\000"
 2856      656E7365 
 2856      5F436C65 
 2856      61725365 
 2856      6E736F72 
 2857              	.LASF79:
 2858 024a 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2858      656E7365 
 2858      5F496461 
 2858      63434830 
 2858      5F536574 
 2859              	.LASF5:
 2860 0264 6C6F6E67 		.ascii	"long unsigned int\000"
 2860      20756E73 
 2860      69676E65 
 2860      6420696E 
 2860      7400
 2861              	.LASF56:
 2862 0276 43617053 		.ascii	"CapSense_maskTable\000"
 2862      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 89


 2862      5F6D6173 
 2862      6B546162 
 2862      6C6500
 2863              	.LASF55:
 2864 0289 43617053 		.ascii	"CapSense_portTable\000"
 2864      656E7365 
 2864      5F706F72 
 2864      74546162 
 2864      6C6500
 2865              	.LASF63:
 2866 029c 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2866      656E7365 
 2866      5F496E74 
 2866      436C6F63 
 2866      6B5F5374 
 2867              	.LASF62:
 2868 02b4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2868      74657243 
 2868      72697469 
 2868      63616C53 
 2868      65637469 
 2869              	.LASF3:
 2870 02cb 73686F72 		.ascii	"short unsigned int\000"
 2870      7420756E 
 2870      7369676E 
 2870      65642069 
 2870      6E7400
 2871              	.LASF69:
 2872 02de 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2872      656E7365 
 2872      5F496E74 
 2872      436C6F63 
 2872      6B5F5374 
 2873              	.LASF25:
 2874 02f5 73656E73 		.ascii	"sensor\000"
 2874      6F7200
 2875              	.LASF53:
 2876 02fc 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2876      656E7365 
 2876      5F73656E 
 2876      736F7245 
 2876      6E61626C 
 2877              	.LASF37:
 2878 0316 736C6F74 		.ascii	"slot\000"
 2878      00
 2879              	.LASF80:
 2880 031b 43617053 		.ascii	"CapSense_AutoTune\000"
 2880      656E7365 
 2880      5F417574 
 2880      6F54756E 
 2880      6500
 2881              	.LASF17:
 2882 032d 72656733 		.ascii	"reg32\000"
 2882      3200
 2883              	.LASF60:
 2884 0333 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2884      656E7365 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 90


 2884      5F616E61 
 2884      6C6F6753 
 2884      77697463 
 2885              	.LASF19:
 2886 0350 73697A65 		.ascii	"sizetype\000"
 2886      74797065 
 2886      00
 2887              	.LASF57:
 2888 0359 43617053 		.ascii	"CapSense_csTable\000"
 2888      656E7365 
 2888      5F637354 
 2888      61626C65 
 2888      00
 2889              	.LASF18:
 2890 036a 6C6F6E67 		.ascii	"long double\000"
 2890      20646F75 
 2890      626C6500 
 2891              	.LASF32:
 2892 0376 43617053 		.ascii	"CapSense_Stop\000"
 2892      656E7365 
 2892      5F53746F 
 2892      7000
 2893              	.LASF44:
 2894 0384 7363616E 		.ascii	"scanSpeed\000"
 2894      53706565 
 2894      6400
 2895              	.LASF21:
 2896 038e 656E4D61 		.ascii	"enMask\000"
 2896      736B00
 2897              	.LASF78:
 2898 0395 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2898      656E7365 
 2898      5F496461 
 2898      63434830 
 2898      5F536574 
 2899              	.LASF74:
 2900 03b2 4379496E 		.ascii	"CyIntSetPriority\000"
 2900      74536574 
 2900      5072696F 
 2900      72697479 
 2900      00
 2901              	.LASF58:
 2902 03c3 43617053 		.ascii	"CapSense_idacSettings\000"
 2902      656E7365 
 2902      5F696461 
 2902      63536574 
 2902      74696E67 
 2903              	.LASF12:
 2904 03d9 666C6F61 		.ascii	"float\000"
 2904      7400
 2905              	.LASF35:
 2906 03df 70726573 		.ascii	"prescaler\000"
 2906      63616C65 
 2906      7200
 2907              	.LASF15:
 2908 03e9 72656738 		.ascii	"reg8\000"
 2908      00
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 91


 2909              	.LASF22:
 2910 03ee 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2910      656E7365 
 2910      5F46696E 
 2910      644E6578 
 2910      7453656E 
 2911              	.LASF1:
 2912 0406 756E7369 		.ascii	"unsigned char\000"
 2912      676E6564 
 2912      20636861 
 2912      7200
 2913              	.LASF77:
 2914 0414 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2914      656E7365 
 2914      5F496461 
 2914      63434830 
 2914      5F496E69 
 2915              	.LASF59:
 2916 042a 43617053 		.ascii	"CapSense_widgetResolution\000"
 2916      656E7365 
 2916      5F776964 
 2916      67657452 
 2916      65736F6C 
 2917              	.LASF2:
 2918 0444 73686F72 		.ascii	"short int\000"
 2918      7420696E 
 2918      7400
 2919              	.LASF38:
 2920 044e 77696467 		.ascii	"widget\000"
 2920      657400
 2921              	.LASF36:
 2922 0455 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2922      656E7365 
 2922      5F536574 
 2922      5363616E 
 2922      536C6F74 
 2923              	.LASF42:
 2924 0472 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2924      656E7365 
 2924      5F476574 
 2924      50726573 
 2924      63616C65 
 2925              	.LASF81:
 2926 0488 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2926      43313120 
 2926      352E342E 
 2926      31203230 
 2926      31363036 
 2927 04bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2927      20726576 
 2927      6973696F 
 2927      6E203233 
 2927      37373135 
 2928 04ee 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2928      66756E63 
 2928      74696F6E 
 2928      2D736563 
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 92


 2928      74696F6E 
 2929              	.LASF83:
 2930 0516 433A5C55 		.ascii	"C:\\Users\\henrichsc\\Desktop\\School\\Senior_year\\"
 2930      73657273 
 2930      5C68656E 
 2930      72696368 
 2930      73635C44 
 2931 0544 77696E74 		.ascii	"winter\\ce4950\\ce4950-term-project\\Workspace1\\ce"
 2931      65725C63 
 2931      65343935 
 2931      305C6365 
 2931      34393530 
 2932 0573 34393530 		.ascii	"4950-term-project.cydsn\000"
 2932      2D746572 
 2932      6D2D7072 
 2932      6F6A6563 
 2932      742E6379 
 2933              	.LASF14:
 2934 058b 63686172 		.ascii	"char\000"
 2934      00
 2935              	.LASF65:
 2936 0590 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2936      656E7365 
 2936      5F496461 
 2936      63434830 
 2936      5F456E61 
 2937              	.LASF43:
 2938 05a8 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2938      656E7365 
 2938      5F536574 
 2938      5363616E 
 2938      53706565 
 2939              	.LASF67:
 2940 05be 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2940      656E7365 
 2940      5F414D75 
 2940      78434830 
 2940      5F536574 
 2941              	.LASF47:
 2942 05d3 43617053 		.ascii	"CapSense_Start\000"
 2942      656E7365 
 2942      5F537461 
 2942      727400
 2943              	.LASF33:
 2944 05e2 43617053 		.ascii	"CapSense_PostScan\000"
 2944      656E7365 
 2944      5F506F73 
 2944      74536361 
 2944      6E00
 2945              	.LASF20:
 2946 05f4 656E6162 		.ascii	"enableInterrupts\000"
 2946      6C65496E 
 2946      74657272 
 2946      75707473 
 2946      00
 2947              	.LASF70:
 2948 0605 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
ARM GAS  C:\Users\HENRIC~1\AppData\Local\Temp\ccqZtzpF.s 			page 93


 2948      656E7365 
 2948      5F436F6D 
 2948      70434830 
 2948      5F53746F 
 2949              	.LASF30:
 2950 061b 43617053 		.ascii	"CapSense_DisableSensor\000"
 2950      656E7365 
 2950      5F446973 
 2950      61626C65 
 2950      53656E73 
 2951              	.LASF39:
 2952 0632 43617053 		.ascii	"CapSense_PreScan\000"
 2952      656E7365 
 2952      5F507265 
 2952      5363616E 
 2952      00
 2953              	.LASF46:
 2954 0643 43617053 		.ascii	"CapSense_Init\000"
 2954      656E7365 
 2954      5F496E69 
 2954      7400
 2955              	.LASF52:
 2956 0651 43617053 		.ascii	"CapSense_sensorRaw\000"
 2956      656E7365 
 2956      5F73656E 
 2956      736F7252 
 2956      617700
 2957              	.LASF41:
 2958 0664 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2958      656E7365 
 2958      5F536361 
 2958      6E456E61 
 2958      626C6564 
 2959              	.LASF68:
 2960 0680 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2960      656E7365 
 2960      5F414D75 
 2960      78434830 
 2960      5F556E73 
 2961              	.LASF84:
 2962 0697 43617053 		.ascii	"CapSense_IsBusy\000"
 2962      656E7365 
 2962      5F497342 
 2962      75737900 
 2963              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
